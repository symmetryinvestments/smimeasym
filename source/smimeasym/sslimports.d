module smimeasym.sslimports;


        import core.stdc.config;
        import core.stdc.stdarg: va_list;
        static import core.simd;
        static import std.conv;

        struct Int128 { long lower; long upper; }
        struct UInt128 { ulong lower; ulong upper; }

        struct __locale_data { int dummy; }



alias _Bool = bool;
struct dpp {
    static struct Opaque(int N) {
        void[N] bytes;
    }

    static bool isEmpty(T)() {
        return T.tupleof.length == 0;
    }
    static struct Move(T) {
        T* ptr;
    }


    static auto move(T)(ref T value) {
        return Move!T(&value);
    }
    mixin template EnumD(string name, T, string prefix) if(is(T == enum)) {
        private static string _memberMixinStr(string member) {
            import std.conv: text;
            import std.array: replace;
            return text(` `, member.replace(prefix, ""), ` = `, T.stringof, `.`, member, `,`);
        }
        private static string _enumMixinStr() {
            import std.array: join;
            string[] ret;
            ret ~= "enum " ~ name ~ "{";
            static foreach(member; __traits(allMembers, T)) {
                ret ~= _memberMixinStr(member);
            }
            ret ~= "}";
            return ret.join("\n");
        }
        mixin(_enumMixinStr());
    }
}

extern(C)
{
    alias wchar_t = int;
    alias size_t = c_ulong;
    alias ptrdiff_t = c_long;
    struct max_align_t
    {
        long __clang_max_align_nonce1;
        real __clang_max_align_nonce2;
    }
    int timespec_get(timespec*, int) @nogc nothrow;
    int timer_getoverrun(void*) @nogc nothrow;
    int timer_gettime(void*, itimerspec*) @nogc nothrow;
    int timer_settime(void*, int, const(itimerspec)*, itimerspec*) @nogc nothrow;
    int timer_delete(void*) @nogc nothrow;
    int timer_create(int, sigevent*, void**) @nogc nothrow;
    int clock_getcpuclockid(int, int*) @nogc nothrow;
    int clock_nanosleep(int, int, const(timespec)*, timespec*) @nogc nothrow;
    int clock_settime(int, const(timespec)*) @nogc nothrow;
    int clock_gettime(int, timespec*) @nogc nothrow;
    int clock_getres(int, timespec*) @nogc nothrow;
    int nanosleep(const(timespec)*, timespec*) @nogc nothrow;
    int dysize(int) @nogc nothrow;
    c_long timelocal(tm*) @nogc nothrow;
    c_long timegm(tm*) @nogc nothrow;
    extern __gshared c_long timezone;
    extern __gshared int daylight;
    void tzset() @nogc nothrow;
    extern __gshared char*[2] tzname;
    extern __gshared c_long __timezone;
    extern __gshared int __daylight;
    extern __gshared char*[2] __tzname;
    char* ctime_r(const(c_long)*, char*) @nogc nothrow;
    char* asctime_r(const(tm)*, char*) @nogc nothrow;
    char* ctime(const(c_long)*) @nogc nothrow;
    char* asctime(const(tm)*) @nogc nothrow;
    tm* localtime_r(const(c_long)*, tm*) @nogc nothrow;
    tm* gmtime_r(const(c_long)*, tm*) @nogc nothrow;
    tm* localtime(const(c_long)*) @nogc nothrow;
    tm* gmtime(const(c_long)*) @nogc nothrow;
    c_ulong strftime_l(char*, c_ulong, const(char)*, const(tm)*, __locale_struct*) @nogc nothrow;
    c_ulong strftime(char*, c_ulong, const(char)*, const(tm)*) @nogc nothrow;
    c_long mktime(tm*) @nogc nothrow;
    double difftime(c_long, c_long) @nogc nothrow;
    c_long time(c_long*) @nogc nothrow;
    c_long clock() @nogc nothrow;
    alias pid_t = int;
    struct sigevent;
    alias fsfilcnt_t = c_ulong;
    alias fsblkcnt_t = c_ulong;
    alias blkcnt_t = c_long;
    alias blksize_t = c_long;
    alias register_t = c_long;
    alias u_int64_t = c_ulong;
    alias u_int32_t = uint;
    alias u_int16_t = ushort;
    alias u_int8_t = ubyte;
    alias key_t = int;
    alias caddr_t = char*;
    alias daddr_t = int;
    alias id_t = uint;
    alias uid_t = uint;
    alias nlink_t = c_ulong;
    alias mode_t = uint;
    alias gid_t = uint;
    alias dev_t = c_ulong;
    alias ino_t = c_ulong;
    alias loff_t = c_long;
    alias fsid_t = __fsid_t;
    alias u_quad_t = c_ulong;
    alias quad_t = c_long;
    alias u_long = c_ulong;
    alias u_int = uint;
    alias u_short = ushort;
    alias u_char = ubyte;
    int pselect(int, fd_set*, fd_set*, fd_set*, const(timespec)*, const(__sigset_t)*) @nogc nothrow;
    int select(int, fd_set*, fd_set*, fd_set*, timeval*) @nogc nothrow;
    alias fd_mask = c_long;
    struct fd_set
    {
        c_long[16] __fds_bits;
    }
    alias __fd_mask = c_long;
    alias suseconds_t = c_long;
    int getloadavg(double*, int) @nogc nothrow;
    int getsubopt(char**, char**, char**) @nogc nothrow;
    pragma(mangle, "alloca") void* alloca_(c_ulong) @nogc nothrow;
    int rpmatch(const(char)*) @nogc nothrow;
    c_ulong wcstombs(char*, const(int)*, c_ulong) @nogc nothrow;
    c_ulong mbstowcs(int*, const(char)*, c_ulong) @nogc nothrow;
    int wctomb(char*, int) @nogc nothrow;
    int mbtowc(int*, const(char)*, c_ulong) @nogc nothrow;
    int mblen(const(char)*, c_ulong) @nogc nothrow;
    int qfcvt_r(real, int, int*, int*, char*, c_ulong) @nogc nothrow;
    int qecvt_r(real, int, int*, int*, char*, c_ulong) @nogc nothrow;
    int fcvt_r(double, int, int*, int*, char*, c_ulong) @nogc nothrow;
    int ecvt_r(double, int, int*, int*, char*, c_ulong) @nogc nothrow;
    char* qgcvt(real, int, char*) @nogc nothrow;
    char* qfcvt(real, int, int*, int*) @nogc nothrow;
    char* qecvt(real, int, int*, int*) @nogc nothrow;
    char* gcvt(double, int, char*) @nogc nothrow;
    char* fcvt(double, int, int*, int*) @nogc nothrow;
    char* ecvt(double, int, int*, int*) @nogc nothrow;
    lldiv_t lldiv(long, long) @nogc nothrow;
    ldiv_t ldiv(c_long, c_long) @nogc nothrow;
    div_t div(int, int) @nogc nothrow;
    long llabs(long) @nogc nothrow;
    c_long labs(c_long) @nogc nothrow;
    int abs(int) @nogc nothrow;
    void qsort(void*, c_ulong, c_ulong, int function(const(void)*, const(void)*)) @nogc nothrow;
    void* bsearch(const(void)*, const(void)*, c_ulong, c_ulong, int function(const(void)*, const(void)*)) @nogc nothrow;
    alias __compar_fn_t = int function(const(void)*, const(void)*);
    char* realpath(const(char)*, char*) @nogc nothrow;
    int system(const(char)*) @nogc nothrow;
    char* mkdtemp(char*) @nogc nothrow;
    int mkstemps(char*, int) @nogc nothrow;
    int mkstemp(char*) @nogc nothrow;
    char* mktemp(char*) @nogc nothrow;
    int clearenv() @nogc nothrow;
    int unsetenv(const(char)*) @nogc nothrow;
    int setenv(const(char)*, const(char)*, int) @nogc nothrow;
    int putenv(char*) @nogc nothrow;
    char* getenv(const(char)*) @nogc nothrow;
    void _Exit(int) @nogc nothrow;
    void quick_exit(int) @nogc nothrow;
    void exit(int) @nogc nothrow;
    int on_exit(void function(int, void*), void*) @nogc nothrow;
    int at_quick_exit(void function()) @nogc nothrow;
    static ushort __bswap_16(ushort) @nogc nothrow;
    static uint __bswap_32(uint) @nogc nothrow;
    static c_ulong __bswap_64(c_ulong) @nogc nothrow;
    int atexit(void function()) @nogc nothrow;
    alias __cpu_mask = c_ulong;
    void abort() @nogc nothrow;
    struct cpu_set_t
    {
        c_ulong[16] __bits;
    }
    void* aligned_alloc(c_ulong, c_ulong) @nogc nothrow;
    int posix_memalign(void**, c_ulong, c_ulong) @nogc nothrow;
    int __sched_cpucount(c_ulong, const(cpu_set_t)*) @nogc nothrow;
    cpu_set_t* __sched_cpualloc(c_ulong) @nogc nothrow;
    void __sched_cpufree(cpu_set_t*) @nogc nothrow;
    void* valloc(c_ulong) @nogc nothrow;
    void free(void*) @nogc nothrow;
    void* reallocarray(void*, c_ulong, c_ulong) @nogc nothrow;
    void* realloc(void*, c_ulong) @nogc nothrow;
    void* calloc(c_ulong, c_ulong) @nogc nothrow;
    void* malloc(c_ulong) @nogc nothrow;
    alias _Float32 = float;
    int lcong48_r(ushort*, drand48_data*) @nogc nothrow;
    int seed48_r(ushort*, drand48_data*) @nogc nothrow;
    alias _Float64 = double;
    int srand48_r(c_long, drand48_data*) @nogc nothrow;
    alias _Float32x = double;
    int jrand48_r(ushort*, drand48_data*, c_long*) @nogc nothrow;
    alias _Float64x = real;
    int mrand48_r(drand48_data*, c_long*) @nogc nothrow;
    int nrand48_r(ushort*, drand48_data*, c_long*) @nogc nothrow;
    int lrand48_r(drand48_data*, c_long*) @nogc nothrow;
    int erand48_r(ushort*, drand48_data*, double*) @nogc nothrow;
    int drand48_r(drand48_data*, double*) @nogc nothrow;
    struct drand48_data
    {
        ushort[3] __x;
        ushort[3] __old_x;
        ushort __c;
        ushort __init;
        ulong __a;
    }
    void lcong48(ushort*) @nogc nothrow;
    ushort* seed48(ushort*) @nogc nothrow;
    void srand48(c_long) @nogc nothrow;
    c_long jrand48(ushort*) @nogc nothrow;
    c_long mrand48() @nogc nothrow;
    c_long nrand48(ushort*) @nogc nothrow;
    c_long lrand48() @nogc nothrow;
    double erand48(ushort*) @nogc nothrow;
    double drand48() @nogc nothrow;
    int rand_r(uint*) @nogc nothrow;
    void srand(uint) @nogc nothrow;
    int rand() @nogc nothrow;
    int setstate_r(char*, random_data*) @nogc nothrow;
    int initstate_r(uint, char*, c_ulong, random_data*) @nogc nothrow;
    int srandom_r(uint, random_data*) @nogc nothrow;
    int random_r(random_data*, int*) @nogc nothrow;
    struct random_data
    {
        int* fptr;
        int* rptr;
        int* state;
        int rand_type;
        int rand_deg;
        int rand_sep;
        int* end_ptr;
    }
    char* setstate(char*) @nogc nothrow;
    char* initstate(uint, char*, c_ulong) @nogc nothrow;
    void srandom(uint) @nogc nothrow;
    c_long random() @nogc nothrow;
    c_long a64l(const(char)*) @nogc nothrow;
    char* l64a(c_long) @nogc nothrow;
    ulong strtoull(const(char)*, char**, int) @nogc nothrow;
    long strtoll(const(char)*, char**, int) @nogc nothrow;
    ulong strtouq(const(char)*, char**, int) @nogc nothrow;
    long strtoq(const(char)*, char**, int) @nogc nothrow;
    c_ulong strtoul(const(char)*, char**, int) @nogc nothrow;
    c_long strtol(const(char)*, char**, int) @nogc nothrow;
    alias pthread_t = c_ulong;
    union pthread_mutexattr_t
    {
        char[4] __size;
        int __align;
    }
    union pthread_condattr_t
    {
        char[4] __size;
        int __align;
    }
    alias pthread_key_t = uint;
    alias pthread_once_t = int;
    union pthread_attr_t
    {
        char[56] __size;
        c_long __align;
    }
    union pthread_mutex_t
    {
        __pthread_mutex_s __data;
        char[40] __size;
        c_long __align;
    }
    union pthread_cond_t
    {
        __pthread_cond_s __data;
        char[48] __size;
        long __align;
    }
    union pthread_rwlock_t
    {
        __pthread_rwlock_arch_t __data;
        char[56] __size;
        c_long __align;
    }
    union pthread_rwlockattr_t
    {
        char[8] __size;
        c_long __align;
    }
    alias pthread_spinlock_t = int;
    union pthread_barrier_t
    {
        char[32] __size;
        c_long __align;
    }
    union pthread_barrierattr_t
    {
        char[4] __size;
        int __align;
    }
    alias __jmp_buf = c_long[8];
    alias int8_t = byte;
    alias int16_t = short;
    alias int32_t = int;
    alias int64_t = c_long;
    alias uint8_t = ubyte;
    alias uint16_t = ushort;
    alias uint32_t = uint;
    alias uint64_t = ulong;
    real strtold(const(char)*, char**) @nogc nothrow;
    struct __pthread_mutex_s
    {
        int __lock;
        uint __count;
        int __owner;
        uint __nusers;
        int __kind;
        short __spins;
        short __elision;
        __pthread_internal_list __list;
    }
    float strtof(const(char)*, char**) @nogc nothrow;
    struct __pthread_rwlock_arch_t
    {
        uint __readers;
        uint __writers;
        uint __wrphase_futex;
        uint __writers_futex;
        uint __pad3;
        uint __pad4;
        int __cur_writer;
        int __shared;
        byte __rwelision;
        ubyte[7] __pad1;
        c_ulong __pad2;
        uint __flags;
    }
    double strtod(const(char)*, char**) @nogc nothrow;
    alias __pthread_list_t = __pthread_internal_list;
    struct __pthread_internal_list
    {
        __pthread_internal_list* __prev;
        __pthread_internal_list* __next;
    }
    alias __pthread_slist_t = __pthread_internal_slist;
    struct __pthread_internal_slist
    {
        __pthread_internal_slist* __next;
    }
    struct __pthread_cond_s
    {
        static union _Anonymous_0
        {
            ulong __wseq;
            static struct _Anonymous_1
            {
                uint __low;
                uint __high;
            }
            _Anonymous_1 __wseq32;
        }
        _Anonymous_0 _anonymous_2;
        ref auto __wseq() @property @nogc pure nothrow { return _anonymous_2.__wseq; }
        void __wseq(_T_)(auto ref _T_ val) @property @nogc pure nothrow { _anonymous_2.__wseq = val; }
        ref auto __wseq32() @property @nogc pure nothrow { return _anonymous_2.__wseq32; }
        void __wseq32(_T_)(auto ref _T_ val) @property @nogc pure nothrow { _anonymous_2.__wseq32 = val; }
        static union _Anonymous_3
        {
            ulong __g1_start;
            static struct _Anonymous_4
            {
                uint __low;
                uint __high;
            }
            _Anonymous_4 __g1_start32;
        }
        _Anonymous_3 _anonymous_5;
        ref auto __g1_start() @property @nogc pure nothrow { return _anonymous_5.__g1_start; }
        void __g1_start(_T_)(auto ref _T_ val) @property @nogc pure nothrow { _anonymous_5.__g1_start = val; }
        ref auto __g1_start32() @property @nogc pure nothrow { return _anonymous_5.__g1_start32; }
        void __g1_start32(_T_)(auto ref _T_ val) @property @nogc pure nothrow { _anonymous_5.__g1_start32 = val; }
        uint[2] __g_refs;
        uint[2] __g_size;
        uint __g1_orig_size;
        uint __wrefs;
        uint[2] __g_signals;
    }
    alias __tss_t = uint;
    alias __thrd_t = c_ulong;
    struct __once_flag
    {
        int __data;
    }
    long atoll(const(char)*) @nogc nothrow;
    c_long atol(const(char)*) @nogc nothrow;
    int atoi(const(char)*) @nogc nothrow;
    alias __u_char = ubyte;
    alias __u_short = ushort;
    alias __u_int = uint;
    alias __u_long = c_ulong;
    alias __int8_t = byte;
    alias __uint8_t = ubyte;
    alias __int16_t = short;
    alias __uint16_t = ushort;
    alias __int32_t = int;
    alias __uint32_t = uint;
    alias __int64_t = c_long;
    alias __uint64_t = c_ulong;
    alias __int_least8_t = byte;
    alias __uint_least8_t = ubyte;
    alias __int_least16_t = short;
    alias __uint_least16_t = ushort;
    alias __int_least32_t = int;
    alias __uint_least32_t = uint;
    alias __int_least64_t = c_long;
    alias __uint_least64_t = c_ulong;
    alias __quad_t = c_long;
    alias __u_quad_t = c_ulong;
    alias __intmax_t = c_long;
    alias __uintmax_t = c_ulong;
    double atof(const(char)*) @nogc nothrow;
    c_ulong __ctype_get_mb_cur_max() @nogc nothrow;
    struct lldiv_t
    {
        long quot;
        long rem;
    }
    struct ldiv_t
    {
        c_long quot;
        c_long rem;
    }
    struct div_t
    {
        int quot;
        int rem;
    }
    alias __dev_t = c_ulong;
    alias __uid_t = uint;
    alias __gid_t = uint;
    alias __ino_t = c_ulong;
    alias __ino64_t = c_ulong;
    alias __mode_t = uint;
    alias __nlink_t = c_ulong;
    alias __off_t = c_long;
    alias __off64_t = c_long;
    alias __pid_t = int;
    struct __fsid_t
    {
        int[2] __val;
    }
    alias __clock_t = c_long;
    alias __rlim_t = c_ulong;
    alias __rlim64_t = c_ulong;
    alias __id_t = uint;
    alias __time_t = c_long;
    alias __useconds_t = uint;
    alias __suseconds_t = c_long;
    alias __suseconds64_t = c_long;
    alias __daddr_t = int;
    alias __key_t = int;
    alias __clockid_t = int;
    alias __timer_t = void*;
    alias __blksize_t = c_long;
    alias __blkcnt_t = c_long;
    alias __blkcnt64_t = c_long;
    alias __fsblkcnt_t = c_ulong;
    alias __fsblkcnt64_t = c_ulong;
    alias __fsfilcnt_t = c_ulong;
    alias __fsfilcnt64_t = c_ulong;
    alias __fsword_t = c_long;
    alias __ssize_t = c_long;
    alias __syscall_slong_t = c_long;
    alias __syscall_ulong_t = c_ulong;
    alias __loff_t = c_long;
    alias __caddr_t = char*;
    alias __intptr_t = c_long;
    alias __socklen_t = uint;
    alias __sig_atomic_t = int;
    alias FILE = _IO_FILE;
    struct _IO_FILE
    {
        int _flags;
        char* _IO_read_ptr;
        char* _IO_read_end;
        char* _IO_read_base;
        char* _IO_write_base;
        char* _IO_write_ptr;
        char* _IO_write_end;
        char* _IO_buf_base;
        char* _IO_buf_end;
        char* _IO_save_base;
        char* _IO_backup_base;
        char* _IO_save_end;
        _IO_marker* _markers;
        _IO_FILE* _chain;
        int _fileno;
        int _flags2;
        c_long _old_offset;
        ushort _cur_column;
        byte _vtable_offset;
        char[1] _shortbuf;
        void* _lock;
        c_long _offset;
        _IO_codecvt* _codecvt;
        _IO_wide_data* _wide_data;
        _IO_FILE* _freeres_list;
        void* _freeres_buf;
        c_ulong __pad5;
        int _mode;
        char[20] _unused2;
    }
    alias __FILE = _IO_FILE;
    alias __fpos64_t = _G_fpos64_t;
    struct _G_fpos64_t
    {
        c_long __pos;
        __mbstate_t __state;
    }
    alias __fpos_t = _G_fpos_t;
    struct _G_fpos_t
    {
        c_long __pos;
        __mbstate_t __state;
    }
    struct __locale_struct
    {
        __locale_data*[13] __locales;
        const(ushort)* __ctype_b;
        const(int)* __ctype_tolower;
        const(int)* __ctype_toupper;
        const(char)*[13] __names;
    }
    alias __locale_t = __locale_struct*;
    struct __mbstate_t
    {
        int __count;
        static union _Anonymous_6
        {
            uint __wch;
            char[4] __wchb;
        }
        _Anonymous_6 __value;
    }
    struct __sigset_t
    {
        c_ulong[16] __val;
    }
    alias clock_t = c_long;
    int __overflow(_IO_FILE*, int) @nogc nothrow;
    alias clockid_t = int;
    int __uflow(_IO_FILE*) @nogc nothrow;
    alias locale_t = __locale_struct*;
    alias sigset_t = __sigset_t;
    struct _IO_marker;
    struct _IO_codecvt;
    struct _IO_wide_data;
    alias _IO_lock_t = void;
    void funlockfile(_IO_FILE*) @nogc nothrow;
    int ftrylockfile(_IO_FILE*) @nogc nothrow;
    void flockfile(_IO_FILE*) @nogc nothrow;
    struct __jmp_buf_tag
    {
        c_long[8] __jmpbuf;
        int __mask_was_saved;
        __sigset_t __saved_mask;
    }
    struct itimerspec
    {
        timespec it_interval;
        timespec it_value;
    }
    char* ctermid(char*) @nogc nothrow;
    struct sched_param
    {
        int sched_priority;
    }
    struct timespec
    {
        c_long tv_sec;
        c_long tv_nsec;
    }
    int pclose(_IO_FILE*) @nogc nothrow;
    struct timeval
    {
        c_long tv_sec;
        c_long tv_usec;
    }
    struct tm
    {
        int tm_sec;
        int tm_min;
        int tm_hour;
        int tm_mday;
        int tm_mon;
        int tm_year;
        int tm_wday;
        int tm_yday;
        int tm_isdst;
        c_long tm_gmtoff;
        const(char)* tm_zone;
    }
    _IO_FILE* popen(const(char)*, const(char)*) @nogc nothrow;
    alias time_t = c_long;
    alias timer_t = void*;
    int fileno_unlocked(_IO_FILE*) @nogc nothrow;
    int fileno(_IO_FILE*) @nogc nothrow;
    void perror(const(char)*) @nogc nothrow;
    int ferror_unlocked(_IO_FILE*) @nogc nothrow;
    int feof_unlocked(_IO_FILE*) @nogc nothrow;
    void clearerr_unlocked(_IO_FILE*) @nogc nothrow;
    int ferror(_IO_FILE*) @nogc nothrow;
    int feof(_IO_FILE*) @nogc nothrow;
    void clearerr(_IO_FILE*) @nogc nothrow;
    int fsetpos(_IO_FILE*, const(_G_fpos_t)*) @nogc nothrow;
    int fgetpos(_IO_FILE*, _G_fpos_t*) @nogc nothrow;
    c_long ftello(_IO_FILE*) @nogc nothrow;
    int fseeko(_IO_FILE*, c_long, int) @nogc nothrow;
    void rewind(_IO_FILE*) @nogc nothrow;
    c_long ftell(_IO_FILE*) @nogc nothrow;
    int fseek(_IO_FILE*, c_long, int) @nogc nothrow;
    c_ulong fwrite_unlocked(const(void)*, c_ulong, c_ulong, _IO_FILE*) @nogc nothrow;
    c_ulong fread_unlocked(void*, c_ulong, c_ulong, _IO_FILE*) @nogc nothrow;
	version(LDC) {
	} else {
		c_ulong fwrite(const(void)*, c_ulong, c_ulong, _IO_FILE*) @nogc nothrow;
	}
    c_ulong fread(void*, c_ulong, c_ulong, _IO_FILE*) @nogc nothrow;
    static ushort __uint16_identity(ushort) @nogc nothrow;
    static uint __uint32_identity(uint) @nogc nothrow;
    static c_ulong __uint64_identity(c_ulong) @nogc nothrow;
    int ungetc(int, _IO_FILE*) @nogc nothrow;
    int puts(const(char)*) @nogc nothrow;
    int fputs(const(char)*, _IO_FILE*) @nogc nothrow;
    c_long getline(char**, c_ulong*, _IO_FILE*) @nogc nothrow;
    c_long getdelim(char**, c_ulong*, int, _IO_FILE*) @nogc nothrow;
    c_long __getdelim(char**, c_ulong*, int, _IO_FILE*) @nogc nothrow;
    char* fgets(char*, int, _IO_FILE*) @nogc nothrow;
    int putw(int, _IO_FILE*) @nogc nothrow;
    int getw(_IO_FILE*) @nogc nothrow;
    int putchar_unlocked(int) @nogc nothrow;
    int putc_unlocked(int, _IO_FILE*) @nogc nothrow;
	version(LDC) {
	} else {
		int fputc_unlocked(int, _IO_FILE*) @nogc nothrow;
	}
    int putchar(int) @nogc nothrow;
    int putc(int, _IO_FILE*) @nogc nothrow;
    int fputc(int, _IO_FILE*) @nogc nothrow;
    int fgetc_unlocked(_IO_FILE*) @nogc nothrow;
    int getchar_unlocked() @nogc nothrow;
    int getc_unlocked(_IO_FILE*) @nogc nothrow;
    int getchar() @nogc nothrow;
    int getc(_IO_FILE*) @nogc nothrow;
    int fgetc(_IO_FILE*) @nogc nothrow;
    int vsscanf(const(char)*, const(char)*, va_list*) @nogc nothrow;
    int vscanf(const(char)*, va_list*) @nogc nothrow;
    int vfscanf(_IO_FILE*, const(char)*, va_list*) @nogc nothrow;
    int sscanf(const(char)*, const(char)*, ...) @nogc nothrow;
    int scanf(const(char)*, ...) @nogc nothrow;
    int* __errno_location() @nogc nothrow;
    int fscanf(_IO_FILE*, const(char)*, ...) @nogc nothrow;
    int dprintf(int, const(char)*, ...) @nogc nothrow;
    int vdprintf(int, const(char)*, va_list*) @nogc nothrow;
    int vsnprintf(char*, c_ulong, const(char)*, va_list*) @nogc nothrow;
    int snprintf(char*, c_ulong, const(char)*, ...) @nogc nothrow;
    int vsprintf(char*, const(char)*, va_list*) @nogc nothrow;
    int vprintf(const(char)*, va_list*) @nogc nothrow;
    int vfprintf(_IO_FILE*, const(char)*, va_list*) @nogc nothrow;
    int sprintf(char*, const(char)*, ...) @nogc nothrow;
    int printf(const(char)*, ...) @nogc nothrow;
    int fprintf(_IO_FILE*, const(char)*, ...) @nogc nothrow;
    void setlinebuf(_IO_FILE*) @nogc nothrow;
    void setbuffer(_IO_FILE*, char*, c_ulong) @nogc nothrow;
    int setvbuf(_IO_FILE*, char*, int, c_ulong) @nogc nothrow;
    void setbuf(_IO_FILE*, char*) @nogc nothrow;
    _IO_FILE* open_memstream(char**, c_ulong*) @nogc nothrow;
    _IO_FILE* fmemopen(void*, c_ulong, const(char)*) @nogc nothrow;
    _IO_FILE* fdopen(int, const(char)*) @nogc nothrow;
    alias __gwchar_t = int;
    _IO_FILE* freopen(const(char)*, const(char)*, _IO_FILE*) @nogc nothrow;
    _IO_FILE* fopen(const(char)*, const(char)*) @nogc nothrow;
    int fflush_unlocked(_IO_FILE*) @nogc nothrow;
    int fflush(_IO_FILE*) @nogc nothrow;
    int fclose(_IO_FILE*) @nogc nothrow;
    char* tempnam(const(char)*, const(char)*) @nogc nothrow;
    char* tmpnam_r(char*) @nogc nothrow;
    char* tmpnam(char*) @nogc nothrow;
    _IO_FILE* tmpfile() @nogc nothrow;
    int renameat(int, const(char)*, int, const(char)*) @nogc nothrow;
    int rename(const(char)*, const(char)*) @nogc nothrow;
    int remove(const(char)*) @nogc nothrow;
    extern __gshared _IO_FILE* stderr;
    extern __gshared _IO_FILE* stdout;
    extern __gshared _IO_FILE* stdin;
    alias fpos_t = _G_fpos_t;
    alias ssize_t = c_long;
    alias off_t = c_long;
    alias uintmax_t = c_ulong;
    alias intmax_t = c_long;
    alias uintptr_t = c_ulong;
    alias intptr_t = c_long;
    alias uint_fast64_t = c_ulong;
    alias uint_fast32_t = c_ulong;
    alias uint_fast16_t = c_ulong;
    alias uint_fast8_t = ubyte;
    alias int_fast64_t = c_long;
    alias int_fast32_t = c_long;
    alias int_fast16_t = c_long;
    alias int_fast8_t = byte;
    alias uint_least64_t = c_ulong;
    alias uint_least32_t = uint;
    alias uint_least16_t = ushort;
    alias uint_least8_t = ubyte;
    alias int_least64_t = c_long;
    alias int_least32_t = int;
    alias int_least16_t = short;
    alias int_least8_t = byte;
    int sched_rr_get_interval(int, timespec*) @nogc nothrow;
    int sched_get_priority_min(int) @nogc nothrow;
    int sched_get_priority_max(int) @nogc nothrow;
    int sched_yield() @nogc nothrow;
    int sched_getscheduler(int) @nogc nothrow;
    int sched_setscheduler(int, int, const(sched_param)*) @nogc nothrow;
    int sched_getparam(int, sched_param*) @nogc nothrow;
    int sched_setparam(int, const(sched_param)*) @nogc nothrow;
    int pthread_atfork(void function(), void function(), void function()) @nogc nothrow;
    int pthread_getcpuclockid(c_ulong, int*) @nogc nothrow;
    int pthread_setspecific(uint, const(void)*) @nogc nothrow;
    void* pthread_getspecific(uint) @nogc nothrow;
    int pthread_key_delete(uint) @nogc nothrow;
    int pthread_key_create(uint*, void function(void*)) @nogc nothrow;
    int pthread_barrierattr_setpshared(pthread_barrierattr_t*, int) @nogc nothrow;
    int pthread_barrierattr_getpshared(const(pthread_barrierattr_t)*, int*) @nogc nothrow;
    int pthread_barrierattr_destroy(pthread_barrierattr_t*) @nogc nothrow;
    int pthread_barrierattr_init(pthread_barrierattr_t*) @nogc nothrow;
    int pthread_barrier_wait(pthread_barrier_t*) @nogc nothrow;
    int pthread_barrier_destroy(pthread_barrier_t*) @nogc nothrow;
    int pthread_barrier_init(pthread_barrier_t*, const(pthread_barrierattr_t)*, uint) @nogc nothrow;
    int pthread_spin_unlock(int*) @nogc nothrow;
    struct imaxdiv_t
    {
        c_long quot;
        c_long rem;
    }
    c_long imaxabs(c_long) @nogc nothrow;
    imaxdiv_t imaxdiv(c_long, c_long) @nogc nothrow;
    c_long strtoimax(const(char)*, char**, int) @nogc nothrow;
    c_ulong strtoumax(const(char)*, char**, int) @nogc nothrow;
    c_long wcstoimax(const(int)*, int**, int) @nogc nothrow;
    c_ulong wcstoumax(const(int)*, int**, int) @nogc nothrow;
    int pthread_spin_trylock(int*) @nogc nothrow;
    int pthread_spin_lock(int*) @nogc nothrow;
    int pthread_spin_destroy(int*) @nogc nothrow;
    int pthread_spin_init(int*, int) @nogc nothrow;
    int pthread_condattr_setclock(pthread_condattr_t*, int) @nogc nothrow;
    int pthread_condattr_getclock(const(pthread_condattr_t)*, int*) @nogc nothrow;
    int pthread_condattr_setpshared(pthread_condattr_t*, int) @nogc nothrow;
    int pthread_condattr_getpshared(const(pthread_condattr_t)*, int*) @nogc nothrow;
    int pthread_condattr_destroy(pthread_condattr_t*) @nogc nothrow;
    int pthread_condattr_init(pthread_condattr_t*) @nogc nothrow;
    int pthread_cond_timedwait(pthread_cond_t*, pthread_mutex_t*, const(timespec)*) @nogc nothrow;
    int pthread_cond_wait(pthread_cond_t*, pthread_mutex_t*) @nogc nothrow;
    int pthread_cond_broadcast(pthread_cond_t*) @nogc nothrow;
    int pthread_cond_signal(pthread_cond_t*) @nogc nothrow;
    int pthread_cond_destroy(pthread_cond_t*) @nogc nothrow;
    int pthread_cond_init(pthread_cond_t*, const(pthread_condattr_t)*) @nogc nothrow;
    int pthread_rwlockattr_setkind_np(pthread_rwlockattr_t*, int) @nogc nothrow;
    int pthread_rwlockattr_getkind_np(const(pthread_rwlockattr_t)*, int*) @nogc nothrow;
    int pthread_rwlockattr_setpshared(pthread_rwlockattr_t*, int) @nogc nothrow;
    int pthread_rwlockattr_getpshared(const(pthread_rwlockattr_t)*, int*) @nogc nothrow;
    int pthread_rwlockattr_destroy(pthread_rwlockattr_t*) @nogc nothrow;
    int pthread_rwlockattr_init(pthread_rwlockattr_t*) @nogc nothrow;
    int pthread_rwlock_unlock(pthread_rwlock_t*) @nogc nothrow;
    int pthread_rwlock_timedwrlock(pthread_rwlock_t*, const(timespec)*) @nogc nothrow;
    int pthread_rwlock_trywrlock(pthread_rwlock_t*) @nogc nothrow;
    int pthread_rwlock_wrlock(pthread_rwlock_t*) @nogc nothrow;
    int pthread_rwlock_timedrdlock(pthread_rwlock_t*, const(timespec)*) @nogc nothrow;
    int pthread_rwlock_tryrdlock(pthread_rwlock_t*) @nogc nothrow;
    int pthread_rwlock_rdlock(pthread_rwlock_t*) @nogc nothrow;
    static X509_algor_st* sk_X509_ALGOR_delete_ptr(stack_st_X509_ALGOR*, X509_algor_st*) @nogc nothrow;
    static X509_algor_st* sk_X509_ALGOR_delete(stack_st_X509_ALGOR*, int) @nogc nothrow;
    static void sk_X509_ALGOR_zero(stack_st_X509_ALGOR*) @nogc nothrow;
    static void sk_X509_ALGOR_free(stack_st_X509_ALGOR*) @nogc nothrow;
    static int sk_X509_ALGOR_reserve(stack_st_X509_ALGOR*, int) @nogc nothrow;
    static stack_st_X509_ALGOR* sk_X509_ALGOR_new_reserve(int function(const(const(X509_algor_st)*)*, const(const(X509_algor_st)*)*), int) @nogc nothrow;
    static stack_st_X509_ALGOR* sk_X509_ALGOR_new_null() @nogc nothrow;
    static stack_st_X509_ALGOR* sk_X509_ALGOR_new(int function(const(const(X509_algor_st)*)*, const(const(X509_algor_st)*)*)) @nogc nothrow;
    static X509_algor_st* sk_X509_ALGOR_value(const(stack_st_X509_ALGOR)*, int) @nogc nothrow;
    static int sk_X509_ALGOR_num(const(stack_st_X509_ALGOR)*) @nogc nothrow;
    alias sk_X509_ALGOR_copyfunc = X509_algor_st* function(const(X509_algor_st)*);
    alias sk_X509_ALGOR_freefunc = void function(X509_algor_st*);
    alias sk_X509_ALGOR_compfunc = int function(const(const(X509_algor_st)*)*, const(const(X509_algor_st)*)*);
    struct stack_st_X509_ALGOR;
    static void sk_X509_ALGOR_sort(stack_st_X509_ALGOR*) @nogc nothrow;
    static int sk_X509_ALGOR_is_sorted(const(stack_st_X509_ALGOR)*) @nogc nothrow;
    static stack_st_X509_ALGOR* sk_X509_ALGOR_dup(const(stack_st_X509_ALGOR)*) @nogc nothrow;
    static stack_st_X509_ALGOR* sk_X509_ALGOR_deep_copy(const(stack_st_X509_ALGOR)*, X509_algor_st* function(const(X509_algor_st)*), void function(X509_algor_st*)) @nogc nothrow;
    static int function(const(const(X509_algor_st)*)*, const(const(X509_algor_st)*)*) sk_X509_ALGOR_set_cmp_func(stack_st_X509_ALGOR*, int function(const(const(X509_algor_st)*)*, const(const(X509_algor_st)*)*)) @nogc nothrow;
    static int sk_X509_ALGOR_unshift(stack_st_X509_ALGOR*, X509_algor_st*) @nogc nothrow;
    static X509_algor_st* sk_X509_ALGOR_pop(stack_st_X509_ALGOR*) @nogc nothrow;
    static void sk_X509_ALGOR_pop_free(stack_st_X509_ALGOR*, void function(X509_algor_st*)) @nogc nothrow;
    static int sk_X509_ALGOR_insert(stack_st_X509_ALGOR*, X509_algor_st*, int) @nogc nothrow;
    static X509_algor_st* sk_X509_ALGOR_set(stack_st_X509_ALGOR*, int, X509_algor_st*) @nogc nothrow;
    static int sk_X509_ALGOR_find(stack_st_X509_ALGOR*, X509_algor_st*) @nogc nothrow;
    static int sk_X509_ALGOR_find_ex(stack_st_X509_ALGOR*, X509_algor_st*) @nogc nothrow;
    static X509_algor_st* sk_X509_ALGOR_shift(stack_st_X509_ALGOR*) @nogc nothrow;
    static int sk_X509_ALGOR_push(stack_st_X509_ALGOR*, X509_algor_st*) @nogc nothrow;
    int pthread_rwlock_destroy(pthread_rwlock_t*) @nogc nothrow;
    int pthread_rwlock_init(pthread_rwlock_t*, const(pthread_rwlockattr_t)*) @nogc nothrow;
    alias ASN1_ENCODING = ASN1_ENCODING_st;
    struct ASN1_ENCODING_st
    {
        ubyte* enc;
        c_long len;
        int modified;
    }
    int pthread_mutexattr_setrobust(pthread_mutexattr_t*, int) @nogc nothrow;
    int pthread_mutexattr_getrobust(const(pthread_mutexattr_t)*, int*) @nogc nothrow;
    alias ASN1_STRING_TABLE = asn1_string_table_st;
    struct asn1_string_table_st
    {
        int nid;
        c_long minsize;
        c_long maxsize;
        c_ulong mask;
        c_ulong flags;
    }
    static asn1_string_table_st* sk_ASN1_STRING_TABLE_pop(stack_st_ASN1_STRING_TABLE*) @nogc nothrow;
    static asn1_string_table_st* sk_ASN1_STRING_TABLE_shift(stack_st_ASN1_STRING_TABLE*) @nogc nothrow;
    static void sk_ASN1_STRING_TABLE_pop_free(stack_st_ASN1_STRING_TABLE*, void function(asn1_string_table_st*)) @nogc nothrow;
    static int sk_ASN1_STRING_TABLE_insert(stack_st_ASN1_STRING_TABLE*, asn1_string_table_st*, int) @nogc nothrow;
    static asn1_string_table_st* sk_ASN1_STRING_TABLE_set(stack_st_ASN1_STRING_TABLE*, int, asn1_string_table_st*) @nogc nothrow;
    static int sk_ASN1_STRING_TABLE_find(stack_st_ASN1_STRING_TABLE*, asn1_string_table_st*) @nogc nothrow;
    static int sk_ASN1_STRING_TABLE_find_ex(stack_st_ASN1_STRING_TABLE*, asn1_string_table_st*) @nogc nothrow;
    static int function(const(const(asn1_string_table_st)*)*, const(const(asn1_string_table_st)*)*) sk_ASN1_STRING_TABLE_set_cmp_func(stack_st_ASN1_STRING_TABLE*, int function(const(const(asn1_string_table_st)*)*, const(const(asn1_string_table_st)*)*)) @nogc nothrow;
    static stack_st_ASN1_STRING_TABLE* sk_ASN1_STRING_TABLE_deep_copy(const(stack_st_ASN1_STRING_TABLE)*, asn1_string_table_st* function(const(asn1_string_table_st)*), void function(asn1_string_table_st*)) @nogc nothrow;
    static stack_st_ASN1_STRING_TABLE* sk_ASN1_STRING_TABLE_dup(const(stack_st_ASN1_STRING_TABLE)*) @nogc nothrow;
    struct stack_st_ASN1_STRING_TABLE;
    alias sk_ASN1_STRING_TABLE_compfunc = int function(const(const(asn1_string_table_st)*)*, const(const(asn1_string_table_st)*)*);
    alias sk_ASN1_STRING_TABLE_freefunc = void function(asn1_string_table_st*);
    static stack_st_ASN1_STRING_TABLE* sk_ASN1_STRING_TABLE_new(int function(const(const(asn1_string_table_st)*)*, const(const(asn1_string_table_st)*)*)) @nogc nothrow;
    static int sk_ASN1_STRING_TABLE_push(stack_st_ASN1_STRING_TABLE*, asn1_string_table_st*) @nogc nothrow;
    static asn1_string_table_st* sk_ASN1_STRING_TABLE_delete_ptr(stack_st_ASN1_STRING_TABLE*, asn1_string_table_st*) @nogc nothrow;
    static asn1_string_table_st* sk_ASN1_STRING_TABLE_delete(stack_st_ASN1_STRING_TABLE*, int) @nogc nothrow;
    static void sk_ASN1_STRING_TABLE_zero(stack_st_ASN1_STRING_TABLE*) @nogc nothrow;
    static void sk_ASN1_STRING_TABLE_free(stack_st_ASN1_STRING_TABLE*) @nogc nothrow;
    static int sk_ASN1_STRING_TABLE_reserve(stack_st_ASN1_STRING_TABLE*, int) @nogc nothrow;
    static stack_st_ASN1_STRING_TABLE* sk_ASN1_STRING_TABLE_new_reserve(int function(const(const(asn1_string_table_st)*)*, const(const(asn1_string_table_st)*)*), int) @nogc nothrow;
    alias sk_ASN1_STRING_TABLE_copyfunc = asn1_string_table_st* function(const(asn1_string_table_st)*);
    static int sk_ASN1_STRING_TABLE_is_sorted(const(stack_st_ASN1_STRING_TABLE)*) @nogc nothrow;
    static void sk_ASN1_STRING_TABLE_sort(stack_st_ASN1_STRING_TABLE*) @nogc nothrow;
    static int sk_ASN1_STRING_TABLE_num(const(stack_st_ASN1_STRING_TABLE)*) @nogc nothrow;
    static asn1_string_table_st* sk_ASN1_STRING_TABLE_value(const(stack_st_ASN1_STRING_TABLE)*, int) @nogc nothrow;
    static int sk_ASN1_STRING_TABLE_unshift(stack_st_ASN1_STRING_TABLE*, asn1_string_table_st*) @nogc nothrow;
    static stack_st_ASN1_STRING_TABLE* sk_ASN1_STRING_TABLE_new_null() @nogc nothrow;
    int pthread_mutexattr_setprioceiling(pthread_mutexattr_t*, int) @nogc nothrow;
    int pthread_mutexattr_getprioceiling(const(pthread_mutexattr_t)*, int*) @nogc nothrow;
    alias ASN1_TEMPLATE = ASN1_TEMPLATE_st;
    struct ASN1_TEMPLATE_st;
    alias ASN1_TLC = ASN1_TLC_st;
    struct ASN1_TLC_st;
    alias ASN1_VALUE = ASN1_VALUE_st;
    struct ASN1_VALUE_st;
    int pthread_mutexattr_setprotocol(pthread_mutexattr_t*, int) @nogc nothrow;
    int pthread_mutexattr_getprotocol(const(pthread_mutexattr_t)*, int*) @nogc nothrow;
    int pthread_mutexattr_settype(pthread_mutexattr_t*, int) @nogc nothrow;
    int pthread_mutexattr_gettype(const(pthread_mutexattr_t)*, int*) @nogc nothrow;
    int pthread_mutexattr_setpshared(pthread_mutexattr_t*, int) @nogc nothrow;
    int pthread_mutexattr_getpshared(const(pthread_mutexattr_t)*, int*) @nogc nothrow;
    int pthread_mutexattr_destroy(pthread_mutexattr_t*) @nogc nothrow;
    alias d2i_of_void = void* function(void**, const(ubyte)**, c_long);
    alias i2d_of_void = int function(void*, ubyte**);
    alias ASN1_ITEM_EXP = const(ASN1_ITEM_st);
    int pthread_mutexattr_init(pthread_mutexattr_t*) @nogc nothrow;
    int pthread_mutex_consistent(pthread_mutex_t*) @nogc nothrow;
    int pthread_mutex_setprioceiling(pthread_mutex_t*, int, int*) @nogc nothrow;
    int pthread_mutex_getprioceiling(const(pthread_mutex_t)*, int*) @nogc nothrow;
    int pthread_mutex_unlock(pthread_mutex_t*) @nogc nothrow;
    int pthread_mutex_timedlock(pthread_mutex_t*, const(timespec)*) @nogc nothrow;
    static int sk_ASN1_INTEGER_push(stack_st_ASN1_INTEGER*, asn1_string_st*) @nogc nothrow;
    static void sk_ASN1_INTEGER_pop_free(stack_st_ASN1_INTEGER*, void function(asn1_string_st*)) @nogc nothrow;
    static int sk_ASN1_INTEGER_insert(stack_st_ASN1_INTEGER*, asn1_string_st*, int) @nogc nothrow;
    static asn1_string_st* sk_ASN1_INTEGER_set(stack_st_ASN1_INTEGER*, int, asn1_string_st*) @nogc nothrow;
    static int sk_ASN1_INTEGER_find(stack_st_ASN1_INTEGER*, asn1_string_st*) @nogc nothrow;
    static int sk_ASN1_INTEGER_find_ex(stack_st_ASN1_INTEGER*, asn1_string_st*) @nogc nothrow;
    static void sk_ASN1_INTEGER_sort(stack_st_ASN1_INTEGER*) @nogc nothrow;
    static int sk_ASN1_INTEGER_is_sorted(const(stack_st_ASN1_INTEGER)*) @nogc nothrow;
    static stack_st_ASN1_INTEGER* sk_ASN1_INTEGER_dup(const(stack_st_ASN1_INTEGER)*) @nogc nothrow;
    static stack_st_ASN1_INTEGER* sk_ASN1_INTEGER_deep_copy(const(stack_st_ASN1_INTEGER)*, asn1_string_st* function(const(asn1_string_st)*), void function(asn1_string_st*)) @nogc nothrow;
    static asn1_string_st* sk_ASN1_INTEGER_shift(stack_st_ASN1_INTEGER*) @nogc nothrow;
    static int function(const(const(asn1_string_st)*)*, const(const(asn1_string_st)*)*) sk_ASN1_INTEGER_set_cmp_func(stack_st_ASN1_INTEGER*, int function(const(const(asn1_string_st)*)*, const(const(asn1_string_st)*)*)) @nogc nothrow;
    static int sk_ASN1_INTEGER_unshift(stack_st_ASN1_INTEGER*, asn1_string_st*) @nogc nothrow;
    struct stack_st_ASN1_INTEGER;
    static asn1_string_st* sk_ASN1_INTEGER_delete(stack_st_ASN1_INTEGER*, int) @nogc nothrow;
    static void sk_ASN1_INTEGER_zero(stack_st_ASN1_INTEGER*) @nogc nothrow;
    static void sk_ASN1_INTEGER_free(stack_st_ASN1_INTEGER*) @nogc nothrow;
    static int sk_ASN1_INTEGER_reserve(stack_st_ASN1_INTEGER*, int) @nogc nothrow;
    static stack_st_ASN1_INTEGER* sk_ASN1_INTEGER_new_reserve(int function(const(const(asn1_string_st)*)*, const(const(asn1_string_st)*)*), int) @nogc nothrow;
    static stack_st_ASN1_INTEGER* sk_ASN1_INTEGER_new_null() @nogc nothrow;
    static stack_st_ASN1_INTEGER* sk_ASN1_INTEGER_new(int function(const(const(asn1_string_st)*)*, const(const(asn1_string_st)*)*)) @nogc nothrow;
    static asn1_string_st* sk_ASN1_INTEGER_value(const(stack_st_ASN1_INTEGER)*, int) @nogc nothrow;
    static int sk_ASN1_INTEGER_num(const(stack_st_ASN1_INTEGER)*) @nogc nothrow;
    alias sk_ASN1_INTEGER_copyfunc = asn1_string_st* function(const(asn1_string_st)*);
    alias sk_ASN1_INTEGER_freefunc = void function(asn1_string_st*);
    alias sk_ASN1_INTEGER_compfunc = int function(const(const(asn1_string_st)*)*, const(const(asn1_string_st)*)*);
    static asn1_string_st* sk_ASN1_INTEGER_pop(stack_st_ASN1_INTEGER*) @nogc nothrow;
    static asn1_string_st* sk_ASN1_INTEGER_delete_ptr(stack_st_ASN1_INTEGER*, asn1_string_st*) @nogc nothrow;
    alias sk_ASN1_GENERALSTRING_freefunc = void function(asn1_string_st*);
    alias sk_ASN1_GENERALSTRING_compfunc = int function(const(const(asn1_string_st)*)*, const(const(asn1_string_st)*)*);
    static int sk_ASN1_GENERALSTRING_find(stack_st_ASN1_GENERALSTRING*, asn1_string_st*) @nogc nothrow;
    alias sk_ASN1_GENERALSTRING_copyfunc = asn1_string_st* function(const(asn1_string_st)*);
    static int sk_ASN1_GENERALSTRING_num(const(stack_st_ASN1_GENERALSTRING)*) @nogc nothrow;
    static stack_st_ASN1_GENERALSTRING* sk_ASN1_GENERALSTRING_new(int function(const(const(asn1_string_st)*)*, const(const(asn1_string_st)*)*)) @nogc nothrow;
    static stack_st_ASN1_GENERALSTRING* sk_ASN1_GENERALSTRING_new_null() @nogc nothrow;
    static stack_st_ASN1_GENERALSTRING* sk_ASN1_GENERALSTRING_new_reserve(int function(const(const(asn1_string_st)*)*, const(const(asn1_string_st)*)*), int) @nogc nothrow;
    static int sk_ASN1_GENERALSTRING_reserve(stack_st_ASN1_GENERALSTRING*, int) @nogc nothrow;
    static void sk_ASN1_GENERALSTRING_free(stack_st_ASN1_GENERALSTRING*) @nogc nothrow;
    static void sk_ASN1_GENERALSTRING_zero(stack_st_ASN1_GENERALSTRING*) @nogc nothrow;
    static asn1_string_st* sk_ASN1_GENERALSTRING_delete(stack_st_ASN1_GENERALSTRING*, int) @nogc nothrow;
    static asn1_string_st* sk_ASN1_GENERALSTRING_delete_ptr(stack_st_ASN1_GENERALSTRING*, asn1_string_st*) @nogc nothrow;
    static int sk_ASN1_GENERALSTRING_push(stack_st_ASN1_GENERALSTRING*, asn1_string_st*) @nogc nothrow;
    static int sk_ASN1_GENERALSTRING_unshift(stack_st_ASN1_GENERALSTRING*, asn1_string_st*) @nogc nothrow;
    static asn1_string_st* sk_ASN1_GENERALSTRING_pop(stack_st_ASN1_GENERALSTRING*) @nogc nothrow;
    static int function(const(const(asn1_string_st)*)*, const(const(asn1_string_st)*)*) sk_ASN1_GENERALSTRING_set_cmp_func(stack_st_ASN1_GENERALSTRING*, int function(const(const(asn1_string_st)*)*, const(const(asn1_string_st)*)*)) @nogc nothrow;
    static asn1_string_st* sk_ASN1_GENERALSTRING_shift(stack_st_ASN1_GENERALSTRING*) @nogc nothrow;
    static stack_st_ASN1_GENERALSTRING* sk_ASN1_GENERALSTRING_deep_copy(const(stack_st_ASN1_GENERALSTRING)*, asn1_string_st* function(const(asn1_string_st)*), void function(asn1_string_st*)) @nogc nothrow;
    static stack_st_ASN1_GENERALSTRING* sk_ASN1_GENERALSTRING_dup(const(stack_st_ASN1_GENERALSTRING)*) @nogc nothrow;
    static int sk_ASN1_GENERALSTRING_is_sorted(const(stack_st_ASN1_GENERALSTRING)*) @nogc nothrow;
    static void sk_ASN1_GENERALSTRING_sort(stack_st_ASN1_GENERALSTRING*) @nogc nothrow;
    static void sk_ASN1_GENERALSTRING_pop_free(stack_st_ASN1_GENERALSTRING*, void function(asn1_string_st*)) @nogc nothrow;
    static int sk_ASN1_GENERALSTRING_find_ex(stack_st_ASN1_GENERALSTRING*, asn1_string_st*) @nogc nothrow;
    static int sk_ASN1_GENERALSTRING_insert(stack_st_ASN1_GENERALSTRING*, asn1_string_st*, int) @nogc nothrow;
    static asn1_string_st* sk_ASN1_GENERALSTRING_set(stack_st_ASN1_GENERALSTRING*, int, asn1_string_st*) @nogc nothrow;
    struct stack_st_ASN1_GENERALSTRING;
    static asn1_string_st* sk_ASN1_GENERALSTRING_value(const(stack_st_ASN1_GENERALSTRING)*, int) @nogc nothrow;
    alias sk_ASN1_UTF8STRING_freefunc = void function(asn1_string_st*);
    alias sk_ASN1_UTF8STRING_copyfunc = asn1_string_st* function(const(asn1_string_st)*);
    static int sk_ASN1_UTF8STRING_num(const(stack_st_ASN1_UTF8STRING)*) @nogc nothrow;
    static asn1_string_st* sk_ASN1_UTF8STRING_value(const(stack_st_ASN1_UTF8STRING)*, int) @nogc nothrow;
    static stack_st_ASN1_UTF8STRING* sk_ASN1_UTF8STRING_new(int function(const(const(asn1_string_st)*)*, const(const(asn1_string_st)*)*)) @nogc nothrow;
    static stack_st_ASN1_UTF8STRING* sk_ASN1_UTF8STRING_new_null() @nogc nothrow;
    static stack_st_ASN1_UTF8STRING* sk_ASN1_UTF8STRING_new_reserve(int function(const(const(asn1_string_st)*)*, const(const(asn1_string_st)*)*), int) @nogc nothrow;
    static int sk_ASN1_UTF8STRING_reserve(stack_st_ASN1_UTF8STRING*, int) @nogc nothrow;
    static void sk_ASN1_UTF8STRING_free(stack_st_ASN1_UTF8STRING*) @nogc nothrow;
    static void sk_ASN1_UTF8STRING_zero(stack_st_ASN1_UTF8STRING*) @nogc nothrow;
    static asn1_string_st* sk_ASN1_UTF8STRING_delete(stack_st_ASN1_UTF8STRING*, int) @nogc nothrow;
    static asn1_string_st* sk_ASN1_UTF8STRING_delete_ptr(stack_st_ASN1_UTF8STRING*, asn1_string_st*) @nogc nothrow;
    static int sk_ASN1_UTF8STRING_push(stack_st_ASN1_UTF8STRING*, asn1_string_st*) @nogc nothrow;
    static int sk_ASN1_UTF8STRING_unshift(stack_st_ASN1_UTF8STRING*, asn1_string_st*) @nogc nothrow;
    static asn1_string_st* sk_ASN1_UTF8STRING_pop(stack_st_ASN1_UTF8STRING*) @nogc nothrow;
    static asn1_string_st* sk_ASN1_UTF8STRING_shift(stack_st_ASN1_UTF8STRING*) @nogc nothrow;
    static void sk_ASN1_UTF8STRING_pop_free(stack_st_ASN1_UTF8STRING*, void function(asn1_string_st*)) @nogc nothrow;
    static int sk_ASN1_UTF8STRING_insert(stack_st_ASN1_UTF8STRING*, asn1_string_st*, int) @nogc nothrow;
    static asn1_string_st* sk_ASN1_UTF8STRING_set(stack_st_ASN1_UTF8STRING*, int, asn1_string_st*) @nogc nothrow;
    static int sk_ASN1_UTF8STRING_find(stack_st_ASN1_UTF8STRING*, asn1_string_st*) @nogc nothrow;
    static int sk_ASN1_UTF8STRING_find_ex(stack_st_ASN1_UTF8STRING*, asn1_string_st*) @nogc nothrow;
    static void sk_ASN1_UTF8STRING_sort(stack_st_ASN1_UTF8STRING*) @nogc nothrow;
    static int sk_ASN1_UTF8STRING_is_sorted(const(stack_st_ASN1_UTF8STRING)*) @nogc nothrow;
    static stack_st_ASN1_UTF8STRING* sk_ASN1_UTF8STRING_dup(const(stack_st_ASN1_UTF8STRING)*) @nogc nothrow;
    static stack_st_ASN1_UTF8STRING* sk_ASN1_UTF8STRING_deep_copy(const(stack_st_ASN1_UTF8STRING)*, asn1_string_st* function(const(asn1_string_st)*), void function(asn1_string_st*)) @nogc nothrow;
    static int function(const(const(asn1_string_st)*)*, const(const(asn1_string_st)*)*) sk_ASN1_UTF8STRING_set_cmp_func(stack_st_ASN1_UTF8STRING*, int function(const(const(asn1_string_st)*)*, const(const(asn1_string_st)*)*)) @nogc nothrow;
    struct stack_st_ASN1_UTF8STRING;
    alias sk_ASN1_UTF8STRING_compfunc = int function(const(const(asn1_string_st)*)*, const(const(asn1_string_st)*)*);
    alias ASN1_TYPE = asn1_type_st;
    struct asn1_type_st
    {
        int type;
        static union _Anonymous_7
        {
            char* ptr;
            int boolean;
            asn1_string_st* asn1_string;
            asn1_object_st* object;
            asn1_string_st* integer;
            asn1_string_st* enumerated;
            asn1_string_st* bit_string;
            asn1_string_st* octet_string;
            asn1_string_st* printablestring;
            asn1_string_st* t61string;
            asn1_string_st* ia5string;
            asn1_string_st* generalstring;
            asn1_string_st* bmpstring;
            asn1_string_st* universalstring;
            asn1_string_st* utctime;
            asn1_string_st* generalizedtime;
            asn1_string_st* visiblestring;
            asn1_string_st* utf8string;
            asn1_string_st* set;
            asn1_string_st* sequence;
            ASN1_VALUE_st* asn1_value;
        }
        _Anonymous_7 value;
    }
    alias sk_ASN1_TYPE_compfunc = int function(const(const(asn1_type_st)*)*, const(const(asn1_type_st)*)*);
    struct stack_st_ASN1_TYPE;
    alias sk_ASN1_TYPE_copyfunc = asn1_type_st* function(const(asn1_type_st)*);
    static int sk_ASN1_TYPE_num(const(stack_st_ASN1_TYPE)*) @nogc nothrow;
    static asn1_type_st* sk_ASN1_TYPE_value(const(stack_st_ASN1_TYPE)*, int) @nogc nothrow;
    static int function(const(const(asn1_type_st)*)*, const(const(asn1_type_st)*)*) sk_ASN1_TYPE_set_cmp_func(stack_st_ASN1_TYPE*, int function(const(const(asn1_type_st)*)*, const(const(asn1_type_st)*)*)) @nogc nothrow;
    static stack_st_ASN1_TYPE* sk_ASN1_TYPE_new(int function(const(const(asn1_type_st)*)*, const(const(asn1_type_st)*)*)) @nogc nothrow;
    static stack_st_ASN1_TYPE* sk_ASN1_TYPE_new_null() @nogc nothrow;
    static stack_st_ASN1_TYPE* sk_ASN1_TYPE_new_reserve(int function(const(const(asn1_type_st)*)*, const(const(asn1_type_st)*)*), int) @nogc nothrow;
    static int sk_ASN1_TYPE_reserve(stack_st_ASN1_TYPE*, int) @nogc nothrow;
    static void sk_ASN1_TYPE_free(stack_st_ASN1_TYPE*) @nogc nothrow;
    static void sk_ASN1_TYPE_zero(stack_st_ASN1_TYPE*) @nogc nothrow;
    static asn1_type_st* sk_ASN1_TYPE_delete(stack_st_ASN1_TYPE*, int) @nogc nothrow;
    static asn1_type_st* sk_ASN1_TYPE_delete_ptr(stack_st_ASN1_TYPE*, asn1_type_st*) @nogc nothrow;
    static int sk_ASN1_TYPE_push(stack_st_ASN1_TYPE*, asn1_type_st*) @nogc nothrow;
    static int sk_ASN1_TYPE_unshift(stack_st_ASN1_TYPE*, asn1_type_st*) @nogc nothrow;
    static asn1_type_st* sk_ASN1_TYPE_pop(stack_st_ASN1_TYPE*) @nogc nothrow;
    static asn1_type_st* sk_ASN1_TYPE_shift(stack_st_ASN1_TYPE*) @nogc nothrow;
    static void sk_ASN1_TYPE_pop_free(stack_st_ASN1_TYPE*, void function(asn1_type_st*)) @nogc nothrow;
    static int sk_ASN1_TYPE_insert(stack_st_ASN1_TYPE*, asn1_type_st*, int) @nogc nothrow;
    static asn1_type_st* sk_ASN1_TYPE_set(stack_st_ASN1_TYPE*, int, asn1_type_st*) @nogc nothrow;
    static int sk_ASN1_TYPE_find(stack_st_ASN1_TYPE*, asn1_type_st*) @nogc nothrow;
    static int sk_ASN1_TYPE_find_ex(stack_st_ASN1_TYPE*, asn1_type_st*) @nogc nothrow;
    static void sk_ASN1_TYPE_sort(stack_st_ASN1_TYPE*) @nogc nothrow;
    static int sk_ASN1_TYPE_is_sorted(const(stack_st_ASN1_TYPE)*) @nogc nothrow;
    static stack_st_ASN1_TYPE* sk_ASN1_TYPE_dup(const(stack_st_ASN1_TYPE)*) @nogc nothrow;
    alias sk_ASN1_TYPE_freefunc = void function(asn1_type_st*);
    static stack_st_ASN1_TYPE* sk_ASN1_TYPE_deep_copy(const(stack_st_ASN1_TYPE)*, asn1_type_st* function(const(asn1_type_st)*), void function(asn1_type_st*)) @nogc nothrow;
    alias ASN1_SEQUENCE_ANY = stack_st_ASN1_TYPE;
    int i2d_ASN1_SEQUENCE_ANY(const(stack_st_ASN1_TYPE)*, ubyte**) @nogc nothrow;
    stack_st_ASN1_TYPE* d2i_ASN1_SEQUENCE_ANY(stack_st_ASN1_TYPE**, const(ubyte)**, c_long) @nogc nothrow;
    int i2d_ASN1_SET_ANY(const(stack_st_ASN1_TYPE)*, ubyte**) @nogc nothrow;
    stack_st_ASN1_TYPE* d2i_ASN1_SET_ANY(stack_st_ASN1_TYPE**, const(ubyte)**, c_long) @nogc nothrow;
    alias BIT_STRING_BITNAME = BIT_STRING_BITNAME_st;
    struct BIT_STRING_BITNAME_st
    {
        int bitnum;
        const(char)* lname;
        const(char)* sname;
    }
    int pthread_mutex_lock(pthread_mutex_t*) @nogc nothrow;
    int i2d_ASN1_TYPE(asn1_type_st*, ubyte**) @nogc nothrow;
    void ASN1_TYPE_free(asn1_type_st*) @nogc nothrow;
    asn1_type_st* d2i_ASN1_TYPE(asn1_type_st**, const(ubyte)**, c_long) @nogc nothrow;
    asn1_type_st* ASN1_TYPE_new() @nogc nothrow;
    int ASN1_TYPE_get(const(asn1_type_st)*) @nogc nothrow;
    void ASN1_TYPE_set(asn1_type_st*, int, void*) @nogc nothrow;
    int ASN1_TYPE_set1(asn1_type_st*, int, const(void)*) @nogc nothrow;
    int ASN1_TYPE_cmp(const(asn1_type_st)*, const(asn1_type_st)*) @nogc nothrow;
    asn1_type_st* ASN1_TYPE_pack_sequence(const(ASN1_ITEM_st)*, void*, asn1_type_st**) @nogc nothrow;
    void* ASN1_TYPE_unpack_sequence(const(ASN1_ITEM_st)*, const(asn1_type_st)*) @nogc nothrow;
    asn1_object_st* ASN1_OBJECT_new() @nogc nothrow;
    void ASN1_OBJECT_free(asn1_object_st*) @nogc nothrow;
    int i2d_ASN1_OBJECT(const(asn1_object_st)*, ubyte**) @nogc nothrow;
    asn1_object_st* d2i_ASN1_OBJECT(asn1_object_st**, const(ubyte)**, c_long) @nogc nothrow;
    struct stack_st_ASN1_OBJECT;
    static stack_st_ASN1_OBJECT* sk_ASN1_OBJECT_new_reserve(int function(const(const(asn1_object_st)*)*, const(const(asn1_object_st)*)*), int) @nogc nothrow;
    alias sk_ASN1_OBJECT_compfunc = int function(const(const(asn1_object_st)*)*, const(const(asn1_object_st)*)*);
    alias sk_ASN1_OBJECT_freefunc = void function(asn1_object_st*);
    alias sk_ASN1_OBJECT_copyfunc = asn1_object_st* function(const(asn1_object_st)*);
    static int sk_ASN1_OBJECT_num(const(stack_st_ASN1_OBJECT)*) @nogc nothrow;
    static asn1_object_st* sk_ASN1_OBJECT_value(const(stack_st_ASN1_OBJECT)*, int) @nogc nothrow;
    static stack_st_ASN1_OBJECT* sk_ASN1_OBJECT_new(int function(const(const(asn1_object_st)*)*, const(const(asn1_object_st)*)*)) @nogc nothrow;
    static stack_st_ASN1_OBJECT* sk_ASN1_OBJECT_new_null() @nogc nothrow;
    static int function(const(const(asn1_object_st)*)*, const(const(asn1_object_st)*)*) sk_ASN1_OBJECT_set_cmp_func(stack_st_ASN1_OBJECT*, int function(const(const(asn1_object_st)*)*, const(const(asn1_object_st)*)*)) @nogc nothrow;
    static stack_st_ASN1_OBJECT* sk_ASN1_OBJECT_deep_copy(const(stack_st_ASN1_OBJECT)*, asn1_object_st* function(const(asn1_object_st)*), void function(asn1_object_st*)) @nogc nothrow;
    static stack_st_ASN1_OBJECT* sk_ASN1_OBJECT_dup(const(stack_st_ASN1_OBJECT)*) @nogc nothrow;
    static int sk_ASN1_OBJECT_is_sorted(const(stack_st_ASN1_OBJECT)*) @nogc nothrow;
    static int sk_ASN1_OBJECT_reserve(stack_st_ASN1_OBJECT*, int) @nogc nothrow;
    static int sk_ASN1_OBJECT_find_ex(stack_st_ASN1_OBJECT*, asn1_object_st*) @nogc nothrow;
    static int sk_ASN1_OBJECT_find(stack_st_ASN1_OBJECT*, asn1_object_st*) @nogc nothrow;
    static asn1_object_st* sk_ASN1_OBJECT_set(stack_st_ASN1_OBJECT*, int, asn1_object_st*) @nogc nothrow;
    static int sk_ASN1_OBJECT_insert(stack_st_ASN1_OBJECT*, asn1_object_st*, int) @nogc nothrow;
    static void sk_ASN1_OBJECT_pop_free(stack_st_ASN1_OBJECT*, void function(asn1_object_st*)) @nogc nothrow;
    static asn1_object_st* sk_ASN1_OBJECT_shift(stack_st_ASN1_OBJECT*) @nogc nothrow;
    static asn1_object_st* sk_ASN1_OBJECT_pop(stack_st_ASN1_OBJECT*) @nogc nothrow;
    static int sk_ASN1_OBJECT_unshift(stack_st_ASN1_OBJECT*, asn1_object_st*) @nogc nothrow;
    static int sk_ASN1_OBJECT_push(stack_st_ASN1_OBJECT*, asn1_object_st*) @nogc nothrow;
    static asn1_object_st* sk_ASN1_OBJECT_delete_ptr(stack_st_ASN1_OBJECT*, asn1_object_st*) @nogc nothrow;
    static asn1_object_st* sk_ASN1_OBJECT_delete(stack_st_ASN1_OBJECT*, int) @nogc nothrow;
    static void sk_ASN1_OBJECT_zero(stack_st_ASN1_OBJECT*) @nogc nothrow;
    static void sk_ASN1_OBJECT_free(stack_st_ASN1_OBJECT*) @nogc nothrow;
    static void sk_ASN1_OBJECT_sort(stack_st_ASN1_OBJECT*) @nogc nothrow;
    asn1_string_st* ASN1_STRING_new() @nogc nothrow;
    void ASN1_STRING_free(asn1_string_st*) @nogc nothrow;
    void ASN1_STRING_clear_free(asn1_string_st*) @nogc nothrow;
    int ASN1_STRING_copy(asn1_string_st*, const(asn1_string_st)*) @nogc nothrow;
    asn1_string_st* ASN1_STRING_dup(const(asn1_string_st)*) @nogc nothrow;
    asn1_string_st* ASN1_STRING_type_new(int) @nogc nothrow;
    int ASN1_STRING_cmp(const(asn1_string_st)*, const(asn1_string_st)*) @nogc nothrow;
    int ASN1_STRING_set(asn1_string_st*, const(void)*, int) @nogc nothrow;
    void ASN1_STRING_set0(asn1_string_st*, void*, int) @nogc nothrow;
    int ASN1_STRING_length(const(asn1_string_st)*) @nogc nothrow;
    void ASN1_STRING_length_set(asn1_string_st*, int) @nogc nothrow;
    int ASN1_STRING_type(const(asn1_string_st)*) @nogc nothrow;
    ubyte* ASN1_STRING_data(asn1_string_st*) @nogc nothrow;
    const(ubyte)* ASN1_STRING_get0_data(const(asn1_string_st)*) @nogc nothrow;
    void ASN1_BIT_STRING_free(asn1_string_st*) @nogc nothrow;
    int i2d_ASN1_BIT_STRING(asn1_string_st*, ubyte**) @nogc nothrow;
    asn1_string_st* ASN1_BIT_STRING_new() @nogc nothrow;
    asn1_string_st* d2i_ASN1_BIT_STRING(asn1_string_st**, const(ubyte)**, c_long) @nogc nothrow;
    int ASN1_BIT_STRING_set(asn1_string_st*, ubyte*, int) @nogc nothrow;
    int ASN1_BIT_STRING_set_bit(asn1_string_st*, int, int) @nogc nothrow;
    int ASN1_BIT_STRING_get_bit(const(asn1_string_st)*, int) @nogc nothrow;
    int ASN1_BIT_STRING_check(const(asn1_string_st)*, const(ubyte)*, int) @nogc nothrow;
    int ASN1_BIT_STRING_name_print(bio_st*, asn1_string_st*, BIT_STRING_BITNAME_st*, int) @nogc nothrow;
    int ASN1_BIT_STRING_num_asc(const(char)*, BIT_STRING_BITNAME_st*) @nogc nothrow;
    int ASN1_BIT_STRING_set_asc(asn1_string_st*, const(char)*, int, BIT_STRING_BITNAME_st*) @nogc nothrow;
    void ASN1_INTEGER_free(asn1_string_st*) @nogc nothrow;
    int i2d_ASN1_INTEGER(asn1_string_st*, ubyte**) @nogc nothrow;
    asn1_string_st* ASN1_INTEGER_new() @nogc nothrow;
    asn1_string_st* d2i_ASN1_INTEGER(asn1_string_st**, const(ubyte)**, c_long) @nogc nothrow;
    asn1_string_st* d2i_ASN1_UINTEGER(asn1_string_st**, const(ubyte)**, c_long) @nogc nothrow;
    asn1_string_st* ASN1_INTEGER_dup(const(asn1_string_st)*) @nogc nothrow;
    int ASN1_INTEGER_cmp(const(asn1_string_st)*, const(asn1_string_st)*) @nogc nothrow;
    int i2d_ASN1_ENUMERATED(asn1_string_st*, ubyte**) @nogc nothrow;
    void ASN1_ENUMERATED_free(asn1_string_st*) @nogc nothrow;
    asn1_string_st* d2i_ASN1_ENUMERATED(asn1_string_st**, const(ubyte)**, c_long) @nogc nothrow;
    asn1_string_st* ASN1_ENUMERATED_new() @nogc nothrow;
    int ASN1_UTCTIME_check(const(asn1_string_st)*) @nogc nothrow;
    asn1_string_st* ASN1_UTCTIME_set(asn1_string_st*, c_long) @nogc nothrow;
    asn1_string_st* ASN1_UTCTIME_adj(asn1_string_st*, c_long, int, c_long) @nogc nothrow;
    int ASN1_UTCTIME_set_string(asn1_string_st*, const(char)*) @nogc nothrow;
    int ASN1_UTCTIME_cmp_time_t(const(asn1_string_st)*, c_long) @nogc nothrow;
    int ASN1_GENERALIZEDTIME_check(const(asn1_string_st)*) @nogc nothrow;
    asn1_string_st* ASN1_GENERALIZEDTIME_set(asn1_string_st*, c_long) @nogc nothrow;
    asn1_string_st* ASN1_GENERALIZEDTIME_adj(asn1_string_st*, c_long, int, c_long) @nogc nothrow;
    int ASN1_GENERALIZEDTIME_set_string(asn1_string_st*, const(char)*) @nogc nothrow;
    int ASN1_TIME_diff(int*, int*, const(asn1_string_st)*, const(asn1_string_st)*) @nogc nothrow;
    int i2d_ASN1_OCTET_STRING(asn1_string_st*, ubyte**) @nogc nothrow;
    void ASN1_OCTET_STRING_free(asn1_string_st*) @nogc nothrow;
    asn1_string_st* d2i_ASN1_OCTET_STRING(asn1_string_st**, const(ubyte)**, c_long) @nogc nothrow;
    asn1_string_st* ASN1_OCTET_STRING_new() @nogc nothrow;
    asn1_string_st* ASN1_OCTET_STRING_dup(const(asn1_string_st)*) @nogc nothrow;
    int ASN1_OCTET_STRING_cmp(const(asn1_string_st)*, const(asn1_string_st)*) @nogc nothrow;
    int ASN1_OCTET_STRING_set(asn1_string_st*, const(ubyte)*, int) @nogc nothrow;
    int i2d_ASN1_VISIBLESTRING(asn1_string_st*, ubyte**) @nogc nothrow;
    void ASN1_VISIBLESTRING_free(asn1_string_st*) @nogc nothrow;
    asn1_string_st* d2i_ASN1_VISIBLESTRING(asn1_string_st**, const(ubyte)**, c_long) @nogc nothrow;
    asn1_string_st* ASN1_VISIBLESTRING_new() @nogc nothrow;
    int i2d_ASN1_UNIVERSALSTRING(asn1_string_st*, ubyte**) @nogc nothrow;
    void ASN1_UNIVERSALSTRING_free(asn1_string_st*) @nogc nothrow;
    asn1_string_st* d2i_ASN1_UNIVERSALSTRING(asn1_string_st**, const(ubyte)**, c_long) @nogc nothrow;
    asn1_string_st* ASN1_UNIVERSALSTRING_new() @nogc nothrow;
    int i2d_ASN1_UTF8STRING(asn1_string_st*, ubyte**) @nogc nothrow;
    void ASN1_UTF8STRING_free(asn1_string_st*) @nogc nothrow;
    asn1_string_st* ASN1_UTF8STRING_new() @nogc nothrow;
    asn1_string_st* d2i_ASN1_UTF8STRING(asn1_string_st**, const(ubyte)**, c_long) @nogc nothrow;
    void ASN1_NULL_free(int*) @nogc nothrow;
    int i2d_ASN1_NULL(int*, ubyte**) @nogc nothrow;
    int* ASN1_NULL_new() @nogc nothrow;
    int* d2i_ASN1_NULL(int**, const(ubyte)**, c_long) @nogc nothrow;
    void ASN1_BMPSTRING_free(asn1_string_st*) @nogc nothrow;
    int i2d_ASN1_BMPSTRING(asn1_string_st*, ubyte**) @nogc nothrow;
    asn1_string_st* ASN1_BMPSTRING_new() @nogc nothrow;
    asn1_string_st* d2i_ASN1_BMPSTRING(asn1_string_st**, const(ubyte)**, c_long) @nogc nothrow;
    int UTF8_getc(const(ubyte)*, int, c_ulong*) @nogc nothrow;
    int UTF8_putc(ubyte*, int, c_ulong) @nogc nothrow;
    int i2d_ASN1_PRINTABLE(asn1_string_st*, ubyte**) @nogc nothrow;
    void ASN1_PRINTABLE_free(asn1_string_st*) @nogc nothrow;
    asn1_string_st* d2i_ASN1_PRINTABLE(asn1_string_st**, const(ubyte)**, c_long) @nogc nothrow;
    asn1_string_st* ASN1_PRINTABLE_new() @nogc nothrow;
    void DIRECTORYSTRING_free(asn1_string_st*) @nogc nothrow;
    int i2d_DIRECTORYSTRING(asn1_string_st*, ubyte**) @nogc nothrow;
    asn1_string_st* DIRECTORYSTRING_new() @nogc nothrow;
    asn1_string_st* d2i_DIRECTORYSTRING(asn1_string_st**, const(ubyte)**, c_long) @nogc nothrow;
    void DISPLAYTEXT_free(asn1_string_st*) @nogc nothrow;
    int i2d_DISPLAYTEXT(asn1_string_st*, ubyte**) @nogc nothrow;
    asn1_string_st* DISPLAYTEXT_new() @nogc nothrow;
    asn1_string_st* d2i_DISPLAYTEXT(asn1_string_st**, const(ubyte)**, c_long) @nogc nothrow;
    void ASN1_PRINTABLESTRING_free(asn1_string_st*) @nogc nothrow;
    int i2d_ASN1_PRINTABLESTRING(asn1_string_st*, ubyte**) @nogc nothrow;
    asn1_string_st* ASN1_PRINTABLESTRING_new() @nogc nothrow;
    asn1_string_st* d2i_ASN1_PRINTABLESTRING(asn1_string_st**, const(ubyte)**, c_long) @nogc nothrow;
    int i2d_ASN1_T61STRING(asn1_string_st*, ubyte**) @nogc nothrow;
    void ASN1_T61STRING_free(asn1_string_st*) @nogc nothrow;
    asn1_string_st* d2i_ASN1_T61STRING(asn1_string_st**, const(ubyte)**, c_long) @nogc nothrow;
    asn1_string_st* ASN1_T61STRING_new() @nogc nothrow;
    void ASN1_IA5STRING_free(asn1_string_st*) @nogc nothrow;
    int i2d_ASN1_IA5STRING(asn1_string_st*, ubyte**) @nogc nothrow;
    asn1_string_st* ASN1_IA5STRING_new() @nogc nothrow;
    asn1_string_st* d2i_ASN1_IA5STRING(asn1_string_st**, const(ubyte)**, c_long) @nogc nothrow;
    void ASN1_GENERALSTRING_free(asn1_string_st*) @nogc nothrow;
    int i2d_ASN1_GENERALSTRING(asn1_string_st*, ubyte**) @nogc nothrow;
    asn1_string_st* ASN1_GENERALSTRING_new() @nogc nothrow;
    asn1_string_st* d2i_ASN1_GENERALSTRING(asn1_string_st**, const(ubyte)**, c_long) @nogc nothrow;
    void ASN1_UTCTIME_free(asn1_string_st*) @nogc nothrow;
    int i2d_ASN1_UTCTIME(asn1_string_st*, ubyte**) @nogc nothrow;
    asn1_string_st* d2i_ASN1_UTCTIME(asn1_string_st**, const(ubyte)**, c_long) @nogc nothrow;
    asn1_string_st* ASN1_UTCTIME_new() @nogc nothrow;
    int i2d_ASN1_GENERALIZEDTIME(asn1_string_st*, ubyte**) @nogc nothrow;
    void ASN1_GENERALIZEDTIME_free(asn1_string_st*) @nogc nothrow;
    asn1_string_st* d2i_ASN1_GENERALIZEDTIME(asn1_string_st**, const(ubyte)**, c_long) @nogc nothrow;
    asn1_string_st* ASN1_GENERALIZEDTIME_new() @nogc nothrow;
    int i2d_ASN1_TIME(asn1_string_st*, ubyte**) @nogc nothrow;
    void ASN1_TIME_free(asn1_string_st*) @nogc nothrow;
    asn1_string_st* d2i_ASN1_TIME(asn1_string_st**, const(ubyte)**, c_long) @nogc nothrow;
    asn1_string_st* ASN1_TIME_new() @nogc nothrow;
    asn1_string_st* ASN1_TIME_set(asn1_string_st*, c_long) @nogc nothrow;
    asn1_string_st* ASN1_TIME_adj(asn1_string_st*, c_long, int, c_long) @nogc nothrow;
    int ASN1_TIME_check(const(asn1_string_st)*) @nogc nothrow;
    asn1_string_st* ASN1_TIME_to_generalizedtime(const(asn1_string_st)*, asn1_string_st**) @nogc nothrow;
    int ASN1_TIME_set_string(asn1_string_st*, const(char)*) @nogc nothrow;
    int ASN1_TIME_set_string_X509(asn1_string_st*, const(char)*) @nogc nothrow;
    int ASN1_TIME_to_tm(const(asn1_string_st)*, tm*) @nogc nothrow;
    int ASN1_TIME_normalize(asn1_string_st*) @nogc nothrow;
    int ASN1_TIME_cmp_time_t(const(asn1_string_st)*, c_long) @nogc nothrow;
    int ASN1_TIME_compare(const(asn1_string_st)*, const(asn1_string_st)*) @nogc nothrow;
    int i2a_ASN1_INTEGER(bio_st*, const(asn1_string_st)*) @nogc nothrow;
    int a2i_ASN1_INTEGER(bio_st*, asn1_string_st*, char*, int) @nogc nothrow;
    int i2a_ASN1_ENUMERATED(bio_st*, const(asn1_string_st)*) @nogc nothrow;
    int a2i_ASN1_ENUMERATED(bio_st*, asn1_string_st*, char*, int) @nogc nothrow;
    int i2a_ASN1_OBJECT(bio_st*, const(asn1_object_st)*) @nogc nothrow;
    int a2i_ASN1_STRING(bio_st*, asn1_string_st*, char*, int) @nogc nothrow;
    int i2a_ASN1_STRING(bio_st*, const(asn1_string_st)*, int) @nogc nothrow;
    int i2t_ASN1_OBJECT(char*, int, const(asn1_object_st)*) @nogc nothrow;
    int a2d_ASN1_OBJECT(ubyte*, int, const(char)*, int) @nogc nothrow;
    asn1_object_st* ASN1_OBJECT_create(int, ubyte*, int, const(char)*, const(char)*) @nogc nothrow;
    int ASN1_INTEGER_get_int64(c_long*, const(asn1_string_st)*) @nogc nothrow;
    int ASN1_INTEGER_set_int64(asn1_string_st*, c_long) @nogc nothrow;
    int ASN1_INTEGER_get_uint64(c_ulong*, const(asn1_string_st)*) @nogc nothrow;
    int ASN1_INTEGER_set_uint64(asn1_string_st*, c_ulong) @nogc nothrow;
    int ASN1_INTEGER_set(asn1_string_st*, c_long) @nogc nothrow;
    c_long ASN1_INTEGER_get(const(asn1_string_st)*) @nogc nothrow;
    asn1_string_st* BN_to_ASN1_INTEGER(const(bignum_st)*, asn1_string_st*) @nogc nothrow;
    bignum_st* ASN1_INTEGER_to_BN(const(asn1_string_st)*, bignum_st*) @nogc nothrow;
    int ASN1_ENUMERATED_get_int64(c_long*, const(asn1_string_st)*) @nogc nothrow;
    int ASN1_ENUMERATED_set_int64(asn1_string_st*, c_long) @nogc nothrow;
    int ASN1_ENUMERATED_set(asn1_string_st*, c_long) @nogc nothrow;
    c_long ASN1_ENUMERATED_get(const(asn1_string_st)*) @nogc nothrow;
    asn1_string_st* BN_to_ASN1_ENUMERATED(const(bignum_st)*, asn1_string_st*) @nogc nothrow;
    bignum_st* ASN1_ENUMERATED_to_BN(const(asn1_string_st)*, bignum_st*) @nogc nothrow;
    int ASN1_PRINTABLE_type(const(ubyte)*, int) @nogc nothrow;
    c_ulong ASN1_tag2bit(int) @nogc nothrow;
    int ASN1_get_object(const(ubyte)**, c_long*, int*, int*, c_long) @nogc nothrow;
    int ASN1_check_infinite_end(ubyte**, c_long) @nogc nothrow;
    int ASN1_const_check_infinite_end(const(ubyte)**, c_long) @nogc nothrow;
    void ASN1_put_object(ubyte**, int, int, int, int) @nogc nothrow;
    int ASN1_put_eoc(ubyte**) @nogc nothrow;
    int ASN1_object_size(int, int, int) @nogc nothrow;
    void* ASN1_dup(int function(void*, ubyte**), void* function(void**, const(ubyte)**, c_long), void*) @nogc nothrow;
    int pthread_mutex_trylock(pthread_mutex_t*) @nogc nothrow;
    void* ASN1_item_dup(const(ASN1_ITEM_st)*, void*) @nogc nothrow;
    void* ASN1_d2i_fp(void* function(), void* function(void**, const(ubyte)**, c_long), _IO_FILE*, void**) @nogc nothrow;
    int pthread_mutex_destroy(pthread_mutex_t*) @nogc nothrow;
    void* ASN1_item_d2i_fp(const(ASN1_ITEM_st)*, _IO_FILE*, void*) @nogc nothrow;
    int ASN1_i2d_fp(int function(void*, ubyte**), _IO_FILE*, void*) @nogc nothrow;
    int ASN1_item_i2d_fp(const(ASN1_ITEM_st)*, _IO_FILE*, void*) @nogc nothrow;
    int ASN1_STRING_print_ex_fp(_IO_FILE*, const(asn1_string_st)*, c_ulong) @nogc nothrow;
    int ASN1_STRING_to_UTF8(ubyte**, const(asn1_string_st)*) @nogc nothrow;
    void* ASN1_d2i_bio(void* function(), void* function(void**, const(ubyte)**, c_long), bio_st*, void**) @nogc nothrow;
    int pthread_mutex_init(pthread_mutex_t*, const(pthread_mutexattr_t)*) @nogc nothrow;
    void* ASN1_item_d2i_bio(const(ASN1_ITEM_st)*, bio_st*, void*) @nogc nothrow;
    int ASN1_i2d_bio(int function(void*, ubyte**), bio_st*, ubyte*) @nogc nothrow;
    int __sigsetjmp(__jmp_buf_tag*, int) @nogc nothrow;
    int ASN1_item_i2d_bio(const(ASN1_ITEM_st)*, bio_st*, void*) @nogc nothrow;
    int ASN1_UTCTIME_print(bio_st*, const(asn1_string_st)*) @nogc nothrow;
    int ASN1_GENERALIZEDTIME_print(bio_st*, const(asn1_string_st)*) @nogc nothrow;
    int ASN1_TIME_print(bio_st*, const(asn1_string_st)*) @nogc nothrow;
    int ASN1_STRING_print(bio_st*, const(asn1_string_st)*) @nogc nothrow;
    int ASN1_STRING_print_ex(bio_st*, const(asn1_string_st)*, c_ulong) @nogc nothrow;
    int ASN1_buf_print(bio_st*, const(ubyte)*, c_ulong, int) @nogc nothrow;
    int ASN1_bn_print(bio_st*, const(char)*, const(bignum_st)*, ubyte*, int) @nogc nothrow;
    int ASN1_parse(bio_st*, const(ubyte)*, c_long, int) @nogc nothrow;
    int ASN1_parse_dump(bio_st*, const(ubyte)*, c_long, int, int) @nogc nothrow;
    const(char)* ASN1_tag2str(int) @nogc nothrow;
    int ASN1_UNIVERSALSTRING_to_string(asn1_string_st*) @nogc nothrow;
    int ASN1_TYPE_set_octetstring(asn1_type_st*, ubyte*, int) @nogc nothrow;
    int ASN1_TYPE_get_octetstring(const(asn1_type_st)*, ubyte*, int) @nogc nothrow;
    int ASN1_TYPE_set_int_octetstring(asn1_type_st*, c_long, ubyte*, int) @nogc nothrow;
    int ASN1_TYPE_get_int_octetstring(const(asn1_type_st)*, c_long*, ubyte*, int) @nogc nothrow;
    void* ASN1_item_unpack(const(asn1_string_st)*, const(ASN1_ITEM_st)*) @nogc nothrow;
    asn1_string_st* ASN1_item_pack(void*, const(ASN1_ITEM_st)*, asn1_string_st**) @nogc nothrow;
    void ASN1_STRING_set_default_mask(c_ulong) @nogc nothrow;
    int ASN1_STRING_set_default_mask_asc(const(char)*) @nogc nothrow;
    c_ulong ASN1_STRING_get_default_mask() @nogc nothrow;
    int ASN1_mbstring_copy(asn1_string_st**, const(ubyte)*, int, int, c_ulong) @nogc nothrow;
    int ASN1_mbstring_ncopy(asn1_string_st**, const(ubyte)*, int, int, c_ulong, c_long, c_long) @nogc nothrow;
    asn1_string_st* ASN1_STRING_set_by_NID(asn1_string_st**, const(ubyte)*, int, int, int) @nogc nothrow;
    asn1_string_table_st* ASN1_STRING_TABLE_get(int) @nogc nothrow;
    int ASN1_STRING_TABLE_add(int, c_long, c_long, c_ulong, c_ulong) @nogc nothrow;
    void ASN1_STRING_TABLE_cleanup() @nogc nothrow;
    ASN1_VALUE_st* ASN1_item_new(const(ASN1_ITEM_st)*) @nogc nothrow;
    void ASN1_item_free(ASN1_VALUE_st*, const(ASN1_ITEM_st)*) @nogc nothrow;
    ASN1_VALUE_st* ASN1_item_d2i(ASN1_VALUE_st**, const(ubyte)**, c_long, const(ASN1_ITEM_st)*) @nogc nothrow;
    int ASN1_item_i2d(ASN1_VALUE_st*, ubyte**, const(ASN1_ITEM_st)*) @nogc nothrow;
    int ASN1_item_ndef_i2d(ASN1_VALUE_st*, ubyte**, const(ASN1_ITEM_st)*) @nogc nothrow;
    void ASN1_add_oid_module() @nogc nothrow;
    void ASN1_add_stable_module() @nogc nothrow;
    asn1_type_st* ASN1_generate_nconf(const(char)*, conf_st*) @nogc nothrow;
    asn1_type_st* ASN1_generate_v3(const(char)*, v3_ext_ctx*) @nogc nothrow;
    int ASN1_str2mask(const(char)*, c_ulong*) @nogc nothrow;
    void __pthread_unwind_next(__pthread_unwind_buf_t*) @nogc nothrow;
    void __pthread_unregister_cancel(__pthread_unwind_buf_t*) @nogc nothrow;
    void __pthread_register_cancel(__pthread_unwind_buf_t*) @nogc nothrow;
    struct __pthread_cleanup_frame
    {
        void function(void*) __cancel_routine;
        void* __cancel_arg;
        int __do_it;
        int __cancel_type;
    }
    int ASN1_item_print(bio_st*, ASN1_VALUE_st*, int, const(ASN1_ITEM_st)*, const(asn1_pctx_st)*) @nogc nothrow;
    asn1_pctx_st* ASN1_PCTX_new() @nogc nothrow;
    void ASN1_PCTX_free(asn1_pctx_st*) @nogc nothrow;
    c_ulong ASN1_PCTX_get_flags(const(asn1_pctx_st)*) @nogc nothrow;
    void ASN1_PCTX_set_flags(asn1_pctx_st*, c_ulong) @nogc nothrow;
    c_ulong ASN1_PCTX_get_nm_flags(const(asn1_pctx_st)*) @nogc nothrow;
    void ASN1_PCTX_set_nm_flags(asn1_pctx_st*, c_ulong) @nogc nothrow;
    c_ulong ASN1_PCTX_get_cert_flags(const(asn1_pctx_st)*) @nogc nothrow;
    void ASN1_PCTX_set_cert_flags(asn1_pctx_st*, c_ulong) @nogc nothrow;
    c_ulong ASN1_PCTX_get_oid_flags(const(asn1_pctx_st)*) @nogc nothrow;
    void ASN1_PCTX_set_oid_flags(asn1_pctx_st*, c_ulong) @nogc nothrow;
    c_ulong ASN1_PCTX_get_str_flags(const(asn1_pctx_st)*) @nogc nothrow;
    void ASN1_PCTX_set_str_flags(asn1_pctx_st*, c_ulong) @nogc nothrow;
    asn1_sctx_st* ASN1_SCTX_new(int function(asn1_sctx_st*)) @nogc nothrow;
    void ASN1_SCTX_free(asn1_sctx_st*) @nogc nothrow;
    const(ASN1_ITEM_st)* ASN1_SCTX_get_item(asn1_sctx_st*) @nogc nothrow;
    const(ASN1_TEMPLATE_st)* ASN1_SCTX_get_template(asn1_sctx_st*) @nogc nothrow;
    c_ulong ASN1_SCTX_get_flags(asn1_sctx_st*) @nogc nothrow;
    void ASN1_SCTX_set_app_data(asn1_sctx_st*, void*) @nogc nothrow;
    void* ASN1_SCTX_get_app_data(asn1_sctx_st*) @nogc nothrow;
    const(bio_method_st)* BIO_f_asn1() @nogc nothrow;
    bio_st* BIO_new_NDEF(bio_st*, ASN1_VALUE_st*, const(ASN1_ITEM_st)*) @nogc nothrow;
    int i2d_ASN1_bio_stream(bio_st*, ASN1_VALUE_st*, bio_st*, int, const(ASN1_ITEM_st)*) @nogc nothrow;
    int PEM_write_bio_ASN1_stream(bio_st*, ASN1_VALUE_st*, bio_st*, int, const(char)*, const(ASN1_ITEM_st)*) @nogc nothrow;
    int SMIME_write_ASN1(bio_st*, ASN1_VALUE_st*, bio_st*, int, int, int, stack_st_X509_ALGOR*, const(ASN1_ITEM_st)*) @nogc nothrow;
    ASN1_VALUE_st* SMIME_read_ASN1(bio_st*, bio_st**, const(ASN1_ITEM_st)*) @nogc nothrow;
    int SMIME_crlf_copy(bio_st*, bio_st*, int) @nogc nothrow;
    int SMIME_text(bio_st*, bio_st*) @nogc nothrow;
    const(ASN1_ITEM_st)* ASN1_ITEM_lookup(const(char)*) @nogc nothrow;
    const(ASN1_ITEM_st)* ASN1_ITEM_get(c_ulong) @nogc nothrow;
    int ERR_load_ASN1_strings() @nogc nothrow;
    struct __pthread_unwind_buf_t
    {
        __cancel_jmp_buf_tag[1] __cancel_jmp_buf;
        void*[4] __pad;
    }
    struct __cancel_jmp_buf_tag
    {
        c_long[8] __cancel_jmp_buf;
        int __mask_was_saved;
    }
    void pthread_testcancel() @nogc nothrow;
    int pthread_cancel(c_ulong) @nogc nothrow;
    int pthread_setcanceltype(int, int*) @nogc nothrow;
    int pthread_setcancelstate(int, int*) @nogc nothrow;
    int pthread_once(int*, void function()) @nogc nothrow;
    int pthread_setschedprio(c_ulong, int) @nogc nothrow;
    int pthread_getschedparam(c_ulong, int*, sched_param*) @nogc nothrow;
    int pthread_setschedparam(c_ulong, int, const(sched_param)*) @nogc nothrow;
    int pthread_attr_setstack(pthread_attr_t*, void*, c_ulong) @nogc nothrow;
    int pthread_attr_getstack(const(pthread_attr_t)*, void**, c_ulong*) @nogc nothrow;
    int pthread_attr_setstacksize(pthread_attr_t*, c_ulong) @nogc nothrow;
    int pthread_attr_getstacksize(const(pthread_attr_t)*, c_ulong*) @nogc nothrow;
    int pthread_attr_setstackaddr(pthread_attr_t*, void*) @nogc nothrow;
    int pthread_attr_getstackaddr(const(pthread_attr_t)*, void**) @nogc nothrow;
    int pthread_attr_setscope(pthread_attr_t*, int) @nogc nothrow;
    int pthread_attr_getscope(const(pthread_attr_t)*, int*) @nogc nothrow;
    int pthread_attr_setinheritsched(pthread_attr_t*, int) @nogc nothrow;
    int pthread_attr_getinheritsched(const(pthread_attr_t)*, int*) @nogc nothrow;
    int pthread_attr_setschedpolicy(pthread_attr_t*, int) @nogc nothrow;
    int pthread_attr_getschedpolicy(const(pthread_attr_t)*, int*) @nogc nothrow;
    int pthread_attr_setschedparam(pthread_attr_t*, const(sched_param)*) @nogc nothrow;
    int pthread_attr_getschedparam(const(pthread_attr_t)*, sched_param*) @nogc nothrow;
    int pthread_attr_setguardsize(pthread_attr_t*, c_ulong) @nogc nothrow;
    int pthread_attr_getguardsize(const(pthread_attr_t)*, c_ulong*) @nogc nothrow;
    int pthread_attr_setdetachstate(pthread_attr_t*, int) @nogc nothrow;
    int pthread_attr_getdetachstate(const(pthread_attr_t)*, int*) @nogc nothrow;
    int pthread_attr_destroy(pthread_attr_t*) @nogc nothrow;
    int pthread_attr_init(pthread_attr_t*) @nogc nothrow;
    int pthread_equal(c_ulong, c_ulong) @nogc nothrow;
    c_ulong pthread_self() @nogc nothrow;
    int pthread_detach(c_ulong) @nogc nothrow;
    int pthread_join(c_ulong, void**) @nogc nothrow;
    void pthread_exit(void*) @nogc nothrow;
    int pthread_create(c_ulong*, const(pthread_attr_t)*, void* function(void*), void*) @nogc nothrow;
    enum _Anonymous_8
    {
        PTHREAD_CANCEL_DEFERRED = 0,
        PTHREAD_CANCEL_ASYNCHRONOUS = 1,
    }
    enum PTHREAD_CANCEL_DEFERRED = _Anonymous_8.PTHREAD_CANCEL_DEFERRED;
    enum PTHREAD_CANCEL_ASYNCHRONOUS = _Anonymous_8.PTHREAD_CANCEL_ASYNCHRONOUS;
    enum _Anonymous_9
    {
        PTHREAD_CANCEL_ENABLE = 0,
        PTHREAD_CANCEL_DISABLE = 1,
    }
    enum PTHREAD_CANCEL_ENABLE = _Anonymous_9.PTHREAD_CANCEL_ENABLE;
    enum PTHREAD_CANCEL_DISABLE = _Anonymous_9.PTHREAD_CANCEL_DISABLE;
    struct _pthread_cleanup_buffer
    {
        void function(void*) __routine;
        void* __arg;
        int __canceltype;
        _pthread_cleanup_buffer* __prev;
    }
    enum _Anonymous_10
    {
        PTHREAD_PROCESS_PRIVATE = 0,
        PTHREAD_PROCESS_SHARED = 1,
    }
    enum PTHREAD_PROCESS_PRIVATE = _Anonymous_10.PTHREAD_PROCESS_PRIVATE;
    enum PTHREAD_PROCESS_SHARED = _Anonymous_10.PTHREAD_PROCESS_SHARED;
    enum _Anonymous_11
    {
        PTHREAD_SCOPE_SYSTEM = 0,
        PTHREAD_SCOPE_PROCESS = 1,
    }
    enum PTHREAD_SCOPE_SYSTEM = _Anonymous_11.PTHREAD_SCOPE_SYSTEM;
    enum PTHREAD_SCOPE_PROCESS = _Anonymous_11.PTHREAD_SCOPE_PROCESS;
    enum _Anonymous_12
    {
        PTHREAD_INHERIT_SCHED = 0,
        PTHREAD_EXPLICIT_SCHED = 1,
    }
    enum PTHREAD_INHERIT_SCHED = _Anonymous_12.PTHREAD_INHERIT_SCHED;
    enum PTHREAD_EXPLICIT_SCHED = _Anonymous_12.PTHREAD_EXPLICIT_SCHED;
    enum _Anonymous_13
    {
        PTHREAD_RWLOCK_PREFER_READER_NP = 0,
        PTHREAD_RWLOCK_PREFER_WRITER_NP = 1,
        PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP = 2,
        PTHREAD_RWLOCK_DEFAULT_NP = 0,
    }
    enum PTHREAD_RWLOCK_PREFER_READER_NP = _Anonymous_13.PTHREAD_RWLOCK_PREFER_READER_NP;
    enum PTHREAD_RWLOCK_PREFER_WRITER_NP = _Anonymous_13.PTHREAD_RWLOCK_PREFER_WRITER_NP;
    enum PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP = _Anonymous_13.PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP;
    enum PTHREAD_RWLOCK_DEFAULT_NP = _Anonymous_13.PTHREAD_RWLOCK_DEFAULT_NP;
    enum _Anonymous_14
    {
        PTHREAD_PRIO_NONE = 0,
        PTHREAD_PRIO_INHERIT = 1,
        PTHREAD_PRIO_PROTECT = 2,
    }
    enum PTHREAD_PRIO_NONE = _Anonymous_14.PTHREAD_PRIO_NONE;
    enum PTHREAD_PRIO_INHERIT = _Anonymous_14.PTHREAD_PRIO_INHERIT;
    enum PTHREAD_PRIO_PROTECT = _Anonymous_14.PTHREAD_PRIO_PROTECT;
    enum _Anonymous_15
    {
        PTHREAD_MUTEX_STALLED = 0,
        PTHREAD_MUTEX_STALLED_NP = 0,
        PTHREAD_MUTEX_ROBUST = 1,
        PTHREAD_MUTEX_ROBUST_NP = 1,
    }
    enum PTHREAD_MUTEX_STALLED = _Anonymous_15.PTHREAD_MUTEX_STALLED;
    enum PTHREAD_MUTEX_STALLED_NP = _Anonymous_15.PTHREAD_MUTEX_STALLED_NP;
    enum PTHREAD_MUTEX_ROBUST = _Anonymous_15.PTHREAD_MUTEX_ROBUST;
    enum PTHREAD_MUTEX_ROBUST_NP = _Anonymous_15.PTHREAD_MUTEX_ROBUST_NP;
    enum _Anonymous_16
    {
        PTHREAD_MUTEX_TIMED_NP = 0,
        PTHREAD_MUTEX_RECURSIVE_NP = 1,
        PTHREAD_MUTEX_ERRORCHECK_NP = 2,
        PTHREAD_MUTEX_ADAPTIVE_NP = 3,
        PTHREAD_MUTEX_NORMAL = 0,
        PTHREAD_MUTEX_RECURSIVE = 1,
        PTHREAD_MUTEX_ERRORCHECK = 2,
        PTHREAD_MUTEX_DEFAULT = 0,
    }
    enum PTHREAD_MUTEX_TIMED_NP = _Anonymous_16.PTHREAD_MUTEX_TIMED_NP;
    enum PTHREAD_MUTEX_RECURSIVE_NP = _Anonymous_16.PTHREAD_MUTEX_RECURSIVE_NP;
    enum PTHREAD_MUTEX_ERRORCHECK_NP = _Anonymous_16.PTHREAD_MUTEX_ERRORCHECK_NP;
    enum PTHREAD_MUTEX_ADAPTIVE_NP = _Anonymous_16.PTHREAD_MUTEX_ADAPTIVE_NP;
    enum PTHREAD_MUTEX_NORMAL = _Anonymous_16.PTHREAD_MUTEX_NORMAL;
    enum PTHREAD_MUTEX_RECURSIVE = _Anonymous_16.PTHREAD_MUTEX_RECURSIVE;
    enum PTHREAD_MUTEX_ERRORCHECK = _Anonymous_16.PTHREAD_MUTEX_ERRORCHECK;
    enum PTHREAD_MUTEX_DEFAULT = _Anonymous_16.PTHREAD_MUTEX_DEFAULT;
    enum _Anonymous_17
    {
        PTHREAD_CREATE_JOINABLE = 0,
        PTHREAD_CREATE_DETACHED = 1,
    }
    enum PTHREAD_CREATE_JOINABLE = _Anonymous_17.PTHREAD_CREATE_JOINABLE;
    enum PTHREAD_CREATE_DETACHED = _Anonymous_17.PTHREAD_CREATE_DETACHED;
    int ERR_load_X509V3_strings() @nogc nothrow;
    void PROFESSION_INFO_set0_registrationNumber(ProfessionInfo_st*, asn1_string_st*) @nogc nothrow;
    const(asn1_string_st)* PROFESSION_INFO_get0_registrationNumber(const(ProfessionInfo_st)*) @nogc nothrow;
    void PROFESSION_INFO_set0_professionOIDs(ProfessionInfo_st*, stack_st_ASN1_OBJECT*) @nogc nothrow;
    const(stack_st_ASN1_OBJECT)* PROFESSION_INFO_get0_professionOIDs(const(ProfessionInfo_st)*) @nogc nothrow;
    void PROFESSION_INFO_set0_professionItems(ProfessionInfo_st*, stack_st_ASN1_STRING*) @nogc nothrow;
    const(stack_st_ASN1_STRING)* PROFESSION_INFO_get0_professionItems(const(ProfessionInfo_st)*) @nogc nothrow;
    void PROFESSION_INFO_set0_namingAuthority(ProfessionInfo_st*, NamingAuthority_st*) @nogc nothrow;
    const(NamingAuthority_st)* PROFESSION_INFO_get0_namingAuthority(const(ProfessionInfo_st)*) @nogc nothrow;
    void PROFESSION_INFO_set0_addProfessionInfo(ProfessionInfo_st*, asn1_string_st*) @nogc nothrow;
    const(asn1_string_st)* PROFESSION_INFO_get0_addProfessionInfo(const(ProfessionInfo_st)*) @nogc nothrow;
    void ADMISSIONS_set0_professionInfos(Admissions_st*, stack_st_PROFESSION_INFO*) @nogc nothrow;
    const(stack_st_PROFESSION_INFO)* ADMISSIONS_get0_professionInfos(const(Admissions_st)*) @nogc nothrow;
    void ADMISSIONS_set0_namingAuthority(Admissions_st*, NamingAuthority_st*) @nogc nothrow;
    const(NamingAuthority_st)* ADMISSIONS_get0_namingAuthority(const(Admissions_st)*) @nogc nothrow;
    void ADMISSIONS_set0_admissionAuthority(Admissions_st*, GENERAL_NAME_st*) @nogc nothrow;
    const(GENERAL_NAME_st)* ADMISSIONS_get0_admissionAuthority(const(Admissions_st)*) @nogc nothrow;
    void ADMISSION_SYNTAX_set0_contentsOfAdmissions(AdmissionSyntax_st*, stack_st_ADMISSIONS*) @nogc nothrow;
    const(stack_st_ADMISSIONS)* ADMISSION_SYNTAX_get0_contentsOfAdmissions(const(AdmissionSyntax_st)*) @nogc nothrow;
    void ADMISSION_SYNTAX_set0_admissionAuthority(AdmissionSyntax_st*, GENERAL_NAME_st*) @nogc nothrow;
    const(GENERAL_NAME_st)* ADMISSION_SYNTAX_get0_admissionAuthority(const(AdmissionSyntax_st)*) @nogc nothrow;
    void NAMING_AUTHORITY_set0_authorityText(NamingAuthority_st*, asn1_string_st*) @nogc nothrow;
    void NAMING_AUTHORITY_set0_authorityURL(NamingAuthority_st*, asn1_string_st*) @nogc nothrow;
    void NAMING_AUTHORITY_set0_authorityId(NamingAuthority_st*, asn1_object_st*) @nogc nothrow;
    const(asn1_string_st)* NAMING_AUTHORITY_get0_authorityText(const(NamingAuthority_st)*) @nogc nothrow;
    const(asn1_string_st)* NAMING_AUTHORITY_get0_authorityURL(const(NamingAuthority_st)*) @nogc nothrow;
    const(asn1_object_st)* NAMING_AUTHORITY_get0_authorityId(const(NamingAuthority_st)*) @nogc nothrow;
    alias PROFESSION_INFOS = stack_st_PROFESSION_INFO;
    static stack_st_PROFESSION_INFO* sk_PROFESSION_INFO_new_null() @nogc nothrow;
    static void sk_PROFESSION_INFO_sort(stack_st_PROFESSION_INFO*) @nogc nothrow;
    static int sk_PROFESSION_INFO_find_ex(stack_st_PROFESSION_INFO*, ProfessionInfo_st*) @nogc nothrow;
    static int sk_PROFESSION_INFO_find(stack_st_PROFESSION_INFO*, ProfessionInfo_st*) @nogc nothrow;
    static ProfessionInfo_st* sk_PROFESSION_INFO_set(stack_st_PROFESSION_INFO*, int, ProfessionInfo_st*) @nogc nothrow;
    static int sk_PROFESSION_INFO_insert(stack_st_PROFESSION_INFO*, ProfessionInfo_st*, int) @nogc nothrow;
    static void sk_PROFESSION_INFO_pop_free(stack_st_PROFESSION_INFO*, void function(ProfessionInfo_st*)) @nogc nothrow;
    static ProfessionInfo_st* sk_PROFESSION_INFO_pop(stack_st_PROFESSION_INFO*) @nogc nothrow;
    static int sk_PROFESSION_INFO_unshift(stack_st_PROFESSION_INFO*, ProfessionInfo_st*) @nogc nothrow;
    static int sk_PROFESSION_INFO_push(stack_st_PROFESSION_INFO*, ProfessionInfo_st*) @nogc nothrow;
    static ProfessionInfo_st* sk_PROFESSION_INFO_delete_ptr(stack_st_PROFESSION_INFO*, ProfessionInfo_st*) @nogc nothrow;
    static ProfessionInfo_st* sk_PROFESSION_INFO_delete(stack_st_PROFESSION_INFO*, int) @nogc nothrow;
    static void sk_PROFESSION_INFO_zero(stack_st_PROFESSION_INFO*) @nogc nothrow;
    static void sk_PROFESSION_INFO_free(stack_st_PROFESSION_INFO*) @nogc nothrow;
    static int sk_PROFESSION_INFO_reserve(stack_st_PROFESSION_INFO*, int) @nogc nothrow;
    static stack_st_PROFESSION_INFO* sk_PROFESSION_INFO_new_reserve(int function(const(const(ProfessionInfo_st)*)*, const(const(ProfessionInfo_st)*)*), int) @nogc nothrow;
    static ProfessionInfo_st* sk_PROFESSION_INFO_value(const(stack_st_PROFESSION_INFO)*, int) @nogc nothrow;
    static stack_st_PROFESSION_INFO* sk_PROFESSION_INFO_new(int function(const(const(ProfessionInfo_st)*)*, const(const(ProfessionInfo_st)*)*)) @nogc nothrow;
    static int sk_PROFESSION_INFO_is_sorted(const(stack_st_PROFESSION_INFO)*) @nogc nothrow;
    static int sk_PROFESSION_INFO_num(const(stack_st_PROFESSION_INFO)*) @nogc nothrow;
    alias sk_PROFESSION_INFO_copyfunc = ProfessionInfo_st* function(const(ProfessionInfo_st)*);
    alias sk_PROFESSION_INFO_freefunc = void function(ProfessionInfo_st*);
    alias sk_PROFESSION_INFO_compfunc = int function(const(const(ProfessionInfo_st)*)*, const(const(ProfessionInfo_st)*)*);
    struct stack_st_PROFESSION_INFO;
    static stack_st_PROFESSION_INFO* sk_PROFESSION_INFO_dup(const(stack_st_PROFESSION_INFO)*) @nogc nothrow;
    static stack_st_PROFESSION_INFO* sk_PROFESSION_INFO_deep_copy(const(stack_st_PROFESSION_INFO)*, ProfessionInfo_st* function(const(ProfessionInfo_st)*), void function(ProfessionInfo_st*)) @nogc nothrow;
    static int function(const(const(ProfessionInfo_st)*)*, const(const(ProfessionInfo_st)*)*) sk_PROFESSION_INFO_set_cmp_func(stack_st_PROFESSION_INFO*, int function(const(const(ProfessionInfo_st)*)*, const(const(ProfessionInfo_st)*)*)) @nogc nothrow;
    static ProfessionInfo_st* sk_PROFESSION_INFO_shift(stack_st_PROFESSION_INFO*) @nogc nothrow;
    alias sk_ADMISSIONS_freefunc = void function(Admissions_st*);
    alias sk_ADMISSIONS_compfunc = int function(const(const(Admissions_st)*)*, const(const(Admissions_st)*)*);
    struct stack_st_ADMISSIONS;
    alias sk_ADMISSIONS_copyfunc = Admissions_st* function(const(Admissions_st)*);
    static int sk_ADMISSIONS_num(const(stack_st_ADMISSIONS)*) @nogc nothrow;
    static Admissions_st* sk_ADMISSIONS_delete(stack_st_ADMISSIONS*, int) @nogc nothrow;
    static void sk_ADMISSIONS_zero(stack_st_ADMISSIONS*) @nogc nothrow;
    static void sk_ADMISSIONS_free(stack_st_ADMISSIONS*) @nogc nothrow;
    static int sk_ADMISSIONS_reserve(stack_st_ADMISSIONS*, int) @nogc nothrow;
    static stack_st_ADMISSIONS* sk_ADMISSIONS_new_reserve(int function(const(const(Admissions_st)*)*, const(const(Admissions_st)*)*), int) @nogc nothrow;
    static stack_st_ADMISSIONS* sk_ADMISSIONS_new_null() @nogc nothrow;
    static stack_st_ADMISSIONS* sk_ADMISSIONS_new(int function(const(const(Admissions_st)*)*, const(const(Admissions_st)*)*)) @nogc nothrow;
    static Admissions_st* sk_ADMISSIONS_value(const(stack_st_ADMISSIONS)*, int) @nogc nothrow;
    static Admissions_st* sk_ADMISSIONS_delete_ptr(stack_st_ADMISSIONS*, Admissions_st*) @nogc nothrow;
    static stack_st_ADMISSIONS* sk_ADMISSIONS_deep_copy(const(stack_st_ADMISSIONS)*, Admissions_st* function(const(Admissions_st)*), void function(Admissions_st*)) @nogc nothrow;
    static stack_st_ADMISSIONS* sk_ADMISSIONS_dup(const(stack_st_ADMISSIONS)*) @nogc nothrow;
    static int sk_ADMISSIONS_push(stack_st_ADMISSIONS*, Admissions_st*) @nogc nothrow;
    static int sk_ADMISSIONS_unshift(stack_st_ADMISSIONS*, Admissions_st*) @nogc nothrow;
    static Admissions_st* sk_ADMISSIONS_pop(stack_st_ADMISSIONS*) @nogc nothrow;
    static Admissions_st* sk_ADMISSIONS_shift(stack_st_ADMISSIONS*) @nogc nothrow;
    static void sk_ADMISSIONS_pop_free(stack_st_ADMISSIONS*, void function(Admissions_st*)) @nogc nothrow;
    static int function(const(const(Admissions_st)*)*, const(const(Admissions_st)*)*) sk_ADMISSIONS_set_cmp_func(stack_st_ADMISSIONS*, int function(const(const(Admissions_st)*)*, const(const(Admissions_st)*)*)) @nogc nothrow;
    static int sk_ADMISSIONS_is_sorted(const(stack_st_ADMISSIONS)*) @nogc nothrow;
    static void sk_ADMISSIONS_sort(stack_st_ADMISSIONS*) @nogc nothrow;
    static int sk_ADMISSIONS_find_ex(stack_st_ADMISSIONS*, Admissions_st*) @nogc nothrow;
    static int sk_ADMISSIONS_find(stack_st_ADMISSIONS*, Admissions_st*) @nogc nothrow;
    static Admissions_st* sk_ADMISSIONS_set(stack_st_ADMISSIONS*, int, Admissions_st*) @nogc nothrow;
    static int sk_ADMISSIONS_insert(stack_st_ADMISSIONS*, Admissions_st*, int) @nogc nothrow;
    AdmissionSyntax_st* ADMISSION_SYNTAX_new() @nogc nothrow;
    AdmissionSyntax_st* d2i_ADMISSION_SYNTAX(AdmissionSyntax_st**, const(ubyte)**, c_long) @nogc nothrow;
    void ADMISSION_SYNTAX_free(AdmissionSyntax_st*) @nogc nothrow;
    int i2d_ADMISSION_SYNTAX(AdmissionSyntax_st*, ubyte**) @nogc nothrow;
    Admissions_st* ADMISSIONS_new() @nogc nothrow;
    Admissions_st* d2i_ADMISSIONS(Admissions_st**, const(ubyte)**, c_long) @nogc nothrow;
    void ADMISSIONS_free(Admissions_st*) @nogc nothrow;
    int i2d_ADMISSIONS(Admissions_st*, ubyte**) @nogc nothrow;
    ProfessionInfo_st* PROFESSION_INFO_new() @nogc nothrow;
    ProfessionInfo_st* d2i_PROFESSION_INFO(ProfessionInfo_st**, const(ubyte)**, c_long) @nogc nothrow;
    void PROFESSION_INFO_free(ProfessionInfo_st*) @nogc nothrow;
    int i2d_PROFESSION_INFO(ProfessionInfo_st*, ubyte**) @nogc nothrow;
    NamingAuthority_st* NAMING_AUTHORITY_new() @nogc nothrow;
    NamingAuthority_st* d2i_NAMING_AUTHORITY(NamingAuthority_st**, const(ubyte)**, c_long) @nogc nothrow;
    void NAMING_AUTHORITY_free(NamingAuthority_st*) @nogc nothrow;
    int i2d_NAMING_AUTHORITY(NamingAuthority_st*, ubyte**) @nogc nothrow;
    struct AdmissionSyntax_st;
    alias ADMISSION_SYNTAX = AdmissionSyntax_st;
    struct Admissions_st;
    alias ADMISSIONS = Admissions_st;
    struct ProfessionInfo_st;
    alias PROFESSION_INFO = ProfessionInfo_st;
    struct NamingAuthority_st;
    alias NAMING_AUTHORITY = NamingAuthority_st;
    static int sk_ASN1_STRING_reserve(stack_st_ASN1_STRING*, int) @nogc nothrow;
    static int sk_ASN1_STRING_push(stack_st_ASN1_STRING*, asn1_string_st*) @nogc nothrow;
    static asn1_string_st* sk_ASN1_STRING_delete_ptr(stack_st_ASN1_STRING*, asn1_string_st*) @nogc nothrow;
    static asn1_string_st* sk_ASN1_STRING_delete(stack_st_ASN1_STRING*, int) @nogc nothrow;
    static void sk_ASN1_STRING_zero(stack_st_ASN1_STRING*) @nogc nothrow;
    static void sk_ASN1_STRING_free(stack_st_ASN1_STRING*) @nogc nothrow;
    static int sk_ASN1_STRING_unshift(stack_st_ASN1_STRING*, asn1_string_st*) @nogc nothrow;
    static stack_st_ASN1_STRING* sk_ASN1_STRING_new_reserve(int function(const(const(asn1_string_st)*)*, const(const(asn1_string_st)*)*), int) @nogc nothrow;
    static stack_st_ASN1_STRING* sk_ASN1_STRING_new_null() @nogc nothrow;
    static asn1_string_st* sk_ASN1_STRING_value(const(stack_st_ASN1_STRING)*, int) @nogc nothrow;
    static int sk_ASN1_STRING_num(const(stack_st_ASN1_STRING)*) @nogc nothrow;
    alias sk_ASN1_STRING_copyfunc = asn1_string_st* function(const(asn1_string_st)*);
    alias sk_ASN1_STRING_freefunc = void function(asn1_string_st*);
    static stack_st_ASN1_STRING* sk_ASN1_STRING_deep_copy(const(stack_st_ASN1_STRING)*, asn1_string_st* function(const(asn1_string_st)*), void function(asn1_string_st*)) @nogc nothrow;
    static asn1_string_st* sk_ASN1_STRING_pop(stack_st_ASN1_STRING*) @nogc nothrow;
    static asn1_string_st* sk_ASN1_STRING_shift(stack_st_ASN1_STRING*) @nogc nothrow;
    static void sk_ASN1_STRING_pop_free(stack_st_ASN1_STRING*, void function(asn1_string_st*)) @nogc nothrow;
    static stack_st_ASN1_STRING* sk_ASN1_STRING_new(int function(const(const(asn1_string_st)*)*, const(const(asn1_string_st)*)*)) @nogc nothrow;
    static asn1_string_st* sk_ASN1_STRING_set(stack_st_ASN1_STRING*, int, asn1_string_st*) @nogc nothrow;
    static int sk_ASN1_STRING_find(stack_st_ASN1_STRING*, asn1_string_st*) @nogc nothrow;
    static int sk_ASN1_STRING_find_ex(stack_st_ASN1_STRING*, asn1_string_st*) @nogc nothrow;
    static void sk_ASN1_STRING_sort(stack_st_ASN1_STRING*) @nogc nothrow;
    static int sk_ASN1_STRING_is_sorted(const(stack_st_ASN1_STRING)*) @nogc nothrow;
    static stack_st_ASN1_STRING* sk_ASN1_STRING_dup(const(stack_st_ASN1_STRING)*) @nogc nothrow;
    alias sk_ASN1_STRING_compfunc = int function(const(const(asn1_string_st)*)*, const(const(asn1_string_st)*)*);
    static int function(const(const(asn1_string_st)*)*, const(const(asn1_string_st)*)*) sk_ASN1_STRING_set_cmp_func(stack_st_ASN1_STRING*, int function(const(const(asn1_string_st)*)*, const(const(asn1_string_st)*)*)) @nogc nothrow;
    static int sk_ASN1_STRING_insert(stack_st_ASN1_STRING*, asn1_string_st*, int) @nogc nothrow;
    struct stack_st_ASN1_STRING;
    int X509v3_addr_validate_resource_set(stack_st_X509*, stack_st_IPAddressFamily*, int) @nogc nothrow;
    int X509v3_asid_validate_resource_set(stack_st_X509*, ASIdentifiers_st*, int) @nogc nothrow;
    int X509v3_addr_validate_path(x509_store_ctx_st*) @nogc nothrow;
    int X509v3_asid_validate_path(x509_store_ctx_st*) @nogc nothrow;
    int X509v3_addr_subset(stack_st_IPAddressFamily*, stack_st_IPAddressFamily*) @nogc nothrow;
    int X509v3_asid_subset(ASIdentifiers_st*, ASIdentifiers_st*) @nogc nothrow;
    int X509v3_addr_inherits(stack_st_IPAddressFamily*) @nogc nothrow;
    int X509v3_asid_inherits(ASIdentifiers_st*) @nogc nothrow;
    int X509v3_addr_canonize(stack_st_IPAddressFamily*) @nogc nothrow;
    int X509v3_asid_canonize(ASIdentifiers_st*) @nogc nothrow;
    int X509v3_addr_is_canonical(stack_st_IPAddressFamily*) @nogc nothrow;
    int X509v3_asid_is_canonical(ASIdentifiers_st*) @nogc nothrow;
    int X509v3_addr_get_range(IPAddressOrRange_st*, const(uint), ubyte*, ubyte*, const(int)) @nogc nothrow;
    uint X509v3_addr_get_afi(const(IPAddressFamily_st)*) @nogc nothrow;
    int X509v3_addr_add_range(stack_st_IPAddressFamily*, const(uint), const(uint)*, ubyte*, ubyte*) @nogc nothrow;
    int X509v3_addr_add_prefix(stack_st_IPAddressFamily*, const(uint), const(uint)*, ubyte*, const(int)) @nogc nothrow;
    int X509v3_addr_add_inherit(stack_st_IPAddressFamily*, const(uint), const(uint)*) @nogc nothrow;
    int X509v3_asid_add_id_or_range(ASIdentifiers_st*, int, asn1_string_st*, asn1_string_st*) @nogc nothrow;
    int X509v3_asid_add_inherit(ASIdentifiers_st*, int) @nogc nothrow;
    IPAddressFamily_st* d2i_IPAddressFamily(IPAddressFamily_st**, const(ubyte)**, c_long) @nogc nothrow;
    IPAddressFamily_st* IPAddressFamily_new() @nogc nothrow;
    void IPAddressFamily_free(IPAddressFamily_st*) @nogc nothrow;
    int i2d_IPAddressFamily(IPAddressFamily_st*, ubyte**) @nogc nothrow;
    IPAddressChoice_st* d2i_IPAddressChoice(IPAddressChoice_st**, const(ubyte)**, c_long) @nogc nothrow;
    IPAddressChoice_st* IPAddressChoice_new() @nogc nothrow;
    int i2d_IPAddressChoice(IPAddressChoice_st*, ubyte**) @nogc nothrow;
    void IPAddressChoice_free(IPAddressChoice_st*) @nogc nothrow;
    IPAddressOrRange_st* d2i_IPAddressOrRange(IPAddressOrRange_st**, const(ubyte)**, c_long) @nogc nothrow;
    alias BIO_ADDR = bio_addr_st;
    union bio_addr_st;
    alias BIO_ADDRINFO = bio_addrinfo_st;
    struct bio_addrinfo_st;
    int BIO_get_new_index() @nogc nothrow;
    void BIO_set_flags(bio_st*, int) @nogc nothrow;
    int BIO_test_flags(const(bio_st)*, int) @nogc nothrow;
    void BIO_clear_flags(bio_st*, int) @nogc nothrow;
    IPAddressOrRange_st* IPAddressOrRange_new() @nogc nothrow;
    void IPAddressOrRange_free(IPAddressOrRange_st*) @nogc nothrow;
    int i2d_IPAddressOrRange(IPAddressOrRange_st*, ubyte**) @nogc nothrow;
    IPAddressRange_st* IPAddressRange_new() @nogc nothrow;
    IPAddressRange_st* d2i_IPAddressRange(IPAddressRange_st**, const(ubyte)**, c_long) @nogc nothrow;
    void IPAddressRange_free(IPAddressRange_st*) @nogc nothrow;
    int i2d_IPAddressRange(IPAddressRange_st*, ubyte**) @nogc nothrow;
    static void sk_IPAddressFamily_free(stack_st_IPAddressFamily*) @nogc nothrow;
    static int function(const(const(IPAddressFamily_st)*)*, const(const(IPAddressFamily_st)*)*) sk_IPAddressFamily_set_cmp_func(stack_st_IPAddressFamily*, int function(const(const(IPAddressFamily_st)*)*, const(const(IPAddressFamily_st)*)*)) @nogc nothrow;
    static stack_st_IPAddressFamily* sk_IPAddressFamily_deep_copy(const(stack_st_IPAddressFamily)*, IPAddressFamily_st* function(const(IPAddressFamily_st)*), void function(IPAddressFamily_st*)) @nogc nothrow;
    static stack_st_IPAddressFamily* sk_IPAddressFamily_dup(const(stack_st_IPAddressFamily)*) @nogc nothrow;
    alias sk_IPAddressFamily_compfunc = int function(const(const(IPAddressFamily_st)*)*, const(const(IPAddressFamily_st)*)*);
    alias sk_IPAddressFamily_freefunc = void function(IPAddressFamily_st*);
    alias sk_IPAddressFamily_copyfunc = IPAddressFamily_st* function(const(IPAddressFamily_st)*);
    static int sk_IPAddressFamily_num(const(stack_st_IPAddressFamily)*) @nogc nothrow;
    static IPAddressFamily_st* sk_IPAddressFamily_value(const(stack_st_IPAddressFamily)*, int) @nogc nothrow;
    static stack_st_IPAddressFamily* sk_IPAddressFamily_new(int function(const(const(IPAddressFamily_st)*)*, const(const(IPAddressFamily_st)*)*)) @nogc nothrow;
    static stack_st_IPAddressFamily* sk_IPAddressFamily_new_null() @nogc nothrow;
    static void sk_IPAddressFamily_zero(stack_st_IPAddressFamily*) @nogc nothrow;
    alias BIO_callback_fn = c_long function(bio_st*, int, const(char)*, int, c_long, c_long);
    alias BIO_callback_fn_ex = c_long function(bio_st*, int, const(char)*, c_ulong, int, c_long, int, c_ulong*);
    c_long function(bio_st*, int, const(char)*, int, c_long, c_long) BIO_get_callback(const(bio_st)*) @nogc nothrow;
    void BIO_set_callback(bio_st*, c_long function(bio_st*, int, const(char)*, int, c_long, c_long)) @nogc nothrow;
    c_long function(bio_st*, int, const(char)*, c_ulong, int, c_long, int, c_ulong*) BIO_get_callback_ex(const(bio_st)*) @nogc nothrow;
    void BIO_set_callback_ex(bio_st*, c_long function(bio_st*, int, const(char)*, c_ulong, int, c_long, int, c_ulong*)) @nogc nothrow;
    char* BIO_get_callback_arg(const(bio_st)*) @nogc nothrow;
    void BIO_set_callback_arg(bio_st*, char*) @nogc nothrow;
    alias BIO_METHOD = bio_method_st;
    struct bio_method_st;
    const(char)* BIO_method_name(const(bio_st)*) @nogc nothrow;
    int BIO_method_type(const(bio_st)*) @nogc nothrow;
    alias BIO_info_cb = int function(bio_st*, int, int);
    alias bio_info_cb = int function(bio_st*, int, int);
    static int function(const(const(bio_st)*)*, const(const(bio_st)*)*) sk_BIO_set_cmp_func(stack_st_BIO*, int function(const(const(bio_st)*)*, const(const(bio_st)*)*)) @nogc nothrow;
    static stack_st_BIO* sk_BIO_new_null() @nogc nothrow;
    static stack_st_BIO* sk_BIO_new(int function(const(const(bio_st)*)*, const(const(bio_st)*)*)) @nogc nothrow;
    static bio_st* sk_BIO_value(const(stack_st_BIO)*, int) @nogc nothrow;
    static int sk_BIO_num(const(stack_st_BIO)*) @nogc nothrow;
    alias sk_BIO_copyfunc = bio_st* function(const(bio_st)*);
    alias sk_BIO_freefunc = void function(bio_st*);
    alias sk_BIO_compfunc = int function(const(const(bio_st)*)*, const(const(bio_st)*)*);
    struct stack_st_BIO;
    static stack_st_BIO* sk_BIO_new_reserve(int function(const(const(bio_st)*)*, const(const(bio_st)*)*), int) @nogc nothrow;
    static int sk_BIO_reserve(stack_st_BIO*, int) @nogc nothrow;
    static void sk_BIO_free(stack_st_BIO*) @nogc nothrow;
    static void sk_BIO_zero(stack_st_BIO*) @nogc nothrow;
    static bio_st* sk_BIO_delete(stack_st_BIO*, int) @nogc nothrow;
    static bio_st* sk_BIO_delete_ptr(stack_st_BIO*, bio_st*) @nogc nothrow;
    static int sk_BIO_push(stack_st_BIO*, bio_st*) @nogc nothrow;
    static int sk_BIO_unshift(stack_st_BIO*, bio_st*) @nogc nothrow;
    static bio_st* sk_BIO_pop(stack_st_BIO*) @nogc nothrow;
    static bio_st* sk_BIO_shift(stack_st_BIO*) @nogc nothrow;
    static void sk_BIO_pop_free(stack_st_BIO*, void function(bio_st*)) @nogc nothrow;
    static int sk_BIO_insert(stack_st_BIO*, bio_st*, int) @nogc nothrow;
    static bio_st* sk_BIO_set(stack_st_BIO*, int, bio_st*) @nogc nothrow;
    static int sk_BIO_find(stack_st_BIO*, bio_st*) @nogc nothrow;
    static int sk_BIO_find_ex(stack_st_BIO*, bio_st*) @nogc nothrow;
    static stack_st_BIO* sk_BIO_deep_copy(const(stack_st_BIO)*, bio_st* function(const(bio_st)*), void function(bio_st*)) @nogc nothrow;
    static stack_st_BIO* sk_BIO_dup(const(stack_st_BIO)*) @nogc nothrow;
    static int sk_BIO_is_sorted(const(stack_st_BIO)*) @nogc nothrow;
    static void sk_BIO_sort(stack_st_BIO*) @nogc nothrow;
    alias asn1_ps_func = int function(bio_st*, ubyte**, int*, void*);
    static int sk_IPAddressFamily_reserve(stack_st_IPAddressFamily*, int) @nogc nothrow;
    static stack_st_IPAddressFamily* sk_IPAddressFamily_new_reserve(int function(const(const(IPAddressFamily_st)*)*, const(const(IPAddressFamily_st)*)*), int) @nogc nothrow;
    static int sk_IPAddressFamily_is_sorted(const(stack_st_IPAddressFamily)*) @nogc nothrow;
    static IPAddressFamily_st* sk_IPAddressFamily_delete(stack_st_IPAddressFamily*, int) @nogc nothrow;
    static IPAddressFamily_st* sk_IPAddressFamily_delete_ptr(stack_st_IPAddressFamily*, IPAddressFamily_st*) @nogc nothrow;
    static int sk_IPAddressFamily_push(stack_st_IPAddressFamily*, IPAddressFamily_st*) @nogc nothrow;
    static int sk_IPAddressFamily_unshift(stack_st_IPAddressFamily*, IPAddressFamily_st*) @nogc nothrow;
    static IPAddressFamily_st* sk_IPAddressFamily_pop(stack_st_IPAddressFamily*) @nogc nothrow;
    static IPAddressFamily_st* sk_IPAddressFamily_shift(stack_st_IPAddressFamily*) @nogc nothrow;
    static void sk_IPAddressFamily_pop_free(stack_st_IPAddressFamily*, void function(IPAddressFamily_st*)) @nogc nothrow;
    static int sk_IPAddressFamily_insert(stack_st_IPAddressFamily*, IPAddressFamily_st*, int) @nogc nothrow;
    static IPAddressFamily_st* sk_IPAddressFamily_set(stack_st_IPAddressFamily*, int, IPAddressFamily_st*) @nogc nothrow;
    static int sk_IPAddressFamily_find(stack_st_IPAddressFamily*, IPAddressFamily_st*) @nogc nothrow;
    static void sk_IPAddressFamily_sort(stack_st_IPAddressFamily*) @nogc nothrow;
    static int sk_IPAddressFamily_find_ex(stack_st_IPAddressFamily*, IPAddressFamily_st*) @nogc nothrow;
    struct stack_st_IPAddressFamily;
    alias IPAddrBlocks = stack_st_IPAddressFamily;
    struct IPAddressFamily_st
    {
        asn1_string_st* addressFamily;
        IPAddressChoice_st* ipAddressChoice;
    }
    alias IPAddressFamily = IPAddressFamily_st;
    struct IPAddressChoice_st
    {
        int type;
        static union _Anonymous_18
        {
            int* inherit;
            stack_st_IPAddressOrRange* addressesOrRanges;
        }
        _Anonymous_18 u;
    }
    alias IPAddressChoice = IPAddressChoice_st;
    static IPAddressOrRange_st* sk_IPAddressOrRange_shift(stack_st_IPAddressOrRange*) @nogc nothrow;
    static int sk_IPAddressOrRange_unshift(stack_st_IPAddressOrRange*, IPAddressOrRange_st*) @nogc nothrow;
    static int sk_IPAddressOrRange_push(stack_st_IPAddressOrRange*, IPAddressOrRange_st*) @nogc nothrow;
    static void sk_IPAddressOrRange_pop_free(stack_st_IPAddressOrRange*, void function(IPAddressOrRange_st*)) @nogc nothrow;
    static int sk_IPAddressOrRange_insert(stack_st_IPAddressOrRange*, IPAddressOrRange_st*, int) @nogc nothrow;
    static IPAddressOrRange_st* sk_IPAddressOrRange_set(stack_st_IPAddressOrRange*, int, IPAddressOrRange_st*) @nogc nothrow;
    static int sk_IPAddressOrRange_find(stack_st_IPAddressOrRange*, IPAddressOrRange_st*) @nogc nothrow;
    static int sk_IPAddressOrRange_find_ex(stack_st_IPAddressOrRange*, IPAddressOrRange_st*) @nogc nothrow;
    static void sk_IPAddressOrRange_sort(stack_st_IPAddressOrRange*) @nogc nothrow;
    static IPAddressOrRange_st* sk_IPAddressOrRange_delete_ptr(stack_st_IPAddressOrRange*, IPAddressOrRange_st*) @nogc nothrow;
    static int sk_IPAddressOrRange_is_sorted(const(stack_st_IPAddressOrRange)*) @nogc nothrow;
    static stack_st_IPAddressOrRange* sk_IPAddressOrRange_dup(const(stack_st_IPAddressOrRange)*) @nogc nothrow;
    static stack_st_IPAddressOrRange* sk_IPAddressOrRange_deep_copy(const(stack_st_IPAddressOrRange)*, IPAddressOrRange_st* function(const(IPAddressOrRange_st)*), void function(IPAddressOrRange_st*)) @nogc nothrow;
    static int function(const(const(IPAddressOrRange_st)*)*, const(const(IPAddressOrRange_st)*)*) sk_IPAddressOrRange_set_cmp_func(stack_st_IPAddressOrRange*, int function(const(const(IPAddressOrRange_st)*)*, const(const(IPAddressOrRange_st)*)*)) @nogc nothrow;
    static IPAddressOrRange_st* sk_IPAddressOrRange_pop(stack_st_IPAddressOrRange*) @nogc nothrow;
    alias sk_IPAddressOrRange_compfunc = int function(const(const(IPAddressOrRange_st)*)*, const(const(IPAddressOrRange_st)*)*);
    alias sk_IPAddressOrRange_freefunc = void function(IPAddressOrRange_st*);
    alias sk_IPAddressOrRange_copyfunc = IPAddressOrRange_st* function(const(IPAddressOrRange_st)*);
    static int sk_IPAddressOrRange_num(const(stack_st_IPAddressOrRange)*) @nogc nothrow;
    static IPAddressOrRange_st* sk_IPAddressOrRange_value(const(stack_st_IPAddressOrRange)*, int) @nogc nothrow;
    static stack_st_IPAddressOrRange* sk_IPAddressOrRange_new(int function(const(const(IPAddressOrRange_st)*)*, const(const(IPAddressOrRange_st)*)*)) @nogc nothrow;
    static stack_st_IPAddressOrRange* sk_IPAddressOrRange_new_null() @nogc nothrow;
    static stack_st_IPAddressOrRange* sk_IPAddressOrRange_new_reserve(int function(const(const(IPAddressOrRange_st)*)*, const(const(IPAddressOrRange_st)*)*), int) @nogc nothrow;
    static int sk_IPAddressOrRange_reserve(stack_st_IPAddressOrRange*, int) @nogc nothrow;
    static void sk_IPAddressOrRange_free(stack_st_IPAddressOrRange*) @nogc nothrow;
    static void sk_IPAddressOrRange_zero(stack_st_IPAddressOrRange*) @nogc nothrow;
    static IPAddressOrRange_st* sk_IPAddressOrRange_delete(stack_st_IPAddressOrRange*, int) @nogc nothrow;
    struct stack_st_IPAddressOrRange;
    alias IPAddressOrRanges = stack_st_IPAddressOrRange;
    struct IPAddressOrRange_st
    {
        int type;
        static union _Anonymous_19
        {
            asn1_string_st* addressPrefix;
            IPAddressRange_st* addressRange;
        }
        _Anonymous_19 u;
    }
    alias IPAddressOrRange = IPAddressOrRange_st;
    struct IPAddressRange_st
    {
        asn1_string_st* min;
        asn1_string_st* max;
    }
    alias IPAddressRange = IPAddressRange_st;
    ASIdentifiers_st* d2i_ASIdentifiers(ASIdentifiers_st**, const(ubyte)**, c_long) @nogc nothrow;
    ASIdentifiers_st* ASIdentifiers_new() @nogc nothrow;
    int i2d_ASIdentifiers(ASIdentifiers_st*, ubyte**) @nogc nothrow;
    void ASIdentifiers_free(ASIdentifiers_st*) @nogc nothrow;
    ASIdentifierChoice_st* ASIdentifierChoice_new() @nogc nothrow;
    ASIdentifierChoice_st* d2i_ASIdentifierChoice(ASIdentifierChoice_st**, const(ubyte)**, c_long) @nogc nothrow;
    void ASIdentifierChoice_free(ASIdentifierChoice_st*) @nogc nothrow;
    int i2d_ASIdentifierChoice(ASIdentifierChoice_st*, ubyte**) @nogc nothrow;
    ASIdOrRange_st* ASIdOrRange_new() @nogc nothrow;
    ASIdOrRange_st* d2i_ASIdOrRange(ASIdOrRange_st**, const(ubyte)**, c_long) @nogc nothrow;
    void ASIdOrRange_free(ASIdOrRange_st*) @nogc nothrow;
    int i2d_ASIdOrRange(ASIdOrRange_st*, ubyte**) @nogc nothrow;
    ASRange_st* d2i_ASRange(ASRange_st**, const(ubyte)**, c_long) @nogc nothrow;
    ASRange_st* ASRange_new() @nogc nothrow;
    void ASRange_free(ASRange_st*) @nogc nothrow;
    int i2d_ASRange(ASRange_st*, ubyte**) @nogc nothrow;
    struct ASIdentifiers_st
    {
        ASIdentifierChoice_st* asnum;
        ASIdentifierChoice_st* rdi;
    }
    alias ASIdentifiers = ASIdentifiers_st;
    struct ASIdentifierChoice_st
    {
        int type;
        static union _Anonymous_20
        {
            int* inherit;
            stack_st_ASIdOrRange* asIdsOrRanges;
        }
        _Anonymous_20 u;
    }
    alias ASIdentifierChoice = ASIdentifierChoice_st;
    static stack_st_ASIdOrRange* sk_ASIdOrRange_new(int function(const(const(ASIdOrRange_st)*)*, const(const(ASIdOrRange_st)*)*)) @nogc nothrow;
    static stack_st_ASIdOrRange* sk_ASIdOrRange_new_null() @nogc nothrow;
    static stack_st_ASIdOrRange* sk_ASIdOrRange_new_reserve(int function(const(const(ASIdOrRange_st)*)*, const(const(ASIdOrRange_st)*)*), int) @nogc nothrow;
    static int sk_ASIdOrRange_reserve(stack_st_ASIdOrRange*, int) @nogc nothrow;
    static void sk_ASIdOrRange_free(stack_st_ASIdOrRange*) @nogc nothrow;
    static void sk_ASIdOrRange_zero(stack_st_ASIdOrRange*) @nogc nothrow;
    static ASIdOrRange_st* sk_ASIdOrRange_delete(stack_st_ASIdOrRange*, int) @nogc nothrow;
    static ASIdOrRange_st* sk_ASIdOrRange_delete_ptr(stack_st_ASIdOrRange*, ASIdOrRange_st*) @nogc nothrow;
    static int sk_ASIdOrRange_push(stack_st_ASIdOrRange*, ASIdOrRange_st*) @nogc nothrow;
    static int sk_ASIdOrRange_unshift(stack_st_ASIdOrRange*, ASIdOrRange_st*) @nogc nothrow;
    static ASIdOrRange_st* sk_ASIdOrRange_pop(stack_st_ASIdOrRange*) @nogc nothrow;
    static ASIdOrRange_st* sk_ASIdOrRange_shift(stack_st_ASIdOrRange*) @nogc nothrow;
    static void sk_ASIdOrRange_pop_free(stack_st_ASIdOrRange*, void function(ASIdOrRange_st*)) @nogc nothrow;
    static ASIdOrRange_st* sk_ASIdOrRange_value(const(stack_st_ASIdOrRange)*, int) @nogc nothrow;
    static ASIdOrRange_st* sk_ASIdOrRange_set(stack_st_ASIdOrRange*, int, ASIdOrRange_st*) @nogc nothrow;
    static int sk_ASIdOrRange_find(stack_st_ASIdOrRange*, ASIdOrRange_st*) @nogc nothrow;
    static int sk_ASIdOrRange_find_ex(stack_st_ASIdOrRange*, ASIdOrRange_st*) @nogc nothrow;
    static void sk_ASIdOrRange_sort(stack_st_ASIdOrRange*) @nogc nothrow;
    static int sk_ASIdOrRange_is_sorted(const(stack_st_ASIdOrRange)*) @nogc nothrow;
    static stack_st_ASIdOrRange* sk_ASIdOrRange_dup(const(stack_st_ASIdOrRange)*) @nogc nothrow;
    static stack_st_ASIdOrRange* sk_ASIdOrRange_deep_copy(const(stack_st_ASIdOrRange)*, ASIdOrRange_st* function(const(ASIdOrRange_st)*), void function(ASIdOrRange_st*)) @nogc nothrow;
    static int function(const(const(ASIdOrRange_st)*)*, const(const(ASIdOrRange_st)*)*) sk_ASIdOrRange_set_cmp_func(stack_st_ASIdOrRange*, int function(const(const(ASIdOrRange_st)*)*, const(const(ASIdOrRange_st)*)*)) @nogc nothrow;
    static int sk_ASIdOrRange_num(const(stack_st_ASIdOrRange)*) @nogc nothrow;
    alias sk_ASIdOrRange_copyfunc = ASIdOrRange_st* function(const(ASIdOrRange_st)*);
    alias sk_ASIdOrRange_freefunc = void function(ASIdOrRange_st*);
    static int sk_ASIdOrRange_insert(stack_st_ASIdOrRange*, ASIdOrRange_st*, int) @nogc nothrow;
    alias sk_ASIdOrRange_compfunc = int function(const(const(ASIdOrRange_st)*)*, const(const(ASIdOrRange_st)*)*);
    struct stack_st_ASIdOrRange;
    alias ASIdOrRanges = stack_st_ASIdOrRange;
    struct ASIdOrRange_st
    {
        int type;
        static union _Anonymous_21
        {
            asn1_string_st* id;
            ASRange_st* range;
        }
        _Anonymous_21 u;
    }
    alias ASIdOrRange = ASIdOrRange_st;
    struct ASRange_st
    {
        asn1_string_st* min;
        asn1_string_st* max;
    }
    c_ulong BIO_ctrl_pending(bio_st*) @nogc nothrow;
    c_ulong BIO_ctrl_wpending(bio_st*) @nogc nothrow;
    alias ASRange = ASRange_st;
    static int function(const(const(X509_POLICY_NODE_st)*)*, const(const(X509_POLICY_NODE_st)*)*) sk_X509_POLICY_NODE_set_cmp_func(stack_st_X509_POLICY_NODE*, int function(const(const(X509_POLICY_NODE_st)*)*, const(const(X509_POLICY_NODE_st)*)*)) @nogc nothrow;
    static stack_st_X509_POLICY_NODE* sk_X509_POLICY_NODE_deep_copy(const(stack_st_X509_POLICY_NODE)*, X509_POLICY_NODE_st* function(const(X509_POLICY_NODE_st)*), void function(X509_POLICY_NODE_st*)) @nogc nothrow;
    static stack_st_X509_POLICY_NODE* sk_X509_POLICY_NODE_dup(const(stack_st_X509_POLICY_NODE)*) @nogc nothrow;
    static int sk_X509_POLICY_NODE_is_sorted(const(stack_st_X509_POLICY_NODE)*) @nogc nothrow;
    static void sk_X509_POLICY_NODE_sort(stack_st_X509_POLICY_NODE*) @nogc nothrow;
    static int sk_X509_POLICY_NODE_find_ex(stack_st_X509_POLICY_NODE*, X509_POLICY_NODE_st*) @nogc nothrow;
    static int sk_X509_POLICY_NODE_find(stack_st_X509_POLICY_NODE*, X509_POLICY_NODE_st*) @nogc nothrow;
    static X509_POLICY_NODE_st* sk_X509_POLICY_NODE_set(stack_st_X509_POLICY_NODE*, int, X509_POLICY_NODE_st*) @nogc nothrow;
    static int sk_X509_POLICY_NODE_insert(stack_st_X509_POLICY_NODE*, X509_POLICY_NODE_st*, int) @nogc nothrow;
    static void sk_X509_POLICY_NODE_pop_free(stack_st_X509_POLICY_NODE*, void function(X509_POLICY_NODE_st*)) @nogc nothrow;
    static X509_POLICY_NODE_st* sk_X509_POLICY_NODE_shift(stack_st_X509_POLICY_NODE*) @nogc nothrow;
    c_ulong BIO_ctrl_get_write_guarantee(bio_st*) @nogc nothrow;
    c_ulong BIO_ctrl_get_read_request(bio_st*) @nogc nothrow;
    int BIO_ctrl_reset_read_request(bio_st*) @nogc nothrow;
    static X509_POLICY_NODE_st* sk_X509_POLICY_NODE_pop(stack_st_X509_POLICY_NODE*) @nogc nothrow;
    static int sk_X509_POLICY_NODE_unshift(stack_st_X509_POLICY_NODE*, X509_POLICY_NODE_st*) @nogc nothrow;
    static int sk_X509_POLICY_NODE_push(stack_st_X509_POLICY_NODE*, X509_POLICY_NODE_st*) @nogc nothrow;
    static X509_POLICY_NODE_st* sk_X509_POLICY_NODE_delete_ptr(stack_st_X509_POLICY_NODE*, X509_POLICY_NODE_st*) @nogc nothrow;
    static X509_POLICY_NODE_st* sk_X509_POLICY_NODE_delete(stack_st_X509_POLICY_NODE*, int) @nogc nothrow;
    static void sk_X509_POLICY_NODE_zero(stack_st_X509_POLICY_NODE*) @nogc nothrow;
    static void sk_X509_POLICY_NODE_free(stack_st_X509_POLICY_NODE*) @nogc nothrow;
    static int sk_X509_POLICY_NODE_reserve(stack_st_X509_POLICY_NODE*, int) @nogc nothrow;
    int BIO_set_ex_data(bio_st*, int, void*) @nogc nothrow;
    void* BIO_get_ex_data(bio_st*, int) @nogc nothrow;
    c_ulong BIO_number_read(bio_st*) @nogc nothrow;
    c_ulong BIO_number_written(bio_st*) @nogc nothrow;
    int BIO_asn1_set_prefix(bio_st*, int function(bio_st*, ubyte**, int*, void*), int function(bio_st*, ubyte**, int*, void*)) @nogc nothrow;
    int BIO_asn1_get_prefix(bio_st*, int function(bio_st*, ubyte**, int*, void*)*, int function(bio_st*, ubyte**, int*, void*)*) @nogc nothrow;
    int BIO_asn1_set_suffix(bio_st*, int function(bio_st*, ubyte**, int*, void*), int function(bio_st*, ubyte**, int*, void*)) @nogc nothrow;
    int BIO_asn1_get_suffix(bio_st*, int function(bio_st*, ubyte**, int*, void*)*, int function(bio_st*, ubyte**, int*, void*)*) @nogc nothrow;
    const(bio_method_st)* BIO_s_file() @nogc nothrow;
    bio_st* BIO_new_file(const(char)*, const(char)*) @nogc nothrow;
    bio_st* BIO_new_fp(_IO_FILE*, int) @nogc nothrow;
    bio_st* BIO_new(const(bio_method_st)*) @nogc nothrow;
    int BIO_free(bio_st*) @nogc nothrow;
    void BIO_set_data(bio_st*, void*) @nogc nothrow;
    void* BIO_get_data(bio_st*) @nogc nothrow;
    void BIO_set_init(bio_st*, int) @nogc nothrow;
    int BIO_get_init(bio_st*) @nogc nothrow;
    void BIO_set_shutdown(bio_st*, int) @nogc nothrow;
    int BIO_get_shutdown(bio_st*) @nogc nothrow;
    void BIO_vfree(bio_st*) @nogc nothrow;
    int BIO_up_ref(bio_st*) @nogc nothrow;
    int BIO_read(bio_st*, void*, int) @nogc nothrow;
    int BIO_read_ex(bio_st*, void*, c_ulong, c_ulong*) @nogc nothrow;
    int BIO_gets(bio_st*, char*, int) @nogc nothrow;
    int BIO_write(bio_st*, const(void)*, int) @nogc nothrow;
    int BIO_write_ex(bio_st*, const(void)*, c_ulong, c_ulong*) @nogc nothrow;
    int BIO_puts(bio_st*, const(char)*) @nogc nothrow;
    int BIO_indent(bio_st*, int, int) @nogc nothrow;
    c_long BIO_ctrl(bio_st*, int, c_long, void*) @nogc nothrow;
    c_long BIO_callback_ctrl(bio_st*, int, int function(bio_st*, int, int)) @nogc nothrow;
    void* BIO_ptr_ctrl(bio_st*, int, c_long) @nogc nothrow;
    c_long BIO_int_ctrl(bio_st*, int, c_long, int) @nogc nothrow;
    bio_st* BIO_push(bio_st*, bio_st*) @nogc nothrow;
    bio_st* BIO_pop(bio_st*) @nogc nothrow;
    void BIO_free_all(bio_st*) @nogc nothrow;
    bio_st* BIO_find_type(bio_st*, int) @nogc nothrow;
    bio_st* BIO_next(bio_st*) @nogc nothrow;
    void BIO_set_next(bio_st*, bio_st*) @nogc nothrow;
    bio_st* BIO_get_retry_BIO(bio_st*, int*) @nogc nothrow;
    int BIO_get_retry_reason(bio_st*) @nogc nothrow;
    void BIO_set_retry_reason(bio_st*, int) @nogc nothrow;
    bio_st* BIO_dup_chain(bio_st*) @nogc nothrow;
    int BIO_nread0(bio_st*, char**) @nogc nothrow;
    int BIO_nread(bio_st*, char**, int) @nogc nothrow;
    int BIO_nwrite0(bio_st*, char**) @nogc nothrow;
    int BIO_nwrite(bio_st*, char**, int) @nogc nothrow;
    c_long BIO_debug_callback(bio_st*, int, const(char)*, int, c_long, c_long) @nogc nothrow;
    const(bio_method_st)* BIO_s_mem() @nogc nothrow;
    const(bio_method_st)* BIO_s_secmem() @nogc nothrow;
    bio_st* BIO_new_mem_buf(const(void)*, int) @nogc nothrow;
    const(bio_method_st)* BIO_s_socket() @nogc nothrow;
    const(bio_method_st)* BIO_s_connect() @nogc nothrow;
    const(bio_method_st)* BIO_s_accept() @nogc nothrow;
    const(bio_method_st)* BIO_s_fd() @nogc nothrow;
    const(bio_method_st)* BIO_s_log() @nogc nothrow;
    const(bio_method_st)* BIO_s_bio() @nogc nothrow;
    const(bio_method_st)* BIO_s_null() @nogc nothrow;
    const(bio_method_st)* BIO_f_null() @nogc nothrow;
    const(bio_method_st)* BIO_f_buffer() @nogc nothrow;
    const(bio_method_st)* BIO_f_linebuffer() @nogc nothrow;
    const(bio_method_st)* BIO_f_nbio_test() @nogc nothrow;
    const(bio_method_st)* BIO_s_datagram() @nogc nothrow;
    int BIO_dgram_non_fatal_error(int) @nogc nothrow;
    bio_st* BIO_new_dgram(int, int) @nogc nothrow;
    int BIO_sock_should_retry(int) @nogc nothrow;
    int BIO_sock_non_fatal_error(int) @nogc nothrow;
    int BIO_fd_should_retry(int) @nogc nothrow;
    int BIO_fd_non_fatal_error(int) @nogc nothrow;
    int BIO_dump_cb(int function(const(void)*, c_ulong, void*), void*, const(char)*, int) @nogc nothrow;
    int BIO_dump_indent_cb(int function(const(void)*, c_ulong, void*), void*, const(char)*, int, int) @nogc nothrow;
    int BIO_dump(bio_st*, const(char)*, int) @nogc nothrow;
    int BIO_dump_indent(bio_st*, const(char)*, int, int) @nogc nothrow;
    int BIO_dump_fp(_IO_FILE*, const(char)*, int) @nogc nothrow;
    int BIO_dump_indent_fp(_IO_FILE*, const(char)*, int, int) @nogc nothrow;
    int BIO_hex_string(bio_st*, int, int, ubyte*, int) @nogc nothrow;
    bio_addr_st* BIO_ADDR_new() @nogc nothrow;
    int BIO_ADDR_rawmake(bio_addr_st*, int, const(void)*, c_ulong, ushort) @nogc nothrow;
    void BIO_ADDR_free(bio_addr_st*) @nogc nothrow;
    void BIO_ADDR_clear(bio_addr_st*) @nogc nothrow;
    int BIO_ADDR_family(const(bio_addr_st)*) @nogc nothrow;
    int BIO_ADDR_rawaddress(const(bio_addr_st)*, void*, c_ulong*) @nogc nothrow;
    ushort BIO_ADDR_rawport(const(bio_addr_st)*) @nogc nothrow;
    char* BIO_ADDR_hostname_string(const(bio_addr_st)*, int) @nogc nothrow;
    char* BIO_ADDR_service_string(const(bio_addr_st)*, int) @nogc nothrow;
    char* BIO_ADDR_path_string(const(bio_addr_st)*) @nogc nothrow;
    const(bio_addrinfo_st)* BIO_ADDRINFO_next(const(bio_addrinfo_st)*) @nogc nothrow;
    int BIO_ADDRINFO_family(const(bio_addrinfo_st)*) @nogc nothrow;
    int BIO_ADDRINFO_socktype(const(bio_addrinfo_st)*) @nogc nothrow;
    int BIO_ADDRINFO_protocol(const(bio_addrinfo_st)*) @nogc nothrow;
    const(bio_addr_st)* BIO_ADDRINFO_address(const(bio_addrinfo_st)*) @nogc nothrow;
    void BIO_ADDRINFO_free(bio_addrinfo_st*) @nogc nothrow;
    enum BIO_hostserv_priorities
    {
        BIO_PARSE_PRIO_HOST = 0,
        BIO_PARSE_PRIO_SERV = 1,
    }
    enum BIO_PARSE_PRIO_HOST = BIO_hostserv_priorities.BIO_PARSE_PRIO_HOST;
    enum BIO_PARSE_PRIO_SERV = BIO_hostserv_priorities.BIO_PARSE_PRIO_SERV;
    int BIO_parse_hostserv(const(char)*, char**, char**, BIO_hostserv_priorities) @nogc nothrow;
    enum BIO_lookup_type
    {
        BIO_LOOKUP_CLIENT = 0,
        BIO_LOOKUP_SERVER = 1,
    }
    enum BIO_LOOKUP_CLIENT = BIO_lookup_type.BIO_LOOKUP_CLIENT;
    enum BIO_LOOKUP_SERVER = BIO_lookup_type.BIO_LOOKUP_SERVER;
    int BIO_lookup(const(char)*, const(char)*, BIO_lookup_type, int, int, bio_addrinfo_st**) @nogc nothrow;
    int BIO_lookup_ex(const(char)*, const(char)*, int, int, int, int, bio_addrinfo_st**) @nogc nothrow;
    int BIO_sock_error(int) @nogc nothrow;
    int BIO_socket_ioctl(int, c_long, void*) @nogc nothrow;
    int BIO_socket_nbio(int, int) @nogc nothrow;
    int BIO_sock_init() @nogc nothrow;
    static stack_st_X509_POLICY_NODE* sk_X509_POLICY_NODE_new_reserve(int function(const(const(X509_POLICY_NODE_st)*)*, const(const(X509_POLICY_NODE_st)*)*), int) @nogc nothrow;
    int BIO_set_tcp_ndelay(int, int) @nogc nothrow;
    struct hostent;
    hostent* BIO_gethostbyname(const(char)*) @nogc nothrow;
    int BIO_get_port(const(char)*, ushort*) @nogc nothrow;
    int BIO_get_host_ip(const(char)*, ubyte*) @nogc nothrow;
    int BIO_get_accept_socket(char*, int) @nogc nothrow;
    int BIO_accept(int, char**) @nogc nothrow;
    union BIO_sock_info_u
    {
        bio_addr_st* addr;
    }
    enum BIO_sock_info_type
    {
        BIO_SOCK_INFO_ADDRESS = 0,
    }
    enum BIO_SOCK_INFO_ADDRESS = BIO_sock_info_type.BIO_SOCK_INFO_ADDRESS;
    int BIO_sock_info(int, BIO_sock_info_type, BIO_sock_info_u*) @nogc nothrow;
    static stack_st_X509_POLICY_NODE* sk_X509_POLICY_NODE_new_null() @nogc nothrow;
    static stack_st_X509_POLICY_NODE* sk_X509_POLICY_NODE_new(int function(const(const(X509_POLICY_NODE_st)*)*, const(const(X509_POLICY_NODE_st)*)*)) @nogc nothrow;
    static X509_POLICY_NODE_st* sk_X509_POLICY_NODE_value(const(stack_st_X509_POLICY_NODE)*, int) @nogc nothrow;
    static int sk_X509_POLICY_NODE_num(const(stack_st_X509_POLICY_NODE)*) @nogc nothrow;
    int BIO_socket(int, int, int, int) @nogc nothrow;
    int BIO_connect(int, const(bio_addr_st)*, int) @nogc nothrow;
    int BIO_bind(int, const(bio_addr_st)*, int) @nogc nothrow;
    int BIO_listen(int, const(bio_addr_st)*, int) @nogc nothrow;
    int BIO_accept_ex(int, bio_addr_st*, int) @nogc nothrow;
    int BIO_closesocket(int) @nogc nothrow;
    bio_st* BIO_new_socket(int, int) @nogc nothrow;
    bio_st* BIO_new_connect(const(char)*) @nogc nothrow;
    bio_st* BIO_new_accept(const(char)*) @nogc nothrow;
    bio_st* BIO_new_fd(int, int) @nogc nothrow;
    int BIO_new_bio_pair(bio_st**, c_ulong, bio_st**, c_ulong) @nogc nothrow;
    void BIO_copy_next_retry(bio_st*) @nogc nothrow;
    alias sk_X509_POLICY_NODE_copyfunc = X509_POLICY_NODE_st* function(const(X509_POLICY_NODE_st)*);
    alias sk_X509_POLICY_NODE_freefunc = void function(X509_POLICY_NODE_st*);
    alias sk_X509_POLICY_NODE_compfunc = int function(const(const(X509_POLICY_NODE_st)*)*, const(const(X509_POLICY_NODE_st)*)*);
    int BIO_printf(bio_st*, const(char)*, ...) @nogc nothrow;
    int BIO_vprintf(bio_st*, const(char)*, va_list*) @nogc nothrow;
    int BIO_snprintf(char*, c_ulong, const(char)*, ...) @nogc nothrow;
    int BIO_vsnprintf(char*, c_ulong, const(char)*, va_list*) @nogc nothrow;
    bio_method_st* BIO_meth_new(int, const(char)*) @nogc nothrow;
    void BIO_meth_free(bio_method_st*) @nogc nothrow;
    int function(bio_st*, const(char)*, int) BIO_meth_get_write(const(bio_method_st)*) @nogc nothrow;
    int function(bio_st*, const(char)*, c_ulong, c_ulong*) BIO_meth_get_write_ex(const(bio_method_st)*) @nogc nothrow;
    int BIO_meth_set_write(bio_method_st*, int function(bio_st*, const(char)*, int)) @nogc nothrow;
    int BIO_meth_set_write_ex(bio_method_st*, int function(bio_st*, const(char)*, c_ulong, c_ulong*)) @nogc nothrow;
    int function(bio_st*, char*, int) BIO_meth_get_read(const(bio_method_st)*) @nogc nothrow;
    int function(bio_st*, char*, c_ulong, c_ulong*) BIO_meth_get_read_ex(const(bio_method_st)*) @nogc nothrow;
    int BIO_meth_set_read(bio_method_st*, int function(bio_st*, char*, int)) @nogc nothrow;
    int BIO_meth_set_read_ex(bio_method_st*, int function(bio_st*, char*, c_ulong, c_ulong*)) @nogc nothrow;
    int function(bio_st*, const(char)*) BIO_meth_get_puts(const(bio_method_st)*) @nogc nothrow;
    int BIO_meth_set_puts(bio_method_st*, int function(bio_st*, const(char)*)) @nogc nothrow;
    int function(bio_st*, char*, int) BIO_meth_get_gets(const(bio_method_st)*) @nogc nothrow;
    int BIO_meth_set_gets(bio_method_st*, int function(bio_st*, char*, int)) @nogc nothrow;
    c_long function(bio_st*, int, c_long, void*) BIO_meth_get_ctrl(const(bio_method_st)*) @nogc nothrow;
    int BIO_meth_set_ctrl(bio_method_st*, c_long function(bio_st*, int, c_long, void*)) @nogc nothrow;
    int function(bio_st*) BIO_meth_get_create(const(bio_method_st)*) @nogc nothrow;
    int BIO_meth_set_create(bio_method_st*, int function(bio_st*)) @nogc nothrow;
    int function(bio_st*) BIO_meth_get_destroy(const(bio_method_st)*) @nogc nothrow;
    int BIO_meth_set_destroy(bio_method_st*, int function(bio_st*)) @nogc nothrow;
    c_long function(bio_st*, int, int function(bio_st*, int, int)) BIO_meth_get_callback_ctrl(const(bio_method_st)*) @nogc nothrow;
    int BIO_meth_set_callback_ctrl(bio_method_st*, c_long function(bio_st*, int, int function(bio_st*, int, int))) @nogc nothrow;
    void X509_POLICY_NODE_print(bio_st*, X509_POLICY_NODE_st*, int) @nogc nothrow;
    int ERR_load_BIO_strings() @nogc nothrow;
    int X509V3_NAME_from_section(X509_name_st*, stack_st_CONF_VALUE*, c_ulong) @nogc nothrow;
    asn1_string_st* a2i_IPADDRESS_NC(const(char)*) @nogc nothrow;
    asn1_string_st* a2i_IPADDRESS(const(char)*) @nogc nothrow;
    int X509_check_ip_asc(x509_st*, const(char)*, uint) @nogc nothrow;
    int X509_check_ip(x509_st*, const(ubyte)*, c_ulong, uint) @nogc nothrow;
    int X509_check_email(x509_st*, const(char)*, c_ulong, uint) @nogc nothrow;
    int X509_check_host(x509_st*, const(char)*, c_ulong, uint, char**) @nogc nothrow;
    stack_st_OPENSSL_STRING* X509_get1_ocsp(x509_st*) @nogc nothrow;
    void X509_email_free(stack_st_OPENSSL_STRING*) @nogc nothrow;
    stack_st_OPENSSL_STRING* X509_REQ_get1_email(X509_req_st*) @nogc nothrow;
    stack_st_OPENSSL_STRING* X509_get1_email(x509_st*) @nogc nothrow;
    int X509_PURPOSE_get_id(const(x509_purpose_st)*) @nogc nothrow;
    void X509_PURPOSE_cleanup() @nogc nothrow;
    int X509_PURPOSE_get_trust(const(x509_purpose_st)*) @nogc nothrow;
    char* X509_PURPOSE_get0_sname(const(x509_purpose_st)*) @nogc nothrow;
    char* X509_PURPOSE_get0_name(const(x509_purpose_st)*) @nogc nothrow;
    int X509_PURPOSE_add(int, int, int, int function(const(x509_purpose_st)*, const(x509_st)*, int), const(char)*, const(char)*, void*) @nogc nothrow;
    int X509_PURPOSE_get_by_id(int) @nogc nothrow;
    int X509_PURPOSE_get_by_sname(const(char)*) @nogc nothrow;
    x509_purpose_st* X509_PURPOSE_get0(int) @nogc nothrow;
    int X509_PURPOSE_get_count() @nogc nothrow;
    const(asn1_string_st)* X509_get0_authority_serial(x509_st*) @nogc nothrow;
    const(stack_st_GENERAL_NAME)* X509_get0_authority_issuer(x509_st*) @nogc nothrow;
    const(asn1_string_st)* X509_get0_authority_key_id(x509_st*) @nogc nothrow;
    const(asn1_string_st)* X509_get0_subject_key_id(x509_st*) @nogc nothrow;
    uint X509_get_extended_key_usage(x509_st*) @nogc nothrow;
    uint X509_get_key_usage(x509_st*) @nogc nothrow;
    uint X509_get_extension_flags(x509_st*) @nogc nothrow;
    c_long X509_get_proxy_pathlen(x509_st*) @nogc nothrow;
    void X509_set_proxy_pathlen(x509_st*, c_long) @nogc nothrow;
    void X509_set_proxy_flag(x509_st*) @nogc nothrow;
    int X509_check_akid(x509_st*, AUTHORITY_KEYID_st*) @nogc nothrow;
    int X509_check_issued(x509_st*, x509_st*) @nogc nothrow;
    int X509_PURPOSE_set(int*, int) @nogc nothrow;
    int X509_supported_extension(X509_extension_st*) @nogc nothrow;
    int X509_check_purpose(x509_st*, int, int) @nogc nothrow;
    int X509_check_ca(x509_st*) @nogc nothrow;
    int X509V3_extensions_print(bio_st*, const(char)*, const(stack_st_X509_EXTENSION)*, c_ulong, int) @nogc nothrow;
    int X509V3_EXT_print_fp(_IO_FILE*, X509_extension_st*, int, int) @nogc nothrow;
    int X509V3_EXT_print(bio_st*, X509_extension_st*, c_ulong, int) @nogc nothrow;
    void X509V3_EXT_val_prn(bio_st*, stack_st_CONF_VALUE*, int, int) @nogc nothrow;
    int X509V3_add1_i2d(stack_st_X509_EXTENSION**, int, void*, int, c_ulong) @nogc nothrow;
    X509_extension_st* X509V3_EXT_i2d(int, int, void*) @nogc nothrow;
    void* X509V3_get_d2i(const(stack_st_X509_EXTENSION)*, int, int*, int*) @nogc nothrow;
    void* X509V3_EXT_d2i(X509_extension_st*) @nogc nothrow;
    stack_st_CONF_VALUE* X509V3_parse_list(const(char)*) @nogc nothrow;
    int X509V3_add_standard_extensions() @nogc nothrow;
    const(v3_ext_method)* X509V3_EXT_get_nid(int) @nogc nothrow;
    const(v3_ext_method)* X509V3_EXT_get(X509_extension_st*) @nogc nothrow;
    void X509V3_EXT_cleanup() @nogc nothrow;
    int X509V3_EXT_add_alias(int, int) @nogc nothrow;
    int X509V3_EXT_add_list(v3_ext_method*) @nogc nothrow;
    int X509V3_EXT_add(v3_ext_method*) @nogc nothrow;
    char* i2s_ASN1_ENUMERATED_TABLE(v3_ext_method*, const(asn1_string_st)*) @nogc nothrow;
    char* i2s_ASN1_ENUMERATED(v3_ext_method*, const(asn1_string_st)*) @nogc nothrow;
    asn1_string_st* s2i_ASN1_INTEGER(v3_ext_method*, const(char)*) @nogc nothrow;
    char* i2s_ASN1_INTEGER(v3_ext_method*, const(asn1_string_st)*) @nogc nothrow;
    int X509V3_add_value_int(const(char)*, const(asn1_string_st)*, stack_st_CONF_VALUE**) @nogc nothrow;
    int X509V3_add_value_bool(const(char)*, int, stack_st_CONF_VALUE**) @nogc nothrow;
    int X509V3_add_value_uchar(const(char)*, const(ubyte)*, stack_st_CONF_VALUE**) @nogc nothrow;
    int X509V3_add_value(const(char)*, const(char)*, stack_st_CONF_VALUE**) @nogc nothrow;
    void X509V3_set_ctx(v3_ext_ctx*, x509_st*, x509_st*, X509_req_st*, X509_crl_st*, int) @nogc nothrow;
    void X509V3_section_free(v3_ext_ctx*, stack_st_CONF_VALUE*) @nogc nothrow;
    void X509V3_string_free(v3_ext_ctx*, char*) @nogc nothrow;
    stack_st_CONF_VALUE* X509V3_get_section(v3_ext_ctx*, const(char)*) @nogc nothrow;
    char* X509V3_get_string(v3_ext_ctx*, const(char)*, const(char)*) @nogc nothrow;
    void X509V3_set_conf_lhash(v3_ext_ctx*, lhash_st_CONF_VALUE*) @nogc nothrow;
    void X509V3_set_nconf(v3_ext_ctx*, conf_st*) @nogc nothrow;
    int X509V3_get_value_int(const(CONF_VALUE)*, asn1_string_st**) @nogc nothrow;
    int X509V3_get_value_bool(const(CONF_VALUE)*, int*) @nogc nothrow;
    int X509V3_add_value_bool_nf(const(char)*, int, stack_st_CONF_VALUE**) @nogc nothrow;
    int X509V3_EXT_CRL_add_conf(lhash_st_CONF_VALUE*, v3_ext_ctx*, const(char)*, X509_crl_st*) @nogc nothrow;
    int X509V3_EXT_REQ_add_conf(lhash_st_CONF_VALUE*, v3_ext_ctx*, const(char)*, X509_req_st*) @nogc nothrow;
    int X509V3_EXT_add_conf(lhash_st_CONF_VALUE*, v3_ext_ctx*, const(char)*, x509_st*) @nogc nothrow;
    X509_extension_st* X509V3_EXT_conf(lhash_st_CONF_VALUE*, v3_ext_ctx*, const(char)*, const(char)*) @nogc nothrow;
    X509_extension_st* X509V3_EXT_conf_nid(lhash_st_CONF_VALUE*, v3_ext_ctx*, int, const(char)*) @nogc nothrow;
    int X509V3_EXT_CRL_add_nconf(conf_st*, v3_ext_ctx*, const(char)*, X509_crl_st*) @nogc nothrow;
    int X509V3_EXT_REQ_add_nconf(conf_st*, v3_ext_ctx*, const(char)*, X509_req_st*) @nogc nothrow;
    int X509V3_EXT_add_nconf(conf_st*, v3_ext_ctx*, const(char)*, x509_st*) @nogc nothrow;
    int X509V3_EXT_add_nconf_sk(conf_st*, v3_ext_ctx*, const(char)*, stack_st_X509_EXTENSION**) @nogc nothrow;
    void BN_set_flags(bignum_st*, int) @nogc nothrow;
    int BN_get_flags(const(bignum_st)*, int) @nogc nothrow;
    X509_extension_st* X509V3_EXT_nconf(conf_st*, v3_ext_ctx*, const(char)*, const(char)*) @nogc nothrow;
    X509_extension_st* X509V3_EXT_nconf_nid(conf_st*, v3_ext_ctx*, int, const(char)*) @nogc nothrow;
    void X509V3_conf_free(CONF_VALUE*) @nogc nothrow;
    GENERAL_NAME_st* v2i_GENERAL_NAME_ex(GENERAL_NAME_st*, const(v3_ext_method)*, v3_ext_ctx*, CONF_VALUE*, int) @nogc nothrow;
    GENERAL_NAME_st* v2i_GENERAL_NAME(const(v3_ext_method)*, v3_ext_ctx*, CONF_VALUE*) @nogc nothrow;
    void BN_with_flags(bignum_st*, const(bignum_st)*, int) @nogc nothrow;
    int BN_GENCB_call(bn_gencb_st*, int, int) @nogc nothrow;
    bn_gencb_st* BN_GENCB_new() @nogc nothrow;
    void BN_GENCB_free(bn_gencb_st*) @nogc nothrow;
    void BN_GENCB_set_old(bn_gencb_st*, void function(int, int, void*), void*) @nogc nothrow;
    void BN_GENCB_set(bn_gencb_st*, int function(int, int, bn_gencb_st*), void*) @nogc nothrow;
    void* BN_GENCB_get_arg(bn_gencb_st*) @nogc nothrow;
    GENERAL_NAME_st* a2i_GENERAL_NAME(GENERAL_NAME_st*, const(v3_ext_method)*, v3_ext_ctx*, int, const(char)*, int) @nogc nothrow;
    int BN_abs_is_word(const(bignum_st)*, const(c_ulong)) @nogc nothrow;
    int BN_is_zero(const(bignum_st)*) @nogc nothrow;
    int BN_is_one(const(bignum_st)*) @nogc nothrow;
    int BN_is_word(const(bignum_st)*, const(c_ulong)) @nogc nothrow;
    int BN_is_odd(const(bignum_st)*) @nogc nothrow;
    void BN_zero_ex(bignum_st*) @nogc nothrow;
    POLICY_CONSTRAINTS_st* POLICY_CONSTRAINTS_new() @nogc nothrow;
    const(bignum_st)* BN_value_one() @nogc nothrow;
    char* BN_options() @nogc nothrow;
    bignum_ctx* BN_CTX_new() @nogc nothrow;
    bignum_ctx* BN_CTX_secure_new() @nogc nothrow;
    void BN_CTX_free(bignum_ctx*) @nogc nothrow;
    void BN_CTX_start(bignum_ctx*) @nogc nothrow;
    bignum_st* BN_CTX_get(bignum_ctx*) @nogc nothrow;
    void BN_CTX_end(bignum_ctx*) @nogc nothrow;
    int BN_rand(bignum_st*, int, int, int) @nogc nothrow;
    int BN_priv_rand(bignum_st*, int, int, int) @nogc nothrow;
    int BN_rand_range(bignum_st*, const(bignum_st)*) @nogc nothrow;
    int BN_priv_rand_range(bignum_st*, const(bignum_st)*) @nogc nothrow;
    int BN_pseudo_rand(bignum_st*, int, int, int) @nogc nothrow;
    int BN_pseudo_rand_range(bignum_st*, const(bignum_st)*) @nogc nothrow;
    int BN_num_bits(const(bignum_st)*) @nogc nothrow;
    int BN_num_bits_word(c_ulong) @nogc nothrow;
    int BN_security_bits(int, int) @nogc nothrow;
    bignum_st* BN_new() @nogc nothrow;
    bignum_st* BN_secure_new() @nogc nothrow;
    void BN_clear_free(bignum_st*) @nogc nothrow;
    bignum_st* BN_copy(bignum_st*, const(bignum_st)*) @nogc nothrow;
    void BN_swap(bignum_st*, bignum_st*) @nogc nothrow;
    bignum_st* BN_bin2bn(const(ubyte)*, int, bignum_st*) @nogc nothrow;
    int BN_bn2bin(const(bignum_st)*, ubyte*) @nogc nothrow;
    int BN_bn2binpad(const(bignum_st)*, ubyte*, int) @nogc nothrow;
    bignum_st* BN_lebin2bn(const(ubyte)*, int, bignum_st*) @nogc nothrow;
    int BN_bn2lebinpad(const(bignum_st)*, ubyte*, int) @nogc nothrow;
    bignum_st* BN_mpi2bn(const(ubyte)*, int, bignum_st*) @nogc nothrow;
    int BN_bn2mpi(const(bignum_st)*, ubyte*) @nogc nothrow;
    int BN_sub(bignum_st*, const(bignum_st)*, const(bignum_st)*) @nogc nothrow;
    int BN_usub(bignum_st*, const(bignum_st)*, const(bignum_st)*) @nogc nothrow;
    int BN_uadd(bignum_st*, const(bignum_st)*, const(bignum_st)*) @nogc nothrow;
    int BN_add(bignum_st*, const(bignum_st)*, const(bignum_st)*) @nogc nothrow;
    int BN_mul(bignum_st*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    int BN_sqr(bignum_st*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    void BN_set_negative(bignum_st*, int) @nogc nothrow;
    int BN_is_negative(const(bignum_st)*) @nogc nothrow;
    int BN_div(bignum_st*, bignum_st*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    int BN_nnmod(bignum_st*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    int BN_mod_add(bignum_st*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    int BN_mod_add_quick(bignum_st*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*) @nogc nothrow;
    int BN_mod_sub(bignum_st*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    int BN_mod_sub_quick(bignum_st*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*) @nogc nothrow;
    int BN_mod_mul(bignum_st*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    int BN_mod_sqr(bignum_st*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    int BN_mod_lshift1(bignum_st*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    int BN_mod_lshift1_quick(bignum_st*, const(bignum_st)*, const(bignum_st)*) @nogc nothrow;
    int BN_mod_lshift(bignum_st*, const(bignum_st)*, int, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    int BN_mod_lshift_quick(bignum_st*, const(bignum_st)*, int, const(bignum_st)*) @nogc nothrow;
    c_ulong BN_mod_word(const(bignum_st)*, c_ulong) @nogc nothrow;
    c_ulong BN_div_word(bignum_st*, c_ulong) @nogc nothrow;
    int BN_mul_word(bignum_st*, c_ulong) @nogc nothrow;
    int BN_add_word(bignum_st*, c_ulong) @nogc nothrow;
    int BN_sub_word(bignum_st*, c_ulong) @nogc nothrow;
    int BN_set_word(bignum_st*, c_ulong) @nogc nothrow;
    c_ulong BN_get_word(const(bignum_st)*) @nogc nothrow;
    int BN_cmp(const(bignum_st)*, const(bignum_st)*) @nogc nothrow;
    void BN_free(bignum_st*) @nogc nothrow;
    int BN_is_bit_set(const(bignum_st)*, int) @nogc nothrow;
    int BN_lshift(bignum_st*, const(bignum_st)*, int) @nogc nothrow;
    int BN_lshift1(bignum_st*, const(bignum_st)*) @nogc nothrow;
    int BN_exp(bignum_st*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    int BN_mod_exp(bignum_st*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    int BN_mod_exp_mont(bignum_st*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*, bn_mont_ctx_st*) @nogc nothrow;
    int BN_mod_exp_mont_consttime(bignum_st*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*, bn_mont_ctx_st*) @nogc nothrow;
    int BN_mod_exp_mont_word(bignum_st*, c_ulong, const(bignum_st)*, const(bignum_st)*, bignum_ctx*, bn_mont_ctx_st*) @nogc nothrow;
    int BN_mod_exp2_mont(bignum_st*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*, bn_mont_ctx_st*) @nogc nothrow;
    int BN_mod_exp_simple(bignum_st*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    int BN_mask_bits(bignum_st*, int) @nogc nothrow;
    int BN_print_fp(_IO_FILE*, const(bignum_st)*) @nogc nothrow;
    int BN_print(bio_st*, const(bignum_st)*) @nogc nothrow;
    int BN_reciprocal(bignum_st*, const(bignum_st)*, int, bignum_ctx*) @nogc nothrow;
    int BN_rshift(bignum_st*, const(bignum_st)*, int) @nogc nothrow;
    int BN_rshift1(bignum_st*, const(bignum_st)*) @nogc nothrow;
    void BN_clear(bignum_st*) @nogc nothrow;
    bignum_st* BN_dup(const(bignum_st)*) @nogc nothrow;
    int BN_ucmp(const(bignum_st)*, const(bignum_st)*) @nogc nothrow;
    int BN_set_bit(bignum_st*, int) @nogc nothrow;
    int BN_clear_bit(bignum_st*, int) @nogc nothrow;
    char* BN_bn2hex(const(bignum_st)*) @nogc nothrow;
    char* BN_bn2dec(const(bignum_st)*) @nogc nothrow;
    int BN_hex2bn(bignum_st**, const(char)*) @nogc nothrow;
    int BN_dec2bn(bignum_st**, const(char)*) @nogc nothrow;
    int BN_asc2bn(bignum_st**, const(char)*) @nogc nothrow;
    int BN_gcd(bignum_st*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    int BN_kronecker(const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    bignum_st* BN_mod_inverse(bignum_st*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    bignum_st* BN_mod_sqrt(bignum_st*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    void BN_consttime_swap(c_ulong, bignum_st*, bignum_st*, int) @nogc nothrow;
    bignum_st* BN_generate_prime(bignum_st*, int, int, const(bignum_st)*, const(bignum_st)*, void function(int, int, void*), void*) @nogc nothrow;
    int BN_is_prime(const(bignum_st)*, int, void function(int, int, void*), bignum_ctx*, void*) @nogc nothrow;
    int BN_is_prime_fasttest(const(bignum_st)*, int, void function(int, int, void*), bignum_ctx*, void*, int) @nogc nothrow;
    int BN_generate_prime_ex(bignum_st*, int, int, const(bignum_st)*, const(bignum_st)*, bn_gencb_st*) @nogc nothrow;
    int BN_is_prime_ex(const(bignum_st)*, int, bignum_ctx*, bn_gencb_st*) @nogc nothrow;
    int BN_is_prime_fasttest_ex(const(bignum_st)*, int, bignum_ctx*, int, bn_gencb_st*) @nogc nothrow;
    int BN_X931_generate_Xpq(bignum_st*, bignum_st*, int, bignum_ctx*) @nogc nothrow;
    int BN_X931_derive_prime_ex(bignum_st*, bignum_st*, bignum_st*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*, bn_gencb_st*) @nogc nothrow;
    int BN_X931_generate_prime_ex(bignum_st*, bignum_st*, bignum_st*, bignum_st*, bignum_st*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*, bn_gencb_st*) @nogc nothrow;
    bn_mont_ctx_st* BN_MONT_CTX_new() @nogc nothrow;
    int BN_mod_mul_montgomery(bignum_st*, const(bignum_st)*, const(bignum_st)*, bn_mont_ctx_st*, bignum_ctx*) @nogc nothrow;
    int BN_to_montgomery(bignum_st*, const(bignum_st)*, bn_mont_ctx_st*, bignum_ctx*) @nogc nothrow;
    int BN_from_montgomery(bignum_st*, const(bignum_st)*, bn_mont_ctx_st*, bignum_ctx*) @nogc nothrow;
    void BN_MONT_CTX_free(bn_mont_ctx_st*) @nogc nothrow;
    int BN_MONT_CTX_set(bn_mont_ctx_st*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    bn_mont_ctx_st* BN_MONT_CTX_copy(bn_mont_ctx_st*, bn_mont_ctx_st*) @nogc nothrow;
    bn_mont_ctx_st* BN_MONT_CTX_set_locked(bn_mont_ctx_st**, void*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    void POLICY_CONSTRAINTS_free(POLICY_CONSTRAINTS_st*) @nogc nothrow;
    NAME_CONSTRAINTS_st* NAME_CONSTRAINTS_new() @nogc nothrow;
    bn_blinding_st* BN_BLINDING_new(const(bignum_st)*, const(bignum_st)*, bignum_st*) @nogc nothrow;
    void BN_BLINDING_free(bn_blinding_st*) @nogc nothrow;
    int BN_BLINDING_update(bn_blinding_st*, bignum_ctx*) @nogc nothrow;
    int BN_BLINDING_convert(bignum_st*, bn_blinding_st*, bignum_ctx*) @nogc nothrow;
    int BN_BLINDING_invert(bignum_st*, bn_blinding_st*, bignum_ctx*) @nogc nothrow;
    int BN_BLINDING_convert_ex(bignum_st*, bignum_st*, bn_blinding_st*, bignum_ctx*) @nogc nothrow;
    int BN_BLINDING_invert_ex(bignum_st*, const(bignum_st)*, bn_blinding_st*, bignum_ctx*) @nogc nothrow;
    int BN_BLINDING_is_current_thread(bn_blinding_st*) @nogc nothrow;
    void BN_BLINDING_set_current_thread(bn_blinding_st*) @nogc nothrow;
    int BN_BLINDING_lock(bn_blinding_st*) @nogc nothrow;
    int BN_BLINDING_unlock(bn_blinding_st*) @nogc nothrow;
    c_ulong BN_BLINDING_get_flags(const(bn_blinding_st)*) @nogc nothrow;
    void BN_BLINDING_set_flags(bn_blinding_st*, c_ulong) @nogc nothrow;
    bn_blinding_st* BN_BLINDING_create_param(bn_blinding_st*, const(bignum_st)*, bignum_st*, bignum_ctx*, int function(bignum_st*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*, bn_mont_ctx_st*), bn_mont_ctx_st*) @nogc nothrow;
    void BN_set_params(int, int, int, int) @nogc nothrow;
    int BN_get_params(int) @nogc nothrow;
    bn_recp_ctx_st* BN_RECP_CTX_new() @nogc nothrow;
    void BN_RECP_CTX_free(bn_recp_ctx_st*) @nogc nothrow;
    int BN_RECP_CTX_set(bn_recp_ctx_st*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    int BN_mod_mul_reciprocal(bignum_st*, const(bignum_st)*, const(bignum_st)*, bn_recp_ctx_st*, bignum_ctx*) @nogc nothrow;
    int BN_mod_exp_recp(bignum_st*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    int BN_div_recp(bignum_st*, bignum_st*, const(bignum_st)*, bn_recp_ctx_st*, bignum_ctx*) @nogc nothrow;
    int BN_GF2m_add(bignum_st*, const(bignum_st)*, const(bignum_st)*) @nogc nothrow;
    void NAME_CONSTRAINTS_free(NAME_CONSTRAINTS_st*) @nogc nothrow;
    int BN_GF2m_mod(bignum_st*, const(bignum_st)*, const(bignum_st)*) @nogc nothrow;
    int BN_GF2m_mod_mul(bignum_st*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    int BN_GF2m_mod_sqr(bignum_st*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    int BN_GF2m_mod_inv(bignum_st*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    int BN_GF2m_mod_div(bignum_st*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    int BN_GF2m_mod_exp(bignum_st*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    int BN_GF2m_mod_sqrt(bignum_st*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    int BN_GF2m_mod_solve_quad(bignum_st*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    int BN_GF2m_mod_arr(bignum_st*, const(bignum_st)*, const(int)*) @nogc nothrow;
    int BN_GF2m_mod_mul_arr(bignum_st*, const(bignum_st)*, const(bignum_st)*, const(int)*, bignum_ctx*) @nogc nothrow;
    int BN_GF2m_mod_sqr_arr(bignum_st*, const(bignum_st)*, const(int)*, bignum_ctx*) @nogc nothrow;
    int BN_GF2m_mod_inv_arr(bignum_st*, const(bignum_st)*, const(int)*, bignum_ctx*) @nogc nothrow;
    int BN_GF2m_mod_div_arr(bignum_st*, const(bignum_st)*, const(bignum_st)*, const(int)*, bignum_ctx*) @nogc nothrow;
    int BN_GF2m_mod_exp_arr(bignum_st*, const(bignum_st)*, const(bignum_st)*, const(int)*, bignum_ctx*) @nogc nothrow;
    int BN_GF2m_mod_sqrt_arr(bignum_st*, const(bignum_st)*, const(int)*, bignum_ctx*) @nogc nothrow;
    int BN_GF2m_mod_solve_quad_arr(bignum_st*, const(bignum_st)*, const(int)*, bignum_ctx*) @nogc nothrow;
    int BN_GF2m_poly2arr(const(bignum_st)*, int*, int) @nogc nothrow;
    int BN_GF2m_arr2poly(const(int)*, bignum_st*) @nogc nothrow;
    int BN_nist_mod_192(bignum_st*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    int BN_nist_mod_224(bignum_st*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    int BN_nist_mod_256(bignum_st*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    int BN_nist_mod_384(bignum_st*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    int BN_nist_mod_521(bignum_st*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    const(bignum_st)* BN_get0_nist_prime_192() @nogc nothrow;
    const(bignum_st)* BN_get0_nist_prime_224() @nogc nothrow;
    const(bignum_st)* BN_get0_nist_prime_256() @nogc nothrow;
    const(bignum_st)* BN_get0_nist_prime_384() @nogc nothrow;
    const(bignum_st)* BN_get0_nist_prime_521() @nogc nothrow;
    int function(bignum_st*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) BN_nist_mod_func(const(bignum_st)*) @nogc nothrow;
    int BN_generate_dsa_nonce(bignum_st*, const(bignum_st)*, const(bignum_st)*, const(ubyte)*, c_ulong, bignum_ctx*) @nogc nothrow;
    bignum_st* BN_get_rfc2409_prime_768(bignum_st*) @nogc nothrow;
    bignum_st* BN_get_rfc2409_prime_1024(bignum_st*) @nogc nothrow;
    bignum_st* BN_get_rfc3526_prime_1536(bignum_st*) @nogc nothrow;
    bignum_st* BN_get_rfc3526_prime_2048(bignum_st*) @nogc nothrow;
    bignum_st* BN_get_rfc3526_prime_3072(bignum_st*) @nogc nothrow;
    bignum_st* BN_get_rfc3526_prime_4096(bignum_st*) @nogc nothrow;
    bignum_st* BN_get_rfc3526_prime_6144(bignum_st*) @nogc nothrow;
    bignum_st* BN_get_rfc3526_prime_8192(bignum_st*) @nogc nothrow;
    GENERAL_SUBTREE_st* GENERAL_SUBTREE_new() @nogc nothrow;
    void GENERAL_SUBTREE_free(GENERAL_SUBTREE_st*) @nogc nothrow;
    int BN_bntest_rand(bignum_st*, int, int, int) @nogc nothrow;
    int ERR_load_BN_strings() @nogc nothrow;
    POLICY_MAPPING_st* POLICY_MAPPING_new() @nogc nothrow;
    void POLICY_MAPPING_free(POLICY_MAPPING_st*) @nogc nothrow;
    stack_st_ACCESS_DESCRIPTION* AUTHORITY_INFO_ACCESS_new() @nogc nothrow;
    stack_st_ACCESS_DESCRIPTION* d2i_AUTHORITY_INFO_ACCESS(stack_st_ACCESS_DESCRIPTION**, const(ubyte)**, c_long) @nogc nothrow;
    void AUTHORITY_INFO_ACCESS_free(stack_st_ACCESS_DESCRIPTION*) @nogc nothrow;
    int i2d_AUTHORITY_INFO_ACCESS(stack_st_ACCESS_DESCRIPTION*, ubyte**) @nogc nothrow;
    ACCESS_DESCRIPTION_st* d2i_ACCESS_DESCRIPTION(ACCESS_DESCRIPTION_st**, const(ubyte)**, c_long) @nogc nothrow;
    ACCESS_DESCRIPTION_st* ACCESS_DESCRIPTION_new() @nogc nothrow;
    int i2d_ACCESS_DESCRIPTION(ACCESS_DESCRIPTION_st*, ubyte**) @nogc nothrow;
    void ACCESS_DESCRIPTION_free(ACCESS_DESCRIPTION_st*) @nogc nothrow;
    int NAME_CONSTRAINTS_check_CN(x509_st*, NAME_CONSTRAINTS_st*) @nogc nothrow;
    int NAME_CONSTRAINTS_check(x509_st*, NAME_CONSTRAINTS_st*) @nogc nothrow;
    int DIST_POINT_set_dpname(DIST_POINT_NAME_st*, X509_name_st*) @nogc nothrow;
    ISSUING_DIST_POINT_st* ISSUING_DIST_POINT_new() @nogc nothrow;
    ISSUING_DIST_POINT_st* d2i_ISSUING_DIST_POINT(ISSUING_DIST_POINT_st**, const(ubyte)**, c_long) @nogc nothrow;
    void ISSUING_DIST_POINT_free(ISSUING_DIST_POINT_st*) @nogc nothrow;
    int i2d_ISSUING_DIST_POINT(ISSUING_DIST_POINT_st*, ubyte**) @nogc nothrow;
    DIST_POINT_NAME_st* d2i_DIST_POINT_NAME(DIST_POINT_NAME_st**, const(ubyte)**, c_long) @nogc nothrow;
    DIST_POINT_NAME_st* DIST_POINT_NAME_new() @nogc nothrow;
    int i2d_DIST_POINT_NAME(DIST_POINT_NAME_st*, ubyte**) @nogc nothrow;
    void DIST_POINT_NAME_free(DIST_POINT_NAME_st*) @nogc nothrow;
    DIST_POINT_st* DIST_POINT_new() @nogc nothrow;
    DIST_POINT_st* d2i_DIST_POINT(DIST_POINT_st**, const(ubyte)**, c_long) @nogc nothrow;
    void DIST_POINT_free(DIST_POINT_st*) @nogc nothrow;
    int i2d_DIST_POINT(DIST_POINT_st*, ubyte**) @nogc nothrow;
    stack_st_DIST_POINT* CRL_DIST_POINTS_new() @nogc nothrow;
    stack_st_DIST_POINT* d2i_CRL_DIST_POINTS(stack_st_DIST_POINT**, const(ubyte)**, c_long) @nogc nothrow;
    int i2d_CRL_DIST_POINTS(stack_st_DIST_POINT*, ubyte**) @nogc nothrow;
    void CRL_DIST_POINTS_free(stack_st_DIST_POINT*) @nogc nothrow;
    NOTICEREF_st* d2i_NOTICEREF(NOTICEREF_st**, const(ubyte)**, c_long) @nogc nothrow;
    NOTICEREF_st* NOTICEREF_new() @nogc nothrow;
    int i2d_NOTICEREF(NOTICEREF_st*, ubyte**) @nogc nothrow;
    void NOTICEREF_free(NOTICEREF_st*) @nogc nothrow;
    USERNOTICE_st* d2i_USERNOTICE(USERNOTICE_st**, const(ubyte)**, c_long) @nogc nothrow;
    USERNOTICE_st* USERNOTICE_new() @nogc nothrow;
    int i2d_USERNOTICE(USERNOTICE_st*, ubyte**) @nogc nothrow;
    void USERNOTICE_free(USERNOTICE_st*) @nogc nothrow;
    POLICYQUALINFO_st* POLICYQUALINFO_new() @nogc nothrow;
    POLICYQUALINFO_st* d2i_POLICYQUALINFO(POLICYQUALINFO_st**, const(ubyte)**, c_long) @nogc nothrow;
    int i2d_POLICYQUALINFO(POLICYQUALINFO_st*, ubyte**) @nogc nothrow;
    void POLICYQUALINFO_free(POLICYQUALINFO_st*) @nogc nothrow;
    POLICYINFO_st* POLICYINFO_new() @nogc nothrow;
    POLICYINFO_st* d2i_POLICYINFO(POLICYINFO_st**, const(ubyte)**, c_long) @nogc nothrow;
    void POLICYINFO_free(POLICYINFO_st*) @nogc nothrow;
    int i2d_POLICYINFO(POLICYINFO_st*, ubyte**) @nogc nothrow;
    stack_st_POLICYINFO* d2i_CERTIFICATEPOLICIES(stack_st_POLICYINFO**, const(ubyte)**, c_long) @nogc nothrow;
    stack_st_POLICYINFO* CERTIFICATEPOLICIES_new() @nogc nothrow;
    int i2d_CERTIFICATEPOLICIES(stack_st_POLICYINFO*, ubyte**) @nogc nothrow;
    void CERTIFICATEPOLICIES_free(stack_st_POLICYINFO*) @nogc nothrow;
    stack_st_ASN1_INTEGER* TLS_FEATURE_new() @nogc nothrow;
    void TLS_FEATURE_free(stack_st_ASN1_INTEGER*) @nogc nothrow;
    buf_mem_st* BUF_MEM_new() @nogc nothrow;
    buf_mem_st* BUF_MEM_new_ex(c_ulong) @nogc nothrow;
    void BUF_MEM_free(buf_mem_st*) @nogc nothrow;
    c_ulong BUF_MEM_grow(buf_mem_st*, c_ulong) @nogc nothrow;
    c_ulong BUF_MEM_grow_clean(buf_mem_st*, c_ulong) @nogc nothrow;
    void BUF_reverse(ubyte*, const(ubyte)*, c_ulong) @nogc nothrow;
    int i2a_ACCESS_DESCRIPTION(bio_st*, const(ACCESS_DESCRIPTION_st)*) @nogc nothrow;
    int ERR_load_BUF_strings() @nogc nothrow;
    stack_st_ASN1_OBJECT* EXTENDED_KEY_USAGE_new() @nogc nothrow;
    stack_st_ASN1_OBJECT* d2i_EXTENDED_KEY_USAGE(stack_st_ASN1_OBJECT**, const(ubyte)**, c_long) @nogc nothrow;
    void EXTENDED_KEY_USAGE_free(stack_st_ASN1_OBJECT*) @nogc nothrow;
    int i2d_EXTENDED_KEY_USAGE(stack_st_ASN1_OBJECT*, ubyte**) @nogc nothrow;
    struct CONF_VALUE
    {
        char* section;
        char* name;
        char* value;
    }
    static int sk_CONF_VALUE_insert(stack_st_CONF_VALUE*, CONF_VALUE*, int) @nogc nothrow;
    static CONF_VALUE* sk_CONF_VALUE_set(stack_st_CONF_VALUE*, int, CONF_VALUE*) @nogc nothrow;
    static int sk_CONF_VALUE_find(stack_st_CONF_VALUE*, CONF_VALUE*) @nogc nothrow;
    static int sk_CONF_VALUE_find_ex(stack_st_CONF_VALUE*, CONF_VALUE*) @nogc nothrow;
    static void sk_CONF_VALUE_sort(stack_st_CONF_VALUE*) @nogc nothrow;
    static int sk_CONF_VALUE_is_sorted(const(stack_st_CONF_VALUE)*) @nogc nothrow;
    static stack_st_CONF_VALUE* sk_CONF_VALUE_dup(const(stack_st_CONF_VALUE)*) @nogc nothrow;
    static stack_st_CONF_VALUE* sk_CONF_VALUE_deep_copy(const(stack_st_CONF_VALUE)*, CONF_VALUE* function(const(CONF_VALUE)*), void function(CONF_VALUE*)) @nogc nothrow;
    static int function(const(const(CONF_VALUE)*)*, const(const(CONF_VALUE)*)*) sk_CONF_VALUE_set_cmp_func(stack_st_CONF_VALUE*, int function(const(const(CONF_VALUE)*)*, const(const(CONF_VALUE)*)*)) @nogc nothrow;
    static CONF_VALUE* sk_CONF_VALUE_shift(stack_st_CONF_VALUE*) @nogc nothrow;
    static void sk_CONF_VALUE_pop_free(stack_st_CONF_VALUE*, void function(CONF_VALUE*)) @nogc nothrow;
    static CONF_VALUE* sk_CONF_VALUE_pop(stack_st_CONF_VALUE*) @nogc nothrow;
    static int sk_CONF_VALUE_unshift(stack_st_CONF_VALUE*, CONF_VALUE*) @nogc nothrow;
    static int sk_CONF_VALUE_push(stack_st_CONF_VALUE*, CONF_VALUE*) @nogc nothrow;
    static CONF_VALUE* sk_CONF_VALUE_delete_ptr(stack_st_CONF_VALUE*, CONF_VALUE*) @nogc nothrow;
    static CONF_VALUE* sk_CONF_VALUE_delete(stack_st_CONF_VALUE*, int) @nogc nothrow;
    static void sk_CONF_VALUE_zero(stack_st_CONF_VALUE*) @nogc nothrow;
    static void sk_CONF_VALUE_free(stack_st_CONF_VALUE*) @nogc nothrow;
    static int sk_CONF_VALUE_reserve(stack_st_CONF_VALUE*, int) @nogc nothrow;
    static stack_st_CONF_VALUE* sk_CONF_VALUE_new_reserve(int function(const(const(CONF_VALUE)*)*, const(const(CONF_VALUE)*)*), int) @nogc nothrow;
    static stack_st_CONF_VALUE* sk_CONF_VALUE_new_null() @nogc nothrow;
    static stack_st_CONF_VALUE* sk_CONF_VALUE_new(int function(const(const(CONF_VALUE)*)*, const(const(CONF_VALUE)*)*)) @nogc nothrow;
    static CONF_VALUE* sk_CONF_VALUE_value(const(stack_st_CONF_VALUE)*, int) @nogc nothrow;
    static int sk_CONF_VALUE_num(const(stack_st_CONF_VALUE)*) @nogc nothrow;
    alias sk_CONF_VALUE_copyfunc = CONF_VALUE* function(const(CONF_VALUE)*);
    alias sk_CONF_VALUE_freefunc = void function(CONF_VALUE*);
    alias sk_CONF_VALUE_compfunc = int function(const(const(CONF_VALUE)*)*, const(const(CONF_VALUE)*)*);
    struct stack_st_CONF_VALUE;
    static void lh_CONF_VALUE_free(lhash_st_CONF_VALUE*) @nogc nothrow;
    struct lhash_st_CONF_VALUE
    {
        union lh_CONF_VALUE_dummy
        {
            void* d1;
            c_ulong d2;
            int d3;
        }
        lhash_st_CONF_VALUE.lh_CONF_VALUE_dummy dummy;
    }
    static void lh_CONF_VALUE_stats_bio(const(lhash_st_CONF_VALUE)*, bio_st*) @nogc nothrow;
    static CONF_VALUE* lh_CONF_VALUE_delete(lhash_st_CONF_VALUE*, const(CONF_VALUE)*) @nogc nothrow;
    static CONF_VALUE* lh_CONF_VALUE_retrieve(lhash_st_CONF_VALUE*, const(CONF_VALUE)*) @nogc nothrow;
    static int lh_CONF_VALUE_error(lhash_st_CONF_VALUE*) @nogc nothrow;
    static c_ulong lh_CONF_VALUE_num_items(lhash_st_CONF_VALUE*) @nogc nothrow;
    static void lh_CONF_VALUE_node_stats_bio(const(lhash_st_CONF_VALUE)*, bio_st*) @nogc nothrow;
    static void lh_CONF_VALUE_node_usage_stats_bio(const(lhash_st_CONF_VALUE)*, bio_st*) @nogc nothrow;
    static c_ulong lh_CONF_VALUE_get_down_load(lhash_st_CONF_VALUE*) @nogc nothrow;
    static void lh_CONF_VALUE_set_down_load(lhash_st_CONF_VALUE*, c_ulong) @nogc nothrow;
    static void lh_CONF_VALUE_doall(lhash_st_CONF_VALUE*, void function(CONF_VALUE*)) @nogc nothrow;
    static CONF_VALUE* lh_CONF_VALUE_insert(lhash_st_CONF_VALUE*, CONF_VALUE*) @nogc nothrow;
    static lhash_st_CONF_VALUE* lh_CONF_VALUE_new(c_ulong function(const(CONF_VALUE)*), int function(const(CONF_VALUE)*, const(CONF_VALUE)*)) @nogc nothrow;
    struct conf_method_st
    {
        const(char)* name;
        conf_st* function(conf_method_st*) create;
        int function(conf_st*) init;
        int function(conf_st*) destroy;
        int function(conf_st*) destroy_data;
        int function(conf_st*, bio_st*, c_long*) load_bio;
        int function(const(conf_st)*, bio_st*) dump;
        int function(const(conf_st)*, char) is_number;
        int function(const(conf_st)*, char) to_int;
        int function(conf_st*, const(char)*, c_long*) load;
    }
    alias CONF_METHOD = conf_method_st;
    alias CONF_IMODULE = conf_imodule_st;
    struct conf_imodule_st;
    alias CONF_MODULE = conf_module_st;
    struct conf_module_st;
    static conf_module_st* sk_CONF_MODULE_value(const(stack_st_CONF_MODULE)*, int) @nogc nothrow;
    static stack_st_CONF_MODULE* sk_CONF_MODULE_new(int function(const(const(conf_module_st)*)*, const(const(conf_module_st)*)*)) @nogc nothrow;
    alias sk_CONF_MODULE_copyfunc = conf_module_st* function(const(conf_module_st)*);
    alias sk_CONF_MODULE_freefunc = void function(conf_module_st*);
    alias sk_CONF_MODULE_compfunc = int function(const(const(conf_module_st)*)*, const(const(conf_module_st)*)*);
    struct stack_st_CONF_MODULE;
    static stack_st_CONF_MODULE* sk_CONF_MODULE_new_reserve(int function(const(const(conf_module_st)*)*, const(const(conf_module_st)*)*), int) @nogc nothrow;
    static stack_st_CONF_MODULE* sk_CONF_MODULE_new_null() @nogc nothrow;
    static int sk_CONF_MODULE_reserve(stack_st_CONF_MODULE*, int) @nogc nothrow;
    static void sk_CONF_MODULE_free(stack_st_CONF_MODULE*) @nogc nothrow;
    static void sk_CONF_MODULE_zero(stack_st_CONF_MODULE*) @nogc nothrow;
    static conf_module_st* sk_CONF_MODULE_delete(stack_st_CONF_MODULE*, int) @nogc nothrow;
    static int function(const(const(conf_module_st)*)*, const(const(conf_module_st)*)*) sk_CONF_MODULE_set_cmp_func(stack_st_CONF_MODULE*, int function(const(const(conf_module_st)*)*, const(const(conf_module_st)*)*)) @nogc nothrow;
    static stack_st_CONF_MODULE* sk_CONF_MODULE_deep_copy(const(stack_st_CONF_MODULE)*, conf_module_st* function(const(conf_module_st)*), void function(conf_module_st*)) @nogc nothrow;
    static conf_module_st* sk_CONF_MODULE_delete_ptr(stack_st_CONF_MODULE*, conf_module_st*) @nogc nothrow;
    static int sk_CONF_MODULE_push(stack_st_CONF_MODULE*, conf_module_st*) @nogc nothrow;
    static int sk_CONF_MODULE_unshift(stack_st_CONF_MODULE*, conf_module_st*) @nogc nothrow;
    static conf_module_st* sk_CONF_MODULE_pop(stack_st_CONF_MODULE*) @nogc nothrow;
    static conf_module_st* sk_CONF_MODULE_shift(stack_st_CONF_MODULE*) @nogc nothrow;
    static void sk_CONF_MODULE_pop_free(stack_st_CONF_MODULE*, void function(conf_module_st*)) @nogc nothrow;
    static int sk_CONF_MODULE_insert(stack_st_CONF_MODULE*, conf_module_st*, int) @nogc nothrow;
    static conf_module_st* sk_CONF_MODULE_set(stack_st_CONF_MODULE*, int, conf_module_st*) @nogc nothrow;
    static int sk_CONF_MODULE_find(stack_st_CONF_MODULE*, conf_module_st*) @nogc nothrow;
    static int sk_CONF_MODULE_find_ex(stack_st_CONF_MODULE*, conf_module_st*) @nogc nothrow;
    static void sk_CONF_MODULE_sort(stack_st_CONF_MODULE*) @nogc nothrow;
    static int sk_CONF_MODULE_is_sorted(const(stack_st_CONF_MODULE)*) @nogc nothrow;
    static int sk_CONF_MODULE_num(const(stack_st_CONF_MODULE)*) @nogc nothrow;
    static stack_st_CONF_MODULE* sk_CONF_MODULE_dup(const(stack_st_CONF_MODULE)*) @nogc nothrow;
    struct stack_st_CONF_IMODULE;
    alias sk_CONF_IMODULE_compfunc = int function(const(const(conf_imodule_st)*)*, const(const(conf_imodule_st)*)*);
    alias sk_CONF_IMODULE_freefunc = void function(conf_imodule_st*);
    alias sk_CONF_IMODULE_copyfunc = conf_imodule_st* function(const(conf_imodule_st)*);
    static int sk_CONF_IMODULE_num(const(stack_st_CONF_IMODULE)*) @nogc nothrow;
    static conf_imodule_st* sk_CONF_IMODULE_value(const(stack_st_CONF_IMODULE)*, int) @nogc nothrow;
    static stack_st_CONF_IMODULE* sk_CONF_IMODULE_new(int function(const(const(conf_imodule_st)*)*, const(const(conf_imodule_st)*)*)) @nogc nothrow;
    static stack_st_CONF_IMODULE* sk_CONF_IMODULE_new_null() @nogc nothrow;
    static stack_st_CONF_IMODULE* sk_CONF_IMODULE_new_reserve(int function(const(const(conf_imodule_st)*)*, const(const(conf_imodule_st)*)*), int) @nogc nothrow;
    static int sk_CONF_IMODULE_reserve(stack_st_CONF_IMODULE*, int) @nogc nothrow;
    static void sk_CONF_IMODULE_free(stack_st_CONF_IMODULE*) @nogc nothrow;
    static void sk_CONF_IMODULE_zero(stack_st_CONF_IMODULE*) @nogc nothrow;
    static conf_imodule_st* sk_CONF_IMODULE_delete(stack_st_CONF_IMODULE*, int) @nogc nothrow;
    static conf_imodule_st* sk_CONF_IMODULE_delete_ptr(stack_st_CONF_IMODULE*, conf_imodule_st*) @nogc nothrow;
    static int sk_CONF_IMODULE_unshift(stack_st_CONF_IMODULE*, conf_imodule_st*) @nogc nothrow;
    static conf_imodule_st* sk_CONF_IMODULE_pop(stack_st_CONF_IMODULE*) @nogc nothrow;
    static conf_imodule_st* sk_CONF_IMODULE_shift(stack_st_CONF_IMODULE*) @nogc nothrow;
    static void sk_CONF_IMODULE_pop_free(stack_st_CONF_IMODULE*, void function(conf_imodule_st*)) @nogc nothrow;
    static conf_imodule_st* sk_CONF_IMODULE_set(stack_st_CONF_IMODULE*, int, conf_imodule_st*) @nogc nothrow;
    static int sk_CONF_IMODULE_find(stack_st_CONF_IMODULE*, conf_imodule_st*) @nogc nothrow;
    static int sk_CONF_IMODULE_find_ex(stack_st_CONF_IMODULE*, conf_imodule_st*) @nogc nothrow;
    static void sk_CONF_IMODULE_sort(stack_st_CONF_IMODULE*) @nogc nothrow;
    static int sk_CONF_IMODULE_is_sorted(const(stack_st_CONF_IMODULE)*) @nogc nothrow;
    static stack_st_CONF_IMODULE* sk_CONF_IMODULE_dup(const(stack_st_CONF_IMODULE)*) @nogc nothrow;
    static stack_st_CONF_IMODULE* sk_CONF_IMODULE_deep_copy(const(stack_st_CONF_IMODULE)*, conf_imodule_st* function(const(conf_imodule_st)*), void function(conf_imodule_st*)) @nogc nothrow;
    static int function(const(const(conf_imodule_st)*)*, const(const(conf_imodule_st)*)*) sk_CONF_IMODULE_set_cmp_func(stack_st_CONF_IMODULE*, int function(const(const(conf_imodule_st)*)*, const(const(conf_imodule_st)*)*)) @nogc nothrow;
    static int sk_CONF_IMODULE_insert(stack_st_CONF_IMODULE*, conf_imodule_st*, int) @nogc nothrow;
    static int sk_CONF_IMODULE_push(stack_st_CONF_IMODULE*, conf_imodule_st*) @nogc nothrow;
    alias conf_init_func = int function(conf_imodule_st*, const(conf_st)*);
    alias conf_finish_func = void function(conf_imodule_st*);
    asn1_string_st* s2i_ASN1_OCTET_STRING(v3_ext_method*, v3_ext_ctx*, const(char)*) @nogc nothrow;
    char* i2s_ASN1_OCTET_STRING(v3_ext_method*, const(asn1_string_st)*) @nogc nothrow;
    int GENERAL_NAME_get0_otherName(const(GENERAL_NAME_st)*, asn1_object_st**, asn1_type_st**) @nogc nothrow;
    int GENERAL_NAME_set0_othername(GENERAL_NAME_st*, asn1_object_st*, asn1_type_st*) @nogc nothrow;
    int CONF_set_default_method(conf_method_st*) @nogc nothrow;
    void CONF_set_nconf(conf_st*, lhash_st_CONF_VALUE*) @nogc nothrow;
    lhash_st_CONF_VALUE* CONF_load(lhash_st_CONF_VALUE*, const(char)*, c_long*) @nogc nothrow;
    lhash_st_CONF_VALUE* CONF_load_fp(lhash_st_CONF_VALUE*, _IO_FILE*, c_long*) @nogc nothrow;
    lhash_st_CONF_VALUE* CONF_load_bio(lhash_st_CONF_VALUE*, bio_st*, c_long*) @nogc nothrow;
    stack_st_CONF_VALUE* CONF_get_section(lhash_st_CONF_VALUE*, const(char)*) @nogc nothrow;
    char* CONF_get_string(lhash_st_CONF_VALUE*, const(char)*, const(char)*) @nogc nothrow;
    c_long CONF_get_number(lhash_st_CONF_VALUE*, const(char)*, const(char)*) @nogc nothrow;
    void CONF_free(lhash_st_CONF_VALUE*) @nogc nothrow;
    int CONF_dump_fp(lhash_st_CONF_VALUE*, _IO_FILE*) @nogc nothrow;
    int CONF_dump_bio(lhash_st_CONF_VALUE*, bio_st*) @nogc nothrow;
    void OPENSSL_config(const(char)*) @nogc nothrow;
    void* GENERAL_NAME_get0_value(const(GENERAL_NAME_st)*, int*) @nogc nothrow;
    conf_st* NCONF_new(conf_method_st*) @nogc nothrow;
    conf_method_st* NCONF_default() @nogc nothrow;
    conf_method_st* NCONF_WIN32() @nogc nothrow;
    void NCONF_free(conf_st*) @nogc nothrow;
    void NCONF_free_data(conf_st*) @nogc nothrow;
    int NCONF_load(conf_st*, const(char)*, c_long*) @nogc nothrow;
    int NCONF_load_fp(conf_st*, _IO_FILE*, c_long*) @nogc nothrow;
    int NCONF_load_bio(conf_st*, bio_st*, c_long*) @nogc nothrow;
    stack_st_CONF_VALUE* NCONF_get_section(const(conf_st)*, const(char)*) @nogc nothrow;
    char* NCONF_get_string(const(conf_st)*, const(char)*, const(char)*) @nogc nothrow;
    int NCONF_get_number_e(const(conf_st)*, const(char)*, const(char)*, c_long*) @nogc nothrow;
    int NCONF_dump_fp(const(conf_st)*, _IO_FILE*) @nogc nothrow;
    int NCONF_dump_bio(const(conf_st)*, bio_st*) @nogc nothrow;
    void GENERAL_NAME_set0_value(GENERAL_NAME_st*, int, void*) @nogc nothrow;
    int CONF_modules_load(const(conf_st)*, const(char)*, c_ulong) @nogc nothrow;
    int CONF_modules_load_file(const(char)*, const(char)*, c_ulong) @nogc nothrow;
    void CONF_modules_unload(int) @nogc nothrow;
    void CONF_modules_finish() @nogc nothrow;
    int OTHERNAME_cmp(otherName_st*, otherName_st*) @nogc nothrow;
    int CONF_module_add(const(char)*, int function(conf_imodule_st*, const(conf_st)*), void function(conf_imodule_st*)) @nogc nothrow;
    const(char)* CONF_imodule_get_name(const(conf_imodule_st)*) @nogc nothrow;
    const(char)* CONF_imodule_get_value(const(conf_imodule_st)*) @nogc nothrow;
    void* CONF_imodule_get_usr_data(const(conf_imodule_st)*) @nogc nothrow;
    void CONF_imodule_set_usr_data(conf_imodule_st*, void*) @nogc nothrow;
    conf_module_st* CONF_imodule_get_module(const(conf_imodule_st)*) @nogc nothrow;
    c_ulong CONF_imodule_get_flags(const(conf_imodule_st)*) @nogc nothrow;
    void CONF_imodule_set_flags(conf_imodule_st*, c_ulong) @nogc nothrow;
    void* CONF_module_get_usr_data(conf_module_st*) @nogc nothrow;
    void CONF_module_set_usr_data(conf_module_st*, void*) @nogc nothrow;
    char* CONF_get1_default_config_file() @nogc nothrow;
    int CONF_parse_list(const(char)*, int, int, int function(const(char)*, int, void*), void*) @nogc nothrow;
    void OPENSSL_load_builtin_modules() @nogc nothrow;
    EDIPartyName_st* EDIPARTYNAME_new() @nogc nothrow;
    int ERR_load_CONF_strings() @nogc nothrow;
    EDIPartyName_st* d2i_EDIPARTYNAME(EDIPartyName_st**, const(ubyte)**, c_long) @nogc nothrow;
    void EDIPARTYNAME_free(EDIPartyName_st*) @nogc nothrow;
    int i2d_EDIPARTYNAME(EDIPartyName_st*, ubyte**) @nogc nothrow;
    otherName_st* OTHERNAME_new() @nogc nothrow;
    otherName_st* d2i_OTHERNAME(otherName_st**, const(ubyte)**, c_long) @nogc nothrow;
    int i2d_OTHERNAME(otherName_st*, ubyte**) @nogc nothrow;
    void OTHERNAME_free(otherName_st*) @nogc nothrow;
    stack_st_GENERAL_NAME* v2i_GENERAL_NAMES(const(v3_ext_method)*, v3_ext_ctx*, stack_st_CONF_VALUE*) @nogc nothrow;
    stack_st_CONF_VALUE* i2v_GENERAL_NAMES(v3_ext_method*, stack_st_GENERAL_NAME*, stack_st_CONF_VALUE*) @nogc nothrow;
    stack_st_GENERAL_NAME* GENERAL_NAMES_new() @nogc nothrow;
    stack_st_GENERAL_NAME* d2i_GENERAL_NAMES(stack_st_GENERAL_NAME**, const(ubyte)**, c_long) @nogc nothrow;
    void GENERAL_NAMES_free(stack_st_GENERAL_NAME*) @nogc nothrow;
    int i2d_GENERAL_NAMES(stack_st_GENERAL_NAME*, ubyte**) @nogc nothrow;
    int GENERAL_NAME_print(bio_st*, GENERAL_NAME_st*) @nogc nothrow;
    stack_st_CONF_VALUE* i2v_GENERAL_NAME(v3_ext_method*, GENERAL_NAME_st*, stack_st_CONF_VALUE*) @nogc nothrow;
    asn1_string_st* s2i_ASN1_IA5STRING(v3_ext_method*, v3_ext_ctx*, const(char)*) @nogc nothrow;
    char* i2s_ASN1_IA5STRING(v3_ext_method*, asn1_string_st*) @nogc nothrow;
    stack_st_CONF_VALUE* i2v_ASN1_BIT_STRING(v3_ext_method*, asn1_string_st*, stack_st_CONF_VALUE*) @nogc nothrow;
    asn1_string_st* v2i_ASN1_BIT_STRING(v3_ext_method*, v3_ext_ctx*, stack_st_CONF_VALUE*) @nogc nothrow;
    int GENERAL_NAME_cmp(GENERAL_NAME_st*, GENERAL_NAME_st*) @nogc nothrow;
    GENERAL_NAME_st* GENERAL_NAME_dup(GENERAL_NAME_st*) @nogc nothrow;
    GENERAL_NAME_st* d2i_GENERAL_NAME(GENERAL_NAME_st**, const(ubyte)**, c_long) @nogc nothrow;
    GENERAL_NAME_st* GENERAL_NAME_new() @nogc nothrow;
    int i2d_GENERAL_NAME(GENERAL_NAME_st*, ubyte**) @nogc nothrow;
    void GENERAL_NAME_free(GENERAL_NAME_st*) @nogc nothrow;
    PKEY_USAGE_PERIOD_st* PKEY_USAGE_PERIOD_new() @nogc nothrow;
    PKEY_USAGE_PERIOD_st* d2i_PKEY_USAGE_PERIOD(PKEY_USAGE_PERIOD_st**, const(ubyte)**, c_long) @nogc nothrow;
    void PKEY_USAGE_PERIOD_free(PKEY_USAGE_PERIOD_st*) @nogc nothrow;
    int i2d_PKEY_USAGE_PERIOD(PKEY_USAGE_PERIOD_st*, ubyte**) @nogc nothrow;
    AUTHORITY_KEYID_st* AUTHORITY_KEYID_new() @nogc nothrow;
    AUTHORITY_KEYID_st* d2i_AUTHORITY_KEYID(AUTHORITY_KEYID_st**, const(ubyte)**, c_long) @nogc nothrow;
    void AUTHORITY_KEYID_free(AUTHORITY_KEYID_st*) @nogc nothrow;
    int i2d_AUTHORITY_KEYID(AUTHORITY_KEYID_st*, ubyte**) @nogc nothrow;
    asn1_string_st* SXNET_get_id_INTEGER(SXNET_st*, asn1_string_st*) @nogc nothrow;
    struct CRYPTO_dynlock
    {
        int dummy;
    }
    alias CRYPTO_RWLOCK = void;
    void* CRYPTO_THREAD_lock_new() @nogc nothrow;
    int CRYPTO_THREAD_read_lock(void*) @nogc nothrow;
    int CRYPTO_THREAD_write_lock(void*) @nogc nothrow;
    int CRYPTO_THREAD_unlock(void*) @nogc nothrow;
    void CRYPTO_THREAD_lock_free(void*) @nogc nothrow;
    int CRYPTO_atomic_add(int*, int, int*, void*) @nogc nothrow;
    asn1_string_st* SXNET_get_id_ulong(SXNET_st*, c_ulong) @nogc nothrow;
    asn1_string_st* SXNET_get_id_asc(SXNET_st*, const(char)*) @nogc nothrow;
    int SXNET_add_id_INTEGER(SXNET_st**, asn1_string_st*, const(char)*, int) @nogc nothrow;
    int SXNET_add_id_ulong(SXNET_st**, c_ulong, const(char)*, int) @nogc nothrow;
    struct stack_st_void;
    static int function(const(const(void)*)*, const(const(void)*)*) sk_void_set_cmp_func(stack_st_void*, int function(const(const(void)*)*, const(const(void)*)*)) @nogc nothrow;
    static stack_st_void* sk_void_deep_copy(const(stack_st_void)*, void* function(const(void)*), void function(void*)) @nogc nothrow;
    static stack_st_void* sk_void_dup(const(stack_st_void)*) @nogc nothrow;
    static int sk_void_is_sorted(const(stack_st_void)*) @nogc nothrow;
    static void sk_void_sort(stack_st_void*) @nogc nothrow;
    static int sk_void_find_ex(stack_st_void*, void*) @nogc nothrow;
    static int sk_void_find(stack_st_void*, void*) @nogc nothrow;
    static void* sk_void_set(stack_st_void*, int, void*) @nogc nothrow;
    static int sk_void_insert(stack_st_void*, void*, int) @nogc nothrow;
    static void sk_void_pop_free(stack_st_void*, void function(void*)) @nogc nothrow;
    static void* sk_void_shift(stack_st_void*) @nogc nothrow;
    static void* sk_void_pop(stack_st_void*) @nogc nothrow;
    static int sk_void_unshift(stack_st_void*, void*) @nogc nothrow;
    static int sk_void_push(stack_st_void*, void*) @nogc nothrow;
    static void* sk_void_delete_ptr(stack_st_void*, void*) @nogc nothrow;
    static void* sk_void_delete(stack_st_void*, int) @nogc nothrow;
    static void sk_void_zero(stack_st_void*) @nogc nothrow;
    static void sk_void_free(stack_st_void*) @nogc nothrow;
    static int sk_void_reserve(stack_st_void*, int) @nogc nothrow;
    static stack_st_void* sk_void_new_reserve(int function(const(const(void)*)*, const(const(void)*)*), int) @nogc nothrow;
    static stack_st_void* sk_void_new_null() @nogc nothrow;
    static stack_st_void* sk_void_new(int function(const(const(void)*)*, const(const(void)*)*)) @nogc nothrow;
    static void* sk_void_value(const(stack_st_void)*, int) @nogc nothrow;
    static int sk_void_num(const(stack_st_void)*) @nogc nothrow;
    alias sk_void_freefunc = void function(void*);
    alias sk_void_copyfunc = void* function(const(void)*);
    alias sk_void_compfunc = int function(const(const(void)*)*, const(const(void)*)*);
    int SXNET_add_id_asc(SXNET_st**, const(char)*, const(char)*, int) @nogc nothrow;
    SXNET_ID_st* SXNETID_new() @nogc nothrow;
    SXNET_ID_st* d2i_SXNETID(SXNET_ID_st**, const(ubyte)**, c_long) @nogc nothrow;
    void SXNETID_free(SXNET_ID_st*) @nogc nothrow;
    int i2d_SXNETID(SXNET_ID_st*, ubyte**) @nogc nothrow;
    SXNET_st* SXNET_new() @nogc nothrow;
    SXNET_st* d2i_SXNET(SXNET_st**, const(ubyte)**, c_long) @nogc nothrow;
    void SXNET_free(SXNET_st*) @nogc nothrow;
    int i2d_SXNET(SXNET_st*, ubyte**) @nogc nothrow;
    BASIC_CONSTRAINTS_st* BASIC_CONSTRAINTS_new() @nogc nothrow;
    BASIC_CONSTRAINTS_st* d2i_BASIC_CONSTRAINTS(BASIC_CONSTRAINTS_st**, const(ubyte)**, c_long) @nogc nothrow;
    int i2d_BASIC_CONSTRAINTS(BASIC_CONSTRAINTS_st*, ubyte**) @nogc nothrow;
    void BASIC_CONSTRAINTS_free(BASIC_CONSTRAINTS_st*) @nogc nothrow;
    int CRYPTO_mem_ctrl(int) @nogc nothrow;
    static stack_st_X509_PURPOSE* sk_X509_PURPOSE_new(int function(const(const(x509_purpose_st)*)*, const(const(x509_purpose_st)*)*)) @nogc nothrow;
    static int function(const(const(x509_purpose_st)*)*, const(const(x509_purpose_st)*)*) sk_X509_PURPOSE_set_cmp_func(stack_st_X509_PURPOSE*, int function(const(const(x509_purpose_st)*)*, const(const(x509_purpose_st)*)*)) @nogc nothrow;
    static stack_st_X509_PURPOSE* sk_X509_PURPOSE_dup(const(stack_st_X509_PURPOSE)*) @nogc nothrow;
    static stack_st_X509_PURPOSE* sk_X509_PURPOSE_deep_copy(const(stack_st_X509_PURPOSE)*, x509_purpose_st* function(const(x509_purpose_st)*), void function(x509_purpose_st*)) @nogc nothrow;
    static int sk_X509_PURPOSE_is_sorted(const(stack_st_X509_PURPOSE)*) @nogc nothrow;
    static void sk_X509_PURPOSE_sort(stack_st_X509_PURPOSE*) @nogc nothrow;
    static int sk_X509_PURPOSE_find_ex(stack_st_X509_PURPOSE*, x509_purpose_st*) @nogc nothrow;
    static int sk_X509_PURPOSE_find(stack_st_X509_PURPOSE*, x509_purpose_st*) @nogc nothrow;
    static x509_purpose_st* sk_X509_PURPOSE_set(stack_st_X509_PURPOSE*, int, x509_purpose_st*) @nogc nothrow;
    static int sk_X509_PURPOSE_insert(stack_st_X509_PURPOSE*, x509_purpose_st*, int) @nogc nothrow;
    static void sk_X509_PURPOSE_pop_free(stack_st_X509_PURPOSE*, void function(x509_purpose_st*)) @nogc nothrow;
    static x509_purpose_st* sk_X509_PURPOSE_shift(stack_st_X509_PURPOSE*) @nogc nothrow;
    c_ulong OPENSSL_strlcpy(char*, const(char)*, c_ulong) @nogc nothrow;
    c_ulong OPENSSL_strlcat(char*, const(char)*, c_ulong) @nogc nothrow;
    c_ulong OPENSSL_strnlen(const(char)*, c_ulong) @nogc nothrow;
    char* OPENSSL_buf2hexstr(const(ubyte)*, c_long) @nogc nothrow;
    ubyte* OPENSSL_hexstr2buf(const(char)*, c_long*) @nogc nothrow;
    int OPENSSL_hexchar2int(ubyte) @nogc nothrow;
    static x509_purpose_st* sk_X509_PURPOSE_pop(stack_st_X509_PURPOSE*) @nogc nothrow;
    c_ulong OpenSSL_version_num() @nogc nothrow;
    const(char)* OpenSSL_version(int) @nogc nothrow;
    static int sk_X509_PURPOSE_unshift(stack_st_X509_PURPOSE*, x509_purpose_st*) @nogc nothrow;
    static int sk_X509_PURPOSE_push(stack_st_X509_PURPOSE*, x509_purpose_st*) @nogc nothrow;
    static x509_purpose_st* sk_X509_PURPOSE_delete_ptr(stack_st_X509_PURPOSE*, x509_purpose_st*) @nogc nothrow;
    static x509_purpose_st* sk_X509_PURPOSE_delete(stack_st_X509_PURPOSE*, int) @nogc nothrow;
    static void sk_X509_PURPOSE_zero(stack_st_X509_PURPOSE*) @nogc nothrow;
    static void sk_X509_PURPOSE_free(stack_st_X509_PURPOSE*) @nogc nothrow;
    int OPENSSL_issetugid() @nogc nothrow;
    alias CRYPTO_EX_new = void function(void*, void*, crypto_ex_data_st*, int, c_long, void*);
    alias CRYPTO_EX_free = void function(void*, void*, crypto_ex_data_st*, int, c_long, void*);
    alias CRYPTO_EX_dup = int function(crypto_ex_data_st*, const(crypto_ex_data_st)*, void*, int, c_long, void*);
    int CRYPTO_get_ex_new_index(int, c_long, void*, void function(void*, void*, crypto_ex_data_st*, int, c_long, void*), int function(crypto_ex_data_st*, const(crypto_ex_data_st)*, void*, int, c_long, void*), void function(void*, void*, crypto_ex_data_st*, int, c_long, void*)) @nogc nothrow;
    int CRYPTO_free_ex_index(int, int) @nogc nothrow;
    int CRYPTO_new_ex_data(int, void*, crypto_ex_data_st*) @nogc nothrow;
    int CRYPTO_dup_ex_data(int, crypto_ex_data_st*, const(crypto_ex_data_st)*) @nogc nothrow;
    void CRYPTO_free_ex_data(int, void*, crypto_ex_data_st*) @nogc nothrow;
    int CRYPTO_set_ex_data(crypto_ex_data_st*, int, void*) @nogc nothrow;
    void* CRYPTO_get_ex_data(const(crypto_ex_data_st)*, int) @nogc nothrow;
    static int sk_X509_PURPOSE_reserve(stack_st_X509_PURPOSE*, int) @nogc nothrow;
    static stack_st_X509_PURPOSE* sk_X509_PURPOSE_new_reserve(int function(const(const(x509_purpose_st)*)*, const(const(x509_purpose_st)*)*), int) @nogc nothrow;
    static stack_st_X509_PURPOSE* sk_X509_PURPOSE_new_null() @nogc nothrow;
    static x509_purpose_st* sk_X509_PURPOSE_value(const(stack_st_X509_PURPOSE)*, int) @nogc nothrow;
    static int sk_X509_PURPOSE_num(const(stack_st_X509_PURPOSE)*) @nogc nothrow;
    alias sk_X509_PURPOSE_copyfunc = x509_purpose_st* function(const(x509_purpose_st)*);
    alias sk_X509_PURPOSE_freefunc = void function(x509_purpose_st*);
    alias sk_X509_PURPOSE_compfunc = int function(const(const(x509_purpose_st)*)*, const(const(x509_purpose_st)*)*);
    struct stack_st_X509_PURPOSE;
    struct x509_purpose_st
    {
        int purpose;
        int trust;
        int flags;
        int function(const(x509_purpose_st)*, const(x509_st)*, int) check_purpose;
        char* name;
        char* sname;
        void* usr_data;
    }
    alias CRYPTO_THREADID = crypto_threadid_st;
    struct crypto_threadid_st
    {
        int dummy;
    }
    alias X509_PURPOSE = x509_purpose_st;
    PROXY_CERT_INFO_EXTENSION_st* PROXY_CERT_INFO_EXTENSION_new() @nogc nothrow;
    PROXY_CERT_INFO_EXTENSION_st* d2i_PROXY_CERT_INFO_EXTENSION(PROXY_CERT_INFO_EXTENSION_st**, const(ubyte)**, c_long) @nogc nothrow;
    void PROXY_CERT_INFO_EXTENSION_free(PROXY_CERT_INFO_EXTENSION_st*) @nogc nothrow;
    int i2d_PROXY_CERT_INFO_EXTENSION(PROXY_CERT_INFO_EXTENSION_st*, ubyte**) @nogc nothrow;
    PROXY_POLICY_st* PROXY_POLICY_new() @nogc nothrow;
    PROXY_POLICY_st* d2i_PROXY_POLICY(PROXY_POLICY_st**, const(ubyte)**, c_long) @nogc nothrow;
    void PROXY_POLICY_free(PROXY_POLICY_st*) @nogc nothrow;
    int i2d_PROXY_POLICY(PROXY_POLICY_st*, ubyte**) @nogc nothrow;
    struct PROXY_CERT_INFO_EXTENSION_st
    {
        asn1_string_st* pcPathLengthConstraint;
        PROXY_POLICY_st* proxyPolicy;
    }
    alias PROXY_CERT_INFO_EXTENSION = PROXY_CERT_INFO_EXTENSION_st;
    struct PROXY_POLICY_st
    {
        asn1_object_st* policyLanguage;
        asn1_string_st* policy;
    }
    alias PROXY_POLICY = PROXY_POLICY_st;
    int CRYPTO_set_mem_functions(void* function(c_ulong, const(char)*, int), void* function(void*, c_ulong, const(char)*, int), void function(void*, const(char)*, int)) @nogc nothrow;
    int CRYPTO_set_mem_debug(int) @nogc nothrow;
    void CRYPTO_get_mem_functions(void* function(c_ulong, const(char)*, int)*, void* function(void*, c_ulong, const(char)*, int)*, void function(void*, const(char)*, int)*) @nogc nothrow;
    void* CRYPTO_malloc(c_ulong, const(char)*, int) @nogc nothrow;
    void* CRYPTO_zalloc(c_ulong, const(char)*, int) @nogc nothrow;
    void* CRYPTO_memdup(const(void)*, c_ulong, const(char)*, int) @nogc nothrow;
    char* CRYPTO_strdup(const(char)*, const(char)*, int) @nogc nothrow;
    char* CRYPTO_strndup(const(char)*, c_ulong, const(char)*, int) @nogc nothrow;
    void CRYPTO_free(void*, const(char)*, int) @nogc nothrow;
    void CRYPTO_clear_free(void*, c_ulong, const(char)*, int) @nogc nothrow;
    void* CRYPTO_realloc(void*, c_ulong, const(char)*, int) @nogc nothrow;
    void* CRYPTO_clear_realloc(void*, c_ulong, c_ulong, const(char)*, int) @nogc nothrow;
    int CRYPTO_secure_malloc_init(c_ulong, int) @nogc nothrow;
    int CRYPTO_secure_malloc_done() @nogc nothrow;
    void* CRYPTO_secure_malloc(c_ulong, const(char)*, int) @nogc nothrow;
    void* CRYPTO_secure_zalloc(c_ulong, const(char)*, int) @nogc nothrow;
    void CRYPTO_secure_free(void*, const(char)*, int) @nogc nothrow;
    void CRYPTO_secure_clear_free(void*, c_ulong, const(char)*, int) @nogc nothrow;
    int CRYPTO_secure_allocated(const(void)*) @nogc nothrow;
    int CRYPTO_secure_malloc_initialized() @nogc nothrow;
    c_ulong CRYPTO_secure_actual_size(void*) @nogc nothrow;
    c_ulong CRYPTO_secure_used() @nogc nothrow;
    void OPENSSL_cleanse(void*, c_ulong) @nogc nothrow;
    void OPENSSL_die(const(char)*, const(char)*, int) @nogc nothrow;
    struct POLICY_CONSTRAINTS_st
    {
        asn1_string_st* requireExplicitPolicy;
        asn1_string_st* inhibitPolicyMapping;
    }
    alias POLICY_CONSTRAINTS = POLICY_CONSTRAINTS_st;
    int OPENSSL_isservice() @nogc nothrow;
    int FIPS_mode() @nogc nothrow;
    int FIPS_mode_set(int) @nogc nothrow;
    void OPENSSL_init() @nogc nothrow;
    void OPENSSL_fork_prepare() @nogc nothrow;
    void OPENSSL_fork_parent() @nogc nothrow;
    void OPENSSL_fork_child() @nogc nothrow;
    tm* OPENSSL_gmtime(const(c_long)*, tm*) @nogc nothrow;
    int OPENSSL_gmtime_adj(tm*, int, c_long) @nogc nothrow;
    int OPENSSL_gmtime_diff(int*, int*, const(tm)*, const(tm)*) @nogc nothrow;
    int CRYPTO_memcmp(const(void)*, const(void)*, c_ulong) @nogc nothrow;
    static int sk_GENERAL_SUBTREE_unshift(stack_st_GENERAL_SUBTREE*, GENERAL_SUBTREE_st*) @nogc nothrow;
    static GENERAL_SUBTREE_st* sk_GENERAL_SUBTREE_shift(stack_st_GENERAL_SUBTREE*) @nogc nothrow;
    static GENERAL_SUBTREE_st* sk_GENERAL_SUBTREE_pop(stack_st_GENERAL_SUBTREE*) @nogc nothrow;
    static int sk_GENERAL_SUBTREE_insert(stack_st_GENERAL_SUBTREE*, GENERAL_SUBTREE_st*, int) @nogc nothrow;
    static int sk_GENERAL_SUBTREE_push(stack_st_GENERAL_SUBTREE*, GENERAL_SUBTREE_st*) @nogc nothrow;
    static GENERAL_SUBTREE_st* sk_GENERAL_SUBTREE_delete_ptr(stack_st_GENERAL_SUBTREE*, GENERAL_SUBTREE_st*) @nogc nothrow;
    static GENERAL_SUBTREE_st* sk_GENERAL_SUBTREE_delete(stack_st_GENERAL_SUBTREE*, int) @nogc nothrow;
    static GENERAL_SUBTREE_st* sk_GENERAL_SUBTREE_set(stack_st_GENERAL_SUBTREE*, int, GENERAL_SUBTREE_st*) @nogc nothrow;
    static int sk_GENERAL_SUBTREE_find(stack_st_GENERAL_SUBTREE*, GENERAL_SUBTREE_st*) @nogc nothrow;
    static int sk_GENERAL_SUBTREE_find_ex(stack_st_GENERAL_SUBTREE*, GENERAL_SUBTREE_st*) @nogc nothrow;
    static void sk_GENERAL_SUBTREE_sort(stack_st_GENERAL_SUBTREE*) @nogc nothrow;
    static int sk_GENERAL_SUBTREE_is_sorted(const(stack_st_GENERAL_SUBTREE)*) @nogc nothrow;
    static stack_st_GENERAL_SUBTREE* sk_GENERAL_SUBTREE_dup(const(stack_st_GENERAL_SUBTREE)*) @nogc nothrow;
    static stack_st_GENERAL_SUBTREE* sk_GENERAL_SUBTREE_deep_copy(const(stack_st_GENERAL_SUBTREE)*, GENERAL_SUBTREE_st* function(const(GENERAL_SUBTREE_st)*), void function(GENERAL_SUBTREE_st*)) @nogc nothrow;
    static void sk_GENERAL_SUBTREE_zero(stack_st_GENERAL_SUBTREE*) @nogc nothrow;
    static void sk_GENERAL_SUBTREE_free(stack_st_GENERAL_SUBTREE*) @nogc nothrow;
    static int sk_GENERAL_SUBTREE_reserve(stack_st_GENERAL_SUBTREE*, int) @nogc nothrow;
    void OPENSSL_cleanup() @nogc nothrow;
    int OPENSSL_init_crypto(c_ulong, const(ossl_init_settings_st)*) @nogc nothrow;
    int OPENSSL_atexit(void function()) @nogc nothrow;
    void OPENSSL_thread_stop() @nogc nothrow;
    ossl_init_settings_st* OPENSSL_INIT_new() @nogc nothrow;
    int OPENSSL_INIT_set_config_filename(ossl_init_settings_st*, const(char)*) @nogc nothrow;
    void OPENSSL_INIT_set_config_file_flags(ossl_init_settings_st*, c_ulong) @nogc nothrow;
    int OPENSSL_INIT_set_config_appname(ossl_init_settings_st*, const(char)*) @nogc nothrow;
    void OPENSSL_INIT_free(ossl_init_settings_st*) @nogc nothrow;
    alias CRYPTO_ONCE = int;
    alias CRYPTO_THREAD_LOCAL = uint;
    alias CRYPTO_THREAD_ID = c_ulong;
    static stack_st_GENERAL_SUBTREE* sk_GENERAL_SUBTREE_new_reserve(int function(const(const(GENERAL_SUBTREE_st)*)*, const(const(GENERAL_SUBTREE_st)*)*), int) @nogc nothrow;
    int CRYPTO_THREAD_run_once(int*, void function()) @nogc nothrow;
    int CRYPTO_THREAD_init_local(uint*, void function(void*)) @nogc nothrow;
    void* CRYPTO_THREAD_get_local(uint*) @nogc nothrow;
    int CRYPTO_THREAD_set_local(uint*, void*) @nogc nothrow;
    int CRYPTO_THREAD_cleanup_local(uint*) @nogc nothrow;
    c_ulong CRYPTO_THREAD_get_current_id() @nogc nothrow;
    int CRYPTO_THREAD_compare_id(c_ulong, c_ulong) @nogc nothrow;
    static stack_st_GENERAL_SUBTREE* sk_GENERAL_SUBTREE_new_null() @nogc nothrow;
    int ERR_load_CRYPTO_strings() @nogc nothrow;
    static stack_st_GENERAL_SUBTREE* sk_GENERAL_SUBTREE_new(int function(const(const(GENERAL_SUBTREE_st)*)*, const(const(GENERAL_SUBTREE_st)*)*)) @nogc nothrow;
    struct stack_st_GENERAL_SUBTREE;
    static GENERAL_SUBTREE_st* sk_GENERAL_SUBTREE_value(const(stack_st_GENERAL_SUBTREE)*, int) @nogc nothrow;
    static int sk_GENERAL_SUBTREE_num(const(stack_st_GENERAL_SUBTREE)*) @nogc nothrow;
    alias sk_GENERAL_SUBTREE_copyfunc = GENERAL_SUBTREE_st* function(const(GENERAL_SUBTREE_st)*);
    alias sk_GENERAL_SUBTREE_freefunc = void function(GENERAL_SUBTREE_st*);
    alias sk_GENERAL_SUBTREE_compfunc = int function(const(const(GENERAL_SUBTREE_st)*)*, const(const(GENERAL_SUBTREE_st)*)*);
    static int function(const(const(GENERAL_SUBTREE_st)*)*, const(const(GENERAL_SUBTREE_st)*)*) sk_GENERAL_SUBTREE_set_cmp_func(stack_st_GENERAL_SUBTREE*, int function(const(const(GENERAL_SUBTREE_st)*)*, const(const(GENERAL_SUBTREE_st)*)*)) @nogc nothrow;
    static void sk_GENERAL_SUBTREE_pop_free(stack_st_GENERAL_SUBTREE*, void function(GENERAL_SUBTREE_st*)) @nogc nothrow;
    struct GENERAL_SUBTREE_st
    {
        GENERAL_NAME_st* base;
        asn1_string_st* minimum;
        asn1_string_st* maximum;
    }
    alias GENERAL_SUBTREE = GENERAL_SUBTREE_st;
    alias POLICY_MAPPINGS = stack_st_POLICY_MAPPING;
    static stack_st_POLICY_MAPPING* sk_POLICY_MAPPING_new_reserve(int function(const(const(POLICY_MAPPING_st)*)*, const(const(POLICY_MAPPING_st)*)*), int) @nogc nothrow;
    static int function(const(const(POLICY_MAPPING_st)*)*, const(const(POLICY_MAPPING_st)*)*) sk_POLICY_MAPPING_set_cmp_func(stack_st_POLICY_MAPPING*, int function(const(const(POLICY_MAPPING_st)*)*, const(const(POLICY_MAPPING_st)*)*)) @nogc nothrow;
    static stack_st_POLICY_MAPPING* sk_POLICY_MAPPING_dup(const(stack_st_POLICY_MAPPING)*) @nogc nothrow;
    struct stack_st_POLICY_MAPPING;
    alias sk_POLICY_MAPPING_compfunc = int function(const(const(POLICY_MAPPING_st)*)*, const(const(POLICY_MAPPING_st)*)*);
    alias sk_POLICY_MAPPING_freefunc = void function(POLICY_MAPPING_st*);
    alias sk_POLICY_MAPPING_copyfunc = POLICY_MAPPING_st* function(const(POLICY_MAPPING_st)*);
    static int sk_POLICY_MAPPING_is_sorted(const(stack_st_POLICY_MAPPING)*) @nogc nothrow;
    static void sk_POLICY_MAPPING_sort(stack_st_POLICY_MAPPING*) @nogc nothrow;
    static int sk_POLICY_MAPPING_find_ex(stack_st_POLICY_MAPPING*, POLICY_MAPPING_st*) @nogc nothrow;
    static int sk_POLICY_MAPPING_find(stack_st_POLICY_MAPPING*, POLICY_MAPPING_st*) @nogc nothrow;
    static POLICY_MAPPING_st* sk_POLICY_MAPPING_set(stack_st_POLICY_MAPPING*, int, POLICY_MAPPING_st*) @nogc nothrow;
    static int sk_POLICY_MAPPING_insert(stack_st_POLICY_MAPPING*, POLICY_MAPPING_st*, int) @nogc nothrow;
    static void sk_POLICY_MAPPING_pop_free(stack_st_POLICY_MAPPING*, void function(POLICY_MAPPING_st*)) @nogc nothrow;
    static POLICY_MAPPING_st* sk_POLICY_MAPPING_shift(stack_st_POLICY_MAPPING*) @nogc nothrow;
    static POLICY_MAPPING_st* sk_POLICY_MAPPING_pop(stack_st_POLICY_MAPPING*) @nogc nothrow;
    static int sk_POLICY_MAPPING_unshift(stack_st_POLICY_MAPPING*, POLICY_MAPPING_st*) @nogc nothrow;
    static int sk_POLICY_MAPPING_push(stack_st_POLICY_MAPPING*, POLICY_MAPPING_st*) @nogc nothrow;
    static POLICY_MAPPING_st* sk_POLICY_MAPPING_delete_ptr(stack_st_POLICY_MAPPING*, POLICY_MAPPING_st*) @nogc nothrow;
    static POLICY_MAPPING_st* sk_POLICY_MAPPING_delete(stack_st_POLICY_MAPPING*, int) @nogc nothrow;
    static void sk_POLICY_MAPPING_zero(stack_st_POLICY_MAPPING*) @nogc nothrow;
    static void sk_POLICY_MAPPING_free(stack_st_POLICY_MAPPING*) @nogc nothrow;
    static int sk_POLICY_MAPPING_reserve(stack_st_POLICY_MAPPING*, int) @nogc nothrow;
    static stack_st_POLICY_MAPPING* sk_POLICY_MAPPING_deep_copy(const(stack_st_POLICY_MAPPING)*, POLICY_MAPPING_st* function(const(POLICY_MAPPING_st)*), void function(POLICY_MAPPING_st*)) @nogc nothrow;
    static stack_st_POLICY_MAPPING* sk_POLICY_MAPPING_new(int function(const(const(POLICY_MAPPING_st)*)*, const(const(POLICY_MAPPING_st)*)*)) @nogc nothrow;
    static int sk_POLICY_MAPPING_num(const(stack_st_POLICY_MAPPING)*) @nogc nothrow;
    static POLICY_MAPPING_st* sk_POLICY_MAPPING_value(const(stack_st_POLICY_MAPPING)*, int) @nogc nothrow;
    static stack_st_POLICY_MAPPING* sk_POLICY_MAPPING_new_null() @nogc nothrow;
    struct POLICY_MAPPING_st
    {
        asn1_object_st* issuerDomainPolicy;
        asn1_object_st* subjectDomainPolicy;
    }
    alias POLICY_MAPPING = POLICY_MAPPING_st;
    static int sk_POLICYINFO_find(stack_st_POLICYINFO*, POLICYINFO_st*) @nogc nothrow;
    alias sk_POLICYINFO_compfunc = int function(const(const(POLICYINFO_st)*)*, const(const(POLICYINFO_st)*)*);
    alias sk_POLICYINFO_freefunc = void function(POLICYINFO_st*);
    static int sk_POLICYINFO_num(const(stack_st_POLICYINFO)*) @nogc nothrow;
    static POLICYINFO_st* sk_POLICYINFO_value(const(stack_st_POLICYINFO)*, int) @nogc nothrow;
    static stack_st_POLICYINFO* sk_POLICYINFO_new(int function(const(const(POLICYINFO_st)*)*, const(const(POLICYINFO_st)*)*)) @nogc nothrow;
    static stack_st_POLICYINFO* sk_POLICYINFO_new_null() @nogc nothrow;
    static stack_st_POLICYINFO* sk_POLICYINFO_new_reserve(int function(const(const(POLICYINFO_st)*)*, const(const(POLICYINFO_st)*)*), int) @nogc nothrow;
    dh_st* DHparams_dup(dh_st*) @nogc nothrow;
    const(dh_method)* DH_OpenSSL() @nogc nothrow;
    void DH_set_default_method(const(dh_method)*) @nogc nothrow;
    const(dh_method)* DH_get_default_method() @nogc nothrow;
    int DH_set_method(dh_st*, const(dh_method)*) @nogc nothrow;
    dh_st* DH_new_method(engine_st*) @nogc nothrow;
    dh_st* DH_new() @nogc nothrow;
    void DH_free(dh_st*) @nogc nothrow;
    int DH_up_ref(dh_st*) @nogc nothrow;
    int DH_bits(const(dh_st)*) @nogc nothrow;
    int DH_size(const(dh_st)*) @nogc nothrow;
    int DH_security_bits(const(dh_st)*) @nogc nothrow;
    static int sk_POLICYINFO_reserve(stack_st_POLICYINFO*, int) @nogc nothrow;
    int DH_set_ex_data(dh_st*, int, void*) @nogc nothrow;
    void* DH_get_ex_data(dh_st*, int) @nogc nothrow;
    dh_st* DH_generate_parameters(int, int, void function(int, int, void*), void*) @nogc nothrow;
    int DH_generate_parameters_ex(dh_st*, int, int, bn_gencb_st*) @nogc nothrow;
    int DH_check_params_ex(const(dh_st)*) @nogc nothrow;
    int DH_check_ex(const(dh_st)*) @nogc nothrow;
    int DH_check_pub_key_ex(const(dh_st)*, const(bignum_st)*) @nogc nothrow;
    int DH_check_params(const(dh_st)*, int*) @nogc nothrow;
    int DH_check(const(dh_st)*, int*) @nogc nothrow;
    int DH_check_pub_key(const(dh_st)*, const(bignum_st)*, int*) @nogc nothrow;
    int DH_generate_key(dh_st*) @nogc nothrow;
    int DH_compute_key(ubyte*, const(bignum_st)*, dh_st*) @nogc nothrow;
    int DH_compute_key_padded(ubyte*, const(bignum_st)*, dh_st*) @nogc nothrow;
    dh_st* d2i_DHparams(dh_st**, const(ubyte)**, c_long) @nogc nothrow;
    int i2d_DHparams(const(dh_st)*, ubyte**) @nogc nothrow;
    dh_st* d2i_DHxparams(dh_st**, const(ubyte)**, c_long) @nogc nothrow;
    int i2d_DHxparams(const(dh_st)*, ubyte**) @nogc nothrow;
    int DHparams_print_fp(_IO_FILE*, const(dh_st)*) @nogc nothrow;
    int DHparams_print(bio_st*, const(dh_st)*) @nogc nothrow;
    dh_st* DH_get_1024_160() @nogc nothrow;
    dh_st* DH_get_2048_224() @nogc nothrow;
    dh_st* DH_get_2048_256() @nogc nothrow;
    dh_st* DH_new_by_nid(int) @nogc nothrow;
    int DH_get_nid(const(dh_st)*) @nogc nothrow;
    int DH_KDF_X9_42(ubyte*, c_ulong, const(ubyte)*, c_ulong, asn1_object_st*, const(ubyte)*, c_ulong, const(evp_md_st)*) @nogc nothrow;
    void DH_get0_pqg(const(dh_st)*, const(bignum_st)**, const(bignum_st)**, const(bignum_st)**) @nogc nothrow;
    int DH_set0_pqg(dh_st*, bignum_st*, bignum_st*, bignum_st*) @nogc nothrow;
    void DH_get0_key(const(dh_st)*, const(bignum_st)**, const(bignum_st)**) @nogc nothrow;
    int DH_set0_key(dh_st*, bignum_st*, bignum_st*) @nogc nothrow;
    const(bignum_st)* DH_get0_p(const(dh_st)*) @nogc nothrow;
    const(bignum_st)* DH_get0_q(const(dh_st)*) @nogc nothrow;
    const(bignum_st)* DH_get0_g(const(dh_st)*) @nogc nothrow;
    const(bignum_st)* DH_get0_priv_key(const(dh_st)*) @nogc nothrow;
    const(bignum_st)* DH_get0_pub_key(const(dh_st)*) @nogc nothrow;
    void DH_clear_flags(dh_st*, int) @nogc nothrow;
    int DH_test_flags(const(dh_st)*, int) @nogc nothrow;
    void DH_set_flags(dh_st*, int) @nogc nothrow;
    engine_st* DH_get0_engine(dh_st*) @nogc nothrow;
    c_long DH_get_length(const(dh_st)*) @nogc nothrow;
    int DH_set_length(dh_st*, c_long) @nogc nothrow;
    dh_method* DH_meth_new(const(char)*, int) @nogc nothrow;
    void DH_meth_free(dh_method*) @nogc nothrow;
    dh_method* DH_meth_dup(const(dh_method)*) @nogc nothrow;
    const(char)* DH_meth_get0_name(const(dh_method)*) @nogc nothrow;
    int DH_meth_set1_name(dh_method*, const(char)*) @nogc nothrow;
    int DH_meth_get_flags(const(dh_method)*) @nogc nothrow;
    int DH_meth_set_flags(dh_method*, int) @nogc nothrow;
    void* DH_meth_get0_app_data(const(dh_method)*) @nogc nothrow;
    int DH_meth_set0_app_data(dh_method*, void*) @nogc nothrow;
    int function(dh_st*) DH_meth_get_generate_key(const(dh_method)*) @nogc nothrow;
    int DH_meth_set_generate_key(dh_method*, int function(dh_st*)) @nogc nothrow;
    int function(ubyte*, const(bignum_st)*, dh_st*) DH_meth_get_compute_key(const(dh_method)*) @nogc nothrow;
    int DH_meth_set_compute_key(dh_method*, int function(ubyte*, const(bignum_st)*, dh_st*)) @nogc nothrow;
    int function(const(dh_st)*, bignum_st*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*, bn_mont_ctx_st*) DH_meth_get_bn_mod_exp(const(dh_method)*) @nogc nothrow;
    int DH_meth_set_bn_mod_exp(dh_method*, int function(const(dh_st)*, bignum_st*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*, bn_mont_ctx_st*)) @nogc nothrow;
    int function(dh_st*) DH_meth_get_init(const(dh_method)*) @nogc nothrow;
    int DH_meth_set_init(dh_method*, int function(dh_st*)) @nogc nothrow;
    int function(dh_st*) DH_meth_get_finish(const(dh_method)*) @nogc nothrow;
    int DH_meth_set_finish(dh_method*, int function(dh_st*)) @nogc nothrow;
    int function(dh_st*, int, int, bn_gencb_st*) DH_meth_get_generate_params(const(dh_method)*) @nogc nothrow;
    int DH_meth_set_generate_params(dh_method*, int function(dh_st*, int, int, bn_gencb_st*)) @nogc nothrow;
    static void sk_POLICYINFO_free(stack_st_POLICYINFO*) @nogc nothrow;
    static void sk_POLICYINFO_zero(stack_st_POLICYINFO*) @nogc nothrow;
    static POLICYINFO_st* sk_POLICYINFO_delete(stack_st_POLICYINFO*, int) @nogc nothrow;
    static POLICYINFO_st* sk_POLICYINFO_delete_ptr(stack_st_POLICYINFO*, POLICYINFO_st*) @nogc nothrow;
    static int sk_POLICYINFO_push(stack_st_POLICYINFO*, POLICYINFO_st*) @nogc nothrow;
    static int sk_POLICYINFO_unshift(stack_st_POLICYINFO*, POLICYINFO_st*) @nogc nothrow;
    static POLICYINFO_st* sk_POLICYINFO_pop(stack_st_POLICYINFO*) @nogc nothrow;
    static POLICYINFO_st* sk_POLICYINFO_shift(stack_st_POLICYINFO*) @nogc nothrow;
    static void sk_POLICYINFO_pop_free(stack_st_POLICYINFO*, void function(POLICYINFO_st*)) @nogc nothrow;
    static int sk_POLICYINFO_insert(stack_st_POLICYINFO*, POLICYINFO_st*, int) @nogc nothrow;
    static POLICYINFO_st* sk_POLICYINFO_set(stack_st_POLICYINFO*, int, POLICYINFO_st*) @nogc nothrow;
    alias sk_POLICYINFO_copyfunc = POLICYINFO_st* function(const(POLICYINFO_st)*);
    static void sk_POLICYINFO_sort(stack_st_POLICYINFO*) @nogc nothrow;
    static stack_st_POLICYINFO* sk_POLICYINFO_dup(const(stack_st_POLICYINFO)*) @nogc nothrow;
    static int sk_POLICYINFO_is_sorted(const(stack_st_POLICYINFO)*) @nogc nothrow;
    static stack_st_POLICYINFO* sk_POLICYINFO_deep_copy(const(stack_st_POLICYINFO)*, POLICYINFO_st* function(const(POLICYINFO_st)*), void function(POLICYINFO_st*)) @nogc nothrow;
    static int function(const(const(POLICYINFO_st)*)*, const(const(POLICYINFO_st)*)*) sk_POLICYINFO_set_cmp_func(stack_st_POLICYINFO*, int function(const(const(POLICYINFO_st)*)*, const(const(POLICYINFO_st)*)*)) @nogc nothrow;
    static int sk_POLICYINFO_find_ex(stack_st_POLICYINFO*, POLICYINFO_st*) @nogc nothrow;
    struct stack_st_POLICYINFO;
    alias CERTIFICATEPOLICIES = stack_st_POLICYINFO;
    struct POLICYINFO_st
    {
        asn1_object_st* policyid;
        stack_st_POLICYQUALINFO* qualifiers;
    }
    alias POLICYINFO = POLICYINFO_st;
    static int sk_POLICYQUALINFO_insert(stack_st_POLICYQUALINFO*, POLICYQUALINFO_st*, int) @nogc nothrow;
    static void sk_POLICYQUALINFO_pop_free(stack_st_POLICYQUALINFO*, void function(POLICYQUALINFO_st*)) @nogc nothrow;
    static POLICYQUALINFO_st* sk_POLICYQUALINFO_shift(stack_st_POLICYQUALINFO*) @nogc nothrow;
    static POLICYQUALINFO_st* sk_POLICYQUALINFO_pop(stack_st_POLICYQUALINFO*) @nogc nothrow;
    static int sk_POLICYQUALINFO_unshift(stack_st_POLICYQUALINFO*, POLICYQUALINFO_st*) @nogc nothrow;
    static int sk_POLICYQUALINFO_push(stack_st_POLICYQUALINFO*, POLICYQUALINFO_st*) @nogc nothrow;
    static POLICYQUALINFO_st* sk_POLICYQUALINFO_delete_ptr(stack_st_POLICYQUALINFO*, POLICYQUALINFO_st*) @nogc nothrow;
    static stack_st_POLICYQUALINFO* sk_POLICYQUALINFO_new_reserve(int function(const(const(POLICYQUALINFO_st)*)*, const(const(POLICYQUALINFO_st)*)*), int) @nogc nothrow;
    static POLICYQUALINFO_st* sk_POLICYQUALINFO_delete(stack_st_POLICYQUALINFO*, int) @nogc nothrow;
    static void sk_POLICYQUALINFO_zero(stack_st_POLICYQUALINFO*) @nogc nothrow;
    static void sk_POLICYQUALINFO_free(stack_st_POLICYQUALINFO*) @nogc nothrow;
    static int sk_POLICYQUALINFO_reserve(stack_st_POLICYQUALINFO*, int) @nogc nothrow;
    int ERR_load_DH_strings() @nogc nothrow;
    static POLICYQUALINFO_st* sk_POLICYQUALINFO_set(stack_st_POLICYQUALINFO*, int, POLICYQUALINFO_st*) @nogc nothrow;
    static POLICYQUALINFO_st* sk_POLICYQUALINFO_value(const(stack_st_POLICYQUALINFO)*, int) @nogc nothrow;
    static int sk_POLICYQUALINFO_num(const(stack_st_POLICYQUALINFO)*) @nogc nothrow;
    alias sk_POLICYQUALINFO_copyfunc = POLICYQUALINFO_st* function(const(POLICYQUALINFO_st)*);
    alias sk_POLICYQUALINFO_freefunc = void function(POLICYQUALINFO_st*);
    alias sk_POLICYQUALINFO_compfunc = int function(const(const(POLICYQUALINFO_st)*)*, const(const(POLICYQUALINFO_st)*)*);
    static stack_st_POLICYQUALINFO* sk_POLICYQUALINFO_new(int function(const(const(POLICYQUALINFO_st)*)*, const(const(POLICYQUALINFO_st)*)*)) @nogc nothrow;
    static int sk_POLICYQUALINFO_find_ex(stack_st_POLICYQUALINFO*, POLICYQUALINFO_st*) @nogc nothrow;
    static stack_st_POLICYQUALINFO* sk_POLICYQUALINFO_new_null() @nogc nothrow;
    static int sk_POLICYQUALINFO_find(stack_st_POLICYQUALINFO*, POLICYQUALINFO_st*) @nogc nothrow;
    static void sk_POLICYQUALINFO_sort(stack_st_POLICYQUALINFO*) @nogc nothrow;
    static int sk_POLICYQUALINFO_is_sorted(const(stack_st_POLICYQUALINFO)*) @nogc nothrow;
    static stack_st_POLICYQUALINFO* sk_POLICYQUALINFO_dup(const(stack_st_POLICYQUALINFO)*) @nogc nothrow;
    static stack_st_POLICYQUALINFO* sk_POLICYQUALINFO_deep_copy(const(stack_st_POLICYQUALINFO)*, POLICYQUALINFO_st* function(const(POLICYQUALINFO_st)*), void function(POLICYQUALINFO_st*)) @nogc nothrow;
    static int function(const(const(POLICYQUALINFO_st)*)*, const(const(POLICYQUALINFO_st)*)*) sk_POLICYQUALINFO_set_cmp_func(stack_st_POLICYQUALINFO*, int function(const(const(POLICYQUALINFO_st)*)*, const(const(POLICYQUALINFO_st)*)*)) @nogc nothrow;
    struct POLICYQUALINFO_st
    {
        asn1_object_st* pqualid;
        static union _Anonymous_22
        {
            asn1_string_st* cpsuri;
            USERNOTICE_st* usernotice;
            asn1_type_st* other;
        }
        _Anonymous_22 d;
    }
    alias POLICYQUALINFO = POLICYQUALINFO_st;
    struct USERNOTICE_st
    {
        NOTICEREF_st* noticeref;
        asn1_string_st* exptext;
    }
    alias USERNOTICE = USERNOTICE_st;
    struct NOTICEREF_st
    {
        asn1_string_st* organization;
        stack_st_ASN1_INTEGER* noticenos;
    }
    alias NOTICEREF = NOTICEREF_st;
    struct SXNET_st
    {
        asn1_string_st* version_;
        stack_st_SXNETID* ids;
    }
    alias SXNET = SXNET_st;
    static int sk_SXNETID_is_sorted(const(stack_st_SXNETID)*) @nogc nothrow;
    struct stack_st_SXNETID;
    alias sk_SXNETID_compfunc = int function(const(const(SXNET_ID_st)*)*, const(const(SXNET_ID_st)*)*);
    alias sk_SXNETID_freefunc = void function(SXNET_ID_st*);
    alias sk_SXNETID_copyfunc = SXNET_ID_st* function(const(SXNET_ID_st)*);
    static int sk_SXNETID_num(const(stack_st_SXNETID)*) @nogc nothrow;
    static SXNET_ID_st* sk_SXNETID_value(const(stack_st_SXNETID)*, int) @nogc nothrow;
    static stack_st_SXNETID* sk_SXNETID_new(int function(const(const(SXNET_ID_st)*)*, const(const(SXNET_ID_st)*)*)) @nogc nothrow;
    static stack_st_SXNETID* sk_SXNETID_new_null() @nogc nothrow;
    static stack_st_SXNETID* sk_SXNETID_new_reserve(int function(const(const(SXNET_ID_st)*)*, const(const(SXNET_ID_st)*)*), int) @nogc nothrow;
    static int sk_SXNETID_reserve(stack_st_SXNETID*, int) @nogc nothrow;
    static void sk_SXNETID_free(stack_st_SXNETID*) @nogc nothrow;
    static void sk_SXNETID_zero(stack_st_SXNETID*) @nogc nothrow;
    static SXNET_ID_st* sk_SXNETID_delete(stack_st_SXNETID*, int) @nogc nothrow;
    static SXNET_ID_st* sk_SXNETID_delete_ptr(stack_st_SXNETID*, SXNET_ID_st*) @nogc nothrow;
    static int sk_SXNETID_push(stack_st_SXNETID*, SXNET_ID_st*) @nogc nothrow;
    static int sk_SXNETID_unshift(stack_st_SXNETID*, SXNET_ID_st*) @nogc nothrow;
    static SXNET_ID_st* sk_SXNETID_pop(stack_st_SXNETID*) @nogc nothrow;
    static SXNET_ID_st* sk_SXNETID_shift(stack_st_SXNETID*) @nogc nothrow;
    static void sk_SXNETID_pop_free(stack_st_SXNETID*, void function(SXNET_ID_st*)) @nogc nothrow;
    static int sk_SXNETID_insert(stack_st_SXNETID*, SXNET_ID_st*, int) @nogc nothrow;
    static SXNET_ID_st* sk_SXNETID_set(stack_st_SXNETID*, int, SXNET_ID_st*) @nogc nothrow;
    static int sk_SXNETID_find(stack_st_SXNETID*, SXNET_ID_st*) @nogc nothrow;
    static int sk_SXNETID_find_ex(stack_st_SXNETID*, SXNET_ID_st*) @nogc nothrow;
    static void sk_SXNETID_sort(stack_st_SXNETID*) @nogc nothrow;
    static stack_st_SXNETID* sk_SXNETID_dup(const(stack_st_SXNETID)*) @nogc nothrow;
    static stack_st_SXNETID* sk_SXNETID_deep_copy(const(stack_st_SXNETID)*, SXNET_ID_st* function(const(SXNET_ID_st)*), void function(SXNET_ID_st*)) @nogc nothrow;
    static int function(const(const(SXNET_ID_st)*)*, const(const(SXNET_ID_st)*)*) sk_SXNETID_set_cmp_func(stack_st_SXNETID*, int function(const(const(SXNET_ID_st)*)*, const(const(SXNET_ID_st)*)*)) @nogc nothrow;
    struct SXNET_ID_st
    {
        asn1_string_st* zone;
        asn1_string_st* user;
    }
    alias SXNETID = SXNET_ID_st;
    static int function(const(const(DIST_POINT_st)*)*, const(const(DIST_POINT_st)*)*) sk_DIST_POINT_set_cmp_func(stack_st_DIST_POINT*, int function(const(const(DIST_POINT_st)*)*, const(const(DIST_POINT_st)*)*)) @nogc nothrow;
    static stack_st_DIST_POINT* sk_DIST_POINT_deep_copy(const(stack_st_DIST_POINT)*, DIST_POINT_st* function(const(DIST_POINT_st)*), void function(DIST_POINT_st*)) @nogc nothrow;
    static stack_st_DIST_POINT* sk_DIST_POINT_dup(const(stack_st_DIST_POINT)*) @nogc nothrow;
    alias DSA_SIG = DSA_SIG_st;
    struct DSA_SIG_st;
    static void sk_DIST_POINT_zero(stack_st_DIST_POINT*) @nogc nothrow;
    static void sk_DIST_POINT_free(stack_st_DIST_POINT*) @nogc nothrow;
    static int sk_DIST_POINT_reserve(stack_st_DIST_POINT*, int) @nogc nothrow;
    static stack_st_DIST_POINT* sk_DIST_POINT_new_reserve(int function(const(const(DIST_POINT_st)*)*, const(const(DIST_POINT_st)*)*), int) @nogc nothrow;
    dsa_st* DSAparams_dup(dsa_st*) @nogc nothrow;
    DSA_SIG_st* DSA_SIG_new() @nogc nothrow;
    void DSA_SIG_free(DSA_SIG_st*) @nogc nothrow;
    int i2d_DSA_SIG(const(DSA_SIG_st)*, ubyte**) @nogc nothrow;
    DSA_SIG_st* d2i_DSA_SIG(DSA_SIG_st**, const(ubyte)**, c_long) @nogc nothrow;
    void DSA_SIG_get0(const(DSA_SIG_st)*, const(bignum_st)**, const(bignum_st)**) @nogc nothrow;
    int DSA_SIG_set0(DSA_SIG_st*, bignum_st*, bignum_st*) @nogc nothrow;
    DSA_SIG_st* DSA_do_sign(const(ubyte)*, int, dsa_st*) @nogc nothrow;
    int DSA_do_verify(const(ubyte)*, int, DSA_SIG_st*, dsa_st*) @nogc nothrow;
    const(dsa_method)* DSA_OpenSSL() @nogc nothrow;
    void DSA_set_default_method(const(dsa_method)*) @nogc nothrow;
    const(dsa_method)* DSA_get_default_method() @nogc nothrow;
    int DSA_set_method(dsa_st*, const(dsa_method)*) @nogc nothrow;
    const(dsa_method)* DSA_get_method(dsa_st*) @nogc nothrow;
    dsa_st* DSA_new() @nogc nothrow;
    dsa_st* DSA_new_method(engine_st*) @nogc nothrow;
    void DSA_free(dsa_st*) @nogc nothrow;
    int DSA_up_ref(dsa_st*) @nogc nothrow;
    int DSA_size(const(dsa_st)*) @nogc nothrow;
    int DSA_bits(const(dsa_st)*) @nogc nothrow;
    int DSA_security_bits(const(dsa_st)*) @nogc nothrow;
    int DSA_sign_setup(dsa_st*, bignum_ctx*, bignum_st**, bignum_st**) @nogc nothrow;
    int DSA_sign(int, const(ubyte)*, int, ubyte*, uint*, dsa_st*) @nogc nothrow;
    int DSA_verify(int, const(ubyte)*, int, const(ubyte)*, int, dsa_st*) @nogc nothrow;
    static int sk_DIST_POINT_num(const(stack_st_DIST_POINT)*) @nogc nothrow;
    int DSA_set_ex_data(dsa_st*, int, void*) @nogc nothrow;
    void* DSA_get_ex_data(dsa_st*, int) @nogc nothrow;
    dsa_st* d2i_DSAPublicKey(dsa_st**, const(ubyte)**, c_long) @nogc nothrow;
    dsa_st* d2i_DSAPrivateKey(dsa_st**, const(ubyte)**, c_long) @nogc nothrow;
    dsa_st* d2i_DSAparams(dsa_st**, const(ubyte)**, c_long) @nogc nothrow;
    dsa_st* DSA_generate_parameters(int, ubyte*, int, int*, c_ulong*, void function(int, int, void*), void*) @nogc nothrow;
    int DSA_generate_parameters_ex(dsa_st*, int, const(ubyte)*, int, int*, c_ulong*, bn_gencb_st*) @nogc nothrow;
    int DSA_generate_key(dsa_st*) @nogc nothrow;
    int i2d_DSAPublicKey(const(dsa_st)*, ubyte**) @nogc nothrow;
    int i2d_DSAPrivateKey(const(dsa_st)*, ubyte**) @nogc nothrow;
    int i2d_DSAparams(const(dsa_st)*, ubyte**) @nogc nothrow;
    int DSAparams_print(bio_st*, const(dsa_st)*) @nogc nothrow;
    int DSA_print(bio_st*, const(dsa_st)*, int) @nogc nothrow;
    int DSAparams_print_fp(_IO_FILE*, const(dsa_st)*) @nogc nothrow;
    int DSA_print_fp(_IO_FILE*, const(dsa_st)*, int) @nogc nothrow;
    alias sk_DIST_POINT_copyfunc = DIST_POINT_st* function(const(DIST_POINT_st)*);
    static DIST_POINT_st* sk_DIST_POINT_value(const(stack_st_DIST_POINT)*, int) @nogc nothrow;
    dh_st* DSA_dup_DH(const(dsa_st)*) @nogc nothrow;
    alias sk_DIST_POINT_freefunc = void function(DIST_POINT_st*);
    static stack_st_DIST_POINT* sk_DIST_POINT_new(int function(const(const(DIST_POINT_st)*)*, const(const(DIST_POINT_st)*)*)) @nogc nothrow;
    static stack_st_DIST_POINT* sk_DIST_POINT_new_null() @nogc nothrow;
    alias sk_DIST_POINT_compfunc = int function(const(const(DIST_POINT_st)*)*, const(const(DIST_POINT_st)*)*);
    static DIST_POINT_st* sk_DIST_POINT_delete(stack_st_DIST_POINT*, int) @nogc nothrow;
    static DIST_POINT_st* sk_DIST_POINT_delete_ptr(stack_st_DIST_POINT*, DIST_POINT_st*) @nogc nothrow;
    void DSA_get0_pqg(const(dsa_st)*, const(bignum_st)**, const(bignum_st)**, const(bignum_st)**) @nogc nothrow;
    int DSA_set0_pqg(dsa_st*, bignum_st*, bignum_st*, bignum_st*) @nogc nothrow;
    void DSA_get0_key(const(dsa_st)*, const(bignum_st)**, const(bignum_st)**) @nogc nothrow;
    int DSA_set0_key(dsa_st*, bignum_st*, bignum_st*) @nogc nothrow;
    const(bignum_st)* DSA_get0_p(const(dsa_st)*) @nogc nothrow;
    const(bignum_st)* DSA_get0_q(const(dsa_st)*) @nogc nothrow;
    const(bignum_st)* DSA_get0_g(const(dsa_st)*) @nogc nothrow;
    const(bignum_st)* DSA_get0_pub_key(const(dsa_st)*) @nogc nothrow;
    const(bignum_st)* DSA_get0_priv_key(const(dsa_st)*) @nogc nothrow;
    void DSA_clear_flags(dsa_st*, int) @nogc nothrow;
    int DSA_test_flags(const(dsa_st)*, int) @nogc nothrow;
    void DSA_set_flags(dsa_st*, int) @nogc nothrow;
    engine_st* DSA_get0_engine(dsa_st*) @nogc nothrow;
    dsa_method* DSA_meth_new(const(char)*, int) @nogc nothrow;
    void DSA_meth_free(dsa_method*) @nogc nothrow;
    dsa_method* DSA_meth_dup(const(dsa_method)*) @nogc nothrow;
    const(char)* DSA_meth_get0_name(const(dsa_method)*) @nogc nothrow;
    int DSA_meth_set1_name(dsa_method*, const(char)*) @nogc nothrow;
    int DSA_meth_get_flags(const(dsa_method)*) @nogc nothrow;
    int DSA_meth_set_flags(dsa_method*, int) @nogc nothrow;
    void* DSA_meth_get0_app_data(const(dsa_method)*) @nogc nothrow;
    int DSA_meth_set0_app_data(dsa_method*, void*) @nogc nothrow;
    DSA_SIG_st* function(const(ubyte)*, int, dsa_st*) DSA_meth_get_sign(const(dsa_method)*) @nogc nothrow;
    int DSA_meth_set_sign(dsa_method*, DSA_SIG_st* function(const(ubyte)*, int, dsa_st*)) @nogc nothrow;
    int function(dsa_st*, bignum_ctx*, bignum_st**, bignum_st**) DSA_meth_get_sign_setup(const(dsa_method)*) @nogc nothrow;
    int DSA_meth_set_sign_setup(dsa_method*, int function(dsa_st*, bignum_ctx*, bignum_st**, bignum_st**)) @nogc nothrow;
    int function(const(ubyte)*, int, DSA_SIG_st*, dsa_st*) DSA_meth_get_verify(const(dsa_method)*) @nogc nothrow;
    int DSA_meth_set_verify(dsa_method*, int function(const(ubyte)*, int, DSA_SIG_st*, dsa_st*)) @nogc nothrow;
    int function(dsa_st*, bignum_st*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*, bn_mont_ctx_st*) DSA_meth_get_mod_exp(const(dsa_method)*) @nogc nothrow;
    int DSA_meth_set_mod_exp(dsa_method*, int function(dsa_st*, bignum_st*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*, bn_mont_ctx_st*)) @nogc nothrow;
    int function(dsa_st*, bignum_st*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*, bn_mont_ctx_st*) DSA_meth_get_bn_mod_exp(const(dsa_method)*) @nogc nothrow;
    int DSA_meth_set_bn_mod_exp(dsa_method*, int function(dsa_st*, bignum_st*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*, bn_mont_ctx_st*)) @nogc nothrow;
    int function(dsa_st*) DSA_meth_get_init(const(dsa_method)*) @nogc nothrow;
    int DSA_meth_set_init(dsa_method*, int function(dsa_st*)) @nogc nothrow;
    int function(dsa_st*) DSA_meth_get_finish(const(dsa_method)*) @nogc nothrow;
    int DSA_meth_set_finish(dsa_method*, int function(dsa_st*)) @nogc nothrow;
    int function(dsa_st*, int, const(ubyte)*, int, int*, c_ulong*, bn_gencb_st*) DSA_meth_get_paramgen(const(dsa_method)*) @nogc nothrow;
    int DSA_meth_set_paramgen(dsa_method*, int function(dsa_st*, int, const(ubyte)*, int, int*, c_ulong*, bn_gencb_st*)) @nogc nothrow;
    int function(dsa_st*) DSA_meth_get_keygen(const(dsa_method)*) @nogc nothrow;
    int DSA_meth_set_keygen(dsa_method*, int function(dsa_st*)) @nogc nothrow;
    static int sk_DIST_POINT_push(stack_st_DIST_POINT*, DIST_POINT_st*) @nogc nothrow;
    int ERR_load_DSA_strings() @nogc nothrow;
    static int sk_DIST_POINT_unshift(stack_st_DIST_POINT*, DIST_POINT_st*) @nogc nothrow;
    static DIST_POINT_st* sk_DIST_POINT_pop(stack_st_DIST_POINT*) @nogc nothrow;
    static DIST_POINT_st* sk_DIST_POINT_shift(stack_st_DIST_POINT*) @nogc nothrow;
    static void sk_DIST_POINT_pop_free(stack_st_DIST_POINT*, void function(DIST_POINT_st*)) @nogc nothrow;
    static int sk_DIST_POINT_insert(stack_st_DIST_POINT*, DIST_POINT_st*, int) @nogc nothrow;
    static DIST_POINT_st* sk_DIST_POINT_set(stack_st_DIST_POINT*, int, DIST_POINT_st*) @nogc nothrow;
    static int sk_DIST_POINT_find(stack_st_DIST_POINT*, DIST_POINT_st*) @nogc nothrow;
    static int sk_DIST_POINT_find_ex(stack_st_DIST_POINT*, DIST_POINT_st*) @nogc nothrow;
    static void sk_DIST_POINT_sort(stack_st_DIST_POINT*) @nogc nothrow;
    static int sk_DIST_POINT_is_sorted(const(stack_st_DIST_POINT)*) @nogc nothrow;
    struct stack_st_DIST_POINT;
    alias CRL_DIST_POINTS = stack_st_DIST_POINT;
    struct DIST_POINT_NAME_st
    {
        int type;
        static union _Anonymous_23
        {
            stack_st_GENERAL_NAME* fullname;
            stack_st_X509_NAME_ENTRY* relativename;
        }
        _Anonymous_23 name;
        X509_name_st* dpname;
    }
    alias DIST_POINT_NAME = DIST_POINT_NAME_st;
    static ACCESS_DESCRIPTION_st* sk_ACCESS_DESCRIPTION_pop(stack_st_ACCESS_DESCRIPTION*) @nogc nothrow;
    static ACCESS_DESCRIPTION_st* sk_ACCESS_DESCRIPTION_set(stack_st_ACCESS_DESCRIPTION*, int, ACCESS_DESCRIPTION_st*) @nogc nothrow;
    static int sk_ACCESS_DESCRIPTION_find(stack_st_ACCESS_DESCRIPTION*, ACCESS_DESCRIPTION_st*) @nogc nothrow;
    static int sk_ACCESS_DESCRIPTION_insert(stack_st_ACCESS_DESCRIPTION*, ACCESS_DESCRIPTION_st*, int) @nogc nothrow;
    static void sk_ACCESS_DESCRIPTION_pop_free(stack_st_ACCESS_DESCRIPTION*, void function(ACCESS_DESCRIPTION_st*)) @nogc nothrow;
    static ACCESS_DESCRIPTION_st* sk_ACCESS_DESCRIPTION_shift(stack_st_ACCESS_DESCRIPTION*) @nogc nothrow;
    static int sk_ACCESS_DESCRIPTION_find_ex(stack_st_ACCESS_DESCRIPTION*, ACCESS_DESCRIPTION_st*) @nogc nothrow;
    static int sk_ACCESS_DESCRIPTION_unshift(stack_st_ACCESS_DESCRIPTION*, ACCESS_DESCRIPTION_st*) @nogc nothrow;
    static int sk_ACCESS_DESCRIPTION_push(stack_st_ACCESS_DESCRIPTION*, ACCESS_DESCRIPTION_st*) @nogc nothrow;
    static ACCESS_DESCRIPTION_st* sk_ACCESS_DESCRIPTION_delete_ptr(stack_st_ACCESS_DESCRIPTION*, ACCESS_DESCRIPTION_st*) @nogc nothrow;
    static ACCESS_DESCRIPTION_st* sk_ACCESS_DESCRIPTION_delete(stack_st_ACCESS_DESCRIPTION*, int) @nogc nothrow;
    static void sk_ACCESS_DESCRIPTION_zero(stack_st_ACCESS_DESCRIPTION*) @nogc nothrow;
    static void sk_ACCESS_DESCRIPTION_free(stack_st_ACCESS_DESCRIPTION*) @nogc nothrow;
    static int sk_ACCESS_DESCRIPTION_reserve(stack_st_ACCESS_DESCRIPTION*, int) @nogc nothrow;
    static stack_st_ACCESS_DESCRIPTION* sk_ACCESS_DESCRIPTION_new_reserve(int function(const(const(ACCESS_DESCRIPTION_st)*)*, const(const(ACCESS_DESCRIPTION_st)*)*), int) @nogc nothrow;
    static stack_st_ACCESS_DESCRIPTION* sk_ACCESS_DESCRIPTION_new_null() @nogc nothrow;
    static stack_st_ACCESS_DESCRIPTION* sk_ACCESS_DESCRIPTION_new(int function(const(const(ACCESS_DESCRIPTION_st)*)*, const(const(ACCESS_DESCRIPTION_st)*)*)) @nogc nothrow;
    static ACCESS_DESCRIPTION_st* sk_ACCESS_DESCRIPTION_value(const(stack_st_ACCESS_DESCRIPTION)*, int) @nogc nothrow;
    static int sk_ACCESS_DESCRIPTION_num(const(stack_st_ACCESS_DESCRIPTION)*) @nogc nothrow;
    static void sk_ACCESS_DESCRIPTION_sort(stack_st_ACCESS_DESCRIPTION*) @nogc nothrow;
    static int sk_ACCESS_DESCRIPTION_is_sorted(const(stack_st_ACCESS_DESCRIPTION)*) @nogc nothrow;
    static stack_st_ACCESS_DESCRIPTION* sk_ACCESS_DESCRIPTION_dup(const(stack_st_ACCESS_DESCRIPTION)*) @nogc nothrow;
    static stack_st_ACCESS_DESCRIPTION* sk_ACCESS_DESCRIPTION_deep_copy(const(stack_st_ACCESS_DESCRIPTION)*, ACCESS_DESCRIPTION_st* function(const(ACCESS_DESCRIPTION_st)*), void function(ACCESS_DESCRIPTION_st*)) @nogc nothrow;
    static int function(const(const(ACCESS_DESCRIPTION_st)*)*, const(const(ACCESS_DESCRIPTION_st)*)*) sk_ACCESS_DESCRIPTION_set_cmp_func(stack_st_ACCESS_DESCRIPTION*, int function(const(const(ACCESS_DESCRIPTION_st)*)*, const(const(ACCESS_DESCRIPTION_st)*)*)) @nogc nothrow;
    alias sk_ACCESS_DESCRIPTION_copyfunc = ACCESS_DESCRIPTION_st* function(const(ACCESS_DESCRIPTION_st)*);
    alias sk_ACCESS_DESCRIPTION_freefunc = void function(ACCESS_DESCRIPTION_st*);
    alias sk_ACCESS_DESCRIPTION_compfunc = int function(const(const(ACCESS_DESCRIPTION_st)*)*, const(const(ACCESS_DESCRIPTION_st)*)*);
    static stack_st_GENERAL_NAME* sk_GENERAL_NAMES_delete(stack_st_GENERAL_NAMES*, int) @nogc nothrow;
    static stack_st_GENERAL_NAME* sk_GENERAL_NAMES_delete_ptr(stack_st_GENERAL_NAMES*, stack_st_GENERAL_NAME*) @nogc nothrow;
    static int sk_GENERAL_NAMES_push(stack_st_GENERAL_NAMES*, stack_st_GENERAL_NAME*) @nogc nothrow;
    static int sk_GENERAL_NAMES_unshift(stack_st_GENERAL_NAMES*, stack_st_GENERAL_NAME*) @nogc nothrow;
    static stack_st_GENERAL_NAME* sk_GENERAL_NAMES_pop(stack_st_GENERAL_NAMES*) @nogc nothrow;
    static stack_st_GENERAL_NAME* sk_GENERAL_NAMES_shift(stack_st_GENERAL_NAMES*) @nogc nothrow;
    static void sk_GENERAL_NAMES_pop_free(stack_st_GENERAL_NAMES*, void function(stack_st_GENERAL_NAME*)) @nogc nothrow;
    static int sk_GENERAL_NAMES_insert(stack_st_GENERAL_NAMES*, stack_st_GENERAL_NAME*, int) @nogc nothrow;
    static stack_st_GENERAL_NAME* sk_GENERAL_NAMES_set(stack_st_GENERAL_NAMES*, int, stack_st_GENERAL_NAME*) @nogc nothrow;
    alias point_conversion_form_t = _Anonymous_24;
    enum _Anonymous_24
    {
        POINT_CONVERSION_COMPRESSED = 2,
        POINT_CONVERSION_UNCOMPRESSED = 4,
        POINT_CONVERSION_HYBRID = 6,
    }
    enum POINT_CONVERSION_COMPRESSED = _Anonymous_24.POINT_CONVERSION_COMPRESSED;
    enum POINT_CONVERSION_UNCOMPRESSED = _Anonymous_24.POINT_CONVERSION_UNCOMPRESSED;
    enum POINT_CONVERSION_HYBRID = _Anonymous_24.POINT_CONVERSION_HYBRID;
    alias EC_METHOD = ec_method_st;
    struct ec_method_st;
    alias EC_GROUP = ec_group_st;
    struct ec_group_st;
    alias EC_POINT = ec_point_st;
    struct ec_point_st;
    alias ECPKPARAMETERS = ecpk_parameters_st;
    struct ecpk_parameters_st;
    alias ECPARAMETERS = ec_parameters_st;
    struct ec_parameters_st;
    const(ec_method_st)* EC_GFp_simple_method() @nogc nothrow;
    const(ec_method_st)* EC_GFp_mont_method() @nogc nothrow;
    const(ec_method_st)* EC_GFp_nist_method() @nogc nothrow;
    const(ec_method_st)* EC_GFp_nistp224_method() @nogc nothrow;
    const(ec_method_st)* EC_GFp_nistp256_method() @nogc nothrow;
    const(ec_method_st)* EC_GFp_nistp521_method() @nogc nothrow;
    const(ec_method_st)* EC_GF2m_simple_method() @nogc nothrow;
    ec_group_st* EC_GROUP_new(const(ec_method_st)*) @nogc nothrow;
    void EC_GROUP_free(ec_group_st*) @nogc nothrow;
    void EC_GROUP_clear_free(ec_group_st*) @nogc nothrow;
    int EC_GROUP_copy(ec_group_st*, const(ec_group_st)*) @nogc nothrow;
    ec_group_st* EC_GROUP_dup(const(ec_group_st)*) @nogc nothrow;
    const(ec_method_st)* EC_GROUP_method_of(const(ec_group_st)*) @nogc nothrow;
    int EC_METHOD_get_field_type(const(ec_method_st)*) @nogc nothrow;
    int EC_GROUP_set_generator(ec_group_st*, const(ec_point_st)*, const(bignum_st)*, const(bignum_st)*) @nogc nothrow;
    const(ec_point_st)* EC_GROUP_get0_generator(const(ec_group_st)*) @nogc nothrow;
    bn_mont_ctx_st* EC_GROUP_get_mont_data(const(ec_group_st)*) @nogc nothrow;
    int EC_GROUP_get_order(const(ec_group_st)*, bignum_st*, bignum_ctx*) @nogc nothrow;
    const(bignum_st)* EC_GROUP_get0_order(const(ec_group_st)*) @nogc nothrow;
    int EC_GROUP_order_bits(const(ec_group_st)*) @nogc nothrow;
    int EC_GROUP_get_cofactor(const(ec_group_st)*, bignum_st*, bignum_ctx*) @nogc nothrow;
    const(bignum_st)* EC_GROUP_get0_cofactor(const(ec_group_st)*) @nogc nothrow;
    void EC_GROUP_set_curve_name(ec_group_st*, int) @nogc nothrow;
    int EC_GROUP_get_curve_name(const(ec_group_st)*) @nogc nothrow;
    void EC_GROUP_set_asn1_flag(ec_group_st*, int) @nogc nothrow;
    int EC_GROUP_get_asn1_flag(const(ec_group_st)*) @nogc nothrow;
    void EC_GROUP_set_point_conversion_form(ec_group_st*, point_conversion_form_t) @nogc nothrow;
    point_conversion_form_t EC_GROUP_get_point_conversion_form(const(ec_group_st)*) @nogc nothrow;
    ubyte* EC_GROUP_get0_seed(const(ec_group_st)*) @nogc nothrow;
    c_ulong EC_GROUP_get_seed_len(const(ec_group_st)*) @nogc nothrow;
    c_ulong EC_GROUP_set_seed(ec_group_st*, const(ubyte)*, c_ulong) @nogc nothrow;
    int EC_GROUP_set_curve(ec_group_st*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    int EC_GROUP_get_curve(const(ec_group_st)*, bignum_st*, bignum_st*, bignum_st*, bignum_ctx*) @nogc nothrow;
    int EC_GROUP_set_curve_GFp(ec_group_st*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    int EC_GROUP_get_curve_GFp(const(ec_group_st)*, bignum_st*, bignum_st*, bignum_st*, bignum_ctx*) @nogc nothrow;
    int EC_GROUP_set_curve_GF2m(ec_group_st*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    int EC_GROUP_get_curve_GF2m(const(ec_group_st)*, bignum_st*, bignum_st*, bignum_st*, bignum_ctx*) @nogc nothrow;
    int EC_GROUP_get_degree(const(ec_group_st)*) @nogc nothrow;
    int EC_GROUP_check(const(ec_group_st)*, bignum_ctx*) @nogc nothrow;
    int EC_GROUP_check_discriminant(const(ec_group_st)*, bignum_ctx*) @nogc nothrow;
    int EC_GROUP_cmp(const(ec_group_st)*, const(ec_group_st)*, bignum_ctx*) @nogc nothrow;
    ec_group_st* EC_GROUP_new_curve_GFp(const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    ec_group_st* EC_GROUP_new_curve_GF2m(const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    ec_group_st* EC_GROUP_new_by_curve_name(int) @nogc nothrow;
    ec_group_st* EC_GROUP_new_from_ecparameters(const(ec_parameters_st)*) @nogc nothrow;
    ec_parameters_st* EC_GROUP_get_ecparameters(const(ec_group_st)*, ec_parameters_st*) @nogc nothrow;
    ec_group_st* EC_GROUP_new_from_ecpkparameters(const(ecpk_parameters_st)*) @nogc nothrow;
    ecpk_parameters_st* EC_GROUP_get_ecpkparameters(const(ec_group_st)*, ecpk_parameters_st*) @nogc nothrow;
    struct EC_builtin_curve
    {
        int nid;
        const(char)* comment;
    }
    c_ulong EC_get_builtin_curves(EC_builtin_curve*, c_ulong) @nogc nothrow;
    const(char)* EC_curve_nid2nist(int) @nogc nothrow;
    int EC_curve_nist2nid(const(char)*) @nogc nothrow;
    ec_point_st* EC_POINT_new(const(ec_group_st)*) @nogc nothrow;
    void EC_POINT_free(ec_point_st*) @nogc nothrow;
    void EC_POINT_clear_free(ec_point_st*) @nogc nothrow;
    int EC_POINT_copy(ec_point_st*, const(ec_point_st)*) @nogc nothrow;
    ec_point_st* EC_POINT_dup(const(ec_point_st)*, const(ec_group_st)*) @nogc nothrow;
    const(ec_method_st)* EC_POINT_method_of(const(ec_point_st)*) @nogc nothrow;
    int EC_POINT_set_to_infinity(const(ec_group_st)*, ec_point_st*) @nogc nothrow;
    int EC_POINT_set_Jprojective_coordinates_GFp(const(ec_group_st)*, ec_point_st*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    int EC_POINT_get_Jprojective_coordinates_GFp(const(ec_group_st)*, const(ec_point_st)*, bignum_st*, bignum_st*, bignum_st*, bignum_ctx*) @nogc nothrow;
    int EC_POINT_set_affine_coordinates(const(ec_group_st)*, ec_point_st*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    int EC_POINT_get_affine_coordinates(const(ec_group_st)*, const(ec_point_st)*, bignum_st*, bignum_st*, bignum_ctx*) @nogc nothrow;
    int EC_POINT_set_affine_coordinates_GFp(const(ec_group_st)*, ec_point_st*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    int EC_POINT_get_affine_coordinates_GFp(const(ec_group_st)*, const(ec_point_st)*, bignum_st*, bignum_st*, bignum_ctx*) @nogc nothrow;
    int EC_POINT_set_compressed_coordinates(const(ec_group_st)*, ec_point_st*, const(bignum_st)*, int, bignum_ctx*) @nogc nothrow;
    int EC_POINT_set_compressed_coordinates_GFp(const(ec_group_st)*, ec_point_st*, const(bignum_st)*, int, bignum_ctx*) @nogc nothrow;
    int EC_POINT_set_affine_coordinates_GF2m(const(ec_group_st)*, ec_point_st*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    int EC_POINT_get_affine_coordinates_GF2m(const(ec_group_st)*, const(ec_point_st)*, bignum_st*, bignum_st*, bignum_ctx*) @nogc nothrow;
    int EC_POINT_set_compressed_coordinates_GF2m(const(ec_group_st)*, ec_point_st*, const(bignum_st)*, int, bignum_ctx*) @nogc nothrow;
    c_ulong EC_POINT_point2oct(const(ec_group_st)*, const(ec_point_st)*, point_conversion_form_t, ubyte*, c_ulong, bignum_ctx*) @nogc nothrow;
    int EC_POINT_oct2point(const(ec_group_st)*, ec_point_st*, const(ubyte)*, c_ulong, bignum_ctx*) @nogc nothrow;
    c_ulong EC_POINT_point2buf(const(ec_group_st)*, const(ec_point_st)*, point_conversion_form_t, ubyte**, bignum_ctx*) @nogc nothrow;
    bignum_st* EC_POINT_point2bn(const(ec_group_st)*, const(ec_point_st)*, point_conversion_form_t, bignum_st*, bignum_ctx*) @nogc nothrow;
    ec_point_st* EC_POINT_bn2point(const(ec_group_st)*, const(bignum_st)*, ec_point_st*, bignum_ctx*) @nogc nothrow;
    char* EC_POINT_point2hex(const(ec_group_st)*, const(ec_point_st)*, point_conversion_form_t, bignum_ctx*) @nogc nothrow;
    ec_point_st* EC_POINT_hex2point(const(ec_group_st)*, const(char)*, ec_point_st*, bignum_ctx*) @nogc nothrow;
    int EC_POINT_add(const(ec_group_st)*, ec_point_st*, const(ec_point_st)*, const(ec_point_st)*, bignum_ctx*) @nogc nothrow;
    int EC_POINT_dbl(const(ec_group_st)*, ec_point_st*, const(ec_point_st)*, bignum_ctx*) @nogc nothrow;
    int EC_POINT_invert(const(ec_group_st)*, ec_point_st*, bignum_ctx*) @nogc nothrow;
    int EC_POINT_is_at_infinity(const(ec_group_st)*, const(ec_point_st)*) @nogc nothrow;
    int EC_POINT_is_on_curve(const(ec_group_st)*, const(ec_point_st)*, bignum_ctx*) @nogc nothrow;
    int EC_POINT_cmp(const(ec_group_st)*, const(ec_point_st)*, const(ec_point_st)*, bignum_ctx*) @nogc nothrow;
    int EC_POINT_make_affine(const(ec_group_st)*, ec_point_st*, bignum_ctx*) @nogc nothrow;
    int EC_POINTs_make_affine(const(ec_group_st)*, c_ulong, ec_point_st**, bignum_ctx*) @nogc nothrow;
    int EC_POINTs_mul(const(ec_group_st)*, ec_point_st*, const(bignum_st)*, c_ulong, const(ec_point_st)**, const(bignum_st)**, bignum_ctx*) @nogc nothrow;
    int EC_POINT_mul(const(ec_group_st)*, ec_point_st*, const(bignum_st)*, const(ec_point_st)*, const(bignum_st)*, bignum_ctx*) @nogc nothrow;
    int EC_GROUP_precompute_mult(ec_group_st*, bignum_ctx*) @nogc nothrow;
    int EC_GROUP_have_precompute_mult(const(ec_group_st)*) @nogc nothrow;
    void ECPKPARAMETERS_free(ecpk_parameters_st*) @nogc nothrow;
    ecpk_parameters_st* ECPKPARAMETERS_new() @nogc nothrow;
    void ECPARAMETERS_free(ec_parameters_st*) @nogc nothrow;
    ec_parameters_st* ECPARAMETERS_new() @nogc nothrow;
    int EC_GROUP_get_basis_type(const(ec_group_st)*) @nogc nothrow;
    int EC_GROUP_get_trinomial_basis(const(ec_group_st)*, uint*) @nogc nothrow;
    int EC_GROUP_get_pentanomial_basis(const(ec_group_st)*, uint*, uint*, uint*) @nogc nothrow;
    static void sk_GENERAL_NAMES_zero(stack_st_GENERAL_NAMES*) @nogc nothrow;
    static void sk_GENERAL_NAMES_free(stack_st_GENERAL_NAMES*) @nogc nothrow;
    ec_group_st* d2i_ECPKParameters(ec_group_st**, const(ubyte)**, c_long) @nogc nothrow;
    int i2d_ECPKParameters(const(ec_group_st)*, ubyte**) @nogc nothrow;
    static int sk_GENERAL_NAMES_reserve(stack_st_GENERAL_NAMES*, int) @nogc nothrow;
    static stack_st_GENERAL_NAMES* sk_GENERAL_NAMES_new_reserve(int function(const(const(stack_st_GENERAL_NAME)*)*, const(const(stack_st_GENERAL_NAME)*)*), int) @nogc nothrow;
    static stack_st_GENERAL_NAMES* sk_GENERAL_NAMES_new_null() @nogc nothrow;
    static stack_st_GENERAL_NAMES* sk_GENERAL_NAMES_new(int function(const(const(stack_st_GENERAL_NAME)*)*, const(const(stack_st_GENERAL_NAME)*)*)) @nogc nothrow;
    int ECPKParameters_print(bio_st*, const(ec_group_st)*, int) @nogc nothrow;
    int ECPKParameters_print_fp(_IO_FILE*, const(ec_group_st)*, int) @nogc nothrow;
    static stack_st_GENERAL_NAME* sk_GENERAL_NAMES_value(const(stack_st_GENERAL_NAMES)*, int) @nogc nothrow;
    static int sk_GENERAL_NAMES_num(const(stack_st_GENERAL_NAMES)*) @nogc nothrow;
    alias sk_GENERAL_NAMES_copyfunc = stack_st_GENERAL_NAME* function(const(stack_st_GENERAL_NAME)*);
    alias sk_GENERAL_NAMES_freefunc = void function(stack_st_GENERAL_NAME*);
    struct stack_st_GENERAL_NAMES;
    ec_key_st* EC_KEY_new() @nogc nothrow;
    int EC_KEY_get_flags(const(ec_key_st)*) @nogc nothrow;
    void EC_KEY_set_flags(ec_key_st*, int) @nogc nothrow;
    void EC_KEY_clear_flags(ec_key_st*, int) @nogc nothrow;
    int EC_KEY_decoded_from_explicit_params(const(ec_key_st)*) @nogc nothrow;
    ec_key_st* EC_KEY_new_by_curve_name(int) @nogc nothrow;
    void EC_KEY_free(ec_key_st*) @nogc nothrow;
    ec_key_st* EC_KEY_copy(ec_key_st*, const(ec_key_st)*) @nogc nothrow;
    ec_key_st* EC_KEY_dup(const(ec_key_st)*) @nogc nothrow;
    int EC_KEY_up_ref(ec_key_st*) @nogc nothrow;
    engine_st* EC_KEY_get0_engine(const(ec_key_st)*) @nogc nothrow;
    const(ec_group_st)* EC_KEY_get0_group(const(ec_key_st)*) @nogc nothrow;
    int EC_KEY_set_group(ec_key_st*, const(ec_group_st)*) @nogc nothrow;
    const(bignum_st)* EC_KEY_get0_private_key(const(ec_key_st)*) @nogc nothrow;
    int EC_KEY_set_private_key(ec_key_st*, const(bignum_st)*) @nogc nothrow;
    const(ec_point_st)* EC_KEY_get0_public_key(const(ec_key_st)*) @nogc nothrow;
    int EC_KEY_set_public_key(ec_key_st*, const(ec_point_st)*) @nogc nothrow;
    uint EC_KEY_get_enc_flags(const(ec_key_st)*) @nogc nothrow;
    void EC_KEY_set_enc_flags(ec_key_st*, uint) @nogc nothrow;
    point_conversion_form_t EC_KEY_get_conv_form(const(ec_key_st)*) @nogc nothrow;
    void EC_KEY_set_conv_form(ec_key_st*, point_conversion_form_t) @nogc nothrow;
    alias sk_GENERAL_NAMES_compfunc = int function(const(const(stack_st_GENERAL_NAME)*)*, const(const(stack_st_GENERAL_NAME)*)*);
    int EC_KEY_set_ex_data(ec_key_st*, int, void*) @nogc nothrow;
    void* EC_KEY_get_ex_data(const(ec_key_st)*, int) @nogc nothrow;
    void EC_KEY_set_asn1_flag(ec_key_st*, int) @nogc nothrow;
    int EC_KEY_precompute_mult(ec_key_st*, bignum_ctx*) @nogc nothrow;
    int EC_KEY_generate_key(ec_key_st*) @nogc nothrow;
    int EC_KEY_check_key(const(ec_key_st)*) @nogc nothrow;
    int EC_KEY_can_sign(const(ec_key_st)*) @nogc nothrow;
    int EC_KEY_set_public_key_affine_coordinates(ec_key_st*, bignum_st*, bignum_st*) @nogc nothrow;
    c_ulong EC_KEY_key2buf(const(ec_key_st)*, point_conversion_form_t, ubyte**, bignum_ctx*) @nogc nothrow;
    int EC_KEY_oct2key(ec_key_st*, const(ubyte)*, c_ulong, bignum_ctx*) @nogc nothrow;
    int EC_KEY_oct2priv(ec_key_st*, const(ubyte)*, c_ulong) @nogc nothrow;
    c_ulong EC_KEY_priv2oct(const(ec_key_st)*, ubyte*, c_ulong) @nogc nothrow;
    c_ulong EC_KEY_priv2buf(const(ec_key_st)*, ubyte**) @nogc nothrow;
    ec_key_st* d2i_ECPrivateKey(ec_key_st**, const(ubyte)**, c_long) @nogc nothrow;
    int i2d_ECPrivateKey(ec_key_st*, ubyte**) @nogc nothrow;
    ec_key_st* d2i_ECParameters(ec_key_st**, const(ubyte)**, c_long) @nogc nothrow;
    int i2d_ECParameters(ec_key_st*, ubyte**) @nogc nothrow;
    ec_key_st* o2i_ECPublicKey(ec_key_st**, const(ubyte)**, c_long) @nogc nothrow;
    int i2o_ECPublicKey(const(ec_key_st)*, ubyte**) @nogc nothrow;
    int ECParameters_print(bio_st*, const(ec_key_st)*) @nogc nothrow;
    int EC_KEY_print(bio_st*, const(ec_key_st)*, int) @nogc nothrow;
    int ECParameters_print_fp(_IO_FILE*, const(ec_key_st)*) @nogc nothrow;
    int EC_KEY_print_fp(_IO_FILE*, const(ec_key_st)*, int) @nogc nothrow;
    const(ec_key_method_st)* EC_KEY_OpenSSL() @nogc nothrow;
    const(ec_key_method_st)* EC_KEY_get_default_method() @nogc nothrow;
    void EC_KEY_set_default_method(const(ec_key_method_st)*) @nogc nothrow;
    const(ec_key_method_st)* EC_KEY_get_method(const(ec_key_st)*) @nogc nothrow;
    int EC_KEY_set_method(ec_key_st*, const(ec_key_method_st)*) @nogc nothrow;
    ec_key_st* EC_KEY_new_method(engine_st*) @nogc nothrow;
    int ECDH_KDF_X9_62(ubyte*, c_ulong, const(ubyte)*, c_ulong, const(ubyte)*, c_ulong, const(evp_md_st)*) @nogc nothrow;
    int ECDH_compute_key(void*, c_ulong, const(ec_point_st)*, const(ec_key_st)*, void* function(const(void)*, c_ulong, void*, c_ulong*)) @nogc nothrow;
    alias ECDSA_SIG = ECDSA_SIG_st;
    struct ECDSA_SIG_st;
    ECDSA_SIG_st* ECDSA_SIG_new() @nogc nothrow;
    void ECDSA_SIG_free(ECDSA_SIG_st*) @nogc nothrow;
    int i2d_ECDSA_SIG(const(ECDSA_SIG_st)*, ubyte**) @nogc nothrow;
    ECDSA_SIG_st* d2i_ECDSA_SIG(ECDSA_SIG_st**, const(ubyte)**, c_long) @nogc nothrow;
    void ECDSA_SIG_get0(const(ECDSA_SIG_st)*, const(bignum_st)**, const(bignum_st)**) @nogc nothrow;
    const(bignum_st)* ECDSA_SIG_get0_r(const(ECDSA_SIG_st)*) @nogc nothrow;
    const(bignum_st)* ECDSA_SIG_get0_s(const(ECDSA_SIG_st)*) @nogc nothrow;
    int ECDSA_SIG_set0(ECDSA_SIG_st*, bignum_st*, bignum_st*) @nogc nothrow;
    ECDSA_SIG_st* ECDSA_do_sign(const(ubyte)*, int, ec_key_st*) @nogc nothrow;
    ECDSA_SIG_st* ECDSA_do_sign_ex(const(ubyte)*, int, const(bignum_st)*, const(bignum_st)*, ec_key_st*) @nogc nothrow;
    int ECDSA_do_verify(const(ubyte)*, int, const(ECDSA_SIG_st)*, ec_key_st*) @nogc nothrow;
    int ECDSA_sign_setup(ec_key_st*, bignum_ctx*, bignum_st**, bignum_st**) @nogc nothrow;
    int ECDSA_sign(int, const(ubyte)*, int, ubyte*, uint*, ec_key_st*) @nogc nothrow;
    int ECDSA_sign_ex(int, const(ubyte)*, int, ubyte*, uint*, const(bignum_st)*, const(bignum_st)*, ec_key_st*) @nogc nothrow;
    int ECDSA_verify(int, const(ubyte)*, int, const(ubyte)*, int, ec_key_st*) @nogc nothrow;
    int ECDSA_size(const(ec_key_st)*) @nogc nothrow;
    ec_key_method_st* EC_KEY_METHOD_new(const(ec_key_method_st)*) @nogc nothrow;
    void EC_KEY_METHOD_free(ec_key_method_st*) @nogc nothrow;
    void EC_KEY_METHOD_set_init(ec_key_method_st*, int function(ec_key_st*), void function(ec_key_st*), int function(ec_key_st*, const(ec_key_st)*), int function(ec_key_st*, const(ec_group_st)*), int function(ec_key_st*, const(bignum_st)*), int function(ec_key_st*, const(ec_point_st)*)) @nogc nothrow;
    void EC_KEY_METHOD_set_keygen(ec_key_method_st*, int function(ec_key_st*)) @nogc nothrow;
    void EC_KEY_METHOD_set_compute_key(ec_key_method_st*, int function(ubyte**, c_ulong*, const(ec_point_st)*, const(ec_key_st)*)) @nogc nothrow;
    void EC_KEY_METHOD_set_sign(ec_key_method_st*, int function(int, const(ubyte)*, int, ubyte*, uint*, const(bignum_st)*, const(bignum_st)*, ec_key_st*), int function(ec_key_st*, bignum_ctx*, bignum_st**, bignum_st**), ECDSA_SIG_st* function(const(ubyte)*, int, const(bignum_st)*, const(bignum_st)*, ec_key_st*)) @nogc nothrow;
    void EC_KEY_METHOD_set_verify(ec_key_method_st*, int function(int, const(ubyte)*, int, const(ubyte)*, int, ec_key_st*), int function(const(ubyte)*, int, const(ECDSA_SIG_st)*, ec_key_st*)) @nogc nothrow;
    void EC_KEY_METHOD_get_init(const(ec_key_method_st)*, int function(ec_key_st*)*, void function(ec_key_st*)*, int function(ec_key_st*, const(ec_key_st)*)*, int function(ec_key_st*, const(ec_group_st)*)*, int function(ec_key_st*, const(bignum_st)*)*, int function(ec_key_st*, const(ec_point_st)*)*) @nogc nothrow;
    void EC_KEY_METHOD_get_keygen(const(ec_key_method_st)*, int function(ec_key_st*)*) @nogc nothrow;
    void EC_KEY_METHOD_get_compute_key(const(ec_key_method_st)*, int function(ubyte**, c_ulong*, const(ec_point_st)*, const(ec_key_st)*)*) @nogc nothrow;
    void EC_KEY_METHOD_get_sign(const(ec_key_method_st)*, int function(int, const(ubyte)*, int, ubyte*, uint*, const(bignum_st)*, const(bignum_st)*, ec_key_st*)*, int function(ec_key_st*, bignum_ctx*, bignum_st**, bignum_st**)*, ECDSA_SIG_st* function(const(ubyte)*, int, const(bignum_st)*, const(bignum_st)*, ec_key_st*)*) @nogc nothrow;
    void EC_KEY_METHOD_get_verify(const(ec_key_method_st)*, int function(int, const(ubyte)*, int, const(ubyte)*, int, ec_key_st*)*, int function(const(ubyte)*, int, const(ECDSA_SIG_st)*, ec_key_st*)*) @nogc nothrow;
    static int sk_GENERAL_NAMES_find_ex(stack_st_GENERAL_NAMES*, stack_st_GENERAL_NAME*) @nogc nothrow;
    static int sk_GENERAL_NAMES_is_sorted(const(stack_st_GENERAL_NAMES)*) @nogc nothrow;
    static void sk_GENERAL_NAMES_sort(stack_st_GENERAL_NAMES*) @nogc nothrow;
    static stack_st_GENERAL_NAMES* sk_GENERAL_NAMES_dup(const(stack_st_GENERAL_NAMES)*) @nogc nothrow;
    static stack_st_GENERAL_NAMES* sk_GENERAL_NAMES_deep_copy(const(stack_st_GENERAL_NAMES)*, stack_st_GENERAL_NAME* function(const(stack_st_GENERAL_NAME)*), void function(stack_st_GENERAL_NAME*)) @nogc nothrow;
    static int function(const(const(stack_st_GENERAL_NAME)*)*, const(const(stack_st_GENERAL_NAME)*)*) sk_GENERAL_NAMES_set_cmp_func(stack_st_GENERAL_NAMES*, int function(const(const(stack_st_GENERAL_NAME)*)*, const(const(stack_st_GENERAL_NAME)*)*)) @nogc nothrow;
    static int sk_GENERAL_NAMES_find(stack_st_GENERAL_NAMES*, stack_st_GENERAL_NAME*) @nogc nothrow;
    alias GENERAL_NAMES = stack_st_GENERAL_NAME;
    static stack_st_GENERAL_NAME* sk_GENERAL_NAME_new(int function(const(const(GENERAL_NAME_st)*)*, const(const(GENERAL_NAME_st)*)*)) @nogc nothrow;
    static void sk_GENERAL_NAME_pop_free(stack_st_GENERAL_NAME*, void function(GENERAL_NAME_st*)) @nogc nothrow;
    static GENERAL_NAME_st* sk_GENERAL_NAME_pop(stack_st_GENERAL_NAME*) @nogc nothrow;
    static int sk_GENERAL_NAME_unshift(stack_st_GENERAL_NAME*, GENERAL_NAME_st*) @nogc nothrow;
    static int sk_GENERAL_NAME_push(stack_st_GENERAL_NAME*, GENERAL_NAME_st*) @nogc nothrow;
    static GENERAL_NAME_st* sk_GENERAL_NAME_delete_ptr(stack_st_GENERAL_NAME*, GENERAL_NAME_st*) @nogc nothrow;
    static GENERAL_NAME_st* sk_GENERAL_NAME_delete(stack_st_GENERAL_NAME*, int) @nogc nothrow;
    static void sk_GENERAL_NAME_zero(stack_st_GENERAL_NAME*) @nogc nothrow;
    static void sk_GENERAL_NAME_free(stack_st_GENERAL_NAME*) @nogc nothrow;
    static int sk_GENERAL_NAME_reserve(stack_st_GENERAL_NAME*, int) @nogc nothrow;
    static stack_st_GENERAL_NAME* sk_GENERAL_NAME_new_reserve(int function(const(const(GENERAL_NAME_st)*)*, const(const(GENERAL_NAME_st)*)*), int) @nogc nothrow;
    static stack_st_GENERAL_NAME* sk_GENERAL_NAME_new_null() @nogc nothrow;
    static GENERAL_NAME_st* sk_GENERAL_NAME_value(const(stack_st_GENERAL_NAME)*, int) @nogc nothrow;
    static int function(const(const(GENERAL_NAME_st)*)*, const(const(GENERAL_NAME_st)*)*) sk_GENERAL_NAME_set_cmp_func(stack_st_GENERAL_NAME*, int function(const(const(GENERAL_NAME_st)*)*, const(const(GENERAL_NAME_st)*)*)) @nogc nothrow;
    static stack_st_GENERAL_NAME* sk_GENERAL_NAME_deep_copy(const(stack_st_GENERAL_NAME)*, GENERAL_NAME_st* function(const(GENERAL_NAME_st)*), void function(GENERAL_NAME_st*)) @nogc nothrow;
    static stack_st_GENERAL_NAME* sk_GENERAL_NAME_dup(const(stack_st_GENERAL_NAME)*) @nogc nothrow;
    static int sk_GENERAL_NAME_num(const(stack_st_GENERAL_NAME)*) @nogc nothrow;
    alias sk_GENERAL_NAME_copyfunc = GENERAL_NAME_st* function(const(GENERAL_NAME_st)*);
    alias sk_GENERAL_NAME_freefunc = void function(GENERAL_NAME_st*);
    alias sk_GENERAL_NAME_compfunc = int function(const(const(GENERAL_NAME_st)*)*, const(const(GENERAL_NAME_st)*)*);
    struct stack_st_GENERAL_NAME;
    static int sk_GENERAL_NAME_insert(stack_st_GENERAL_NAME*, GENERAL_NAME_st*, int) @nogc nothrow;
    static GENERAL_NAME_st* sk_GENERAL_NAME_set(stack_st_GENERAL_NAME*, int, GENERAL_NAME_st*) @nogc nothrow;
    int ERR_load_EC_strings() @nogc nothrow;
    static int sk_GENERAL_NAME_find(stack_st_GENERAL_NAME*, GENERAL_NAME_st*) @nogc nothrow;
    static int sk_GENERAL_NAME_find_ex(stack_st_GENERAL_NAME*, GENERAL_NAME_st*) @nogc nothrow;
    static void sk_GENERAL_NAME_sort(stack_st_GENERAL_NAME*) @nogc nothrow;
    static int sk_GENERAL_NAME_is_sorted(const(stack_st_GENERAL_NAME)*) @nogc nothrow;
    static GENERAL_NAME_st* sk_GENERAL_NAME_shift(stack_st_GENERAL_NAME*) @nogc nothrow;
    alias TLS_FEATURE = stack_st_ASN1_INTEGER;
    alias EXTENDED_KEY_USAGE = stack_st_ASN1_OBJECT;
    struct stack_st_ACCESS_DESCRIPTION;
    alias AUTHORITY_INFO_ACCESS = stack_st_ACCESS_DESCRIPTION;
    struct ACCESS_DESCRIPTION_st
    {
        asn1_object_st* method;
        GENERAL_NAME_st* location;
    }
    alias ACCESS_DESCRIPTION = ACCESS_DESCRIPTION_st;
    struct GENERAL_NAME_st
    {
        int type;
        static union _Anonymous_25
        {
            char* ptr;
            otherName_st* otherName;
            asn1_string_st* rfc822Name;
            asn1_string_st* dNSName;
            asn1_type_st* x400Address;
            X509_name_st* directoryName;
            EDIPartyName_st* ediPartyName;
            asn1_string_st* uniformResourceIdentifier;
            asn1_string_st* iPAddress;
            asn1_object_st* registeredID;
            asn1_string_st* ip;
            X509_name_st* dirn;
            asn1_string_st* ia5;
            asn1_object_st* rid;
            asn1_type_st* other;
        }
        _Anonymous_25 d;
    }
    alias GENERAL_NAME = GENERAL_NAME_st;
    struct EDIPartyName_st
    {
        asn1_string_st* nameAssigner;
        asn1_string_st* partyName;
    }
    alias EDIPARTYNAME = EDIPartyName_st;
    struct otherName_st
    {
        asn1_object_st* type_id;
        asn1_type_st* value;
    }
    alias OTHERNAME = otherName_st;
    struct PKEY_USAGE_PERIOD_st
    {
        asn1_string_st* notBefore;
        asn1_string_st* notAfter;
    }
    alias PKEY_USAGE_PERIOD = PKEY_USAGE_PERIOD_st;
    struct BASIC_CONSTRAINTS_st
    {
        int ca;
        asn1_string_st* pathlen;
    }
    alias BASIC_CONSTRAINTS = BASIC_CONSTRAINTS_st;
    alias ENUMERATED_NAMES = BIT_STRING_BITNAME_st;
    static int sk_X509V3_EXT_METHOD_find(stack_st_X509V3_EXT_METHOD*, v3_ext_method*) @nogc nothrow;
    static v3_ext_method* sk_X509V3_EXT_METHOD_set(stack_st_X509V3_EXT_METHOD*, int, v3_ext_method*) @nogc nothrow;
    static int sk_X509V3_EXT_METHOD_insert(stack_st_X509V3_EXT_METHOD*, v3_ext_method*, int) @nogc nothrow;
    static void sk_X509V3_EXT_METHOD_pop_free(stack_st_X509V3_EXT_METHOD*, void function(v3_ext_method*)) @nogc nothrow;
    static v3_ext_method* sk_X509V3_EXT_METHOD_shift(stack_st_X509V3_EXT_METHOD*) @nogc nothrow;
    static v3_ext_method* sk_X509V3_EXT_METHOD_pop(stack_st_X509V3_EXT_METHOD*) @nogc nothrow;
    static int sk_X509V3_EXT_METHOD_find_ex(stack_st_X509V3_EXT_METHOD*, v3_ext_method*) @nogc nothrow;
    static int sk_X509V3_EXT_METHOD_unshift(stack_st_X509V3_EXT_METHOD*, v3_ext_method*) @nogc nothrow;
    alias sk_X509V3_EXT_METHOD_compfunc = int function(const(const(v3_ext_method)*)*, const(const(v3_ext_method)*)*);
    static v3_ext_method* sk_X509V3_EXT_METHOD_delete_ptr(stack_st_X509V3_EXT_METHOD*, v3_ext_method*) @nogc nothrow;
    static v3_ext_method* sk_X509V3_EXT_METHOD_delete(stack_st_X509V3_EXT_METHOD*, int) @nogc nothrow;
    static void sk_X509V3_EXT_METHOD_zero(stack_st_X509V3_EXT_METHOD*) @nogc nothrow;
    static void sk_X509V3_EXT_METHOD_free(stack_st_X509V3_EXT_METHOD*) @nogc nothrow;
    static int sk_X509V3_EXT_METHOD_reserve(stack_st_X509V3_EXT_METHOD*, int) @nogc nothrow;
    static stack_st_X509V3_EXT_METHOD* sk_X509V3_EXT_METHOD_new_reserve(int function(const(const(v3_ext_method)*)*, const(const(v3_ext_method)*)*), int) @nogc nothrow;
    static stack_st_X509V3_EXT_METHOD* sk_X509V3_EXT_METHOD_new_null() @nogc nothrow;
    static stack_st_X509V3_EXT_METHOD* sk_X509V3_EXT_METHOD_new(int function(const(const(v3_ext_method)*)*, const(const(v3_ext_method)*)*)) @nogc nothrow;
    static v3_ext_method* sk_X509V3_EXT_METHOD_value(const(stack_st_X509V3_EXT_METHOD)*, int) @nogc nothrow;
    alias sk_X509V3_EXT_METHOD_freefunc = void function(v3_ext_method*);
    static int sk_X509V3_EXT_METHOD_push(stack_st_X509V3_EXT_METHOD*, v3_ext_method*) @nogc nothrow;
    alias sk_X509V3_EXT_METHOD_copyfunc = v3_ext_method* function(const(v3_ext_method)*);
    struct stack_st_X509V3_EXT_METHOD;
    static void sk_X509V3_EXT_METHOD_sort(stack_st_X509V3_EXT_METHOD*) @nogc nothrow;
    static int sk_X509V3_EXT_METHOD_is_sorted(const(stack_st_X509V3_EXT_METHOD)*) @nogc nothrow;
    static stack_st_X509V3_EXT_METHOD* sk_X509V3_EXT_METHOD_dup(const(stack_st_X509V3_EXT_METHOD)*) @nogc nothrow;
    static stack_st_X509V3_EXT_METHOD* sk_X509V3_EXT_METHOD_deep_copy(const(stack_st_X509V3_EXT_METHOD)*, v3_ext_method* function(const(v3_ext_method)*), void function(v3_ext_method*)) @nogc nothrow;
    static int function(const(const(v3_ext_method)*)*, const(const(v3_ext_method)*)*) sk_X509V3_EXT_METHOD_set_cmp_func(stack_st_X509V3_EXT_METHOD*, int function(const(const(v3_ext_method)*)*, const(const(v3_ext_method)*)*)) @nogc nothrow;
    static int sk_X509V3_EXT_METHOD_num(const(stack_st_X509V3_EXT_METHOD)*) @nogc nothrow;
    alias X509V3_EXT_METHOD = v3_ext_method;
    struct X509V3_CONF_METHOD_st
    {
        char* function(void*, const(char)*, const(char)*) get_string;
        stack_st_CONF_VALUE* function(void*, const(char)*) get_section;
        void function(void*, char*) free_string;
        void function(void*, stack_st_CONF_VALUE*) free_section;
    }
    alias X509V3_CONF_METHOD = X509V3_CONF_METHOD_st;
    alias X509V3_EXT_R2I = void* function(const(v3_ext_method)*, v3_ext_ctx*, const(char)*);
    alias X509V3_EXT_I2R = int function(const(v3_ext_method)*, void*, bio_st*, int);
    alias X509V3_EXT_S2I = void* function(const(v3_ext_method)*, v3_ext_ctx*, const(char)*);
    alias X509V3_EXT_I2S = char* function(const(v3_ext_method)*, void*);
    alias X509V3_EXT_V2I = void* function(const(v3_ext_method)*, v3_ext_ctx*, stack_st_CONF_VALUE*);
    alias X509V3_EXT_I2V = stack_st_CONF_VALUE* function(const(v3_ext_method)*, void*, stack_st_CONF_VALUE*);
    alias X509V3_EXT_I2D = int function(void*, ubyte**);
    alias X509V3_EXT_D2I = void* function(void*, const(ubyte)**, c_long);
    alias X509V3_EXT_FREE = void function(void*);
    alias X509V3_EXT_NEW = void* function();
    struct v3_ext_method
    {
        int ext_nid;
        int ext_flags;
        const(ASN1_ITEM_st)* it;
        void* function() ext_new;
        void function(void*) ext_free;
        void* function(void*, const(ubyte)**, c_long) d2i;
        int function(void*, ubyte**) i2d;
        char* function(const(v3_ext_method)*, void*) i2s;
        void* function(const(v3_ext_method)*, v3_ext_ctx*, const(char)*) s2i;
        stack_st_CONF_VALUE* function(const(v3_ext_method)*, void*, stack_st_CONF_VALUE*) i2v;
        void* function(const(v3_ext_method)*, v3_ext_ctx*, stack_st_CONF_VALUE*) v2i;
        int function(const(v3_ext_method)*, void*, bio_st*, int) i2r;
        void* function(const(v3_ext_method)*, v3_ext_ctx*, const(char)*) r2i;
        void* usr_data;
    }
    int ERR_load_X509_strings() @nogc nothrow;
    const(X509_POLICY_NODE_st)* X509_policy_node_get0_parent(const(X509_POLICY_NODE_st)*) @nogc nothrow;
    struct stack_st_POLICYQUALINFO;
    stack_st_POLICYQUALINFO* X509_policy_node_get0_qualifiers(const(X509_POLICY_NODE_st)*) @nogc nothrow;
    const(asn1_object_st)* X509_policy_node_get0_policy(const(X509_POLICY_NODE_st)*) @nogc nothrow;
    X509_POLICY_NODE_st* X509_policy_level_get0_node(X509_POLICY_LEVEL_st*, int) @nogc nothrow;
    int X509_policy_level_node_count(X509_POLICY_LEVEL_st*) @nogc nothrow;
    stack_st_X509_POLICY_NODE* X509_policy_tree_get0_user_policies(const(X509_POLICY_TREE_st)*) @nogc nothrow;
    stack_st_X509_POLICY_NODE* X509_policy_tree_get0_policies(const(X509_POLICY_TREE_st)*) @nogc nothrow;
    struct stack_st_X509_POLICY_NODE;
    X509_POLICY_LEVEL_st* X509_policy_tree_get0_level(const(X509_POLICY_TREE_st)*, int) @nogc nothrow;
    int X509_policy_tree_level_count(const(X509_POLICY_TREE_st)*) @nogc nothrow;
    void X509_policy_tree_free(X509_POLICY_TREE_st*) @nogc nothrow;
    int X509_policy_check(X509_POLICY_TREE_st**, int*, stack_st_X509*, stack_st_ASN1_OBJECT*, uint) @nogc nothrow;
    void X509_VERIFY_PARAM_table_cleanup() @nogc nothrow;
    const(X509_VERIFY_PARAM_st)* X509_VERIFY_PARAM_lookup(const(char)*) @nogc nothrow;
    const(X509_VERIFY_PARAM_st)* X509_VERIFY_PARAM_get0(int) @nogc nothrow;
    int X509_VERIFY_PARAM_get_count() @nogc nothrow;
    int X509_VERIFY_PARAM_add0_table(X509_VERIFY_PARAM_st*) @nogc nothrow;
    const(char)* X509_VERIFY_PARAM_get0_name(const(X509_VERIFY_PARAM_st)*) @nogc nothrow;
    int X509_VERIFY_PARAM_get_auth_level(const(X509_VERIFY_PARAM_st)*) @nogc nothrow;
    int X509_VERIFY_PARAM_get_depth(const(X509_VERIFY_PARAM_st)*) @nogc nothrow;
    int X509_VERIFY_PARAM_set1_ip_asc(X509_VERIFY_PARAM_st*, const(char)*) @nogc nothrow;
    int X509_VERIFY_PARAM_set1_ip(X509_VERIFY_PARAM_st*, const(ubyte)*, c_ulong) @nogc nothrow;
    int X509_VERIFY_PARAM_set1_email(X509_VERIFY_PARAM_st*, const(char)*, c_ulong) @nogc nothrow;
    void X509_VERIFY_PARAM_move_peername(X509_VERIFY_PARAM_st*, X509_VERIFY_PARAM_st*) @nogc nothrow;
    char* X509_VERIFY_PARAM_get0_peername(X509_VERIFY_PARAM_st*) @nogc nothrow;
    uint X509_VERIFY_PARAM_get_hostflags(const(X509_VERIFY_PARAM_st)*) @nogc nothrow;
    void X509_VERIFY_PARAM_set_hostflags(X509_VERIFY_PARAM_st*, uint) @nogc nothrow;
    int X509_VERIFY_PARAM_add1_host(X509_VERIFY_PARAM_st*, const(char)*, c_ulong) @nogc nothrow;
    int X509_VERIFY_PARAM_set1_host(X509_VERIFY_PARAM_st*, const(char)*, c_ulong) @nogc nothrow;
    uint X509_VERIFY_PARAM_get_inh_flags(const(X509_VERIFY_PARAM_st)*) @nogc nothrow;
    int X509_VERIFY_PARAM_set_inh_flags(X509_VERIFY_PARAM_st*, uint) @nogc nothrow;
    int X509_VERIFY_PARAM_set1_policies(X509_VERIFY_PARAM_st*, stack_st_ASN1_OBJECT*) @nogc nothrow;
    int X509_VERIFY_PARAM_add0_policy(X509_VERIFY_PARAM_st*, asn1_object_st*) @nogc nothrow;
    void X509_VERIFY_PARAM_set_time(X509_VERIFY_PARAM_st*, c_long) @nogc nothrow;
    c_long X509_VERIFY_PARAM_get_time(const(X509_VERIFY_PARAM_st)*) @nogc nothrow;
    void X509_VERIFY_PARAM_set_auth_level(X509_VERIFY_PARAM_st*, int) @nogc nothrow;
    void X509_VERIFY_PARAM_set_depth(X509_VERIFY_PARAM_st*, int) @nogc nothrow;
    int X509_VERIFY_PARAM_set_trust(X509_VERIFY_PARAM_st*, int) @nogc nothrow;
    int X509_VERIFY_PARAM_set_purpose(X509_VERIFY_PARAM_st*, int) @nogc nothrow;
    c_ulong X509_VERIFY_PARAM_get_flags(X509_VERIFY_PARAM_st*) @nogc nothrow;
    int X509_VERIFY_PARAM_clear_flags(X509_VERIFY_PARAM_st*, c_ulong) @nogc nothrow;
    int X509_VERIFY_PARAM_set_flags(X509_VERIFY_PARAM_st*, c_ulong) @nogc nothrow;
    int X509_VERIFY_PARAM_set1_name(X509_VERIFY_PARAM_st*, const(char)*) @nogc nothrow;
    int X509_VERIFY_PARAM_set1(X509_VERIFY_PARAM_st*, const(X509_VERIFY_PARAM_st)*) @nogc nothrow;
    int X509_VERIFY_PARAM_inherit(X509_VERIFY_PARAM_st*, const(X509_VERIFY_PARAM_st)*) @nogc nothrow;
    void X509_VERIFY_PARAM_free(X509_VERIFY_PARAM_st*) @nogc nothrow;
    X509_VERIFY_PARAM_st* X509_VERIFY_PARAM_new() @nogc nothrow;
    void X509_STORE_CTX_set0_dane(x509_store_ctx_st*, ssl_dane_st*) @nogc nothrow;
    int X509_STORE_CTX_set_default(x509_store_ctx_st*, const(char)*) @nogc nothrow;
    void X509_STORE_CTX_set0_param(x509_store_ctx_st*, X509_VERIFY_PARAM_st*) @nogc nothrow;
    X509_VERIFY_PARAM_st* X509_STORE_CTX_get0_param(x509_store_ctx_st*) @nogc nothrow;
    int X509_STORE_CTX_get_num_untrusted(x509_store_ctx_st*) @nogc nothrow;
    int X509_STORE_CTX_get_explicit_policy(x509_store_ctx_st*) @nogc nothrow;
    X509_POLICY_TREE_st* X509_STORE_CTX_get0_policy_tree(x509_store_ctx_st*) @nogc nothrow;
    void X509_STORE_CTX_set_time(x509_store_ctx_st*, c_ulong, c_long) @nogc nothrow;
    void X509_STORE_CTX_set_flags(x509_store_ctx_st*, c_ulong) @nogc nothrow;
    int X509_STORE_CTX_purpose_inherit(x509_store_ctx_st*, int, int, int) @nogc nothrow;
    int X509_STORE_CTX_set_trust(x509_store_ctx_st*, int) @nogc nothrow;
    int X509_STORE_CTX_set_purpose(x509_store_ctx_st*, int) @nogc nothrow;
    void X509_STORE_CTX_set0_crls(x509_store_ctx_st*, stack_st_X509_CRL*) @nogc nothrow;
    void X509_STORE_CTX_set0_verified_chain(x509_store_ctx_st*, stack_st_X509*) @nogc nothrow;
    void X509_STORE_CTX_set_cert(x509_store_ctx_st*, x509_st*) @nogc nothrow;
    stack_st_X509* X509_STORE_CTX_get1_chain(x509_store_ctx_st*) @nogc nothrow;
    stack_st_X509* X509_STORE_CTX_get0_chain(x509_store_ctx_st*) @nogc nothrow;
    x509_store_ctx_st* X509_STORE_CTX_get0_parent_ctx(x509_store_ctx_st*) @nogc nothrow;
    X509_crl_st* X509_STORE_CTX_get0_current_crl(x509_store_ctx_st*) @nogc nothrow;
    x509_st* X509_STORE_CTX_get0_current_issuer(x509_store_ctx_st*) @nogc nothrow;
    void X509_STORE_CTX_set_current_cert(x509_store_ctx_st*, x509_st*) @nogc nothrow;
    x509_st* X509_STORE_CTX_get_current_cert(x509_store_ctx_st*) @nogc nothrow;
    void X509_STORE_CTX_set_error_depth(x509_store_ctx_st*, int) @nogc nothrow;
    int X509_STORE_CTX_get_error_depth(x509_store_ctx_st*) @nogc nothrow;
    void X509_STORE_CTX_set_error(x509_store_ctx_st*, int) @nogc nothrow;
    int X509_STORE_CTX_get_error(x509_store_ctx_st*) @nogc nothrow;
    void* X509_STORE_CTX_get_ex_data(x509_store_ctx_st*, int) @nogc nothrow;
    int X509_STORE_CTX_set_ex_data(x509_store_ctx_st*, int, void*) @nogc nothrow;
    int X509_STORE_set_default_paths(x509_store_st*) @nogc nothrow;
    int X509_STORE_load_locations(x509_store_st*, const(char)*, const(char)*) @nogc nothrow;
    int X509_LOOKUP_shutdown(x509_lookup_st*) @nogc nothrow;
    x509_store_st* X509_LOOKUP_get_store(const(x509_lookup_st)*) @nogc nothrow;
    void* X509_LOOKUP_get_method_data(const(x509_lookup_st)*) @nogc nothrow;
    int X509_LOOKUP_set_method_data(x509_lookup_st*, void*) @nogc nothrow;
    int X509_LOOKUP_by_alias(x509_lookup_st*, X509_LOOKUP_TYPE, const(char)*, int, x509_object_st*) @nogc nothrow;
    int X509_LOOKUP_by_fingerprint(x509_lookup_st*, X509_LOOKUP_TYPE, const(ubyte)*, int, x509_object_st*) @nogc nothrow;
    int X509_LOOKUP_by_issuer_serial(x509_lookup_st*, X509_LOOKUP_TYPE, X509_name_st*, asn1_string_st*, x509_object_st*) @nogc nothrow;
    int X509_LOOKUP_by_subject(x509_lookup_st*, X509_LOOKUP_TYPE, X509_name_st*, x509_object_st*) @nogc nothrow;
    int X509_LOOKUP_init(x509_lookup_st*) @nogc nothrow;
    void X509_LOOKUP_free(x509_lookup_st*) @nogc nothrow;
    x509_lookup_st* X509_LOOKUP_new(x509_lookup_method_st*) @nogc nothrow;
    int X509_load_cert_crl_file(x509_lookup_st*, const(char)*, int) @nogc nothrow;
    int X509_load_crl_file(x509_lookup_st*, const(char)*, int) @nogc nothrow;
    int X509_load_cert_file(x509_lookup_st*, const(char)*, int) @nogc nothrow;
    int X509_LOOKUP_ctrl(x509_lookup_st*, int, const(char)*, c_long, char**) @nogc nothrow;
    x509_object_st* X509_STORE_CTX_get_obj_by_subject(x509_store_ctx_st*, X509_LOOKUP_TYPE, X509_name_st*) @nogc nothrow;
    int X509_STORE_CTX_get_by_subject(x509_store_ctx_st*, X509_LOOKUP_TYPE, X509_name_st*, x509_object_st*) @nogc nothrow;
    int X509_STORE_add_crl(x509_store_st*, X509_crl_st*) @nogc nothrow;
    int X509_STORE_add_cert(x509_store_st*, x509_st*) @nogc nothrow;
    int function(x509_lookup_st*, X509_LOOKUP_TYPE, const(char)*, int, x509_object_st*) X509_LOOKUP_meth_get_get_by_alias(const(x509_lookup_method_st)*) @nogc nothrow;
    int X509_LOOKUP_meth_set_get_by_alias(x509_lookup_method_st*, int function(x509_lookup_st*, X509_LOOKUP_TYPE, const(char)*, int, x509_object_st*)) @nogc nothrow;
    int function(x509_lookup_st*, X509_LOOKUP_TYPE, const(ubyte)*, int, x509_object_st*) X509_LOOKUP_meth_get_get_by_fingerprint(const(x509_lookup_method_st)*) @nogc nothrow;
    int X509_LOOKUP_meth_set_get_by_fingerprint(x509_lookup_method_st*, int function(x509_lookup_st*, X509_LOOKUP_TYPE, const(ubyte)*, int, x509_object_st*)) @nogc nothrow;
    int function(x509_lookup_st*, X509_LOOKUP_TYPE, X509_name_st*, asn1_string_st*, x509_object_st*) X509_LOOKUP_meth_get_get_by_issuer_serial(const(x509_lookup_method_st)*) @nogc nothrow;
    int X509_LOOKUP_meth_set_get_by_issuer_serial(x509_lookup_method_st*, int function(x509_lookup_st*, X509_LOOKUP_TYPE, X509_name_st*, asn1_string_st*, x509_object_st*)) @nogc nothrow;
    int function(x509_lookup_st*, X509_LOOKUP_TYPE, X509_name_st*, x509_object_st*) X509_LOOKUP_meth_get_get_by_subject(const(x509_lookup_method_st)*) @nogc nothrow;
    int X509_LOOKUP_meth_set_get_by_subject(x509_lookup_method_st*, int function(x509_lookup_st*, X509_LOOKUP_TYPE, X509_name_st*, x509_object_st*)) @nogc nothrow;
    int function(x509_lookup_st*, int, const(char)*, c_long, char**) X509_LOOKUP_meth_get_ctrl(const(x509_lookup_method_st)*) @nogc nothrow;
    int X509_LOOKUP_meth_set_ctrl(x509_lookup_method_st*, int function(x509_lookup_st*, int, const(char)*, c_long, char**)) @nogc nothrow;
    int function(x509_lookup_st*) X509_LOOKUP_meth_get_shutdown(const(x509_lookup_method_st)*) @nogc nothrow;
    int X509_LOOKUP_meth_set_shutdown(x509_lookup_method_st*, int function(x509_lookup_st*)) @nogc nothrow;
    int function(x509_lookup_st*) X509_LOOKUP_meth_get_init(const(x509_lookup_method_st)*) @nogc nothrow;
    int X509_LOOKUP_meth_set_init(x509_lookup_method_st*, int function(x509_lookup_st*)) @nogc nothrow;
    void function(x509_lookup_st*) X509_LOOKUP_meth_get_free(const(x509_lookup_method_st)*) @nogc nothrow;
    int X509_LOOKUP_meth_set_free(x509_lookup_method_st*, void function(x509_lookup_st*)) @nogc nothrow;
    int function(x509_lookup_st*) X509_LOOKUP_meth_get_new_item(const(x509_lookup_method_st)*) @nogc nothrow;
    int X509_LOOKUP_meth_set_new_item(x509_lookup_method_st*, int function(x509_lookup_st*)) @nogc nothrow;
    void X509_LOOKUP_meth_free(x509_lookup_method_st*) @nogc nothrow;
    x509_lookup_method_st* X509_LOOKUP_meth_new(const(char)*) @nogc nothrow;
    alias X509_LOOKUP_get_by_alias_fn = int function(x509_lookup_st*, X509_LOOKUP_TYPE, const(char)*, int, x509_object_st*);
    alias X509_LOOKUP_get_by_fingerprint_fn = int function(x509_lookup_st*, X509_LOOKUP_TYPE, const(ubyte)*, int, x509_object_st*);
    alias X509_LOOKUP_get_by_issuer_serial_fn = int function(x509_lookup_st*, X509_LOOKUP_TYPE, X509_name_st*, asn1_string_st*, x509_object_st*);
    alias X509_LOOKUP_get_by_subject_fn = int function(x509_lookup_st*, X509_LOOKUP_TYPE, X509_name_st*, x509_object_st*);
    alias X509_LOOKUP_ctrl_fn = int function(x509_lookup_st*, int, const(char)*, c_long, char**);
    x509_lookup_method_st* X509_LOOKUP_file() @nogc nothrow;
    x509_lookup_method_st* X509_LOOKUP_hash_dir() @nogc nothrow;
    x509_lookup_st* X509_STORE_add_lookup(x509_store_st*, x509_lookup_method_st*) @nogc nothrow;
    int function(x509_store_ctx_st*) X509_STORE_CTX_get_cleanup(x509_store_ctx_st*) @nogc nothrow;
    stack_st_X509_CRL* function(x509_store_ctx_st*, X509_name_st*) X509_STORE_CTX_get_lookup_crls(x509_store_ctx_st*) @nogc nothrow;
    stack_st_X509* function(x509_store_ctx_st*, X509_name_st*) X509_STORE_CTX_get_lookup_certs(x509_store_ctx_st*) @nogc nothrow;
    int function(x509_store_ctx_st*) X509_STORE_CTX_get_check_policy(x509_store_ctx_st*) @nogc nothrow;
    int function(x509_store_ctx_st*, X509_crl_st*, x509_st*) X509_STORE_CTX_get_cert_crl(x509_store_ctx_st*) @nogc nothrow;
    int function(x509_store_ctx_st*, X509_crl_st*) X509_STORE_CTX_get_check_crl(x509_store_ctx_st*) @nogc nothrow;
    int function(x509_store_ctx_st*, X509_crl_st**, x509_st*) X509_STORE_CTX_get_get_crl(x509_store_ctx_st*) @nogc nothrow;
    int function(x509_store_ctx_st*) X509_STORE_CTX_get_check_revocation(x509_store_ctx_st*) @nogc nothrow;
    int function(x509_store_ctx_st*, x509_st*, x509_st*) X509_STORE_CTX_get_check_issued(x509_store_ctx_st*) @nogc nothrow;
    int function(x509_st**, x509_store_ctx_st*, x509_st*) X509_STORE_CTX_get_get_issuer(x509_store_ctx_st*) @nogc nothrow;
    int function(x509_store_ctx_st*) X509_STORE_CTX_get_verify(x509_store_ctx_st*) @nogc nothrow;
    int function(int, x509_store_ctx_st*) X509_STORE_CTX_get_verify_cb(x509_store_ctx_st*) @nogc nothrow;
    void X509_STORE_CTX_set_verify_cb(x509_store_ctx_st*, int function(int, x509_store_ctx_st*)) @nogc nothrow;
    void X509_STORE_CTX_set0_untrusted(x509_store_ctx_st*, stack_st_X509*) @nogc nothrow;
    stack_st_X509* X509_STORE_CTX_get0_untrusted(x509_store_ctx_st*) @nogc nothrow;
    x509_st* X509_STORE_CTX_get0_cert(x509_store_ctx_st*) @nogc nothrow;
    x509_store_st* X509_STORE_CTX_get0_store(x509_store_ctx_st*) @nogc nothrow;
    void X509_STORE_CTX_cleanup(x509_store_ctx_st*) @nogc nothrow;
    void X509_STORE_CTX_set0_trusted_stack(x509_store_ctx_st*, stack_st_X509*) @nogc nothrow;
    int X509_STORE_CTX_init(x509_store_ctx_st*, x509_store_st*, x509_st*, stack_st_X509*) @nogc nothrow;
    void X509_STORE_CTX_free(x509_store_ctx_st*) @nogc nothrow;
    int X509_STORE_CTX_get1_issuer(x509_st**, x509_store_ctx_st*, x509_st*) @nogc nothrow;
    x509_store_ctx_st* X509_STORE_CTX_new() @nogc nothrow;
    void* X509_STORE_get_ex_data(x509_store_st*, int) @nogc nothrow;
    int X509_STORE_set_ex_data(x509_store_st*, int, void*) @nogc nothrow;
    int function(x509_store_ctx_st*) X509_STORE_get_cleanup(x509_store_st*) @nogc nothrow;
    alias ERR_STATE = err_state_st;
    struct err_state_st
    {
        int[16] err_flags;
        c_ulong[16] err_buffer;
        char*[16] err_data;
        int[16] err_data_flags;
        const(char)*[16] err_file;
        int[16] err_line;
        int top;
        int bottom;
    }
    void X509_STORE_set_cleanup(x509_store_st*, int function(x509_store_ctx_st*)) @nogc nothrow;
    stack_st_X509_CRL* function(x509_store_ctx_st*, X509_name_st*) X509_STORE_get_lookup_crls(x509_store_st*) @nogc nothrow;
    void X509_STORE_set_lookup_crls(x509_store_st*, stack_st_X509_CRL* function(x509_store_ctx_st*, X509_name_st*)) @nogc nothrow;
    stack_st_X509* function(x509_store_ctx_st*, X509_name_st*) X509_STORE_get_lookup_certs(x509_store_st*) @nogc nothrow;
    void X509_STORE_set_lookup_certs(x509_store_st*, stack_st_X509* function(x509_store_ctx_st*, X509_name_st*)) @nogc nothrow;
    int function(x509_store_ctx_st*) X509_STORE_get_check_policy(x509_store_st*) @nogc nothrow;
    void X509_STORE_set_check_policy(x509_store_st*, int function(x509_store_ctx_st*)) @nogc nothrow;
    int function(x509_store_ctx_st*, X509_crl_st*, x509_st*) X509_STORE_get_cert_crl(x509_store_st*) @nogc nothrow;
    void X509_STORE_set_cert_crl(x509_store_st*, int function(x509_store_ctx_st*, X509_crl_st*, x509_st*)) @nogc nothrow;
    int function(x509_store_ctx_st*, X509_crl_st*) X509_STORE_get_check_crl(x509_store_st*) @nogc nothrow;
    void X509_STORE_set_check_crl(x509_store_st*, int function(x509_store_ctx_st*, X509_crl_st*)) @nogc nothrow;
    int function(x509_store_ctx_st*, X509_crl_st**, x509_st*) X509_STORE_get_get_crl(x509_store_st*) @nogc nothrow;
    void X509_STORE_set_get_crl(x509_store_st*, int function(x509_store_ctx_st*, X509_crl_st**, x509_st*)) @nogc nothrow;
    int function(x509_store_ctx_st*) X509_STORE_get_check_revocation(x509_store_st*) @nogc nothrow;
    void X509_STORE_set_check_revocation(x509_store_st*, int function(x509_store_ctx_st*)) @nogc nothrow;
    int function(x509_store_ctx_st*, x509_st*, x509_st*) X509_STORE_get_check_issued(x509_store_st*) @nogc nothrow;
    void X509_STORE_set_check_issued(x509_store_st*, int function(x509_store_ctx_st*, x509_st*, x509_st*)) @nogc nothrow;
    int function(x509_st**, x509_store_ctx_st*, x509_st*) X509_STORE_get_get_issuer(x509_store_st*) @nogc nothrow;
    void X509_STORE_set_get_issuer(x509_store_st*, int function(x509_st**, x509_store_ctx_st*, x509_st*)) @nogc nothrow;
    int function(int, x509_store_ctx_st*) X509_STORE_get_verify_cb(x509_store_st*) @nogc nothrow;
    void X509_STORE_set_verify_cb(x509_store_st*, int function(int, x509_store_ctx_st*)) @nogc nothrow;
    int function(x509_store_ctx_st*) X509_STORE_get_verify(x509_store_st*) @nogc nothrow;
    void X509_STORE_CTX_set_verify(x509_store_ctx_st*, int function(x509_store_ctx_st*)) @nogc nothrow;
    void X509_STORE_set_verify(x509_store_st*, int function(x509_store_ctx_st*)) @nogc nothrow;
    X509_VERIFY_PARAM_st* X509_STORE_get0_param(x509_store_st*) @nogc nothrow;
    int X509_STORE_set1_param(x509_store_st*, X509_VERIFY_PARAM_st*) @nogc nothrow;
    int X509_STORE_set_trust(x509_store_st*, int) @nogc nothrow;
    int X509_STORE_set_purpose(x509_store_st*, int) @nogc nothrow;
    int X509_STORE_set_flags(x509_store_st*, c_ulong) @nogc nothrow;
    stack_st_X509_CRL* X509_STORE_CTX_get1_crls(x509_store_ctx_st*, X509_name_st*) @nogc nothrow;
    stack_st_X509* X509_STORE_CTX_get1_certs(x509_store_ctx_st*, X509_name_st*) @nogc nothrow;
    stack_st_X509_OBJECT* X509_STORE_get0_objects(x509_store_st*) @nogc nothrow;
    int X509_STORE_up_ref(x509_store_st*) @nogc nothrow;
    int X509_STORE_unlock(x509_store_st*) @nogc nothrow;
    int X509_STORE_lock(x509_store_st*) @nogc nothrow;
    void X509_STORE_free(x509_store_st*) @nogc nothrow;
    x509_store_st* X509_STORE_new() @nogc nothrow;
    int X509_OBJECT_set1_X509_CRL(x509_object_st*, X509_crl_st*) @nogc nothrow;
    X509_crl_st* X509_OBJECT_get0_X509_CRL(x509_object_st*) @nogc nothrow;
    int X509_OBJECT_set1_X509(x509_object_st*, x509_st*) @nogc nothrow;
    x509_st* X509_OBJECT_get0_X509(const(x509_object_st)*) @nogc nothrow;
    X509_LOOKUP_TYPE X509_OBJECT_get_type(const(x509_object_st)*) @nogc nothrow;
    void X509_OBJECT_free(x509_object_st*) @nogc nothrow;
    x509_object_st* X509_OBJECT_new() @nogc nothrow;
    int X509_OBJECT_up_ref_count(x509_object_st*) @nogc nothrow;
    x509_object_st* X509_OBJECT_retrieve_match(stack_st_X509_OBJECT*, x509_object_st*) @nogc nothrow;
    x509_object_st* X509_OBJECT_retrieve_by_subject(stack_st_X509_OBJECT*, X509_LOOKUP_TYPE, X509_name_st*) @nogc nothrow;
    int X509_OBJECT_idx_by_subject(stack_st_X509_OBJECT*, X509_LOOKUP_TYPE, X509_name_st*) @nogc nothrow;
    void X509_STORE_CTX_set_depth(x509_store_ctx_st*, int) @nogc nothrow;
    alias X509_STORE_CTX_cleanup_fn = int function(x509_store_ctx_st*);
    alias X509_STORE_CTX_lookup_crls_fn = stack_st_X509_CRL* function(x509_store_ctx_st*, X509_name_st*);
    alias X509_STORE_CTX_lookup_certs_fn = stack_st_X509* function(x509_store_ctx_st*, X509_name_st*);
    alias X509_STORE_CTX_check_policy_fn = int function(x509_store_ctx_st*);
    alias X509_STORE_CTX_cert_crl_fn = int function(x509_store_ctx_st*, X509_crl_st*, x509_st*);
    alias X509_STORE_CTX_check_crl_fn = int function(x509_store_ctx_st*, X509_crl_st*);
    alias X509_STORE_CTX_get_crl_fn = int function(x509_store_ctx_st*, X509_crl_st**, x509_st*);
    alias X509_STORE_CTX_check_revocation_fn = int function(x509_store_ctx_st*);
    alias X509_STORE_CTX_check_issued_fn = int function(x509_store_ctx_st*, x509_st*, x509_st*);
    alias X509_STORE_CTX_get_issuer_fn = int function(x509_st**, x509_store_ctx_st*, x509_st*);
    alias X509_STORE_CTX_verify_fn = int function(x509_store_ctx_st*);
    alias X509_STORE_CTX_verify_cb = int function(int, x509_store_ctx_st*);
    int X509_STORE_set_depth(x509_store_st*, int) @nogc nothrow;
    static int function(const(const(X509_VERIFY_PARAM_st)*)*, const(const(X509_VERIFY_PARAM_st)*)*) sk_X509_VERIFY_PARAM_set_cmp_func(stack_st_X509_VERIFY_PARAM*, int function(const(const(X509_VERIFY_PARAM_st)*)*, const(const(X509_VERIFY_PARAM_st)*)*)) @nogc nothrow;
    static stack_st_X509_VERIFY_PARAM* sk_X509_VERIFY_PARAM_deep_copy(const(stack_st_X509_VERIFY_PARAM)*, X509_VERIFY_PARAM_st* function(const(X509_VERIFY_PARAM_st)*), void function(X509_VERIFY_PARAM_st*)) @nogc nothrow;
    static stack_st_X509_VERIFY_PARAM* sk_X509_VERIFY_PARAM_dup(const(stack_st_X509_VERIFY_PARAM)*) @nogc nothrow;
    static int sk_X509_VERIFY_PARAM_is_sorted(const(stack_st_X509_VERIFY_PARAM)*) @nogc nothrow;
    static void sk_X509_VERIFY_PARAM_sort(stack_st_X509_VERIFY_PARAM*) @nogc nothrow;
    static int sk_X509_VERIFY_PARAM_find_ex(stack_st_X509_VERIFY_PARAM*, X509_VERIFY_PARAM_st*) @nogc nothrow;
    static int sk_X509_VERIFY_PARAM_find(stack_st_X509_VERIFY_PARAM*, X509_VERIFY_PARAM_st*) @nogc nothrow;
    static X509_VERIFY_PARAM_st* sk_X509_VERIFY_PARAM_set(stack_st_X509_VERIFY_PARAM*, int, X509_VERIFY_PARAM_st*) @nogc nothrow;
    static int sk_X509_VERIFY_PARAM_insert(stack_st_X509_VERIFY_PARAM*, X509_VERIFY_PARAM_st*, int) @nogc nothrow;
    static void sk_X509_VERIFY_PARAM_pop_free(stack_st_X509_VERIFY_PARAM*, void function(X509_VERIFY_PARAM_st*)) @nogc nothrow;
    static X509_VERIFY_PARAM_st* sk_X509_VERIFY_PARAM_shift(stack_st_X509_VERIFY_PARAM*) @nogc nothrow;
    static X509_VERIFY_PARAM_st* sk_X509_VERIFY_PARAM_pop(stack_st_X509_VERIFY_PARAM*) @nogc nothrow;
    static int sk_X509_VERIFY_PARAM_unshift(stack_st_X509_VERIFY_PARAM*, X509_VERIFY_PARAM_st*) @nogc nothrow;
    static int sk_X509_VERIFY_PARAM_push(stack_st_X509_VERIFY_PARAM*, X509_VERIFY_PARAM_st*) @nogc nothrow;
    static X509_VERIFY_PARAM_st* sk_X509_VERIFY_PARAM_delete_ptr(stack_st_X509_VERIFY_PARAM*, X509_VERIFY_PARAM_st*) @nogc nothrow;
    static X509_VERIFY_PARAM_st* sk_X509_VERIFY_PARAM_delete(stack_st_X509_VERIFY_PARAM*, int) @nogc nothrow;
    static void sk_X509_VERIFY_PARAM_zero(stack_st_X509_VERIFY_PARAM*) @nogc nothrow;
    static void sk_X509_VERIFY_PARAM_free(stack_st_X509_VERIFY_PARAM*) @nogc nothrow;
    static int sk_X509_VERIFY_PARAM_reserve(stack_st_X509_VERIFY_PARAM*, int) @nogc nothrow;
    static stack_st_X509_VERIFY_PARAM* sk_X509_VERIFY_PARAM_new_reserve(int function(const(const(X509_VERIFY_PARAM_st)*)*, const(const(X509_VERIFY_PARAM_st)*)*), int) @nogc nothrow;
    static stack_st_X509_VERIFY_PARAM* sk_X509_VERIFY_PARAM_new_null() @nogc nothrow;
    static stack_st_X509_VERIFY_PARAM* sk_X509_VERIFY_PARAM_new(int function(const(const(X509_VERIFY_PARAM_st)*)*, const(const(X509_VERIFY_PARAM_st)*)*)) @nogc nothrow;
    static X509_VERIFY_PARAM_st* sk_X509_VERIFY_PARAM_value(const(stack_st_X509_VERIFY_PARAM)*, int) @nogc nothrow;
    static int sk_X509_VERIFY_PARAM_num(const(stack_st_X509_VERIFY_PARAM)*) @nogc nothrow;
    alias sk_X509_VERIFY_PARAM_copyfunc = X509_VERIFY_PARAM_st* function(const(X509_VERIFY_PARAM_st)*);
    alias sk_X509_VERIFY_PARAM_freefunc = void function(X509_VERIFY_PARAM_st*);
    alias sk_X509_VERIFY_PARAM_compfunc = int function(const(const(X509_VERIFY_PARAM_st)*)*, const(const(X509_VERIFY_PARAM_st)*)*);
    struct stack_st_X509_VERIFY_PARAM;
    static x509_object_st* sk_X509_OBJECT_set(stack_st_X509_OBJECT*, int, x509_object_st*) @nogc nothrow;
    static x509_object_st* sk_X509_OBJECT_shift(stack_st_X509_OBJECT*) @nogc nothrow;
    static int sk_X509_OBJECT_insert(stack_st_X509_OBJECT*, x509_object_st*, int) @nogc nothrow;
    static void sk_X509_OBJECT_pop_free(stack_st_X509_OBJECT*, void function(x509_object_st*)) @nogc nothrow;
    static int sk_X509_OBJECT_find(stack_st_X509_OBJECT*, x509_object_st*) @nogc nothrow;
    static x509_object_st* sk_X509_OBJECT_pop(stack_st_X509_OBJECT*) @nogc nothrow;
    static int sk_X509_OBJECT_unshift(stack_st_X509_OBJECT*, x509_object_st*) @nogc nothrow;
    static int sk_X509_OBJECT_push(stack_st_X509_OBJECT*, x509_object_st*) @nogc nothrow;
    static x509_object_st* sk_X509_OBJECT_delete_ptr(stack_st_X509_OBJECT*, x509_object_st*) @nogc nothrow;
    static int sk_X509_OBJECT_find_ex(stack_st_X509_OBJECT*, x509_object_st*) @nogc nothrow;
    static void sk_X509_OBJECT_sort(stack_st_X509_OBJECT*) @nogc nothrow;
    static int sk_X509_OBJECT_is_sorted(const(stack_st_X509_OBJECT)*) @nogc nothrow;
    static stack_st_X509_OBJECT* sk_X509_OBJECT_dup(const(stack_st_X509_OBJECT)*) @nogc nothrow;
    static stack_st_X509_OBJECT* sk_X509_OBJECT_deep_copy(const(stack_st_X509_OBJECT)*, x509_object_st* function(const(x509_object_st)*), void function(x509_object_st*)) @nogc nothrow;
    static int function(const(const(x509_object_st)*)*, const(const(x509_object_st)*)*) sk_X509_OBJECT_set_cmp_func(stack_st_X509_OBJECT*, int function(const(const(x509_object_st)*)*, const(const(x509_object_st)*)*)) @nogc nothrow;
    static void sk_X509_OBJECT_zero(stack_st_X509_OBJECT*) @nogc nothrow;
    static x509_object_st* sk_X509_OBJECT_delete(stack_st_X509_OBJECT*, int) @nogc nothrow;
    static void sk_X509_OBJECT_free(stack_st_X509_OBJECT*) @nogc nothrow;
    static stack_st_X509_OBJECT* sk_X509_OBJECT_new_reserve(int function(const(const(x509_object_st)*)*, const(const(x509_object_st)*)*), int) @nogc nothrow;
    static int sk_X509_OBJECT_reserve(stack_st_X509_OBJECT*, int) @nogc nothrow;
    static stack_st_X509_OBJECT* sk_X509_OBJECT_new_null() @nogc nothrow;
    static stack_st_X509_OBJECT* sk_X509_OBJECT_new(int function(const(const(x509_object_st)*)*, const(const(x509_object_st)*)*)) @nogc nothrow;
    static x509_object_st* sk_X509_OBJECT_value(const(stack_st_X509_OBJECT)*, int) @nogc nothrow;
    static int sk_X509_OBJECT_num(const(stack_st_X509_OBJECT)*) @nogc nothrow;
    alias sk_X509_OBJECT_copyfunc = x509_object_st* function(const(x509_object_st)*);
    alias sk_X509_OBJECT_freefunc = void function(x509_object_st*);
    alias sk_X509_OBJECT_compfunc = int function(const(const(x509_object_st)*)*, const(const(x509_object_st)*)*);
    struct stack_st_X509_OBJECT;
    static x509_lookup_st* sk_X509_LOOKUP_delete(stack_st_X509_LOOKUP*, int) @nogc nothrow;
    struct stack_st_X509_LOOKUP;
    alias sk_X509_LOOKUP_compfunc = int function(const(const(x509_lookup_st)*)*, const(const(x509_lookup_st)*)*);
    alias ERR_STRING_DATA = ERR_string_data_st;
    struct ERR_string_data_st
    {
        c_ulong error;
        const(char)* string_;
    }
    static void lh_ERR_STRING_DATA_stats_bio(const(lhash_st_ERR_STRING_DATA)*, bio_st*) @nogc nothrow;
    static void lh_ERR_STRING_DATA_node_usage_stats_bio(const(lhash_st_ERR_STRING_DATA)*, bio_st*) @nogc nothrow;
    static void lh_ERR_STRING_DATA_node_stats_bio(const(lhash_st_ERR_STRING_DATA)*, bio_st*) @nogc nothrow;
    static c_ulong lh_ERR_STRING_DATA_num_items(lhash_st_ERR_STRING_DATA*) @nogc nothrow;
    static int lh_ERR_STRING_DATA_error(lhash_st_ERR_STRING_DATA*) @nogc nothrow;
    static ERR_string_data_st* lh_ERR_STRING_DATA_retrieve(lhash_st_ERR_STRING_DATA*, const(ERR_string_data_st)*) @nogc nothrow;
    static ERR_string_data_st* lh_ERR_STRING_DATA_insert(lhash_st_ERR_STRING_DATA*, ERR_string_data_st*) @nogc nothrow;
    static void lh_ERR_STRING_DATA_free(lhash_st_ERR_STRING_DATA*) @nogc nothrow;
    static lhash_st_ERR_STRING_DATA* lh_ERR_STRING_DATA_new(c_ulong function(const(ERR_string_data_st)*), int function(const(ERR_string_data_st)*, const(ERR_string_data_st)*)) @nogc nothrow;
    struct lhash_st_ERR_STRING_DATA
    {
        union lh_ERR_STRING_DATA_dummy
        {
            void* d1;
            c_ulong d2;
            int d3;
        }
        lhash_st_ERR_STRING_DATA.lh_ERR_STRING_DATA_dummy dummy;
    }
    static c_ulong lh_ERR_STRING_DATA_get_down_load(lhash_st_ERR_STRING_DATA*) @nogc nothrow;
    static void lh_ERR_STRING_DATA_doall(lhash_st_ERR_STRING_DATA*, void function(ERR_string_data_st*)) @nogc nothrow;
    static void lh_ERR_STRING_DATA_set_down_load(lhash_st_ERR_STRING_DATA*, c_ulong) @nogc nothrow;
    static ERR_string_data_st* lh_ERR_STRING_DATA_delete(lhash_st_ERR_STRING_DATA*, const(ERR_string_data_st)*) @nogc nothrow;
    void ERR_put_error(int, int, int, const(char)*, int) @nogc nothrow;
    void ERR_set_error_data(char*, int) @nogc nothrow;
    c_ulong ERR_get_error() @nogc nothrow;
    c_ulong ERR_get_error_line(const(char)**, int*) @nogc nothrow;
    c_ulong ERR_get_error_line_data(const(char)**, int*, const(char)**, int*) @nogc nothrow;
    c_ulong ERR_peek_error() @nogc nothrow;
    c_ulong ERR_peek_error_line(const(char)**, int*) @nogc nothrow;
    c_ulong ERR_peek_error_line_data(const(char)**, int*, const(char)**, int*) @nogc nothrow;
    c_ulong ERR_peek_last_error() @nogc nothrow;
    c_ulong ERR_peek_last_error_line(const(char)**, int*) @nogc nothrow;
    c_ulong ERR_peek_last_error_line_data(const(char)**, int*, const(char)**, int*) @nogc nothrow;
    void ERR_clear_error() @nogc nothrow;
    char* ERR_error_string(c_ulong, char*) @nogc nothrow;
    void ERR_error_string_n(c_ulong, char*, c_ulong) @nogc nothrow;
    const(char)* ERR_lib_error_string(c_ulong) @nogc nothrow;
    const(char)* ERR_func_error_string(c_ulong) @nogc nothrow;
    const(char)* ERR_reason_error_string(c_ulong) @nogc nothrow;
    void ERR_print_errors_cb(int function(const(char)*, c_ulong, void*), void*) @nogc nothrow;
    void ERR_print_errors_fp(_IO_FILE*) @nogc nothrow;
    void ERR_print_errors(bio_st*) @nogc nothrow;
    void ERR_add_error_data(int, ...) @nogc nothrow;
    void ERR_add_error_vdata(int, va_list*) @nogc nothrow;
    int ERR_load_strings(int, ERR_string_data_st*) @nogc nothrow;
    int ERR_load_strings_const(const(ERR_string_data_st)*) @nogc nothrow;
    int ERR_unload_strings(int, ERR_string_data_st*) @nogc nothrow;
    int ERR_load_ERR_strings() @nogc nothrow;
    alias sk_X509_LOOKUP_freefunc = void function(x509_lookup_st*);
    alias sk_X509_LOOKUP_copyfunc = x509_lookup_st* function(const(x509_lookup_st)*);
    void ERR_remove_thread_state(void*) @nogc nothrow;
    void ERR_remove_state(c_ulong) @nogc nothrow;
    err_state_st* ERR_get_state() @nogc nothrow;
    int ERR_get_next_error_library() @nogc nothrow;
    int ERR_set_mark() @nogc nothrow;
    int ERR_pop_to_mark() @nogc nothrow;
    int ERR_clear_last_mark() @nogc nothrow;
    static int sk_X509_LOOKUP_num(const(stack_st_X509_LOOKUP)*) @nogc nothrow;
    static x509_lookup_st* sk_X509_LOOKUP_value(const(stack_st_X509_LOOKUP)*, int) @nogc nothrow;
    static stack_st_X509_LOOKUP* sk_X509_LOOKUP_new(int function(const(const(x509_lookup_st)*)*, const(const(x509_lookup_st)*)*)) @nogc nothrow;
    static stack_st_X509_LOOKUP* sk_X509_LOOKUP_new_null() @nogc nothrow;
    static stack_st_X509_LOOKUP* sk_X509_LOOKUP_new_reserve(int function(const(const(x509_lookup_st)*)*, const(const(x509_lookup_st)*)*), int) @nogc nothrow;
    static int sk_X509_LOOKUP_reserve(stack_st_X509_LOOKUP*, int) @nogc nothrow;
    static void sk_X509_LOOKUP_free(stack_st_X509_LOOKUP*) @nogc nothrow;
    static void sk_X509_LOOKUP_zero(stack_st_X509_LOOKUP*) @nogc nothrow;
    static void sk_X509_LOOKUP_pop_free(stack_st_X509_LOOKUP*, void function(x509_lookup_st*)) @nogc nothrow;
    static x509_lookup_st* sk_X509_LOOKUP_delete_ptr(stack_st_X509_LOOKUP*, x509_lookup_st*) @nogc nothrow;
    static int sk_X509_LOOKUP_push(stack_st_X509_LOOKUP*, x509_lookup_st*) @nogc nothrow;
    static int sk_X509_LOOKUP_unshift(stack_st_X509_LOOKUP*, x509_lookup_st*) @nogc nothrow;
    static x509_lookup_st* sk_X509_LOOKUP_pop(stack_st_X509_LOOKUP*) @nogc nothrow;
    static x509_lookup_st* sk_X509_LOOKUP_shift(stack_st_X509_LOOKUP*) @nogc nothrow;
    static int sk_X509_LOOKUP_insert(stack_st_X509_LOOKUP*, x509_lookup_st*, int) @nogc nothrow;
    static x509_lookup_st* sk_X509_LOOKUP_set(stack_st_X509_LOOKUP*, int, x509_lookup_st*) @nogc nothrow;
    static int sk_X509_LOOKUP_find(stack_st_X509_LOOKUP*, x509_lookup_st*) @nogc nothrow;
    static int sk_X509_LOOKUP_find_ex(stack_st_X509_LOOKUP*, x509_lookup_st*) @nogc nothrow;
    static void sk_X509_LOOKUP_sort(stack_st_X509_LOOKUP*) @nogc nothrow;
    static int sk_X509_LOOKUP_is_sorted(const(stack_st_X509_LOOKUP)*) @nogc nothrow;
    static stack_st_X509_LOOKUP* sk_X509_LOOKUP_dup(const(stack_st_X509_LOOKUP)*) @nogc nothrow;
    static stack_st_X509_LOOKUP* sk_X509_LOOKUP_deep_copy(const(stack_st_X509_LOOKUP)*, x509_lookup_st* function(const(x509_lookup_st)*), void function(x509_lookup_st*)) @nogc nothrow;
    static int function(const(const(x509_lookup_st)*)*, const(const(x509_lookup_st)*)*) sk_X509_LOOKUP_set_cmp_func(stack_st_X509_LOOKUP*, int function(const(const(x509_lookup_st)*)*, const(const(x509_lookup_st)*)*)) @nogc nothrow;
    enum _Anonymous_26
    {
        X509_LU_NONE = 0,
        X509_LU_X509 = 1,
        X509_LU_CRL = 2,
    }
    enum X509_LU_NONE = _Anonymous_26.X509_LU_NONE;
    enum X509_LU_X509 = _Anonymous_26.X509_LU_X509;
    enum X509_LU_CRL = _Anonymous_26.X509_LU_CRL;
    alias X509_LOOKUP_TYPE = _Anonymous_26;
    int X509_TRUST_get_trust(const(x509_trust_st)*) @nogc nothrow;
    char* X509_TRUST_get0_name(const(x509_trust_st)*) @nogc nothrow;
    int X509_TRUST_get_flags(const(x509_trust_st)*) @nogc nothrow;
    void X509_TRUST_cleanup() @nogc nothrow;
    int X509_TRUST_add(int, int, int function(x509_trust_st*, x509_st*, int), const(char)*, int, void*) @nogc nothrow;
    int X509_TRUST_get_by_id(int) @nogc nothrow;
    x509_trust_st* X509_TRUST_get0(int) @nogc nothrow;
    int X509_TRUST_get_count() @nogc nothrow;
    int X509_check_trust(x509_st*, int, int) @nogc nothrow;
    int X509_PUBKEY_get0_param(asn1_object_st**, const(ubyte)**, int*, X509_algor_st**, X509_pubkey_st*) @nogc nothrow;
    int X509_PUBKEY_set0_param(X509_pubkey_st*, asn1_object_st*, int, void*, ubyte*, int) @nogc nothrow;
    int PKCS8_pkey_add1_attr_by_NID(pkcs8_priv_key_info_st*, int, int, const(ubyte)*, int) @nogc nothrow;
    evp_md_st* EVP_MD_meth_new(int, int) @nogc nothrow;
    evp_md_st* EVP_MD_meth_dup(const(evp_md_st)*) @nogc nothrow;
    void EVP_MD_meth_free(evp_md_st*) @nogc nothrow;
    int EVP_MD_meth_set_input_blocksize(evp_md_st*, int) @nogc nothrow;
    int EVP_MD_meth_set_result_size(evp_md_st*, int) @nogc nothrow;
    int EVP_MD_meth_set_app_datasize(evp_md_st*, int) @nogc nothrow;
    int EVP_MD_meth_set_flags(evp_md_st*, c_ulong) @nogc nothrow;
    int EVP_MD_meth_set_init(evp_md_st*, int function(evp_md_ctx_st*)) @nogc nothrow;
    int EVP_MD_meth_set_update(evp_md_st*, int function(evp_md_ctx_st*, const(void)*, c_ulong)) @nogc nothrow;
    int EVP_MD_meth_set_final(evp_md_st*, int function(evp_md_ctx_st*, ubyte*)) @nogc nothrow;
    int EVP_MD_meth_set_copy(evp_md_st*, int function(evp_md_ctx_st*, const(evp_md_ctx_st)*)) @nogc nothrow;
    int EVP_MD_meth_set_cleanup(evp_md_st*, int function(evp_md_ctx_st*)) @nogc nothrow;
    int EVP_MD_meth_set_ctrl(evp_md_st*, int function(evp_md_ctx_st*, int, int, void*)) @nogc nothrow;
    int EVP_MD_meth_get_input_blocksize(const(evp_md_st)*) @nogc nothrow;
    int EVP_MD_meth_get_result_size(const(evp_md_st)*) @nogc nothrow;
    int EVP_MD_meth_get_app_datasize(const(evp_md_st)*) @nogc nothrow;
    c_ulong EVP_MD_meth_get_flags(const(evp_md_st)*) @nogc nothrow;
    int function(evp_md_ctx_st*) EVP_MD_meth_get_init(const(evp_md_st)*) @nogc nothrow;
    int function(evp_md_ctx_st*, const(void)*, c_ulong) EVP_MD_meth_get_update(const(evp_md_st)*) @nogc nothrow;
    int function(evp_md_ctx_st*, ubyte*) EVP_MD_meth_get_final(const(evp_md_st)*) @nogc nothrow;
    int function(evp_md_ctx_st*, const(evp_md_ctx_st)*) EVP_MD_meth_get_copy(const(evp_md_st)*) @nogc nothrow;
    int function(evp_md_ctx_st*) EVP_MD_meth_get_cleanup(const(evp_md_st)*) @nogc nothrow;
    int function(evp_md_ctx_st*, int, int, void*) EVP_MD_meth_get_ctrl(const(evp_md_st)*) @nogc nothrow;
    const(stack_st_X509_ATTRIBUTE)* PKCS8_pkey_get0_attrs(const(pkcs8_priv_key_info_st)*) @nogc nothrow;
    int PKCS8_pkey_get0(const(asn1_object_st)**, const(ubyte)**, int*, const(X509_algor_st)**, const(pkcs8_priv_key_info_st)*) @nogc nothrow;
    int PKCS8_pkey_set0(pkcs8_priv_key_info_st*, asn1_object_st*, int, int, void*, ubyte*, int) @nogc nothrow;
    pkcs8_priv_key_info_st* EVP_PKEY2PKCS8(evp_pkey_st*) @nogc nothrow;
    evp_pkey_st* EVP_PKCS82PKEY(const(pkcs8_priv_key_info_st)*) @nogc nothrow;
    pkcs8_priv_key_info_st* d2i_PKCS8_PRIV_KEY_INFO(pkcs8_priv_key_info_st**, const(ubyte)**, c_long) @nogc nothrow;
    pkcs8_priv_key_info_st* PKCS8_PRIV_KEY_INFO_new() @nogc nothrow;
    void PKCS8_PRIV_KEY_INFO_free(pkcs8_priv_key_info_st*) @nogc nothrow;
    int i2d_PKCS8_PRIV_KEY_INFO(pkcs8_priv_key_info_st*, ubyte**) @nogc nothrow;
    X509_algor_st* PKCS5_pbkdf2_set(int, ubyte*, int, int, int) @nogc nothrow;
    X509_algor_st* PKCS5_pbe2_set_scrypt(const(evp_cipher_st)*, const(ubyte)*, int, ubyte*, c_ulong, c_ulong, c_ulong) @nogc nothrow;
    X509_algor_st* PKCS5_pbe2_set_iv(const(evp_cipher_st)*, int, ubyte*, int, ubyte*, int) @nogc nothrow;
    X509_algor_st* PKCS5_pbe2_set(const(evp_cipher_st)*, int, ubyte*, int) @nogc nothrow;
    X509_algor_st* PKCS5_pbe_set(int, int, const(ubyte)*, int) @nogc nothrow;
    int PKCS5_pbe_set0_algor(X509_algor_st*, int, int, const(ubyte)*, int) @nogc nothrow;
    SCRYPT_PARAMS_st* d2i_SCRYPT_PARAMS(SCRYPT_PARAMS_st**, const(ubyte)**, c_long) @nogc nothrow;
    SCRYPT_PARAMS_st* SCRYPT_PARAMS_new() @nogc nothrow;
    evp_cipher_st* EVP_CIPHER_meth_new(int, int, int) @nogc nothrow;
    evp_cipher_st* EVP_CIPHER_meth_dup(const(evp_cipher_st)*) @nogc nothrow;
    void EVP_CIPHER_meth_free(evp_cipher_st*) @nogc nothrow;
    int EVP_CIPHER_meth_set_iv_length(evp_cipher_st*, int) @nogc nothrow;
    int EVP_CIPHER_meth_set_flags(evp_cipher_st*, c_ulong) @nogc nothrow;
    int EVP_CIPHER_meth_set_impl_ctx_size(evp_cipher_st*, int) @nogc nothrow;
    int EVP_CIPHER_meth_set_init(evp_cipher_st*, int function(evp_cipher_ctx_st*, const(ubyte)*, const(ubyte)*, int)) @nogc nothrow;
    int EVP_CIPHER_meth_set_do_cipher(evp_cipher_st*, int function(evp_cipher_ctx_st*, ubyte*, const(ubyte)*, c_ulong)) @nogc nothrow;
    int EVP_CIPHER_meth_set_cleanup(evp_cipher_st*, int function(evp_cipher_ctx_st*)) @nogc nothrow;
    int EVP_CIPHER_meth_set_set_asn1_params(evp_cipher_st*, int function(evp_cipher_ctx_st*, asn1_type_st*)) @nogc nothrow;
    int EVP_CIPHER_meth_set_get_asn1_params(evp_cipher_st*, int function(evp_cipher_ctx_st*, asn1_type_st*)) @nogc nothrow;
    int EVP_CIPHER_meth_set_ctrl(evp_cipher_st*, int function(evp_cipher_ctx_st*, int, int, void*)) @nogc nothrow;
    int function(evp_cipher_ctx_st*, const(ubyte)*, const(ubyte)*, int) EVP_CIPHER_meth_get_init(const(evp_cipher_st)*) @nogc nothrow;
    int function(evp_cipher_ctx_st*, ubyte*, const(ubyte)*, c_ulong) EVP_CIPHER_meth_get_do_cipher(const(evp_cipher_st)*) @nogc nothrow;
    int function(evp_cipher_ctx_st*) EVP_CIPHER_meth_get_cleanup(const(evp_cipher_st)*) @nogc nothrow;
    int function(evp_cipher_ctx_st*, asn1_type_st*) EVP_CIPHER_meth_get_set_asn1_params(const(evp_cipher_st)*) @nogc nothrow;
    int function(evp_cipher_ctx_st*, asn1_type_st*) EVP_CIPHER_meth_get_get_asn1_params(const(evp_cipher_st)*) @nogc nothrow;
    int function(evp_cipher_ctx_st*, int, int, void*) EVP_CIPHER_meth_get_ctrl(const(evp_cipher_st)*) @nogc nothrow;
    int i2d_SCRYPT_PARAMS(SCRYPT_PARAMS_st*, ubyte**) @nogc nothrow;
    void SCRYPT_PARAMS_free(SCRYPT_PARAMS_st*) @nogc nothrow;
    PBKDF2PARAM_st* d2i_PBKDF2PARAM(PBKDF2PARAM_st**, const(ubyte)**, c_long) @nogc nothrow;
    PBKDF2PARAM_st* PBKDF2PARAM_new() @nogc nothrow;
    int i2d_PBKDF2PARAM(PBKDF2PARAM_st*, ubyte**) @nogc nothrow;
    void PBKDF2PARAM_free(PBKDF2PARAM_st*) @nogc nothrow;
    PBE2PARAM_st* d2i_PBE2PARAM(PBE2PARAM_st**, const(ubyte)**, c_long) @nogc nothrow;
    PBE2PARAM_st* PBE2PARAM_new() @nogc nothrow;
    int i2d_PBE2PARAM(PBE2PARAM_st*, ubyte**) @nogc nothrow;
    void PBE2PARAM_free(PBE2PARAM_st*) @nogc nothrow;
    PBEPARAM_st* d2i_PBEPARAM(PBEPARAM_st**, const(ubyte)**, c_long) @nogc nothrow;
    PBEPARAM_st* PBEPARAM_new() @nogc nothrow;
    int i2d_PBEPARAM(PBEPARAM_st*, ubyte**) @nogc nothrow;
    void PBEPARAM_free(PBEPARAM_st*) @nogc nothrow;
    x509_st* X509_find_by_subject(stack_st_X509*, X509_name_st*) @nogc nothrow;
    x509_st* X509_find_by_issuer_and_serial(stack_st_X509*, X509_name_st*, asn1_string_st*) @nogc nothrow;
    int X509_verify_cert(x509_store_ctx_st*) @nogc nothrow;
    int EVP_PKEY_add1_attr_by_txt(evp_pkey_st*, const(char)*, int, const(ubyte)*, int) @nogc nothrow;
    int EVP_PKEY_add1_attr_by_NID(evp_pkey_st*, int, int, const(ubyte)*, int) @nogc nothrow;
    int EVP_PKEY_add1_attr_by_OBJ(evp_pkey_st*, const(asn1_object_st)*, int, const(ubyte)*, int) @nogc nothrow;
    int EVP_PKEY_add1_attr(evp_pkey_st*, x509_attributes_st*) @nogc nothrow;
    x509_attributes_st* EVP_PKEY_delete_attr(evp_pkey_st*, int) @nogc nothrow;
    x509_attributes_st* EVP_PKEY_get_attr(const(evp_pkey_st)*, int) @nogc nothrow;
    int EVP_PKEY_get_attr_by_OBJ(const(evp_pkey_st)*, const(asn1_object_st)*, int) @nogc nothrow;
    int EVP_PKEY_get_attr_by_NID(const(evp_pkey_st)*, int, int) @nogc nothrow;
    int EVP_PKEY_get_attr_count(const(evp_pkey_st)*) @nogc nothrow;
    asn1_type_st* X509_ATTRIBUTE_get0_type(x509_attributes_st*, int) @nogc nothrow;
    asn1_object_st* X509_ATTRIBUTE_get0_object(x509_attributes_st*) @nogc nothrow;
    int X509_ATTRIBUTE_count(const(x509_attributes_st)*) @nogc nothrow;
    void* X509_ATTRIBUTE_get0_data(x509_attributes_st*, int, int, void*) @nogc nothrow;
    int X509_ATTRIBUTE_set1_data(x509_attributes_st*, int, const(void)*, int) @nogc nothrow;
    int X509_ATTRIBUTE_set1_object(x509_attributes_st*, const(asn1_object_st)*) @nogc nothrow;
    x509_attributes_st* X509_ATTRIBUTE_create_by_txt(x509_attributes_st**, const(char)*, int, const(ubyte)*, int) @nogc nothrow;
    x509_attributes_st* X509_ATTRIBUTE_create_by_OBJ(x509_attributes_st**, const(asn1_object_st)*, int, const(void)*, int) @nogc nothrow;
    x509_attributes_st* X509_ATTRIBUTE_create_by_NID(x509_attributes_st**, int, int, const(void)*, int) @nogc nothrow;
    void* X509at_get0_data_by_OBJ(const(stack_st_X509_ATTRIBUTE)*, const(asn1_object_st)*, int, int) @nogc nothrow;
    stack_st_X509_ATTRIBUTE* X509at_add1_attr_by_txt(stack_st_X509_ATTRIBUTE**, const(char)*, int, const(ubyte)*, int) @nogc nothrow;
    stack_st_X509_ATTRIBUTE* X509at_add1_attr_by_NID(stack_st_X509_ATTRIBUTE**, int, int, const(ubyte)*, int) @nogc nothrow;
    stack_st_X509_ATTRIBUTE* X509at_add1_attr_by_OBJ(stack_st_X509_ATTRIBUTE**, const(asn1_object_st)*, int, const(ubyte)*, int) @nogc nothrow;
    stack_st_X509_ATTRIBUTE* X509at_add1_attr(stack_st_X509_ATTRIBUTE**, x509_attributes_st*) @nogc nothrow;
    x509_attributes_st* X509at_delete_attr(stack_st_X509_ATTRIBUTE*, int) @nogc nothrow;
    x509_attributes_st* X509at_get_attr(const(stack_st_X509_ATTRIBUTE)*, int) @nogc nothrow;
    int X509at_get_attr_by_OBJ(const(stack_st_X509_ATTRIBUTE)*, const(asn1_object_st)*, int) @nogc nothrow;
    int X509at_get_attr_by_NID(const(stack_st_X509_ATTRIBUTE)*, int, int) @nogc nothrow;
    int X509at_get_attr_count(const(stack_st_X509_ATTRIBUTE)*) @nogc nothrow;
    int X509_EXTENSION_get_critical(const(X509_extension_st)*) @nogc nothrow;
    asn1_string_st* X509_EXTENSION_get_data(X509_extension_st*) @nogc nothrow;
    asn1_object_st* X509_EXTENSION_get_object(X509_extension_st*) @nogc nothrow;
    int X509_EXTENSION_set_data(X509_extension_st*, asn1_string_st*) @nogc nothrow;
    int X509_EXTENSION_set_critical(X509_extension_st*, int) @nogc nothrow;
    int X509_EXTENSION_set_object(X509_extension_st*, const(asn1_object_st)*) @nogc nothrow;
    X509_extension_st* X509_EXTENSION_create_by_OBJ(X509_extension_st**, const(asn1_object_st)*, int, asn1_string_st*) @nogc nothrow;
    X509_extension_st* X509_EXTENSION_create_by_NID(X509_extension_st**, int, int, asn1_string_st*) @nogc nothrow;
    int X509_REVOKED_add1_ext_i2d(x509_revoked_st*, int, void*, int, c_ulong) @nogc nothrow;
    struct EVP_CTRL_TLS1_1_MULTIBLOCK_PARAM
    {
        ubyte* out_;
        const(ubyte)* inp;
        c_ulong len;
        uint interleave;
    }
    void* X509_REVOKED_get_ext_d2i(const(x509_revoked_st)*, int, int*, int*) @nogc nothrow;
    int X509_REVOKED_add_ext(x509_revoked_st*, X509_extension_st*, int) @nogc nothrow;
    X509_extension_st* X509_REVOKED_delete_ext(x509_revoked_st*, int) @nogc nothrow;
    X509_extension_st* X509_REVOKED_get_ext(const(x509_revoked_st)*, int) @nogc nothrow;
    int X509_REVOKED_get_ext_by_critical(const(x509_revoked_st)*, int, int) @nogc nothrow;
    int X509_REVOKED_get_ext_by_OBJ(const(x509_revoked_st)*, const(asn1_object_st)*, int) @nogc nothrow;
    int X509_REVOKED_get_ext_by_NID(const(x509_revoked_st)*, int, int) @nogc nothrow;
    int X509_REVOKED_get_ext_count(const(x509_revoked_st)*) @nogc nothrow;
    int X509_CRL_add1_ext_i2d(X509_crl_st*, int, void*, int, c_ulong) @nogc nothrow;
    alias EVP_CIPHER_INFO = evp_cipher_info_st;
    struct evp_cipher_info_st
    {
        const(evp_cipher_st)* cipher;
        ubyte[16] iv;
    }
    alias EVP_PBE_KEYGEN = int function(evp_cipher_ctx_st*, const(char)*, int, asn1_type_st*, const(evp_cipher_st)*, const(evp_md_st)*, int);
    void* X509_CRL_get_ext_d2i(const(X509_crl_st)*, int, int*, int*) @nogc nothrow;
    int X509_CRL_add_ext(X509_crl_st*, X509_extension_st*, int) @nogc nothrow;
    X509_extension_st* X509_CRL_delete_ext(X509_crl_st*, int) @nogc nothrow;
    X509_extension_st* X509_CRL_get_ext(const(X509_crl_st)*, int) @nogc nothrow;
    int X509_CRL_get_ext_by_critical(const(X509_crl_st)*, int, int) @nogc nothrow;
    int X509_CRL_get_ext_by_OBJ(const(X509_crl_st)*, const(asn1_object_st)*, int) @nogc nothrow;
    int X509_CRL_get_ext_by_NID(const(X509_crl_st)*, int, int) @nogc nothrow;
    int X509_CRL_get_ext_count(const(X509_crl_st)*) @nogc nothrow;
    int X509_add1_ext_i2d(x509_st*, int, void*, int, c_ulong) @nogc nothrow;
    void* X509_get_ext_d2i(const(x509_st)*, int, int*, int*) @nogc nothrow;
    int EVP_MD_type(const(evp_md_st)*) @nogc nothrow;
    int X509_add_ext(x509_st*, X509_extension_st*, int) @nogc nothrow;
    X509_extension_st* X509_delete_ext(x509_st*, int) @nogc nothrow;
    int EVP_MD_pkey_type(const(evp_md_st)*) @nogc nothrow;
    int EVP_MD_size(const(evp_md_st)*) @nogc nothrow;
    int EVP_MD_block_size(const(evp_md_st)*) @nogc nothrow;
    c_ulong EVP_MD_flags(const(evp_md_st)*) @nogc nothrow;
    const(evp_md_st)* EVP_MD_CTX_md(const(evp_md_ctx_st)*) @nogc nothrow;
    int function(evp_md_ctx_st*, const(void)*, c_ulong) EVP_MD_CTX_update_fn(evp_md_ctx_st*) @nogc nothrow;
    void EVP_MD_CTX_set_update_fn(evp_md_ctx_st*, int function(evp_md_ctx_st*, const(void)*, c_ulong)) @nogc nothrow;
    X509_extension_st* X509_get_ext(const(x509_st)*, int) @nogc nothrow;
    int X509_get_ext_by_critical(const(x509_st)*, int, int) @nogc nothrow;
    int X509_get_ext_by_OBJ(const(x509_st)*, const(asn1_object_st)*, int) @nogc nothrow;
    evp_pkey_ctx_st* EVP_MD_CTX_pkey_ctx(const(evp_md_ctx_st)*) @nogc nothrow;
    void EVP_MD_CTX_set_pkey_ctx(evp_md_ctx_st*, evp_pkey_ctx_st*) @nogc nothrow;
    void* EVP_MD_CTX_md_data(const(evp_md_ctx_st)*) @nogc nothrow;
    int EVP_CIPHER_nid(const(evp_cipher_st)*) @nogc nothrow;
    int X509_get_ext_by_NID(const(x509_st)*, int, int) @nogc nothrow;
    int EVP_CIPHER_block_size(const(evp_cipher_st)*) @nogc nothrow;
    int EVP_CIPHER_impl_ctx_size(const(evp_cipher_st)*) @nogc nothrow;
    int EVP_CIPHER_key_length(const(evp_cipher_st)*) @nogc nothrow;
    int EVP_CIPHER_iv_length(const(evp_cipher_st)*) @nogc nothrow;
    c_ulong EVP_CIPHER_flags(const(evp_cipher_st)*) @nogc nothrow;
    int X509_get_ext_count(const(x509_st)*) @nogc nothrow;
    const(evp_cipher_st)* EVP_CIPHER_CTX_cipher(const(evp_cipher_ctx_st)*) @nogc nothrow;
    int EVP_CIPHER_CTX_encrypting(const(evp_cipher_ctx_st)*) @nogc nothrow;
    int EVP_CIPHER_CTX_nid(const(evp_cipher_ctx_st)*) @nogc nothrow;
    int EVP_CIPHER_CTX_block_size(const(evp_cipher_ctx_st)*) @nogc nothrow;
    int EVP_CIPHER_CTX_key_length(const(evp_cipher_ctx_st)*) @nogc nothrow;
    int EVP_CIPHER_CTX_iv_length(const(evp_cipher_ctx_st)*) @nogc nothrow;
    const(ubyte)* EVP_CIPHER_CTX_iv(const(evp_cipher_ctx_st)*) @nogc nothrow;
    const(ubyte)* EVP_CIPHER_CTX_original_iv(const(evp_cipher_ctx_st)*) @nogc nothrow;
    ubyte* EVP_CIPHER_CTX_iv_noconst(evp_cipher_ctx_st*) @nogc nothrow;
    ubyte* EVP_CIPHER_CTX_buf_noconst(evp_cipher_ctx_st*) @nogc nothrow;
    int EVP_CIPHER_CTX_num(const(evp_cipher_ctx_st)*) @nogc nothrow;
    void EVP_CIPHER_CTX_set_num(evp_cipher_ctx_st*, int) @nogc nothrow;
    int EVP_CIPHER_CTX_copy(evp_cipher_ctx_st*, const(evp_cipher_ctx_st)*) @nogc nothrow;
    void* EVP_CIPHER_CTX_get_app_data(const(evp_cipher_ctx_st)*) @nogc nothrow;
    void EVP_CIPHER_CTX_set_app_data(evp_cipher_ctx_st*, void*) @nogc nothrow;
    void* EVP_CIPHER_CTX_get_cipher_data(const(evp_cipher_ctx_st)*) @nogc nothrow;
    void* EVP_CIPHER_CTX_set_cipher_data(evp_cipher_ctx_st*, void*) @nogc nothrow;
    stack_st_X509_EXTENSION* X509v3_add_ext(stack_st_X509_EXTENSION**, X509_extension_st*, int) @nogc nothrow;
    X509_extension_st* X509v3_delete_ext(stack_st_X509_EXTENSION*, int) @nogc nothrow;
    X509_extension_st* X509v3_get_ext(const(stack_st_X509_EXTENSION)*, int) @nogc nothrow;
    int X509v3_get_ext_by_critical(const(stack_st_X509_EXTENSION)*, int, int) @nogc nothrow;
    int X509v3_get_ext_by_OBJ(const(stack_st_X509_EXTENSION)*, const(asn1_object_st)*, int) @nogc nothrow;
    int X509v3_get_ext_by_NID(const(stack_st_X509_EXTENSION)*, int, int) @nogc nothrow;
    int X509v3_get_ext_count(const(stack_st_X509_EXTENSION)*) @nogc nothrow;
    int X509_NAME_get0_der(X509_name_st*, const(ubyte)**, c_ulong*) @nogc nothrow;
    int X509_NAME_ENTRY_set(const(X509_name_entry_st)*) @nogc nothrow;
    asn1_string_st* X509_NAME_ENTRY_get_data(const(X509_name_entry_st)*) @nogc nothrow;
    asn1_object_st* X509_NAME_ENTRY_get_object(const(X509_name_entry_st)*) @nogc nothrow;
    int X509_NAME_ENTRY_set_data(X509_name_entry_st*, int, const(ubyte)*, int) @nogc nothrow;
    int X509_NAME_ENTRY_set_object(X509_name_entry_st*, const(asn1_object_st)*) @nogc nothrow;
    int EVP_Cipher(evp_cipher_ctx_st*, ubyte*, const(ubyte)*, uint) @nogc nothrow;
    X509_name_entry_st* X509_NAME_ENTRY_create_by_OBJ(X509_name_entry_st**, const(asn1_object_st)*, int, const(ubyte)*, int) @nogc nothrow;
    int X509_NAME_add_entry_by_txt(X509_name_st*, const(char)*, int, const(ubyte)*, int, int, int) @nogc nothrow;
    X509_name_entry_st* X509_NAME_ENTRY_create_by_NID(X509_name_entry_st**, int, int, const(ubyte)*, int) @nogc nothrow;
    X509_name_entry_st* X509_NAME_ENTRY_create_by_txt(X509_name_entry_st**, const(char)*, int, const(ubyte)*, int) @nogc nothrow;
    int EVP_MD_CTX_ctrl(evp_md_ctx_st*, int, int, void*) @nogc nothrow;
    evp_md_ctx_st* EVP_MD_CTX_new() @nogc nothrow;
    int EVP_MD_CTX_reset(evp_md_ctx_st*) @nogc nothrow;
    void EVP_MD_CTX_free(evp_md_ctx_st*) @nogc nothrow;
    int X509_NAME_add_entry_by_NID(X509_name_st*, int, int, const(ubyte)*, int, int, int) @nogc nothrow;
    int X509_NAME_add_entry_by_OBJ(X509_name_st*, const(asn1_object_st)*, int, const(ubyte)*, int, int, int) @nogc nothrow;
    int X509_NAME_add_entry(X509_name_st*, const(X509_name_entry_st)*, int, int) @nogc nothrow;
    int EVP_MD_CTX_copy_ex(evp_md_ctx_st*, const(evp_md_ctx_st)*) @nogc nothrow;
    void EVP_MD_CTX_set_flags(evp_md_ctx_st*, int) @nogc nothrow;
    void EVP_MD_CTX_clear_flags(evp_md_ctx_st*, int) @nogc nothrow;
    int EVP_MD_CTX_test_flags(const(evp_md_ctx_st)*, int) @nogc nothrow;
    int EVP_DigestInit_ex(evp_md_ctx_st*, const(evp_md_st)*, engine_st*) @nogc nothrow;
    int EVP_DigestUpdate(evp_md_ctx_st*, const(void)*, c_ulong) @nogc nothrow;
    int EVP_DigestFinal_ex(evp_md_ctx_st*, ubyte*, uint*) @nogc nothrow;
    int EVP_Digest(const(void)*, c_ulong, ubyte*, uint*, const(evp_md_st)*, engine_st*) @nogc nothrow;
    int EVP_MD_CTX_copy(evp_md_ctx_st*, const(evp_md_ctx_st)*) @nogc nothrow;
    int EVP_DigestInit(evp_md_ctx_st*, const(evp_md_st)*) @nogc nothrow;
    int EVP_DigestFinal(evp_md_ctx_st*, ubyte*, uint*) @nogc nothrow;
    int EVP_DigestFinalXOF(evp_md_ctx_st*, ubyte*, c_ulong) @nogc nothrow;
    int EVP_read_pw_string(char*, int, const(char)*, int) @nogc nothrow;
    int EVP_read_pw_string_min(char*, int, int, const(char)*, int) @nogc nothrow;
    void EVP_set_pw_prompt(const(char)*) @nogc nothrow;
    char* EVP_get_pw_prompt() @nogc nothrow;
    int EVP_BytesToKey(const(evp_cipher_st)*, const(evp_md_st)*, const(ubyte)*, const(ubyte)*, int, int, ubyte*, ubyte*) @nogc nothrow;
    void EVP_CIPHER_CTX_set_flags(evp_cipher_ctx_st*, int) @nogc nothrow;
    void EVP_CIPHER_CTX_clear_flags(evp_cipher_ctx_st*, int) @nogc nothrow;
    int EVP_CIPHER_CTX_test_flags(const(evp_cipher_ctx_st)*, int) @nogc nothrow;
    int EVP_EncryptInit(evp_cipher_ctx_st*, const(evp_cipher_st)*, const(ubyte)*, const(ubyte)*) @nogc nothrow;
    int EVP_EncryptInit_ex(evp_cipher_ctx_st*, const(evp_cipher_st)*, engine_st*, const(ubyte)*, const(ubyte)*) @nogc nothrow;
    int EVP_EncryptUpdate(evp_cipher_ctx_st*, ubyte*, int*, const(ubyte)*, int) @nogc nothrow;
    int EVP_EncryptFinal_ex(evp_cipher_ctx_st*, ubyte*, int*) @nogc nothrow;
    int EVP_EncryptFinal(evp_cipher_ctx_st*, ubyte*, int*) @nogc nothrow;
    int EVP_DecryptInit(evp_cipher_ctx_st*, const(evp_cipher_st)*, const(ubyte)*, const(ubyte)*) @nogc nothrow;
    int EVP_DecryptInit_ex(evp_cipher_ctx_st*, const(evp_cipher_st)*, engine_st*, const(ubyte)*, const(ubyte)*) @nogc nothrow;
    int EVP_DecryptUpdate(evp_cipher_ctx_st*, ubyte*, int*, const(ubyte)*, int) @nogc nothrow;
    int EVP_DecryptFinal(evp_cipher_ctx_st*, ubyte*, int*) @nogc nothrow;
    int EVP_DecryptFinal_ex(evp_cipher_ctx_st*, ubyte*, int*) @nogc nothrow;
    int EVP_CipherInit(evp_cipher_ctx_st*, const(evp_cipher_st)*, const(ubyte)*, const(ubyte)*, int) @nogc nothrow;
    int EVP_CipherInit_ex(evp_cipher_ctx_st*, const(evp_cipher_st)*, engine_st*, const(ubyte)*, const(ubyte)*, int) @nogc nothrow;
    int EVP_CipherUpdate(evp_cipher_ctx_st*, ubyte*, int*, const(ubyte)*, int) @nogc nothrow;
    int EVP_CipherFinal(evp_cipher_ctx_st*, ubyte*, int*) @nogc nothrow;
    int EVP_CipherFinal_ex(evp_cipher_ctx_st*, ubyte*, int*) @nogc nothrow;
    int EVP_SignFinal(evp_md_ctx_st*, ubyte*, uint*, evp_pkey_st*) @nogc nothrow;
    int EVP_DigestSign(evp_md_ctx_st*, ubyte*, c_ulong*, const(ubyte)*, c_ulong) @nogc nothrow;
    int EVP_VerifyFinal(evp_md_ctx_st*, const(ubyte)*, uint, evp_pkey_st*) @nogc nothrow;
    int EVP_DigestVerify(evp_md_ctx_st*, const(ubyte)*, c_ulong, const(ubyte)*, c_ulong) @nogc nothrow;
    int EVP_DigestSignInit(evp_md_ctx_st*, evp_pkey_ctx_st**, const(evp_md_st)*, engine_st*, evp_pkey_st*) @nogc nothrow;
    int EVP_DigestSignFinal(evp_md_ctx_st*, ubyte*, c_ulong*) @nogc nothrow;
    int EVP_DigestVerifyInit(evp_md_ctx_st*, evp_pkey_ctx_st**, const(evp_md_st)*, engine_st*, evp_pkey_st*) @nogc nothrow;
    int EVP_DigestVerifyFinal(evp_md_ctx_st*, const(ubyte)*, c_ulong) @nogc nothrow;
    int EVP_OpenInit(evp_cipher_ctx_st*, const(evp_cipher_st)*, const(ubyte)*, int, const(ubyte)*, evp_pkey_st*) @nogc nothrow;
    int EVP_OpenFinal(evp_cipher_ctx_st*, ubyte*, int*) @nogc nothrow;
    int EVP_SealInit(evp_cipher_ctx_st*, const(evp_cipher_st)*, ubyte**, int*, ubyte*, evp_pkey_st**, int) @nogc nothrow;
    int EVP_SealFinal(evp_cipher_ctx_st*, ubyte*, int*) @nogc nothrow;
    evp_Encode_Ctx_st* EVP_ENCODE_CTX_new() @nogc nothrow;
    void EVP_ENCODE_CTX_free(evp_Encode_Ctx_st*) @nogc nothrow;
    int EVP_ENCODE_CTX_copy(evp_Encode_Ctx_st*, evp_Encode_Ctx_st*) @nogc nothrow;
    int EVP_ENCODE_CTX_num(evp_Encode_Ctx_st*) @nogc nothrow;
    void EVP_EncodeInit(evp_Encode_Ctx_st*) @nogc nothrow;
    int EVP_EncodeUpdate(evp_Encode_Ctx_st*, ubyte*, int*, const(ubyte)*, int) @nogc nothrow;
    void EVP_EncodeFinal(evp_Encode_Ctx_st*, ubyte*, int*) @nogc nothrow;
    int EVP_EncodeBlock(ubyte*, const(ubyte)*, int) @nogc nothrow;
    void EVP_DecodeInit(evp_Encode_Ctx_st*) @nogc nothrow;
    int EVP_DecodeUpdate(evp_Encode_Ctx_st*, ubyte*, int*, const(ubyte)*, int) @nogc nothrow;
    int EVP_DecodeFinal(evp_Encode_Ctx_st*, ubyte*, int*) @nogc nothrow;
    int EVP_DecodeBlock(ubyte*, const(ubyte)*, int) @nogc nothrow;
    X509_name_entry_st* X509_NAME_delete_entry(X509_name_st*, int) @nogc nothrow;
    X509_name_entry_st* X509_NAME_get_entry(const(X509_name_st)*, int) @nogc nothrow;
    evp_cipher_ctx_st* EVP_CIPHER_CTX_new() @nogc nothrow;
    int EVP_CIPHER_CTX_reset(evp_cipher_ctx_st*) @nogc nothrow;
    void EVP_CIPHER_CTX_free(evp_cipher_ctx_st*) @nogc nothrow;
    int EVP_CIPHER_CTX_set_key_length(evp_cipher_ctx_st*, int) @nogc nothrow;
    int EVP_CIPHER_CTX_set_padding(evp_cipher_ctx_st*, int) @nogc nothrow;
    int EVP_CIPHER_CTX_ctrl(evp_cipher_ctx_st*, int, int, void*) @nogc nothrow;
    int EVP_CIPHER_CTX_rand_key(evp_cipher_ctx_st*, ubyte*) @nogc nothrow;
    const(bio_method_st)* BIO_f_md() @nogc nothrow;
    const(bio_method_st)* BIO_f_base64() @nogc nothrow;
    const(bio_method_st)* BIO_f_cipher() @nogc nothrow;
    const(bio_method_st)* BIO_f_reliable() @nogc nothrow;
    int BIO_set_cipher(bio_st*, const(evp_cipher_st)*, const(ubyte)*, const(ubyte)*, int) @nogc nothrow;
    const(evp_md_st)* EVP_md_null() @nogc nothrow;
    const(evp_md_st)* EVP_md4() @nogc nothrow;
    const(evp_md_st)* EVP_md5() @nogc nothrow;
    const(evp_md_st)* EVP_md5_sha1() @nogc nothrow;
    const(evp_md_st)* EVP_blake2b512() @nogc nothrow;
    const(evp_md_st)* EVP_blake2s256() @nogc nothrow;
    const(evp_md_st)* EVP_sha1() @nogc nothrow;
    const(evp_md_st)* EVP_sha224() @nogc nothrow;
    const(evp_md_st)* EVP_sha256() @nogc nothrow;
    const(evp_md_st)* EVP_sha384() @nogc nothrow;
    const(evp_md_st)* EVP_sha512() @nogc nothrow;
    const(evp_md_st)* EVP_sha512_224() @nogc nothrow;
    const(evp_md_st)* EVP_sha512_256() @nogc nothrow;
    const(evp_md_st)* EVP_sha3_224() @nogc nothrow;
    const(evp_md_st)* EVP_sha3_256() @nogc nothrow;
    const(evp_md_st)* EVP_sha3_384() @nogc nothrow;
    const(evp_md_st)* EVP_sha3_512() @nogc nothrow;
    const(evp_md_st)* EVP_shake128() @nogc nothrow;
    const(evp_md_st)* EVP_shake256() @nogc nothrow;
    const(evp_md_st)* EVP_mdc2() @nogc nothrow;
    const(evp_md_st)* EVP_ripemd160() @nogc nothrow;
    const(evp_md_st)* EVP_whirlpool() @nogc nothrow;
    const(evp_md_st)* EVP_sm3() @nogc nothrow;
    const(evp_cipher_st)* EVP_enc_null() @nogc nothrow;
    const(evp_cipher_st)* EVP_des_ecb() @nogc nothrow;
    const(evp_cipher_st)* EVP_des_ede() @nogc nothrow;
    const(evp_cipher_st)* EVP_des_ede3() @nogc nothrow;
    const(evp_cipher_st)* EVP_des_ede_ecb() @nogc nothrow;
    const(evp_cipher_st)* EVP_des_ede3_ecb() @nogc nothrow;
    const(evp_cipher_st)* EVP_des_cfb64() @nogc nothrow;
    int X509_NAME_get_index_by_OBJ(X509_name_st*, const(asn1_object_st)*, int) @nogc nothrow;
    const(evp_cipher_st)* EVP_des_cfb1() @nogc nothrow;
    const(evp_cipher_st)* EVP_des_cfb8() @nogc nothrow;
    const(evp_cipher_st)* EVP_des_ede_cfb64() @nogc nothrow;
    int X509_NAME_get_index_by_NID(X509_name_st*, int, int) @nogc nothrow;
    const(evp_cipher_st)* EVP_des_ede3_cfb64() @nogc nothrow;
    int X509_NAME_get_text_by_OBJ(X509_name_st*, const(asn1_object_st)*, char*, int) @nogc nothrow;
    const(evp_cipher_st)* EVP_des_ede3_cfb1() @nogc nothrow;
    const(evp_cipher_st)* EVP_des_ede3_cfb8() @nogc nothrow;
    const(evp_cipher_st)* EVP_des_ofb() @nogc nothrow;
    const(evp_cipher_st)* EVP_des_ede_ofb() @nogc nothrow;
    const(evp_cipher_st)* EVP_des_ede3_ofb() @nogc nothrow;
    const(evp_cipher_st)* EVP_des_cbc() @nogc nothrow;
    const(evp_cipher_st)* EVP_des_ede_cbc() @nogc nothrow;
    const(evp_cipher_st)* EVP_des_ede3_cbc() @nogc nothrow;
    const(evp_cipher_st)* EVP_desx_cbc() @nogc nothrow;
    const(evp_cipher_st)* EVP_des_ede3_wrap() @nogc nothrow;
    const(evp_cipher_st)* EVP_rc4() @nogc nothrow;
    const(evp_cipher_st)* EVP_rc4_40() @nogc nothrow;
    const(evp_cipher_st)* EVP_rc4_hmac_md5() @nogc nothrow;
    const(evp_cipher_st)* EVP_idea_ecb() @nogc nothrow;
    const(evp_cipher_st)* EVP_idea_cfb64() @nogc nothrow;
    int X509_NAME_get_text_by_NID(X509_name_st*, int, char*, int) @nogc nothrow;
    const(evp_cipher_st)* EVP_idea_ofb() @nogc nothrow;
    const(evp_cipher_st)* EVP_idea_cbc() @nogc nothrow;
    const(evp_cipher_st)* EVP_rc2_ecb() @nogc nothrow;
    const(evp_cipher_st)* EVP_rc2_cbc() @nogc nothrow;
    const(evp_cipher_st)* EVP_rc2_40_cbc() @nogc nothrow;
    const(evp_cipher_st)* EVP_rc2_64_cbc() @nogc nothrow;
    const(evp_cipher_st)* EVP_rc2_cfb64() @nogc nothrow;
    int X509_NAME_entry_count(const(X509_name_st)*) @nogc nothrow;
    const(evp_cipher_st)* EVP_rc2_ofb() @nogc nothrow;
    const(evp_cipher_st)* EVP_bf_ecb() @nogc nothrow;
    const(evp_cipher_st)* EVP_bf_cbc() @nogc nothrow;
    const(evp_cipher_st)* EVP_bf_cfb64() @nogc nothrow;
    int X509_REQ_print(bio_st*, X509_req_st*) @nogc nothrow;
    const(evp_cipher_st)* EVP_bf_ofb() @nogc nothrow;
    const(evp_cipher_st)* EVP_cast5_ecb() @nogc nothrow;
    const(evp_cipher_st)* EVP_cast5_cbc() @nogc nothrow;
    const(evp_cipher_st)* EVP_cast5_cfb64() @nogc nothrow;
    int X509_REQ_print_ex(bio_st*, X509_req_st*, c_ulong, c_ulong) @nogc nothrow;
    const(evp_cipher_st)* EVP_cast5_ofb() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_128_ecb() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_128_cbc() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_128_cfb1() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_128_cfb8() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_128_cfb128() @nogc nothrow;
    int X509_CRL_print(bio_st*, X509_crl_st*) @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_128_ofb() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_128_ctr() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_128_ccm() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_128_gcm() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_128_xts() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_128_wrap() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_128_wrap_pad() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_128_ocb() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_192_ecb() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_192_cbc() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_192_cfb1() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_192_cfb8() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_192_cfb128() @nogc nothrow;
    int X509_CRL_print_ex(bio_st*, X509_crl_st*, c_ulong) @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_192_ofb() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_192_ctr() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_192_ccm() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_192_gcm() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_192_wrap() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_192_wrap_pad() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_192_ocb() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_256_ecb() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_256_cbc() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_256_cfb1() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_256_cfb8() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_256_cfb128() @nogc nothrow;
    int X509_ocspid_print(bio_st*, x509_st*) @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_256_ofb() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_256_ctr() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_256_ccm() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_256_gcm() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_256_xts() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_256_wrap() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_256_wrap_pad() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_256_ocb() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_128_cbc_hmac_sha1() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_256_cbc_hmac_sha1() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_128_cbc_hmac_sha256() @nogc nothrow;
    const(evp_cipher_st)* EVP_aes_256_cbc_hmac_sha256() @nogc nothrow;
    const(evp_cipher_st)* EVP_aria_128_ecb() @nogc nothrow;
    const(evp_cipher_st)* EVP_aria_128_cbc() @nogc nothrow;
    const(evp_cipher_st)* EVP_aria_128_cfb1() @nogc nothrow;
    const(evp_cipher_st)* EVP_aria_128_cfb8() @nogc nothrow;
    const(evp_cipher_st)* EVP_aria_128_cfb128() @nogc nothrow;
    int X509_print(bio_st*, x509_st*) @nogc nothrow;
    const(evp_cipher_st)* EVP_aria_128_ctr() @nogc nothrow;
    const(evp_cipher_st)* EVP_aria_128_ofb() @nogc nothrow;
    const(evp_cipher_st)* EVP_aria_128_gcm() @nogc nothrow;
    const(evp_cipher_st)* EVP_aria_128_ccm() @nogc nothrow;
    const(evp_cipher_st)* EVP_aria_192_ecb() @nogc nothrow;
    const(evp_cipher_st)* EVP_aria_192_cbc() @nogc nothrow;
    const(evp_cipher_st)* EVP_aria_192_cfb1() @nogc nothrow;
    const(evp_cipher_st)* EVP_aria_192_cfb8() @nogc nothrow;
    const(evp_cipher_st)* EVP_aria_192_cfb128() @nogc nothrow;
    int X509_print_ex(bio_st*, x509_st*, c_ulong, c_ulong) @nogc nothrow;
    const(evp_cipher_st)* EVP_aria_192_ctr() @nogc nothrow;
    const(evp_cipher_st)* EVP_aria_192_ofb() @nogc nothrow;
    const(evp_cipher_st)* EVP_aria_192_gcm() @nogc nothrow;
    const(evp_cipher_st)* EVP_aria_192_ccm() @nogc nothrow;
    const(evp_cipher_st)* EVP_aria_256_ecb() @nogc nothrow;
    const(evp_cipher_st)* EVP_aria_256_cbc() @nogc nothrow;
    const(evp_cipher_st)* EVP_aria_256_cfb1() @nogc nothrow;
    const(evp_cipher_st)* EVP_aria_256_cfb8() @nogc nothrow;
    const(evp_cipher_st)* EVP_aria_256_cfb128() @nogc nothrow;
    int X509_NAME_print_ex(bio_st*, const(X509_name_st)*, int, c_ulong) @nogc nothrow;
    const(evp_cipher_st)* EVP_aria_256_ctr() @nogc nothrow;
    const(evp_cipher_st)* EVP_aria_256_ofb() @nogc nothrow;
    const(evp_cipher_st)* EVP_aria_256_gcm() @nogc nothrow;
    const(evp_cipher_st)* EVP_aria_256_ccm() @nogc nothrow;
    const(evp_cipher_st)* EVP_camellia_128_ecb() @nogc nothrow;
    const(evp_cipher_st)* EVP_camellia_128_cbc() @nogc nothrow;
    const(evp_cipher_st)* EVP_camellia_128_cfb1() @nogc nothrow;
    const(evp_cipher_st)* EVP_camellia_128_cfb8() @nogc nothrow;
    const(evp_cipher_st)* EVP_camellia_128_cfb128() @nogc nothrow;
    int X509_NAME_print(bio_st*, const(X509_name_st)*, int) @nogc nothrow;
    const(evp_cipher_st)* EVP_camellia_128_ofb() @nogc nothrow;
    const(evp_cipher_st)* EVP_camellia_128_ctr() @nogc nothrow;
    const(evp_cipher_st)* EVP_camellia_192_ecb() @nogc nothrow;
    const(evp_cipher_st)* EVP_camellia_192_cbc() @nogc nothrow;
    const(evp_cipher_st)* EVP_camellia_192_cfb1() @nogc nothrow;
    const(evp_cipher_st)* EVP_camellia_192_cfb8() @nogc nothrow;
    const(evp_cipher_st)* EVP_camellia_192_cfb128() @nogc nothrow;
    int X509_NAME_print_ex_fp(_IO_FILE*, const(X509_name_st)*, int, c_ulong) @nogc nothrow;
    const(evp_cipher_st)* EVP_camellia_192_ofb() @nogc nothrow;
    const(evp_cipher_st)* EVP_camellia_192_ctr() @nogc nothrow;
    const(evp_cipher_st)* EVP_camellia_256_ecb() @nogc nothrow;
    const(evp_cipher_st)* EVP_camellia_256_cbc() @nogc nothrow;
    const(evp_cipher_st)* EVP_camellia_256_cfb1() @nogc nothrow;
    const(evp_cipher_st)* EVP_camellia_256_cfb8() @nogc nothrow;
    const(evp_cipher_st)* EVP_camellia_256_cfb128() @nogc nothrow;
    int X509_REQ_print_fp(_IO_FILE*, X509_req_st*) @nogc nothrow;
    const(evp_cipher_st)* EVP_camellia_256_ofb() @nogc nothrow;
    const(evp_cipher_st)* EVP_camellia_256_ctr() @nogc nothrow;
    const(evp_cipher_st)* EVP_chacha20() @nogc nothrow;
    const(evp_cipher_st)* EVP_chacha20_poly1305() @nogc nothrow;
    const(evp_cipher_st)* EVP_seed_ecb() @nogc nothrow;
    const(evp_cipher_st)* EVP_seed_cbc() @nogc nothrow;
    const(evp_cipher_st)* EVP_seed_cfb128() @nogc nothrow;
    int X509_CRL_print_fp(_IO_FILE*, X509_crl_st*) @nogc nothrow;
    const(evp_cipher_st)* EVP_seed_ofb() @nogc nothrow;
    const(evp_cipher_st)* EVP_sm4_ecb() @nogc nothrow;
    const(evp_cipher_st)* EVP_sm4_cbc() @nogc nothrow;
    const(evp_cipher_st)* EVP_sm4_cfb128() @nogc nothrow;
    int X509_print_fp(_IO_FILE*, x509_st*) @nogc nothrow;
    const(evp_cipher_st)* EVP_sm4_ofb() @nogc nothrow;
    const(evp_cipher_st)* EVP_sm4_ctr() @nogc nothrow;
    int X509_print_ex_fp(_IO_FILE*, x509_st*, c_ulong, c_ulong) @nogc nothrow;
    int X509_aux_print(bio_st*, x509_st*, int) @nogc nothrow;
    int X509_CRL_match(const(X509_crl_st)*, const(X509_crl_st)*) @nogc nothrow;
    int X509_CRL_cmp(const(X509_crl_st)*, const(X509_crl_st)*) @nogc nothrow;
    c_ulong X509_NAME_hash_old(X509_name_st*) @nogc nothrow;
    c_ulong X509_NAME_hash(X509_name_st*) @nogc nothrow;
    int EVP_add_cipher(const(evp_cipher_st)*) @nogc nothrow;
    int EVP_add_digest(const(evp_md_st)*) @nogc nothrow;
    const(evp_cipher_st)* EVP_get_cipherbyname(const(char)*) @nogc nothrow;
    const(evp_md_st)* EVP_get_digestbyname(const(char)*) @nogc nothrow;
    void EVP_CIPHER_do_all(void function(const(evp_cipher_st)*, const(char)*, const(char)*, void*), void*) @nogc nothrow;
    void EVP_CIPHER_do_all_sorted(void function(const(evp_cipher_st)*, const(char)*, const(char)*, void*), void*) @nogc nothrow;
    void EVP_MD_do_all(void function(const(evp_md_st)*, const(char)*, const(char)*, void*), void*) @nogc nothrow;
    void EVP_MD_do_all_sorted(void function(const(evp_md_st)*, const(char)*, const(char)*, void*), void*) @nogc nothrow;
    int EVP_PKEY_decrypt_old(ubyte*, const(ubyte)*, int, evp_pkey_st*) @nogc nothrow;
    int EVP_PKEY_encrypt_old(ubyte*, const(ubyte)*, int, evp_pkey_st*) @nogc nothrow;
    int EVP_PKEY_type(int) @nogc nothrow;
    int EVP_PKEY_id(const(evp_pkey_st)*) @nogc nothrow;
    int EVP_PKEY_base_id(const(evp_pkey_st)*) @nogc nothrow;
    int EVP_PKEY_bits(const(evp_pkey_st)*) @nogc nothrow;
    int EVP_PKEY_security_bits(const(evp_pkey_st)*) @nogc nothrow;
    int EVP_PKEY_size(const(evp_pkey_st)*) @nogc nothrow;
    int EVP_PKEY_set_type(evp_pkey_st*, int) @nogc nothrow;
    int EVP_PKEY_set_type_str(evp_pkey_st*, const(char)*, int) @nogc nothrow;
    int EVP_PKEY_set_alias_type(evp_pkey_st*, int) @nogc nothrow;
    int EVP_PKEY_set1_engine(evp_pkey_st*, engine_st*) @nogc nothrow;
    engine_st* EVP_PKEY_get0_engine(const(evp_pkey_st)*) @nogc nothrow;
    int EVP_PKEY_assign(evp_pkey_st*, int, void*) @nogc nothrow;
    void* EVP_PKEY_get0(const(evp_pkey_st)*) @nogc nothrow;
    const(ubyte)* EVP_PKEY_get0_hmac(const(evp_pkey_st)*, c_ulong*) @nogc nothrow;
    const(ubyte)* EVP_PKEY_get0_poly1305(const(evp_pkey_st)*, c_ulong*) @nogc nothrow;
    const(ubyte)* EVP_PKEY_get0_siphash(const(evp_pkey_st)*, c_ulong*) @nogc nothrow;
    int EVP_PKEY_set1_RSA(evp_pkey_st*, rsa_st*) @nogc nothrow;
    rsa_st* EVP_PKEY_get0_RSA(evp_pkey_st*) @nogc nothrow;
    rsa_st* EVP_PKEY_get1_RSA(evp_pkey_st*) @nogc nothrow;
    int EVP_PKEY_set1_DSA(evp_pkey_st*, dsa_st*) @nogc nothrow;
    dsa_st* EVP_PKEY_get0_DSA(evp_pkey_st*) @nogc nothrow;
    dsa_st* EVP_PKEY_get1_DSA(evp_pkey_st*) @nogc nothrow;
    int EVP_PKEY_set1_DH(evp_pkey_st*, dh_st*) @nogc nothrow;
    dh_st* EVP_PKEY_get0_DH(evp_pkey_st*) @nogc nothrow;
    dh_st* EVP_PKEY_get1_DH(evp_pkey_st*) @nogc nothrow;
    int EVP_PKEY_set1_EC_KEY(evp_pkey_st*, ec_key_st*) @nogc nothrow;
    ec_key_st* EVP_PKEY_get0_EC_KEY(evp_pkey_st*) @nogc nothrow;
    ec_key_st* EVP_PKEY_get1_EC_KEY(evp_pkey_st*) @nogc nothrow;
    evp_pkey_st* EVP_PKEY_new() @nogc nothrow;
    int EVP_PKEY_up_ref(evp_pkey_st*) @nogc nothrow;
    void EVP_PKEY_free(evp_pkey_st*) @nogc nothrow;
    evp_pkey_st* d2i_PublicKey(int, evp_pkey_st**, const(ubyte)**, c_long) @nogc nothrow;
    int i2d_PublicKey(evp_pkey_st*, ubyte**) @nogc nothrow;
    evp_pkey_st* d2i_PrivateKey(int, evp_pkey_st**, const(ubyte)**, c_long) @nogc nothrow;
    evp_pkey_st* d2i_AutoPrivateKey(evp_pkey_st**, const(ubyte)**, c_long) @nogc nothrow;
    int i2d_PrivateKey(evp_pkey_st*, ubyte**) @nogc nothrow;
    int EVP_PKEY_copy_parameters(evp_pkey_st*, const(evp_pkey_st)*) @nogc nothrow;
    int EVP_PKEY_missing_parameters(const(evp_pkey_st)*) @nogc nothrow;
    int EVP_PKEY_save_parameters(evp_pkey_st*, int) @nogc nothrow;
    int EVP_PKEY_cmp_parameters(const(evp_pkey_st)*, const(evp_pkey_st)*) @nogc nothrow;
    int EVP_PKEY_cmp(const(evp_pkey_st)*, const(evp_pkey_st)*) @nogc nothrow;
    int EVP_PKEY_print_public(bio_st*, const(evp_pkey_st)*, int, asn1_pctx_st*) @nogc nothrow;
    int EVP_PKEY_print_private(bio_st*, const(evp_pkey_st)*, int, asn1_pctx_st*) @nogc nothrow;
    int EVP_PKEY_print_params(bio_st*, const(evp_pkey_st)*, int, asn1_pctx_st*) @nogc nothrow;
    int EVP_PKEY_get_default_digest_nid(evp_pkey_st*, int*) @nogc nothrow;
    int EVP_PKEY_set1_tls_encodedpoint(evp_pkey_st*, const(ubyte)*, c_ulong) @nogc nothrow;
    c_ulong EVP_PKEY_get1_tls_encodedpoint(evp_pkey_st*, ubyte**) @nogc nothrow;
    int EVP_CIPHER_type(const(evp_cipher_st)*) @nogc nothrow;
    int EVP_CIPHER_param_to_asn1(evp_cipher_ctx_st*, asn1_type_st*) @nogc nothrow;
    int EVP_CIPHER_asn1_to_param(evp_cipher_ctx_st*, asn1_type_st*) @nogc nothrow;
    int EVP_CIPHER_set_asn1_iv(evp_cipher_ctx_st*, asn1_type_st*) @nogc nothrow;
    int EVP_CIPHER_get_asn1_iv(evp_cipher_ctx_st*, asn1_type_st*) @nogc nothrow;
    int PKCS5_PBE_keyivgen(evp_cipher_ctx_st*, const(char)*, int, asn1_type_st*, const(evp_cipher_st)*, const(evp_md_st)*, int) @nogc nothrow;
    int PKCS5_PBKDF2_HMAC_SHA1(const(char)*, int, const(ubyte)*, int, int, int, ubyte*) @nogc nothrow;
    int PKCS5_PBKDF2_HMAC(const(char)*, int, const(ubyte)*, int, int, const(evp_md_st)*, int, ubyte*) @nogc nothrow;
    int PKCS5_v2_PBE_keyivgen(evp_cipher_ctx_st*, const(char)*, int, asn1_type_st*, const(evp_cipher_st)*, const(evp_md_st)*, int) @nogc nothrow;
    int EVP_PBE_scrypt(const(char)*, c_ulong, const(ubyte)*, c_ulong, c_ulong, c_ulong, c_ulong, c_ulong, ubyte*, c_ulong) @nogc nothrow;
    int PKCS5_v2_scrypt_keyivgen(evp_cipher_ctx_st*, const(char)*, int, asn1_type_st*, const(evp_cipher_st)*, const(evp_md_st)*, int) @nogc nothrow;
    void PKCS5_PBE_add() @nogc nothrow;
    int EVP_PBE_CipherInit(asn1_object_st*, const(char)*, int, asn1_type_st*, evp_cipher_ctx_st*, int) @nogc nothrow;
    int X509_NAME_cmp(const(X509_name_st)*, const(X509_name_st)*) @nogc nothrow;
    int X509_cmp(const(x509_st)*, const(x509_st)*) @nogc nothrow;
    c_ulong X509_subject_name_hash_old(x509_st*) @nogc nothrow;
    int EVP_PBE_alg_add_type(int, int, int, int, int function(evp_cipher_ctx_st*, const(char)*, int, asn1_type_st*, const(evp_cipher_st)*, const(evp_md_st)*, int)) @nogc nothrow;
    int EVP_PBE_alg_add(int, const(evp_cipher_st)*, const(evp_md_st)*, int function(evp_cipher_ctx_st*, const(char)*, int, asn1_type_st*, const(evp_cipher_st)*, const(evp_md_st)*, int)) @nogc nothrow;
    int EVP_PBE_find(int, int, int*, int*, int function(evp_cipher_ctx_st*, const(char)*, int, asn1_type_st*, const(evp_cipher_st)*, const(evp_md_st)*, int)*) @nogc nothrow;
    void EVP_PBE_cleanup() @nogc nothrow;
    int EVP_PBE_get(int*, int*, c_ulong) @nogc nothrow;
    c_ulong X509_issuer_name_hash_old(x509_st*) @nogc nothrow;
    c_ulong X509_subject_name_hash(x509_st*) @nogc nothrow;
    int X509_subject_name_cmp(const(x509_st)*, const(x509_st)*) @nogc nothrow;
    c_ulong X509_issuer_name_hash(x509_st*) @nogc nothrow;
    int X509_issuer_name_cmp(const(x509_st)*, const(x509_st)*) @nogc nothrow;
    c_ulong X509_issuer_and_serial_hash(x509_st*) @nogc nothrow;
    int X509_issuer_and_serial_cmp(const(x509_st)*, const(x509_st)*) @nogc nothrow;
    stack_st_X509* X509_chain_up_ref(stack_st_X509*) @nogc nothrow;
    int X509_CRL_check_suiteb(X509_crl_st*, evp_pkey_st*, c_ulong) @nogc nothrow;
    int EVP_PKEY_asn1_get_count() @nogc nothrow;
    const(evp_pkey_asn1_method_st)* EVP_PKEY_asn1_get0(int) @nogc nothrow;
    const(evp_pkey_asn1_method_st)* EVP_PKEY_asn1_find(engine_st**, int) @nogc nothrow;
    const(evp_pkey_asn1_method_st)* EVP_PKEY_asn1_find_str(engine_st**, const(char)*, int) @nogc nothrow;
    int EVP_PKEY_asn1_add0(const(evp_pkey_asn1_method_st)*) @nogc nothrow;
    int EVP_PKEY_asn1_add_alias(int, int) @nogc nothrow;
    int EVP_PKEY_asn1_get0_info(int*, int*, int*, const(char)**, const(char)**, const(evp_pkey_asn1_method_st)*) @nogc nothrow;
    const(evp_pkey_asn1_method_st)* EVP_PKEY_get0_asn1(const(evp_pkey_st)*) @nogc nothrow;
    evp_pkey_asn1_method_st* EVP_PKEY_asn1_new(int, int, const(char)*, const(char)*) @nogc nothrow;
    void EVP_PKEY_asn1_copy(evp_pkey_asn1_method_st*, const(evp_pkey_asn1_method_st)*) @nogc nothrow;
    void EVP_PKEY_asn1_free(evp_pkey_asn1_method_st*) @nogc nothrow;
    void EVP_PKEY_asn1_set_public(evp_pkey_asn1_method_st*, int function(evp_pkey_st*, X509_pubkey_st*), int function(X509_pubkey_st*, const(evp_pkey_st)*), int function(const(evp_pkey_st)*, const(evp_pkey_st)*), int function(bio_st*, const(evp_pkey_st)*, int, asn1_pctx_st*), int function(const(evp_pkey_st)*), int function(const(evp_pkey_st)*)) @nogc nothrow;
    void EVP_PKEY_asn1_set_private(evp_pkey_asn1_method_st*, int function(evp_pkey_st*, const(pkcs8_priv_key_info_st)*), int function(pkcs8_priv_key_info_st*, const(evp_pkey_st)*), int function(bio_st*, const(evp_pkey_st)*, int, asn1_pctx_st*)) @nogc nothrow;
    void EVP_PKEY_asn1_set_param(evp_pkey_asn1_method_st*, int function(evp_pkey_st*, const(ubyte)**, int), int function(const(evp_pkey_st)*, ubyte**), int function(const(evp_pkey_st)*), int function(evp_pkey_st*, const(evp_pkey_st)*), int function(const(evp_pkey_st)*, const(evp_pkey_st)*), int function(bio_st*, const(evp_pkey_st)*, int, asn1_pctx_st*)) @nogc nothrow;
    void EVP_PKEY_asn1_set_free(evp_pkey_asn1_method_st*, void function(evp_pkey_st*)) @nogc nothrow;
    void EVP_PKEY_asn1_set_ctrl(evp_pkey_asn1_method_st*, int function(evp_pkey_st*, int, c_long, void*)) @nogc nothrow;
    void EVP_PKEY_asn1_set_item(evp_pkey_asn1_method_st*, int function(evp_md_ctx_st*, const(ASN1_ITEM_st)*, void*, X509_algor_st*, asn1_string_st*, evp_pkey_st*), int function(evp_md_ctx_st*, const(ASN1_ITEM_st)*, void*, X509_algor_st*, X509_algor_st*, asn1_string_st*)) @nogc nothrow;
    void EVP_PKEY_asn1_set_siginf(evp_pkey_asn1_method_st*, int function(x509_sig_info_st*, const(X509_algor_st)*, const(asn1_string_st)*)) @nogc nothrow;
    void EVP_PKEY_asn1_set_check(evp_pkey_asn1_method_st*, int function(const(evp_pkey_st)*)) @nogc nothrow;
    void EVP_PKEY_asn1_set_public_check(evp_pkey_asn1_method_st*, int function(const(evp_pkey_st)*)) @nogc nothrow;
    void EVP_PKEY_asn1_set_param_check(evp_pkey_asn1_method_st*, int function(const(evp_pkey_st)*)) @nogc nothrow;
    void EVP_PKEY_asn1_set_set_priv_key(evp_pkey_asn1_method_st*, int function(evp_pkey_st*, const(ubyte)*, c_ulong)) @nogc nothrow;
    void EVP_PKEY_asn1_set_set_pub_key(evp_pkey_asn1_method_st*, int function(evp_pkey_st*, const(ubyte)*, c_ulong)) @nogc nothrow;
    void EVP_PKEY_asn1_set_get_priv_key(evp_pkey_asn1_method_st*, int function(const(evp_pkey_st)*, ubyte*, c_ulong*)) @nogc nothrow;
    void EVP_PKEY_asn1_set_get_pub_key(evp_pkey_asn1_method_st*, int function(const(evp_pkey_st)*, ubyte*, c_ulong*)) @nogc nothrow;
    void EVP_PKEY_asn1_set_security_bits(evp_pkey_asn1_method_st*, int function(const(evp_pkey_st)*)) @nogc nothrow;
    int X509_chain_check_suiteb(int*, x509_st*, stack_st_X509*, c_ulong) @nogc nothrow;
    int X509_check_private_key(const(x509_st)*, const(evp_pkey_st)*) @nogc nothrow;
    int X509_REQ_check_private_key(X509_req_st*, evp_pkey_st*) @nogc nothrow;
    X509_crl_st* X509_CRL_diff(X509_crl_st*, X509_crl_st*, evp_pkey_st*, const(evp_md_st)*, uint) @nogc nothrow;
    const(stack_st_X509_EXTENSION)* X509_REVOKED_get0_extensions(const(x509_revoked_st)*) @nogc nothrow;
    int X509_REVOKED_set_revocationDate(x509_revoked_st*, asn1_string_st*) @nogc nothrow;
    const(asn1_string_st)* X509_REVOKED_get0_revocationDate(const(x509_revoked_st)*) @nogc nothrow;
    int X509_REVOKED_set_serialNumber(x509_revoked_st*, asn1_string_st*) @nogc nothrow;
    const(asn1_string_st)* X509_REVOKED_get0_serialNumber(const(x509_revoked_st)*) @nogc nothrow;
    int i2d_re_X509_CRL_tbs(X509_crl_st*, ubyte**) @nogc nothrow;
    int X509_CRL_get_signature_nid(const(X509_crl_st)*) @nogc nothrow;
    void X509_CRL_get0_signature(const(X509_crl_st)*, const(asn1_string_st)**, const(X509_algor_st)**) @nogc nothrow;
    stack_st_X509_REVOKED* X509_CRL_get_REVOKED(X509_crl_st*) @nogc nothrow;
    const(stack_st_X509_EXTENSION)* X509_CRL_get0_extensions(const(X509_crl_st)*) @nogc nothrow;
    X509_name_st* X509_CRL_get_issuer(const(X509_crl_st)*) @nogc nothrow;
    asn1_string_st* X509_CRL_get_nextUpdate(X509_crl_st*) @nogc nothrow;
    asn1_string_st* X509_CRL_get_lastUpdate(X509_crl_st*) @nogc nothrow;
    const(asn1_string_st)* X509_CRL_get0_nextUpdate(const(X509_crl_st)*) @nogc nothrow;
    const(asn1_string_st)* X509_CRL_get0_lastUpdate(const(X509_crl_st)*) @nogc nothrow;
    c_long X509_CRL_get_version(const(X509_crl_st)*) @nogc nothrow;
    int X509_CRL_up_ref(X509_crl_st*) @nogc nothrow;
    int X509_CRL_sort(X509_crl_st*) @nogc nothrow;
    int X509_CRL_set1_nextUpdate(X509_crl_st*, const(asn1_string_st)*) @nogc nothrow;
    int X509_CRL_set1_lastUpdate(X509_crl_st*, const(asn1_string_st)*) @nogc nothrow;
    int X509_CRL_set_issuer_name(X509_crl_st*, X509_name_st*) @nogc nothrow;
    int X509_CRL_set_version(X509_crl_st*, c_long) @nogc nothrow;
    int X509_REQ_add1_attr_by_txt(X509_req_st*, const(char)*, int, const(ubyte)*, int) @nogc nothrow;
    int X509_REQ_add1_attr_by_NID(X509_req_st*, int, int, const(ubyte)*, int) @nogc nothrow;
    const(evp_pkey_method_st)* EVP_PKEY_meth_find(int) @nogc nothrow;
    evp_pkey_method_st* EVP_PKEY_meth_new(int, int) @nogc nothrow;
    void EVP_PKEY_meth_get0_info(int*, int*, const(evp_pkey_method_st)*) @nogc nothrow;
    void EVP_PKEY_meth_copy(evp_pkey_method_st*, const(evp_pkey_method_st)*) @nogc nothrow;
    void EVP_PKEY_meth_free(evp_pkey_method_st*) @nogc nothrow;
    int EVP_PKEY_meth_add0(const(evp_pkey_method_st)*) @nogc nothrow;
    int EVP_PKEY_meth_remove(const(evp_pkey_method_st)*) @nogc nothrow;
    c_ulong EVP_PKEY_meth_get_count() @nogc nothrow;
    const(evp_pkey_method_st)* EVP_PKEY_meth_get0(c_ulong) @nogc nothrow;
    evp_pkey_ctx_st* EVP_PKEY_CTX_new(evp_pkey_st*, engine_st*) @nogc nothrow;
    evp_pkey_ctx_st* EVP_PKEY_CTX_new_id(int, engine_st*) @nogc nothrow;
    evp_pkey_ctx_st* EVP_PKEY_CTX_dup(evp_pkey_ctx_st*) @nogc nothrow;
    void EVP_PKEY_CTX_free(evp_pkey_ctx_st*) @nogc nothrow;
    int EVP_PKEY_CTX_ctrl(evp_pkey_ctx_st*, int, int, int, int, void*) @nogc nothrow;
    int EVP_PKEY_CTX_ctrl_str(evp_pkey_ctx_st*, const(char)*, const(char)*) @nogc nothrow;
    int EVP_PKEY_CTX_ctrl_uint64(evp_pkey_ctx_st*, int, int, int, c_ulong) @nogc nothrow;
    int EVP_PKEY_CTX_str2ctrl(evp_pkey_ctx_st*, int, const(char)*) @nogc nothrow;
    int EVP_PKEY_CTX_hex2ctrl(evp_pkey_ctx_st*, int, const(char)*) @nogc nothrow;
    int EVP_PKEY_CTX_md(evp_pkey_ctx_st*, int, int, const(char)*) @nogc nothrow;
    int EVP_PKEY_CTX_get_operation(evp_pkey_ctx_st*) @nogc nothrow;
    void EVP_PKEY_CTX_set0_keygen_info(evp_pkey_ctx_st*, int*, int) @nogc nothrow;
    evp_pkey_st* EVP_PKEY_new_mac_key(int, engine_st*, const(ubyte)*, int) @nogc nothrow;
    evp_pkey_st* EVP_PKEY_new_raw_private_key(int, engine_st*, const(ubyte)*, c_ulong) @nogc nothrow;
    evp_pkey_st* EVP_PKEY_new_raw_public_key(int, engine_st*, const(ubyte)*, c_ulong) @nogc nothrow;
    int EVP_PKEY_get_raw_private_key(const(evp_pkey_st)*, ubyte*, c_ulong*) @nogc nothrow;
    int EVP_PKEY_get_raw_public_key(const(evp_pkey_st)*, ubyte*, c_ulong*) @nogc nothrow;
    evp_pkey_st* EVP_PKEY_new_CMAC_key(engine_st*, const(ubyte)*, c_ulong, const(evp_cipher_st)*) @nogc nothrow;
    void EVP_PKEY_CTX_set_data(evp_pkey_ctx_st*, void*) @nogc nothrow;
    void* EVP_PKEY_CTX_get_data(evp_pkey_ctx_st*) @nogc nothrow;
    evp_pkey_st* EVP_PKEY_CTX_get0_pkey(evp_pkey_ctx_st*) @nogc nothrow;
    evp_pkey_st* EVP_PKEY_CTX_get0_peerkey(evp_pkey_ctx_st*) @nogc nothrow;
    void EVP_PKEY_CTX_set_app_data(evp_pkey_ctx_st*, void*) @nogc nothrow;
    void* EVP_PKEY_CTX_get_app_data(evp_pkey_ctx_st*) @nogc nothrow;
    int EVP_PKEY_sign_init(evp_pkey_ctx_st*) @nogc nothrow;
    int EVP_PKEY_sign(evp_pkey_ctx_st*, ubyte*, c_ulong*, const(ubyte)*, c_ulong) @nogc nothrow;
    int EVP_PKEY_verify_init(evp_pkey_ctx_st*) @nogc nothrow;
    int EVP_PKEY_verify(evp_pkey_ctx_st*, const(ubyte)*, c_ulong, const(ubyte)*, c_ulong) @nogc nothrow;
    int EVP_PKEY_verify_recover_init(evp_pkey_ctx_st*) @nogc nothrow;
    int EVP_PKEY_verify_recover(evp_pkey_ctx_st*, ubyte*, c_ulong*, const(ubyte)*, c_ulong) @nogc nothrow;
    int EVP_PKEY_encrypt_init(evp_pkey_ctx_st*) @nogc nothrow;
    int EVP_PKEY_encrypt(evp_pkey_ctx_st*, ubyte*, c_ulong*, const(ubyte)*, c_ulong) @nogc nothrow;
    int EVP_PKEY_decrypt_init(evp_pkey_ctx_st*) @nogc nothrow;
    int EVP_PKEY_decrypt(evp_pkey_ctx_st*, ubyte*, c_ulong*, const(ubyte)*, c_ulong) @nogc nothrow;
    int EVP_PKEY_derive_init(evp_pkey_ctx_st*) @nogc nothrow;
    int EVP_PKEY_derive_set_peer(evp_pkey_ctx_st*, evp_pkey_st*) @nogc nothrow;
    int EVP_PKEY_derive(evp_pkey_ctx_st*, ubyte*, c_ulong*) @nogc nothrow;
    alias EVP_PKEY_gen_cb = int function(evp_pkey_ctx_st*);
    int EVP_PKEY_paramgen_init(evp_pkey_ctx_st*) @nogc nothrow;
    int EVP_PKEY_paramgen(evp_pkey_ctx_st*, evp_pkey_st**) @nogc nothrow;
    int EVP_PKEY_keygen_init(evp_pkey_ctx_st*) @nogc nothrow;
    int EVP_PKEY_keygen(evp_pkey_ctx_st*, evp_pkey_st**) @nogc nothrow;
    int EVP_PKEY_check(evp_pkey_ctx_st*) @nogc nothrow;
    int EVP_PKEY_public_check(evp_pkey_ctx_st*) @nogc nothrow;
    int EVP_PKEY_param_check(evp_pkey_ctx_st*) @nogc nothrow;
    void EVP_PKEY_CTX_set_cb(evp_pkey_ctx_st*, int function(evp_pkey_ctx_st*)) @nogc nothrow;
    int function(evp_pkey_ctx_st*) EVP_PKEY_CTX_get_cb(evp_pkey_ctx_st*) @nogc nothrow;
    int EVP_PKEY_CTX_get_keygen_info(evp_pkey_ctx_st*, int) @nogc nothrow;
    void EVP_PKEY_meth_set_init(evp_pkey_method_st*, int function(evp_pkey_ctx_st*)) @nogc nothrow;
    void EVP_PKEY_meth_set_copy(evp_pkey_method_st*, int function(evp_pkey_ctx_st*, evp_pkey_ctx_st*)) @nogc nothrow;
    void EVP_PKEY_meth_set_cleanup(evp_pkey_method_st*, void function(evp_pkey_ctx_st*)) @nogc nothrow;
    void EVP_PKEY_meth_set_paramgen(evp_pkey_method_st*, int function(evp_pkey_ctx_st*), int function(evp_pkey_ctx_st*, evp_pkey_st*)) @nogc nothrow;
    void EVP_PKEY_meth_set_keygen(evp_pkey_method_st*, int function(evp_pkey_ctx_st*), int function(evp_pkey_ctx_st*, evp_pkey_st*)) @nogc nothrow;
    void EVP_PKEY_meth_set_sign(evp_pkey_method_st*, int function(evp_pkey_ctx_st*), int function(evp_pkey_ctx_st*, ubyte*, c_ulong*, const(ubyte)*, c_ulong)) @nogc nothrow;
    void EVP_PKEY_meth_set_verify(evp_pkey_method_st*, int function(evp_pkey_ctx_st*), int function(evp_pkey_ctx_st*, const(ubyte)*, c_ulong, const(ubyte)*, c_ulong)) @nogc nothrow;
    void EVP_PKEY_meth_set_verify_recover(evp_pkey_method_st*, int function(evp_pkey_ctx_st*), int function(evp_pkey_ctx_st*, ubyte*, c_ulong*, const(ubyte)*, c_ulong)) @nogc nothrow;
    void EVP_PKEY_meth_set_signctx(evp_pkey_method_st*, int function(evp_pkey_ctx_st*, evp_md_ctx_st*), int function(evp_pkey_ctx_st*, ubyte*, c_ulong*, evp_md_ctx_st*)) @nogc nothrow;
    void EVP_PKEY_meth_set_verifyctx(evp_pkey_method_st*, int function(evp_pkey_ctx_st*, evp_md_ctx_st*), int function(evp_pkey_ctx_st*, const(ubyte)*, int, evp_md_ctx_st*)) @nogc nothrow;
    void EVP_PKEY_meth_set_encrypt(evp_pkey_method_st*, int function(evp_pkey_ctx_st*), int function(evp_pkey_ctx_st*, ubyte*, c_ulong*, const(ubyte)*, c_ulong)) @nogc nothrow;
    void EVP_PKEY_meth_set_decrypt(evp_pkey_method_st*, int function(evp_pkey_ctx_st*), int function(evp_pkey_ctx_st*, ubyte*, c_ulong*, const(ubyte)*, c_ulong)) @nogc nothrow;
    void EVP_PKEY_meth_set_derive(evp_pkey_method_st*, int function(evp_pkey_ctx_st*), int function(evp_pkey_ctx_st*, ubyte*, c_ulong*)) @nogc nothrow;
    void EVP_PKEY_meth_set_ctrl(evp_pkey_method_st*, int function(evp_pkey_ctx_st*, int, int, void*), int function(evp_pkey_ctx_st*, const(char)*, const(char)*)) @nogc nothrow;
    void EVP_PKEY_meth_set_digestsign(evp_pkey_method_st*, int function(evp_md_ctx_st*, ubyte*, c_ulong*, const(ubyte)*, c_ulong)) @nogc nothrow;
    void EVP_PKEY_meth_set_digestverify(evp_pkey_method_st*, int function(evp_md_ctx_st*, const(ubyte)*, c_ulong, const(ubyte)*, c_ulong)) @nogc nothrow;
    void EVP_PKEY_meth_set_check(evp_pkey_method_st*, int function(evp_pkey_st*)) @nogc nothrow;
    void EVP_PKEY_meth_set_public_check(evp_pkey_method_st*, int function(evp_pkey_st*)) @nogc nothrow;
    void EVP_PKEY_meth_set_param_check(evp_pkey_method_st*, int function(evp_pkey_st*)) @nogc nothrow;
    void EVP_PKEY_meth_set_digest_custom(evp_pkey_method_st*, int function(evp_pkey_ctx_st*, evp_md_ctx_st*)) @nogc nothrow;
    void EVP_PKEY_meth_get_init(const(evp_pkey_method_st)*, int function(evp_pkey_ctx_st*)*) @nogc nothrow;
    void EVP_PKEY_meth_get_copy(const(evp_pkey_method_st)*, int function(evp_pkey_ctx_st*, evp_pkey_ctx_st*)*) @nogc nothrow;
    void EVP_PKEY_meth_get_cleanup(const(evp_pkey_method_st)*, void function(evp_pkey_ctx_st*)*) @nogc nothrow;
    void EVP_PKEY_meth_get_paramgen(const(evp_pkey_method_st)*, int function(evp_pkey_ctx_st*)*, int function(evp_pkey_ctx_st*, evp_pkey_st*)*) @nogc nothrow;
    void EVP_PKEY_meth_get_keygen(const(evp_pkey_method_st)*, int function(evp_pkey_ctx_st*)*, int function(evp_pkey_ctx_st*, evp_pkey_st*)*) @nogc nothrow;
    void EVP_PKEY_meth_get_sign(const(evp_pkey_method_st)*, int function(evp_pkey_ctx_st*)*, int function(evp_pkey_ctx_st*, ubyte*, c_ulong*, const(ubyte)*, c_ulong)*) @nogc nothrow;
    void EVP_PKEY_meth_get_verify(const(evp_pkey_method_st)*, int function(evp_pkey_ctx_st*)*, int function(evp_pkey_ctx_st*, const(ubyte)*, c_ulong, const(ubyte)*, c_ulong)*) @nogc nothrow;
    void EVP_PKEY_meth_get_verify_recover(const(evp_pkey_method_st)*, int function(evp_pkey_ctx_st*)*, int function(evp_pkey_ctx_st*, ubyte*, c_ulong*, const(ubyte)*, c_ulong)*) @nogc nothrow;
    void EVP_PKEY_meth_get_signctx(const(evp_pkey_method_st)*, int function(evp_pkey_ctx_st*, evp_md_ctx_st*)*, int function(evp_pkey_ctx_st*, ubyte*, c_ulong*, evp_md_ctx_st*)*) @nogc nothrow;
    void EVP_PKEY_meth_get_verifyctx(const(evp_pkey_method_st)*, int function(evp_pkey_ctx_st*, evp_md_ctx_st*)*, int function(evp_pkey_ctx_st*, const(ubyte)*, int, evp_md_ctx_st*)*) @nogc nothrow;
    void EVP_PKEY_meth_get_encrypt(const(evp_pkey_method_st)*, int function(evp_pkey_ctx_st*)*, int function(evp_pkey_ctx_st*, ubyte*, c_ulong*, const(ubyte)*, c_ulong)*) @nogc nothrow;
    void EVP_PKEY_meth_get_decrypt(const(evp_pkey_method_st)*, int function(evp_pkey_ctx_st*)*, int function(evp_pkey_ctx_st*, ubyte*, c_ulong*, const(ubyte)*, c_ulong)*) @nogc nothrow;
    void EVP_PKEY_meth_get_derive(const(evp_pkey_method_st)*, int function(evp_pkey_ctx_st*)*, int function(evp_pkey_ctx_st*, ubyte*, c_ulong*)*) @nogc nothrow;
    void EVP_PKEY_meth_get_ctrl(const(evp_pkey_method_st)*, int function(evp_pkey_ctx_st*, int, int, void*)*, int function(evp_pkey_ctx_st*, const(char)*, const(char)*)*) @nogc nothrow;
    void EVP_PKEY_meth_get_digestsign(evp_pkey_method_st*, int function(evp_md_ctx_st*, ubyte*, c_ulong*, const(ubyte)*, c_ulong)*) @nogc nothrow;
    void EVP_PKEY_meth_get_digestverify(evp_pkey_method_st*, int function(evp_md_ctx_st*, const(ubyte)*, c_ulong, const(ubyte)*, c_ulong)*) @nogc nothrow;
    void EVP_PKEY_meth_get_check(const(evp_pkey_method_st)*, int function(evp_pkey_st*)*) @nogc nothrow;
    void EVP_PKEY_meth_get_public_check(const(evp_pkey_method_st)*, int function(evp_pkey_st*)*) @nogc nothrow;
    void EVP_PKEY_meth_get_param_check(const(evp_pkey_method_st)*, int function(evp_pkey_st*)*) @nogc nothrow;
    void EVP_PKEY_meth_get_digest_custom(evp_pkey_method_st*, int function(evp_pkey_ctx_st*, evp_md_ctx_st*)*) @nogc nothrow;
    void EVP_add_alg_module() @nogc nothrow;
    int X509_REQ_add1_attr_by_OBJ(X509_req_st*, const(asn1_object_st)*, int, const(ubyte)*, int) @nogc nothrow;
    int ERR_load_EVP_strings() @nogc nothrow;
    int X509_REQ_add1_attr(X509_req_st*, x509_attributes_st*) @nogc nothrow;
    x509_attributes_st* X509_REQ_delete_attr(X509_req_st*, int) @nogc nothrow;
    x509_attributes_st* X509_REQ_get_attr(const(X509_req_st)*, int) @nogc nothrow;
    int X509_REQ_get_attr_by_OBJ(const(X509_req_st)*, const(asn1_object_st)*, int) @nogc nothrow;
    int X509_REQ_get_attr_by_NID(const(X509_req_st)*, int, int) @nogc nothrow;
    int X509_REQ_get_attr_count(const(X509_req_st)*) @nogc nothrow;
    int X509_REQ_add_extensions(X509_req_st*, stack_st_X509_EXTENSION*) @nogc nothrow;
    int X509_REQ_add_extensions_nid(X509_req_st*, stack_st_X509_EXTENSION*, int) @nogc nothrow;
    stack_st_X509_EXTENSION* X509_REQ_get_extensions(X509_req_st*) @nogc nothrow;
    void X509_REQ_set_extension_nids(int*) @nogc nothrow;
    int* X509_REQ_get_extension_nids() @nogc nothrow;
    int X509_REQ_extension_nid(int) @nogc nothrow;
    X509_pubkey_st* X509_REQ_get_X509_PUBKEY(X509_req_st*) @nogc nothrow;
    evp_pkey_st* X509_REQ_get0_pubkey(X509_req_st*) @nogc nothrow;
    evp_pkey_st* X509_REQ_get_pubkey(X509_req_st*) @nogc nothrow;
    int X509_REQ_set_pubkey(X509_req_st*, evp_pkey_st*) @nogc nothrow;
    int i2d_re_X509_REQ_tbs(X509_req_st*, ubyte**) @nogc nothrow;
    int X509_REQ_get_signature_nid(const(X509_req_st)*) @nogc nothrow;
    int X509_REQ_set1_signature_algo(X509_req_st*, X509_algor_st*) @nogc nothrow;
    void X509_REQ_set0_signature(X509_req_st*, asn1_string_st*) @nogc nothrow;
    void X509_REQ_get0_signature(const(X509_req_st)*, const(asn1_string_st)**, const(X509_algor_st)**) @nogc nothrow;
    int X509_REQ_set_subject_name(X509_req_st*, X509_name_st*) @nogc nothrow;
    X509_name_st* X509_REQ_get_subject_name(const(X509_req_st)*) @nogc nothrow;
    int X509_REQ_set_version(X509_req_st*, c_long) @nogc nothrow;
    c_long X509_REQ_get_version(const(X509_req_st)*) @nogc nothrow;
    int X509_certificate_type(const(x509_st)*, const(evp_pkey_st)*) @nogc nothrow;
    asn1_string_st* X509_get0_pubkey_bitstr(const(x509_st)*) @nogc nothrow;
    evp_pkey_st* X509_get_pubkey(x509_st*) @nogc nothrow;
    evp_pkey_st* X509_get0_pubkey(const(x509_st)*) @nogc nothrow;
    const(X509_algor_st)* X509_get0_tbs_sigalg(const(x509_st)*) @nogc nothrow;
    void X509_get0_uids(const(x509_st)*, const(asn1_string_st)**, const(asn1_string_st)**) @nogc nothrow;
    const(stack_st_X509_EXTENSION)* X509_get0_extensions(const(x509_st)*) @nogc nothrow;
    X509_pubkey_st* X509_get_X509_PUBKEY(const(x509_st)*) @nogc nothrow;
    int X509_get_signature_type(const(x509_st)*) @nogc nothrow;
    int X509_up_ref(x509_st*) @nogc nothrow;
    int X509_set_pubkey(x509_st*, evp_pkey_st*) @nogc nothrow;
    int X509_set1_notAfter(x509_st*, const(asn1_string_st)*) @nogc nothrow;
    asn1_string_st* X509_getm_notAfter(const(x509_st)*) @nogc nothrow;
    const(asn1_string_st)* X509_get0_notAfter(const(x509_st)*) @nogc nothrow;
    int X509_set1_notBefore(x509_st*, const(asn1_string_st)*) @nogc nothrow;
    asn1_string_st* X509_getm_notBefore(const(x509_st)*) @nogc nothrow;
    const(asn1_string_st)* X509_get0_notBefore(const(x509_st)*) @nogc nothrow;
    X509_name_st* X509_get_subject_name(const(x509_st)*) @nogc nothrow;
    int X509_set_subject_name(x509_st*, X509_name_st*) @nogc nothrow;
    X509_name_st* X509_get_issuer_name(const(x509_st)*) @nogc nothrow;
    int X509_set_issuer_name(x509_st*, X509_name_st*) @nogc nothrow;
    const(asn1_string_st)* X509_get0_serialNumber(const(x509_st)*) @nogc nothrow;
    asn1_string_st* X509_get_serialNumber(x509_st*) @nogc nothrow;
    int X509_set_serialNumber(x509_st*, asn1_string_st*) @nogc nothrow;
    int X509_set_version(x509_st*, c_long) @nogc nothrow;
    c_long X509_get_version(const(x509_st)*) @nogc nothrow;
    int ASN1_item_sign_ctx(const(ASN1_ITEM_st)*, X509_algor_st*, X509_algor_st*, asn1_string_st*, void*, evp_md_ctx_st*) @nogc nothrow;
    int ASN1_item_sign(const(ASN1_ITEM_st)*, X509_algor_st*, X509_algor_st*, asn1_string_st*, void*, evp_pkey_st*, const(evp_md_st)*) @nogc nothrow;
    int ASN1_item_verify(const(ASN1_ITEM_st)*, X509_algor_st*, asn1_string_st*, void*, evp_pkey_st*) @nogc nothrow;
    int ASN1_item_digest(const(ASN1_ITEM_st)*, const(evp_md_st)*, void*, ubyte*, uint*) @nogc nothrow;
    int ASN1_sign(int function(void*, ubyte**), X509_algor_st*, X509_algor_st*, asn1_string_st*, char*, evp_pkey_st*, const(evp_md_st)*) @nogc nothrow;
    int ASN1_digest(int function(void*, ubyte**), const(evp_md_st)*, char*, ubyte*, uint*) @nogc nothrow;
    int ASN1_verify(int function(void*, ubyte**), X509_algor_st*, asn1_string_st*, char*, evp_pkey_st*) @nogc nothrow;
    char* X509_NAME_oneline(const(X509_name_st)*, char*, int) @nogc nothrow;
    void X509_INFO_free(X509_info_st*) @nogc nothrow;
    X509_info_st* X509_INFO_new() @nogc nothrow;
    Netscape_certificate_sequence* NETSCAPE_CERT_SEQUENCE_new() @nogc nothrow;
    Netscape_certificate_sequence* d2i_NETSCAPE_CERT_SEQUENCE(Netscape_certificate_sequence**, const(ubyte)**, c_long) @nogc nothrow;
    int i2d_NETSCAPE_CERT_SEQUENCE(Netscape_certificate_sequence*, ubyte**) @nogc nothrow;
    void NETSCAPE_CERT_SEQUENCE_free(Netscape_certificate_sequence*) @nogc nothrow;
    Netscape_spkac_st* NETSCAPE_SPKAC_new() @nogc nothrow;
    Netscape_spkac_st* d2i_NETSCAPE_SPKAC(Netscape_spkac_st**, const(ubyte)**, c_long) @nogc nothrow;
    int i2d_NETSCAPE_SPKAC(Netscape_spkac_st*, ubyte**) @nogc nothrow;
    void NETSCAPE_SPKAC_free(Netscape_spkac_st*) @nogc nothrow;
    Netscape_spki_st* NETSCAPE_SPKI_new() @nogc nothrow;
    Netscape_spki_st* d2i_NETSCAPE_SPKI(Netscape_spki_st**, const(ubyte)**, c_long) @nogc nothrow;
    void NETSCAPE_SPKI_free(Netscape_spki_st*) @nogc nothrow;
    int i2d_NETSCAPE_SPKI(Netscape_spki_st*, ubyte**) @nogc nothrow;
    void X509_PKEY_free(private_key_st*) @nogc nothrow;
    private_key_st* X509_PKEY_new() @nogc nothrow;
    int X509_CRL_get0_by_cert(X509_crl_st*, x509_revoked_st**, x509_st*) @nogc nothrow;
    int X509_CRL_get0_by_serial(X509_crl_st*, x509_revoked_st**, asn1_string_st*) @nogc nothrow;
    int X509_CRL_add0_revoked(X509_crl_st*, x509_revoked_st*) @nogc nothrow;
    X509_crl_st* d2i_X509_CRL(X509_crl_st**, const(ubyte)**, c_long) @nogc nothrow;
    X509_crl_st* X509_CRL_new() @nogc nothrow;
    void X509_CRL_free(X509_crl_st*) @nogc nothrow;
    int i2d_X509_CRL(X509_crl_st*, ubyte**) @nogc nothrow;
    X509_crl_info_st* X509_CRL_INFO_new() @nogc nothrow;
    X509_crl_info_st* d2i_X509_CRL_INFO(X509_crl_info_st**, const(ubyte)**, c_long) @nogc nothrow;
    void X509_CRL_INFO_free(X509_crl_info_st*) @nogc nothrow;
    int i2d_X509_CRL_INFO(X509_crl_info_st*, ubyte**) @nogc nothrow;
    x509_revoked_st* X509_REVOKED_new() @nogc nothrow;
    x509_revoked_st* d2i_X509_REVOKED(x509_revoked_st**, const(ubyte)**, c_long) @nogc nothrow;
    void X509_REVOKED_free(x509_revoked_st*) @nogc nothrow;
    int i2d_X509_REVOKED(x509_revoked_st*, ubyte**) @nogc nothrow;
    stack_st_ASN1_OBJECT* X509_get0_reject_objects(x509_st*) @nogc nothrow;
    stack_st_ASN1_OBJECT* X509_get0_trust_objects(x509_st*) @nogc nothrow;
    void X509_reject_clear(x509_st*) @nogc nothrow;
    void X509_trust_clear(x509_st*) @nogc nothrow;
    int X509_add1_reject_object(x509_st*, const(asn1_object_st)*) @nogc nothrow;
    int X509_add1_trust_object(x509_st*, const(asn1_object_st)*) @nogc nothrow;
    int X509_TRUST_set(int*, int) @nogc nothrow;
    int function(int, x509_st*, int) X509_TRUST_set_default(int function(int, x509_st*, int)) @nogc nothrow;
    ubyte* X509_keyid_get0(x509_st*, int*) @nogc nothrow;
    ubyte* X509_alias_get0(x509_st*, int*) @nogc nothrow;
    int X509_keyid_set1(x509_st*, const(ubyte)*, int) @nogc nothrow;
    int X509_alias_set1(x509_st*, const(ubyte)*, int) @nogc nothrow;
    int X509_trusted(const(x509_st)*) @nogc nothrow;
    int X509_get_signature_nid(const(x509_st)*) @nogc nothrow;
    void X509_get0_signature(const(asn1_string_st)**, const(X509_algor_st)**, const(x509_st)*) @nogc nothrow;
    int X509_get_signature_info(x509_st*, int*, int*, int*, uint*) @nogc nothrow;
    void X509_SIG_INFO_set(x509_sig_info_st*, int, int, int, uint) @nogc nothrow;
    int X509_SIG_INFO_get(const(x509_sig_info_st)*, int*, int*, int*, uint*) @nogc nothrow;
    int i2d_re_X509_tbs(x509_st*, ubyte**) @nogc nothrow;
    x509_st* d2i_X509_AUX(x509_st**, const(ubyte)**, c_long) @nogc nothrow;
    int i2d_X509_AUX(x509_st*, ubyte**) @nogc nothrow;
    void* X509_get_ex_data(x509_st*, int) @nogc nothrow;
    int X509_set_ex_data(x509_st*, int, void*) @nogc nothrow;
    x509_cert_aux_st* d2i_X509_CERT_AUX(x509_cert_aux_st**, const(ubyte)**, c_long) @nogc nothrow;
    x509_cert_aux_st* X509_CERT_AUX_new() @nogc nothrow;
    void X509_CERT_AUX_free(x509_cert_aux_st*) @nogc nothrow;
    int i2d_X509_CERT_AUX(x509_cert_aux_st*, ubyte**) @nogc nothrow;
    x509_st* d2i_X509(x509_st**, const(ubyte)**, c_long) @nogc nothrow;
    x509_st* X509_new() @nogc nothrow;
    int i2d_X509(x509_st*, ubyte**) @nogc nothrow;
    void X509_free(x509_st*) @nogc nothrow;
    x509_cinf_st* d2i_X509_CINF(x509_cinf_st**, const(ubyte)**, c_long) @nogc nothrow;
    x509_cinf_st* X509_CINF_new() @nogc nothrow;
    int i2d_X509_CINF(x509_cinf_st*, ubyte**) @nogc nothrow;
    void X509_CINF_free(x509_cinf_st*) @nogc nothrow;
    int X509_NAME_set(X509_name_st**, X509_name_st*) @nogc nothrow;
    X509_name_st* d2i_X509_NAME(X509_name_st**, const(ubyte)**, c_long) @nogc nothrow;
    X509_name_st* X509_NAME_new() @nogc nothrow;
    int i2d_X509_NAME(X509_name_st*, ubyte**) @nogc nothrow;
    void X509_NAME_free(X509_name_st*) @nogc nothrow;
    X509_name_entry_st* d2i_X509_NAME_ENTRY(X509_name_entry_st**, const(ubyte)**, c_long) @nogc nothrow;
    X509_name_entry_st* X509_NAME_ENTRY_new() @nogc nothrow;
    int i2d_X509_NAME_ENTRY(X509_name_entry_st*, ubyte**) @nogc nothrow;
    void X509_NAME_ENTRY_free(X509_name_entry_st*) @nogc nothrow;
    stack_st_X509_EXTENSION* d2i_X509_EXTENSIONS(stack_st_X509_EXTENSION**, const(ubyte)**, c_long) @nogc nothrow;
    int i2d_X509_EXTENSIONS(stack_st_X509_EXTENSION*, ubyte**) @nogc nothrow;
    X509_extension_st* X509_EXTENSION_new() @nogc nothrow;
    X509_extension_st* d2i_X509_EXTENSION(X509_extension_st**, const(ubyte)**, c_long) @nogc nothrow;
    void X509_EXTENSION_free(X509_extension_st*) @nogc nothrow;
    int i2d_X509_EXTENSION(X509_extension_st*, ubyte**) @nogc nothrow;
    x509_attributes_st* X509_ATTRIBUTE_create(int, int, void*) @nogc nothrow;
    x509_attributes_st* d2i_X509_ATTRIBUTE(x509_attributes_st**, const(ubyte)**, c_long) @nogc nothrow;
    x509_attributes_st* X509_ATTRIBUTE_new() @nogc nothrow;
    alias OPENSSL_LH_NODE = lhash_node_st;
    struct lhash_node_st;
    alias OPENSSL_LH_COMPFUNC = int function(const(void)*, const(void)*);
    alias OPENSSL_LH_HASHFUNC = c_ulong function(const(void)*);
    alias OPENSSL_LH_DOALL_FUNC = void function(void*);
    alias OPENSSL_LH_DOALL_FUNCARG = void function(void*, void*);
    alias OPENSSL_LHASH = lhash_st;
    struct lhash_st;
    int i2d_X509_ATTRIBUTE(x509_attributes_st*, ubyte**) @nogc nothrow;
    void X509_ATTRIBUTE_free(x509_attributes_st*) @nogc nothrow;
    X509_req_st* d2i_X509_REQ(X509_req_st**, const(ubyte)**, c_long) @nogc nothrow;
    X509_req_st* X509_REQ_new() @nogc nothrow;
    int i2d_X509_REQ(X509_req_st*, ubyte**) @nogc nothrow;
    void X509_REQ_free(X509_req_st*) @nogc nothrow;
    int OPENSSL_LH_error(lhash_st*) @nogc nothrow;
    lhash_st* OPENSSL_LH_new(c_ulong function(const(void)*), int function(const(void)*, const(void)*)) @nogc nothrow;
    void OPENSSL_LH_free(lhash_st*) @nogc nothrow;
    void* OPENSSL_LH_insert(lhash_st*, void*) @nogc nothrow;
    void* OPENSSL_LH_delete(lhash_st*, const(void)*) @nogc nothrow;
    void* OPENSSL_LH_retrieve(lhash_st*, const(void)*) @nogc nothrow;
    void OPENSSL_LH_doall(lhash_st*, void function(void*)) @nogc nothrow;
    void OPENSSL_LH_doall_arg(lhash_st*, void function(void*, void*), void*) @nogc nothrow;
    c_ulong OPENSSL_LH_strhash(const(char)*) @nogc nothrow;
    c_ulong OPENSSL_LH_num_items(const(lhash_st)*) @nogc nothrow;
    c_ulong OPENSSL_LH_get_down_load(const(lhash_st)*) @nogc nothrow;
    void OPENSSL_LH_set_down_load(lhash_st*, c_ulong) @nogc nothrow;
    void OPENSSL_LH_stats(const(lhash_st)*, _IO_FILE*) @nogc nothrow;
    void OPENSSL_LH_node_stats(const(lhash_st)*, _IO_FILE*) @nogc nothrow;
    void OPENSSL_LH_node_usage_stats(const(lhash_st)*, _IO_FILE*) @nogc nothrow;
    void OPENSSL_LH_stats_bio(const(lhash_st)*, bio_st*) @nogc nothrow;
    void OPENSSL_LH_node_stats_bio(const(lhash_st)*, bio_st*) @nogc nothrow;
    void OPENSSL_LH_node_usage_stats_bio(const(lhash_st)*, bio_st*) @nogc nothrow;
    X509_req_info_st* d2i_X509_REQ_INFO(X509_req_info_st**, const(ubyte)**, c_long) @nogc nothrow;
    X509_req_info_st* X509_REQ_INFO_new() @nogc nothrow;
    int i2d_X509_REQ_INFO(X509_req_info_st*, ubyte**) @nogc nothrow;
    void X509_REQ_INFO_free(X509_req_info_st*) @nogc nothrow;
    void X509_SIG_getm(X509_sig_st*, X509_algor_st**, asn1_string_st**) @nogc nothrow;
    void X509_SIG_get0(const(X509_sig_st)*, const(X509_algor_st)**, const(asn1_string_st)**) @nogc nothrow;
    X509_sig_st* d2i_X509_SIG(X509_sig_st**, const(ubyte)**, c_long) @nogc nothrow;
    X509_sig_st* X509_SIG_new() @nogc nothrow;
    int i2d_X509_SIG(X509_sig_st*, ubyte**) @nogc nothrow;
    void X509_SIG_free(X509_sig_st*) @nogc nothrow;
    ec_key_st* d2i_EC_PUBKEY(ec_key_st**, const(ubyte)**, c_long) @nogc nothrow;
    int i2d_EC_PUBKEY(ec_key_st*, ubyte**) @nogc nothrow;
    dsa_st* d2i_DSA_PUBKEY(dsa_st**, const(ubyte)**, c_long) @nogc nothrow;
    int i2d_DSA_PUBKEY(dsa_st*, ubyte**) @nogc nothrow;
    rsa_st* d2i_RSA_PUBKEY(rsa_st**, const(ubyte)**, c_long) @nogc nothrow;
    int i2d_RSA_PUBKEY(rsa_st*, ubyte**) @nogc nothrow;
    evp_pkey_st* d2i_PUBKEY(evp_pkey_st**, const(ubyte)**, c_long) @nogc nothrow;
    int i2d_PUBKEY(evp_pkey_st*, ubyte**) @nogc nothrow;
    c_long X509_get_pathlen(x509_st*) @nogc nothrow;
    static void lh_OPENSSL_STRING_stats_bio(const(lhash_st_OPENSSL_STRING)*, bio_st*) @nogc nothrow;
    struct lhash_st_OPENSSL_STRING;
    static void lh_OPENSSL_STRING_doall(lhash_st_OPENSSL_STRING*, void function(char**)) @nogc nothrow;
    static void lh_OPENSSL_STRING_set_down_load(lhash_st_OPENSSL_STRING*, c_ulong) @nogc nothrow;
    static lhash_st_OPENSSL_STRING* lh_OPENSSL_STRING_new(c_ulong function(const(char*)*), int function(const(char*)*, const(char*)*)) @nogc nothrow;
    static void lh_OPENSSL_STRING_free(lhash_st_OPENSSL_STRING*) @nogc nothrow;
    static char** lh_OPENSSL_STRING_insert(lhash_st_OPENSSL_STRING*, char**) @nogc nothrow;
    static char** lh_OPENSSL_STRING_delete(lhash_st_OPENSSL_STRING*, const(char*)*) @nogc nothrow;
    static char** lh_OPENSSL_STRING_retrieve(lhash_st_OPENSSL_STRING*, const(char*)*) @nogc nothrow;
    static int lh_OPENSSL_STRING_error(lhash_st_OPENSSL_STRING*) @nogc nothrow;
    static c_ulong lh_OPENSSL_STRING_num_items(lhash_st_OPENSSL_STRING*) @nogc nothrow;
    static void lh_OPENSSL_STRING_node_stats_bio(const(lhash_st_OPENSSL_STRING)*, bio_st*) @nogc nothrow;
    static void lh_OPENSSL_STRING_node_usage_stats_bio(const(lhash_st_OPENSSL_STRING)*, bio_st*) @nogc nothrow;
    static c_ulong lh_OPENSSL_STRING_get_down_load(lhash_st_OPENSSL_STRING*) @nogc nothrow;
    struct lhash_st_OPENSSL_CSTRING;
    static void lh_OPENSSL_CSTRING_doall(lhash_st_OPENSSL_CSTRING*, void function(const(char)**)) @nogc nothrow;
    static void lh_OPENSSL_CSTRING_set_down_load(lhash_st_OPENSSL_CSTRING*, c_ulong) @nogc nothrow;
    static c_ulong lh_OPENSSL_CSTRING_get_down_load(lhash_st_OPENSSL_CSTRING*) @nogc nothrow;
    static void lh_OPENSSL_CSTRING_stats_bio(const(lhash_st_OPENSSL_CSTRING)*, bio_st*) @nogc nothrow;
    static void lh_OPENSSL_CSTRING_node_usage_stats_bio(const(lhash_st_OPENSSL_CSTRING)*, bio_st*) @nogc nothrow;
    static void lh_OPENSSL_CSTRING_node_stats_bio(const(lhash_st_OPENSSL_CSTRING)*, bio_st*) @nogc nothrow;
    static lhash_st_OPENSSL_CSTRING* lh_OPENSSL_CSTRING_new(c_ulong function(const(const(char)*)*), int function(const(const(char)*)*, const(const(char)*)*)) @nogc nothrow;
    static void lh_OPENSSL_CSTRING_free(lhash_st_OPENSSL_CSTRING*) @nogc nothrow;
    static const(char)** lh_OPENSSL_CSTRING_insert(lhash_st_OPENSSL_CSTRING*, const(char)**) @nogc nothrow;
    static c_ulong lh_OPENSSL_CSTRING_num_items(lhash_st_OPENSSL_CSTRING*) @nogc nothrow;
    static const(char)** lh_OPENSSL_CSTRING_delete(lhash_st_OPENSSL_CSTRING*, const(const(char)*)*) @nogc nothrow;
    static const(char)** lh_OPENSSL_CSTRING_retrieve(lhash_st_OPENSSL_CSTRING*, const(const(char)*)*) @nogc nothrow;
    static int lh_OPENSSL_CSTRING_error(lhash_st_OPENSSL_CSTRING*) @nogc nothrow;
    int X509_get_pubkey_parameters(evp_pkey_st*, stack_st_X509*) @nogc nothrow;
    evp_pkey_st* X509_PUBKEY_get(X509_pubkey_st*) @nogc nothrow;
    evp_pkey_st* X509_PUBKEY_get0(X509_pubkey_st*) @nogc nothrow;
    int X509_PUBKEY_set(X509_pubkey_st**, evp_pkey_st*) @nogc nothrow;
    X509_pubkey_st* d2i_X509_PUBKEY(X509_pubkey_st**, const(ubyte)**, c_long) @nogc nothrow;
    X509_pubkey_st* X509_PUBKEY_new() @nogc nothrow;
    void X509_PUBKEY_free(X509_pubkey_st*) @nogc nothrow;
    int i2d_X509_PUBKEY(X509_pubkey_st*, ubyte**) @nogc nothrow;
    X509_val_st* d2i_X509_VAL(X509_val_st**, const(ubyte)**, c_long) @nogc nothrow;
    X509_val_st* X509_VAL_new() @nogc nothrow;
    int i2d_X509_VAL(X509_val_st*, ubyte**) @nogc nothrow;
    void X509_VAL_free(X509_val_st*) @nogc nothrow;
    stack_st_X509_ALGOR* d2i_X509_ALGORS(stack_st_X509_ALGOR**, const(ubyte)**, c_long) @nogc nothrow;
    int i2d_X509_ALGORS(stack_st_X509_ALGOR*, ubyte**) @nogc nothrow;
    X509_algor_st* d2i_X509_ALGOR(X509_algor_st**, const(ubyte)**, c_long) @nogc nothrow;
    X509_algor_st* X509_ALGOR_new() @nogc nothrow;
    void X509_ALGOR_free(X509_algor_st*) @nogc nothrow;
    int i2d_X509_ALGOR(X509_algor_st*, ubyte**) @nogc nothrow;
    x509_st* X509_REQ_to_X509(X509_req_st*, int, evp_pkey_st*) @nogc nothrow;
    X509_req_st* X509_to_X509_REQ(x509_st*, evp_pkey_st*, const(evp_md_st)*) @nogc nothrow;
    const(char)* X509_get_default_private_dir() @nogc nothrow;
    const(char)* X509_get_default_cert_file_env() @nogc nothrow;
    const(char)* X509_get_default_cert_dir_env() @nogc nothrow;
    const(char)* X509_get_default_cert_file() @nogc nothrow;
    const(char)* X509_get_default_cert_dir() @nogc nothrow;
    const(char)* X509_get_default_cert_area() @nogc nothrow;
    asn1_string_st* X509_gmtime_adj(asn1_string_st*, c_long) @nogc nothrow;
    asn1_string_st* X509_time_adj_ex(asn1_string_st*, int, c_long, c_long*) @nogc nothrow;
    asn1_string_st* X509_time_adj(asn1_string_st*, c_long, c_long*) @nogc nothrow;
    int X509_cmp_current_time(const(asn1_string_st)*) @nogc nothrow;
    int X509_cmp_time(const(asn1_string_st)*, c_long*) @nogc nothrow;
    X509_name_entry_st* X509_NAME_ENTRY_dup(X509_name_entry_st*) @nogc nothrow;
    X509_name_st* X509_NAME_dup(X509_name_st*) @nogc nothrow;
    int X509_ALGOR_copy(X509_algor_st*, const(X509_algor_st)*) @nogc nothrow;
    int X509_ALGOR_cmp(const(X509_algor_st)*, const(X509_algor_st)*) @nogc nothrow;
    void X509_ALGOR_set_md(X509_algor_st*, const(evp_md_st)*) @nogc nothrow;
    void X509_ALGOR_get0(const(asn1_object_st)**, int*, const(void)**, const(X509_algor_st)*) @nogc nothrow;
    int X509_ALGOR_set0(X509_algor_st*, asn1_object_st*, int, void*) @nogc nothrow;
    X509_algor_st* X509_ALGOR_dup(X509_algor_st*) @nogc nothrow;
    X509_req_st* X509_REQ_dup(X509_req_st*) @nogc nothrow;
    x509_revoked_st* X509_REVOKED_dup(x509_revoked_st*) @nogc nothrow;
    X509_crl_st* X509_CRL_dup(X509_crl_st*) @nogc nothrow;
    X509_extension_st* X509_EXTENSION_dup(X509_extension_st*) @nogc nothrow;
    x509_attributes_st* X509_ATTRIBUTE_dup(x509_attributes_st*) @nogc nothrow;
    x509_st* X509_dup(x509_st*) @nogc nothrow;
    evp_pkey_st* d2i_PUBKEY_bio(bio_st*, evp_pkey_st**) @nogc nothrow;
    int i2d_PUBKEY_bio(bio_st*, evp_pkey_st*) @nogc nothrow;
    evp_pkey_st* d2i_PrivateKey_bio(bio_st*, evp_pkey_st**) @nogc nothrow;
    int i2d_PrivateKey_bio(bio_st*, evp_pkey_st*) @nogc nothrow;
    int i2d_PKCS8PrivateKeyInfo_bio(bio_st*, evp_pkey_st*) @nogc nothrow;
    int i2d_PKCS8_PRIV_KEY_INFO_bio(bio_st*, pkcs8_priv_key_info_st*) @nogc nothrow;
    pkcs8_priv_key_info_st* d2i_PKCS8_PRIV_KEY_INFO_bio(bio_st*, pkcs8_priv_key_info_st**) @nogc nothrow;
    int i2d_PKCS8_bio(bio_st*, X509_sig_st*) @nogc nothrow;
    X509_sig_st* d2i_PKCS8_bio(bio_st*, X509_sig_st**) @nogc nothrow;
    int i2d_ECPrivateKey_bio(bio_st*, ec_key_st*) @nogc nothrow;
    ec_key_st* d2i_ECPrivateKey_bio(bio_st*, ec_key_st**) @nogc nothrow;
    int i2d_EC_PUBKEY_bio(bio_st*, ec_key_st*) @nogc nothrow;
    ec_key_st* d2i_EC_PUBKEY_bio(bio_st*, ec_key_st**) @nogc nothrow;
    int i2d_DSAPrivateKey_bio(bio_st*, dsa_st*) @nogc nothrow;
    dsa_st* d2i_DSAPrivateKey_bio(bio_st*, dsa_st**) @nogc nothrow;
    int i2d_DSA_PUBKEY_bio(bio_st*, dsa_st*) @nogc nothrow;
    dsa_st* d2i_DSA_PUBKEY_bio(bio_st*, dsa_st**) @nogc nothrow;
    int i2d_RSA_PUBKEY_bio(bio_st*, rsa_st*) @nogc nothrow;
    rsa_st* d2i_RSA_PUBKEY_bio(bio_st*, rsa_st**) @nogc nothrow;
    int i2d_RSAPublicKey_bio(bio_st*, rsa_st*) @nogc nothrow;
    rsa_st* d2i_RSAPublicKey_bio(bio_st*, rsa_st**) @nogc nothrow;
    int i2d_RSAPrivateKey_bio(bio_st*, rsa_st*) @nogc nothrow;
    rsa_st* d2i_RSAPrivateKey_bio(bio_st*, rsa_st**) @nogc nothrow;
    int i2d_X509_REQ_bio(bio_st*, X509_req_st*) @nogc nothrow;
    X509_req_st* d2i_X509_REQ_bio(bio_st*, X509_req_st**) @nogc nothrow;
    int i2d_X509_CRL_bio(bio_st*, X509_crl_st*) @nogc nothrow;
    X509_crl_st* d2i_X509_CRL_bio(bio_st*, X509_crl_st**) @nogc nothrow;
    int i2d_X509_bio(bio_st*, x509_st*) @nogc nothrow;
    x509_st* d2i_X509_bio(bio_st*, x509_st**) @nogc nothrow;
    evp_pkey_st* d2i_PUBKEY_fp(_IO_FILE*, evp_pkey_st**) @nogc nothrow;
    int i2d_PUBKEY_fp(_IO_FILE*, evp_pkey_st*) @nogc nothrow;
    evp_pkey_st* d2i_PrivateKey_fp(_IO_FILE*, evp_pkey_st**) @nogc nothrow;
    int i2d_PrivateKey_fp(_IO_FILE*, evp_pkey_st*) @nogc nothrow;
    int i2d_PKCS8PrivateKeyInfo_fp(_IO_FILE*, evp_pkey_st*) @nogc nothrow;
    int i2d_PKCS8_PRIV_KEY_INFO_fp(_IO_FILE*, pkcs8_priv_key_info_st*) @nogc nothrow;
    pkcs8_priv_key_info_st* d2i_PKCS8_PRIV_KEY_INFO_fp(_IO_FILE*, pkcs8_priv_key_info_st**) @nogc nothrow;
    int i2d_PKCS8_fp(_IO_FILE*, X509_sig_st*) @nogc nothrow;
    X509_sig_st* d2i_PKCS8_fp(_IO_FILE*, X509_sig_st**) @nogc nothrow;
    int i2d_ECPrivateKey_fp(_IO_FILE*, ec_key_st*) @nogc nothrow;
    ec_key_st* d2i_ECPrivateKey_fp(_IO_FILE*, ec_key_st**) @nogc nothrow;
    int i2d_EC_PUBKEY_fp(_IO_FILE*, ec_key_st*) @nogc nothrow;
    ec_key_st* d2i_EC_PUBKEY_fp(_IO_FILE*, ec_key_st**) @nogc nothrow;
    int i2d_DSAPrivateKey_fp(_IO_FILE*, dsa_st*) @nogc nothrow;
    dsa_st* d2i_DSAPrivateKey_fp(_IO_FILE*, dsa_st**) @nogc nothrow;
    int i2d_DSA_PUBKEY_fp(_IO_FILE*, dsa_st*) @nogc nothrow;
    dsa_st* d2i_DSA_PUBKEY_fp(_IO_FILE*, dsa_st**) @nogc nothrow;
    int i2d_RSA_PUBKEY_fp(_IO_FILE*, rsa_st*) @nogc nothrow;
    rsa_st* d2i_RSA_PUBKEY_fp(_IO_FILE*, rsa_st**) @nogc nothrow;
    int i2d_RSAPublicKey_fp(_IO_FILE*, rsa_st*) @nogc nothrow;
    rsa_st* d2i_RSAPublicKey_fp(_IO_FILE*, rsa_st**) @nogc nothrow;
    int i2d_RSAPrivateKey_fp(_IO_FILE*, rsa_st*) @nogc nothrow;
    rsa_st* d2i_RSAPrivateKey_fp(_IO_FILE*, rsa_st**) @nogc nothrow;
    int i2d_X509_REQ_fp(_IO_FILE*, X509_req_st*) @nogc nothrow;
    X509_req_st* d2i_X509_REQ_fp(_IO_FILE*, X509_req_st**) @nogc nothrow;
    int i2d_X509_CRL_fp(_IO_FILE*, X509_crl_st*) @nogc nothrow;
    X509_crl_st* d2i_X509_CRL_fp(_IO_FILE*, X509_crl_st**) @nogc nothrow;
    int i2d_X509_fp(_IO_FILE*, x509_st*) @nogc nothrow;
    x509_st* d2i_X509_fp(_IO_FILE*, x509_st**) @nogc nothrow;
    int X509_NAME_digest(const(X509_name_st)*, const(evp_md_st)*, ubyte*, uint*) @nogc nothrow;
    int X509_REQ_digest(const(X509_req_st)*, const(evp_md_st)*, ubyte*, uint*) @nogc nothrow;
    int X509_CRL_digest(const(X509_crl_st)*, const(evp_md_st)*, ubyte*, uint*) @nogc nothrow;
    int X509_digest(const(x509_st)*, const(evp_md_st)*, ubyte*, uint*) @nogc nothrow;
    int X509_pubkey_digest(const(x509_st)*, const(evp_md_st)*, ubyte*, uint*) @nogc nothrow;
    int NETSCAPE_SPKI_sign(Netscape_spki_st*, evp_pkey_st*, const(evp_md_st)*) @nogc nothrow;
    int X509_CRL_http_nbio(ocsp_req_ctx_st*, X509_crl_st**) @nogc nothrow;
    int X509_CRL_sign_ctx(X509_crl_st*, evp_md_ctx_st*) @nogc nothrow;
    int X509_CRL_sign(X509_crl_st*, evp_pkey_st*, const(evp_md_st)*) @nogc nothrow;
    int X509_REQ_sign_ctx(X509_req_st*, evp_md_ctx_st*) @nogc nothrow;
    int X509_REQ_sign(X509_req_st*, evp_pkey_st*, const(evp_md_st)*) @nogc nothrow;
    int X509_http_nbio(ocsp_req_ctx_st*, x509_st**) @nogc nothrow;
    int X509_sign_ctx(x509_st*, evp_md_ctx_st*) @nogc nothrow;
    int X509_sign(x509_st*, evp_pkey_st*, const(evp_md_st)*) @nogc nothrow;
    int X509_signature_print(bio_st*, const(X509_algor_st)*, const(asn1_string_st)*) @nogc nothrow;
    int X509_signature_dump(bio_st*, const(asn1_string_st)*, int) @nogc nothrow;
    int NETSCAPE_SPKI_print(bio_st*, Netscape_spki_st*) @nogc nothrow;
    int NETSCAPE_SPKI_set_pubkey(Netscape_spki_st*, evp_pkey_st*) @nogc nothrow;
    evp_pkey_st* NETSCAPE_SPKI_get_pubkey(Netscape_spki_st*) @nogc nothrow;
    char* NETSCAPE_SPKI_b64_encode(Netscape_spki_st*) @nogc nothrow;
    Netscape_spki_st* NETSCAPE_SPKI_b64_decode(const(char)*, int) @nogc nothrow;
    int NETSCAPE_SPKI_verify(Netscape_spki_st*, evp_pkey_st*) @nogc nothrow;
    int X509_CRL_verify(X509_crl_st*, evp_pkey_st*) @nogc nothrow;
    int X509_REQ_verify(X509_req_st*, evp_pkey_st*) @nogc nothrow;
    int X509_verify(x509_st*, evp_pkey_st*) @nogc nothrow;
    const(char)* X509_verify_cert_error_string(c_long) @nogc nothrow;
    void* X509_CRL_get_meth_data(X509_crl_st*) @nogc nothrow;
    void X509_CRL_set_meth_data(X509_crl_st*, void*) @nogc nothrow;
    void X509_CRL_METHOD_free(x509_crl_method_st*) @nogc nothrow;
    x509_crl_method_st* X509_CRL_METHOD_new(int function(X509_crl_st*), int function(X509_crl_st*), int function(X509_crl_st*, x509_revoked_st**, asn1_string_st*, X509_name_st*), int function(X509_crl_st*, evp_pkey_st*)) @nogc nothrow;
    void X509_CRL_set_default_method(const(x509_crl_method_st)*) @nogc nothrow;
    struct SCRYPT_PARAMS_st
    {
        asn1_string_st* salt;
        asn1_string_st* costParameter;
        asn1_string_st* blockSize;
        asn1_string_st* parallelizationParameter;
        asn1_string_st* keyLength;
    }
    alias SCRYPT_PARAMS = SCRYPT_PARAMS_st;
    struct PBKDF2PARAM_st
    {
        asn1_type_st* salt;
        asn1_string_st* iter;
        asn1_string_st* keylength;
        X509_algor_st* prf;
    }
    alias PBKDF2PARAM = PBKDF2PARAM_st;
    struct PBE2PARAM_st
    {
        X509_algor_st* keyfunc;
        X509_algor_st* encryption;
    }
    alias PBE2PARAM = PBE2PARAM_st;
    struct PBEPARAM_st
    {
        asn1_string_st* salt;
        asn1_string_st* iter;
    }
    alias PBEPARAM = PBEPARAM_st;
    struct Netscape_certificate_sequence
    {
        asn1_object_st* type;
        stack_st_X509* certs;
    }
    alias NETSCAPE_CERT_SEQUENCE = Netscape_certificate_sequence;
    struct Netscape_spki_st
    {
        Netscape_spkac_st* spkac;
        X509_algor_st sig_algor;
        asn1_string_st* signature;
    }
    alias NETSCAPE_SPKI = Netscape_spki_st;
    struct Netscape_spkac_st
    {
        X509_pubkey_st* pubkey;
        asn1_string_st* challenge;
    }
    alias NETSCAPE_SPKAC = Netscape_spkac_st;
    static int sk_X509_INFO_find_ex(stack_st_X509_INFO*, X509_info_st*) @nogc nothrow;
    static X509_info_st* sk_X509_INFO_pop(stack_st_X509_INFO*) @nogc nothrow;
    static int sk_X509_INFO_unshift(stack_st_X509_INFO*, X509_info_st*) @nogc nothrow;
    static int sk_X509_INFO_push(stack_st_X509_INFO*, X509_info_st*) @nogc nothrow;
    static X509_info_st* sk_X509_INFO_delete_ptr(stack_st_X509_INFO*, X509_info_st*) @nogc nothrow;
    static X509_info_st* sk_X509_INFO_delete(stack_st_X509_INFO*, int) @nogc nothrow;
    static void sk_X509_INFO_zero(stack_st_X509_INFO*) @nogc nothrow;
    static void sk_X509_INFO_free(stack_st_X509_INFO*) @nogc nothrow;
    static int sk_X509_INFO_reserve(stack_st_X509_INFO*, int) @nogc nothrow;
    static stack_st_X509_INFO* sk_X509_INFO_new_reserve(int function(const(const(X509_info_st)*)*, const(const(X509_info_st)*)*), int) @nogc nothrow;
    static stack_st_X509_INFO* sk_X509_INFO_new_null() @nogc nothrow;
    static stack_st_X509_INFO* sk_X509_INFO_new(int function(const(const(X509_info_st)*)*, const(const(X509_info_st)*)*)) @nogc nothrow;
    static X509_info_st* sk_X509_INFO_value(const(stack_st_X509_INFO)*, int) @nogc nothrow;
    static int sk_X509_INFO_num(const(stack_st_X509_INFO)*) @nogc nothrow;
    alias sk_X509_INFO_copyfunc = X509_info_st* function(const(X509_info_st)*);
    alias sk_X509_INFO_freefunc = void function(X509_info_st*);
    alias sk_X509_INFO_compfunc = int function(const(const(X509_info_st)*)*, const(const(X509_info_st)*)*);
    struct stack_st_X509_INFO;
    static void sk_X509_INFO_sort(stack_st_X509_INFO*) @nogc nothrow;
    static int function(const(const(X509_info_st)*)*, const(const(X509_info_st)*)*) sk_X509_INFO_set_cmp_func(stack_st_X509_INFO*, int function(const(const(X509_info_st)*)*, const(const(X509_info_st)*)*)) @nogc nothrow;
    static stack_st_X509_INFO* sk_X509_INFO_deep_copy(const(stack_st_X509_INFO)*, X509_info_st* function(const(X509_info_st)*), void function(X509_info_st*)) @nogc nothrow;
    static int sk_X509_INFO_is_sorted(const(stack_st_X509_INFO)*) @nogc nothrow;
    static int sk_X509_INFO_insert(stack_st_X509_INFO*, X509_info_st*, int) @nogc nothrow;
    static X509_info_st* sk_X509_INFO_set(stack_st_X509_INFO*, int, X509_info_st*) @nogc nothrow;
    static X509_info_st* sk_X509_INFO_shift(stack_st_X509_INFO*) @nogc nothrow;
    static stack_st_X509_INFO* sk_X509_INFO_dup(const(stack_st_X509_INFO)*) @nogc nothrow;
    static void sk_X509_INFO_pop_free(stack_st_X509_INFO*, void function(X509_info_st*)) @nogc nothrow;
    static int sk_X509_INFO_find(stack_st_X509_INFO*, X509_info_st*) @nogc nothrow;
    struct X509_info_st
    {
        x509_st* x509;
        X509_crl_st* crl;
        private_key_st* x_pkey;
        evp_cipher_info_st enc_cipher;
        int enc_len;
        char* enc_data;
    }
    alias X509_INFO = X509_info_st;
    struct private_key_st
    {
        int version_;
        X509_algor_st* enc_algor;
        asn1_string_st* enc_pkey;
        evp_pkey_st* dec_pkey;
        int key_length;
        char* key_data;
        int key_free;
        evp_cipher_info_st cipher;
    }
    alias X509_PKEY = private_key_st;
    static stack_st_X509_CRL* sk_X509_CRL_new(int function(const(const(X509_crl_st)*)*, const(const(X509_crl_st)*)*)) @nogc nothrow;
    static X509_crl_st* sk_X509_CRL_value(const(stack_st_X509_CRL)*, int) @nogc nothrow;
    static int sk_X509_CRL_num(const(stack_st_X509_CRL)*) @nogc nothrow;
    alias sk_X509_CRL_copyfunc = X509_crl_st* function(const(X509_crl_st)*);
    static stack_st_X509_CRL* sk_X509_CRL_new_null() @nogc nothrow;
    alias sk_X509_CRL_compfunc = int function(const(const(X509_crl_st)*)*, const(const(X509_crl_st)*)*);
    struct stack_st_X509_CRL;
    alias sk_X509_CRL_freefunc = void function(X509_crl_st*);
    static stack_st_X509_CRL* sk_X509_CRL_new_reserve(int function(const(const(X509_crl_st)*)*, const(const(X509_crl_st)*)*), int) @nogc nothrow;
    static stack_st_X509_CRL* sk_X509_CRL_deep_copy(const(stack_st_X509_CRL)*, X509_crl_st* function(const(X509_crl_st)*), void function(X509_crl_st*)) @nogc nothrow;
    static stack_st_X509_CRL* sk_X509_CRL_dup(const(stack_st_X509_CRL)*) @nogc nothrow;
    static int sk_X509_CRL_is_sorted(const(stack_st_X509_CRL)*) @nogc nothrow;
    static void sk_X509_CRL_sort(stack_st_X509_CRL*) @nogc nothrow;
    static int sk_X509_CRL_find_ex(stack_st_X509_CRL*, X509_crl_st*) @nogc nothrow;
    static int sk_X509_CRL_find(stack_st_X509_CRL*, X509_crl_st*) @nogc nothrow;
    static X509_crl_st* sk_X509_CRL_set(stack_st_X509_CRL*, int, X509_crl_st*) @nogc nothrow;
    static int sk_X509_CRL_insert(stack_st_X509_CRL*, X509_crl_st*, int) @nogc nothrow;
    static void sk_X509_CRL_pop_free(stack_st_X509_CRL*, void function(X509_crl_st*)) @nogc nothrow;
    static X509_crl_st* sk_X509_CRL_shift(stack_st_X509_CRL*) @nogc nothrow;
    static X509_crl_st* sk_X509_CRL_pop(stack_st_X509_CRL*) @nogc nothrow;
    static int function(const(const(X509_crl_st)*)*, const(const(X509_crl_st)*)*) sk_X509_CRL_set_cmp_func(stack_st_X509_CRL*, int function(const(const(X509_crl_st)*)*, const(const(X509_crl_st)*)*)) @nogc nothrow;
    static int sk_X509_CRL_reserve(stack_st_X509_CRL*, int) @nogc nothrow;
    static void sk_X509_CRL_free(stack_st_X509_CRL*) @nogc nothrow;
    static void sk_X509_CRL_zero(stack_st_X509_CRL*) @nogc nothrow;
    static X509_crl_st* sk_X509_CRL_delete(stack_st_X509_CRL*, int) @nogc nothrow;
    static X509_crl_st* sk_X509_CRL_delete_ptr(stack_st_X509_CRL*, X509_crl_st*) @nogc nothrow;
    static int sk_X509_CRL_push(stack_st_X509_CRL*, X509_crl_st*) @nogc nothrow;
    static int sk_X509_CRL_unshift(stack_st_X509_CRL*, X509_crl_st*) @nogc nothrow;
    struct X509_crl_info_st;
    alias X509_CRL_INFO = X509_crl_info_st;
    static void sk_X509_REVOKED_zero(stack_st_X509_REVOKED*) @nogc nothrow;
    static x509_revoked_st* sk_X509_REVOKED_value(const(stack_st_X509_REVOKED)*, int) @nogc nothrow;
    static int function(const(const(x509_revoked_st)*)*, const(const(x509_revoked_st)*)*) sk_X509_REVOKED_set_cmp_func(stack_st_X509_REVOKED*, int function(const(const(x509_revoked_st)*)*, const(const(x509_revoked_st)*)*)) @nogc nothrow;
    static stack_st_X509_REVOKED* sk_X509_REVOKED_deep_copy(const(stack_st_X509_REVOKED)*, x509_revoked_st* function(const(x509_revoked_st)*), void function(x509_revoked_st*)) @nogc nothrow;
    struct stack_st_X509_REVOKED;
    alias sk_X509_REVOKED_compfunc = int function(const(const(x509_revoked_st)*)*, const(const(x509_revoked_st)*)*);
    alias sk_X509_REVOKED_freefunc = void function(x509_revoked_st*);
    alias sk_X509_REVOKED_copyfunc = x509_revoked_st* function(const(x509_revoked_st)*);
    static int sk_X509_REVOKED_is_sorted(const(stack_st_X509_REVOKED)*) @nogc nothrow;
    static int sk_X509_REVOKED_num(const(stack_st_X509_REVOKED)*) @nogc nothrow;
    static stack_st_X509_REVOKED* sk_X509_REVOKED_new(int function(const(const(x509_revoked_st)*)*, const(const(x509_revoked_st)*)*)) @nogc nothrow;
    static stack_st_X509_REVOKED* sk_X509_REVOKED_new_null() @nogc nothrow;
    static stack_st_X509_REVOKED* sk_X509_REVOKED_new_reserve(int function(const(const(x509_revoked_st)*)*, const(const(x509_revoked_st)*)*), int) @nogc nothrow;
    static int sk_X509_REVOKED_reserve(stack_st_X509_REVOKED*, int) @nogc nothrow;
    static void sk_X509_REVOKED_free(stack_st_X509_REVOKED*) @nogc nothrow;
    static stack_st_X509_REVOKED* sk_X509_REVOKED_dup(const(stack_st_X509_REVOKED)*) @nogc nothrow;
    static x509_revoked_st* sk_X509_REVOKED_delete(stack_st_X509_REVOKED*, int) @nogc nothrow;
    static x509_revoked_st* sk_X509_REVOKED_delete_ptr(stack_st_X509_REVOKED*, x509_revoked_st*) @nogc nothrow;
    static int sk_X509_REVOKED_push(stack_st_X509_REVOKED*, x509_revoked_st*) @nogc nothrow;
    static int sk_X509_REVOKED_unshift(stack_st_X509_REVOKED*, x509_revoked_st*) @nogc nothrow;
    static x509_revoked_st* sk_X509_REVOKED_pop(stack_st_X509_REVOKED*) @nogc nothrow;
    static x509_revoked_st* sk_X509_REVOKED_shift(stack_st_X509_REVOKED*) @nogc nothrow;
    static void sk_X509_REVOKED_pop_free(stack_st_X509_REVOKED*, void function(x509_revoked_st*)) @nogc nothrow;
    static int sk_X509_REVOKED_insert(stack_st_X509_REVOKED*, x509_revoked_st*, int) @nogc nothrow;
    static x509_revoked_st* sk_X509_REVOKED_set(stack_st_X509_REVOKED*, int, x509_revoked_st*) @nogc nothrow;
    static int sk_X509_REVOKED_find(stack_st_X509_REVOKED*, x509_revoked_st*) @nogc nothrow;
    static int sk_X509_REVOKED_find_ex(stack_st_X509_REVOKED*, x509_revoked_st*) @nogc nothrow;
    static void sk_X509_REVOKED_sort(stack_st_X509_REVOKED*) @nogc nothrow;
    static int sk_X509_TRUST_find_ex(stack_st_X509_TRUST*, x509_trust_st*) @nogc nothrow;
    static int sk_X509_TRUST_insert(stack_st_X509_TRUST*, x509_trust_st*, int) @nogc nothrow;
    struct stack_st_X509_TRUST;
    alias sk_X509_TRUST_compfunc = int function(const(const(x509_trust_st)*)*, const(const(x509_trust_st)*)*);
    alias sk_X509_TRUST_freefunc = void function(x509_trust_st*);
    alias sk_X509_TRUST_copyfunc = x509_trust_st* function(const(x509_trust_st)*);
    static int sk_X509_TRUST_num(const(stack_st_X509_TRUST)*) @nogc nothrow;
    static x509_trust_st* sk_X509_TRUST_value(const(stack_st_X509_TRUST)*, int) @nogc nothrow;
    static stack_st_X509_TRUST* sk_X509_TRUST_new(int function(const(const(x509_trust_st)*)*, const(const(x509_trust_st)*)*)) @nogc nothrow;
    static stack_st_X509_TRUST* sk_X509_TRUST_new_null() @nogc nothrow;
    static stack_st_X509_TRUST* sk_X509_TRUST_new_reserve(int function(const(const(x509_trust_st)*)*, const(const(x509_trust_st)*)*), int) @nogc nothrow;
    static int sk_X509_TRUST_reserve(stack_st_X509_TRUST*, int) @nogc nothrow;
    static void sk_X509_TRUST_free(stack_st_X509_TRUST*) @nogc nothrow;
    static void sk_X509_TRUST_zero(stack_st_X509_TRUST*) @nogc nothrow;
    static x509_trust_st* sk_X509_TRUST_delete(stack_st_X509_TRUST*, int) @nogc nothrow;
    static x509_trust_st* sk_X509_TRUST_delete_ptr(stack_st_X509_TRUST*, x509_trust_st*) @nogc nothrow;
    static int sk_X509_TRUST_push(stack_st_X509_TRUST*, x509_trust_st*) @nogc nothrow;
    static int sk_X509_TRUST_unshift(stack_st_X509_TRUST*, x509_trust_st*) @nogc nothrow;
    static x509_trust_st* sk_X509_TRUST_pop(stack_st_X509_TRUST*) @nogc nothrow;
    static x509_trust_st* sk_X509_TRUST_shift(stack_st_X509_TRUST*) @nogc nothrow;
    static void sk_X509_TRUST_pop_free(stack_st_X509_TRUST*, void function(x509_trust_st*)) @nogc nothrow;
    static x509_trust_st* sk_X509_TRUST_set(stack_st_X509_TRUST*, int, x509_trust_st*) @nogc nothrow;
    static int sk_X509_TRUST_find(stack_st_X509_TRUST*, x509_trust_st*) @nogc nothrow;
    static void sk_X509_TRUST_sort(stack_st_X509_TRUST*) @nogc nothrow;
    static int sk_X509_TRUST_is_sorted(const(stack_st_X509_TRUST)*) @nogc nothrow;
    static stack_st_X509_TRUST* sk_X509_TRUST_dup(const(stack_st_X509_TRUST)*) @nogc nothrow;
    static stack_st_X509_TRUST* sk_X509_TRUST_deep_copy(const(stack_st_X509_TRUST)*, x509_trust_st* function(const(x509_trust_st)*), void function(x509_trust_st*)) @nogc nothrow;
    static int function(const(const(x509_trust_st)*)*, const(const(x509_trust_st)*)*) sk_X509_TRUST_set_cmp_func(stack_st_X509_TRUST*, int function(const(const(x509_trust_st)*)*, const(const(x509_trust_st)*)*)) @nogc nothrow;
    struct x509_trust_st
    {
        int trust;
        int flags;
        int function(x509_trust_st*, x509_st*, int) check_trust;
        char* name;
        int arg1;
        void* arg2;
    }
    alias X509_TRUST = x509_trust_st;
    static int sk_X509_is_sorted(const(stack_st_X509)*) @nogc nothrow;
    static int sk_X509_insert(stack_st_X509*, x509_st*, int) @nogc nothrow;
    static int function(const(const(x509_st)*)*, const(const(x509_st)*)*) sk_X509_set_cmp_func(stack_st_X509*, int function(const(const(x509_st)*)*, const(const(x509_st)*)*)) @nogc nothrow;
    static stack_st_X509* sk_X509_deep_copy(const(stack_st_X509)*, x509_st* function(const(x509_st)*), void function(x509_st*)) @nogc nothrow;
    static stack_st_X509* sk_X509_dup(const(stack_st_X509)*) @nogc nothrow;
    static void sk_X509_sort(stack_st_X509*) @nogc nothrow;
    static int sk_X509_find_ex(stack_st_X509*, x509_st*) @nogc nothrow;
    static int sk_X509_find(stack_st_X509*, x509_st*) @nogc nothrow;
    static x509_st* sk_X509_set(stack_st_X509*, int, x509_st*) @nogc nothrow;
    static void sk_X509_pop_free(stack_st_X509*, void function(x509_st*)) @nogc nothrow;
    static x509_st* sk_X509_shift(stack_st_X509*) @nogc nothrow;
    static x509_st* sk_X509_pop(stack_st_X509*) @nogc nothrow;
    static int sk_X509_unshift(stack_st_X509*, x509_st*) @nogc nothrow;
    static int sk_X509_push(stack_st_X509*, x509_st*) @nogc nothrow;
    static x509_st* sk_X509_delete_ptr(stack_st_X509*, x509_st*) @nogc nothrow;
    static x509_st* sk_X509_delete(stack_st_X509*, int) @nogc nothrow;
    static void sk_X509_zero(stack_st_X509*) @nogc nothrow;
    static void sk_X509_free(stack_st_X509*) @nogc nothrow;
    static int sk_X509_reserve(stack_st_X509*, int) @nogc nothrow;
    static stack_st_X509* sk_X509_new_reserve(int function(const(const(x509_st)*)*, const(const(x509_st)*)*), int) @nogc nothrow;
    static stack_st_X509* sk_X509_new_null() @nogc nothrow;
    static stack_st_X509* sk_X509_new(int function(const(const(x509_st)*)*, const(const(x509_st)*)*)) @nogc nothrow;
    static x509_st* sk_X509_value(const(stack_st_X509)*, int) @nogc nothrow;
    static int sk_X509_num(const(stack_st_X509)*) @nogc nothrow;
    alias sk_X509_copyfunc = x509_st* function(const(x509_st)*);
    alias sk_X509_freefunc = void function(x509_st*);
    alias sk_X509_compfunc = int function(const(const(x509_st)*)*, const(const(x509_st)*)*);
    struct stack_st_X509;
    struct x509_cinf_st;
    alias X509_CINF = x509_cinf_st;
    struct x509_cert_aux_st;
    alias X509_CERT_AUX = x509_cert_aux_st;
    struct X509_req_st;
    alias X509_REQ = X509_req_st;
    struct X509_req_info_st;
    alias X509_REQ_INFO = X509_req_info_st;
    static int function(const(const(x509_attributes_st)*)*, const(const(x509_attributes_st)*)*) sk_X509_ATTRIBUTE_set_cmp_func(stack_st_X509_ATTRIBUTE*, int function(const(const(x509_attributes_st)*)*, const(const(x509_attributes_st)*)*)) @nogc nothrow;
    static stack_st_X509_ATTRIBUTE* sk_X509_ATTRIBUTE_deep_copy(const(stack_st_X509_ATTRIBUTE)*, x509_attributes_st* function(const(x509_attributes_st)*), void function(x509_attributes_st*)) @nogc nothrow;
    static stack_st_X509_ATTRIBUTE* sk_X509_ATTRIBUTE_dup(const(stack_st_X509_ATTRIBUTE)*) @nogc nothrow;
    static int sk_X509_ATTRIBUTE_is_sorted(const(stack_st_X509_ATTRIBUTE)*) @nogc nothrow;
    static void sk_X509_ATTRIBUTE_sort(stack_st_X509_ATTRIBUTE*) @nogc nothrow;
    static int sk_X509_ATTRIBUTE_find_ex(stack_st_X509_ATTRIBUTE*, x509_attributes_st*) @nogc nothrow;
    static int sk_X509_ATTRIBUTE_find(stack_st_X509_ATTRIBUTE*, x509_attributes_st*) @nogc nothrow;
    static x509_attributes_st* sk_X509_ATTRIBUTE_set(stack_st_X509_ATTRIBUTE*, int, x509_attributes_st*) @nogc nothrow;
    static int sk_X509_ATTRIBUTE_insert(stack_st_X509_ATTRIBUTE*, x509_attributes_st*, int) @nogc nothrow;
    static void sk_X509_ATTRIBUTE_pop_free(stack_st_X509_ATTRIBUTE*, void function(x509_attributes_st*)) @nogc nothrow;
    static x509_attributes_st* sk_X509_ATTRIBUTE_shift(stack_st_X509_ATTRIBUTE*) @nogc nothrow;
    static x509_attributes_st* sk_X509_ATTRIBUTE_pop(stack_st_X509_ATTRIBUTE*) @nogc nothrow;
    static int sk_X509_ATTRIBUTE_unshift(stack_st_X509_ATTRIBUTE*, x509_attributes_st*) @nogc nothrow;
    static int sk_X509_ATTRIBUTE_push(stack_st_X509_ATTRIBUTE*, x509_attributes_st*) @nogc nothrow;
    static x509_attributes_st* sk_X509_ATTRIBUTE_delete_ptr(stack_st_X509_ATTRIBUTE*, x509_attributes_st*) @nogc nothrow;
    static x509_attributes_st* sk_X509_ATTRIBUTE_delete(stack_st_X509_ATTRIBUTE*, int) @nogc nothrow;
    static void sk_X509_ATTRIBUTE_zero(stack_st_X509_ATTRIBUTE*) @nogc nothrow;
    static void sk_X509_ATTRIBUTE_free(stack_st_X509_ATTRIBUTE*) @nogc nothrow;
    static int sk_X509_ATTRIBUTE_reserve(stack_st_X509_ATTRIBUTE*, int) @nogc nothrow;
    static stack_st_X509_ATTRIBUTE* sk_X509_ATTRIBUTE_new_reserve(int function(const(const(x509_attributes_st)*)*, const(const(x509_attributes_st)*)*), int) @nogc nothrow;
    static stack_st_X509_ATTRIBUTE* sk_X509_ATTRIBUTE_new_null() @nogc nothrow;
    static x509_attributes_st* sk_X509_ATTRIBUTE_value(const(stack_st_X509_ATTRIBUTE)*, int) @nogc nothrow;
    static int sk_X509_ATTRIBUTE_num(const(stack_st_X509_ATTRIBUTE)*) @nogc nothrow;
    alias sk_X509_ATTRIBUTE_copyfunc = x509_attributes_st* function(const(x509_attributes_st)*);
    alias sk_X509_ATTRIBUTE_compfunc = int function(const(const(x509_attributes_st)*)*, const(const(x509_attributes_st)*)*);
    struct stack_st_X509_ATTRIBUTE;
    alias sk_X509_ATTRIBUTE_freefunc = void function(x509_attributes_st*);
    static stack_st_X509_ATTRIBUTE* sk_X509_ATTRIBUTE_new(int function(const(const(x509_attributes_st)*)*, const(const(x509_attributes_st)*)*)) @nogc nothrow;
    struct x509_attributes_st;
    alias X509_ATTRIBUTE = x509_attributes_st;
    static int sk_X509_EXTENSION_find(stack_st_X509_EXTENSION*, X509_extension_st*) @nogc nothrow;
    alias sk_X509_EXTENSION_copyfunc = X509_extension_st* function(const(X509_extension_st)*);
    static int function(const(const(X509_extension_st)*)*, const(const(X509_extension_st)*)*) sk_X509_EXTENSION_set_cmp_func(stack_st_X509_EXTENSION*, int function(const(const(X509_extension_st)*)*, const(const(X509_extension_st)*)*)) @nogc nothrow;
    static stack_st_X509_EXTENSION* sk_X509_EXTENSION_deep_copy(const(stack_st_X509_EXTENSION)*, X509_extension_st* function(const(X509_extension_st)*), void function(X509_extension_st*)) @nogc nothrow;
    static stack_st_X509_EXTENSION* sk_X509_EXTENSION_dup(const(stack_st_X509_EXTENSION)*) @nogc nothrow;
    static int sk_X509_EXTENSION_is_sorted(const(stack_st_X509_EXTENSION)*) @nogc nothrow;
    static void sk_X509_EXTENSION_sort(stack_st_X509_EXTENSION*) @nogc nothrow;
    static int sk_X509_EXTENSION_find_ex(stack_st_X509_EXTENSION*, X509_extension_st*) @nogc nothrow;
    static X509_extension_st* sk_X509_EXTENSION_set(stack_st_X509_EXTENSION*, int, X509_extension_st*) @nogc nothrow;
    alias sk_X509_EXTENSION_compfunc = int function(const(const(X509_extension_st)*)*, const(const(X509_extension_st)*)*);
    alias sk_X509_EXTENSION_freefunc = void function(X509_extension_st*);
    static int sk_X509_EXTENSION_insert(stack_st_X509_EXTENSION*, X509_extension_st*, int) @nogc nothrow;
    static void sk_X509_EXTENSION_pop_free(stack_st_X509_EXTENSION*, void function(X509_extension_st*)) @nogc nothrow;
    static X509_extension_st* sk_X509_EXTENSION_shift(stack_st_X509_EXTENSION*) @nogc nothrow;
    static X509_extension_st* sk_X509_EXTENSION_pop(stack_st_X509_EXTENSION*) @nogc nothrow;
    static int sk_X509_EXTENSION_unshift(stack_st_X509_EXTENSION*, X509_extension_st*) @nogc nothrow;
    static int sk_X509_EXTENSION_push(stack_st_X509_EXTENSION*, X509_extension_st*) @nogc nothrow;
    static X509_extension_st* sk_X509_EXTENSION_delete_ptr(stack_st_X509_EXTENSION*, X509_extension_st*) @nogc nothrow;
    static X509_extension_st* sk_X509_EXTENSION_delete(stack_st_X509_EXTENSION*, int) @nogc nothrow;
    static void sk_X509_EXTENSION_zero(stack_st_X509_EXTENSION*) @nogc nothrow;
    static void sk_X509_EXTENSION_free(stack_st_X509_EXTENSION*) @nogc nothrow;
    static int sk_X509_EXTENSION_reserve(stack_st_X509_EXTENSION*, int) @nogc nothrow;
    static stack_st_X509_EXTENSION* sk_X509_EXTENSION_new_reserve(int function(const(const(X509_extension_st)*)*, const(const(X509_extension_st)*)*), int) @nogc nothrow;
    static stack_st_X509_EXTENSION* sk_X509_EXTENSION_new_null() @nogc nothrow;
    static stack_st_X509_EXTENSION* sk_X509_EXTENSION_new(int function(const(const(X509_extension_st)*)*, const(const(X509_extension_st)*)*)) @nogc nothrow;
    static X509_extension_st* sk_X509_EXTENSION_value(const(stack_st_X509_EXTENSION)*, int) @nogc nothrow;
    static int sk_X509_EXTENSION_num(const(stack_st_X509_EXTENSION)*) @nogc nothrow;
    struct stack_st_X509_EXTENSION;
    alias X509_EXTENSIONS = stack_st_X509_EXTENSION;
    struct X509_extension_st;
    alias X509_EXTENSION = X509_extension_st;
    static X509_name_st* sk_X509_NAME_pop(stack_st_X509_NAME*) @nogc nothrow;
    static int sk_X509_NAME_unshift(stack_st_X509_NAME*, X509_name_st*) @nogc nothrow;
    static int sk_X509_NAME_push(stack_st_X509_NAME*, X509_name_st*) @nogc nothrow;
    static X509_name_st* sk_X509_NAME_shift(stack_st_X509_NAME*) @nogc nothrow;
    static void sk_X509_NAME_pop_free(stack_st_X509_NAME*, void function(X509_name_st*)) @nogc nothrow;
    static int function(const(const(X509_name_st)*)*, const(const(X509_name_st)*)*) sk_X509_NAME_set_cmp_func(stack_st_X509_NAME*, int function(const(const(X509_name_st)*)*, const(const(X509_name_st)*)*)) @nogc nothrow;
    static X509_name_st* sk_X509_NAME_delete_ptr(stack_st_X509_NAME*, X509_name_st*) @nogc nothrow;
    static int sk_X509_NAME_insert(stack_st_X509_NAME*, X509_name_st*, int) @nogc nothrow;
    static X509_name_st* sk_X509_NAME_set(stack_st_X509_NAME*, int, X509_name_st*) @nogc nothrow;
    static int sk_X509_NAME_find(stack_st_X509_NAME*, X509_name_st*) @nogc nothrow;
    static int sk_X509_NAME_find_ex(stack_st_X509_NAME*, X509_name_st*) @nogc nothrow;
    static void sk_X509_NAME_sort(stack_st_X509_NAME*) @nogc nothrow;
    static int sk_X509_NAME_is_sorted(const(stack_st_X509_NAME)*) @nogc nothrow;
    static stack_st_X509_NAME* sk_X509_NAME_dup(const(stack_st_X509_NAME)*) @nogc nothrow;
    static stack_st_X509_NAME* sk_X509_NAME_deep_copy(const(stack_st_X509_NAME)*, X509_name_st* function(const(X509_name_st)*), void function(X509_name_st*)) @nogc nothrow;
    static X509_name_st* sk_X509_NAME_delete(stack_st_X509_NAME*, int) @nogc nothrow;
    static void sk_X509_NAME_zero(stack_st_X509_NAME*) @nogc nothrow;
    static void sk_X509_NAME_free(stack_st_X509_NAME*) @nogc nothrow;
    static int sk_X509_NAME_reserve(stack_st_X509_NAME*, int) @nogc nothrow;
    static stack_st_X509_NAME* sk_X509_NAME_new_null() @nogc nothrow;
    static stack_st_X509_NAME* sk_X509_NAME_new(int function(const(const(X509_name_st)*)*, const(const(X509_name_st)*)*)) @nogc nothrow;
    static X509_name_st* sk_X509_NAME_value(const(stack_st_X509_NAME)*, int) @nogc nothrow;
    static int sk_X509_NAME_num(const(stack_st_X509_NAME)*) @nogc nothrow;
    alias sk_X509_NAME_copyfunc = X509_name_st* function(const(X509_name_st)*);
    alias sk_X509_NAME_freefunc = void function(X509_name_st*);
    alias sk_X509_NAME_compfunc = int function(const(const(X509_name_st)*)*, const(const(X509_name_st)*)*);
    struct stack_st_X509_NAME;
    static stack_st_X509_NAME* sk_X509_NAME_new_reserve(int function(const(const(X509_name_st)*)*, const(const(X509_name_st)*)*), int) @nogc nothrow;
    static X509_name_entry_st* sk_X509_NAME_ENTRY_pop(stack_st_X509_NAME_ENTRY*) @nogc nothrow;
    struct stack_st_X509_NAME_ENTRY;
    static void sk_X509_NAME_ENTRY_free(stack_st_X509_NAME_ENTRY*) @nogc nothrow;
    static int sk_X509_NAME_ENTRY_reserve(stack_st_X509_NAME_ENTRY*, int) @nogc nothrow;
    static stack_st_X509_NAME_ENTRY* sk_X509_NAME_ENTRY_new_reserve(int function(const(const(X509_name_entry_st)*)*, const(const(X509_name_entry_st)*)*), int) @nogc nothrow;
    static stack_st_X509_NAME_ENTRY* sk_X509_NAME_ENTRY_new_null() @nogc nothrow;
    static stack_st_X509_NAME_ENTRY* sk_X509_NAME_ENTRY_new(int function(const(const(X509_name_entry_st)*)*, const(const(X509_name_entry_st)*)*)) @nogc nothrow;
    static X509_name_entry_st* sk_X509_NAME_ENTRY_value(const(stack_st_X509_NAME_ENTRY)*, int) @nogc nothrow;
    static int sk_X509_NAME_ENTRY_num(const(stack_st_X509_NAME_ENTRY)*) @nogc nothrow;
    static int sk_X509_NAME_ENTRY_push(stack_st_X509_NAME_ENTRY*, X509_name_entry_st*) @nogc nothrow;
    static X509_name_entry_st* sk_X509_NAME_ENTRY_delete(stack_st_X509_NAME_ENTRY*, int) @nogc nothrow;
    static void sk_X509_NAME_ENTRY_zero(stack_st_X509_NAME_ENTRY*) @nogc nothrow;
    alias sk_X509_NAME_ENTRY_freefunc = void function(X509_name_entry_st*);
    alias sk_X509_NAME_ENTRY_compfunc = int function(const(const(X509_name_entry_st)*)*, const(const(X509_name_entry_st)*)*);
    alias sk_X509_NAME_ENTRY_copyfunc = X509_name_entry_st* function(const(X509_name_entry_st)*);
    static int sk_X509_NAME_ENTRY_insert(stack_st_X509_NAME_ENTRY*, X509_name_entry_st*, int) @nogc nothrow;
    static X509_name_entry_st* sk_X509_NAME_ENTRY_delete_ptr(stack_st_X509_NAME_ENTRY*, X509_name_entry_st*) @nogc nothrow;
    static int function(const(const(X509_name_entry_st)*)*, const(const(X509_name_entry_st)*)*) sk_X509_NAME_ENTRY_set_cmp_func(stack_st_X509_NAME_ENTRY*, int function(const(const(X509_name_entry_st)*)*, const(const(X509_name_entry_st)*)*)) @nogc nothrow;
    static int sk_X509_NAME_ENTRY_unshift(stack_st_X509_NAME_ENTRY*, X509_name_entry_st*) @nogc nothrow;
    static stack_st_X509_NAME_ENTRY* sk_X509_NAME_ENTRY_dup(const(stack_st_X509_NAME_ENTRY)*) @nogc nothrow;
    static int sk_X509_NAME_ENTRY_is_sorted(const(stack_st_X509_NAME_ENTRY)*) @nogc nothrow;
    static void sk_X509_NAME_ENTRY_sort(stack_st_X509_NAME_ENTRY*) @nogc nothrow;
    static int sk_X509_NAME_ENTRY_find_ex(stack_st_X509_NAME_ENTRY*, X509_name_entry_st*) @nogc nothrow;
    static int sk_X509_NAME_ENTRY_find(stack_st_X509_NAME_ENTRY*, X509_name_entry_st*) @nogc nothrow;
    static X509_name_entry_st* sk_X509_NAME_ENTRY_set(stack_st_X509_NAME_ENTRY*, int, X509_name_entry_st*) @nogc nothrow;
    static stack_st_X509_NAME_ENTRY* sk_X509_NAME_ENTRY_deep_copy(const(stack_st_X509_NAME_ENTRY)*, X509_name_entry_st* function(const(X509_name_entry_st)*), void function(X509_name_entry_st*)) @nogc nothrow;
    static void sk_X509_NAME_ENTRY_pop_free(stack_st_X509_NAME_ENTRY*, void function(X509_name_entry_st*)) @nogc nothrow;
    static X509_name_entry_st* sk_X509_NAME_ENTRY_shift(stack_st_X509_NAME_ENTRY*) @nogc nothrow;
    struct X509_name_entry_st;
    alias X509_NAME_ENTRY = X509_name_entry_st;
    struct X509_sig_st;
    alias X509_SIG = X509_sig_st;
    struct X509_val_st
    {
        asn1_string_st* notBefore;
        asn1_string_st* notAfter;
    }
    alias X509_VAL = X509_val_st;
    alias X509_ALGORS = stack_st_X509_ALGOR;
    int OPENSSL_sk_is_sorted(const(stack_st)*) @nogc nothrow;
    void OPENSSL_sk_sort(stack_st*) @nogc nothrow;
    stack_st* OPENSSL_sk_dup(const(stack_st)*) @nogc nothrow;
    int function(const(void)*, const(void)*) OPENSSL_sk_set_cmp_func(stack_st*, int function(const(void)*, const(void)*)) @nogc nothrow;
    void OPENSSL_sk_zero(stack_st*) @nogc nothrow;
    void* OPENSSL_sk_pop(stack_st*) @nogc nothrow;
    void* OPENSSL_sk_shift(stack_st*) @nogc nothrow;
    int OPENSSL_sk_unshift(stack_st*, const(void)*) @nogc nothrow;
    int OPENSSL_sk_push(stack_st*, const(void)*) @nogc nothrow;
    int OPENSSL_sk_find_ex(stack_st*, const(void)*) @nogc nothrow;
    int OPENSSL_sk_find(stack_st*, const(void)*) @nogc nothrow;
    void* OPENSSL_sk_delete_ptr(stack_st*, const(void)*) @nogc nothrow;
    void* OPENSSL_sk_delete(stack_st*, int) @nogc nothrow;
    int OPENSSL_sk_insert(stack_st*, const(void)*, int) @nogc nothrow;
    stack_st* OPENSSL_sk_deep_copy(const(stack_st)*, void* function(const(void)*), void function(void*)) @nogc nothrow;
    void OPENSSL_sk_pop_free(stack_st*, void function(void*)) @nogc nothrow;
    void OPENSSL_sk_free(stack_st*) @nogc nothrow;
    int OPENSSL_sk_reserve(stack_st*, int) @nogc nothrow;
    stack_st* OPENSSL_sk_new_reserve(int function(const(void)*, const(void)*), int) @nogc nothrow;
    stack_st* OPENSSL_sk_new_null() @nogc nothrow;
    stack_st* OPENSSL_sk_new(int function(const(void)*, const(void)*)) @nogc nothrow;
    void* OPENSSL_sk_set(stack_st*, int, const(void)*) @nogc nothrow;
    void* OPENSSL_sk_value(const(stack_st)*, int) @nogc nothrow;
    int OPENSSL_sk_num(const(stack_st)*) @nogc nothrow;
    alias OPENSSL_sk_copyfunc = void* function(const(void)*);
    alias OPENSSL_sk_freefunc = void function(void*);
    alias OPENSSL_sk_compfunc = int function(const(void)*, const(void)*);
    struct stack_st;
    alias OPENSSL_STACK = stack_st;
    void SHA512_Transform(SHA512state_st*, const(ubyte)*) @nogc nothrow;
    ubyte* SHA512(const(ubyte)*, c_ulong, ubyte*) @nogc nothrow;
    int SHA512_Final(ubyte*, SHA512state_st*) @nogc nothrow;
    int SHA512_Update(SHA512state_st*, const(void)*, c_ulong) @nogc nothrow;
    int SHA512_Init(SHA512state_st*) @nogc nothrow;
    ubyte* SHA384(const(ubyte)*, c_ulong, ubyte*) @nogc nothrow;
    int SHA384_Final(ubyte*, SHA512state_st*) @nogc nothrow;
    int SHA384_Update(SHA512state_st*, const(void)*, c_ulong) @nogc nothrow;
    int SHA384_Init(SHA512state_st*) @nogc nothrow;
    struct SHA512state_st
    {
        ulong[8] h;
        ulong Nl;
        ulong Nh;
        static union _Anonymous_27
        {
            ulong[16] d;
            ubyte[128] p;
        }
        _Anonymous_27 u;
        uint num;
        uint md_len;
    }
    alias SHA512_CTX = SHA512state_st;
    void SHA256_Transform(SHA256state_st*, const(ubyte)*) @nogc nothrow;
    ubyte* SHA256(const(ubyte)*, c_ulong, ubyte*) @nogc nothrow;
    int SHA256_Final(ubyte*, SHA256state_st*) @nogc nothrow;
    int SHA256_Update(SHA256state_st*, const(void)*, c_ulong) @nogc nothrow;
    int SHA256_Init(SHA256state_st*) @nogc nothrow;
    ubyte* SHA224(const(ubyte)*, c_ulong, ubyte*) @nogc nothrow;
    int SHA224_Final(ubyte*, SHA256state_st*) @nogc nothrow;
    int SHA224_Update(SHA256state_st*, const(void)*, c_ulong) @nogc nothrow;
    int SHA224_Init(SHA256state_st*) @nogc nothrow;
    struct SHA256state_st
    {
        uint[8] h;
        uint Nl;
        uint Nh;
        uint[16] data;
        uint num;
        uint md_len;
    }
    alias SHA256_CTX = SHA256state_st;
    void SHA1_Transform(SHAstate_st*, const(ubyte)*) @nogc nothrow;
    ubyte* SHA1(const(ubyte)*, c_ulong, ubyte*) @nogc nothrow;
    int SHA1_Final(ubyte*, SHAstate_st*) @nogc nothrow;
    int SHA1_Update(SHAstate_st*, const(void)*, c_ulong) @nogc nothrow;
    int SHA1_Init(SHAstate_st*) @nogc nothrow;
    struct SHAstate_st
    {
        uint h0;
        uint h1;
        uint h2;
        uint h3;
        uint h4;
        uint Nl;
        uint Nh;
        uint[16] data;
        uint num;
    }
    alias SHA_CTX = SHAstate_st;
    static void* sk_OPENSSL_BLOCK_delete(stack_st_OPENSSL_BLOCK*, int) @nogc nothrow;
    static stack_st_OPENSSL_BLOCK* sk_OPENSSL_BLOCK_new_null() @nogc nothrow;
    static void* sk_OPENSSL_BLOCK_delete_ptr(stack_st_OPENSSL_BLOCK*, void*) @nogc nothrow;
    static void sk_OPENSSL_BLOCK_zero(stack_st_OPENSSL_BLOCK*) @nogc nothrow;
    static void sk_OPENSSL_BLOCK_free(stack_st_OPENSSL_BLOCK*) @nogc nothrow;
    static int sk_OPENSSL_BLOCK_reserve(stack_st_OPENSSL_BLOCK*, int) @nogc nothrow;
    static stack_st_OPENSSL_BLOCK* sk_OPENSSL_BLOCK_new_reserve(int function(const(const(void)*)*, const(const(void)*)*), int) @nogc nothrow;
    static int sk_OPENSSL_BLOCK_push(stack_st_OPENSSL_BLOCK*, void*) @nogc nothrow;
    static stack_st_OPENSSL_BLOCK* sk_OPENSSL_BLOCK_new(int function(const(const(void)*)*, const(const(void)*)*)) @nogc nothrow;
    static void* sk_OPENSSL_BLOCK_value(const(stack_st_OPENSSL_BLOCK)*, int) @nogc nothrow;
    static int sk_OPENSSL_BLOCK_num(const(stack_st_OPENSSL_BLOCK)*) @nogc nothrow;
    alias sk_OPENSSL_BLOCK_copyfunc = void* function(const(void)*);
    alias sk_OPENSSL_BLOCK_freefunc = void function(void*);
    alias sk_OPENSSL_BLOCK_compfunc = int function(const(const(void)*)*, const(const(void)*)*);
    struct stack_st_OPENSSL_BLOCK;
    static int sk_OPENSSL_BLOCK_is_sorted(const(stack_st_OPENSSL_BLOCK)*) @nogc nothrow;
    static int sk_OPENSSL_BLOCK_unshift(stack_st_OPENSSL_BLOCK*, void*) @nogc nothrow;
    static void* sk_OPENSSL_BLOCK_pop(stack_st_OPENSSL_BLOCK*) @nogc nothrow;
    static void* sk_OPENSSL_BLOCK_shift(stack_st_OPENSSL_BLOCK*) @nogc nothrow;
    static void sk_OPENSSL_BLOCK_pop_free(stack_st_OPENSSL_BLOCK*, void function(void*)) @nogc nothrow;
    static int sk_OPENSSL_BLOCK_insert(stack_st_OPENSSL_BLOCK*, void*, int) @nogc nothrow;
    static void* sk_OPENSSL_BLOCK_set(stack_st_OPENSSL_BLOCK*, int, void*) @nogc nothrow;
    static int sk_OPENSSL_BLOCK_find(stack_st_OPENSSL_BLOCK*, void*) @nogc nothrow;
    static int sk_OPENSSL_BLOCK_find_ex(stack_st_OPENSSL_BLOCK*, void*) @nogc nothrow;
    static void sk_OPENSSL_BLOCK_sort(stack_st_OPENSSL_BLOCK*) @nogc nothrow;
    static stack_st_OPENSSL_BLOCK* sk_OPENSSL_BLOCK_dup(const(stack_st_OPENSSL_BLOCK)*) @nogc nothrow;
    static stack_st_OPENSSL_BLOCK* sk_OPENSSL_BLOCK_deep_copy(const(stack_st_OPENSSL_BLOCK)*, void* function(const(void)*), void function(void*)) @nogc nothrow;
    static int function(const(const(void)*)*, const(const(void)*)*) sk_OPENSSL_BLOCK_set_cmp_func(stack_st_OPENSSL_BLOCK*, int function(const(const(void)*)*, const(const(void)*)*)) @nogc nothrow;
    alias OPENSSL_BLOCK = void*;
    static void sk_OPENSSL_CSTRING_pop_free(stack_st_OPENSSL_CSTRING*, void function(char*)) @nogc nothrow;
    static int sk_OPENSSL_CSTRING_insert(stack_st_OPENSSL_CSTRING*, const(char)*, int) @nogc nothrow;
    static const(char)* sk_OPENSSL_CSTRING_shift(stack_st_OPENSSL_CSTRING*) @nogc nothrow;
    static const(char)* sk_OPENSSL_CSTRING_set(stack_st_OPENSSL_CSTRING*, int, const(char)*) @nogc nothrow;
    static const(char)* sk_OPENSSL_CSTRING_pop(stack_st_OPENSSL_CSTRING*) @nogc nothrow;
    static int sk_OPENSSL_CSTRING_unshift(stack_st_OPENSSL_CSTRING*, const(char)*) @nogc nothrow;
    static int sk_OPENSSL_CSTRING_push(stack_st_OPENSSL_CSTRING*, const(char)*) @nogc nothrow;
    static const(char)* sk_OPENSSL_CSTRING_delete_ptr(stack_st_OPENSSL_CSTRING*, const(char)*) @nogc nothrow;
    static const(char)* sk_OPENSSL_CSTRING_delete(stack_st_OPENSSL_CSTRING*, int) @nogc nothrow;
    static void sk_OPENSSL_CSTRING_zero(stack_st_OPENSSL_CSTRING*) @nogc nothrow;
    static void sk_OPENSSL_CSTRING_free(stack_st_OPENSSL_CSTRING*) @nogc nothrow;
    static int sk_OPENSSL_CSTRING_reserve(stack_st_OPENSSL_CSTRING*, int) @nogc nothrow;
    static stack_st_OPENSSL_CSTRING* sk_OPENSSL_CSTRING_new_reserve(int function(const(const(char)*)*, const(const(char)*)*), int) @nogc nothrow;
    static stack_st_OPENSSL_CSTRING* sk_OPENSSL_CSTRING_new_null() @nogc nothrow;
    static stack_st_OPENSSL_CSTRING* sk_OPENSSL_CSTRING_new(int function(const(const(char)*)*, const(const(char)*)*)) @nogc nothrow;
    static const(char)* sk_OPENSSL_CSTRING_value(const(stack_st_OPENSSL_CSTRING)*, int) @nogc nothrow;
    static int sk_OPENSSL_CSTRING_num(const(stack_st_OPENSSL_CSTRING)*) @nogc nothrow;
    static int sk_OPENSSL_CSTRING_find(stack_st_OPENSSL_CSTRING*, const(char)*) @nogc nothrow;
    static int sk_OPENSSL_CSTRING_find_ex(stack_st_OPENSSL_CSTRING*, const(char)*) @nogc nothrow;
    static void sk_OPENSSL_CSTRING_sort(stack_st_OPENSSL_CSTRING*) @nogc nothrow;
    static int sk_OPENSSL_CSTRING_is_sorted(const(stack_st_OPENSSL_CSTRING)*) @nogc nothrow;
    static stack_st_OPENSSL_CSTRING* sk_OPENSSL_CSTRING_dup(const(stack_st_OPENSSL_CSTRING)*) @nogc nothrow;
    static stack_st_OPENSSL_CSTRING* sk_OPENSSL_CSTRING_deep_copy(const(stack_st_OPENSSL_CSTRING)*, char* function(const(char)*), void function(char*)) @nogc nothrow;
    static int function(const(const(char)*)*, const(const(char)*)*) sk_OPENSSL_CSTRING_set_cmp_func(stack_st_OPENSSL_CSTRING*, int function(const(const(char)*)*, const(const(char)*)*)) @nogc nothrow;
    alias sk_OPENSSL_CSTRING_copyfunc = char* function(const(char)*);
    alias sk_OPENSSL_CSTRING_freefunc = void function(char*);
    alias sk_OPENSSL_CSTRING_compfunc = int function(const(const(char)*)*, const(const(char)*)*);
    struct stack_st_OPENSSL_CSTRING;
    static int sk_OPENSSL_STRING_insert(stack_st_OPENSSL_STRING*, char*, int) @nogc nothrow;
    static char* sk_OPENSSL_STRING_set(stack_st_OPENSSL_STRING*, int, char*) @nogc nothrow;
    static int sk_OPENSSL_STRING_find(stack_st_OPENSSL_STRING*, char*) @nogc nothrow;
    static int sk_OPENSSL_STRING_find_ex(stack_st_OPENSSL_STRING*, char*) @nogc nothrow;
    static void sk_OPENSSL_STRING_sort(stack_st_OPENSSL_STRING*) @nogc nothrow;
    static void sk_OPENSSL_STRING_pop_free(stack_st_OPENSSL_STRING*, void function(char*)) @nogc nothrow;
    static char* sk_OPENSSL_STRING_shift(stack_st_OPENSSL_STRING*) @nogc nothrow;
    static char* sk_OPENSSL_STRING_pop(stack_st_OPENSSL_STRING*) @nogc nothrow;
    static int sk_OPENSSL_STRING_unshift(stack_st_OPENSSL_STRING*, char*) @nogc nothrow;
    static int sk_OPENSSL_STRING_push(stack_st_OPENSSL_STRING*, char*) @nogc nothrow;
    static char* sk_OPENSSL_STRING_delete_ptr(stack_st_OPENSSL_STRING*, char*) @nogc nothrow;
    static char* sk_OPENSSL_STRING_delete(stack_st_OPENSSL_STRING*, int) @nogc nothrow;
    static int sk_OPENSSL_STRING_num(const(stack_st_OPENSSL_STRING)*) @nogc nothrow;
    static int sk_OPENSSL_STRING_is_sorted(const(stack_st_OPENSSL_STRING)*) @nogc nothrow;
    static stack_st_OPENSSL_STRING* sk_OPENSSL_STRING_dup(const(stack_st_OPENSSL_STRING)*) @nogc nothrow;
    static stack_st_OPENSSL_STRING* sk_OPENSSL_STRING_deep_copy(const(stack_st_OPENSSL_STRING)*, char* function(const(char)*), void function(char*)) @nogc nothrow;
    static int function(const(const(char)*)*, const(const(char)*)*) sk_OPENSSL_STRING_set_cmp_func(stack_st_OPENSSL_STRING*, int function(const(const(char)*)*, const(const(char)*)*)) @nogc nothrow;
    struct stack_st_OPENSSL_STRING;
    alias sk_OPENSSL_STRING_compfunc = int function(const(const(char)*)*, const(const(char)*)*);
    alias sk_OPENSSL_STRING_freefunc = void function(char*);
    alias sk_OPENSSL_STRING_copyfunc = char* function(const(char)*);
    static void sk_OPENSSL_STRING_zero(stack_st_OPENSSL_STRING*) @nogc nothrow;
    static void sk_OPENSSL_STRING_free(stack_st_OPENSSL_STRING*) @nogc nothrow;
    static int sk_OPENSSL_STRING_reserve(stack_st_OPENSSL_STRING*, int) @nogc nothrow;
    static stack_st_OPENSSL_STRING* sk_OPENSSL_STRING_new_reserve(int function(const(const(char)*)*, const(const(char)*)*), int) @nogc nothrow;
    static stack_st_OPENSSL_STRING* sk_OPENSSL_STRING_new_null() @nogc nothrow;
    static char* sk_OPENSSL_STRING_value(const(stack_st_OPENSSL_STRING)*, int) @nogc nothrow;
    static stack_st_OPENSSL_STRING* sk_OPENSSL_STRING_new(int function(const(const(char)*)*, const(const(char)*)*)) @nogc nothrow;
    alias OPENSSL_CSTRING = const(char)*;
    alias OPENSSL_STRING = char*;
    int ERR_load_RSA_strings() @nogc nothrow;
    int RSA_meth_set_multi_prime_keygen(rsa_meth_st*, int function(rsa_st*, int, int, bignum_st*, bn_gencb_st*)) @nogc nothrow;
    int function(rsa_st*, int, int, bignum_st*, bn_gencb_st*) RSA_meth_get_multi_prime_keygen(const(rsa_meth_st)*) @nogc nothrow;
    int RSA_meth_set_keygen(rsa_meth_st*, int function(rsa_st*, int, bignum_st*, bn_gencb_st*)) @nogc nothrow;
    int function(rsa_st*, int, bignum_st*, bn_gencb_st*) RSA_meth_get_keygen(const(rsa_meth_st)*) @nogc nothrow;
    int RSA_meth_set_verify(rsa_meth_st*, int function(int, const(ubyte)*, uint, const(ubyte)*, uint, const(rsa_st)*)) @nogc nothrow;
    int function(int, const(ubyte)*, uint, const(ubyte)*, uint, const(rsa_st)*) RSA_meth_get_verify(const(rsa_meth_st)*) @nogc nothrow;
    int RSA_meth_set_sign(rsa_meth_st*, int function(int, const(ubyte)*, uint, ubyte*, uint*, const(rsa_st)*)) @nogc nothrow;
    int function(int, const(ubyte)*, uint, ubyte*, uint*, const(rsa_st)*) RSA_meth_get_sign(const(rsa_meth_st)*) @nogc nothrow;
    int RSA_meth_set_finish(rsa_meth_st*, int function(rsa_st*)) @nogc nothrow;
    int function(rsa_st*) RSA_meth_get_finish(const(rsa_meth_st)*) @nogc nothrow;
    int RSA_meth_set_init(rsa_meth_st*, int function(rsa_st*)) @nogc nothrow;
    int function(rsa_st*) RSA_meth_get_init(const(rsa_meth_st)*) @nogc nothrow;
    int RSA_meth_set_bn_mod_exp(rsa_meth_st*, int function(bignum_st*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*, bn_mont_ctx_st*)) @nogc nothrow;
    int function(bignum_st*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, bignum_ctx*, bn_mont_ctx_st*) RSA_meth_get_bn_mod_exp(const(rsa_meth_st)*) @nogc nothrow;
    int RSA_meth_set_mod_exp(rsa_meth_st*, int function(bignum_st*, const(bignum_st)*, rsa_st*, bignum_ctx*)) @nogc nothrow;
    int function(bignum_st*, const(bignum_st)*, rsa_st*, bignum_ctx*) RSA_meth_get_mod_exp(const(rsa_meth_st)*) @nogc nothrow;
    int RSA_meth_set_priv_dec(rsa_meth_st*, int function(int, const(ubyte)*, ubyte*, rsa_st*, int)) @nogc nothrow;
    int function(int, const(ubyte)*, ubyte*, rsa_st*, int) RSA_meth_get_priv_dec(const(rsa_meth_st)*) @nogc nothrow;
    int RSA_meth_set_priv_enc(rsa_meth_st*, int function(int, const(ubyte)*, ubyte*, rsa_st*, int)) @nogc nothrow;
    int function(int, const(ubyte)*, ubyte*, rsa_st*, int) RSA_meth_get_priv_enc(const(rsa_meth_st)*) @nogc nothrow;
    int RSA_meth_set_pub_dec(rsa_meth_st*, int function(int, const(ubyte)*, ubyte*, rsa_st*, int)) @nogc nothrow;
    int function(int, const(ubyte)*, ubyte*, rsa_st*, int) RSA_meth_get_pub_dec(const(rsa_meth_st)*) @nogc nothrow;
    int RSA_meth_set_pub_enc(rsa_meth_st*, int function(int, const(ubyte)*, ubyte*, rsa_st*, int)) @nogc nothrow;
    int function(int, const(ubyte)*, ubyte*, rsa_st*, int) RSA_meth_get_pub_enc(const(rsa_meth_st)*) @nogc nothrow;
    int RSA_meth_set0_app_data(rsa_meth_st*, void*) @nogc nothrow;
    void* RSA_meth_get0_app_data(const(rsa_meth_st)*) @nogc nothrow;
    int RSA_meth_set_flags(rsa_meth_st*, int) @nogc nothrow;
    int RSA_meth_get_flags(const(rsa_meth_st)*) @nogc nothrow;
    int RSA_meth_set1_name(rsa_meth_st*, const(char)*) @nogc nothrow;
    const(char)* RSA_meth_get0_name(const(rsa_meth_st)*) @nogc nothrow;
    rsa_meth_st* RSA_meth_dup(const(rsa_meth_st)*) @nogc nothrow;
    void RSA_meth_free(rsa_meth_st*) @nogc nothrow;
    rsa_meth_st* RSA_meth_new(const(char)*, int) @nogc nothrow;
    rsa_st* RSAPrivateKey_dup(rsa_st*) @nogc nothrow;
    rsa_st* RSAPublicKey_dup(rsa_st*) @nogc nothrow;
    void* RSA_get_ex_data(const(rsa_st)*, int) @nogc nothrow;
    int RSA_set_ex_data(rsa_st*, int, void*) @nogc nothrow;
    int RSA_padding_add_PKCS1_PSS_mgf1(rsa_st*, ubyte*, const(ubyte)*, const(evp_md_st)*, const(evp_md_st)*, int) @nogc nothrow;
    int RSA_verify_PKCS1_PSS_mgf1(rsa_st*, const(ubyte)*, const(evp_md_st)*, const(evp_md_st)*, const(ubyte)*, int) @nogc nothrow;
    int RSA_padding_add_PKCS1_PSS(rsa_st*, ubyte*, const(ubyte)*, const(evp_md_st)*, int) @nogc nothrow;
    int RSA_verify_PKCS1_PSS(rsa_st*, const(ubyte)*, const(evp_md_st)*, const(ubyte)*, int) @nogc nothrow;
    int RSA_X931_hash_id(int) @nogc nothrow;
    int RSA_padding_check_X931(ubyte*, int, const(ubyte)*, int, int) @nogc nothrow;
    int RSA_padding_add_X931(ubyte*, int, const(ubyte)*, int) @nogc nothrow;
    int RSA_padding_check_none(ubyte*, int, const(ubyte)*, int, int) @nogc nothrow;
    int RSA_padding_add_none(ubyte*, int, const(ubyte)*, int) @nogc nothrow;
    int RSA_padding_check_SSLv23(ubyte*, int, const(ubyte)*, int, int) @nogc nothrow;
    int RSA_padding_add_SSLv23(ubyte*, int, const(ubyte)*, int) @nogc nothrow;
    int RSA_padding_check_PKCS1_OAEP_mgf1(ubyte*, int, const(ubyte)*, int, int, const(ubyte)*, int, const(evp_md_st)*, const(evp_md_st)*) @nogc nothrow;
    int RSA_padding_add_PKCS1_OAEP_mgf1(ubyte*, int, const(ubyte)*, int, const(ubyte)*, int, const(evp_md_st)*, const(evp_md_st)*) @nogc nothrow;
    int RSA_padding_check_PKCS1_OAEP(ubyte*, int, const(ubyte)*, int, int, const(ubyte)*, int) @nogc nothrow;
    int RSA_padding_add_PKCS1_OAEP(ubyte*, int, const(ubyte)*, int, const(ubyte)*, int) @nogc nothrow;
    int PKCS1_MGF1(ubyte*, c_long, const(ubyte)*, c_long, const(evp_md_st)*) @nogc nothrow;
    int RSA_padding_check_PKCS1_type_2(ubyte*, int, const(ubyte)*, int, int) @nogc nothrow;
    int RSA_padding_add_PKCS1_type_2(ubyte*, int, const(ubyte)*, int) @nogc nothrow;
    int RSA_padding_check_PKCS1_type_1(ubyte*, int, const(ubyte)*, int, int) @nogc nothrow;
    int RSA_padding_add_PKCS1_type_1(ubyte*, int, const(ubyte)*, int) @nogc nothrow;
    bn_blinding_st* RSA_setup_blinding(rsa_st*, bignum_ctx*) @nogc nothrow;
    void RSA_blinding_off(rsa_st*) @nogc nothrow;
    int RSA_blinding_on(rsa_st*, bignum_ctx*) @nogc nothrow;
    int RSA_verify_ASN1_OCTET_STRING(int, const(ubyte)*, uint, ubyte*, uint, rsa_st*) @nogc nothrow;
    int RSA_sign_ASN1_OCTET_STRING(int, const(ubyte)*, uint, ubyte*, uint*, rsa_st*) @nogc nothrow;
    int RSA_verify(int, const(ubyte)*, uint, const(ubyte)*, uint, rsa_st*) @nogc nothrow;
    int RSA_sign(int, const(ubyte)*, uint, ubyte*, uint*, rsa_st*) @nogc nothrow;
    int RSA_print(bio_st*, const(rsa_st)*, int) @nogc nothrow;
    int RSA_print_fp(_IO_FILE*, const(rsa_st)*, int) @nogc nothrow;
    rsa_oaep_params_st* d2i_RSA_OAEP_PARAMS(rsa_oaep_params_st**, const(ubyte)**, c_long) @nogc nothrow;
    rsa_oaep_params_st* RSA_OAEP_PARAMS_new() @nogc nothrow;
    int i2d_RSA_OAEP_PARAMS(rsa_oaep_params_st*, ubyte**) @nogc nothrow;
    void RSA_OAEP_PARAMS_free(rsa_oaep_params_st*) @nogc nothrow;
    struct rsa_oaep_params_st
    {
        X509_algor_st* hashFunc;
        X509_algor_st* maskGenFunc;
        X509_algor_st* pSourceFunc;
        X509_algor_st* maskHash;
    }
    alias RSA_OAEP_PARAMS = rsa_oaep_params_st;
    rsa_pss_params_st* d2i_RSA_PSS_PARAMS(rsa_pss_params_st**, const(ubyte)**, c_long) @nogc nothrow;
    rsa_pss_params_st* RSA_PSS_PARAMS_new() @nogc nothrow;
    int i2d_RSA_PSS_PARAMS(rsa_pss_params_st*, ubyte**) @nogc nothrow;
    void RSA_PSS_PARAMS_free(rsa_pss_params_st*) @nogc nothrow;
    rsa_st* d2i_RSAPrivateKey(rsa_st**, const(ubyte)**, c_long) @nogc nothrow;
    int i2d_RSAPrivateKey(const(rsa_st)*, ubyte**) @nogc nothrow;
    rsa_st* d2i_RSAPublicKey(rsa_st**, const(ubyte)**, c_long) @nogc nothrow;
    int i2d_RSAPublicKey(const(rsa_st)*, ubyte**) @nogc nothrow;
    int RSA_pkey_ctx_ctrl(evp_pkey_ctx_st*, int, int, int, void*) @nogc nothrow;
    const(rsa_meth_st)* RSA_PKCS1_OpenSSL() @nogc nothrow;
    int RSA_set_method(rsa_st*, const(rsa_meth_st)*) @nogc nothrow;
    const(rsa_meth_st)* RSA_get_method(const(rsa_st)*) @nogc nothrow;
    const(rsa_meth_st)* RSA_null_method() @nogc nothrow;
    const(rsa_meth_st)* RSA_get_default_method() @nogc nothrow;
    void RSA_set_default_method(const(rsa_meth_st)*) @nogc nothrow;
    int RSA_flags(const(rsa_st)*) @nogc nothrow;
    int RSA_up_ref(rsa_st*) @nogc nothrow;
    void RSA_free(rsa_st*) @nogc nothrow;
    int RSA_private_decrypt(int, const(ubyte)*, ubyte*, rsa_st*, int) @nogc nothrow;
    int RSA_public_decrypt(int, const(ubyte)*, ubyte*, rsa_st*, int) @nogc nothrow;
    int RSA_private_encrypt(int, const(ubyte)*, ubyte*, rsa_st*, int) @nogc nothrow;
    int RSA_public_encrypt(int, const(ubyte)*, ubyte*, rsa_st*, int) @nogc nothrow;
    int RSA_check_key_ex(const(rsa_st)*, bn_gencb_st*) @nogc nothrow;
    int RSA_check_key(const(rsa_st)*) @nogc nothrow;
    int RSA_X931_generate_key_ex(rsa_st*, int, const(bignum_st)*, bn_gencb_st*) @nogc nothrow;
    int RSA_X931_derive_ex(rsa_st*, bignum_st*, bignum_st*, bignum_st*, bignum_st*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, const(bignum_st)*, bn_gencb_st*) @nogc nothrow;
    int RSA_generate_multi_prime_key(rsa_st*, int, int, bignum_st*, bn_gencb_st*) @nogc nothrow;
    int RSA_generate_key_ex(rsa_st*, int, bignum_st*, bn_gencb_st*) @nogc nothrow;
    rsa_st* RSA_generate_key(int, c_ulong, void function(int, int, void*), void*) @nogc nothrow;
    engine_st* RSA_get0_engine(const(rsa_st)*) @nogc nothrow;
    int RSA_get_version(rsa_st*) @nogc nothrow;
    void RSA_set_flags(rsa_st*, int) @nogc nothrow;
    int RSA_test_flags(const(rsa_st)*, int) @nogc nothrow;
    void RSA_clear_flags(rsa_st*, int) @nogc nothrow;
    const(rsa_pss_params_st)* RSA_get0_pss_params(const(rsa_st)*) @nogc nothrow;
    const(bignum_st)* RSA_get0_iqmp(const(rsa_st)*) @nogc nothrow;
    const(bignum_st)* RSA_get0_dmq1(const(rsa_st)*) @nogc nothrow;
    const(bignum_st)* RSA_get0_dmp1(const(rsa_st)*) @nogc nothrow;
    const(bignum_st)* RSA_get0_q(const(rsa_st)*) @nogc nothrow;
    const(bignum_st)* RSA_get0_p(const(rsa_st)*) @nogc nothrow;
    const(bignum_st)* RSA_get0_d(const(rsa_st)*) @nogc nothrow;
    const(bignum_st)* RSA_get0_e(const(rsa_st)*) @nogc nothrow;
    const(bignum_st)* RSA_get0_n(const(rsa_st)*) @nogc nothrow;
    int RSA_get0_multi_prime_crt_params(const(rsa_st)*, const(bignum_st)**, const(bignum_st)**) @nogc nothrow;
    void RSA_get0_crt_params(const(rsa_st)*, const(bignum_st)**, const(bignum_st)**, const(bignum_st)**) @nogc nothrow;
    int RSA_get0_multi_prime_factors(const(rsa_st)*, const(bignum_st)**) @nogc nothrow;
    int RSA_get_multi_prime_extra_count(const(rsa_st)*) @nogc nothrow;
    void RSA_get0_factors(const(rsa_st)*, const(bignum_st)**, const(bignum_st)**) @nogc nothrow;
    void RSA_get0_key(const(rsa_st)*, const(bignum_st)**, const(bignum_st)**, const(bignum_st)**) @nogc nothrow;
    int RSA_set0_multi_prime_params(rsa_st*, bignum_st**, bignum_st**, bignum_st**, int) @nogc nothrow;
    int RSA_set0_crt_params(rsa_st*, bignum_st*, bignum_st*, bignum_st*) @nogc nothrow;
    int RSA_set0_factors(rsa_st*, bignum_st*, bignum_st*) @nogc nothrow;
    int RSA_set0_key(rsa_st*, bignum_st*, bignum_st*, bignum_st*) @nogc nothrow;
    int RSA_security_bits(const(rsa_st)*) @nogc nothrow;
    int RSA_size(const(rsa_st)*) @nogc nothrow;
    int RSA_bits(const(rsa_st)*) @nogc nothrow;
    rsa_st* RSA_new_method(engine_st*) @nogc nothrow;
    rsa_st* RSA_new() @nogc nothrow;
    int ERR_load_PKCS7_strings() @nogc nothrow;
    bio_st* BIO_new_PKCS7(bio_st*, pkcs7_st*) @nogc nothrow;
    pkcs7_st* SMIME_read_PKCS7(bio_st*, bio_st**) @nogc nothrow;
    int SMIME_write_PKCS7(bio_st*, pkcs7_st*, bio_st*, int) @nogc nothrow;
    int PKCS7_add1_attrib_digest(pkcs7_signer_info_st*, const(ubyte)*, int) @nogc nothrow;
    int PKCS7_add0_attrib_signing_time(pkcs7_signer_info_st*, asn1_string_st*) @nogc nothrow;
    int PKCS7_add_attrib_content_type(pkcs7_signer_info_st*, asn1_object_st*) @nogc nothrow;
    int PKCS7_simple_smimecap(stack_st_X509_ALGOR*, int, int) @nogc nothrow;
    stack_st_X509_ALGOR* PKCS7_get_smimecap(pkcs7_signer_info_st*) @nogc nothrow;
    int PKCS7_add_attrib_smimecap(pkcs7_signer_info_st*, stack_st_X509_ALGOR*) @nogc nothrow;
    int PKCS7_decrypt(pkcs7_st*, evp_pkey_st*, x509_st*, bio_st*, int) @nogc nothrow;
    pkcs7_st* PKCS7_encrypt(stack_st_X509*, bio_st*, const(evp_cipher_st)*, int) @nogc nothrow;
    stack_st_X509* PKCS7_get0_signers(pkcs7_st*, stack_st_X509*, int) @nogc nothrow;
    int PKCS7_verify(pkcs7_st*, stack_st_X509*, x509_store_st*, bio_st*, bio_st*, int) @nogc nothrow;
    int PKCS7_final(pkcs7_st*, bio_st*, int) @nogc nothrow;
    pkcs7_signer_info_st* PKCS7_sign_add_signer(pkcs7_st*, x509_st*, evp_pkey_st*, const(evp_md_st)*, int) @nogc nothrow;
    pkcs7_st* PKCS7_sign(x509_st*, evp_pkey_st*, stack_st_X509*, bio_st*, int) @nogc nothrow;
    int PKCS7_set_attributes(pkcs7_signer_info_st*, stack_st_X509_ATTRIBUTE*) @nogc nothrow;
    int PKCS7_set_signed_attributes(pkcs7_signer_info_st*, stack_st_X509_ATTRIBUTE*) @nogc nothrow;
    asn1_type_st* PKCS7_get_signed_attribute(pkcs7_signer_info_st*, int) @nogc nothrow;
    asn1_type_st* PKCS7_get_attribute(pkcs7_signer_info_st*, int) @nogc nothrow;
    int PKCS7_add_attribute(pkcs7_signer_info_st*, int, int, void*) @nogc nothrow;
    int PKCS7_add_signed_attribute(pkcs7_signer_info_st*, int, int, void*) @nogc nothrow;
    asn1_string_st* PKCS7_digest_from_attributes(stack_st_X509_ATTRIBUTE*) @nogc nothrow;
    pkcs7_issuer_and_serial_st* PKCS7_get_issuer_and_serial(pkcs7_st*, int) @nogc nothrow;
    int PKCS7_stream(ubyte***, pkcs7_st*) @nogc nothrow;
    int PKCS7_set_cipher(pkcs7_st*, const(evp_cipher_st)*) @nogc nothrow;
    int PKCS7_RECIP_INFO_set(pkcs7_recip_info_st*, x509_st*) @nogc nothrow;
    int PKCS7_add_recipient_info(pkcs7_st*, pkcs7_recip_info_st*) @nogc nothrow;
    void PKCS7_RECIP_INFO_get0_alg(pkcs7_recip_info_st*, X509_algor_st**) @nogc nothrow;
    void PKCS7_SIGNER_INFO_get0_algs(pkcs7_signer_info_st*, evp_pkey_st**, X509_algor_st**, X509_algor_st**) @nogc nothrow;
    pkcs7_recip_info_st* PKCS7_add_recipient(pkcs7_st*, x509_st*) @nogc nothrow;
    stack_st_PKCS7_SIGNER_INFO* PKCS7_get_signer_info(pkcs7_st*) @nogc nothrow;
    int PKCS7_set_digest(pkcs7_st*, const(evp_md_st)*) @nogc nothrow;
    x509_st* PKCS7_cert_from_signer_info(pkcs7_st*, pkcs7_signer_info_st*) @nogc nothrow;
    pkcs7_signer_info_st* PKCS7_add_signature(pkcs7_st*, x509_st*, evp_pkey_st*, const(evp_md_st)*) @nogc nothrow;
    bio_st* PKCS7_dataDecode(pkcs7_st*, evp_pkey_st*, bio_st*, x509_st*) @nogc nothrow;
    int PKCS7_dataFinal(pkcs7_st*, bio_st*) @nogc nothrow;
    bio_st* PKCS7_dataInit(pkcs7_st*, bio_st*) @nogc nothrow;
    int PKCS7_signatureVerify(bio_st*, pkcs7_st*, pkcs7_signer_info_st*, x509_st*) @nogc nothrow;
    int PKCS7_dataVerify(x509_store_st*, x509_store_ctx_st*, bio_st*, pkcs7_st*, pkcs7_signer_info_st*) @nogc nothrow;
    int PKCS7_content_new(pkcs7_st*, int) @nogc nothrow;
    int PKCS7_add_crl(pkcs7_st*, X509_crl_st*) @nogc nothrow;
    int PKCS7_add_certificate(pkcs7_st*, x509_st*) @nogc nothrow;
    int PKCS7_add_signer(pkcs7_st*, pkcs7_signer_info_st*) @nogc nothrow;
    int PKCS7_SIGNER_INFO_sign(pkcs7_signer_info_st*) @nogc nothrow;
    int PKCS7_SIGNER_INFO_set(pkcs7_signer_info_st*, x509_st*, evp_pkey_st*, const(evp_md_st)*) @nogc nothrow;
    int PKCS7_set_content(pkcs7_st*, pkcs7_st*) @nogc nothrow;
    int PKCS7_set0_type_other(pkcs7_st*, int, asn1_type_st*) @nogc nothrow;
    int PKCS7_set_type(pkcs7_st*, int) @nogc nothrow;
    c_long PKCS7_ctrl(pkcs7_st*, int, c_long, char*) @nogc nothrow;
    int PKCS7_print_ctx(bio_st*, pkcs7_st*, int, const(asn1_pctx_st)*) @nogc nothrow;
    int i2d_PKCS7_NDEF(pkcs7_st*, ubyte**) @nogc nothrow;
    pkcs7_st* PKCS7_new() @nogc nothrow;
    pkcs7_st* d2i_PKCS7(pkcs7_st**, const(ubyte)**, c_long) @nogc nothrow;
    int i2d_PKCS7(pkcs7_st*, ubyte**) @nogc nothrow;
    void PKCS7_free(pkcs7_st*) @nogc nothrow;
    pkcs7_encrypted_st* PKCS7_ENCRYPT_new() @nogc nothrow;
    pkcs7_encrypted_st* d2i_PKCS7_ENCRYPT(pkcs7_encrypted_st**, const(ubyte)**, c_long) @nogc nothrow;
    int i2d_PKCS7_ENCRYPT(pkcs7_encrypted_st*, ubyte**) @nogc nothrow;
    void PKCS7_ENCRYPT_free(pkcs7_encrypted_st*) @nogc nothrow;
    pkcs7_digest_st* d2i_PKCS7_DIGEST(pkcs7_digest_st**, const(ubyte)**, c_long) @nogc nothrow;
    pkcs7_digest_st* PKCS7_DIGEST_new() @nogc nothrow;
    int i2d_PKCS7_DIGEST(pkcs7_digest_st*, ubyte**) @nogc nothrow;
    void PKCS7_DIGEST_free(pkcs7_digest_st*) @nogc nothrow;
    pkcs7_signedandenveloped_st* d2i_PKCS7_SIGN_ENVELOPE(pkcs7_signedandenveloped_st**, const(ubyte)**, c_long) @nogc nothrow;
    pkcs7_signedandenveloped_st* PKCS7_SIGN_ENVELOPE_new() @nogc nothrow;
    int i2d_PKCS7_SIGN_ENVELOPE(pkcs7_signedandenveloped_st*, ubyte**) @nogc nothrow;
    void PKCS7_SIGN_ENVELOPE_free(pkcs7_signedandenveloped_st*) @nogc nothrow;
    pkcs7_enveloped_st* PKCS7_ENVELOPE_new() @nogc nothrow;
    pkcs7_enveloped_st* d2i_PKCS7_ENVELOPE(pkcs7_enveloped_st**, const(ubyte)**, c_long) @nogc nothrow;
    int i2d_PKCS7_ENVELOPE(pkcs7_enveloped_st*, ubyte**) @nogc nothrow;
    void PKCS7_ENVELOPE_free(pkcs7_enveloped_st*) @nogc nothrow;
    pkcs7_enc_content_st* d2i_PKCS7_ENC_CONTENT(pkcs7_enc_content_st**, const(ubyte)**, c_long) @nogc nothrow;
    pkcs7_enc_content_st* PKCS7_ENC_CONTENT_new() @nogc nothrow;
    int i2d_PKCS7_ENC_CONTENT(pkcs7_enc_content_st*, ubyte**) @nogc nothrow;
    void PKCS7_ENC_CONTENT_free(pkcs7_enc_content_st*) @nogc nothrow;
    pkcs7_signed_st* d2i_PKCS7_SIGNED(pkcs7_signed_st**, const(ubyte)**, c_long) @nogc nothrow;
    pkcs7_signed_st* PKCS7_SIGNED_new() @nogc nothrow;
    int i2d_PKCS7_SIGNED(pkcs7_signed_st*, ubyte**) @nogc nothrow;
    void PKCS7_SIGNED_free(pkcs7_signed_st*) @nogc nothrow;
    pkcs7_recip_info_st* d2i_PKCS7_RECIP_INFO(pkcs7_recip_info_st**, const(ubyte)**, c_long) @nogc nothrow;
    pkcs7_recip_info_st* PKCS7_RECIP_INFO_new() @nogc nothrow;
    int i2d_PKCS7_RECIP_INFO(pkcs7_recip_info_st*, ubyte**) @nogc nothrow;
    void PKCS7_RECIP_INFO_free(pkcs7_recip_info_st*) @nogc nothrow;
    pkcs7_signer_info_st* d2i_PKCS7_SIGNER_INFO(pkcs7_signer_info_st**, const(ubyte)**, c_long) @nogc nothrow;
    pkcs7_signer_info_st* PKCS7_SIGNER_INFO_new() @nogc nothrow;
    int i2d_PKCS7_SIGNER_INFO(pkcs7_signer_info_st*, ubyte**) @nogc nothrow;
    void PKCS7_SIGNER_INFO_free(pkcs7_signer_info_st*) @nogc nothrow;
    int PEM_write_bio_PKCS7_stream(bio_st*, pkcs7_st*, bio_st*, int) @nogc nothrow;
    int i2d_PKCS7_bio_stream(bio_st*, pkcs7_st*, bio_st*, int) @nogc nothrow;
    int i2d_PKCS7_bio(bio_st*, pkcs7_st*) @nogc nothrow;
    pkcs7_st* d2i_PKCS7_bio(bio_st*, pkcs7_st**) @nogc nothrow;
    pkcs7_st* PKCS7_dup(pkcs7_st*) @nogc nothrow;
    int i2d_PKCS7_fp(_IO_FILE*, pkcs7_st*) @nogc nothrow;
    pkcs7_st* d2i_PKCS7_fp(_IO_FILE*, pkcs7_st**) @nogc nothrow;
    int PKCS7_ISSUER_AND_SERIAL_digest(pkcs7_issuer_and_serial_st*, const(evp_md_st)*, ubyte*, uint*) @nogc nothrow;
    pkcs7_issuer_and_serial_st* d2i_PKCS7_ISSUER_AND_SERIAL(pkcs7_issuer_and_serial_st**, const(ubyte)**, c_long) @nogc nothrow;
    pkcs7_issuer_and_serial_st* PKCS7_ISSUER_AND_SERIAL_new() @nogc nothrow;
    int i2d_PKCS7_ISSUER_AND_SERIAL(pkcs7_issuer_and_serial_st*, ubyte**) @nogc nothrow;
    void PKCS7_ISSUER_AND_SERIAL_free(pkcs7_issuer_and_serial_st*) @nogc nothrow;
    static void sk_PKCS7_sort(stack_st_PKCS7*) @nogc nothrow;
    static pkcs7_st* sk_PKCS7_delete(stack_st_PKCS7*, int) @nogc nothrow;
    static void sk_PKCS7_free(stack_st_PKCS7*) @nogc nothrow;
    static void sk_PKCS7_zero(stack_st_PKCS7*) @nogc nothrow;
    static pkcs7_st* sk_PKCS7_delete_ptr(stack_st_PKCS7*, pkcs7_st*) @nogc nothrow;
    static int sk_PKCS7_push(stack_st_PKCS7*, pkcs7_st*) @nogc nothrow;
    static int sk_PKCS7_unshift(stack_st_PKCS7*, pkcs7_st*) @nogc nothrow;
    static pkcs7_st* sk_PKCS7_pop(stack_st_PKCS7*) @nogc nothrow;
    static int function(const(const(pkcs7_st)*)*, const(const(pkcs7_st)*)*) sk_PKCS7_set_cmp_func(stack_st_PKCS7*, int function(const(const(pkcs7_st)*)*, const(const(pkcs7_st)*)*)) @nogc nothrow;
    static stack_st_PKCS7* sk_PKCS7_deep_copy(const(stack_st_PKCS7)*, pkcs7_st* function(const(pkcs7_st)*), void function(pkcs7_st*)) @nogc nothrow;
    static stack_st_PKCS7* sk_PKCS7_dup(const(stack_st_PKCS7)*) @nogc nothrow;
    static int sk_PKCS7_is_sorted(const(stack_st_PKCS7)*) @nogc nothrow;
    static pkcs7_st* sk_PKCS7_value(const(stack_st_PKCS7)*, int) @nogc nothrow;
    static int sk_PKCS7_find_ex(stack_st_PKCS7*, pkcs7_st*) @nogc nothrow;
    static int sk_PKCS7_find(stack_st_PKCS7*, pkcs7_st*) @nogc nothrow;
    static pkcs7_st* sk_PKCS7_shift(stack_st_PKCS7*) @nogc nothrow;
    struct stack_st_PKCS7;
    alias sk_PKCS7_compfunc = int function(const(const(pkcs7_st)*)*, const(const(pkcs7_st)*)*);
    alias sk_PKCS7_freefunc = void function(pkcs7_st*);
    alias sk_PKCS7_copyfunc = pkcs7_st* function(const(pkcs7_st)*);
    static int sk_PKCS7_num(const(stack_st_PKCS7)*) @nogc nothrow;
    static void sk_PKCS7_pop_free(stack_st_PKCS7*, void function(pkcs7_st*)) @nogc nothrow;
    static int sk_PKCS7_insert(stack_st_PKCS7*, pkcs7_st*, int) @nogc nothrow;
    static pkcs7_st* sk_PKCS7_set(stack_st_PKCS7*, int, pkcs7_st*) @nogc nothrow;
    static int sk_PKCS7_reserve(stack_st_PKCS7*, int) @nogc nothrow;
    static stack_st_PKCS7* sk_PKCS7_new_reserve(int function(const(const(pkcs7_st)*)*, const(const(pkcs7_st)*)*), int) @nogc nothrow;
    static stack_st_PKCS7* sk_PKCS7_new(int function(const(const(pkcs7_st)*)*, const(const(pkcs7_st)*)*)) @nogc nothrow;
    static stack_st_PKCS7* sk_PKCS7_new_null() @nogc nothrow;
    alias PKCS7 = pkcs7_st;
    struct pkcs7_encrypted_st
    {
        asn1_string_st* version_;
        pkcs7_enc_content_st* enc_data;
    }
    alias PKCS7_ENCRYPT = pkcs7_encrypted_st;
    struct pkcs7_digest_st
    {
        asn1_string_st* version_;
        X509_algor_st* md;
        pkcs7_st* contents;
        asn1_string_st* digest;
    }
    alias PKCS7_DIGEST = pkcs7_digest_st;
    struct pkcs7_signedandenveloped_st
    {
        asn1_string_st* version_;
        stack_st_X509_ALGOR* md_algs;
        stack_st_X509* cert;
        stack_st_X509_CRL* crl;
        stack_st_PKCS7_SIGNER_INFO* signer_info;
        pkcs7_enc_content_st* enc_data;
        stack_st_PKCS7_RECIP_INFO* recipientinfo;
    }
    alias PKCS7_SIGN_ENVELOPE = pkcs7_signedandenveloped_st;
    struct pkcs7_enveloped_st
    {
        asn1_string_st* version_;
        stack_st_PKCS7_RECIP_INFO* recipientinfo;
        pkcs7_enc_content_st* enc_data;
    }
    alias PKCS7_ENVELOPE = pkcs7_enveloped_st;
    struct pkcs7_enc_content_st
    {
        asn1_object_st* content_type;
        X509_algor_st* algorithm;
        asn1_string_st* enc_data;
        const(evp_cipher_st)* cipher;
    }
    alias PKCS7_ENC_CONTENT = pkcs7_enc_content_st;
    struct pkcs7_st
    {
        ubyte* asn1;
        c_long length;
        int state;
        int detached;
        asn1_object_st* type;
        static union _Anonymous_28
        {
            char* ptr;
            asn1_string_st* data;
            pkcs7_signed_st* sign;
            pkcs7_enveloped_st* enveloped;
            pkcs7_signedandenveloped_st* signed_and_enveloped;
            pkcs7_digest_st* digest;
            pkcs7_encrypted_st* encrypted;
            asn1_type_st* other;
        }
        _Anonymous_28 d;
    }
    struct pkcs7_signed_st
    {
        asn1_string_st* version_;
        stack_st_X509_ALGOR* md_algs;
        stack_st_X509* cert;
        stack_st_X509_CRL* crl;
        stack_st_PKCS7_SIGNER_INFO* signer_info;
        pkcs7_st* contents;
    }
    alias PKCS7_SIGNED = pkcs7_signed_st;
    struct stack_st_PKCS7_RECIP_INFO;
    alias sk_PKCS7_RECIP_INFO_compfunc = int function(const(const(pkcs7_recip_info_st)*)*, const(const(pkcs7_recip_info_st)*)*);
    static pkcs7_recip_info_st* sk_PKCS7_RECIP_INFO_delete_ptr(stack_st_PKCS7_RECIP_INFO*, pkcs7_recip_info_st*) @nogc nothrow;
    alias sk_PKCS7_RECIP_INFO_freefunc = void function(pkcs7_recip_info_st*);
    static int sk_PKCS7_RECIP_INFO_push(stack_st_PKCS7_RECIP_INFO*, pkcs7_recip_info_st*) @nogc nothrow;
    alias sk_PKCS7_RECIP_INFO_copyfunc = pkcs7_recip_info_st* function(const(pkcs7_recip_info_st)*);
    static int sk_PKCS7_RECIP_INFO_unshift(stack_st_PKCS7_RECIP_INFO*, pkcs7_recip_info_st*) @nogc nothrow;
    static int sk_PKCS7_RECIP_INFO_num(const(stack_st_PKCS7_RECIP_INFO)*) @nogc nothrow;
    static pkcs7_recip_info_st* sk_PKCS7_RECIP_INFO_value(const(stack_st_PKCS7_RECIP_INFO)*, int) @nogc nothrow;
    static stack_st_PKCS7_RECIP_INFO* sk_PKCS7_RECIP_INFO_new(int function(const(const(pkcs7_recip_info_st)*)*, const(const(pkcs7_recip_info_st)*)*)) @nogc nothrow;
    static stack_st_PKCS7_RECIP_INFO* sk_PKCS7_RECIP_INFO_new_null() @nogc nothrow;
    static stack_st_PKCS7_RECIP_INFO* sk_PKCS7_RECIP_INFO_new_reserve(int function(const(const(pkcs7_recip_info_st)*)*, const(const(pkcs7_recip_info_st)*)*), int) @nogc nothrow;
    static int sk_PKCS7_RECIP_INFO_reserve(stack_st_PKCS7_RECIP_INFO*, int) @nogc nothrow;
    static void sk_PKCS7_RECIP_INFO_free(stack_st_PKCS7_RECIP_INFO*) @nogc nothrow;
    static void sk_PKCS7_RECIP_INFO_zero(stack_st_PKCS7_RECIP_INFO*) @nogc nothrow;
    static pkcs7_recip_info_st* sk_PKCS7_RECIP_INFO_delete(stack_st_PKCS7_RECIP_INFO*, int) @nogc nothrow;
    static pkcs7_recip_info_st* sk_PKCS7_RECIP_INFO_pop(stack_st_PKCS7_RECIP_INFO*) @nogc nothrow;
    static int function(const(const(pkcs7_recip_info_st)*)*, const(const(pkcs7_recip_info_st)*)*) sk_PKCS7_RECIP_INFO_set_cmp_func(stack_st_PKCS7_RECIP_INFO*, int function(const(const(pkcs7_recip_info_st)*)*, const(const(pkcs7_recip_info_st)*)*)) @nogc nothrow;
    static pkcs7_recip_info_st* sk_PKCS7_RECIP_INFO_shift(stack_st_PKCS7_RECIP_INFO*) @nogc nothrow;
    static void sk_PKCS7_RECIP_INFO_pop_free(stack_st_PKCS7_RECIP_INFO*, void function(pkcs7_recip_info_st*)) @nogc nothrow;
    static int sk_PKCS7_RECIP_INFO_insert(stack_st_PKCS7_RECIP_INFO*, pkcs7_recip_info_st*, int) @nogc nothrow;
    static pkcs7_recip_info_st* sk_PKCS7_RECIP_INFO_set(stack_st_PKCS7_RECIP_INFO*, int, pkcs7_recip_info_st*) @nogc nothrow;
    static int sk_PKCS7_RECIP_INFO_find(stack_st_PKCS7_RECIP_INFO*, pkcs7_recip_info_st*) @nogc nothrow;
    static int sk_PKCS7_RECIP_INFO_find_ex(stack_st_PKCS7_RECIP_INFO*, pkcs7_recip_info_st*) @nogc nothrow;
    static void sk_PKCS7_RECIP_INFO_sort(stack_st_PKCS7_RECIP_INFO*) @nogc nothrow;
    static int sk_PKCS7_RECIP_INFO_is_sorted(const(stack_st_PKCS7_RECIP_INFO)*) @nogc nothrow;
    static stack_st_PKCS7_RECIP_INFO* sk_PKCS7_RECIP_INFO_dup(const(stack_st_PKCS7_RECIP_INFO)*) @nogc nothrow;
    static stack_st_PKCS7_RECIP_INFO* sk_PKCS7_RECIP_INFO_deep_copy(const(stack_st_PKCS7_RECIP_INFO)*, pkcs7_recip_info_st* function(const(pkcs7_recip_info_st)*), void function(pkcs7_recip_info_st*)) @nogc nothrow;
    struct pkcs7_recip_info_st
    {
        asn1_string_st* version_;
        pkcs7_issuer_and_serial_st* issuer_and_serial;
        X509_algor_st* key_enc_algor;
        asn1_string_st* enc_key;
        x509_st* cert;
    }
    alias PKCS7_RECIP_INFO = pkcs7_recip_info_st;
    static stack_st_PKCS7_SIGNER_INFO* sk_PKCS7_SIGNER_INFO_new(int function(const(const(pkcs7_signer_info_st)*)*, const(const(pkcs7_signer_info_st)*)*)) @nogc nothrow;
    static pkcs7_signer_info_st* sk_PKCS7_SIGNER_INFO_set(stack_st_PKCS7_SIGNER_INFO*, int, pkcs7_signer_info_st*) @nogc nothrow;
    static int sk_PKCS7_SIGNER_INFO_insert(stack_st_PKCS7_SIGNER_INFO*, pkcs7_signer_info_st*, int) @nogc nothrow;
    static void sk_PKCS7_SIGNER_INFO_pop_free(stack_st_PKCS7_SIGNER_INFO*, void function(pkcs7_signer_info_st*)) @nogc nothrow;
    static pkcs7_signer_info_st* sk_PKCS7_SIGNER_INFO_shift(stack_st_PKCS7_SIGNER_INFO*) @nogc nothrow;
    static pkcs7_signer_info_st* sk_PKCS7_SIGNER_INFO_pop(stack_st_PKCS7_SIGNER_INFO*) @nogc nothrow;
    static int sk_PKCS7_SIGNER_INFO_unshift(stack_st_PKCS7_SIGNER_INFO*, pkcs7_signer_info_st*) @nogc nothrow;
    static int sk_PKCS7_SIGNER_INFO_push(stack_st_PKCS7_SIGNER_INFO*, pkcs7_signer_info_st*) @nogc nothrow;
    static pkcs7_signer_info_st* sk_PKCS7_SIGNER_INFO_delete_ptr(stack_st_PKCS7_SIGNER_INFO*, pkcs7_signer_info_st*) @nogc nothrow;
    static pkcs7_signer_info_st* sk_PKCS7_SIGNER_INFO_delete(stack_st_PKCS7_SIGNER_INFO*, int) @nogc nothrow;
    struct stack_st_PKCS7_SIGNER_INFO;
    alias sk_PKCS7_SIGNER_INFO_compfunc = int function(const(const(pkcs7_signer_info_st)*)*, const(const(pkcs7_signer_info_st)*)*);
    alias sk_PKCS7_SIGNER_INFO_freefunc = void function(pkcs7_signer_info_st*);
    alias sk_PKCS7_SIGNER_INFO_copyfunc = pkcs7_signer_info_st* function(const(pkcs7_signer_info_st)*);
    static int sk_PKCS7_SIGNER_INFO_num(const(stack_st_PKCS7_SIGNER_INFO)*) @nogc nothrow;
    static pkcs7_signer_info_st* sk_PKCS7_SIGNER_INFO_value(const(stack_st_PKCS7_SIGNER_INFO)*, int) @nogc nothrow;
    static void sk_PKCS7_SIGNER_INFO_free(stack_st_PKCS7_SIGNER_INFO*) @nogc nothrow;
    static stack_st_PKCS7_SIGNER_INFO* sk_PKCS7_SIGNER_INFO_new_null() @nogc nothrow;
    static stack_st_PKCS7_SIGNER_INFO* sk_PKCS7_SIGNER_INFO_new_reserve(int function(const(const(pkcs7_signer_info_st)*)*, const(const(pkcs7_signer_info_st)*)*), int) @nogc nothrow;
    static int sk_PKCS7_SIGNER_INFO_reserve(stack_st_PKCS7_SIGNER_INFO*, int) @nogc nothrow;
    static int sk_PKCS7_SIGNER_INFO_find(stack_st_PKCS7_SIGNER_INFO*, pkcs7_signer_info_st*) @nogc nothrow;
    static int function(const(const(pkcs7_signer_info_st)*)*, const(const(pkcs7_signer_info_st)*)*) sk_PKCS7_SIGNER_INFO_set_cmp_func(stack_st_PKCS7_SIGNER_INFO*, int function(const(const(pkcs7_signer_info_st)*)*, const(const(pkcs7_signer_info_st)*)*)) @nogc nothrow;
    static stack_st_PKCS7_SIGNER_INFO* sk_PKCS7_SIGNER_INFO_deep_copy(const(stack_st_PKCS7_SIGNER_INFO)*, pkcs7_signer_info_st* function(const(pkcs7_signer_info_st)*), void function(pkcs7_signer_info_st*)) @nogc nothrow;
    static stack_st_PKCS7_SIGNER_INFO* sk_PKCS7_SIGNER_INFO_dup(const(stack_st_PKCS7_SIGNER_INFO)*) @nogc nothrow;
    static int sk_PKCS7_SIGNER_INFO_is_sorted(const(stack_st_PKCS7_SIGNER_INFO)*) @nogc nothrow;
    static void sk_PKCS7_SIGNER_INFO_sort(stack_st_PKCS7_SIGNER_INFO*) @nogc nothrow;
    static int sk_PKCS7_SIGNER_INFO_find_ex(stack_st_PKCS7_SIGNER_INFO*, pkcs7_signer_info_st*) @nogc nothrow;
    static void sk_PKCS7_SIGNER_INFO_zero(stack_st_PKCS7_SIGNER_INFO*) @nogc nothrow;
    struct pkcs7_signer_info_st
    {
        asn1_string_st* version_;
        pkcs7_issuer_and_serial_st* issuer_and_serial;
        X509_algor_st* digest_alg;
        stack_st_X509_ATTRIBUTE* auth_attr;
        X509_algor_st* digest_enc_alg;
        asn1_string_st* enc_digest;
        stack_st_X509_ATTRIBUTE* unauth_attr;
        evp_pkey_st* pkey;
    }
    alias PKCS7_SIGNER_INFO = pkcs7_signer_info_st;
    struct pkcs7_issuer_and_serial_st
    {
        X509_name_st* issuer;
        asn1_string_st* serial;
    }
    alias PKCS7_ISSUER_AND_SERIAL = pkcs7_issuer_and_serial_st;
    int ERR_load_PKCS12_strings() @nogc nothrow;
    int PKCS12_newpass(PKCS12_st*, const(char)*, const(char)*) @nogc nothrow;
    PKCS12_st* d2i_PKCS12_fp(_IO_FILE*, PKCS12_st**) @nogc nothrow;
    PKCS12_st* d2i_PKCS12_bio(bio_st*, PKCS12_st**) @nogc nothrow;
    int i2d_PKCS12_fp(_IO_FILE*, PKCS12_st*) @nogc nothrow;
    int i2d_PKCS12_bio(bio_st*, PKCS12_st*) @nogc nothrow;
    PKCS12_st* PKCS12_add_safes(stack_st_PKCS7*, int) @nogc nothrow;
    int PKCS12_add_safe(stack_st_PKCS7**, stack_st_PKCS12_SAFEBAG*, int, int, const(char)*) @nogc nothrow;
    PKCS12_SAFEBAG_st* PKCS12_add_key(stack_st_PKCS12_SAFEBAG**, evp_pkey_st*, int, int, int, const(char)*) @nogc nothrow;
    PKCS12_SAFEBAG_st* PKCS12_add_cert(stack_st_PKCS12_SAFEBAG**, x509_st*) @nogc nothrow;
    PKCS12_st* PKCS12_create(const(char)*, const(char)*, evp_pkey_st*, x509_st*, stack_st_X509*, int, int, int, int, int) @nogc nothrow;
    int PKCS12_parse(PKCS12_st*, const(char)*, evp_pkey_st**, x509_st**, stack_st_X509**) @nogc nothrow;
    void PKCS12_PBE_add() @nogc nothrow;
    pkcs12_bag_st* PKCS12_BAGS_new() @nogc nothrow;
    pkcs12_bag_st* d2i_PKCS12_BAGS(pkcs12_bag_st**, const(ubyte)**, c_long) @nogc nothrow;
    void PKCS12_BAGS_free(pkcs12_bag_st*) @nogc nothrow;
    int i2d_PKCS12_BAGS(pkcs12_bag_st*, ubyte**) @nogc nothrow;
    PKCS12_SAFEBAG_st* d2i_PKCS12_SAFEBAG(PKCS12_SAFEBAG_st**, const(ubyte)**, c_long) @nogc nothrow;
    PKCS12_SAFEBAG_st* PKCS12_SAFEBAG_new() @nogc nothrow;
    int i2d_PKCS12_SAFEBAG(PKCS12_SAFEBAG_st*, ubyte**) @nogc nothrow;
    void PKCS12_SAFEBAG_free(PKCS12_SAFEBAG_st*) @nogc nothrow;
    PKCS12_MAC_DATA_st* PKCS12_MAC_DATA_new() @nogc nothrow;
    PKCS12_MAC_DATA_st* d2i_PKCS12_MAC_DATA(PKCS12_MAC_DATA_st**, const(ubyte)**, c_long) @nogc nothrow;
    void PKCS12_MAC_DATA_free(PKCS12_MAC_DATA_st*) @nogc nothrow;
    int i2d_PKCS12_MAC_DATA(PKCS12_MAC_DATA_st*, ubyte**) @nogc nothrow;
    PKCS12_st* d2i_PKCS12(PKCS12_st**, const(ubyte)**, c_long) @nogc nothrow;
    PKCS12_st* PKCS12_new() @nogc nothrow;
    int i2d_PKCS12(PKCS12_st*, ubyte**) @nogc nothrow;
    void PKCS12_free(PKCS12_st*) @nogc nothrow;
    char* OPENSSL_uni2utf8(const(ubyte)*, int) @nogc nothrow;
    ubyte* OPENSSL_utf82uni(const(char)*, int, ubyte**, int*) @nogc nothrow;
    char* OPENSSL_uni2asc(const(ubyte)*, int) @nogc nothrow;
    ubyte* OPENSSL_asc2uni(const(char)*, int, ubyte**, int*) @nogc nothrow;
    int PKCS12_setup_mac(PKCS12_st*, int, ubyte*, int, const(evp_md_st)*) @nogc nothrow;
    int PKCS12_set_mac(PKCS12_st*, const(char)*, int, ubyte*, int, int, const(evp_md_st)*) @nogc nothrow;
    int PKCS12_verify_mac(PKCS12_st*, const(char)*, int) @nogc nothrow;
    int PKCS12_gen_mac(PKCS12_st*, const(char)*, int, ubyte*, uint*) @nogc nothrow;
    int PKCS12_PBE_keyivgen(evp_cipher_ctx_st*, const(char)*, int, asn1_type_st*, const(evp_cipher_st)*, const(evp_md_st)*, int) @nogc nothrow;
    int PKCS12_key_gen_utf8(const(char)*, int, ubyte*, int, int, int, int, ubyte*, const(evp_md_st)*) @nogc nothrow;
    int PKCS12_key_gen_uni(ubyte*, int, ubyte*, int, int, int, int, ubyte*, const(evp_md_st)*) @nogc nothrow;
    int PKCS12_key_gen_asc(const(char)*, int, ubyte*, int, int, int, int, ubyte*, const(evp_md_st)*) @nogc nothrow;
    PKCS12_st* PKCS12_init(int) @nogc nothrow;
    asn1_string_st* PKCS12_item_i2d_encrypt(X509_algor_st*, const(ASN1_ITEM_st)*, const(char)*, int, void*, int) @nogc nothrow;
    void* PKCS12_item_decrypt_d2i(const(X509_algor_st)*, const(ASN1_ITEM_st)*, const(char)*, int, const(asn1_string_st)*, int) @nogc nothrow;
    ubyte* PKCS12_pbe_crypt(const(X509_algor_st)*, const(char)*, int, const(ubyte)*, int, ubyte**, int*, int) @nogc nothrow;
    const(stack_st_X509_ATTRIBUTE)* PKCS12_SAFEBAG_get0_attrs(const(PKCS12_SAFEBAG_st)*) @nogc nothrow;
    char* PKCS12_get_friendlyname(PKCS12_SAFEBAG_st*) @nogc nothrow;
    asn1_type_st* PKCS12_get_attr_gen(const(stack_st_X509_ATTRIBUTE)*, int) @nogc nothrow;
    int PKCS8_add_keyusage(pkcs8_priv_key_info_st*, int) @nogc nothrow;
    int PKCS12_add_friendlyname_uni(PKCS12_SAFEBAG_st*, const(ubyte)*, int) @nogc nothrow;
    int PKCS12_add_CSPName_asc(PKCS12_SAFEBAG_st*, const(char)*, int) @nogc nothrow;
    int PKCS12_add_friendlyname_utf8(PKCS12_SAFEBAG_st*, const(char)*, int) @nogc nothrow;
    int PKCS12_add_friendlyname_asc(PKCS12_SAFEBAG_st*, const(char)*, int) @nogc nothrow;
    int PKCS12_add_localkeyid(PKCS12_SAFEBAG_st*, ubyte*, int) @nogc nothrow;
    stack_st_PKCS7* PKCS12_unpack_authsafes(const(PKCS12_st)*) @nogc nothrow;
    int PKCS12_pack_authsafes(PKCS12_st*, stack_st_PKCS7*) @nogc nothrow;
    stack_st_PKCS12_SAFEBAG* PKCS12_unpack_p7encdata(pkcs7_st*, const(char)*, int) @nogc nothrow;
    pkcs7_st* PKCS12_pack_p7encdata(int, const(char)*, int, ubyte*, int, int, stack_st_PKCS12_SAFEBAG*) @nogc nothrow;
    stack_st_PKCS12_SAFEBAG* PKCS12_unpack_p7data(pkcs7_st*) @nogc nothrow;
    pkcs7_st* PKCS12_pack_p7data(stack_st_PKCS12_SAFEBAG*) @nogc nothrow;
    X509_sig_st* PKCS8_set0_pbe(const(char)*, int, pkcs8_priv_key_info_st*, X509_algor_st*) @nogc nothrow;
    X509_sig_st* PKCS8_encrypt(int, const(evp_cipher_st)*, const(char)*, int, ubyte*, int, int, pkcs8_priv_key_info_st*) @nogc nothrow;
    pkcs8_priv_key_info_st* PKCS12_decrypt_skey(const(PKCS12_SAFEBAG_st)*, const(char)*, int) @nogc nothrow;
    pkcs8_priv_key_info_st* PKCS8_decrypt(const(X509_sig_st)*, const(char)*, int) @nogc nothrow;
    PKCS12_SAFEBAG_st* PKCS12_item_pack_safebag(void*, const(ASN1_ITEM_st)*, int, int) @nogc nothrow;
    PKCS12_SAFEBAG_st* PKCS12_SAFEBAG_create_pkcs8_encrypt(int, const(char)*, int, ubyte*, int, int, pkcs8_priv_key_info_st*) @nogc nothrow;
    PKCS12_SAFEBAG_st* PKCS12_SAFEBAG_create0_pkcs8(X509_sig_st*) @nogc nothrow;
    PKCS12_SAFEBAG_st* PKCS12_SAFEBAG_create0_p8inf(pkcs8_priv_key_info_st*) @nogc nothrow;
    PKCS12_SAFEBAG_st* PKCS12_SAFEBAG_create_crl(X509_crl_st*) @nogc nothrow;
    PKCS12_SAFEBAG_st* PKCS12_SAFEBAG_create_cert(x509_st*) @nogc nothrow;
    const(X509_sig_st)* PKCS12_SAFEBAG_get0_pkcs8(const(PKCS12_SAFEBAG_st)*) @nogc nothrow;
    const(pkcs8_priv_key_info_st)* PKCS12_SAFEBAG_get0_p8inf(const(PKCS12_SAFEBAG_st)*) @nogc nothrow;
    const(stack_st_PKCS12_SAFEBAG)* PKCS12_SAFEBAG_get0_safes(const(PKCS12_SAFEBAG_st)*) @nogc nothrow;
    X509_crl_st* PKCS12_SAFEBAG_get1_crl(const(PKCS12_SAFEBAG_st)*) @nogc nothrow;
    x509_st* PKCS12_SAFEBAG_get1_cert(const(PKCS12_SAFEBAG_st)*) @nogc nothrow;
    int PKCS12_SAFEBAG_get_bag_nid(const(PKCS12_SAFEBAG_st)*) @nogc nothrow;
    int PKCS12_SAFEBAG_get_nid(const(PKCS12_SAFEBAG_st)*) @nogc nothrow;
    const(asn1_object_st)* PKCS12_SAFEBAG_get0_type(const(PKCS12_SAFEBAG_st)*) @nogc nothrow;
    const(asn1_type_st)* PKCS12_SAFEBAG_get0_attr(const(PKCS12_SAFEBAG_st)*, int) @nogc nothrow;
    void PKCS12_get0_mac(const(asn1_string_st)**, const(X509_algor_st)**, const(asn1_string_st)**, const(asn1_string_st)**, const(PKCS12_st)*) @nogc nothrow;
    int PKCS12_mac_present(const(PKCS12_st)*) @nogc nothrow;
    asn1_type_st* PKCS8_get_attr(pkcs8_priv_key_info_st*, int) @nogc nothrow;
    asn1_type_st* PKCS12_get_attr(const(PKCS12_SAFEBAG_st)*, int) @nogc nothrow;
    struct pkcs12_bag_st;
    alias PKCS12_BAGS = pkcs12_bag_st;
    static int sk_PKCS12_SAFEBAG_find_ex(stack_st_PKCS12_SAFEBAG*, PKCS12_SAFEBAG_st*) @nogc nothrow;
    static int sk_PKCS12_SAFEBAG_find(stack_st_PKCS12_SAFEBAG*, PKCS12_SAFEBAG_st*) @nogc nothrow;
    static PKCS12_SAFEBAG_st* sk_PKCS12_SAFEBAG_set(stack_st_PKCS12_SAFEBAG*, int, PKCS12_SAFEBAG_st*) @nogc nothrow;
    static int sk_PKCS12_SAFEBAG_insert(stack_st_PKCS12_SAFEBAG*, PKCS12_SAFEBAG_st*, int) @nogc nothrow;
    static void sk_PKCS12_SAFEBAG_pop_free(stack_st_PKCS12_SAFEBAG*, void function(PKCS12_SAFEBAG_st*)) @nogc nothrow;
    static PKCS12_SAFEBAG_st* sk_PKCS12_SAFEBAG_shift(stack_st_PKCS12_SAFEBAG*) @nogc nothrow;
    static PKCS12_SAFEBAG_st* sk_PKCS12_SAFEBAG_pop(stack_st_PKCS12_SAFEBAG*) @nogc nothrow;
    static stack_st_PKCS12_SAFEBAG* sk_PKCS12_SAFEBAG_dup(const(stack_st_PKCS12_SAFEBAG)*) @nogc nothrow;
    static int sk_PKCS12_SAFEBAG_unshift(stack_st_PKCS12_SAFEBAG*, PKCS12_SAFEBAG_st*) @nogc nothrow;
    static int sk_PKCS12_SAFEBAG_push(stack_st_PKCS12_SAFEBAG*, PKCS12_SAFEBAG_st*) @nogc nothrow;
    static int sk_PKCS12_SAFEBAG_is_sorted(const(stack_st_PKCS12_SAFEBAG)*) @nogc nothrow;
    static PKCS12_SAFEBAG_st* sk_PKCS12_SAFEBAG_delete_ptr(stack_st_PKCS12_SAFEBAG*, PKCS12_SAFEBAG_st*) @nogc nothrow;
    static stack_st_PKCS12_SAFEBAG* sk_PKCS12_SAFEBAG_deep_copy(const(stack_st_PKCS12_SAFEBAG)*, PKCS12_SAFEBAG_st* function(const(PKCS12_SAFEBAG_st)*), void function(PKCS12_SAFEBAG_st*)) @nogc nothrow;
    static void sk_PKCS12_SAFEBAG_sort(stack_st_PKCS12_SAFEBAG*) @nogc nothrow;
    alias sk_PKCS12_SAFEBAG_copyfunc = PKCS12_SAFEBAG_st* function(const(PKCS12_SAFEBAG_st)*);
    static int sk_PKCS12_SAFEBAG_reserve(stack_st_PKCS12_SAFEBAG*, int) @nogc nothrow;
    static int function(const(const(PKCS12_SAFEBAG_st)*)*, const(const(PKCS12_SAFEBAG_st)*)*) sk_PKCS12_SAFEBAG_set_cmp_func(stack_st_PKCS12_SAFEBAG*, int function(const(const(PKCS12_SAFEBAG_st)*)*, const(const(PKCS12_SAFEBAG_st)*)*)) @nogc nothrow;
    static void sk_PKCS12_SAFEBAG_zero(stack_st_PKCS12_SAFEBAG*) @nogc nothrow;
    static stack_st_PKCS12_SAFEBAG* sk_PKCS12_SAFEBAG_new_reserve(int function(const(const(PKCS12_SAFEBAG_st)*)*, const(const(PKCS12_SAFEBAG_st)*)*), int) @nogc nothrow;
    static stack_st_PKCS12_SAFEBAG* sk_PKCS12_SAFEBAG_new_null() @nogc nothrow;
    static stack_st_PKCS12_SAFEBAG* sk_PKCS12_SAFEBAG_new(int function(const(const(PKCS12_SAFEBAG_st)*)*, const(const(PKCS12_SAFEBAG_st)*)*)) @nogc nothrow;
    static PKCS12_SAFEBAG_st* sk_PKCS12_SAFEBAG_value(const(stack_st_PKCS12_SAFEBAG)*, int) @nogc nothrow;
    static int sk_PKCS12_SAFEBAG_num(const(stack_st_PKCS12_SAFEBAG)*) @nogc nothrow;
    static void sk_PKCS12_SAFEBAG_free(stack_st_PKCS12_SAFEBAG*) @nogc nothrow;
    alias sk_PKCS12_SAFEBAG_freefunc = void function(PKCS12_SAFEBAG_st*);
    alias sk_PKCS12_SAFEBAG_compfunc = int function(const(const(PKCS12_SAFEBAG_st)*)*, const(const(PKCS12_SAFEBAG_st)*)*);
    struct stack_st_PKCS12_SAFEBAG;
    static PKCS12_SAFEBAG_st* sk_PKCS12_SAFEBAG_delete(stack_st_PKCS12_SAFEBAG*, int) @nogc nothrow;
    struct PKCS12_SAFEBAG_st;
    alias PKCS12_SAFEBAG = PKCS12_SAFEBAG_st;
    struct PKCS12_st;
    alias PKCS12 = PKCS12_st;
    struct PKCS12_MAC_DATA_st;
    alias PKCS12_MAC_DATA = PKCS12_MAC_DATA_st;
    int ERR_load_PEM_strings() @nogc nothrow;
    int i2b_PVK_bio(bio_st*, evp_pkey_st*, int, int function(char*, int, int, void*), void*) @nogc nothrow;
    evp_pkey_st* b2i_PVK_bio(bio_st*, int function(char*, int, int, void*), void*) @nogc nothrow;
    int i2b_PublicKey_bio(bio_st*, evp_pkey_st*) @nogc nothrow;
    int i2b_PrivateKey_bio(bio_st*, evp_pkey_st*) @nogc nothrow;
    evp_pkey_st* b2i_PublicKey_bio(bio_st*) @nogc nothrow;
    evp_pkey_st* b2i_PrivateKey_bio(bio_st*) @nogc nothrow;
    evp_pkey_st* b2i_PublicKey(const(ubyte)**, c_long) @nogc nothrow;
    evp_pkey_st* b2i_PrivateKey(const(ubyte)**, c_long) @nogc nothrow;
    int PEM_write_bio_Parameters(bio_st*, evp_pkey_st*) @nogc nothrow;
    evp_pkey_st* PEM_read_bio_Parameters(bio_st*, evp_pkey_st**) @nogc nothrow;
    int PEM_write_PKCS8PrivateKey(_IO_FILE*, evp_pkey_st*, const(evp_cipher_st)*, char*, int, int function(char*, int, int, void*), void*) @nogc nothrow;
    evp_pkey_st* d2i_PKCS8PrivateKey_fp(_IO_FILE*, evp_pkey_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_write_PKCS8PrivateKey_nid(_IO_FILE*, evp_pkey_st*, int, char*, int, int function(char*, int, int, void*), void*) @nogc nothrow;
    int i2d_PKCS8PrivateKey_nid_fp(_IO_FILE*, evp_pkey_st*, int, char*, int, int function(char*, int, int, void*), void*) @nogc nothrow;
    int i2d_PKCS8PrivateKey_fp(_IO_FILE*, evp_pkey_st*, const(evp_cipher_st)*, char*, int, int function(char*, int, int, void*), void*) @nogc nothrow;
    evp_pkey_st* d2i_PKCS8PrivateKey_bio(bio_st*, evp_pkey_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    int i2d_PKCS8PrivateKey_nid_bio(bio_st*, evp_pkey_st*, int, char*, int, int function(char*, int, int, void*), void*) @nogc nothrow;
    int i2d_PKCS8PrivateKey_bio(bio_st*, evp_pkey_st*, const(evp_cipher_st)*, char*, int, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_write_bio_PKCS8PrivateKey(bio_st*, evp_pkey_st*, const(evp_cipher_st)*, char*, int, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_write_bio_PKCS8PrivateKey_nid(bio_st*, evp_pkey_st*, int, char*, int, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_write_bio_PrivateKey_traditional(bio_st*, evp_pkey_st*, const(evp_cipher_st)*, ubyte*, int, int function(char*, int, int, void*), void*) @nogc nothrow;
    evp_pkey_st* PEM_read_bio_PUBKEY(bio_st*, evp_pkey_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    evp_pkey_st* PEM_read_PUBKEY(_IO_FILE*, evp_pkey_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_write_bio_PUBKEY(bio_st*, evp_pkey_st*) @nogc nothrow;
    int PEM_write_PUBKEY(_IO_FILE*, evp_pkey_st*) @nogc nothrow;
    evp_pkey_st* PEM_read_PrivateKey(_IO_FILE*, evp_pkey_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    evp_pkey_st* PEM_read_bio_PrivateKey(bio_st*, evp_pkey_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_write_PrivateKey(_IO_FILE*, evp_pkey_st*, const(evp_cipher_st)*, ubyte*, int, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_write_bio_PrivateKey(bio_st*, evp_pkey_st*, const(evp_cipher_st)*, ubyte*, int, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_write_DHxparams(_IO_FILE*, const(dh_st)*) @nogc nothrow;
    int PEM_write_bio_DHxparams(bio_st*, const(dh_st)*) @nogc nothrow;
    dh_st* PEM_read_DHparams(_IO_FILE*, dh_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    dh_st* PEM_read_bio_DHparams(bio_st*, dh_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_write_DHparams(_IO_FILE*, const(dh_st)*) @nogc nothrow;
    int PEM_write_bio_DHparams(bio_st*, const(dh_st)*) @nogc nothrow;
    ec_key_st* PEM_read_EC_PUBKEY(_IO_FILE*, ec_key_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    ec_key_st* PEM_read_bio_EC_PUBKEY(bio_st*, ec_key_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_write_EC_PUBKEY(_IO_FILE*, ec_key_st*) @nogc nothrow;
    int PEM_write_bio_EC_PUBKEY(bio_st*, ec_key_st*) @nogc nothrow;
    ec_key_st* PEM_read_ECPrivateKey(_IO_FILE*, ec_key_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    ec_key_st* PEM_read_bio_ECPrivateKey(bio_st*, ec_key_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_write_ECPrivateKey(_IO_FILE*, ec_key_st*, const(evp_cipher_st)*, ubyte*, int, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_write_bio_ECPrivateKey(bio_st*, ec_key_st*, const(evp_cipher_st)*, ubyte*, int, int function(char*, int, int, void*), void*) @nogc nothrow;
    ec_group_st* PEM_read_ECPKParameters(_IO_FILE*, ec_group_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    ec_group_st* PEM_read_bio_ECPKParameters(bio_st*, ec_group_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_write_ECPKParameters(_IO_FILE*, const(ec_group_st)*) @nogc nothrow;
    int PEM_write_bio_ECPKParameters(bio_st*, const(ec_group_st)*) @nogc nothrow;
    dsa_st* PEM_read_DSAparams(_IO_FILE*, dsa_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    dsa_st* PEM_read_bio_DSAparams(bio_st*, dsa_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_write_bio_DSAparams(bio_st*, const(dsa_st)*) @nogc nothrow;
    int PEM_write_DSAparams(_IO_FILE*, const(dsa_st)*) @nogc nothrow;
    dsa_st* PEM_read_DSA_PUBKEY(_IO_FILE*, dsa_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    dsa_st* PEM_read_bio_DSA_PUBKEY(bio_st*, dsa_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_write_bio_DSA_PUBKEY(bio_st*, dsa_st*) @nogc nothrow;
    int PEM_write_DSA_PUBKEY(_IO_FILE*, dsa_st*) @nogc nothrow;
    dsa_st* PEM_read_bio_DSAPrivateKey(bio_st*, dsa_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    dsa_st* PEM_read_DSAPrivateKey(_IO_FILE*, dsa_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_write_bio_DSAPrivateKey(bio_st*, dsa_st*, const(evp_cipher_st)*, ubyte*, int, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_write_DSAPrivateKey(_IO_FILE*, dsa_st*, const(evp_cipher_st)*, ubyte*, int, int function(char*, int, int, void*), void*) @nogc nothrow;
    rsa_st* PEM_read_bio_RSA_PUBKEY(bio_st*, rsa_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    rsa_st* PEM_read_RSA_PUBKEY(_IO_FILE*, rsa_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_write_bio_RSA_PUBKEY(bio_st*, rsa_st*) @nogc nothrow;
    int PEM_write_RSA_PUBKEY(_IO_FILE*, rsa_st*) @nogc nothrow;
    rsa_st* PEM_read_bio_RSAPublicKey(bio_st*, rsa_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    rsa_st* PEM_read_RSAPublicKey(_IO_FILE*, rsa_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_write_bio_RSAPublicKey(bio_st*, const(rsa_st)*) @nogc nothrow;
    int PEM_write_RSAPublicKey(_IO_FILE*, const(rsa_st)*) @nogc nothrow;
    rsa_st* PEM_read_RSAPrivateKey(_IO_FILE*, rsa_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    rsa_st* PEM_read_bio_RSAPrivateKey(bio_st*, rsa_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_write_RSAPrivateKey(_IO_FILE*, rsa_st*, const(evp_cipher_st)*, ubyte*, int, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_write_bio_RSAPrivateKey(bio_st*, rsa_st*, const(evp_cipher_st)*, ubyte*, int, int function(char*, int, int, void*), void*) @nogc nothrow;
    pkcs8_priv_key_info_st* PEM_read_bio_PKCS8_PRIV_KEY_INFO(bio_st*, pkcs8_priv_key_info_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    pkcs8_priv_key_info_st* PEM_read_PKCS8_PRIV_KEY_INFO(_IO_FILE*, pkcs8_priv_key_info_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_write_bio_PKCS8_PRIV_KEY_INFO(bio_st*, pkcs8_priv_key_info_st*) @nogc nothrow;
    int PEM_write_PKCS8_PRIV_KEY_INFO(_IO_FILE*, pkcs8_priv_key_info_st*) @nogc nothrow;
    X509_sig_st* PEM_read_PKCS8(_IO_FILE*, X509_sig_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    X509_sig_st* PEM_read_bio_PKCS8(bio_st*, X509_sig_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_write_PKCS8(_IO_FILE*, X509_sig_st*) @nogc nothrow;
    int PEM_write_bio_PKCS8(bio_st*, X509_sig_st*) @nogc nothrow;
    Netscape_certificate_sequence* PEM_read_NETSCAPE_CERT_SEQUENCE(_IO_FILE*, Netscape_certificate_sequence**, int function(char*, int, int, void*), void*) @nogc nothrow;
    Netscape_certificate_sequence* PEM_read_bio_NETSCAPE_CERT_SEQUENCE(bio_st*, Netscape_certificate_sequence**, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_write_NETSCAPE_CERT_SEQUENCE(_IO_FILE*, Netscape_certificate_sequence*) @nogc nothrow;
    int PEM_write_bio_NETSCAPE_CERT_SEQUENCE(bio_st*, Netscape_certificate_sequence*) @nogc nothrow;
    pkcs7_st* PEM_read_PKCS7(_IO_FILE*, pkcs7_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    pkcs7_st* PEM_read_bio_PKCS7(bio_st*, pkcs7_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_write_PKCS7(_IO_FILE*, pkcs7_st*) @nogc nothrow;
    int PEM_write_bio_PKCS7(bio_st*, pkcs7_st*) @nogc nothrow;
    X509_crl_st* PEM_read_X509_CRL(_IO_FILE*, X509_crl_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    X509_crl_st* PEM_read_bio_X509_CRL(bio_st*, X509_crl_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_write_X509_CRL(_IO_FILE*, X509_crl_st*) @nogc nothrow;
    int PEM_write_bio_X509_CRL(bio_st*, X509_crl_st*) @nogc nothrow;
    int PEM_write_X509_REQ_NEW(_IO_FILE*, X509_req_st*) @nogc nothrow;
    int PEM_write_bio_X509_REQ_NEW(bio_st*, X509_req_st*) @nogc nothrow;
    X509_req_st* PEM_read_X509_REQ(_IO_FILE*, X509_req_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    X509_req_st* PEM_read_bio_X509_REQ(bio_st*, X509_req_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_write_X509_REQ(_IO_FILE*, X509_req_st*) @nogc nothrow;
    int PEM_write_bio_X509_REQ(bio_st*, X509_req_st*) @nogc nothrow;
    x509_st* PEM_read_bio_X509_AUX(bio_st*, x509_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    x509_st* PEM_read_X509_AUX(_IO_FILE*, x509_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_write_bio_X509_AUX(bio_st*, x509_st*) @nogc nothrow;
    int PEM_write_X509_AUX(_IO_FILE*, x509_st*) @nogc nothrow;
    x509_st* PEM_read_bio_X509(bio_st*, x509_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    x509_st* PEM_read_X509(_IO_FILE*, x509_st**, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_write_bio_X509(bio_st*, x509_st*) @nogc nothrow;
    int PEM_write_X509(_IO_FILE*, x509_st*) @nogc nothrow;
    void PEM_dek_info(char*, const(char)*, int, char*) @nogc nothrow;
    void PEM_proc_type(char*, int) @nogc nothrow;
    int PEM_def_callback(char*, int, int, void*) @nogc nothrow;
    int PEM_SignFinal(evp_md_ctx_st*, ubyte*, uint*, evp_pkey_st*) @nogc nothrow;
    int PEM_SignUpdate(evp_md_ctx_st*, ubyte*, uint) @nogc nothrow;
    int PEM_SignInit(evp_md_ctx_st*, evp_md_st*) @nogc nothrow;
    stack_st_X509_INFO* PEM_X509_INFO_read(_IO_FILE*, stack_st_X509_INFO*, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_ASN1_write(int function(void*, ubyte**), const(char)*, _IO_FILE*, void*, const(evp_cipher_st)*, ubyte*, int, int function(char*, int, int, void*), void*) @nogc nothrow;
    void* PEM_ASN1_read(void* function(void**, const(ubyte)**, c_long), const(char)*, _IO_FILE*, void**, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_write(_IO_FILE*, const(char)*, const(char)*, const(ubyte)*, c_long) @nogc nothrow;
    int PEM_read(_IO_FILE*, char**, char**, ubyte**, c_long*) @nogc nothrow;
    int PEM_X509_INFO_write_bio(bio_st*, X509_info_st*, evp_cipher_st*, ubyte*, int, int function(char*, int, int, void*), void*) @nogc nothrow;
    stack_st_X509_INFO* PEM_X509_INFO_read_bio(bio_st*, stack_st_X509_INFO*, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_ASN1_write_bio(int function(void*, ubyte**), const(char)*, bio_st*, void*, const(evp_cipher_st)*, ubyte*, int, int function(char*, int, int, void*), void*) @nogc nothrow;
    void* PEM_ASN1_read_bio(void* function(void**, const(ubyte)**, c_long), const(char)*, bio_st*, void**, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_bytes_read_bio(ubyte**, c_long*, char**, const(char)*, bio_st*, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_write_bio(bio_st*, const(char)*, const(char)*, const(ubyte)*, c_long) @nogc nothrow;
    int PEM_bytes_read_bio_secmem(ubyte**, c_long*, char**, const(char)*, bio_st*, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_read_bio_ex(bio_st*, char**, char**, ubyte**, c_long*, uint) @nogc nothrow;
    int PEM_read_bio(bio_st*, char**, char**, ubyte**, c_long*) @nogc nothrow;
    int PEM_do_header(evp_cipher_info_st*, ubyte*, c_long*, int function(char*, int, int, void*), void*) @nogc nothrow;
    int PEM_get_EVP_CIPHER_INFO(char*, evp_cipher_info_st*) @nogc nothrow;
    alias pem_password_cb = int function(char*, int, int, void*);
    alias ossl_uintmax_t = c_ulong;
    alias ossl_intmax_t = c_long;
    struct ossl_store_search_st;
    alias OSSL_STORE_SEARCH = ossl_store_search_st;
    struct ossl_store_info_st;
    alias OSSL_STORE_INFO = ossl_store_info_st;
    struct ct_policy_eval_ctx_st;
    alias CT_POLICY_EVAL_CTX = ct_policy_eval_ctx_st;
    struct ctlog_store_st;
    alias CTLOG_STORE = ctlog_store_st;
    struct ctlog_st;
    alias CTLOG = ctlog_st;
    struct sct_ctx_st;
    alias SCT_CTX = sct_ctx_st;
    struct sct_st;
    alias SCT = sct_st;
    struct ocsp_responder_id_st;
    alias OCSP_RESPID = ocsp_responder_id_st;
    struct ocsp_response_st;
    alias OCSP_RESPONSE = ocsp_response_st;
    struct ocsp_req_ctx_st;
    alias OCSP_REQ_CTX = ocsp_req_ctx_st;
    struct crypto_ex_data_st
    {
        stack_st_void* sk;
    }
    alias CRYPTO_EX_DATA = crypto_ex_data_st;
    struct NAME_CONSTRAINTS_st
    {
        stack_st_GENERAL_SUBTREE* permittedSubtrees;
        stack_st_GENERAL_SUBTREE* excludedSubtrees;
    }
    alias NAME_CONSTRAINTS = NAME_CONSTRAINTS_st;
    struct ISSUING_DIST_POINT_st
    {
        DIST_POINT_NAME_st* distpoint;
        int onlyuser;
        int onlyCA;
        asn1_string_st* onlysomereasons;
        int indirectCRL;
        int onlyattr;
    }
    alias ISSUING_DIST_POINT = ISSUING_DIST_POINT_st;
    struct DIST_POINT_st
    {
        DIST_POINT_NAME_st* distpoint;
        asn1_string_st* reasons;
        stack_st_GENERAL_NAME* CRLissuer;
        int dp_reasons;
    }
    alias DIST_POINT = DIST_POINT_st;
    struct AUTHORITY_KEYID_st
    {
        asn1_string_st* keyid;
        stack_st_GENERAL_NAME* issuer;
        asn1_string_st* serial;
    }
    alias AUTHORITY_KEYID = AUTHORITY_KEYID_st;
    struct X509_POLICY_CACHE_st;
    alias X509_POLICY_CACHE = X509_POLICY_CACHE_st;
    struct X509_POLICY_TREE_st;
    alias X509_POLICY_TREE = X509_POLICY_TREE_st;
    struct X509_POLICY_LEVEL_st;
    alias X509_POLICY_LEVEL = X509_POLICY_LEVEL_st;
    struct X509_POLICY_NODE_st;
    alias X509_POLICY_NODE = X509_POLICY_NODE_st;
    struct comp_method_st;
    alias COMP_METHOD = comp_method_st;
    struct comp_ctx_st;
    alias COMP_CTX = comp_ctx_st;
    struct ssl_ctx_st;
    alias SSL_CTX = ssl_ctx_st;
    struct ssl_st;
    alias SSL = ssl_st;
    struct engine_st;
    alias ENGINE = engine_st;
    struct ui_method_st;
    alias UI_METHOD = ui_method_st;
    struct ui_st;
    alias UI = ui_st;
    struct ossl_init_settings_st;
    alias OPENSSL_INIT_SETTINGS = ossl_init_settings_st;
    struct conf_st
    {
        conf_method_st* meth;
        void* meth_data;
        lhash_st_CONF_VALUE* data;
    }
    alias CONF = conf_st;
    struct v3_ext_ctx
    {
        int flags;
        x509_st* issuer_cert;
        x509_st* subject_cert;
        X509_req_st* subject_req;
        X509_crl_st* crl;
        X509V3_CONF_METHOD_st* db_meth;
        void* db;
    }
    alias X509V3_CTX = v3_ext_ctx;
    struct pkcs8_priv_key_info_st;
    alias PKCS8_PRIV_KEY_INFO = pkcs8_priv_key_info_st;
    struct x509_sig_info_st;
    alias X509_SIG_INFO = x509_sig_info_st;
    struct X509_VERIFY_PARAM_st;
    alias X509_VERIFY_PARAM = X509_VERIFY_PARAM_st;
    struct x509_lookup_method_st;
    alias X509_LOOKUP_METHOD = x509_lookup_method_st;
    struct x509_lookup_st;
    alias X509_LOOKUP = x509_lookup_st;
    struct x509_object_st;
    alias X509_OBJECT = x509_object_st;
    struct x509_store_ctx_st;
    alias X509_STORE_CTX = x509_store_ctx_st;
    struct x509_store_st;
    alias X509_STORE = x509_store_st;
    struct X509_pubkey_st;
    alias X509_PUBKEY = X509_pubkey_st;
    struct X509_name_st;
    alias X509_NAME = X509_name_st;
    struct x509_revoked_st;
    alias X509_REVOKED = x509_revoked_st;
    struct x509_crl_method_st;
    alias X509_CRL_METHOD = x509_crl_method_st;
    struct X509_crl_st;
    alias X509_CRL = X509_crl_st;
    struct X509_algor_st
    {
        asn1_object_st* algorithm;
        asn1_type_st* parameter;
    }
    alias X509_ALGOR = X509_algor_st;
    struct x509_st;
    alias X509 = x509_st;
    struct ssl_dane_st;
    alias SSL_DANE = ssl_dane_st;
    struct rand_drbg_st;
    alias RAND_DRBG = rand_drbg_st;
    struct rand_meth_st;
    alias RAND_METHOD = rand_meth_st;
    struct ec_key_method_st;
    alias EC_KEY_METHOD = ec_key_method_st;
    struct ec_key_st;
    alias EC_KEY = ec_key_st;
    struct rsa_pss_params_st
    {
        X509_algor_st* hashAlgorithm;
        X509_algor_st* maskGenAlgorithm;
        asn1_string_st* saltLength;
        asn1_string_st* trailerField;
        X509_algor_st* maskHash;
    }
    alias RSA_PSS_PARAMS = rsa_pss_params_st;
    struct rsa_meth_st;
    alias RSA_METHOD = rsa_meth_st;
    struct rsa_st;
    alias RSA = rsa_st;
    struct dsa_method;
    alias DSA_METHOD = dsa_method;
    struct dsa_st;
    alias DSA = dsa_st;
    struct dh_method;
    alias DH_METHOD = dh_method;
    struct dh_st;
    alias DH = dh_st;
    struct hmac_ctx_st;
    alias HMAC_CTX = hmac_ctx_st;
    struct evp_Encode_Ctx_st;
    alias EVP_ENCODE_CTX = evp_Encode_Ctx_st;
    struct evp_pkey_ctx_st;
    alias EVP_PKEY_CTX = evp_pkey_ctx_st;
    struct evp_pkey_method_st;
    alias EVP_PKEY_METHOD = evp_pkey_method_st;
    struct evp_pkey_asn1_method_st;
    alias EVP_PKEY_ASN1_METHOD = evp_pkey_asn1_method_st;
    struct evp_pkey_st;
    alias EVP_PKEY = evp_pkey_st;
    struct evp_md_ctx_st;
    alias EVP_MD_CTX = evp_md_ctx_st;
    struct evp_md_st;
    alias EVP_MD = evp_md_st;
    struct evp_cipher_ctx_st;
    alias EVP_CIPHER_CTX = evp_cipher_ctx_st;
    struct evp_cipher_st;
    alias EVP_CIPHER = evp_cipher_st;
    struct buf_mem_st
    {
        c_ulong length;
        char* data;
        c_ulong max;
        c_ulong flags;
    }
    alias BUF_MEM = buf_mem_st;
    struct bn_gencb_st;
    alias BN_GENCB = bn_gencb_st;
    struct bn_recp_ctx_st;
    alias BN_RECP_CTX = bn_recp_ctx_st;
    struct bn_mont_ctx_st;
    alias BN_MONT_CTX = bn_mont_ctx_st;
    struct bn_blinding_st;
    alias BN_BLINDING = bn_blinding_st;
    struct bignum_ctx;
    alias BN_CTX = bignum_ctx;
    struct bignum_st;
    alias BIGNUM = bignum_st;
    struct bio_st;
    alias BIO = bio_st;
    struct dane_st;
    struct asn1_sctx_st;
    alias ASN1_SCTX = asn1_sctx_st;
    struct asn1_pctx_st;
    alias ASN1_PCTX = asn1_pctx_st;
    struct ASN1_ITEM_st;
    alias ASN1_ITEM = ASN1_ITEM_st;
    struct asn1_object_st;
    alias ASN1_OBJECT = asn1_object_st;
    alias ASN1_NULL = int;
    alias ASN1_BOOLEAN = int;
    alias ASN1_STRING = asn1_string_st;
    alias ASN1_UTF8STRING = asn1_string_st;
    alias ASN1_VISIBLESTRING = asn1_string_st;
    alias ASN1_GENERALIZEDTIME = asn1_string_st;
    alias ASN1_TIME = asn1_string_st;
    alias ASN1_UTCTIME = asn1_string_st;
    alias ASN1_BMPSTRING = asn1_string_st;
    alias ASN1_UNIVERSALSTRING = asn1_string_st;
    alias ASN1_GENERALSTRING = asn1_string_st;
    alias ASN1_IA5STRING = asn1_string_st;
    alias ASN1_T61STRING = asn1_string_st;
    alias ASN1_PRINTABLESTRING = asn1_string_st;
    alias ASN1_OCTET_STRING = asn1_string_st;
    alias ASN1_BIT_STRING = asn1_string_st;
    alias ASN1_ENUMERATED = asn1_string_st;
    struct asn1_string_st
    {
        int length;
        int type;
        ubyte* data;
        c_long flags;
    }
    alias ASN1_INTEGER = asn1_string_st;
    int ERR_load_OBJ_strings() @nogc nothrow;
    void OBJ_sigid_free() @nogc nothrow;
    int OBJ_add_sigid(int, int, int) @nogc nothrow;
    int OBJ_find_sigid_by_algs(int*, int, int) @nogc nothrow;
    int OBJ_find_sigid_algs(int, int*, int*) @nogc nothrow;
    const(ubyte)* OBJ_get0_data(const(asn1_object_st)*) @nogc nothrow;
    c_ulong OBJ_length(const(asn1_object_st)*) @nogc nothrow;
    int OBJ_create_objects(bio_st*) @nogc nothrow;
    int OBJ_create(const(char)*, const(char)*, const(char)*) @nogc nothrow;
    int OBJ_add_object(const(asn1_object_st)*) @nogc nothrow;
    int OBJ_new_nid(int) @nogc nothrow;
    const(void)* OBJ_bsearch_ex_(const(void)*, const(void)*, int, int, int function(const(void)*, const(void)*), int) @nogc nothrow;
    const(void)* OBJ_bsearch_(const(void)*, const(void)*, int, int, int function(const(void)*, const(void)*)) @nogc nothrow;
    int OBJ_cmp(const(asn1_object_st)*, const(asn1_object_st)*) @nogc nothrow;
    int OBJ_sn2nid(const(char)*) @nogc nothrow;
    int OBJ_ln2nid(const(char)*) @nogc nothrow;
    int OBJ_txt2nid(const(char)*) @nogc nothrow;
    int OBJ_obj2txt(char*, int, const(asn1_object_st)*, int) @nogc nothrow;
    asn1_object_st* OBJ_txt2obj(const(char)*, int) @nogc nothrow;
    int OBJ_obj2nid(const(asn1_object_st)*) @nogc nothrow;
    const(char)* OBJ_nid2sn(int) @nogc nothrow;
    const(char)* OBJ_nid2ln(int) @nogc nothrow;
    asn1_object_st* OBJ_nid2obj(int) @nogc nothrow;
    asn1_object_st* OBJ_dup(const(asn1_object_st)*) @nogc nothrow;
    void OBJ_NAME_do_all_sorted(int, void function(const(obj_name_st)*, void*), void*) @nogc nothrow;
    void OBJ_NAME_do_all(int, void function(const(obj_name_st)*, void*), void*) @nogc nothrow;
    void OBJ_NAME_cleanup(int) @nogc nothrow;
    int OBJ_NAME_remove(const(char)*, int) @nogc nothrow;
    int OBJ_NAME_add(const(char)*, int, const(char)*) @nogc nothrow;
    const(char)* OBJ_NAME_get(const(char)*, int) @nogc nothrow;
    int OBJ_NAME_new_index(c_ulong function(const(char)*), int function(const(char)*, const(char)*), void function(const(char)*, int, const(char)*)) @nogc nothrow;
    int OBJ_NAME_init() @nogc nothrow;
    struct obj_name_st
    {
        int type;
        int alias_;
        const(char)* name;
        const(char)* data;
    }
    alias OBJ_NAME = obj_name_st;



    static if(!is(typeof(SN_iana))) {
        private enum enumMixinStr_SN_iana = `enum SN_iana = "IANA";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_iana); }))) {
            mixin(enumMixinStr_SN_iana);
        }
    }




    static if(!is(typeof(LN_iana))) {
        private enum enumMixinStr_LN_iana = `enum LN_iana = "iana";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_iana); }))) {
            mixin(enumMixinStr_LN_iana);
        }
    }




    static if(!is(typeof(NID_iana))) {
        private enum enumMixinStr_NID_iana = `enum NID_iana = 381;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_iana); }))) {
            mixin(enumMixinStr_NID_iana);
        }
    }




    static if(!is(typeof(OBJ_iana))) {
        private enum enumMixinStr_OBJ_iana = `enum OBJ_iana = OBJ_dod , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_iana); }))) {
            mixin(enumMixinStr_OBJ_iana);
        }
    }




    static if(!is(typeof(OBJ_internet))) {
        private enum enumMixinStr_OBJ_internet = `enum OBJ_internet = OBJ_dod , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_internet); }))) {
            mixin(enumMixinStr_OBJ_internet);
        }
    }




    static if(!is(typeof(SN_Directory))) {
        private enum enumMixinStr_SN_Directory = `enum SN_Directory = "directory";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_Directory); }))) {
            mixin(enumMixinStr_SN_Directory);
        }
    }




    static if(!is(typeof(LN_Directory))) {
        private enum enumMixinStr_LN_Directory = `enum LN_Directory = "Directory";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_Directory); }))) {
            mixin(enumMixinStr_LN_Directory);
        }
    }




    static if(!is(typeof(NID_Directory))) {
        private enum enumMixinStr_NID_Directory = `enum NID_Directory = 382;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_Directory); }))) {
            mixin(enumMixinStr_NID_Directory);
        }
    }




    static if(!is(typeof(OBJ_Directory))) {
        private enum enumMixinStr_OBJ_Directory = `enum OBJ_Directory = OBJ_dod , 1L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_Directory); }))) {
            mixin(enumMixinStr_OBJ_Directory);
        }
    }




    static if(!is(typeof(SN_Management))) {
        private enum enumMixinStr_SN_Management = `enum SN_Management = "mgmt";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_Management); }))) {
            mixin(enumMixinStr_SN_Management);
        }
    }




    static if(!is(typeof(LN_Management))) {
        private enum enumMixinStr_LN_Management = `enum LN_Management = "Management";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_Management); }))) {
            mixin(enumMixinStr_LN_Management);
        }
    }




    static if(!is(typeof(NID_Management))) {
        private enum enumMixinStr_NID_Management = `enum NID_Management = 383;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_Management); }))) {
            mixin(enumMixinStr_NID_Management);
        }
    }




    static if(!is(typeof(OBJ_Management))) {
        private enum enumMixinStr_OBJ_Management = `enum OBJ_Management = OBJ_dod , 1L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_Management); }))) {
            mixin(enumMixinStr_OBJ_Management);
        }
    }




    static if(!is(typeof(SN_Experimental))) {
        private enum enumMixinStr_SN_Experimental = `enum SN_Experimental = "experimental";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_Experimental); }))) {
            mixin(enumMixinStr_SN_Experimental);
        }
    }




    static if(!is(typeof(LN_Experimental))) {
        private enum enumMixinStr_LN_Experimental = `enum LN_Experimental = "Experimental";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_Experimental); }))) {
            mixin(enumMixinStr_LN_Experimental);
        }
    }




    static if(!is(typeof(NID_Experimental))) {
        private enum enumMixinStr_NID_Experimental = `enum NID_Experimental = 384;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_Experimental); }))) {
            mixin(enumMixinStr_NID_Experimental);
        }
    }




    static if(!is(typeof(OBJ_Experimental))) {
        private enum enumMixinStr_OBJ_Experimental = `enum OBJ_Experimental = OBJ_dod , 1L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_Experimental); }))) {
            mixin(enumMixinStr_OBJ_Experimental);
        }
    }




    static if(!is(typeof(SN_Private))) {
        private enum enumMixinStr_SN_Private = `enum SN_Private = "private";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_Private); }))) {
            mixin(enumMixinStr_SN_Private);
        }
    }




    static if(!is(typeof(LN_Private))) {
        private enum enumMixinStr_LN_Private = `enum LN_Private = "Private";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_Private); }))) {
            mixin(enumMixinStr_LN_Private);
        }
    }




    static if(!is(typeof(NID_Private))) {
        private enum enumMixinStr_NID_Private = `enum NID_Private = 385;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_Private); }))) {
            mixin(enumMixinStr_NID_Private);
        }
    }




    static if(!is(typeof(OBJ_Private))) {
        private enum enumMixinStr_OBJ_Private = `enum OBJ_Private = OBJ_dod , 1L , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_Private); }))) {
            mixin(enumMixinStr_OBJ_Private);
        }
    }




    static if(!is(typeof(SN_Security))) {
        private enum enumMixinStr_SN_Security = `enum SN_Security = "security";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_Security); }))) {
            mixin(enumMixinStr_SN_Security);
        }
    }




    static if(!is(typeof(LN_Security))) {
        private enum enumMixinStr_LN_Security = `enum LN_Security = "Security";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_Security); }))) {
            mixin(enumMixinStr_LN_Security);
        }
    }




    static if(!is(typeof(NID_Security))) {
        private enum enumMixinStr_NID_Security = `enum NID_Security = 386;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_Security); }))) {
            mixin(enumMixinStr_NID_Security);
        }
    }




    static if(!is(typeof(OBJ_Security))) {
        private enum enumMixinStr_OBJ_Security = `enum OBJ_Security = OBJ_dod , 1L , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_Security); }))) {
            mixin(enumMixinStr_OBJ_Security);
        }
    }




    static if(!is(typeof(SN_SNMPv2))) {
        private enum enumMixinStr_SN_SNMPv2 = `enum SN_SNMPv2 = "snmpv2";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_SNMPv2); }))) {
            mixin(enumMixinStr_SN_SNMPv2);
        }
    }




    static if(!is(typeof(LN_SNMPv2))) {
        private enum enumMixinStr_LN_SNMPv2 = `enum LN_SNMPv2 = "SNMPv2";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_SNMPv2); }))) {
            mixin(enumMixinStr_LN_SNMPv2);
        }
    }




    static if(!is(typeof(NID_SNMPv2))) {
        private enum enumMixinStr_NID_SNMPv2 = `enum NID_SNMPv2 = 387;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_SNMPv2); }))) {
            mixin(enumMixinStr_NID_SNMPv2);
        }
    }




    static if(!is(typeof(OBJ_SNMPv2))) {
        private enum enumMixinStr_OBJ_SNMPv2 = `enum OBJ_SNMPv2 = OBJ_dod , 1L , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_SNMPv2); }))) {
            mixin(enumMixinStr_OBJ_SNMPv2);
        }
    }




    static if(!is(typeof(LN_Mail))) {
        private enum enumMixinStr_LN_Mail = `enum LN_Mail = "Mail";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_Mail); }))) {
            mixin(enumMixinStr_LN_Mail);
        }
    }




    static if(!is(typeof(NID_Mail))) {
        private enum enumMixinStr_NID_Mail = `enum NID_Mail = 388;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_Mail); }))) {
            mixin(enumMixinStr_NID_Mail);
        }
    }




    static if(!is(typeof(OBJ_Mail))) {
        private enum enumMixinStr_OBJ_Mail = `enum OBJ_Mail = OBJ_dod , 1L , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_Mail); }))) {
            mixin(enumMixinStr_OBJ_Mail);
        }
    }




    static if(!is(typeof(SN_Enterprises))) {
        private enum enumMixinStr_SN_Enterprises = `enum SN_Enterprises = "enterprises";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_Enterprises); }))) {
            mixin(enumMixinStr_SN_Enterprises);
        }
    }




    static if(!is(typeof(LN_Enterprises))) {
        private enum enumMixinStr_LN_Enterprises = `enum LN_Enterprises = "Enterprises";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_Enterprises); }))) {
            mixin(enumMixinStr_LN_Enterprises);
        }
    }




    static if(!is(typeof(NID_Enterprises))) {
        private enum enumMixinStr_NID_Enterprises = `enum NID_Enterprises = 389;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_Enterprises); }))) {
            mixin(enumMixinStr_NID_Enterprises);
        }
    }




    static if(!is(typeof(OBJ_Enterprises))) {
        private enum enumMixinStr_OBJ_Enterprises = `enum OBJ_Enterprises = OBJ_dod , 1L , 4L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_Enterprises); }))) {
            mixin(enumMixinStr_OBJ_Enterprises);
        }
    }




    static if(!is(typeof(SN_dcObject))) {
        private enum enumMixinStr_SN_dcObject = `enum SN_dcObject = "dcobject";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dcObject); }))) {
            mixin(enumMixinStr_SN_dcObject);
        }
    }




    static if(!is(typeof(LN_dcObject))) {
        private enum enumMixinStr_LN_dcObject = `enum LN_dcObject = "dcObject";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_dcObject); }))) {
            mixin(enumMixinStr_LN_dcObject);
        }
    }




    static if(!is(typeof(NID_dcObject))) {
        private enum enumMixinStr_NID_dcObject = `enum NID_dcObject = 390;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dcObject); }))) {
            mixin(enumMixinStr_NID_dcObject);
        }
    }




    static if(!is(typeof(OBJ_dcObject))) {
        private enum enumMixinStr_OBJ_dcObject = `enum OBJ_dcObject = OBJ_dod , 1L , 4L , 1L , 1466L , 344L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dcObject); }))) {
            mixin(enumMixinStr_OBJ_dcObject);
        }
    }




    static if(!is(typeof(SN_mime_mhs))) {
        private enum enumMixinStr_SN_mime_mhs = `enum SN_mime_mhs = "mime-mhs";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_mime_mhs); }))) {
            mixin(enumMixinStr_SN_mime_mhs);
        }
    }




    static if(!is(typeof(LN_mime_mhs))) {
        private enum enumMixinStr_LN_mime_mhs = `enum LN_mime_mhs = "MIME MHS";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_mime_mhs); }))) {
            mixin(enumMixinStr_LN_mime_mhs);
        }
    }




    static if(!is(typeof(NID_mime_mhs))) {
        private enum enumMixinStr_NID_mime_mhs = `enum NID_mime_mhs = 504;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_mime_mhs); }))) {
            mixin(enumMixinStr_NID_mime_mhs);
        }
    }




    static if(!is(typeof(OBJ_mime_mhs))) {
        private enum enumMixinStr_OBJ_mime_mhs = `enum OBJ_mime_mhs = OBJ_dod , 1L , 7L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_mime_mhs); }))) {
            mixin(enumMixinStr_OBJ_mime_mhs);
        }
    }




    static if(!is(typeof(SN_mime_mhs_headings))) {
        private enum enumMixinStr_SN_mime_mhs_headings = `enum SN_mime_mhs_headings = "mime-mhs-headings";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_mime_mhs_headings); }))) {
            mixin(enumMixinStr_SN_mime_mhs_headings);
        }
    }




    static if(!is(typeof(LN_mime_mhs_headings))) {
        private enum enumMixinStr_LN_mime_mhs_headings = `enum LN_mime_mhs_headings = "mime-mhs-headings";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_mime_mhs_headings); }))) {
            mixin(enumMixinStr_LN_mime_mhs_headings);
        }
    }




    static if(!is(typeof(NID_mime_mhs_headings))) {
        private enum enumMixinStr_NID_mime_mhs_headings = `enum NID_mime_mhs_headings = 505;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_mime_mhs_headings); }))) {
            mixin(enumMixinStr_NID_mime_mhs_headings);
        }
    }




    static if(!is(typeof(OBJ_mime_mhs_headings))) {
        private enum enumMixinStr_OBJ_mime_mhs_headings = `enum OBJ_mime_mhs_headings = OBJ_dod , 1L , 7L , 1L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_mime_mhs_headings); }))) {
            mixin(enumMixinStr_OBJ_mime_mhs_headings);
        }
    }




    static if(!is(typeof(SN_mime_mhs_bodies))) {
        private enum enumMixinStr_SN_mime_mhs_bodies = `enum SN_mime_mhs_bodies = "mime-mhs-bodies";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_mime_mhs_bodies); }))) {
            mixin(enumMixinStr_SN_mime_mhs_bodies);
        }
    }




    static if(!is(typeof(LN_mime_mhs_bodies))) {
        private enum enumMixinStr_LN_mime_mhs_bodies = `enum LN_mime_mhs_bodies = "mime-mhs-bodies";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_mime_mhs_bodies); }))) {
            mixin(enumMixinStr_LN_mime_mhs_bodies);
        }
    }




    static if(!is(typeof(NID_mime_mhs_bodies))) {
        private enum enumMixinStr_NID_mime_mhs_bodies = `enum NID_mime_mhs_bodies = 506;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_mime_mhs_bodies); }))) {
            mixin(enumMixinStr_NID_mime_mhs_bodies);
        }
    }




    static if(!is(typeof(OBJ_mime_mhs_bodies))) {
        private enum enumMixinStr_OBJ_mime_mhs_bodies = `enum OBJ_mime_mhs_bodies = OBJ_dod , 1L , 7L , 1L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_mime_mhs_bodies); }))) {
            mixin(enumMixinStr_OBJ_mime_mhs_bodies);
        }
    }




    static if(!is(typeof(SN_id_hex_partial_message))) {
        private enum enumMixinStr_SN_id_hex_partial_message = `enum SN_id_hex_partial_message = "id-hex-partial-message";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_hex_partial_message); }))) {
            mixin(enumMixinStr_SN_id_hex_partial_message);
        }
    }




    static if(!is(typeof(LN_id_hex_partial_message))) {
        private enum enumMixinStr_LN_id_hex_partial_message = `enum LN_id_hex_partial_message = "id-hex-partial-message";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_hex_partial_message); }))) {
            mixin(enumMixinStr_LN_id_hex_partial_message);
        }
    }




    static if(!is(typeof(NID_id_hex_partial_message))) {
        private enum enumMixinStr_NID_id_hex_partial_message = `enum NID_id_hex_partial_message = 507;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_hex_partial_message); }))) {
            mixin(enumMixinStr_NID_id_hex_partial_message);
        }
    }




    static if(!is(typeof(OBJ_id_hex_partial_message))) {
        private enum enumMixinStr_OBJ_id_hex_partial_message = `enum OBJ_id_hex_partial_message = OBJ_dod , 1L , 7L , 1L , 1L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_hex_partial_message); }))) {
            mixin(enumMixinStr_OBJ_id_hex_partial_message);
        }
    }




    static if(!is(typeof(SN_id_hex_multipart_message))) {
        private enum enumMixinStr_SN_id_hex_multipart_message = `enum SN_id_hex_multipart_message = "id-hex-multipart-message";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_hex_multipart_message); }))) {
            mixin(enumMixinStr_SN_id_hex_multipart_message);
        }
    }




    static if(!is(typeof(LN_id_hex_multipart_message))) {
        private enum enumMixinStr_LN_id_hex_multipart_message = `enum LN_id_hex_multipart_message = "id-hex-multipart-message";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_hex_multipart_message); }))) {
            mixin(enumMixinStr_LN_id_hex_multipart_message);
        }
    }




    static if(!is(typeof(NID_id_hex_multipart_message))) {
        private enum enumMixinStr_NID_id_hex_multipart_message = `enum NID_id_hex_multipart_message = 508;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_hex_multipart_message); }))) {
            mixin(enumMixinStr_NID_id_hex_multipart_message);
        }
    }




    static if(!is(typeof(OBJ_id_hex_multipart_message))) {
        private enum enumMixinStr_OBJ_id_hex_multipart_message = `enum OBJ_id_hex_multipart_message = OBJ_dod , 1L , 7L , 1L , 1L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_hex_multipart_message); }))) {
            mixin(enumMixinStr_OBJ_id_hex_multipart_message);
        }
    }




    static if(!is(typeof(SN_zlib_compression))) {
        private enum enumMixinStr_SN_zlib_compression = `enum SN_zlib_compression = "ZLIB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_zlib_compression); }))) {
            mixin(enumMixinStr_SN_zlib_compression);
        }
    }




    static if(!is(typeof(LN_zlib_compression))) {
        private enum enumMixinStr_LN_zlib_compression = `enum LN_zlib_compression = "zlib compression";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_zlib_compression); }))) {
            mixin(enumMixinStr_LN_zlib_compression);
        }
    }




    static if(!is(typeof(NID_zlib_compression))) {
        private enum enumMixinStr_NID_zlib_compression = `enum NID_zlib_compression = 125;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_zlib_compression); }))) {
            mixin(enumMixinStr_NID_zlib_compression);
        }
    }




    static if(!is(typeof(OBJ_zlib_compression))) {
        private enum enumMixinStr_OBJ_zlib_compression = `enum OBJ_zlib_compression = OBJ_id_smime_alg , 8L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_zlib_compression); }))) {
            mixin(enumMixinStr_OBJ_zlib_compression);
        }
    }




    static if(!is(typeof(OBJ_csor))) {
        private enum enumMixinStr_OBJ_csor = `enum OBJ_csor = 2L , 16L , 840L , 1L , 101L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_csor); }))) {
            mixin(enumMixinStr_OBJ_csor);
        }
    }




    static if(!is(typeof(OBJ_nistAlgorithms))) {
        private enum enumMixinStr_OBJ_nistAlgorithms = `enum OBJ_nistAlgorithms = 2L , 16L , 840L , 1L , 101L , 3L , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_nistAlgorithms); }))) {
            mixin(enumMixinStr_OBJ_nistAlgorithms);
        }
    }




    static if(!is(typeof(OBJ_aes))) {
        private enum enumMixinStr_OBJ_aes = `enum OBJ_aes = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aes); }))) {
            mixin(enumMixinStr_OBJ_aes);
        }
    }




    static if(!is(typeof(SN_aes_128_ecb))) {
        private enum enumMixinStr_SN_aes_128_ecb = `enum SN_aes_128_ecb = "AES-128-ECB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_128_ecb); }))) {
            mixin(enumMixinStr_SN_aes_128_ecb);
        }
    }




    static if(!is(typeof(LN_aes_128_ecb))) {
        private enum enumMixinStr_LN_aes_128_ecb = `enum LN_aes_128_ecb = "aes-128-ecb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_128_ecb); }))) {
            mixin(enumMixinStr_LN_aes_128_ecb);
        }
    }




    static if(!is(typeof(NID_aes_128_ecb))) {
        private enum enumMixinStr_NID_aes_128_ecb = `enum NID_aes_128_ecb = 418;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_128_ecb); }))) {
            mixin(enumMixinStr_NID_aes_128_ecb);
        }
    }




    static if(!is(typeof(OBJ_aes_128_ecb))) {
        private enum enumMixinStr_OBJ_aes_128_ecb = `enum OBJ_aes_128_ecb = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 1L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aes_128_ecb); }))) {
            mixin(enumMixinStr_OBJ_aes_128_ecb);
        }
    }




    static if(!is(typeof(SN_aes_128_cbc))) {
        private enum enumMixinStr_SN_aes_128_cbc = `enum SN_aes_128_cbc = "AES-128-CBC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_128_cbc); }))) {
            mixin(enumMixinStr_SN_aes_128_cbc);
        }
    }




    static if(!is(typeof(LN_aes_128_cbc))) {
        private enum enumMixinStr_LN_aes_128_cbc = `enum LN_aes_128_cbc = "aes-128-cbc";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_128_cbc); }))) {
            mixin(enumMixinStr_LN_aes_128_cbc);
        }
    }




    static if(!is(typeof(NID_aes_128_cbc))) {
        private enum enumMixinStr_NID_aes_128_cbc = `enum NID_aes_128_cbc = 419;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_128_cbc); }))) {
            mixin(enumMixinStr_NID_aes_128_cbc);
        }
    }




    static if(!is(typeof(OBJ_aes_128_cbc))) {
        private enum enumMixinStr_OBJ_aes_128_cbc = `enum OBJ_aes_128_cbc = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 1L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aes_128_cbc); }))) {
            mixin(enumMixinStr_OBJ_aes_128_cbc);
        }
    }




    static if(!is(typeof(SN_aes_128_ofb128))) {
        private enum enumMixinStr_SN_aes_128_ofb128 = `enum SN_aes_128_ofb128 = "AES-128-OFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_128_ofb128); }))) {
            mixin(enumMixinStr_SN_aes_128_ofb128);
        }
    }




    static if(!is(typeof(LN_aes_128_ofb128))) {
        private enum enumMixinStr_LN_aes_128_ofb128 = `enum LN_aes_128_ofb128 = "aes-128-ofb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_128_ofb128); }))) {
            mixin(enumMixinStr_LN_aes_128_ofb128);
        }
    }




    static if(!is(typeof(NID_aes_128_ofb128))) {
        private enum enumMixinStr_NID_aes_128_ofb128 = `enum NID_aes_128_ofb128 = 420;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_128_ofb128); }))) {
            mixin(enumMixinStr_NID_aes_128_ofb128);
        }
    }




    static if(!is(typeof(OBJ_aes_128_ofb128))) {
        private enum enumMixinStr_OBJ_aes_128_ofb128 = `enum OBJ_aes_128_ofb128 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 1L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aes_128_ofb128); }))) {
            mixin(enumMixinStr_OBJ_aes_128_ofb128);
        }
    }




    static if(!is(typeof(SN_aes_128_cfb128))) {
        private enum enumMixinStr_SN_aes_128_cfb128 = `enum SN_aes_128_cfb128 = "AES-128-CFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_128_cfb128); }))) {
            mixin(enumMixinStr_SN_aes_128_cfb128);
        }
    }




    static if(!is(typeof(LN_aes_128_cfb128))) {
        private enum enumMixinStr_LN_aes_128_cfb128 = `enum LN_aes_128_cfb128 = "aes-128-cfb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_128_cfb128); }))) {
            mixin(enumMixinStr_LN_aes_128_cfb128);
        }
    }




    static if(!is(typeof(NID_aes_128_cfb128))) {
        private enum enumMixinStr_NID_aes_128_cfb128 = `enum NID_aes_128_cfb128 = 421;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_128_cfb128); }))) {
            mixin(enumMixinStr_NID_aes_128_cfb128);
        }
    }




    static if(!is(typeof(OBJ_aes_128_cfb128))) {
        private enum enumMixinStr_OBJ_aes_128_cfb128 = `enum OBJ_aes_128_cfb128 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 1L , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aes_128_cfb128); }))) {
            mixin(enumMixinStr_OBJ_aes_128_cfb128);
        }
    }




    static if(!is(typeof(SN_id_aes128_wrap))) {
        private enum enumMixinStr_SN_id_aes128_wrap = `enum SN_id_aes128_wrap = "id-aes128-wrap";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_aes128_wrap); }))) {
            mixin(enumMixinStr_SN_id_aes128_wrap);
        }
    }




    static if(!is(typeof(NID_id_aes128_wrap))) {
        private enum enumMixinStr_NID_id_aes128_wrap = `enum NID_id_aes128_wrap = 788;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_aes128_wrap); }))) {
            mixin(enumMixinStr_NID_id_aes128_wrap);
        }
    }




    static if(!is(typeof(OBJ_id_aes128_wrap))) {
        private enum enumMixinStr_OBJ_id_aes128_wrap = `enum OBJ_id_aes128_wrap = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 1L , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_aes128_wrap); }))) {
            mixin(enumMixinStr_OBJ_id_aes128_wrap);
        }
    }




    static if(!is(typeof(SN_aes_128_gcm))) {
        private enum enumMixinStr_SN_aes_128_gcm = `enum SN_aes_128_gcm = "id-aes128-GCM";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_128_gcm); }))) {
            mixin(enumMixinStr_SN_aes_128_gcm);
        }
    }




    static if(!is(typeof(LN_aes_128_gcm))) {
        private enum enumMixinStr_LN_aes_128_gcm = `enum LN_aes_128_gcm = "aes-128-gcm";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_128_gcm); }))) {
            mixin(enumMixinStr_LN_aes_128_gcm);
        }
    }




    static if(!is(typeof(NID_aes_128_gcm))) {
        private enum enumMixinStr_NID_aes_128_gcm = `enum NID_aes_128_gcm = 895;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_128_gcm); }))) {
            mixin(enumMixinStr_NID_aes_128_gcm);
        }
    }




    static if(!is(typeof(OBJ_aes_128_gcm))) {
        private enum enumMixinStr_OBJ_aes_128_gcm = `enum OBJ_aes_128_gcm = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 1L , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aes_128_gcm); }))) {
            mixin(enumMixinStr_OBJ_aes_128_gcm);
        }
    }




    static if(!is(typeof(SN_aes_128_ccm))) {
        private enum enumMixinStr_SN_aes_128_ccm = `enum SN_aes_128_ccm = "id-aes128-CCM";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_128_ccm); }))) {
            mixin(enumMixinStr_SN_aes_128_ccm);
        }
    }




    static if(!is(typeof(LN_aes_128_ccm))) {
        private enum enumMixinStr_LN_aes_128_ccm = `enum LN_aes_128_ccm = "aes-128-ccm";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_128_ccm); }))) {
            mixin(enumMixinStr_LN_aes_128_ccm);
        }
    }




    static if(!is(typeof(NID_aes_128_ccm))) {
        private enum enumMixinStr_NID_aes_128_ccm = `enum NID_aes_128_ccm = 896;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_128_ccm); }))) {
            mixin(enumMixinStr_NID_aes_128_ccm);
        }
    }




    static if(!is(typeof(OBJ_aes_128_ccm))) {
        private enum enumMixinStr_OBJ_aes_128_ccm = `enum OBJ_aes_128_ccm = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 1L , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aes_128_ccm); }))) {
            mixin(enumMixinStr_OBJ_aes_128_ccm);
        }
    }




    static if(!is(typeof(SN_id_aes128_wrap_pad))) {
        private enum enumMixinStr_SN_id_aes128_wrap_pad = `enum SN_id_aes128_wrap_pad = "id-aes128-wrap-pad";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_aes128_wrap_pad); }))) {
            mixin(enumMixinStr_SN_id_aes128_wrap_pad);
        }
    }




    static if(!is(typeof(NID_id_aes128_wrap_pad))) {
        private enum enumMixinStr_NID_id_aes128_wrap_pad = `enum NID_id_aes128_wrap_pad = 897;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_aes128_wrap_pad); }))) {
            mixin(enumMixinStr_NID_id_aes128_wrap_pad);
        }
    }




    static if(!is(typeof(OBJ_id_aes128_wrap_pad))) {
        private enum enumMixinStr_OBJ_id_aes128_wrap_pad = `enum OBJ_id_aes128_wrap_pad = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 1L , 8L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_aes128_wrap_pad); }))) {
            mixin(enumMixinStr_OBJ_id_aes128_wrap_pad);
        }
    }




    static if(!is(typeof(SN_aes_192_ecb))) {
        private enum enumMixinStr_SN_aes_192_ecb = `enum SN_aes_192_ecb = "AES-192-ECB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_192_ecb); }))) {
            mixin(enumMixinStr_SN_aes_192_ecb);
        }
    }




    static if(!is(typeof(LN_aes_192_ecb))) {
        private enum enumMixinStr_LN_aes_192_ecb = `enum LN_aes_192_ecb = "aes-192-ecb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_192_ecb); }))) {
            mixin(enumMixinStr_LN_aes_192_ecb);
        }
    }




    static if(!is(typeof(NID_aes_192_ecb))) {
        private enum enumMixinStr_NID_aes_192_ecb = `enum NID_aes_192_ecb = 422;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_192_ecb); }))) {
            mixin(enumMixinStr_NID_aes_192_ecb);
        }
    }




    static if(!is(typeof(OBJ_aes_192_ecb))) {
        private enum enumMixinStr_OBJ_aes_192_ecb = `enum OBJ_aes_192_ecb = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 1L , 21L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aes_192_ecb); }))) {
            mixin(enumMixinStr_OBJ_aes_192_ecb);
        }
    }




    static if(!is(typeof(SN_aes_192_cbc))) {
        private enum enumMixinStr_SN_aes_192_cbc = `enum SN_aes_192_cbc = "AES-192-CBC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_192_cbc); }))) {
            mixin(enumMixinStr_SN_aes_192_cbc);
        }
    }




    static if(!is(typeof(LN_aes_192_cbc))) {
        private enum enumMixinStr_LN_aes_192_cbc = `enum LN_aes_192_cbc = "aes-192-cbc";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_192_cbc); }))) {
            mixin(enumMixinStr_LN_aes_192_cbc);
        }
    }




    static if(!is(typeof(NID_aes_192_cbc))) {
        private enum enumMixinStr_NID_aes_192_cbc = `enum NID_aes_192_cbc = 423;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_192_cbc); }))) {
            mixin(enumMixinStr_NID_aes_192_cbc);
        }
    }




    static if(!is(typeof(OBJ_aes_192_cbc))) {
        private enum enumMixinStr_OBJ_aes_192_cbc = `enum OBJ_aes_192_cbc = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 1L , 22L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aes_192_cbc); }))) {
            mixin(enumMixinStr_OBJ_aes_192_cbc);
        }
    }




    static if(!is(typeof(SN_aes_192_ofb128))) {
        private enum enumMixinStr_SN_aes_192_ofb128 = `enum SN_aes_192_ofb128 = "AES-192-OFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_192_ofb128); }))) {
            mixin(enumMixinStr_SN_aes_192_ofb128);
        }
    }




    static if(!is(typeof(LN_aes_192_ofb128))) {
        private enum enumMixinStr_LN_aes_192_ofb128 = `enum LN_aes_192_ofb128 = "aes-192-ofb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_192_ofb128); }))) {
            mixin(enumMixinStr_LN_aes_192_ofb128);
        }
    }




    static if(!is(typeof(NID_aes_192_ofb128))) {
        private enum enumMixinStr_NID_aes_192_ofb128 = `enum NID_aes_192_ofb128 = 424;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_192_ofb128); }))) {
            mixin(enumMixinStr_NID_aes_192_ofb128);
        }
    }




    static if(!is(typeof(OBJ_aes_192_ofb128))) {
        private enum enumMixinStr_OBJ_aes_192_ofb128 = `enum OBJ_aes_192_ofb128 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 1L , 23L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aes_192_ofb128); }))) {
            mixin(enumMixinStr_OBJ_aes_192_ofb128);
        }
    }




    static if(!is(typeof(SN_aes_192_cfb128))) {
        private enum enumMixinStr_SN_aes_192_cfb128 = `enum SN_aes_192_cfb128 = "AES-192-CFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_192_cfb128); }))) {
            mixin(enumMixinStr_SN_aes_192_cfb128);
        }
    }




    static if(!is(typeof(LN_aes_192_cfb128))) {
        private enum enumMixinStr_LN_aes_192_cfb128 = `enum LN_aes_192_cfb128 = "aes-192-cfb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_192_cfb128); }))) {
            mixin(enumMixinStr_LN_aes_192_cfb128);
        }
    }




    static if(!is(typeof(NID_aes_192_cfb128))) {
        private enum enumMixinStr_NID_aes_192_cfb128 = `enum NID_aes_192_cfb128 = 425;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_192_cfb128); }))) {
            mixin(enumMixinStr_NID_aes_192_cfb128);
        }
    }




    static if(!is(typeof(OBJ_aes_192_cfb128))) {
        private enum enumMixinStr_OBJ_aes_192_cfb128 = `enum OBJ_aes_192_cfb128 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 1L , 24L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aes_192_cfb128); }))) {
            mixin(enumMixinStr_OBJ_aes_192_cfb128);
        }
    }




    static if(!is(typeof(SN_id_aes192_wrap))) {
        private enum enumMixinStr_SN_id_aes192_wrap = `enum SN_id_aes192_wrap = "id-aes192-wrap";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_aes192_wrap); }))) {
            mixin(enumMixinStr_SN_id_aes192_wrap);
        }
    }




    static if(!is(typeof(NID_id_aes192_wrap))) {
        private enum enumMixinStr_NID_id_aes192_wrap = `enum NID_id_aes192_wrap = 789;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_aes192_wrap); }))) {
            mixin(enumMixinStr_NID_id_aes192_wrap);
        }
    }




    static if(!is(typeof(OBJ_id_aes192_wrap))) {
        private enum enumMixinStr_OBJ_id_aes192_wrap = `enum OBJ_id_aes192_wrap = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 1L , 25L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_aes192_wrap); }))) {
            mixin(enumMixinStr_OBJ_id_aes192_wrap);
        }
    }




    static if(!is(typeof(SN_aes_192_gcm))) {
        private enum enumMixinStr_SN_aes_192_gcm = `enum SN_aes_192_gcm = "id-aes192-GCM";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_192_gcm); }))) {
            mixin(enumMixinStr_SN_aes_192_gcm);
        }
    }




    static if(!is(typeof(LN_aes_192_gcm))) {
        private enum enumMixinStr_LN_aes_192_gcm = `enum LN_aes_192_gcm = "aes-192-gcm";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_192_gcm); }))) {
            mixin(enumMixinStr_LN_aes_192_gcm);
        }
    }




    static if(!is(typeof(NID_aes_192_gcm))) {
        private enum enumMixinStr_NID_aes_192_gcm = `enum NID_aes_192_gcm = 898;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_192_gcm); }))) {
            mixin(enumMixinStr_NID_aes_192_gcm);
        }
    }




    static if(!is(typeof(OBJ_aes_192_gcm))) {
        private enum enumMixinStr_OBJ_aes_192_gcm = `enum OBJ_aes_192_gcm = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 1L , 26L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aes_192_gcm); }))) {
            mixin(enumMixinStr_OBJ_aes_192_gcm);
        }
    }




    static if(!is(typeof(SN_aes_192_ccm))) {
        private enum enumMixinStr_SN_aes_192_ccm = `enum SN_aes_192_ccm = "id-aes192-CCM";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_192_ccm); }))) {
            mixin(enumMixinStr_SN_aes_192_ccm);
        }
    }




    static if(!is(typeof(LN_aes_192_ccm))) {
        private enum enumMixinStr_LN_aes_192_ccm = `enum LN_aes_192_ccm = "aes-192-ccm";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_192_ccm); }))) {
            mixin(enumMixinStr_LN_aes_192_ccm);
        }
    }




    static if(!is(typeof(NID_aes_192_ccm))) {
        private enum enumMixinStr_NID_aes_192_ccm = `enum NID_aes_192_ccm = 899;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_192_ccm); }))) {
            mixin(enumMixinStr_NID_aes_192_ccm);
        }
    }




    static if(!is(typeof(OBJ_aes_192_ccm))) {
        private enum enumMixinStr_OBJ_aes_192_ccm = `enum OBJ_aes_192_ccm = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 1L , 27L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aes_192_ccm); }))) {
            mixin(enumMixinStr_OBJ_aes_192_ccm);
        }
    }




    static if(!is(typeof(SN_id_aes192_wrap_pad))) {
        private enum enumMixinStr_SN_id_aes192_wrap_pad = `enum SN_id_aes192_wrap_pad = "id-aes192-wrap-pad";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_aes192_wrap_pad); }))) {
            mixin(enumMixinStr_SN_id_aes192_wrap_pad);
        }
    }




    static if(!is(typeof(NID_id_aes192_wrap_pad))) {
        private enum enumMixinStr_NID_id_aes192_wrap_pad = `enum NID_id_aes192_wrap_pad = 900;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_aes192_wrap_pad); }))) {
            mixin(enumMixinStr_NID_id_aes192_wrap_pad);
        }
    }




    static if(!is(typeof(OBJ_id_aes192_wrap_pad))) {
        private enum enumMixinStr_OBJ_id_aes192_wrap_pad = `enum OBJ_id_aes192_wrap_pad = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 1L , 28L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_aes192_wrap_pad); }))) {
            mixin(enumMixinStr_OBJ_id_aes192_wrap_pad);
        }
    }




    static if(!is(typeof(SN_aes_256_ecb))) {
        private enum enumMixinStr_SN_aes_256_ecb = `enum SN_aes_256_ecb = "AES-256-ECB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_256_ecb); }))) {
            mixin(enumMixinStr_SN_aes_256_ecb);
        }
    }




    static if(!is(typeof(LN_aes_256_ecb))) {
        private enum enumMixinStr_LN_aes_256_ecb = `enum LN_aes_256_ecb = "aes-256-ecb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_256_ecb); }))) {
            mixin(enumMixinStr_LN_aes_256_ecb);
        }
    }




    static if(!is(typeof(NID_aes_256_ecb))) {
        private enum enumMixinStr_NID_aes_256_ecb = `enum NID_aes_256_ecb = 426;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_256_ecb); }))) {
            mixin(enumMixinStr_NID_aes_256_ecb);
        }
    }




    static if(!is(typeof(OBJ_aes_256_ecb))) {
        private enum enumMixinStr_OBJ_aes_256_ecb = `enum OBJ_aes_256_ecb = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 1L , 41L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aes_256_ecb); }))) {
            mixin(enumMixinStr_OBJ_aes_256_ecb);
        }
    }




    static if(!is(typeof(SN_aes_256_cbc))) {
        private enum enumMixinStr_SN_aes_256_cbc = `enum SN_aes_256_cbc = "AES-256-CBC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_256_cbc); }))) {
            mixin(enumMixinStr_SN_aes_256_cbc);
        }
    }




    static if(!is(typeof(LN_aes_256_cbc))) {
        private enum enumMixinStr_LN_aes_256_cbc = `enum LN_aes_256_cbc = "aes-256-cbc";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_256_cbc); }))) {
            mixin(enumMixinStr_LN_aes_256_cbc);
        }
    }




    static if(!is(typeof(NID_aes_256_cbc))) {
        private enum enumMixinStr_NID_aes_256_cbc = `enum NID_aes_256_cbc = 427;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_256_cbc); }))) {
            mixin(enumMixinStr_NID_aes_256_cbc);
        }
    }




    static if(!is(typeof(OBJ_aes_256_cbc))) {
        private enum enumMixinStr_OBJ_aes_256_cbc = `enum OBJ_aes_256_cbc = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 1L , 42L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aes_256_cbc); }))) {
            mixin(enumMixinStr_OBJ_aes_256_cbc);
        }
    }




    static if(!is(typeof(SN_aes_256_ofb128))) {
        private enum enumMixinStr_SN_aes_256_ofb128 = `enum SN_aes_256_ofb128 = "AES-256-OFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_256_ofb128); }))) {
            mixin(enumMixinStr_SN_aes_256_ofb128);
        }
    }




    static if(!is(typeof(LN_aes_256_ofb128))) {
        private enum enumMixinStr_LN_aes_256_ofb128 = `enum LN_aes_256_ofb128 = "aes-256-ofb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_256_ofb128); }))) {
            mixin(enumMixinStr_LN_aes_256_ofb128);
        }
    }




    static if(!is(typeof(NID_aes_256_ofb128))) {
        private enum enumMixinStr_NID_aes_256_ofb128 = `enum NID_aes_256_ofb128 = 428;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_256_ofb128); }))) {
            mixin(enumMixinStr_NID_aes_256_ofb128);
        }
    }




    static if(!is(typeof(OBJ_aes_256_ofb128))) {
        private enum enumMixinStr_OBJ_aes_256_ofb128 = `enum OBJ_aes_256_ofb128 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 1L , 43L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aes_256_ofb128); }))) {
            mixin(enumMixinStr_OBJ_aes_256_ofb128);
        }
    }




    static if(!is(typeof(SN_aes_256_cfb128))) {
        private enum enumMixinStr_SN_aes_256_cfb128 = `enum SN_aes_256_cfb128 = "AES-256-CFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_256_cfb128); }))) {
            mixin(enumMixinStr_SN_aes_256_cfb128);
        }
    }




    static if(!is(typeof(LN_aes_256_cfb128))) {
        private enum enumMixinStr_LN_aes_256_cfb128 = `enum LN_aes_256_cfb128 = "aes-256-cfb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_256_cfb128); }))) {
            mixin(enumMixinStr_LN_aes_256_cfb128);
        }
    }




    static if(!is(typeof(NID_aes_256_cfb128))) {
        private enum enumMixinStr_NID_aes_256_cfb128 = `enum NID_aes_256_cfb128 = 429;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_256_cfb128); }))) {
            mixin(enumMixinStr_NID_aes_256_cfb128);
        }
    }




    static if(!is(typeof(OBJ_aes_256_cfb128))) {
        private enum enumMixinStr_OBJ_aes_256_cfb128 = `enum OBJ_aes_256_cfb128 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 1L , 44L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aes_256_cfb128); }))) {
            mixin(enumMixinStr_OBJ_aes_256_cfb128);
        }
    }




    static if(!is(typeof(SN_id_aes256_wrap))) {
        private enum enumMixinStr_SN_id_aes256_wrap = `enum SN_id_aes256_wrap = "id-aes256-wrap";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_aes256_wrap); }))) {
            mixin(enumMixinStr_SN_id_aes256_wrap);
        }
    }




    static if(!is(typeof(NID_id_aes256_wrap))) {
        private enum enumMixinStr_NID_id_aes256_wrap = `enum NID_id_aes256_wrap = 790;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_aes256_wrap); }))) {
            mixin(enumMixinStr_NID_id_aes256_wrap);
        }
    }




    static if(!is(typeof(OBJ_id_aes256_wrap))) {
        private enum enumMixinStr_OBJ_id_aes256_wrap = `enum OBJ_id_aes256_wrap = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 1L , 45L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_aes256_wrap); }))) {
            mixin(enumMixinStr_OBJ_id_aes256_wrap);
        }
    }




    static if(!is(typeof(SN_aes_256_gcm))) {
        private enum enumMixinStr_SN_aes_256_gcm = `enum SN_aes_256_gcm = "id-aes256-GCM";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_256_gcm); }))) {
            mixin(enumMixinStr_SN_aes_256_gcm);
        }
    }




    static if(!is(typeof(LN_aes_256_gcm))) {
        private enum enumMixinStr_LN_aes_256_gcm = `enum LN_aes_256_gcm = "aes-256-gcm";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_256_gcm); }))) {
            mixin(enumMixinStr_LN_aes_256_gcm);
        }
    }




    static if(!is(typeof(NID_aes_256_gcm))) {
        private enum enumMixinStr_NID_aes_256_gcm = `enum NID_aes_256_gcm = 901;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_256_gcm); }))) {
            mixin(enumMixinStr_NID_aes_256_gcm);
        }
    }




    static if(!is(typeof(OBJ_aes_256_gcm))) {
        private enum enumMixinStr_OBJ_aes_256_gcm = `enum OBJ_aes_256_gcm = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 1L , 46L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aes_256_gcm); }))) {
            mixin(enumMixinStr_OBJ_aes_256_gcm);
        }
    }




    static if(!is(typeof(SN_aes_256_ccm))) {
        private enum enumMixinStr_SN_aes_256_ccm = `enum SN_aes_256_ccm = "id-aes256-CCM";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_256_ccm); }))) {
            mixin(enumMixinStr_SN_aes_256_ccm);
        }
    }




    static if(!is(typeof(LN_aes_256_ccm))) {
        private enum enumMixinStr_LN_aes_256_ccm = `enum LN_aes_256_ccm = "aes-256-ccm";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_256_ccm); }))) {
            mixin(enumMixinStr_LN_aes_256_ccm);
        }
    }




    static if(!is(typeof(NID_aes_256_ccm))) {
        private enum enumMixinStr_NID_aes_256_ccm = `enum NID_aes_256_ccm = 902;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_256_ccm); }))) {
            mixin(enumMixinStr_NID_aes_256_ccm);
        }
    }




    static if(!is(typeof(OBJ_aes_256_ccm))) {
        private enum enumMixinStr_OBJ_aes_256_ccm = `enum OBJ_aes_256_ccm = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 1L , 47L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aes_256_ccm); }))) {
            mixin(enumMixinStr_OBJ_aes_256_ccm);
        }
    }




    static if(!is(typeof(SN_id_aes256_wrap_pad))) {
        private enum enumMixinStr_SN_id_aes256_wrap_pad = `enum SN_id_aes256_wrap_pad = "id-aes256-wrap-pad";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_aes256_wrap_pad); }))) {
            mixin(enumMixinStr_SN_id_aes256_wrap_pad);
        }
    }




    static if(!is(typeof(NID_id_aes256_wrap_pad))) {
        private enum enumMixinStr_NID_id_aes256_wrap_pad = `enum NID_id_aes256_wrap_pad = 903;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_aes256_wrap_pad); }))) {
            mixin(enumMixinStr_NID_id_aes256_wrap_pad);
        }
    }




    static if(!is(typeof(OBJ_id_aes256_wrap_pad))) {
        private enum enumMixinStr_OBJ_id_aes256_wrap_pad = `enum OBJ_id_aes256_wrap_pad = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 1L , 48L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_aes256_wrap_pad); }))) {
            mixin(enumMixinStr_OBJ_id_aes256_wrap_pad);
        }
    }




    static if(!is(typeof(SN_aes_128_xts))) {
        private enum enumMixinStr_SN_aes_128_xts = `enum SN_aes_128_xts = "AES-128-XTS";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_128_xts); }))) {
            mixin(enumMixinStr_SN_aes_128_xts);
        }
    }




    static if(!is(typeof(LN_aes_128_xts))) {
        private enum enumMixinStr_LN_aes_128_xts = `enum LN_aes_128_xts = "aes-128-xts";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_128_xts); }))) {
            mixin(enumMixinStr_LN_aes_128_xts);
        }
    }




    static if(!is(typeof(NID_aes_128_xts))) {
        private enum enumMixinStr_NID_aes_128_xts = `enum NID_aes_128_xts = 913;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_128_xts); }))) {
            mixin(enumMixinStr_NID_aes_128_xts);
        }
    }




    static if(!is(typeof(OBJ_aes_128_xts))) {
        private enum enumMixinStr_OBJ_aes_128_xts = `enum OBJ_aes_128_xts = OBJ_ieee_siswg , 0L , 1L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aes_128_xts); }))) {
            mixin(enumMixinStr_OBJ_aes_128_xts);
        }
    }




    static if(!is(typeof(SN_aes_256_xts))) {
        private enum enumMixinStr_SN_aes_256_xts = `enum SN_aes_256_xts = "AES-256-XTS";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_256_xts); }))) {
            mixin(enumMixinStr_SN_aes_256_xts);
        }
    }




    static if(!is(typeof(LN_aes_256_xts))) {
        private enum enumMixinStr_LN_aes_256_xts = `enum LN_aes_256_xts = "aes-256-xts";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_256_xts); }))) {
            mixin(enumMixinStr_LN_aes_256_xts);
        }
    }




    static if(!is(typeof(NID_aes_256_xts))) {
        private enum enumMixinStr_NID_aes_256_xts = `enum NID_aes_256_xts = 914;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_256_xts); }))) {
            mixin(enumMixinStr_NID_aes_256_xts);
        }
    }




    static if(!is(typeof(OBJ_aes_256_xts))) {
        private enum enumMixinStr_OBJ_aes_256_xts = `enum OBJ_aes_256_xts = OBJ_ieee_siswg , 0L , 1L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aes_256_xts); }))) {
            mixin(enumMixinStr_OBJ_aes_256_xts);
        }
    }




    static if(!is(typeof(SN_aes_128_cfb1))) {
        private enum enumMixinStr_SN_aes_128_cfb1 = `enum SN_aes_128_cfb1 = "AES-128-CFB1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_128_cfb1); }))) {
            mixin(enumMixinStr_SN_aes_128_cfb1);
        }
    }




    static if(!is(typeof(LN_aes_128_cfb1))) {
        private enum enumMixinStr_LN_aes_128_cfb1 = `enum LN_aes_128_cfb1 = "aes-128-cfb1";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_128_cfb1); }))) {
            mixin(enumMixinStr_LN_aes_128_cfb1);
        }
    }




    static if(!is(typeof(NID_aes_128_cfb1))) {
        private enum enumMixinStr_NID_aes_128_cfb1 = `enum NID_aes_128_cfb1 = 650;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_128_cfb1); }))) {
            mixin(enumMixinStr_NID_aes_128_cfb1);
        }
    }




    static if(!is(typeof(SN_aes_192_cfb1))) {
        private enum enumMixinStr_SN_aes_192_cfb1 = `enum SN_aes_192_cfb1 = "AES-192-CFB1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_192_cfb1); }))) {
            mixin(enumMixinStr_SN_aes_192_cfb1);
        }
    }




    static if(!is(typeof(LN_aes_192_cfb1))) {
        private enum enumMixinStr_LN_aes_192_cfb1 = `enum LN_aes_192_cfb1 = "aes-192-cfb1";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_192_cfb1); }))) {
            mixin(enumMixinStr_LN_aes_192_cfb1);
        }
    }




    static if(!is(typeof(NID_aes_192_cfb1))) {
        private enum enumMixinStr_NID_aes_192_cfb1 = `enum NID_aes_192_cfb1 = 651;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_192_cfb1); }))) {
            mixin(enumMixinStr_NID_aes_192_cfb1);
        }
    }




    static if(!is(typeof(SN_aes_256_cfb1))) {
        private enum enumMixinStr_SN_aes_256_cfb1 = `enum SN_aes_256_cfb1 = "AES-256-CFB1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_256_cfb1); }))) {
            mixin(enumMixinStr_SN_aes_256_cfb1);
        }
    }




    static if(!is(typeof(LN_aes_256_cfb1))) {
        private enum enumMixinStr_LN_aes_256_cfb1 = `enum LN_aes_256_cfb1 = "aes-256-cfb1";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_256_cfb1); }))) {
            mixin(enumMixinStr_LN_aes_256_cfb1);
        }
    }




    static if(!is(typeof(NID_aes_256_cfb1))) {
        private enum enumMixinStr_NID_aes_256_cfb1 = `enum NID_aes_256_cfb1 = 652;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_256_cfb1); }))) {
            mixin(enumMixinStr_NID_aes_256_cfb1);
        }
    }




    static if(!is(typeof(SN_aes_128_cfb8))) {
        private enum enumMixinStr_SN_aes_128_cfb8 = `enum SN_aes_128_cfb8 = "AES-128-CFB8";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_128_cfb8); }))) {
            mixin(enumMixinStr_SN_aes_128_cfb8);
        }
    }




    static if(!is(typeof(LN_aes_128_cfb8))) {
        private enum enumMixinStr_LN_aes_128_cfb8 = `enum LN_aes_128_cfb8 = "aes-128-cfb8";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_128_cfb8); }))) {
            mixin(enumMixinStr_LN_aes_128_cfb8);
        }
    }




    static if(!is(typeof(NID_aes_128_cfb8))) {
        private enum enumMixinStr_NID_aes_128_cfb8 = `enum NID_aes_128_cfb8 = 653;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_128_cfb8); }))) {
            mixin(enumMixinStr_NID_aes_128_cfb8);
        }
    }




    static if(!is(typeof(SN_aes_192_cfb8))) {
        private enum enumMixinStr_SN_aes_192_cfb8 = `enum SN_aes_192_cfb8 = "AES-192-CFB8";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_192_cfb8); }))) {
            mixin(enumMixinStr_SN_aes_192_cfb8);
        }
    }




    static if(!is(typeof(LN_aes_192_cfb8))) {
        private enum enumMixinStr_LN_aes_192_cfb8 = `enum LN_aes_192_cfb8 = "aes-192-cfb8";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_192_cfb8); }))) {
            mixin(enumMixinStr_LN_aes_192_cfb8);
        }
    }




    static if(!is(typeof(NID_aes_192_cfb8))) {
        private enum enumMixinStr_NID_aes_192_cfb8 = `enum NID_aes_192_cfb8 = 654;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_192_cfb8); }))) {
            mixin(enumMixinStr_NID_aes_192_cfb8);
        }
    }




    static if(!is(typeof(SN_aes_256_cfb8))) {
        private enum enumMixinStr_SN_aes_256_cfb8 = `enum SN_aes_256_cfb8 = "AES-256-CFB8";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_256_cfb8); }))) {
            mixin(enumMixinStr_SN_aes_256_cfb8);
        }
    }




    static if(!is(typeof(LN_aes_256_cfb8))) {
        private enum enumMixinStr_LN_aes_256_cfb8 = `enum LN_aes_256_cfb8 = "aes-256-cfb8";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_256_cfb8); }))) {
            mixin(enumMixinStr_LN_aes_256_cfb8);
        }
    }




    static if(!is(typeof(NID_aes_256_cfb8))) {
        private enum enumMixinStr_NID_aes_256_cfb8 = `enum NID_aes_256_cfb8 = 655;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_256_cfb8); }))) {
            mixin(enumMixinStr_NID_aes_256_cfb8);
        }
    }




    static if(!is(typeof(SN_aes_128_ctr))) {
        private enum enumMixinStr_SN_aes_128_ctr = `enum SN_aes_128_ctr = "AES-128-CTR";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_128_ctr); }))) {
            mixin(enumMixinStr_SN_aes_128_ctr);
        }
    }




    static if(!is(typeof(LN_aes_128_ctr))) {
        private enum enumMixinStr_LN_aes_128_ctr = `enum LN_aes_128_ctr = "aes-128-ctr";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_128_ctr); }))) {
            mixin(enumMixinStr_LN_aes_128_ctr);
        }
    }




    static if(!is(typeof(NID_aes_128_ctr))) {
        private enum enumMixinStr_NID_aes_128_ctr = `enum NID_aes_128_ctr = 904;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_128_ctr); }))) {
            mixin(enumMixinStr_NID_aes_128_ctr);
        }
    }




    static if(!is(typeof(SN_aes_192_ctr))) {
        private enum enumMixinStr_SN_aes_192_ctr = `enum SN_aes_192_ctr = "AES-192-CTR";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_192_ctr); }))) {
            mixin(enumMixinStr_SN_aes_192_ctr);
        }
    }




    static if(!is(typeof(LN_aes_192_ctr))) {
        private enum enumMixinStr_LN_aes_192_ctr = `enum LN_aes_192_ctr = "aes-192-ctr";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_192_ctr); }))) {
            mixin(enumMixinStr_LN_aes_192_ctr);
        }
    }




    static if(!is(typeof(NID_aes_192_ctr))) {
        private enum enumMixinStr_NID_aes_192_ctr = `enum NID_aes_192_ctr = 905;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_192_ctr); }))) {
            mixin(enumMixinStr_NID_aes_192_ctr);
        }
    }




    static if(!is(typeof(SN_aes_256_ctr))) {
        private enum enumMixinStr_SN_aes_256_ctr = `enum SN_aes_256_ctr = "AES-256-CTR";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_256_ctr); }))) {
            mixin(enumMixinStr_SN_aes_256_ctr);
        }
    }




    static if(!is(typeof(LN_aes_256_ctr))) {
        private enum enumMixinStr_LN_aes_256_ctr = `enum LN_aes_256_ctr = "aes-256-ctr";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_256_ctr); }))) {
            mixin(enumMixinStr_LN_aes_256_ctr);
        }
    }




    static if(!is(typeof(NID_aes_256_ctr))) {
        private enum enumMixinStr_NID_aes_256_ctr = `enum NID_aes_256_ctr = 906;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_256_ctr); }))) {
            mixin(enumMixinStr_NID_aes_256_ctr);
        }
    }




    static if(!is(typeof(SN_aes_128_ocb))) {
        private enum enumMixinStr_SN_aes_128_ocb = `enum SN_aes_128_ocb = "AES-128-OCB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_128_ocb); }))) {
            mixin(enumMixinStr_SN_aes_128_ocb);
        }
    }




    static if(!is(typeof(LN_aes_128_ocb))) {
        private enum enumMixinStr_LN_aes_128_ocb = `enum LN_aes_128_ocb = "aes-128-ocb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_128_ocb); }))) {
            mixin(enumMixinStr_LN_aes_128_ocb);
        }
    }




    static if(!is(typeof(NID_aes_128_ocb))) {
        private enum enumMixinStr_NID_aes_128_ocb = `enum NID_aes_128_ocb = 958;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_128_ocb); }))) {
            mixin(enumMixinStr_NID_aes_128_ocb);
        }
    }




    static if(!is(typeof(SN_aes_192_ocb))) {
        private enum enumMixinStr_SN_aes_192_ocb = `enum SN_aes_192_ocb = "AES-192-OCB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_192_ocb); }))) {
            mixin(enumMixinStr_SN_aes_192_ocb);
        }
    }




    static if(!is(typeof(LN_aes_192_ocb))) {
        private enum enumMixinStr_LN_aes_192_ocb = `enum LN_aes_192_ocb = "aes-192-ocb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_192_ocb); }))) {
            mixin(enumMixinStr_LN_aes_192_ocb);
        }
    }




    static if(!is(typeof(NID_aes_192_ocb))) {
        private enum enumMixinStr_NID_aes_192_ocb = `enum NID_aes_192_ocb = 959;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_192_ocb); }))) {
            mixin(enumMixinStr_NID_aes_192_ocb);
        }
    }




    static if(!is(typeof(SN_aes_256_ocb))) {
        private enum enumMixinStr_SN_aes_256_ocb = `enum SN_aes_256_ocb = "AES-256-OCB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_256_ocb); }))) {
            mixin(enumMixinStr_SN_aes_256_ocb);
        }
    }




    static if(!is(typeof(LN_aes_256_ocb))) {
        private enum enumMixinStr_LN_aes_256_ocb = `enum LN_aes_256_ocb = "aes-256-ocb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_256_ocb); }))) {
            mixin(enumMixinStr_LN_aes_256_ocb);
        }
    }




    static if(!is(typeof(NID_aes_256_ocb))) {
        private enum enumMixinStr_NID_aes_256_ocb = `enum NID_aes_256_ocb = 960;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_256_ocb); }))) {
            mixin(enumMixinStr_NID_aes_256_ocb);
        }
    }




    static if(!is(typeof(SN_des_cfb1))) {
        private enum enumMixinStr_SN_des_cfb1 = `enum SN_des_cfb1 = "DES-CFB1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_des_cfb1); }))) {
            mixin(enumMixinStr_SN_des_cfb1);
        }
    }




    static if(!is(typeof(LN_des_cfb1))) {
        private enum enumMixinStr_LN_des_cfb1 = `enum LN_des_cfb1 = "des-cfb1";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_des_cfb1); }))) {
            mixin(enumMixinStr_LN_des_cfb1);
        }
    }




    static if(!is(typeof(NID_des_cfb1))) {
        private enum enumMixinStr_NID_des_cfb1 = `enum NID_des_cfb1 = 656;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_des_cfb1); }))) {
            mixin(enumMixinStr_NID_des_cfb1);
        }
    }




    static if(!is(typeof(SN_des_cfb8))) {
        private enum enumMixinStr_SN_des_cfb8 = `enum SN_des_cfb8 = "DES-CFB8";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_des_cfb8); }))) {
            mixin(enumMixinStr_SN_des_cfb8);
        }
    }




    static if(!is(typeof(LN_des_cfb8))) {
        private enum enumMixinStr_LN_des_cfb8 = `enum LN_des_cfb8 = "des-cfb8";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_des_cfb8); }))) {
            mixin(enumMixinStr_LN_des_cfb8);
        }
    }




    static if(!is(typeof(NID_des_cfb8))) {
        private enum enumMixinStr_NID_des_cfb8 = `enum NID_des_cfb8 = 657;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_des_cfb8); }))) {
            mixin(enumMixinStr_NID_des_cfb8);
        }
    }




    static if(!is(typeof(SN_des_ede3_cfb1))) {
        private enum enumMixinStr_SN_des_ede3_cfb1 = `enum SN_des_ede3_cfb1 = "DES-EDE3-CFB1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_des_ede3_cfb1); }))) {
            mixin(enumMixinStr_SN_des_ede3_cfb1);
        }
    }




    static if(!is(typeof(LN_des_ede3_cfb1))) {
        private enum enumMixinStr_LN_des_ede3_cfb1 = `enum LN_des_ede3_cfb1 = "des-ede3-cfb1";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_des_ede3_cfb1); }))) {
            mixin(enumMixinStr_LN_des_ede3_cfb1);
        }
    }




    static if(!is(typeof(NID_des_ede3_cfb1))) {
        private enum enumMixinStr_NID_des_ede3_cfb1 = `enum NID_des_ede3_cfb1 = 658;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_des_ede3_cfb1); }))) {
            mixin(enumMixinStr_NID_des_ede3_cfb1);
        }
    }




    static if(!is(typeof(SN_des_ede3_cfb8))) {
        private enum enumMixinStr_SN_des_ede3_cfb8 = `enum SN_des_ede3_cfb8 = "DES-EDE3-CFB8";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_des_ede3_cfb8); }))) {
            mixin(enumMixinStr_SN_des_ede3_cfb8);
        }
    }




    static if(!is(typeof(LN_des_ede3_cfb8))) {
        private enum enumMixinStr_LN_des_ede3_cfb8 = `enum LN_des_ede3_cfb8 = "des-ede3-cfb8";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_des_ede3_cfb8); }))) {
            mixin(enumMixinStr_LN_des_ede3_cfb8);
        }
    }




    static if(!is(typeof(NID_des_ede3_cfb8))) {
        private enum enumMixinStr_NID_des_ede3_cfb8 = `enum NID_des_ede3_cfb8 = 659;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_des_ede3_cfb8); }))) {
            mixin(enumMixinStr_NID_des_ede3_cfb8);
        }
    }




    static if(!is(typeof(OBJ_nist_hashalgs))) {
        private enum enumMixinStr_OBJ_nist_hashalgs = `enum OBJ_nist_hashalgs = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_nist_hashalgs); }))) {
            mixin(enumMixinStr_OBJ_nist_hashalgs);
        }
    }




    static if(!is(typeof(SN_sha256))) {
        private enum enumMixinStr_SN_sha256 = `enum SN_sha256 = "SHA256";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sha256); }))) {
            mixin(enumMixinStr_SN_sha256);
        }
    }




    static if(!is(typeof(LN_sha256))) {
        private enum enumMixinStr_LN_sha256 = `enum LN_sha256 = "sha256";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sha256); }))) {
            mixin(enumMixinStr_LN_sha256);
        }
    }




    static if(!is(typeof(NID_sha256))) {
        private enum enumMixinStr_NID_sha256 = `enum NID_sha256 = 672;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sha256); }))) {
            mixin(enumMixinStr_NID_sha256);
        }
    }




    static if(!is(typeof(OBJ_sha256))) {
        private enum enumMixinStr_OBJ_sha256 = `enum OBJ_sha256 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 2L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sha256); }))) {
            mixin(enumMixinStr_OBJ_sha256);
        }
    }




    static if(!is(typeof(SN_sha384))) {
        private enum enumMixinStr_SN_sha384 = `enum SN_sha384 = "SHA384";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sha384); }))) {
            mixin(enumMixinStr_SN_sha384);
        }
    }




    static if(!is(typeof(LN_sha384))) {
        private enum enumMixinStr_LN_sha384 = `enum LN_sha384 = "sha384";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sha384); }))) {
            mixin(enumMixinStr_LN_sha384);
        }
    }




    static if(!is(typeof(NID_sha384))) {
        private enum enumMixinStr_NID_sha384 = `enum NID_sha384 = 673;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sha384); }))) {
            mixin(enumMixinStr_NID_sha384);
        }
    }




    static if(!is(typeof(OBJ_sha384))) {
        private enum enumMixinStr_OBJ_sha384 = `enum OBJ_sha384 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 2L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sha384); }))) {
            mixin(enumMixinStr_OBJ_sha384);
        }
    }




    static if(!is(typeof(SN_sha512))) {
        private enum enumMixinStr_SN_sha512 = `enum SN_sha512 = "SHA512";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sha512); }))) {
            mixin(enumMixinStr_SN_sha512);
        }
    }




    static if(!is(typeof(LN_sha512))) {
        private enum enumMixinStr_LN_sha512 = `enum LN_sha512 = "sha512";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sha512); }))) {
            mixin(enumMixinStr_LN_sha512);
        }
    }




    static if(!is(typeof(NID_sha512))) {
        private enum enumMixinStr_NID_sha512 = `enum NID_sha512 = 674;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sha512); }))) {
            mixin(enumMixinStr_NID_sha512);
        }
    }




    static if(!is(typeof(OBJ_sha512))) {
        private enum enumMixinStr_OBJ_sha512 = `enum OBJ_sha512 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 2L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sha512); }))) {
            mixin(enumMixinStr_OBJ_sha512);
        }
    }




    static if(!is(typeof(SN_sha224))) {
        private enum enumMixinStr_SN_sha224 = `enum SN_sha224 = "SHA224";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sha224); }))) {
            mixin(enumMixinStr_SN_sha224);
        }
    }




    static if(!is(typeof(LN_sha224))) {
        private enum enumMixinStr_LN_sha224 = `enum LN_sha224 = "sha224";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sha224); }))) {
            mixin(enumMixinStr_LN_sha224);
        }
    }




    static if(!is(typeof(NID_sha224))) {
        private enum enumMixinStr_NID_sha224 = `enum NID_sha224 = 675;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sha224); }))) {
            mixin(enumMixinStr_NID_sha224);
        }
    }




    static if(!is(typeof(OBJ_sha224))) {
        private enum enumMixinStr_OBJ_sha224 = `enum OBJ_sha224 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 2L , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sha224); }))) {
            mixin(enumMixinStr_OBJ_sha224);
        }
    }




    static if(!is(typeof(SN_sha512_224))) {
        private enum enumMixinStr_SN_sha512_224 = `enum SN_sha512_224 = "SHA512-224";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sha512_224); }))) {
            mixin(enumMixinStr_SN_sha512_224);
        }
    }




    static if(!is(typeof(LN_sha512_224))) {
        private enum enumMixinStr_LN_sha512_224 = `enum LN_sha512_224 = "sha512-224";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sha512_224); }))) {
            mixin(enumMixinStr_LN_sha512_224);
        }
    }




    static if(!is(typeof(NID_sha512_224))) {
        private enum enumMixinStr_NID_sha512_224 = `enum NID_sha512_224 = 1094;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sha512_224); }))) {
            mixin(enumMixinStr_NID_sha512_224);
        }
    }




    static if(!is(typeof(OBJ_sha512_224))) {
        private enum enumMixinStr_OBJ_sha512_224 = `enum OBJ_sha512_224 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 2L , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sha512_224); }))) {
            mixin(enumMixinStr_OBJ_sha512_224);
        }
    }




    static if(!is(typeof(SN_sha512_256))) {
        private enum enumMixinStr_SN_sha512_256 = `enum SN_sha512_256 = "SHA512-256";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sha512_256); }))) {
            mixin(enumMixinStr_SN_sha512_256);
        }
    }




    static if(!is(typeof(LN_sha512_256))) {
        private enum enumMixinStr_LN_sha512_256 = `enum LN_sha512_256 = "sha512-256";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sha512_256); }))) {
            mixin(enumMixinStr_LN_sha512_256);
        }
    }




    static if(!is(typeof(NID_sha512_256))) {
        private enum enumMixinStr_NID_sha512_256 = `enum NID_sha512_256 = 1095;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sha512_256); }))) {
            mixin(enumMixinStr_NID_sha512_256);
        }
    }




    static if(!is(typeof(OBJ_sha512_256))) {
        private enum enumMixinStr_OBJ_sha512_256 = `enum OBJ_sha512_256 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 2L , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sha512_256); }))) {
            mixin(enumMixinStr_OBJ_sha512_256);
        }
    }




    static if(!is(typeof(SN_sha3_224))) {
        private enum enumMixinStr_SN_sha3_224 = `enum SN_sha3_224 = "SHA3-224";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sha3_224); }))) {
            mixin(enumMixinStr_SN_sha3_224);
        }
    }




    static if(!is(typeof(LN_sha3_224))) {
        private enum enumMixinStr_LN_sha3_224 = `enum LN_sha3_224 = "sha3-224";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sha3_224); }))) {
            mixin(enumMixinStr_LN_sha3_224);
        }
    }




    static if(!is(typeof(NID_sha3_224))) {
        private enum enumMixinStr_NID_sha3_224 = `enum NID_sha3_224 = 1096;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sha3_224); }))) {
            mixin(enumMixinStr_NID_sha3_224);
        }
    }




    static if(!is(typeof(OBJ_sha3_224))) {
        private enum enumMixinStr_OBJ_sha3_224 = `enum OBJ_sha3_224 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 2L , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sha3_224); }))) {
            mixin(enumMixinStr_OBJ_sha3_224);
        }
    }




    static if(!is(typeof(SN_sha3_256))) {
        private enum enumMixinStr_SN_sha3_256 = `enum SN_sha3_256 = "SHA3-256";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sha3_256); }))) {
            mixin(enumMixinStr_SN_sha3_256);
        }
    }




    static if(!is(typeof(LN_sha3_256))) {
        private enum enumMixinStr_LN_sha3_256 = `enum LN_sha3_256 = "sha3-256";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sha3_256); }))) {
            mixin(enumMixinStr_LN_sha3_256);
        }
    }




    static if(!is(typeof(NID_sha3_256))) {
        private enum enumMixinStr_NID_sha3_256 = `enum NID_sha3_256 = 1097;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sha3_256); }))) {
            mixin(enumMixinStr_NID_sha3_256);
        }
    }




    static if(!is(typeof(OBJ_sha3_256))) {
        private enum enumMixinStr_OBJ_sha3_256 = `enum OBJ_sha3_256 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 2L , 8L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sha3_256); }))) {
            mixin(enumMixinStr_OBJ_sha3_256);
        }
    }




    static if(!is(typeof(SN_sha3_384))) {
        private enum enumMixinStr_SN_sha3_384 = `enum SN_sha3_384 = "SHA3-384";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sha3_384); }))) {
            mixin(enumMixinStr_SN_sha3_384);
        }
    }




    static if(!is(typeof(LN_sha3_384))) {
        private enum enumMixinStr_LN_sha3_384 = `enum LN_sha3_384 = "sha3-384";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sha3_384); }))) {
            mixin(enumMixinStr_LN_sha3_384);
        }
    }




    static if(!is(typeof(NID_sha3_384))) {
        private enum enumMixinStr_NID_sha3_384 = `enum NID_sha3_384 = 1098;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sha3_384); }))) {
            mixin(enumMixinStr_NID_sha3_384);
        }
    }




    static if(!is(typeof(OBJ_sha3_384))) {
        private enum enumMixinStr_OBJ_sha3_384 = `enum OBJ_sha3_384 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 2L , 9L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sha3_384); }))) {
            mixin(enumMixinStr_OBJ_sha3_384);
        }
    }




    static if(!is(typeof(SN_sha3_512))) {
        private enum enumMixinStr_SN_sha3_512 = `enum SN_sha3_512 = "SHA3-512";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sha3_512); }))) {
            mixin(enumMixinStr_SN_sha3_512);
        }
    }




    static if(!is(typeof(LN_sha3_512))) {
        private enum enumMixinStr_LN_sha3_512 = `enum LN_sha3_512 = "sha3-512";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sha3_512); }))) {
            mixin(enumMixinStr_LN_sha3_512);
        }
    }




    static if(!is(typeof(NID_sha3_512))) {
        private enum enumMixinStr_NID_sha3_512 = `enum NID_sha3_512 = 1099;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sha3_512); }))) {
            mixin(enumMixinStr_NID_sha3_512);
        }
    }




    static if(!is(typeof(OBJ_sha3_512))) {
        private enum enumMixinStr_OBJ_sha3_512 = `enum OBJ_sha3_512 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 2L , 10L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sha3_512); }))) {
            mixin(enumMixinStr_OBJ_sha3_512);
        }
    }




    static if(!is(typeof(SN_shake128))) {
        private enum enumMixinStr_SN_shake128 = `enum SN_shake128 = "SHAKE128";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_shake128); }))) {
            mixin(enumMixinStr_SN_shake128);
        }
    }




    static if(!is(typeof(LN_shake128))) {
        private enum enumMixinStr_LN_shake128 = `enum LN_shake128 = "shake128";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_shake128); }))) {
            mixin(enumMixinStr_LN_shake128);
        }
    }




    static if(!is(typeof(NID_shake128))) {
        private enum enumMixinStr_NID_shake128 = `enum NID_shake128 = 1100;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_shake128); }))) {
            mixin(enumMixinStr_NID_shake128);
        }
    }




    static if(!is(typeof(OBJ_shake128))) {
        private enum enumMixinStr_OBJ_shake128 = `enum OBJ_shake128 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 2L , 11L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_shake128); }))) {
            mixin(enumMixinStr_OBJ_shake128);
        }
    }




    static if(!is(typeof(SN_shake256))) {
        private enum enumMixinStr_SN_shake256 = `enum SN_shake256 = "SHAKE256";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_shake256); }))) {
            mixin(enumMixinStr_SN_shake256);
        }
    }




    static if(!is(typeof(LN_shake256))) {
        private enum enumMixinStr_LN_shake256 = `enum LN_shake256 = "shake256";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_shake256); }))) {
            mixin(enumMixinStr_LN_shake256);
        }
    }




    static if(!is(typeof(NID_shake256))) {
        private enum enumMixinStr_NID_shake256 = `enum NID_shake256 = 1101;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_shake256); }))) {
            mixin(enumMixinStr_NID_shake256);
        }
    }




    static if(!is(typeof(OBJ_shake256))) {
        private enum enumMixinStr_OBJ_shake256 = `enum OBJ_shake256 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 2L , 12L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_shake256); }))) {
            mixin(enumMixinStr_OBJ_shake256);
        }
    }




    static if(!is(typeof(SN_hmac_sha3_224))) {
        private enum enumMixinStr_SN_hmac_sha3_224 = `enum SN_hmac_sha3_224 = "id-hmacWithSHA3-224";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_hmac_sha3_224); }))) {
            mixin(enumMixinStr_SN_hmac_sha3_224);
        }
    }




    static if(!is(typeof(LN_hmac_sha3_224))) {
        private enum enumMixinStr_LN_hmac_sha3_224 = `enum LN_hmac_sha3_224 = "hmac-sha3-224";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_hmac_sha3_224); }))) {
            mixin(enumMixinStr_LN_hmac_sha3_224);
        }
    }




    static if(!is(typeof(NID_hmac_sha3_224))) {
        private enum enumMixinStr_NID_hmac_sha3_224 = `enum NID_hmac_sha3_224 = 1102;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_hmac_sha3_224); }))) {
            mixin(enumMixinStr_NID_hmac_sha3_224);
        }
    }




    static if(!is(typeof(OBJ_hmac_sha3_224))) {
        private enum enumMixinStr_OBJ_hmac_sha3_224 = `enum OBJ_hmac_sha3_224 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 2L , 13L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_hmac_sha3_224); }))) {
            mixin(enumMixinStr_OBJ_hmac_sha3_224);
        }
    }




    static if(!is(typeof(SN_hmac_sha3_256))) {
        private enum enumMixinStr_SN_hmac_sha3_256 = `enum SN_hmac_sha3_256 = "id-hmacWithSHA3-256";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_hmac_sha3_256); }))) {
            mixin(enumMixinStr_SN_hmac_sha3_256);
        }
    }




    static if(!is(typeof(LN_hmac_sha3_256))) {
        private enum enumMixinStr_LN_hmac_sha3_256 = `enum LN_hmac_sha3_256 = "hmac-sha3-256";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_hmac_sha3_256); }))) {
            mixin(enumMixinStr_LN_hmac_sha3_256);
        }
    }




    static if(!is(typeof(NID_hmac_sha3_256))) {
        private enum enumMixinStr_NID_hmac_sha3_256 = `enum NID_hmac_sha3_256 = 1103;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_hmac_sha3_256); }))) {
            mixin(enumMixinStr_NID_hmac_sha3_256);
        }
    }




    static if(!is(typeof(OBJ_hmac_sha3_256))) {
        private enum enumMixinStr_OBJ_hmac_sha3_256 = `enum OBJ_hmac_sha3_256 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 2L , 14L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_hmac_sha3_256); }))) {
            mixin(enumMixinStr_OBJ_hmac_sha3_256);
        }
    }




    static if(!is(typeof(SN_hmac_sha3_384))) {
        private enum enumMixinStr_SN_hmac_sha3_384 = `enum SN_hmac_sha3_384 = "id-hmacWithSHA3-384";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_hmac_sha3_384); }))) {
            mixin(enumMixinStr_SN_hmac_sha3_384);
        }
    }




    static if(!is(typeof(LN_hmac_sha3_384))) {
        private enum enumMixinStr_LN_hmac_sha3_384 = `enum LN_hmac_sha3_384 = "hmac-sha3-384";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_hmac_sha3_384); }))) {
            mixin(enumMixinStr_LN_hmac_sha3_384);
        }
    }




    static if(!is(typeof(NID_hmac_sha3_384))) {
        private enum enumMixinStr_NID_hmac_sha3_384 = `enum NID_hmac_sha3_384 = 1104;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_hmac_sha3_384); }))) {
            mixin(enumMixinStr_NID_hmac_sha3_384);
        }
    }




    static if(!is(typeof(OBJ_hmac_sha3_384))) {
        private enum enumMixinStr_OBJ_hmac_sha3_384 = `enum OBJ_hmac_sha3_384 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 2L , 15L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_hmac_sha3_384); }))) {
            mixin(enumMixinStr_OBJ_hmac_sha3_384);
        }
    }




    static if(!is(typeof(SN_hmac_sha3_512))) {
        private enum enumMixinStr_SN_hmac_sha3_512 = `enum SN_hmac_sha3_512 = "id-hmacWithSHA3-512";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_hmac_sha3_512); }))) {
            mixin(enumMixinStr_SN_hmac_sha3_512);
        }
    }




    static if(!is(typeof(LN_hmac_sha3_512))) {
        private enum enumMixinStr_LN_hmac_sha3_512 = `enum LN_hmac_sha3_512 = "hmac-sha3-512";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_hmac_sha3_512); }))) {
            mixin(enumMixinStr_LN_hmac_sha3_512);
        }
    }




    static if(!is(typeof(NID_hmac_sha3_512))) {
        private enum enumMixinStr_NID_hmac_sha3_512 = `enum NID_hmac_sha3_512 = 1105;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_hmac_sha3_512); }))) {
            mixin(enumMixinStr_NID_hmac_sha3_512);
        }
    }




    static if(!is(typeof(OBJ_hmac_sha3_512))) {
        private enum enumMixinStr_OBJ_hmac_sha3_512 = `enum OBJ_hmac_sha3_512 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 2L , 16L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_hmac_sha3_512); }))) {
            mixin(enumMixinStr_OBJ_hmac_sha3_512);
        }
    }




    static if(!is(typeof(OBJ_dsa_with_sha2))) {
        private enum enumMixinStr_OBJ_dsa_with_sha2 = `enum OBJ_dsa_with_sha2 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dsa_with_sha2); }))) {
            mixin(enumMixinStr_OBJ_dsa_with_sha2);
        }
    }




    static if(!is(typeof(SN_dsa_with_SHA224))) {
        private enum enumMixinStr_SN_dsa_with_SHA224 = `enum SN_dsa_with_SHA224 = "dsa_with_SHA224";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dsa_with_SHA224); }))) {
            mixin(enumMixinStr_SN_dsa_with_SHA224);
        }
    }




    static if(!is(typeof(NID_dsa_with_SHA224))) {
        private enum enumMixinStr_NID_dsa_with_SHA224 = `enum NID_dsa_with_SHA224 = 802;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dsa_with_SHA224); }))) {
            mixin(enumMixinStr_NID_dsa_with_SHA224);
        }
    }




    static if(!is(typeof(OBJ_dsa_with_SHA224))) {
        private enum enumMixinStr_OBJ_dsa_with_SHA224 = `enum OBJ_dsa_with_SHA224 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 3L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dsa_with_SHA224); }))) {
            mixin(enumMixinStr_OBJ_dsa_with_SHA224);
        }
    }




    static if(!is(typeof(SN_dsa_with_SHA256))) {
        private enum enumMixinStr_SN_dsa_with_SHA256 = `enum SN_dsa_with_SHA256 = "dsa_with_SHA256";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dsa_with_SHA256); }))) {
            mixin(enumMixinStr_SN_dsa_with_SHA256);
        }
    }




    static if(!is(typeof(NID_dsa_with_SHA256))) {
        private enum enumMixinStr_NID_dsa_with_SHA256 = `enum NID_dsa_with_SHA256 = 803;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dsa_with_SHA256); }))) {
            mixin(enumMixinStr_NID_dsa_with_SHA256);
        }
    }




    static if(!is(typeof(OBJ_dsa_with_SHA256))) {
        private enum enumMixinStr_OBJ_dsa_with_SHA256 = `enum OBJ_dsa_with_SHA256 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 3L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dsa_with_SHA256); }))) {
            mixin(enumMixinStr_OBJ_dsa_with_SHA256);
        }
    }




    static if(!is(typeof(OBJ_sigAlgs))) {
        private enum enumMixinStr_OBJ_sigAlgs = `enum OBJ_sigAlgs = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sigAlgs); }))) {
            mixin(enumMixinStr_OBJ_sigAlgs);
        }
    }




    static if(!is(typeof(SN_dsa_with_SHA384))) {
        private enum enumMixinStr_SN_dsa_with_SHA384 = `enum SN_dsa_with_SHA384 = "id-dsa-with-sha384";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dsa_with_SHA384); }))) {
            mixin(enumMixinStr_SN_dsa_with_SHA384);
        }
    }




    static if(!is(typeof(LN_dsa_with_SHA384))) {
        private enum enumMixinStr_LN_dsa_with_SHA384 = `enum LN_dsa_with_SHA384 = "dsa_with_SHA384";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_dsa_with_SHA384); }))) {
            mixin(enumMixinStr_LN_dsa_with_SHA384);
        }
    }




    static if(!is(typeof(NID_dsa_with_SHA384))) {
        private enum enumMixinStr_NID_dsa_with_SHA384 = `enum NID_dsa_with_SHA384 = 1106;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dsa_with_SHA384); }))) {
            mixin(enumMixinStr_NID_dsa_with_SHA384);
        }
    }




    static if(!is(typeof(OBJ_dsa_with_SHA384))) {
        private enum enumMixinStr_OBJ_dsa_with_SHA384 = `enum OBJ_dsa_with_SHA384 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 3L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dsa_with_SHA384); }))) {
            mixin(enumMixinStr_OBJ_dsa_with_SHA384);
        }
    }




    static if(!is(typeof(SN_dsa_with_SHA512))) {
        private enum enumMixinStr_SN_dsa_with_SHA512 = `enum SN_dsa_with_SHA512 = "id-dsa-with-sha512";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dsa_with_SHA512); }))) {
            mixin(enumMixinStr_SN_dsa_with_SHA512);
        }
    }




    static if(!is(typeof(LN_dsa_with_SHA512))) {
        private enum enumMixinStr_LN_dsa_with_SHA512 = `enum LN_dsa_with_SHA512 = "dsa_with_SHA512";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_dsa_with_SHA512); }))) {
            mixin(enumMixinStr_LN_dsa_with_SHA512);
        }
    }




    static if(!is(typeof(NID_dsa_with_SHA512))) {
        private enum enumMixinStr_NID_dsa_with_SHA512 = `enum NID_dsa_with_SHA512 = 1107;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dsa_with_SHA512); }))) {
            mixin(enumMixinStr_NID_dsa_with_SHA512);
        }
    }




    static if(!is(typeof(OBJ_dsa_with_SHA512))) {
        private enum enumMixinStr_OBJ_dsa_with_SHA512 = `enum OBJ_dsa_with_SHA512 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 3L , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dsa_with_SHA512); }))) {
            mixin(enumMixinStr_OBJ_dsa_with_SHA512);
        }
    }




    static if(!is(typeof(SN_dsa_with_SHA3_224))) {
        private enum enumMixinStr_SN_dsa_with_SHA3_224 = `enum SN_dsa_with_SHA3_224 = "id-dsa-with-sha3-224";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dsa_with_SHA3_224); }))) {
            mixin(enumMixinStr_SN_dsa_with_SHA3_224);
        }
    }




    static if(!is(typeof(LN_dsa_with_SHA3_224))) {
        private enum enumMixinStr_LN_dsa_with_SHA3_224 = `enum LN_dsa_with_SHA3_224 = "dsa_with_SHA3-224";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_dsa_with_SHA3_224); }))) {
            mixin(enumMixinStr_LN_dsa_with_SHA3_224);
        }
    }




    static if(!is(typeof(NID_dsa_with_SHA3_224))) {
        private enum enumMixinStr_NID_dsa_with_SHA3_224 = `enum NID_dsa_with_SHA3_224 = 1108;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dsa_with_SHA3_224); }))) {
            mixin(enumMixinStr_NID_dsa_with_SHA3_224);
        }
    }




    static if(!is(typeof(OBJ_dsa_with_SHA3_224))) {
        private enum enumMixinStr_OBJ_dsa_with_SHA3_224 = `enum OBJ_dsa_with_SHA3_224 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 3L , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dsa_with_SHA3_224); }))) {
            mixin(enumMixinStr_OBJ_dsa_with_SHA3_224);
        }
    }




    static if(!is(typeof(SN_dsa_with_SHA3_256))) {
        private enum enumMixinStr_SN_dsa_with_SHA3_256 = `enum SN_dsa_with_SHA3_256 = "id-dsa-with-sha3-256";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dsa_with_SHA3_256); }))) {
            mixin(enumMixinStr_SN_dsa_with_SHA3_256);
        }
    }




    static if(!is(typeof(LN_dsa_with_SHA3_256))) {
        private enum enumMixinStr_LN_dsa_with_SHA3_256 = `enum LN_dsa_with_SHA3_256 = "dsa_with_SHA3-256";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_dsa_with_SHA3_256); }))) {
            mixin(enumMixinStr_LN_dsa_with_SHA3_256);
        }
    }




    static if(!is(typeof(NID_dsa_with_SHA3_256))) {
        private enum enumMixinStr_NID_dsa_with_SHA3_256 = `enum NID_dsa_with_SHA3_256 = 1109;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dsa_with_SHA3_256); }))) {
            mixin(enumMixinStr_NID_dsa_with_SHA3_256);
        }
    }




    static if(!is(typeof(OBJ_dsa_with_SHA3_256))) {
        private enum enumMixinStr_OBJ_dsa_with_SHA3_256 = `enum OBJ_dsa_with_SHA3_256 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 3L , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dsa_with_SHA3_256); }))) {
            mixin(enumMixinStr_OBJ_dsa_with_SHA3_256);
        }
    }




    static if(!is(typeof(SN_dsa_with_SHA3_384))) {
        private enum enumMixinStr_SN_dsa_with_SHA3_384 = `enum SN_dsa_with_SHA3_384 = "id-dsa-with-sha3-384";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dsa_with_SHA3_384); }))) {
            mixin(enumMixinStr_SN_dsa_with_SHA3_384);
        }
    }




    static if(!is(typeof(LN_dsa_with_SHA3_384))) {
        private enum enumMixinStr_LN_dsa_with_SHA3_384 = `enum LN_dsa_with_SHA3_384 = "dsa_with_SHA3-384";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_dsa_with_SHA3_384); }))) {
            mixin(enumMixinStr_LN_dsa_with_SHA3_384);
        }
    }




    static if(!is(typeof(NID_dsa_with_SHA3_384))) {
        private enum enumMixinStr_NID_dsa_with_SHA3_384 = `enum NID_dsa_with_SHA3_384 = 1110;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dsa_with_SHA3_384); }))) {
            mixin(enumMixinStr_NID_dsa_with_SHA3_384);
        }
    }




    static if(!is(typeof(OBJ_dsa_with_SHA3_384))) {
        private enum enumMixinStr_OBJ_dsa_with_SHA3_384 = `enum OBJ_dsa_with_SHA3_384 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 3L , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dsa_with_SHA3_384); }))) {
            mixin(enumMixinStr_OBJ_dsa_with_SHA3_384);
        }
    }




    static if(!is(typeof(SN_dsa_with_SHA3_512))) {
        private enum enumMixinStr_SN_dsa_with_SHA3_512 = `enum SN_dsa_with_SHA3_512 = "id-dsa-with-sha3-512";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dsa_with_SHA3_512); }))) {
            mixin(enumMixinStr_SN_dsa_with_SHA3_512);
        }
    }




    static if(!is(typeof(LN_dsa_with_SHA3_512))) {
        private enum enumMixinStr_LN_dsa_with_SHA3_512 = `enum LN_dsa_with_SHA3_512 = "dsa_with_SHA3-512";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_dsa_with_SHA3_512); }))) {
            mixin(enumMixinStr_LN_dsa_with_SHA3_512);
        }
    }




    static if(!is(typeof(NID_dsa_with_SHA3_512))) {
        private enum enumMixinStr_NID_dsa_with_SHA3_512 = `enum NID_dsa_with_SHA3_512 = 1111;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dsa_with_SHA3_512); }))) {
            mixin(enumMixinStr_NID_dsa_with_SHA3_512);
        }
    }




    static if(!is(typeof(OBJ_dsa_with_SHA3_512))) {
        private enum enumMixinStr_OBJ_dsa_with_SHA3_512 = `enum OBJ_dsa_with_SHA3_512 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 3L , 8L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dsa_with_SHA3_512); }))) {
            mixin(enumMixinStr_OBJ_dsa_with_SHA3_512);
        }
    }




    static if(!is(typeof(SN_ecdsa_with_SHA3_224))) {
        private enum enumMixinStr_SN_ecdsa_with_SHA3_224 = `enum SN_ecdsa_with_SHA3_224 = "id-ecdsa-with-sha3-224";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ecdsa_with_SHA3_224); }))) {
            mixin(enumMixinStr_SN_ecdsa_with_SHA3_224);
        }
    }




    static if(!is(typeof(LN_ecdsa_with_SHA3_224))) {
        private enum enumMixinStr_LN_ecdsa_with_SHA3_224 = `enum LN_ecdsa_with_SHA3_224 = "ecdsa_with_SHA3-224";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ecdsa_with_SHA3_224); }))) {
            mixin(enumMixinStr_LN_ecdsa_with_SHA3_224);
        }
    }




    static if(!is(typeof(NID_ecdsa_with_SHA3_224))) {
        private enum enumMixinStr_NID_ecdsa_with_SHA3_224 = `enum NID_ecdsa_with_SHA3_224 = 1112;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ecdsa_with_SHA3_224); }))) {
            mixin(enumMixinStr_NID_ecdsa_with_SHA3_224);
        }
    }




    static if(!is(typeof(OBJ_ecdsa_with_SHA3_224))) {
        private enum enumMixinStr_OBJ_ecdsa_with_SHA3_224 = `enum OBJ_ecdsa_with_SHA3_224 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 3L , 9L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ecdsa_with_SHA3_224); }))) {
            mixin(enumMixinStr_OBJ_ecdsa_with_SHA3_224);
        }
    }




    static if(!is(typeof(SN_ecdsa_with_SHA3_256))) {
        private enum enumMixinStr_SN_ecdsa_with_SHA3_256 = `enum SN_ecdsa_with_SHA3_256 = "id-ecdsa-with-sha3-256";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ecdsa_with_SHA3_256); }))) {
            mixin(enumMixinStr_SN_ecdsa_with_SHA3_256);
        }
    }




    static if(!is(typeof(LN_ecdsa_with_SHA3_256))) {
        private enum enumMixinStr_LN_ecdsa_with_SHA3_256 = `enum LN_ecdsa_with_SHA3_256 = "ecdsa_with_SHA3-256";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ecdsa_with_SHA3_256); }))) {
            mixin(enumMixinStr_LN_ecdsa_with_SHA3_256);
        }
    }




    static if(!is(typeof(NID_ecdsa_with_SHA3_256))) {
        private enum enumMixinStr_NID_ecdsa_with_SHA3_256 = `enum NID_ecdsa_with_SHA3_256 = 1113;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ecdsa_with_SHA3_256); }))) {
            mixin(enumMixinStr_NID_ecdsa_with_SHA3_256);
        }
    }




    static if(!is(typeof(OBJ_ecdsa_with_SHA3_256))) {
        private enum enumMixinStr_OBJ_ecdsa_with_SHA3_256 = `enum OBJ_ecdsa_with_SHA3_256 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 3L , 10L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ecdsa_with_SHA3_256); }))) {
            mixin(enumMixinStr_OBJ_ecdsa_with_SHA3_256);
        }
    }




    static if(!is(typeof(SN_ecdsa_with_SHA3_384))) {
        private enum enumMixinStr_SN_ecdsa_with_SHA3_384 = `enum SN_ecdsa_with_SHA3_384 = "id-ecdsa-with-sha3-384";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ecdsa_with_SHA3_384); }))) {
            mixin(enumMixinStr_SN_ecdsa_with_SHA3_384);
        }
    }




    static if(!is(typeof(LN_ecdsa_with_SHA3_384))) {
        private enum enumMixinStr_LN_ecdsa_with_SHA3_384 = `enum LN_ecdsa_with_SHA3_384 = "ecdsa_with_SHA3-384";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ecdsa_with_SHA3_384); }))) {
            mixin(enumMixinStr_LN_ecdsa_with_SHA3_384);
        }
    }




    static if(!is(typeof(NID_ecdsa_with_SHA3_384))) {
        private enum enumMixinStr_NID_ecdsa_with_SHA3_384 = `enum NID_ecdsa_with_SHA3_384 = 1114;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ecdsa_with_SHA3_384); }))) {
            mixin(enumMixinStr_NID_ecdsa_with_SHA3_384);
        }
    }




    static if(!is(typeof(OBJ_ecdsa_with_SHA3_384))) {
        private enum enumMixinStr_OBJ_ecdsa_with_SHA3_384 = `enum OBJ_ecdsa_with_SHA3_384 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 3L , 11L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ecdsa_with_SHA3_384); }))) {
            mixin(enumMixinStr_OBJ_ecdsa_with_SHA3_384);
        }
    }




    static if(!is(typeof(SN_ecdsa_with_SHA3_512))) {
        private enum enumMixinStr_SN_ecdsa_with_SHA3_512 = `enum SN_ecdsa_with_SHA3_512 = "id-ecdsa-with-sha3-512";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ecdsa_with_SHA3_512); }))) {
            mixin(enumMixinStr_SN_ecdsa_with_SHA3_512);
        }
    }




    static if(!is(typeof(LN_ecdsa_with_SHA3_512))) {
        private enum enumMixinStr_LN_ecdsa_with_SHA3_512 = `enum LN_ecdsa_with_SHA3_512 = "ecdsa_with_SHA3-512";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ecdsa_with_SHA3_512); }))) {
            mixin(enumMixinStr_LN_ecdsa_with_SHA3_512);
        }
    }




    static if(!is(typeof(NID_ecdsa_with_SHA3_512))) {
        private enum enumMixinStr_NID_ecdsa_with_SHA3_512 = `enum NID_ecdsa_with_SHA3_512 = 1115;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ecdsa_with_SHA3_512); }))) {
            mixin(enumMixinStr_NID_ecdsa_with_SHA3_512);
        }
    }




    static if(!is(typeof(OBJ_ecdsa_with_SHA3_512))) {
        private enum enumMixinStr_OBJ_ecdsa_with_SHA3_512 = `enum OBJ_ecdsa_with_SHA3_512 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 3L , 12L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ecdsa_with_SHA3_512); }))) {
            mixin(enumMixinStr_OBJ_ecdsa_with_SHA3_512);
        }
    }




    static if(!is(typeof(SN_RSA_SHA3_224))) {
        private enum enumMixinStr_SN_RSA_SHA3_224 = `enum SN_RSA_SHA3_224 = "id-rsassa-pkcs1-v1_5-with-sha3-224";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_RSA_SHA3_224); }))) {
            mixin(enumMixinStr_SN_RSA_SHA3_224);
        }
    }




    static if(!is(typeof(LN_RSA_SHA3_224))) {
        private enum enumMixinStr_LN_RSA_SHA3_224 = `enum LN_RSA_SHA3_224 = "RSA-SHA3-224";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_RSA_SHA3_224); }))) {
            mixin(enumMixinStr_LN_RSA_SHA3_224);
        }
    }




    static if(!is(typeof(NID_RSA_SHA3_224))) {
        private enum enumMixinStr_NID_RSA_SHA3_224 = `enum NID_RSA_SHA3_224 = 1116;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_RSA_SHA3_224); }))) {
            mixin(enumMixinStr_NID_RSA_SHA3_224);
        }
    }




    static if(!is(typeof(OBJ_RSA_SHA3_224))) {
        private enum enumMixinStr_OBJ_RSA_SHA3_224 = `enum OBJ_RSA_SHA3_224 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 3L , 13L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_RSA_SHA3_224); }))) {
            mixin(enumMixinStr_OBJ_RSA_SHA3_224);
        }
    }




    static if(!is(typeof(SN_RSA_SHA3_256))) {
        private enum enumMixinStr_SN_RSA_SHA3_256 = `enum SN_RSA_SHA3_256 = "id-rsassa-pkcs1-v1_5-with-sha3-256";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_RSA_SHA3_256); }))) {
            mixin(enumMixinStr_SN_RSA_SHA3_256);
        }
    }




    static if(!is(typeof(LN_RSA_SHA3_256))) {
        private enum enumMixinStr_LN_RSA_SHA3_256 = `enum LN_RSA_SHA3_256 = "RSA-SHA3-256";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_RSA_SHA3_256); }))) {
            mixin(enumMixinStr_LN_RSA_SHA3_256);
        }
    }




    static if(!is(typeof(NID_RSA_SHA3_256))) {
        private enum enumMixinStr_NID_RSA_SHA3_256 = `enum NID_RSA_SHA3_256 = 1117;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_RSA_SHA3_256); }))) {
            mixin(enumMixinStr_NID_RSA_SHA3_256);
        }
    }




    static if(!is(typeof(OBJ_RSA_SHA3_256))) {
        private enum enumMixinStr_OBJ_RSA_SHA3_256 = `enum OBJ_RSA_SHA3_256 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 3L , 14L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_RSA_SHA3_256); }))) {
            mixin(enumMixinStr_OBJ_RSA_SHA3_256);
        }
    }




    static if(!is(typeof(SN_RSA_SHA3_384))) {
        private enum enumMixinStr_SN_RSA_SHA3_384 = `enum SN_RSA_SHA3_384 = "id-rsassa-pkcs1-v1_5-with-sha3-384";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_RSA_SHA3_384); }))) {
            mixin(enumMixinStr_SN_RSA_SHA3_384);
        }
    }




    static if(!is(typeof(LN_RSA_SHA3_384))) {
        private enum enumMixinStr_LN_RSA_SHA3_384 = `enum LN_RSA_SHA3_384 = "RSA-SHA3-384";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_RSA_SHA3_384); }))) {
            mixin(enumMixinStr_LN_RSA_SHA3_384);
        }
    }




    static if(!is(typeof(NID_RSA_SHA3_384))) {
        private enum enumMixinStr_NID_RSA_SHA3_384 = `enum NID_RSA_SHA3_384 = 1118;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_RSA_SHA3_384); }))) {
            mixin(enumMixinStr_NID_RSA_SHA3_384);
        }
    }




    static if(!is(typeof(OBJ_RSA_SHA3_384))) {
        private enum enumMixinStr_OBJ_RSA_SHA3_384 = `enum OBJ_RSA_SHA3_384 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 3L , 15L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_RSA_SHA3_384); }))) {
            mixin(enumMixinStr_OBJ_RSA_SHA3_384);
        }
    }




    static if(!is(typeof(SN_RSA_SHA3_512))) {
        private enum enumMixinStr_SN_RSA_SHA3_512 = `enum SN_RSA_SHA3_512 = "id-rsassa-pkcs1-v1_5-with-sha3-512";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_RSA_SHA3_512); }))) {
            mixin(enumMixinStr_SN_RSA_SHA3_512);
        }
    }




    static if(!is(typeof(LN_RSA_SHA3_512))) {
        private enum enumMixinStr_LN_RSA_SHA3_512 = `enum LN_RSA_SHA3_512 = "RSA-SHA3-512";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_RSA_SHA3_512); }))) {
            mixin(enumMixinStr_LN_RSA_SHA3_512);
        }
    }




    static if(!is(typeof(NID_RSA_SHA3_512))) {
        private enum enumMixinStr_NID_RSA_SHA3_512 = `enum NID_RSA_SHA3_512 = 1119;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_RSA_SHA3_512); }))) {
            mixin(enumMixinStr_NID_RSA_SHA3_512);
        }
    }




    static if(!is(typeof(OBJ_RSA_SHA3_512))) {
        private enum enumMixinStr_OBJ_RSA_SHA3_512 = `enum OBJ_RSA_SHA3_512 = 2L , 16L , 840L , 1L , 101L , 3L , 4L , 3L , 16L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_RSA_SHA3_512); }))) {
            mixin(enumMixinStr_OBJ_RSA_SHA3_512);
        }
    }




    static if(!is(typeof(SN_hold_instruction_code))) {
        private enum enumMixinStr_SN_hold_instruction_code = `enum SN_hold_instruction_code = "holdInstructionCode";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_hold_instruction_code); }))) {
            mixin(enumMixinStr_SN_hold_instruction_code);
        }
    }




    static if(!is(typeof(LN_hold_instruction_code))) {
        private enum enumMixinStr_LN_hold_instruction_code = `enum LN_hold_instruction_code = "Hold Instruction Code";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_hold_instruction_code); }))) {
            mixin(enumMixinStr_LN_hold_instruction_code);
        }
    }




    static if(!is(typeof(NID_hold_instruction_code))) {
        private enum enumMixinStr_NID_hold_instruction_code = `enum NID_hold_instruction_code = 430;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_hold_instruction_code); }))) {
            mixin(enumMixinStr_NID_hold_instruction_code);
        }
    }




    static if(!is(typeof(OBJ_hold_instruction_code))) {
        private enum enumMixinStr_OBJ_hold_instruction_code = `enum OBJ_hold_instruction_code = OBJ_id_ce , 23L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_hold_instruction_code); }))) {
            mixin(enumMixinStr_OBJ_hold_instruction_code);
        }
    }




    static if(!is(typeof(OBJ_holdInstruction))) {
        private enum enumMixinStr_OBJ_holdInstruction = `enum OBJ_holdInstruction = OBJ_X9_57 , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_holdInstruction); }))) {
            mixin(enumMixinStr_OBJ_holdInstruction);
        }
    }




    static if(!is(typeof(SN_hold_instruction_none))) {
        private enum enumMixinStr_SN_hold_instruction_none = `enum SN_hold_instruction_none = "holdInstructionNone";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_hold_instruction_none); }))) {
            mixin(enumMixinStr_SN_hold_instruction_none);
        }
    }




    static if(!is(typeof(LN_hold_instruction_none))) {
        private enum enumMixinStr_LN_hold_instruction_none = `enum LN_hold_instruction_none = "Hold Instruction None";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_hold_instruction_none); }))) {
            mixin(enumMixinStr_LN_hold_instruction_none);
        }
    }




    static if(!is(typeof(NID_hold_instruction_none))) {
        private enum enumMixinStr_NID_hold_instruction_none = `enum NID_hold_instruction_none = 431;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_hold_instruction_none); }))) {
            mixin(enumMixinStr_NID_hold_instruction_none);
        }
    }




    static if(!is(typeof(OBJ_hold_instruction_none))) {
        private enum enumMixinStr_OBJ_hold_instruction_none = `enum OBJ_hold_instruction_none = OBJ_X9_57 , 2L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_hold_instruction_none); }))) {
            mixin(enumMixinStr_OBJ_hold_instruction_none);
        }
    }




    static if(!is(typeof(SN_hold_instruction_call_issuer))) {
        private enum enumMixinStr_SN_hold_instruction_call_issuer = `enum SN_hold_instruction_call_issuer = "holdInstructionCallIssuer";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_hold_instruction_call_issuer); }))) {
            mixin(enumMixinStr_SN_hold_instruction_call_issuer);
        }
    }




    static if(!is(typeof(LN_hold_instruction_call_issuer))) {
        private enum enumMixinStr_LN_hold_instruction_call_issuer = `enum LN_hold_instruction_call_issuer = "Hold Instruction Call Issuer";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_hold_instruction_call_issuer); }))) {
            mixin(enumMixinStr_LN_hold_instruction_call_issuer);
        }
    }




    static if(!is(typeof(NID_hold_instruction_call_issuer))) {
        private enum enumMixinStr_NID_hold_instruction_call_issuer = `enum NID_hold_instruction_call_issuer = 432;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_hold_instruction_call_issuer); }))) {
            mixin(enumMixinStr_NID_hold_instruction_call_issuer);
        }
    }




    static if(!is(typeof(OBJ_hold_instruction_call_issuer))) {
        private enum enumMixinStr_OBJ_hold_instruction_call_issuer = `enum OBJ_hold_instruction_call_issuer = OBJ_X9_57 , 2L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_hold_instruction_call_issuer); }))) {
            mixin(enumMixinStr_OBJ_hold_instruction_call_issuer);
        }
    }




    static if(!is(typeof(SN_hold_instruction_reject))) {
        private enum enumMixinStr_SN_hold_instruction_reject = `enum SN_hold_instruction_reject = "holdInstructionReject";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_hold_instruction_reject); }))) {
            mixin(enumMixinStr_SN_hold_instruction_reject);
        }
    }




    static if(!is(typeof(LN_hold_instruction_reject))) {
        private enum enumMixinStr_LN_hold_instruction_reject = `enum LN_hold_instruction_reject = "Hold Instruction Reject";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_hold_instruction_reject); }))) {
            mixin(enumMixinStr_LN_hold_instruction_reject);
        }
    }




    static if(!is(typeof(NID_hold_instruction_reject))) {
        private enum enumMixinStr_NID_hold_instruction_reject = `enum NID_hold_instruction_reject = 433;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_hold_instruction_reject); }))) {
            mixin(enumMixinStr_NID_hold_instruction_reject);
        }
    }




    static if(!is(typeof(OBJ_hold_instruction_reject))) {
        private enum enumMixinStr_OBJ_hold_instruction_reject = `enum OBJ_hold_instruction_reject = OBJ_X9_57 , 2L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_hold_instruction_reject); }))) {
            mixin(enumMixinStr_OBJ_hold_instruction_reject);
        }
    }




    static if(!is(typeof(SN_data))) {
        private enum enumMixinStr_SN_data = `enum SN_data = "data";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_data); }))) {
            mixin(enumMixinStr_SN_data);
        }
    }




    static if(!is(typeof(NID_data))) {
        private enum enumMixinStr_NID_data = `enum NID_data = 434;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_data); }))) {
            mixin(enumMixinStr_NID_data);
        }
    }




    static if(!is(typeof(OBJ_data))) {
        private enum enumMixinStr_OBJ_data = `enum OBJ_data = OBJ_itu_t , 9L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_data); }))) {
            mixin(enumMixinStr_OBJ_data);
        }
    }




    static if(!is(typeof(SN_pss))) {
        private enum enumMixinStr_SN_pss = `enum SN_pss = "pss";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_pss); }))) {
            mixin(enumMixinStr_SN_pss);
        }
    }




    static if(!is(typeof(NID_pss))) {
        private enum enumMixinStr_NID_pss = `enum NID_pss = 435;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pss); }))) {
            mixin(enumMixinStr_NID_pss);
        }
    }




    static if(!is(typeof(OBJ_pss))) {
        private enum enumMixinStr_OBJ_pss = `enum OBJ_pss = OBJ_itu_t , 9L , 2342L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pss); }))) {
            mixin(enumMixinStr_OBJ_pss);
        }
    }




    static if(!is(typeof(SN_ucl))) {
        private enum enumMixinStr_SN_ucl = `enum SN_ucl = "ucl";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ucl); }))) {
            mixin(enumMixinStr_SN_ucl);
        }
    }




    static if(!is(typeof(NID_ucl))) {
        private enum enumMixinStr_NID_ucl = `enum NID_ucl = 436;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ucl); }))) {
            mixin(enumMixinStr_NID_ucl);
        }
    }




    static if(!is(typeof(OBJ_ucl))) {
        private enum enumMixinStr_OBJ_ucl = `enum OBJ_ucl = OBJ_itu_t , 9L , 2342L , 19200300L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ucl); }))) {
            mixin(enumMixinStr_OBJ_ucl);
        }
    }




    static if(!is(typeof(SN_pilot))) {
        private enum enumMixinStr_SN_pilot = `enum SN_pilot = "pilot";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_pilot); }))) {
            mixin(enumMixinStr_SN_pilot);
        }
    }




    static if(!is(typeof(NID_pilot))) {
        private enum enumMixinStr_NID_pilot = `enum NID_pilot = 437;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pilot); }))) {
            mixin(enumMixinStr_NID_pilot);
        }
    }




    static if(!is(typeof(OBJ_pilot))) {
        private enum enumMixinStr_OBJ_pilot = `enum OBJ_pilot = OBJ_itu_t , 9L , 2342L , 19200300L , 100L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pilot); }))) {
            mixin(enumMixinStr_OBJ_pilot);
        }
    }




    static if(!is(typeof(LN_pilotAttributeType))) {
        private enum enumMixinStr_LN_pilotAttributeType = `enum LN_pilotAttributeType = "pilotAttributeType";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pilotAttributeType); }))) {
            mixin(enumMixinStr_LN_pilotAttributeType);
        }
    }




    static if(!is(typeof(NID_pilotAttributeType))) {
        private enum enumMixinStr_NID_pilotAttributeType = `enum NID_pilotAttributeType = 438;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pilotAttributeType); }))) {
            mixin(enumMixinStr_NID_pilotAttributeType);
        }
    }




    static if(!is(typeof(OBJ_pilotAttributeType))) {
        private enum enumMixinStr_OBJ_pilotAttributeType = `enum OBJ_pilotAttributeType = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pilotAttributeType); }))) {
            mixin(enumMixinStr_OBJ_pilotAttributeType);
        }
    }




    static if(!is(typeof(LN_pilotAttributeSyntax))) {
        private enum enumMixinStr_LN_pilotAttributeSyntax = `enum LN_pilotAttributeSyntax = "pilotAttributeSyntax";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pilotAttributeSyntax); }))) {
            mixin(enumMixinStr_LN_pilotAttributeSyntax);
        }
    }




    static if(!is(typeof(NID_pilotAttributeSyntax))) {
        private enum enumMixinStr_NID_pilotAttributeSyntax = `enum NID_pilotAttributeSyntax = 439;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pilotAttributeSyntax); }))) {
            mixin(enumMixinStr_NID_pilotAttributeSyntax);
        }
    }




    static if(!is(typeof(OBJ_pilotAttributeSyntax))) {
        private enum enumMixinStr_OBJ_pilotAttributeSyntax = `enum OBJ_pilotAttributeSyntax = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pilotAttributeSyntax); }))) {
            mixin(enumMixinStr_OBJ_pilotAttributeSyntax);
        }
    }




    static if(!is(typeof(LN_pilotObjectClass))) {
        private enum enumMixinStr_LN_pilotObjectClass = `enum LN_pilotObjectClass = "pilotObjectClass";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pilotObjectClass); }))) {
            mixin(enumMixinStr_LN_pilotObjectClass);
        }
    }




    static if(!is(typeof(NID_pilotObjectClass))) {
        private enum enumMixinStr_NID_pilotObjectClass = `enum NID_pilotObjectClass = 440;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pilotObjectClass); }))) {
            mixin(enumMixinStr_NID_pilotObjectClass);
        }
    }




    static if(!is(typeof(OBJ_pilotObjectClass))) {
        private enum enumMixinStr_OBJ_pilotObjectClass = `enum OBJ_pilotObjectClass = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pilotObjectClass); }))) {
            mixin(enumMixinStr_OBJ_pilotObjectClass);
        }
    }




    static if(!is(typeof(LN_pilotGroups))) {
        private enum enumMixinStr_LN_pilotGroups = `enum LN_pilotGroups = "pilotGroups";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pilotGroups); }))) {
            mixin(enumMixinStr_LN_pilotGroups);
        }
    }




    static if(!is(typeof(NID_pilotGroups))) {
        private enum enumMixinStr_NID_pilotGroups = `enum NID_pilotGroups = 441;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pilotGroups); }))) {
            mixin(enumMixinStr_NID_pilotGroups);
        }
    }




    static if(!is(typeof(OBJ_pilotGroups))) {
        private enum enumMixinStr_OBJ_pilotGroups = `enum OBJ_pilotGroups = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 10L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pilotGroups); }))) {
            mixin(enumMixinStr_OBJ_pilotGroups);
        }
    }




    static if(!is(typeof(LN_iA5StringSyntax))) {
        private enum enumMixinStr_LN_iA5StringSyntax = `enum LN_iA5StringSyntax = "iA5StringSyntax";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_iA5StringSyntax); }))) {
            mixin(enumMixinStr_LN_iA5StringSyntax);
        }
    }




    static if(!is(typeof(NID_iA5StringSyntax))) {
        private enum enumMixinStr_NID_iA5StringSyntax = `enum NID_iA5StringSyntax = 442;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_iA5StringSyntax); }))) {
            mixin(enumMixinStr_NID_iA5StringSyntax);
        }
    }




    static if(!is(typeof(OBJ_iA5StringSyntax))) {
        private enum enumMixinStr_OBJ_iA5StringSyntax = `enum OBJ_iA5StringSyntax = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 3L , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_iA5StringSyntax); }))) {
            mixin(enumMixinStr_OBJ_iA5StringSyntax);
        }
    }




    static if(!is(typeof(LN_caseIgnoreIA5StringSyntax))) {
        private enum enumMixinStr_LN_caseIgnoreIA5StringSyntax = `enum LN_caseIgnoreIA5StringSyntax = "caseIgnoreIA5StringSyntax";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_caseIgnoreIA5StringSyntax); }))) {
            mixin(enumMixinStr_LN_caseIgnoreIA5StringSyntax);
        }
    }




    static if(!is(typeof(NID_caseIgnoreIA5StringSyntax))) {
        private enum enumMixinStr_NID_caseIgnoreIA5StringSyntax = `enum NID_caseIgnoreIA5StringSyntax = 443;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_caseIgnoreIA5StringSyntax); }))) {
            mixin(enumMixinStr_NID_caseIgnoreIA5StringSyntax);
        }
    }




    static if(!is(typeof(OBJ_caseIgnoreIA5StringSyntax))) {
        private enum enumMixinStr_OBJ_caseIgnoreIA5StringSyntax = `enum OBJ_caseIgnoreIA5StringSyntax = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 3L , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_caseIgnoreIA5StringSyntax); }))) {
            mixin(enumMixinStr_OBJ_caseIgnoreIA5StringSyntax);
        }
    }




    static if(!is(typeof(LN_pilotObject))) {
        private enum enumMixinStr_LN_pilotObject = `enum LN_pilotObject = "pilotObject";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pilotObject); }))) {
            mixin(enumMixinStr_LN_pilotObject);
        }
    }




    static if(!is(typeof(NID_pilotObject))) {
        private enum enumMixinStr_NID_pilotObject = `enum NID_pilotObject = 444;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pilotObject); }))) {
            mixin(enumMixinStr_NID_pilotObject);
        }
    }




    static if(!is(typeof(OBJ_pilotObject))) {
        private enum enumMixinStr_OBJ_pilotObject = `enum OBJ_pilotObject = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 4L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pilotObject); }))) {
            mixin(enumMixinStr_OBJ_pilotObject);
        }
    }




    static if(!is(typeof(LN_pilotPerson))) {
        private enum enumMixinStr_LN_pilotPerson = `enum LN_pilotPerson = "pilotPerson";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pilotPerson); }))) {
            mixin(enumMixinStr_LN_pilotPerson);
        }
    }




    static if(!is(typeof(NID_pilotPerson))) {
        private enum enumMixinStr_NID_pilotPerson = `enum NID_pilotPerson = 445;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pilotPerson); }))) {
            mixin(enumMixinStr_NID_pilotPerson);
        }
    }




    static if(!is(typeof(OBJ_pilotPerson))) {
        private enum enumMixinStr_OBJ_pilotPerson = `enum OBJ_pilotPerson = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 4L , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pilotPerson); }))) {
            mixin(enumMixinStr_OBJ_pilotPerson);
        }
    }




    static if(!is(typeof(SN_account))) {
        private enum enumMixinStr_SN_account = `enum SN_account = "account";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_account); }))) {
            mixin(enumMixinStr_SN_account);
        }
    }




    static if(!is(typeof(NID_account))) {
        private enum enumMixinStr_NID_account = `enum NID_account = 446;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_account); }))) {
            mixin(enumMixinStr_NID_account);
        }
    }




    static if(!is(typeof(OBJ_account))) {
        private enum enumMixinStr_OBJ_account = `enum OBJ_account = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 4L , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_account); }))) {
            mixin(enumMixinStr_OBJ_account);
        }
    }




    static if(!is(typeof(SN_document))) {
        private enum enumMixinStr_SN_document = `enum SN_document = "document";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_document); }))) {
            mixin(enumMixinStr_SN_document);
        }
    }




    static if(!is(typeof(NID_document))) {
        private enum enumMixinStr_NID_document = `enum NID_document = 447;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_document); }))) {
            mixin(enumMixinStr_NID_document);
        }
    }




    static if(!is(typeof(OBJ_document))) {
        private enum enumMixinStr_OBJ_document = `enum OBJ_document = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 4L , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_document); }))) {
            mixin(enumMixinStr_OBJ_document);
        }
    }




    static if(!is(typeof(SN_room))) {
        private enum enumMixinStr_SN_room = `enum SN_room = "room";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_room); }))) {
            mixin(enumMixinStr_SN_room);
        }
    }




    static if(!is(typeof(NID_room))) {
        private enum enumMixinStr_NID_room = `enum NID_room = 448;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_room); }))) {
            mixin(enumMixinStr_NID_room);
        }
    }




    static if(!is(typeof(OBJ_room))) {
        private enum enumMixinStr_OBJ_room = `enum OBJ_room = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 4L , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_room); }))) {
            mixin(enumMixinStr_OBJ_room);
        }
    }




    static if(!is(typeof(LN_documentSeries))) {
        private enum enumMixinStr_LN_documentSeries = `enum LN_documentSeries = "documentSeries";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_documentSeries); }))) {
            mixin(enumMixinStr_LN_documentSeries);
        }
    }




    static if(!is(typeof(NID_documentSeries))) {
        private enum enumMixinStr_NID_documentSeries = `enum NID_documentSeries = 449;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_documentSeries); }))) {
            mixin(enumMixinStr_NID_documentSeries);
        }
    }




    static if(!is(typeof(OBJ_documentSeries))) {
        private enum enumMixinStr_OBJ_documentSeries = `enum OBJ_documentSeries = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 4L , 9L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_documentSeries); }))) {
            mixin(enumMixinStr_OBJ_documentSeries);
        }
    }




    static if(!is(typeof(SN_Domain))) {
        private enum enumMixinStr_SN_Domain = `enum SN_Domain = "domain";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_Domain); }))) {
            mixin(enumMixinStr_SN_Domain);
        }
    }




    static if(!is(typeof(LN_Domain))) {
        private enum enumMixinStr_LN_Domain = `enum LN_Domain = "Domain";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_Domain); }))) {
            mixin(enumMixinStr_LN_Domain);
        }
    }




    static if(!is(typeof(NID_Domain))) {
        private enum enumMixinStr_NID_Domain = `enum NID_Domain = 392;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_Domain); }))) {
            mixin(enumMixinStr_NID_Domain);
        }
    }




    static if(!is(typeof(OBJ_Domain))) {
        private enum enumMixinStr_OBJ_Domain = `enum OBJ_Domain = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 4L , 13L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_Domain); }))) {
            mixin(enumMixinStr_OBJ_Domain);
        }
    }




    static if(!is(typeof(LN_rFC822localPart))) {
        private enum enumMixinStr_LN_rFC822localPart = `enum LN_rFC822localPart = "rFC822localPart";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_rFC822localPart); }))) {
            mixin(enumMixinStr_LN_rFC822localPart);
        }
    }




    static if(!is(typeof(NID_rFC822localPart))) {
        private enum enumMixinStr_NID_rFC822localPart = `enum NID_rFC822localPart = 450;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_rFC822localPart); }))) {
            mixin(enumMixinStr_NID_rFC822localPart);
        }
    }




    static if(!is(typeof(OBJ_rFC822localPart))) {
        private enum enumMixinStr_OBJ_rFC822localPart = `enum OBJ_rFC822localPart = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 4L , 14L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_rFC822localPart); }))) {
            mixin(enumMixinStr_OBJ_rFC822localPart);
        }
    }




    static if(!is(typeof(LN_dNSDomain))) {
        private enum enumMixinStr_LN_dNSDomain = `enum LN_dNSDomain = "dNSDomain";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_dNSDomain); }))) {
            mixin(enumMixinStr_LN_dNSDomain);
        }
    }




    static if(!is(typeof(NID_dNSDomain))) {
        private enum enumMixinStr_NID_dNSDomain = `enum NID_dNSDomain = 451;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dNSDomain); }))) {
            mixin(enumMixinStr_NID_dNSDomain);
        }
    }




    static if(!is(typeof(OBJ_dNSDomain))) {
        private enum enumMixinStr_OBJ_dNSDomain = `enum OBJ_dNSDomain = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 4L , 15L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dNSDomain); }))) {
            mixin(enumMixinStr_OBJ_dNSDomain);
        }
    }




    static if(!is(typeof(LN_domainRelatedObject))) {
        private enum enumMixinStr_LN_domainRelatedObject = `enum LN_domainRelatedObject = "domainRelatedObject";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_domainRelatedObject); }))) {
            mixin(enumMixinStr_LN_domainRelatedObject);
        }
    }




    static if(!is(typeof(NID_domainRelatedObject))) {
        private enum enumMixinStr_NID_domainRelatedObject = `enum NID_domainRelatedObject = 452;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_domainRelatedObject); }))) {
            mixin(enumMixinStr_NID_domainRelatedObject);
        }
    }




    static if(!is(typeof(OBJ_domainRelatedObject))) {
        private enum enumMixinStr_OBJ_domainRelatedObject = `enum OBJ_domainRelatedObject = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 4L , 17L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_domainRelatedObject); }))) {
            mixin(enumMixinStr_OBJ_domainRelatedObject);
        }
    }




    static if(!is(typeof(LN_friendlyCountry))) {
        private enum enumMixinStr_LN_friendlyCountry = `enum LN_friendlyCountry = "friendlyCountry";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_friendlyCountry); }))) {
            mixin(enumMixinStr_LN_friendlyCountry);
        }
    }




    static if(!is(typeof(NID_friendlyCountry))) {
        private enum enumMixinStr_NID_friendlyCountry = `enum NID_friendlyCountry = 453;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_friendlyCountry); }))) {
            mixin(enumMixinStr_NID_friendlyCountry);
        }
    }




    static if(!is(typeof(OBJ_friendlyCountry))) {
        private enum enumMixinStr_OBJ_friendlyCountry = `enum OBJ_friendlyCountry = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 4L , 18L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_friendlyCountry); }))) {
            mixin(enumMixinStr_OBJ_friendlyCountry);
        }
    }




    static if(!is(typeof(LN_simpleSecurityObject))) {
        private enum enumMixinStr_LN_simpleSecurityObject = `enum LN_simpleSecurityObject = "simpleSecurityObject";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_simpleSecurityObject); }))) {
            mixin(enumMixinStr_LN_simpleSecurityObject);
        }
    }




    static if(!is(typeof(NID_simpleSecurityObject))) {
        private enum enumMixinStr_NID_simpleSecurityObject = `enum NID_simpleSecurityObject = 454;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_simpleSecurityObject); }))) {
            mixin(enumMixinStr_NID_simpleSecurityObject);
        }
    }




    static if(!is(typeof(OBJ_simpleSecurityObject))) {
        private enum enumMixinStr_OBJ_simpleSecurityObject = `enum OBJ_simpleSecurityObject = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 4L , 19L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_simpleSecurityObject); }))) {
            mixin(enumMixinStr_OBJ_simpleSecurityObject);
        }
    }




    static if(!is(typeof(LN_pilotOrganization))) {
        private enum enumMixinStr_LN_pilotOrganization = `enum LN_pilotOrganization = "pilotOrganization";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pilotOrganization); }))) {
            mixin(enumMixinStr_LN_pilotOrganization);
        }
    }




    static if(!is(typeof(NID_pilotOrganization))) {
        private enum enumMixinStr_NID_pilotOrganization = `enum NID_pilotOrganization = 455;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pilotOrganization); }))) {
            mixin(enumMixinStr_NID_pilotOrganization);
        }
    }




    static if(!is(typeof(OBJ_pilotOrganization))) {
        private enum enumMixinStr_OBJ_pilotOrganization = `enum OBJ_pilotOrganization = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 4L , 20L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pilotOrganization); }))) {
            mixin(enumMixinStr_OBJ_pilotOrganization);
        }
    }




    static if(!is(typeof(LN_pilotDSA))) {
        private enum enumMixinStr_LN_pilotDSA = `enum LN_pilotDSA = "pilotDSA";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pilotDSA); }))) {
            mixin(enumMixinStr_LN_pilotDSA);
        }
    }




    static if(!is(typeof(NID_pilotDSA))) {
        private enum enumMixinStr_NID_pilotDSA = `enum NID_pilotDSA = 456;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pilotDSA); }))) {
            mixin(enumMixinStr_NID_pilotDSA);
        }
    }




    static if(!is(typeof(OBJ_pilotDSA))) {
        private enum enumMixinStr_OBJ_pilotDSA = `enum OBJ_pilotDSA = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 4L , 21L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pilotDSA); }))) {
            mixin(enumMixinStr_OBJ_pilotDSA);
        }
    }




    static if(!is(typeof(LN_qualityLabelledData))) {
        private enum enumMixinStr_LN_qualityLabelledData = `enum LN_qualityLabelledData = "qualityLabelledData";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_qualityLabelledData); }))) {
            mixin(enumMixinStr_LN_qualityLabelledData);
        }
    }




    static if(!is(typeof(NID_qualityLabelledData))) {
        private enum enumMixinStr_NID_qualityLabelledData = `enum NID_qualityLabelledData = 457;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_qualityLabelledData); }))) {
            mixin(enumMixinStr_NID_qualityLabelledData);
        }
    }




    static if(!is(typeof(OBJ_qualityLabelledData))) {
        private enum enumMixinStr_OBJ_qualityLabelledData = `enum OBJ_qualityLabelledData = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 4L , 22L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_qualityLabelledData); }))) {
            mixin(enumMixinStr_OBJ_qualityLabelledData);
        }
    }




    static if(!is(typeof(SN_userId))) {
        private enum enumMixinStr_SN_userId = `enum SN_userId = "UID";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_userId); }))) {
            mixin(enumMixinStr_SN_userId);
        }
    }




    static if(!is(typeof(LN_userId))) {
        private enum enumMixinStr_LN_userId = `enum LN_userId = "userId";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_userId); }))) {
            mixin(enumMixinStr_LN_userId);
        }
    }




    static if(!is(typeof(NID_userId))) {
        private enum enumMixinStr_NID_userId = `enum NID_userId = 458;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_userId); }))) {
            mixin(enumMixinStr_NID_userId);
        }
    }




    static if(!is(typeof(OBJ_userId))) {
        private enum enumMixinStr_OBJ_userId = `enum OBJ_userId = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_userId); }))) {
            mixin(enumMixinStr_OBJ_userId);
        }
    }




    static if(!is(typeof(LN_textEncodedORAddress))) {
        private enum enumMixinStr_LN_textEncodedORAddress = `enum LN_textEncodedORAddress = "textEncodedORAddress";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_textEncodedORAddress); }))) {
            mixin(enumMixinStr_LN_textEncodedORAddress);
        }
    }




    static if(!is(typeof(NID_textEncodedORAddress))) {
        private enum enumMixinStr_NID_textEncodedORAddress = `enum NID_textEncodedORAddress = 459;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_textEncodedORAddress); }))) {
            mixin(enumMixinStr_NID_textEncodedORAddress);
        }
    }




    static if(!is(typeof(OBJ_textEncodedORAddress))) {
        private enum enumMixinStr_OBJ_textEncodedORAddress = `enum OBJ_textEncodedORAddress = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_textEncodedORAddress); }))) {
            mixin(enumMixinStr_OBJ_textEncodedORAddress);
        }
    }




    static if(!is(typeof(SN_rfc822Mailbox))) {
        private enum enumMixinStr_SN_rfc822Mailbox = `enum SN_rfc822Mailbox = "mail";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_rfc822Mailbox); }))) {
            mixin(enumMixinStr_SN_rfc822Mailbox);
        }
    }




    static if(!is(typeof(LN_rfc822Mailbox))) {
        private enum enumMixinStr_LN_rfc822Mailbox = `enum LN_rfc822Mailbox = "rfc822Mailbox";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_rfc822Mailbox); }))) {
            mixin(enumMixinStr_LN_rfc822Mailbox);
        }
    }




    static if(!is(typeof(NID_rfc822Mailbox))) {
        private enum enumMixinStr_NID_rfc822Mailbox = `enum NID_rfc822Mailbox = 460;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_rfc822Mailbox); }))) {
            mixin(enumMixinStr_NID_rfc822Mailbox);
        }
    }




    static if(!is(typeof(OBJ_rfc822Mailbox))) {
        private enum enumMixinStr_OBJ_rfc822Mailbox = `enum OBJ_rfc822Mailbox = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_rfc822Mailbox); }))) {
            mixin(enumMixinStr_OBJ_rfc822Mailbox);
        }
    }




    static if(!is(typeof(SN_info))) {
        private enum enumMixinStr_SN_info = `enum SN_info = "info";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_info); }))) {
            mixin(enumMixinStr_SN_info);
        }
    }




    static if(!is(typeof(NID_info))) {
        private enum enumMixinStr_NID_info = `enum NID_info = 461;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_info); }))) {
            mixin(enumMixinStr_NID_info);
        }
    }




    static if(!is(typeof(OBJ_info))) {
        private enum enumMixinStr_OBJ_info = `enum OBJ_info = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_info); }))) {
            mixin(enumMixinStr_OBJ_info);
        }
    }




    static if(!is(typeof(LN_favouriteDrink))) {
        private enum enumMixinStr_LN_favouriteDrink = `enum LN_favouriteDrink = "favouriteDrink";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_favouriteDrink); }))) {
            mixin(enumMixinStr_LN_favouriteDrink);
        }
    }




    static if(!is(typeof(NID_favouriteDrink))) {
        private enum enumMixinStr_NID_favouriteDrink = `enum NID_favouriteDrink = 462;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_favouriteDrink); }))) {
            mixin(enumMixinStr_NID_favouriteDrink);
        }
    }




    static if(!is(typeof(OBJ_favouriteDrink))) {
        private enum enumMixinStr_OBJ_favouriteDrink = `enum OBJ_favouriteDrink = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_favouriteDrink); }))) {
            mixin(enumMixinStr_OBJ_favouriteDrink);
        }
    }




    static if(!is(typeof(LN_roomNumber))) {
        private enum enumMixinStr_LN_roomNumber = `enum LN_roomNumber = "roomNumber";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_roomNumber); }))) {
            mixin(enumMixinStr_LN_roomNumber);
        }
    }




    static if(!is(typeof(NID_roomNumber))) {
        private enum enumMixinStr_NID_roomNumber = `enum NID_roomNumber = 463;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_roomNumber); }))) {
            mixin(enumMixinStr_NID_roomNumber);
        }
    }




    static if(!is(typeof(OBJ_roomNumber))) {
        private enum enumMixinStr_OBJ_roomNumber = `enum OBJ_roomNumber = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_roomNumber); }))) {
            mixin(enumMixinStr_OBJ_roomNumber);
        }
    }




    static if(!is(typeof(SN_photo))) {
        private enum enumMixinStr_SN_photo = `enum SN_photo = "photo";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_photo); }))) {
            mixin(enumMixinStr_SN_photo);
        }
    }




    static if(!is(typeof(NID_photo))) {
        private enum enumMixinStr_NID_photo = `enum NID_photo = 464;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_photo); }))) {
            mixin(enumMixinStr_NID_photo);
        }
    }




    static if(!is(typeof(OBJ_photo))) {
        private enum enumMixinStr_OBJ_photo = `enum OBJ_photo = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_photo); }))) {
            mixin(enumMixinStr_OBJ_photo);
        }
    }




    static if(!is(typeof(LN_userClass))) {
        private enum enumMixinStr_LN_userClass = `enum LN_userClass = "userClass";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_userClass); }))) {
            mixin(enumMixinStr_LN_userClass);
        }
    }




    static if(!is(typeof(NID_userClass))) {
        private enum enumMixinStr_NID_userClass = `enum NID_userClass = 465;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_userClass); }))) {
            mixin(enumMixinStr_NID_userClass);
        }
    }




    static if(!is(typeof(OBJ_userClass))) {
        private enum enumMixinStr_OBJ_userClass = `enum OBJ_userClass = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 8L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_userClass); }))) {
            mixin(enumMixinStr_OBJ_userClass);
        }
    }




    static if(!is(typeof(SN_host))) {
        private enum enumMixinStr_SN_host = `enum SN_host = "host";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_host); }))) {
            mixin(enumMixinStr_SN_host);
        }
    }




    static if(!is(typeof(NID_host))) {
        private enum enumMixinStr_NID_host = `enum NID_host = 466;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_host); }))) {
            mixin(enumMixinStr_NID_host);
        }
    }




    static if(!is(typeof(OBJ_host))) {
        private enum enumMixinStr_OBJ_host = `enum OBJ_host = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 9L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_host); }))) {
            mixin(enumMixinStr_OBJ_host);
        }
    }




    static if(!is(typeof(SN_manager))) {
        private enum enumMixinStr_SN_manager = `enum SN_manager = "manager";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_manager); }))) {
            mixin(enumMixinStr_SN_manager);
        }
    }




    static if(!is(typeof(NID_manager))) {
        private enum enumMixinStr_NID_manager = `enum NID_manager = 467;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_manager); }))) {
            mixin(enumMixinStr_NID_manager);
        }
    }




    static if(!is(typeof(OBJ_manager))) {
        private enum enumMixinStr_OBJ_manager = `enum OBJ_manager = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 10L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_manager); }))) {
            mixin(enumMixinStr_OBJ_manager);
        }
    }




    static if(!is(typeof(LN_documentIdentifier))) {
        private enum enumMixinStr_LN_documentIdentifier = `enum LN_documentIdentifier = "documentIdentifier";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_documentIdentifier); }))) {
            mixin(enumMixinStr_LN_documentIdentifier);
        }
    }




    static if(!is(typeof(NID_documentIdentifier))) {
        private enum enumMixinStr_NID_documentIdentifier = `enum NID_documentIdentifier = 468;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_documentIdentifier); }))) {
            mixin(enumMixinStr_NID_documentIdentifier);
        }
    }




    static if(!is(typeof(OBJ_documentIdentifier))) {
        private enum enumMixinStr_OBJ_documentIdentifier = `enum OBJ_documentIdentifier = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 11L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_documentIdentifier); }))) {
            mixin(enumMixinStr_OBJ_documentIdentifier);
        }
    }




    static if(!is(typeof(LN_documentTitle))) {
        private enum enumMixinStr_LN_documentTitle = `enum LN_documentTitle = "documentTitle";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_documentTitle); }))) {
            mixin(enumMixinStr_LN_documentTitle);
        }
    }




    static if(!is(typeof(NID_documentTitle))) {
        private enum enumMixinStr_NID_documentTitle = `enum NID_documentTitle = 469;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_documentTitle); }))) {
            mixin(enumMixinStr_NID_documentTitle);
        }
    }




    static if(!is(typeof(OBJ_documentTitle))) {
        private enum enumMixinStr_OBJ_documentTitle = `enum OBJ_documentTitle = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 12L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_documentTitle); }))) {
            mixin(enumMixinStr_OBJ_documentTitle);
        }
    }




    static if(!is(typeof(LN_documentVersion))) {
        private enum enumMixinStr_LN_documentVersion = `enum LN_documentVersion = "documentVersion";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_documentVersion); }))) {
            mixin(enumMixinStr_LN_documentVersion);
        }
    }




    static if(!is(typeof(NID_documentVersion))) {
        private enum enumMixinStr_NID_documentVersion = `enum NID_documentVersion = 470;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_documentVersion); }))) {
            mixin(enumMixinStr_NID_documentVersion);
        }
    }




    static if(!is(typeof(OBJ_documentVersion))) {
        private enum enumMixinStr_OBJ_documentVersion = `enum OBJ_documentVersion = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 13L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_documentVersion); }))) {
            mixin(enumMixinStr_OBJ_documentVersion);
        }
    }




    static if(!is(typeof(LN_documentAuthor))) {
        private enum enumMixinStr_LN_documentAuthor = `enum LN_documentAuthor = "documentAuthor";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_documentAuthor); }))) {
            mixin(enumMixinStr_LN_documentAuthor);
        }
    }




    static if(!is(typeof(NID_documentAuthor))) {
        private enum enumMixinStr_NID_documentAuthor = `enum NID_documentAuthor = 471;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_documentAuthor); }))) {
            mixin(enumMixinStr_NID_documentAuthor);
        }
    }




    static if(!is(typeof(OBJ_documentAuthor))) {
        private enum enumMixinStr_OBJ_documentAuthor = `enum OBJ_documentAuthor = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 14L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_documentAuthor); }))) {
            mixin(enumMixinStr_OBJ_documentAuthor);
        }
    }




    static if(!is(typeof(LN_documentLocation))) {
        private enum enumMixinStr_LN_documentLocation = `enum LN_documentLocation = "documentLocation";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_documentLocation); }))) {
            mixin(enumMixinStr_LN_documentLocation);
        }
    }




    static if(!is(typeof(NID_documentLocation))) {
        private enum enumMixinStr_NID_documentLocation = `enum NID_documentLocation = 472;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_documentLocation); }))) {
            mixin(enumMixinStr_NID_documentLocation);
        }
    }




    static if(!is(typeof(OBJ_documentLocation))) {
        private enum enumMixinStr_OBJ_documentLocation = `enum OBJ_documentLocation = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 15L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_documentLocation); }))) {
            mixin(enumMixinStr_OBJ_documentLocation);
        }
    }




    static if(!is(typeof(LN_homeTelephoneNumber))) {
        private enum enumMixinStr_LN_homeTelephoneNumber = `enum LN_homeTelephoneNumber = "homeTelephoneNumber";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_homeTelephoneNumber); }))) {
            mixin(enumMixinStr_LN_homeTelephoneNumber);
        }
    }




    static if(!is(typeof(NID_homeTelephoneNumber))) {
        private enum enumMixinStr_NID_homeTelephoneNumber = `enum NID_homeTelephoneNumber = 473;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_homeTelephoneNumber); }))) {
            mixin(enumMixinStr_NID_homeTelephoneNumber);
        }
    }




    static if(!is(typeof(OBJ_homeTelephoneNumber))) {
        private enum enumMixinStr_OBJ_homeTelephoneNumber = `enum OBJ_homeTelephoneNumber = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 20L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_homeTelephoneNumber); }))) {
            mixin(enumMixinStr_OBJ_homeTelephoneNumber);
        }
    }




    static if(!is(typeof(SN_secretary))) {
        private enum enumMixinStr_SN_secretary = `enum SN_secretary = "secretary";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_secretary); }))) {
            mixin(enumMixinStr_SN_secretary);
        }
    }




    static if(!is(typeof(NID_secretary))) {
        private enum enumMixinStr_NID_secretary = `enum NID_secretary = 474;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_secretary); }))) {
            mixin(enumMixinStr_NID_secretary);
        }
    }




    static if(!is(typeof(OBJ_secretary))) {
        private enum enumMixinStr_OBJ_secretary = `enum OBJ_secretary = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 21L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_secretary); }))) {
            mixin(enumMixinStr_OBJ_secretary);
        }
    }




    static if(!is(typeof(LN_otherMailbox))) {
        private enum enumMixinStr_LN_otherMailbox = `enum LN_otherMailbox = "otherMailbox";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_otherMailbox); }))) {
            mixin(enumMixinStr_LN_otherMailbox);
        }
    }




    static if(!is(typeof(NID_otherMailbox))) {
        private enum enumMixinStr_NID_otherMailbox = `enum NID_otherMailbox = 475;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_otherMailbox); }))) {
            mixin(enumMixinStr_NID_otherMailbox);
        }
    }




    static if(!is(typeof(OBJ_otherMailbox))) {
        private enum enumMixinStr_OBJ_otherMailbox = `enum OBJ_otherMailbox = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 22L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_otherMailbox); }))) {
            mixin(enumMixinStr_OBJ_otherMailbox);
        }
    }




    static if(!is(typeof(LN_lastModifiedTime))) {
        private enum enumMixinStr_LN_lastModifiedTime = `enum LN_lastModifiedTime = "lastModifiedTime";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_lastModifiedTime); }))) {
            mixin(enumMixinStr_LN_lastModifiedTime);
        }
    }




    static if(!is(typeof(NID_lastModifiedTime))) {
        private enum enumMixinStr_NID_lastModifiedTime = `enum NID_lastModifiedTime = 476;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_lastModifiedTime); }))) {
            mixin(enumMixinStr_NID_lastModifiedTime);
        }
    }




    static if(!is(typeof(OBJ_lastModifiedTime))) {
        private enum enumMixinStr_OBJ_lastModifiedTime = `enum OBJ_lastModifiedTime = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 23L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_lastModifiedTime); }))) {
            mixin(enumMixinStr_OBJ_lastModifiedTime);
        }
    }




    static if(!is(typeof(LN_lastModifiedBy))) {
        private enum enumMixinStr_LN_lastModifiedBy = `enum LN_lastModifiedBy = "lastModifiedBy";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_lastModifiedBy); }))) {
            mixin(enumMixinStr_LN_lastModifiedBy);
        }
    }




    static if(!is(typeof(NID_lastModifiedBy))) {
        private enum enumMixinStr_NID_lastModifiedBy = `enum NID_lastModifiedBy = 477;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_lastModifiedBy); }))) {
            mixin(enumMixinStr_NID_lastModifiedBy);
        }
    }




    static if(!is(typeof(OBJ_lastModifiedBy))) {
        private enum enumMixinStr_OBJ_lastModifiedBy = `enum OBJ_lastModifiedBy = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 24L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_lastModifiedBy); }))) {
            mixin(enumMixinStr_OBJ_lastModifiedBy);
        }
    }




    static if(!is(typeof(SN_domainComponent))) {
        private enum enumMixinStr_SN_domainComponent = `enum SN_domainComponent = "DC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_domainComponent); }))) {
            mixin(enumMixinStr_SN_domainComponent);
        }
    }




    static if(!is(typeof(LN_domainComponent))) {
        private enum enumMixinStr_LN_domainComponent = `enum LN_domainComponent = "domainComponent";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_domainComponent); }))) {
            mixin(enumMixinStr_LN_domainComponent);
        }
    }




    static if(!is(typeof(NID_domainComponent))) {
        private enum enumMixinStr_NID_domainComponent = `enum NID_domainComponent = 391;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_domainComponent); }))) {
            mixin(enumMixinStr_NID_domainComponent);
        }
    }




    static if(!is(typeof(OBJ_domainComponent))) {
        private enum enumMixinStr_OBJ_domainComponent = `enum OBJ_domainComponent = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 25L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_domainComponent); }))) {
            mixin(enumMixinStr_OBJ_domainComponent);
        }
    }




    static if(!is(typeof(LN_aRecord))) {
        private enum enumMixinStr_LN_aRecord = `enum LN_aRecord = "aRecord";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aRecord); }))) {
            mixin(enumMixinStr_LN_aRecord);
        }
    }




    static if(!is(typeof(NID_aRecord))) {
        private enum enumMixinStr_NID_aRecord = `enum NID_aRecord = 478;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aRecord); }))) {
            mixin(enumMixinStr_NID_aRecord);
        }
    }




    static if(!is(typeof(OBJ_aRecord))) {
        private enum enumMixinStr_OBJ_aRecord = `enum OBJ_aRecord = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 26L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aRecord); }))) {
            mixin(enumMixinStr_OBJ_aRecord);
        }
    }




    static if(!is(typeof(LN_pilotAttributeType27))) {
        private enum enumMixinStr_LN_pilotAttributeType27 = `enum LN_pilotAttributeType27 = "pilotAttributeType27";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pilotAttributeType27); }))) {
            mixin(enumMixinStr_LN_pilotAttributeType27);
        }
    }




    static if(!is(typeof(NID_pilotAttributeType27))) {
        private enum enumMixinStr_NID_pilotAttributeType27 = `enum NID_pilotAttributeType27 = 479;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pilotAttributeType27); }))) {
            mixin(enumMixinStr_NID_pilotAttributeType27);
        }
    }




    static if(!is(typeof(OBJ_pilotAttributeType27))) {
        private enum enumMixinStr_OBJ_pilotAttributeType27 = `enum OBJ_pilotAttributeType27 = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 27L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pilotAttributeType27); }))) {
            mixin(enumMixinStr_OBJ_pilotAttributeType27);
        }
    }




    static if(!is(typeof(LN_mXRecord))) {
        private enum enumMixinStr_LN_mXRecord = `enum LN_mXRecord = "mXRecord";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_mXRecord); }))) {
            mixin(enumMixinStr_LN_mXRecord);
        }
    }




    static if(!is(typeof(NID_mXRecord))) {
        private enum enumMixinStr_NID_mXRecord = `enum NID_mXRecord = 480;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_mXRecord); }))) {
            mixin(enumMixinStr_NID_mXRecord);
        }
    }




    static if(!is(typeof(OBJ_mXRecord))) {
        private enum enumMixinStr_OBJ_mXRecord = `enum OBJ_mXRecord = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 28L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_mXRecord); }))) {
            mixin(enumMixinStr_OBJ_mXRecord);
        }
    }




    static if(!is(typeof(LN_nSRecord))) {
        private enum enumMixinStr_LN_nSRecord = `enum LN_nSRecord = "nSRecord";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_nSRecord); }))) {
            mixin(enumMixinStr_LN_nSRecord);
        }
    }




    static if(!is(typeof(NID_nSRecord))) {
        private enum enumMixinStr_NID_nSRecord = `enum NID_nSRecord = 481;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_nSRecord); }))) {
            mixin(enumMixinStr_NID_nSRecord);
        }
    }




    static if(!is(typeof(OBJ_nSRecord))) {
        private enum enumMixinStr_OBJ_nSRecord = `enum OBJ_nSRecord = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 29L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_nSRecord); }))) {
            mixin(enumMixinStr_OBJ_nSRecord);
        }
    }




    static if(!is(typeof(LN_sOARecord))) {
        private enum enumMixinStr_LN_sOARecord = `enum LN_sOARecord = "sOARecord";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sOARecord); }))) {
            mixin(enumMixinStr_LN_sOARecord);
        }
    }




    static if(!is(typeof(NID_sOARecord))) {
        private enum enumMixinStr_NID_sOARecord = `enum NID_sOARecord = 482;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sOARecord); }))) {
            mixin(enumMixinStr_NID_sOARecord);
        }
    }




    static if(!is(typeof(OBJ_sOARecord))) {
        private enum enumMixinStr_OBJ_sOARecord = `enum OBJ_sOARecord = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 30L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sOARecord); }))) {
            mixin(enumMixinStr_OBJ_sOARecord);
        }
    }




    static if(!is(typeof(LN_cNAMERecord))) {
        private enum enumMixinStr_LN_cNAMERecord = `enum LN_cNAMERecord = "cNAMERecord";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_cNAMERecord); }))) {
            mixin(enumMixinStr_LN_cNAMERecord);
        }
    }




    static if(!is(typeof(NID_cNAMERecord))) {
        private enum enumMixinStr_NID_cNAMERecord = `enum NID_cNAMERecord = 483;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_cNAMERecord); }))) {
            mixin(enumMixinStr_NID_cNAMERecord);
        }
    }




    static if(!is(typeof(OBJ_cNAMERecord))) {
        private enum enumMixinStr_OBJ_cNAMERecord = `enum OBJ_cNAMERecord = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 31L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_cNAMERecord); }))) {
            mixin(enumMixinStr_OBJ_cNAMERecord);
        }
    }




    static if(!is(typeof(LN_associatedDomain))) {
        private enum enumMixinStr_LN_associatedDomain = `enum LN_associatedDomain = "associatedDomain";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_associatedDomain); }))) {
            mixin(enumMixinStr_LN_associatedDomain);
        }
    }




    static if(!is(typeof(NID_associatedDomain))) {
        private enum enumMixinStr_NID_associatedDomain = `enum NID_associatedDomain = 484;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_associatedDomain); }))) {
            mixin(enumMixinStr_NID_associatedDomain);
        }
    }




    static if(!is(typeof(OBJ_associatedDomain))) {
        private enum enumMixinStr_OBJ_associatedDomain = `enum OBJ_associatedDomain = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 37L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_associatedDomain); }))) {
            mixin(enumMixinStr_OBJ_associatedDomain);
        }
    }




    static if(!is(typeof(LN_associatedName))) {
        private enum enumMixinStr_LN_associatedName = `enum LN_associatedName = "associatedName";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_associatedName); }))) {
            mixin(enumMixinStr_LN_associatedName);
        }
    }




    static if(!is(typeof(NID_associatedName))) {
        private enum enumMixinStr_NID_associatedName = `enum NID_associatedName = 485;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_associatedName); }))) {
            mixin(enumMixinStr_NID_associatedName);
        }
    }




    static if(!is(typeof(OBJ_associatedName))) {
        private enum enumMixinStr_OBJ_associatedName = `enum OBJ_associatedName = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 38L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_associatedName); }))) {
            mixin(enumMixinStr_OBJ_associatedName);
        }
    }




    static if(!is(typeof(LN_homePostalAddress))) {
        private enum enumMixinStr_LN_homePostalAddress = `enum LN_homePostalAddress = "homePostalAddress";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_homePostalAddress); }))) {
            mixin(enumMixinStr_LN_homePostalAddress);
        }
    }




    static if(!is(typeof(NID_homePostalAddress))) {
        private enum enumMixinStr_NID_homePostalAddress = `enum NID_homePostalAddress = 486;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_homePostalAddress); }))) {
            mixin(enumMixinStr_NID_homePostalAddress);
        }
    }




    static if(!is(typeof(OBJ_homePostalAddress))) {
        private enum enumMixinStr_OBJ_homePostalAddress = `enum OBJ_homePostalAddress = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 39L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_homePostalAddress); }))) {
            mixin(enumMixinStr_OBJ_homePostalAddress);
        }
    }




    static if(!is(typeof(LN_personalTitle))) {
        private enum enumMixinStr_LN_personalTitle = `enum LN_personalTitle = "personalTitle";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_personalTitle); }))) {
            mixin(enumMixinStr_LN_personalTitle);
        }
    }




    static if(!is(typeof(NID_personalTitle))) {
        private enum enumMixinStr_NID_personalTitle = `enum NID_personalTitle = 487;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_personalTitle); }))) {
            mixin(enumMixinStr_NID_personalTitle);
        }
    }




    static if(!is(typeof(OBJ_personalTitle))) {
        private enum enumMixinStr_OBJ_personalTitle = `enum OBJ_personalTitle = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 40L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_personalTitle); }))) {
            mixin(enumMixinStr_OBJ_personalTitle);
        }
    }




    static if(!is(typeof(LN_mobileTelephoneNumber))) {
        private enum enumMixinStr_LN_mobileTelephoneNumber = `enum LN_mobileTelephoneNumber = "mobileTelephoneNumber";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_mobileTelephoneNumber); }))) {
            mixin(enumMixinStr_LN_mobileTelephoneNumber);
        }
    }




    static if(!is(typeof(NID_mobileTelephoneNumber))) {
        private enum enumMixinStr_NID_mobileTelephoneNumber = `enum NID_mobileTelephoneNumber = 488;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_mobileTelephoneNumber); }))) {
            mixin(enumMixinStr_NID_mobileTelephoneNumber);
        }
    }




    static if(!is(typeof(OBJ_mobileTelephoneNumber))) {
        private enum enumMixinStr_OBJ_mobileTelephoneNumber = `enum OBJ_mobileTelephoneNumber = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 41L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_mobileTelephoneNumber); }))) {
            mixin(enumMixinStr_OBJ_mobileTelephoneNumber);
        }
    }




    static if(!is(typeof(LN_pagerTelephoneNumber))) {
        private enum enumMixinStr_LN_pagerTelephoneNumber = `enum LN_pagerTelephoneNumber = "pagerTelephoneNumber";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pagerTelephoneNumber); }))) {
            mixin(enumMixinStr_LN_pagerTelephoneNumber);
        }
    }




    static if(!is(typeof(NID_pagerTelephoneNumber))) {
        private enum enumMixinStr_NID_pagerTelephoneNumber = `enum NID_pagerTelephoneNumber = 489;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pagerTelephoneNumber); }))) {
            mixin(enumMixinStr_NID_pagerTelephoneNumber);
        }
    }




    static if(!is(typeof(OBJ_pagerTelephoneNumber))) {
        private enum enumMixinStr_OBJ_pagerTelephoneNumber = `enum OBJ_pagerTelephoneNumber = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 42L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pagerTelephoneNumber); }))) {
            mixin(enumMixinStr_OBJ_pagerTelephoneNumber);
        }
    }




    static if(!is(typeof(LN_friendlyCountryName))) {
        private enum enumMixinStr_LN_friendlyCountryName = `enum LN_friendlyCountryName = "friendlyCountryName";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_friendlyCountryName); }))) {
            mixin(enumMixinStr_LN_friendlyCountryName);
        }
    }




    static if(!is(typeof(NID_friendlyCountryName))) {
        private enum enumMixinStr_NID_friendlyCountryName = `enum NID_friendlyCountryName = 490;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_friendlyCountryName); }))) {
            mixin(enumMixinStr_NID_friendlyCountryName);
        }
    }




    static if(!is(typeof(OBJ_friendlyCountryName))) {
        private enum enumMixinStr_OBJ_friendlyCountryName = `enum OBJ_friendlyCountryName = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 43L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_friendlyCountryName); }))) {
            mixin(enumMixinStr_OBJ_friendlyCountryName);
        }
    }




    static if(!is(typeof(SN_uniqueIdentifier))) {
        private enum enumMixinStr_SN_uniqueIdentifier = `enum SN_uniqueIdentifier = "uid";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_uniqueIdentifier); }))) {
            mixin(enumMixinStr_SN_uniqueIdentifier);
        }
    }




    static if(!is(typeof(LN_uniqueIdentifier))) {
        private enum enumMixinStr_LN_uniqueIdentifier = `enum LN_uniqueIdentifier = "uniqueIdentifier";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_uniqueIdentifier); }))) {
            mixin(enumMixinStr_LN_uniqueIdentifier);
        }
    }




    static if(!is(typeof(NID_uniqueIdentifier))) {
        private enum enumMixinStr_NID_uniqueIdentifier = `enum NID_uniqueIdentifier = 102;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_uniqueIdentifier); }))) {
            mixin(enumMixinStr_NID_uniqueIdentifier);
        }
    }




    static if(!is(typeof(OBJ_uniqueIdentifier))) {
        private enum enumMixinStr_OBJ_uniqueIdentifier = `enum OBJ_uniqueIdentifier = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 44L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_uniqueIdentifier); }))) {
            mixin(enumMixinStr_OBJ_uniqueIdentifier);
        }
    }




    static if(!is(typeof(LN_organizationalStatus))) {
        private enum enumMixinStr_LN_organizationalStatus = `enum LN_organizationalStatus = "organizationalStatus";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_organizationalStatus); }))) {
            mixin(enumMixinStr_LN_organizationalStatus);
        }
    }




    static if(!is(typeof(NID_organizationalStatus))) {
        private enum enumMixinStr_NID_organizationalStatus = `enum NID_organizationalStatus = 491;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_organizationalStatus); }))) {
            mixin(enumMixinStr_NID_organizationalStatus);
        }
    }




    static if(!is(typeof(OBJ_organizationalStatus))) {
        private enum enumMixinStr_OBJ_organizationalStatus = `enum OBJ_organizationalStatus = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 45L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_organizationalStatus); }))) {
            mixin(enumMixinStr_OBJ_organizationalStatus);
        }
    }




    static if(!is(typeof(LN_janetMailbox))) {
        private enum enumMixinStr_LN_janetMailbox = `enum LN_janetMailbox = "janetMailbox";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_janetMailbox); }))) {
            mixin(enumMixinStr_LN_janetMailbox);
        }
    }




    static if(!is(typeof(NID_janetMailbox))) {
        private enum enumMixinStr_NID_janetMailbox = `enum NID_janetMailbox = 492;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_janetMailbox); }))) {
            mixin(enumMixinStr_NID_janetMailbox);
        }
    }




    static if(!is(typeof(OBJ_janetMailbox))) {
        private enum enumMixinStr_OBJ_janetMailbox = `enum OBJ_janetMailbox = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 46L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_janetMailbox); }))) {
            mixin(enumMixinStr_OBJ_janetMailbox);
        }
    }




    static if(!is(typeof(LN_mailPreferenceOption))) {
        private enum enumMixinStr_LN_mailPreferenceOption = `enum LN_mailPreferenceOption = "mailPreferenceOption";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_mailPreferenceOption); }))) {
            mixin(enumMixinStr_LN_mailPreferenceOption);
        }
    }




    static if(!is(typeof(NID_mailPreferenceOption))) {
        private enum enumMixinStr_NID_mailPreferenceOption = `enum NID_mailPreferenceOption = 493;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_mailPreferenceOption); }))) {
            mixin(enumMixinStr_NID_mailPreferenceOption);
        }
    }




    static if(!is(typeof(OBJ_mailPreferenceOption))) {
        private enum enumMixinStr_OBJ_mailPreferenceOption = `enum OBJ_mailPreferenceOption = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 47L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_mailPreferenceOption); }))) {
            mixin(enumMixinStr_OBJ_mailPreferenceOption);
        }
    }




    static if(!is(typeof(LN_buildingName))) {
        private enum enumMixinStr_LN_buildingName = `enum LN_buildingName = "buildingName";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_buildingName); }))) {
            mixin(enumMixinStr_LN_buildingName);
        }
    }




    static if(!is(typeof(NID_buildingName))) {
        private enum enumMixinStr_NID_buildingName = `enum NID_buildingName = 494;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_buildingName); }))) {
            mixin(enumMixinStr_NID_buildingName);
        }
    }




    static if(!is(typeof(OBJ_buildingName))) {
        private enum enumMixinStr_OBJ_buildingName = `enum OBJ_buildingName = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 48L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_buildingName); }))) {
            mixin(enumMixinStr_OBJ_buildingName);
        }
    }




    static if(!is(typeof(LN_dSAQuality))) {
        private enum enumMixinStr_LN_dSAQuality = `enum LN_dSAQuality = "dSAQuality";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_dSAQuality); }))) {
            mixin(enumMixinStr_LN_dSAQuality);
        }
    }




    static if(!is(typeof(NID_dSAQuality))) {
        private enum enumMixinStr_NID_dSAQuality = `enum NID_dSAQuality = 495;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dSAQuality); }))) {
            mixin(enumMixinStr_NID_dSAQuality);
        }
    }




    static if(!is(typeof(OBJ_dSAQuality))) {
        private enum enumMixinStr_OBJ_dSAQuality = `enum OBJ_dSAQuality = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 49L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dSAQuality); }))) {
            mixin(enumMixinStr_OBJ_dSAQuality);
        }
    }




    static if(!is(typeof(LN_singleLevelQuality))) {
        private enum enumMixinStr_LN_singleLevelQuality = `enum LN_singleLevelQuality = "singleLevelQuality";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_singleLevelQuality); }))) {
            mixin(enumMixinStr_LN_singleLevelQuality);
        }
    }




    static if(!is(typeof(NID_singleLevelQuality))) {
        private enum enumMixinStr_NID_singleLevelQuality = `enum NID_singleLevelQuality = 496;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_singleLevelQuality); }))) {
            mixin(enumMixinStr_NID_singleLevelQuality);
        }
    }




    static if(!is(typeof(OBJ_singleLevelQuality))) {
        private enum enumMixinStr_OBJ_singleLevelQuality = `enum OBJ_singleLevelQuality = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 50L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_singleLevelQuality); }))) {
            mixin(enumMixinStr_OBJ_singleLevelQuality);
        }
    }




    static if(!is(typeof(LN_subtreeMinimumQuality))) {
        private enum enumMixinStr_LN_subtreeMinimumQuality = `enum LN_subtreeMinimumQuality = "subtreeMinimumQuality";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_subtreeMinimumQuality); }))) {
            mixin(enumMixinStr_LN_subtreeMinimumQuality);
        }
    }




    static if(!is(typeof(NID_subtreeMinimumQuality))) {
        private enum enumMixinStr_NID_subtreeMinimumQuality = `enum NID_subtreeMinimumQuality = 497;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_subtreeMinimumQuality); }))) {
            mixin(enumMixinStr_NID_subtreeMinimumQuality);
        }
    }




    static if(!is(typeof(OBJ_subtreeMinimumQuality))) {
        private enum enumMixinStr_OBJ_subtreeMinimumQuality = `enum OBJ_subtreeMinimumQuality = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 51L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_subtreeMinimumQuality); }))) {
            mixin(enumMixinStr_OBJ_subtreeMinimumQuality);
        }
    }




    static if(!is(typeof(LN_subtreeMaximumQuality))) {
        private enum enumMixinStr_LN_subtreeMaximumQuality = `enum LN_subtreeMaximumQuality = "subtreeMaximumQuality";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_subtreeMaximumQuality); }))) {
            mixin(enumMixinStr_LN_subtreeMaximumQuality);
        }
    }




    static if(!is(typeof(NID_subtreeMaximumQuality))) {
        private enum enumMixinStr_NID_subtreeMaximumQuality = `enum NID_subtreeMaximumQuality = 498;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_subtreeMaximumQuality); }))) {
            mixin(enumMixinStr_NID_subtreeMaximumQuality);
        }
    }




    static if(!is(typeof(OBJ_subtreeMaximumQuality))) {
        private enum enumMixinStr_OBJ_subtreeMaximumQuality = `enum OBJ_subtreeMaximumQuality = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 52L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_subtreeMaximumQuality); }))) {
            mixin(enumMixinStr_OBJ_subtreeMaximumQuality);
        }
    }




    static if(!is(typeof(LN_personalSignature))) {
        private enum enumMixinStr_LN_personalSignature = `enum LN_personalSignature = "personalSignature";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_personalSignature); }))) {
            mixin(enumMixinStr_LN_personalSignature);
        }
    }




    static if(!is(typeof(NID_personalSignature))) {
        private enum enumMixinStr_NID_personalSignature = `enum NID_personalSignature = 499;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_personalSignature); }))) {
            mixin(enumMixinStr_NID_personalSignature);
        }
    }




    static if(!is(typeof(OBJ_personalSignature))) {
        private enum enumMixinStr_OBJ_personalSignature = `enum OBJ_personalSignature = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 53L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_personalSignature); }))) {
            mixin(enumMixinStr_OBJ_personalSignature);
        }
    }




    static if(!is(typeof(LN_dITRedirect))) {
        private enum enumMixinStr_LN_dITRedirect = `enum LN_dITRedirect = "dITRedirect";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_dITRedirect); }))) {
            mixin(enumMixinStr_LN_dITRedirect);
        }
    }




    static if(!is(typeof(NID_dITRedirect))) {
        private enum enumMixinStr_NID_dITRedirect = `enum NID_dITRedirect = 500;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dITRedirect); }))) {
            mixin(enumMixinStr_NID_dITRedirect);
        }
    }




    static if(!is(typeof(OBJ_dITRedirect))) {
        private enum enumMixinStr_OBJ_dITRedirect = `enum OBJ_dITRedirect = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 54L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dITRedirect); }))) {
            mixin(enumMixinStr_OBJ_dITRedirect);
        }
    }




    static if(!is(typeof(SN_audio))) {
        private enum enumMixinStr_SN_audio = `enum SN_audio = "audio";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_audio); }))) {
            mixin(enumMixinStr_SN_audio);
        }
    }




    static if(!is(typeof(NID_audio))) {
        private enum enumMixinStr_NID_audio = `enum NID_audio = 501;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_audio); }))) {
            mixin(enumMixinStr_NID_audio);
        }
    }




    static if(!is(typeof(OBJ_audio))) {
        private enum enumMixinStr_OBJ_audio = `enum OBJ_audio = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 55L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_audio); }))) {
            mixin(enumMixinStr_OBJ_audio);
        }
    }




    static if(!is(typeof(LN_documentPublisher))) {
        private enum enumMixinStr_LN_documentPublisher = `enum LN_documentPublisher = "documentPublisher";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_documentPublisher); }))) {
            mixin(enumMixinStr_LN_documentPublisher);
        }
    }




    static if(!is(typeof(NID_documentPublisher))) {
        private enum enumMixinStr_NID_documentPublisher = `enum NID_documentPublisher = 502;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_documentPublisher); }))) {
            mixin(enumMixinStr_NID_documentPublisher);
        }
    }




    static if(!is(typeof(OBJ_documentPublisher))) {
        private enum enumMixinStr_OBJ_documentPublisher = `enum OBJ_documentPublisher = OBJ_itu_t , 9L , 2342L , 19200300L , 100L , 1L , 56L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_documentPublisher); }))) {
            mixin(enumMixinStr_OBJ_documentPublisher);
        }
    }




    static if(!is(typeof(SN_id_set))) {
        private enum enumMixinStr_SN_id_set = `enum SN_id_set = "id-set";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_set); }))) {
            mixin(enumMixinStr_SN_id_set);
        }
    }




    static if(!is(typeof(LN_id_set))) {
        private enum enumMixinStr_LN_id_set = `enum LN_id_set = "Secure Electronic Transactions";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_set); }))) {
            mixin(enumMixinStr_LN_id_set);
        }
    }




    static if(!is(typeof(NID_id_set))) {
        private enum enumMixinStr_NID_id_set = `enum NID_id_set = 512;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_set); }))) {
            mixin(enumMixinStr_NID_id_set);
        }
    }




    static if(!is(typeof(OBJ_id_set))) {
        private enum enumMixinStr_OBJ_id_set = `enum OBJ_id_set = OBJ_international_organizations , 42L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_set); }))) {
            mixin(enumMixinStr_OBJ_id_set);
        }
    }




    static if(!is(typeof(SN_set_ctype))) {
        private enum enumMixinStr_SN_set_ctype = `enum SN_set_ctype = "set-ctype";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_set_ctype); }))) {
            mixin(enumMixinStr_SN_set_ctype);
        }
    }




    static if(!is(typeof(LN_set_ctype))) {
        private enum enumMixinStr_LN_set_ctype = `enum LN_set_ctype = "content types";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_set_ctype); }))) {
            mixin(enumMixinStr_LN_set_ctype);
        }
    }




    static if(!is(typeof(NID_set_ctype))) {
        private enum enumMixinStr_NID_set_ctype = `enum NID_set_ctype = 513;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_set_ctype); }))) {
            mixin(enumMixinStr_NID_set_ctype);
        }
    }




    static if(!is(typeof(OBJ_set_ctype))) {
        private enum enumMixinStr_OBJ_set_ctype = `enum OBJ_set_ctype = OBJ_international_organizations , 42L , 0L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_set_ctype); }))) {
            mixin(enumMixinStr_OBJ_set_ctype);
        }
    }




    static if(!is(typeof(SN_set_msgExt))) {
        private enum enumMixinStr_SN_set_msgExt = `enum SN_set_msgExt = "set-msgExt";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_set_msgExt); }))) {
            mixin(enumMixinStr_SN_set_msgExt);
        }
    }




    static if(!is(typeof(LN_set_msgExt))) {
        private enum enumMixinStr_LN_set_msgExt = `enum LN_set_msgExt = "message extensions";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_set_msgExt); }))) {
            mixin(enumMixinStr_LN_set_msgExt);
        }
    }




    static if(!is(typeof(NID_set_msgExt))) {
        private enum enumMixinStr_NID_set_msgExt = `enum NID_set_msgExt = 514;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_set_msgExt); }))) {
            mixin(enumMixinStr_NID_set_msgExt);
        }
    }




    static if(!is(typeof(OBJ_set_msgExt))) {
        private enum enumMixinStr_OBJ_set_msgExt = `enum OBJ_set_msgExt = OBJ_international_organizations , 42L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_set_msgExt); }))) {
            mixin(enumMixinStr_OBJ_set_msgExt);
        }
    }




    static if(!is(typeof(SN_set_attr))) {
        private enum enumMixinStr_SN_set_attr = `enum SN_set_attr = "set-attr";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_set_attr); }))) {
            mixin(enumMixinStr_SN_set_attr);
        }
    }




    static if(!is(typeof(NID_set_attr))) {
        private enum enumMixinStr_NID_set_attr = `enum NID_set_attr = 515;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_set_attr); }))) {
            mixin(enumMixinStr_NID_set_attr);
        }
    }




    static if(!is(typeof(OBJ_set_attr))) {
        private enum enumMixinStr_OBJ_set_attr = `enum OBJ_set_attr = OBJ_international_organizations , 42L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_set_attr); }))) {
            mixin(enumMixinStr_OBJ_set_attr);
        }
    }




    static if(!is(typeof(SN_set_policy))) {
        private enum enumMixinStr_SN_set_policy = `enum SN_set_policy = "set-policy";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_set_policy); }))) {
            mixin(enumMixinStr_SN_set_policy);
        }
    }




    static if(!is(typeof(NID_set_policy))) {
        private enum enumMixinStr_NID_set_policy = `enum NID_set_policy = 516;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_set_policy); }))) {
            mixin(enumMixinStr_NID_set_policy);
        }
    }




    static if(!is(typeof(OBJ_set_policy))) {
        private enum enumMixinStr_OBJ_set_policy = `enum OBJ_set_policy = OBJ_international_organizations , 42L , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_set_policy); }))) {
            mixin(enumMixinStr_OBJ_set_policy);
        }
    }




    static if(!is(typeof(SN_set_certExt))) {
        private enum enumMixinStr_SN_set_certExt = `enum SN_set_certExt = "set-certExt";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_set_certExt); }))) {
            mixin(enumMixinStr_SN_set_certExt);
        }
    }




    static if(!is(typeof(LN_set_certExt))) {
        private enum enumMixinStr_LN_set_certExt = `enum LN_set_certExt = "certificate extensions";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_set_certExt); }))) {
            mixin(enumMixinStr_LN_set_certExt);
        }
    }




    static if(!is(typeof(NID_set_certExt))) {
        private enum enumMixinStr_NID_set_certExt = `enum NID_set_certExt = 517;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_set_certExt); }))) {
            mixin(enumMixinStr_NID_set_certExt);
        }
    }




    static if(!is(typeof(OBJ_set_certExt))) {
        private enum enumMixinStr_OBJ_set_certExt = `enum OBJ_set_certExt = OBJ_international_organizations , 42L , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_set_certExt); }))) {
            mixin(enumMixinStr_OBJ_set_certExt);
        }
    }




    static if(!is(typeof(SN_set_brand))) {
        private enum enumMixinStr_SN_set_brand = `enum SN_set_brand = "set-brand";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_set_brand); }))) {
            mixin(enumMixinStr_SN_set_brand);
        }
    }




    static if(!is(typeof(NID_set_brand))) {
        private enum enumMixinStr_NID_set_brand = `enum NID_set_brand = 518;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_set_brand); }))) {
            mixin(enumMixinStr_NID_set_brand);
        }
    }




    static if(!is(typeof(OBJ_set_brand))) {
        private enum enumMixinStr_OBJ_set_brand = `enum OBJ_set_brand = OBJ_international_organizations , 42L , 8L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_set_brand); }))) {
            mixin(enumMixinStr_OBJ_set_brand);
        }
    }




    static if(!is(typeof(SN_setct_PANData))) {
        private enum enumMixinStr_SN_setct_PANData = `enum SN_setct_PANData = "setct-PANData";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_PANData); }))) {
            mixin(enumMixinStr_SN_setct_PANData);
        }
    }




    static if(!is(typeof(NID_setct_PANData))) {
        private enum enumMixinStr_NID_setct_PANData = `enum NID_setct_PANData = 519;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_PANData); }))) {
            mixin(enumMixinStr_NID_setct_PANData);
        }
    }




    static if(!is(typeof(OBJ_setct_PANData))) {
        private enum enumMixinStr_OBJ_setct_PANData = `enum OBJ_setct_PANData = OBJ_international_organizations , 42L , 0L , 0L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_PANData); }))) {
            mixin(enumMixinStr_OBJ_setct_PANData);
        }
    }




    static if(!is(typeof(SN_setct_PANToken))) {
        private enum enumMixinStr_SN_setct_PANToken = `enum SN_setct_PANToken = "setct-PANToken";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_PANToken); }))) {
            mixin(enumMixinStr_SN_setct_PANToken);
        }
    }




    static if(!is(typeof(NID_setct_PANToken))) {
        private enum enumMixinStr_NID_setct_PANToken = `enum NID_setct_PANToken = 520;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_PANToken); }))) {
            mixin(enumMixinStr_NID_setct_PANToken);
        }
    }




    static if(!is(typeof(OBJ_setct_PANToken))) {
        private enum enumMixinStr_OBJ_setct_PANToken = `enum OBJ_setct_PANToken = OBJ_international_organizations , 42L , 0L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_PANToken); }))) {
            mixin(enumMixinStr_OBJ_setct_PANToken);
        }
    }




    static if(!is(typeof(SN_setct_PANOnly))) {
        private enum enumMixinStr_SN_setct_PANOnly = `enum SN_setct_PANOnly = "setct-PANOnly";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_PANOnly); }))) {
            mixin(enumMixinStr_SN_setct_PANOnly);
        }
    }




    static if(!is(typeof(NID_setct_PANOnly))) {
        private enum enumMixinStr_NID_setct_PANOnly = `enum NID_setct_PANOnly = 521;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_PANOnly); }))) {
            mixin(enumMixinStr_NID_setct_PANOnly);
        }
    }




    static if(!is(typeof(OBJ_setct_PANOnly))) {
        private enum enumMixinStr_OBJ_setct_PANOnly = `enum OBJ_setct_PANOnly = OBJ_international_organizations , 42L , 0L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_PANOnly); }))) {
            mixin(enumMixinStr_OBJ_setct_PANOnly);
        }
    }




    static if(!is(typeof(SN_setct_OIData))) {
        private enum enumMixinStr_SN_setct_OIData = `enum SN_setct_OIData = "setct-OIData";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_OIData); }))) {
            mixin(enumMixinStr_SN_setct_OIData);
        }
    }




    static if(!is(typeof(NID_setct_OIData))) {
        private enum enumMixinStr_NID_setct_OIData = `enum NID_setct_OIData = 522;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_OIData); }))) {
            mixin(enumMixinStr_NID_setct_OIData);
        }
    }




    static if(!is(typeof(OBJ_setct_OIData))) {
        private enum enumMixinStr_OBJ_setct_OIData = `enum OBJ_setct_OIData = OBJ_international_organizations , 42L , 0L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_OIData); }))) {
            mixin(enumMixinStr_OBJ_setct_OIData);
        }
    }




    static if(!is(typeof(SN_setct_PI))) {
        private enum enumMixinStr_SN_setct_PI = `enum SN_setct_PI = "setct-PI";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_PI); }))) {
            mixin(enumMixinStr_SN_setct_PI);
        }
    }




    static if(!is(typeof(NID_setct_PI))) {
        private enum enumMixinStr_NID_setct_PI = `enum NID_setct_PI = 523;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_PI); }))) {
            mixin(enumMixinStr_NID_setct_PI);
        }
    }




    static if(!is(typeof(OBJ_setct_PI))) {
        private enum enumMixinStr_OBJ_setct_PI = `enum OBJ_setct_PI = OBJ_international_organizations , 42L , 0L , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_PI); }))) {
            mixin(enumMixinStr_OBJ_setct_PI);
        }
    }




    static if(!is(typeof(SN_setct_PIData))) {
        private enum enumMixinStr_SN_setct_PIData = `enum SN_setct_PIData = "setct-PIData";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_PIData); }))) {
            mixin(enumMixinStr_SN_setct_PIData);
        }
    }




    static if(!is(typeof(NID_setct_PIData))) {
        private enum enumMixinStr_NID_setct_PIData = `enum NID_setct_PIData = 524;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_PIData); }))) {
            mixin(enumMixinStr_NID_setct_PIData);
        }
    }




    static if(!is(typeof(OBJ_setct_PIData))) {
        private enum enumMixinStr_OBJ_setct_PIData = `enum OBJ_setct_PIData = OBJ_international_organizations , 42L , 0L , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_PIData); }))) {
            mixin(enumMixinStr_OBJ_setct_PIData);
        }
    }




    static if(!is(typeof(SN_setct_PIDataUnsigned))) {
        private enum enumMixinStr_SN_setct_PIDataUnsigned = `enum SN_setct_PIDataUnsigned = "setct-PIDataUnsigned";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_PIDataUnsigned); }))) {
            mixin(enumMixinStr_SN_setct_PIDataUnsigned);
        }
    }




    static if(!is(typeof(NID_setct_PIDataUnsigned))) {
        private enum enumMixinStr_NID_setct_PIDataUnsigned = `enum NID_setct_PIDataUnsigned = 525;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_PIDataUnsigned); }))) {
            mixin(enumMixinStr_NID_setct_PIDataUnsigned);
        }
    }




    static if(!is(typeof(OBJ_setct_PIDataUnsigned))) {
        private enum enumMixinStr_OBJ_setct_PIDataUnsigned = `enum OBJ_setct_PIDataUnsigned = OBJ_international_organizations , 42L , 0L , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_PIDataUnsigned); }))) {
            mixin(enumMixinStr_OBJ_setct_PIDataUnsigned);
        }
    }




    static if(!is(typeof(SN_setct_HODInput))) {
        private enum enumMixinStr_SN_setct_HODInput = `enum SN_setct_HODInput = "setct-HODInput";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_HODInput); }))) {
            mixin(enumMixinStr_SN_setct_HODInput);
        }
    }




    static if(!is(typeof(NID_setct_HODInput))) {
        private enum enumMixinStr_NID_setct_HODInput = `enum NID_setct_HODInput = 526;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_HODInput); }))) {
            mixin(enumMixinStr_NID_setct_HODInput);
        }
    }




    static if(!is(typeof(OBJ_setct_HODInput))) {
        private enum enumMixinStr_OBJ_setct_HODInput = `enum OBJ_setct_HODInput = OBJ_international_organizations , 42L , 0L , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_HODInput); }))) {
            mixin(enumMixinStr_OBJ_setct_HODInput);
        }
    }




    static if(!is(typeof(SN_setct_AuthResBaggage))) {
        private enum enumMixinStr_SN_setct_AuthResBaggage = `enum SN_setct_AuthResBaggage = "setct-AuthResBaggage";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_AuthResBaggage); }))) {
            mixin(enumMixinStr_SN_setct_AuthResBaggage);
        }
    }




    static if(!is(typeof(NID_setct_AuthResBaggage))) {
        private enum enumMixinStr_NID_setct_AuthResBaggage = `enum NID_setct_AuthResBaggage = 527;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_AuthResBaggage); }))) {
            mixin(enumMixinStr_NID_setct_AuthResBaggage);
        }
    }




    static if(!is(typeof(OBJ_setct_AuthResBaggage))) {
        private enum enumMixinStr_OBJ_setct_AuthResBaggage = `enum OBJ_setct_AuthResBaggage = OBJ_international_organizations , 42L , 0L , 8L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_AuthResBaggage); }))) {
            mixin(enumMixinStr_OBJ_setct_AuthResBaggage);
        }
    }




    static if(!is(typeof(SN_setct_AuthRevReqBaggage))) {
        private enum enumMixinStr_SN_setct_AuthRevReqBaggage = `enum SN_setct_AuthRevReqBaggage = "setct-AuthRevReqBaggage";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_AuthRevReqBaggage); }))) {
            mixin(enumMixinStr_SN_setct_AuthRevReqBaggage);
        }
    }




    static if(!is(typeof(NID_setct_AuthRevReqBaggage))) {
        private enum enumMixinStr_NID_setct_AuthRevReqBaggage = `enum NID_setct_AuthRevReqBaggage = 528;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_AuthRevReqBaggage); }))) {
            mixin(enumMixinStr_NID_setct_AuthRevReqBaggage);
        }
    }




    static if(!is(typeof(OBJ_setct_AuthRevReqBaggage))) {
        private enum enumMixinStr_OBJ_setct_AuthRevReqBaggage = `enum OBJ_setct_AuthRevReqBaggage = OBJ_international_organizations , 42L , 0L , 9L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_AuthRevReqBaggage); }))) {
            mixin(enumMixinStr_OBJ_setct_AuthRevReqBaggage);
        }
    }




    static if(!is(typeof(SN_setct_AuthRevResBaggage))) {
        private enum enumMixinStr_SN_setct_AuthRevResBaggage = `enum SN_setct_AuthRevResBaggage = "setct-AuthRevResBaggage";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_AuthRevResBaggage); }))) {
            mixin(enumMixinStr_SN_setct_AuthRevResBaggage);
        }
    }




    static if(!is(typeof(NID_setct_AuthRevResBaggage))) {
        private enum enumMixinStr_NID_setct_AuthRevResBaggage = `enum NID_setct_AuthRevResBaggage = 529;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_AuthRevResBaggage); }))) {
            mixin(enumMixinStr_NID_setct_AuthRevResBaggage);
        }
    }




    static if(!is(typeof(OBJ_setct_AuthRevResBaggage))) {
        private enum enumMixinStr_OBJ_setct_AuthRevResBaggage = `enum OBJ_setct_AuthRevResBaggage = OBJ_international_organizations , 42L , 0L , 10L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_AuthRevResBaggage); }))) {
            mixin(enumMixinStr_OBJ_setct_AuthRevResBaggage);
        }
    }




    static if(!is(typeof(SN_setct_CapTokenSeq))) {
        private enum enumMixinStr_SN_setct_CapTokenSeq = `enum SN_setct_CapTokenSeq = "setct-CapTokenSeq";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CapTokenSeq); }))) {
            mixin(enumMixinStr_SN_setct_CapTokenSeq);
        }
    }




    static if(!is(typeof(NID_setct_CapTokenSeq))) {
        private enum enumMixinStr_NID_setct_CapTokenSeq = `enum NID_setct_CapTokenSeq = 530;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CapTokenSeq); }))) {
            mixin(enumMixinStr_NID_setct_CapTokenSeq);
        }
    }




    static if(!is(typeof(OBJ_setct_CapTokenSeq))) {
        private enum enumMixinStr_OBJ_setct_CapTokenSeq = `enum OBJ_setct_CapTokenSeq = OBJ_international_organizations , 42L , 0L , 11L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CapTokenSeq); }))) {
            mixin(enumMixinStr_OBJ_setct_CapTokenSeq);
        }
    }




    static if(!is(typeof(SN_setct_PInitResData))) {
        private enum enumMixinStr_SN_setct_PInitResData = `enum SN_setct_PInitResData = "setct-PInitResData";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_PInitResData); }))) {
            mixin(enumMixinStr_SN_setct_PInitResData);
        }
    }




    static if(!is(typeof(NID_setct_PInitResData))) {
        private enum enumMixinStr_NID_setct_PInitResData = `enum NID_setct_PInitResData = 531;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_PInitResData); }))) {
            mixin(enumMixinStr_NID_setct_PInitResData);
        }
    }




    static if(!is(typeof(OBJ_setct_PInitResData))) {
        private enum enumMixinStr_OBJ_setct_PInitResData = `enum OBJ_setct_PInitResData = OBJ_international_organizations , 42L , 0L , 12L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_PInitResData); }))) {
            mixin(enumMixinStr_OBJ_setct_PInitResData);
        }
    }




    static if(!is(typeof(SN_setct_PI_TBS))) {
        private enum enumMixinStr_SN_setct_PI_TBS = `enum SN_setct_PI_TBS = "setct-PI-TBS";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_PI_TBS); }))) {
            mixin(enumMixinStr_SN_setct_PI_TBS);
        }
    }




    static if(!is(typeof(NID_setct_PI_TBS))) {
        private enum enumMixinStr_NID_setct_PI_TBS = `enum NID_setct_PI_TBS = 532;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_PI_TBS); }))) {
            mixin(enumMixinStr_NID_setct_PI_TBS);
        }
    }




    static if(!is(typeof(OBJ_setct_PI_TBS))) {
        private enum enumMixinStr_OBJ_setct_PI_TBS = `enum OBJ_setct_PI_TBS = OBJ_international_organizations , 42L , 0L , 13L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_PI_TBS); }))) {
            mixin(enumMixinStr_OBJ_setct_PI_TBS);
        }
    }




    static if(!is(typeof(SN_setct_PResData))) {
        private enum enumMixinStr_SN_setct_PResData = `enum SN_setct_PResData = "setct-PResData";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_PResData); }))) {
            mixin(enumMixinStr_SN_setct_PResData);
        }
    }




    static if(!is(typeof(NID_setct_PResData))) {
        private enum enumMixinStr_NID_setct_PResData = `enum NID_setct_PResData = 533;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_PResData); }))) {
            mixin(enumMixinStr_NID_setct_PResData);
        }
    }




    static if(!is(typeof(OBJ_setct_PResData))) {
        private enum enumMixinStr_OBJ_setct_PResData = `enum OBJ_setct_PResData = OBJ_international_organizations , 42L , 0L , 14L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_PResData); }))) {
            mixin(enumMixinStr_OBJ_setct_PResData);
        }
    }




    static if(!is(typeof(SN_setct_AuthReqTBS))) {
        private enum enumMixinStr_SN_setct_AuthReqTBS = `enum SN_setct_AuthReqTBS = "setct-AuthReqTBS";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_AuthReqTBS); }))) {
            mixin(enumMixinStr_SN_setct_AuthReqTBS);
        }
    }




    static if(!is(typeof(NID_setct_AuthReqTBS))) {
        private enum enumMixinStr_NID_setct_AuthReqTBS = `enum NID_setct_AuthReqTBS = 534;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_AuthReqTBS); }))) {
            mixin(enumMixinStr_NID_setct_AuthReqTBS);
        }
    }




    static if(!is(typeof(OBJ_setct_AuthReqTBS))) {
        private enum enumMixinStr_OBJ_setct_AuthReqTBS = `enum OBJ_setct_AuthReqTBS = OBJ_international_organizations , 42L , 0L , 16L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_AuthReqTBS); }))) {
            mixin(enumMixinStr_OBJ_setct_AuthReqTBS);
        }
    }




    static if(!is(typeof(SN_setct_AuthResTBS))) {
        private enum enumMixinStr_SN_setct_AuthResTBS = `enum SN_setct_AuthResTBS = "setct-AuthResTBS";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_AuthResTBS); }))) {
            mixin(enumMixinStr_SN_setct_AuthResTBS);
        }
    }




    static if(!is(typeof(NID_setct_AuthResTBS))) {
        private enum enumMixinStr_NID_setct_AuthResTBS = `enum NID_setct_AuthResTBS = 535;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_AuthResTBS); }))) {
            mixin(enumMixinStr_NID_setct_AuthResTBS);
        }
    }




    static if(!is(typeof(OBJ_setct_AuthResTBS))) {
        private enum enumMixinStr_OBJ_setct_AuthResTBS = `enum OBJ_setct_AuthResTBS = OBJ_international_organizations , 42L , 0L , 17L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_AuthResTBS); }))) {
            mixin(enumMixinStr_OBJ_setct_AuthResTBS);
        }
    }




    static if(!is(typeof(SN_setct_AuthResTBSX))) {
        private enum enumMixinStr_SN_setct_AuthResTBSX = `enum SN_setct_AuthResTBSX = "setct-AuthResTBSX";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_AuthResTBSX); }))) {
            mixin(enumMixinStr_SN_setct_AuthResTBSX);
        }
    }




    static if(!is(typeof(NID_setct_AuthResTBSX))) {
        private enum enumMixinStr_NID_setct_AuthResTBSX = `enum NID_setct_AuthResTBSX = 536;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_AuthResTBSX); }))) {
            mixin(enumMixinStr_NID_setct_AuthResTBSX);
        }
    }




    static if(!is(typeof(OBJ_setct_AuthResTBSX))) {
        private enum enumMixinStr_OBJ_setct_AuthResTBSX = `enum OBJ_setct_AuthResTBSX = OBJ_international_organizations , 42L , 0L , 18L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_AuthResTBSX); }))) {
            mixin(enumMixinStr_OBJ_setct_AuthResTBSX);
        }
    }




    static if(!is(typeof(SN_setct_AuthTokenTBS))) {
        private enum enumMixinStr_SN_setct_AuthTokenTBS = `enum SN_setct_AuthTokenTBS = "setct-AuthTokenTBS";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_AuthTokenTBS); }))) {
            mixin(enumMixinStr_SN_setct_AuthTokenTBS);
        }
    }




    static if(!is(typeof(NID_setct_AuthTokenTBS))) {
        private enum enumMixinStr_NID_setct_AuthTokenTBS = `enum NID_setct_AuthTokenTBS = 537;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_AuthTokenTBS); }))) {
            mixin(enumMixinStr_NID_setct_AuthTokenTBS);
        }
    }




    static if(!is(typeof(OBJ_setct_AuthTokenTBS))) {
        private enum enumMixinStr_OBJ_setct_AuthTokenTBS = `enum OBJ_setct_AuthTokenTBS = OBJ_international_organizations , 42L , 0L , 19L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_AuthTokenTBS); }))) {
            mixin(enumMixinStr_OBJ_setct_AuthTokenTBS);
        }
    }




    static if(!is(typeof(SN_setct_CapTokenData))) {
        private enum enumMixinStr_SN_setct_CapTokenData = `enum SN_setct_CapTokenData = "setct-CapTokenData";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CapTokenData); }))) {
            mixin(enumMixinStr_SN_setct_CapTokenData);
        }
    }




    static if(!is(typeof(NID_setct_CapTokenData))) {
        private enum enumMixinStr_NID_setct_CapTokenData = `enum NID_setct_CapTokenData = 538;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CapTokenData); }))) {
            mixin(enumMixinStr_NID_setct_CapTokenData);
        }
    }




    static if(!is(typeof(OBJ_setct_CapTokenData))) {
        private enum enumMixinStr_OBJ_setct_CapTokenData = `enum OBJ_setct_CapTokenData = OBJ_international_organizations , 42L , 0L , 20L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CapTokenData); }))) {
            mixin(enumMixinStr_OBJ_setct_CapTokenData);
        }
    }




    static if(!is(typeof(SN_setct_CapTokenTBS))) {
        private enum enumMixinStr_SN_setct_CapTokenTBS = `enum SN_setct_CapTokenTBS = "setct-CapTokenTBS";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CapTokenTBS); }))) {
            mixin(enumMixinStr_SN_setct_CapTokenTBS);
        }
    }




    static if(!is(typeof(NID_setct_CapTokenTBS))) {
        private enum enumMixinStr_NID_setct_CapTokenTBS = `enum NID_setct_CapTokenTBS = 539;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CapTokenTBS); }))) {
            mixin(enumMixinStr_NID_setct_CapTokenTBS);
        }
    }




    static if(!is(typeof(OBJ_setct_CapTokenTBS))) {
        private enum enumMixinStr_OBJ_setct_CapTokenTBS = `enum OBJ_setct_CapTokenTBS = OBJ_international_organizations , 42L , 0L , 21L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CapTokenTBS); }))) {
            mixin(enumMixinStr_OBJ_setct_CapTokenTBS);
        }
    }




    static if(!is(typeof(SN_setct_AcqCardCodeMsg))) {
        private enum enumMixinStr_SN_setct_AcqCardCodeMsg = `enum SN_setct_AcqCardCodeMsg = "setct-AcqCardCodeMsg";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_AcqCardCodeMsg); }))) {
            mixin(enumMixinStr_SN_setct_AcqCardCodeMsg);
        }
    }




    static if(!is(typeof(NID_setct_AcqCardCodeMsg))) {
        private enum enumMixinStr_NID_setct_AcqCardCodeMsg = `enum NID_setct_AcqCardCodeMsg = 540;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_AcqCardCodeMsg); }))) {
            mixin(enumMixinStr_NID_setct_AcqCardCodeMsg);
        }
    }




    static if(!is(typeof(OBJ_setct_AcqCardCodeMsg))) {
        private enum enumMixinStr_OBJ_setct_AcqCardCodeMsg = `enum OBJ_setct_AcqCardCodeMsg = OBJ_international_organizations , 42L , 0L , 22L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_AcqCardCodeMsg); }))) {
            mixin(enumMixinStr_OBJ_setct_AcqCardCodeMsg);
        }
    }




    static if(!is(typeof(SN_setct_AuthRevReqTBS))) {
        private enum enumMixinStr_SN_setct_AuthRevReqTBS = `enum SN_setct_AuthRevReqTBS = "setct-AuthRevReqTBS";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_AuthRevReqTBS); }))) {
            mixin(enumMixinStr_SN_setct_AuthRevReqTBS);
        }
    }




    static if(!is(typeof(NID_setct_AuthRevReqTBS))) {
        private enum enumMixinStr_NID_setct_AuthRevReqTBS = `enum NID_setct_AuthRevReqTBS = 541;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_AuthRevReqTBS); }))) {
            mixin(enumMixinStr_NID_setct_AuthRevReqTBS);
        }
    }




    static if(!is(typeof(OBJ_setct_AuthRevReqTBS))) {
        private enum enumMixinStr_OBJ_setct_AuthRevReqTBS = `enum OBJ_setct_AuthRevReqTBS = OBJ_international_organizations , 42L , 0L , 23L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_AuthRevReqTBS); }))) {
            mixin(enumMixinStr_OBJ_setct_AuthRevReqTBS);
        }
    }




    static if(!is(typeof(SN_setct_AuthRevResData))) {
        private enum enumMixinStr_SN_setct_AuthRevResData = `enum SN_setct_AuthRevResData = "setct-AuthRevResData";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_AuthRevResData); }))) {
            mixin(enumMixinStr_SN_setct_AuthRevResData);
        }
    }




    static if(!is(typeof(NID_setct_AuthRevResData))) {
        private enum enumMixinStr_NID_setct_AuthRevResData = `enum NID_setct_AuthRevResData = 542;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_AuthRevResData); }))) {
            mixin(enumMixinStr_NID_setct_AuthRevResData);
        }
    }




    static if(!is(typeof(OBJ_setct_AuthRevResData))) {
        private enum enumMixinStr_OBJ_setct_AuthRevResData = `enum OBJ_setct_AuthRevResData = OBJ_international_organizations , 42L , 0L , 24L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_AuthRevResData); }))) {
            mixin(enumMixinStr_OBJ_setct_AuthRevResData);
        }
    }




    static if(!is(typeof(SN_setct_AuthRevResTBS))) {
        private enum enumMixinStr_SN_setct_AuthRevResTBS = `enum SN_setct_AuthRevResTBS = "setct-AuthRevResTBS";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_AuthRevResTBS); }))) {
            mixin(enumMixinStr_SN_setct_AuthRevResTBS);
        }
    }




    static if(!is(typeof(NID_setct_AuthRevResTBS))) {
        private enum enumMixinStr_NID_setct_AuthRevResTBS = `enum NID_setct_AuthRevResTBS = 543;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_AuthRevResTBS); }))) {
            mixin(enumMixinStr_NID_setct_AuthRevResTBS);
        }
    }




    static if(!is(typeof(OBJ_setct_AuthRevResTBS))) {
        private enum enumMixinStr_OBJ_setct_AuthRevResTBS = `enum OBJ_setct_AuthRevResTBS = OBJ_international_organizations , 42L , 0L , 25L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_AuthRevResTBS); }))) {
            mixin(enumMixinStr_OBJ_setct_AuthRevResTBS);
        }
    }




    static if(!is(typeof(SN_setct_CapReqTBS))) {
        private enum enumMixinStr_SN_setct_CapReqTBS = `enum SN_setct_CapReqTBS = "setct-CapReqTBS";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CapReqTBS); }))) {
            mixin(enumMixinStr_SN_setct_CapReqTBS);
        }
    }




    static if(!is(typeof(NID_setct_CapReqTBS))) {
        private enum enumMixinStr_NID_setct_CapReqTBS = `enum NID_setct_CapReqTBS = 544;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CapReqTBS); }))) {
            mixin(enumMixinStr_NID_setct_CapReqTBS);
        }
    }




    static if(!is(typeof(OBJ_setct_CapReqTBS))) {
        private enum enumMixinStr_OBJ_setct_CapReqTBS = `enum OBJ_setct_CapReqTBS = OBJ_international_organizations , 42L , 0L , 26L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CapReqTBS); }))) {
            mixin(enumMixinStr_OBJ_setct_CapReqTBS);
        }
    }




    static if(!is(typeof(SN_setct_CapReqTBSX))) {
        private enum enumMixinStr_SN_setct_CapReqTBSX = `enum SN_setct_CapReqTBSX = "setct-CapReqTBSX";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CapReqTBSX); }))) {
            mixin(enumMixinStr_SN_setct_CapReqTBSX);
        }
    }




    static if(!is(typeof(NID_setct_CapReqTBSX))) {
        private enum enumMixinStr_NID_setct_CapReqTBSX = `enum NID_setct_CapReqTBSX = 545;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CapReqTBSX); }))) {
            mixin(enumMixinStr_NID_setct_CapReqTBSX);
        }
    }




    static if(!is(typeof(OBJ_setct_CapReqTBSX))) {
        private enum enumMixinStr_OBJ_setct_CapReqTBSX = `enum OBJ_setct_CapReqTBSX = OBJ_international_organizations , 42L , 0L , 27L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CapReqTBSX); }))) {
            mixin(enumMixinStr_OBJ_setct_CapReqTBSX);
        }
    }




    static if(!is(typeof(SN_setct_CapResData))) {
        private enum enumMixinStr_SN_setct_CapResData = `enum SN_setct_CapResData = "setct-CapResData";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CapResData); }))) {
            mixin(enumMixinStr_SN_setct_CapResData);
        }
    }




    static if(!is(typeof(NID_setct_CapResData))) {
        private enum enumMixinStr_NID_setct_CapResData = `enum NID_setct_CapResData = 546;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CapResData); }))) {
            mixin(enumMixinStr_NID_setct_CapResData);
        }
    }




    static if(!is(typeof(OBJ_setct_CapResData))) {
        private enum enumMixinStr_OBJ_setct_CapResData = `enum OBJ_setct_CapResData = OBJ_international_organizations , 42L , 0L , 28L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CapResData); }))) {
            mixin(enumMixinStr_OBJ_setct_CapResData);
        }
    }




    static if(!is(typeof(SN_setct_CapRevReqTBS))) {
        private enum enumMixinStr_SN_setct_CapRevReqTBS = `enum SN_setct_CapRevReqTBS = "setct-CapRevReqTBS";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CapRevReqTBS); }))) {
            mixin(enumMixinStr_SN_setct_CapRevReqTBS);
        }
    }




    static if(!is(typeof(NID_setct_CapRevReqTBS))) {
        private enum enumMixinStr_NID_setct_CapRevReqTBS = `enum NID_setct_CapRevReqTBS = 547;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CapRevReqTBS); }))) {
            mixin(enumMixinStr_NID_setct_CapRevReqTBS);
        }
    }




    static if(!is(typeof(OBJ_setct_CapRevReqTBS))) {
        private enum enumMixinStr_OBJ_setct_CapRevReqTBS = `enum OBJ_setct_CapRevReqTBS = OBJ_international_organizations , 42L , 0L , 29L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CapRevReqTBS); }))) {
            mixin(enumMixinStr_OBJ_setct_CapRevReqTBS);
        }
    }




    static if(!is(typeof(SN_setct_CapRevReqTBSX))) {
        private enum enumMixinStr_SN_setct_CapRevReqTBSX = `enum SN_setct_CapRevReqTBSX = "setct-CapRevReqTBSX";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CapRevReqTBSX); }))) {
            mixin(enumMixinStr_SN_setct_CapRevReqTBSX);
        }
    }




    static if(!is(typeof(NID_setct_CapRevReqTBSX))) {
        private enum enumMixinStr_NID_setct_CapRevReqTBSX = `enum NID_setct_CapRevReqTBSX = 548;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CapRevReqTBSX); }))) {
            mixin(enumMixinStr_NID_setct_CapRevReqTBSX);
        }
    }




    static if(!is(typeof(OBJ_setct_CapRevReqTBSX))) {
        private enum enumMixinStr_OBJ_setct_CapRevReqTBSX = `enum OBJ_setct_CapRevReqTBSX = OBJ_international_organizations , 42L , 0L , 30L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CapRevReqTBSX); }))) {
            mixin(enumMixinStr_OBJ_setct_CapRevReqTBSX);
        }
    }




    static if(!is(typeof(SN_setct_CapRevResData))) {
        private enum enumMixinStr_SN_setct_CapRevResData = `enum SN_setct_CapRevResData = "setct-CapRevResData";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CapRevResData); }))) {
            mixin(enumMixinStr_SN_setct_CapRevResData);
        }
    }




    static if(!is(typeof(NID_setct_CapRevResData))) {
        private enum enumMixinStr_NID_setct_CapRevResData = `enum NID_setct_CapRevResData = 549;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CapRevResData); }))) {
            mixin(enumMixinStr_NID_setct_CapRevResData);
        }
    }




    static if(!is(typeof(OBJ_setct_CapRevResData))) {
        private enum enumMixinStr_OBJ_setct_CapRevResData = `enum OBJ_setct_CapRevResData = OBJ_international_organizations , 42L , 0L , 31L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CapRevResData); }))) {
            mixin(enumMixinStr_OBJ_setct_CapRevResData);
        }
    }




    static if(!is(typeof(SN_setct_CredReqTBS))) {
        private enum enumMixinStr_SN_setct_CredReqTBS = `enum SN_setct_CredReqTBS = "setct-CredReqTBS";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CredReqTBS); }))) {
            mixin(enumMixinStr_SN_setct_CredReqTBS);
        }
    }




    static if(!is(typeof(NID_setct_CredReqTBS))) {
        private enum enumMixinStr_NID_setct_CredReqTBS = `enum NID_setct_CredReqTBS = 550;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CredReqTBS); }))) {
            mixin(enumMixinStr_NID_setct_CredReqTBS);
        }
    }




    static if(!is(typeof(OBJ_setct_CredReqTBS))) {
        private enum enumMixinStr_OBJ_setct_CredReqTBS = `enum OBJ_setct_CredReqTBS = OBJ_international_organizations , 42L , 0L , 32L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CredReqTBS); }))) {
            mixin(enumMixinStr_OBJ_setct_CredReqTBS);
        }
    }




    static if(!is(typeof(SN_setct_CredReqTBSX))) {
        private enum enumMixinStr_SN_setct_CredReqTBSX = `enum SN_setct_CredReqTBSX = "setct-CredReqTBSX";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CredReqTBSX); }))) {
            mixin(enumMixinStr_SN_setct_CredReqTBSX);
        }
    }




    static if(!is(typeof(NID_setct_CredReqTBSX))) {
        private enum enumMixinStr_NID_setct_CredReqTBSX = `enum NID_setct_CredReqTBSX = 551;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CredReqTBSX); }))) {
            mixin(enumMixinStr_NID_setct_CredReqTBSX);
        }
    }




    static if(!is(typeof(OBJ_setct_CredReqTBSX))) {
        private enum enumMixinStr_OBJ_setct_CredReqTBSX = `enum OBJ_setct_CredReqTBSX = OBJ_international_organizations , 42L , 0L , 33L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CredReqTBSX); }))) {
            mixin(enumMixinStr_OBJ_setct_CredReqTBSX);
        }
    }




    static if(!is(typeof(SN_setct_CredResData))) {
        private enum enumMixinStr_SN_setct_CredResData = `enum SN_setct_CredResData = "setct-CredResData";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CredResData); }))) {
            mixin(enumMixinStr_SN_setct_CredResData);
        }
    }




    static if(!is(typeof(NID_setct_CredResData))) {
        private enum enumMixinStr_NID_setct_CredResData = `enum NID_setct_CredResData = 552;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CredResData); }))) {
            mixin(enumMixinStr_NID_setct_CredResData);
        }
    }




    static if(!is(typeof(OBJ_setct_CredResData))) {
        private enum enumMixinStr_OBJ_setct_CredResData = `enum OBJ_setct_CredResData = OBJ_international_organizations , 42L , 0L , 34L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CredResData); }))) {
            mixin(enumMixinStr_OBJ_setct_CredResData);
        }
    }




    static if(!is(typeof(SN_setct_CredRevReqTBS))) {
        private enum enumMixinStr_SN_setct_CredRevReqTBS = `enum SN_setct_CredRevReqTBS = "setct-CredRevReqTBS";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CredRevReqTBS); }))) {
            mixin(enumMixinStr_SN_setct_CredRevReqTBS);
        }
    }




    static if(!is(typeof(NID_setct_CredRevReqTBS))) {
        private enum enumMixinStr_NID_setct_CredRevReqTBS = `enum NID_setct_CredRevReqTBS = 553;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CredRevReqTBS); }))) {
            mixin(enumMixinStr_NID_setct_CredRevReqTBS);
        }
    }




    static if(!is(typeof(OBJ_setct_CredRevReqTBS))) {
        private enum enumMixinStr_OBJ_setct_CredRevReqTBS = `enum OBJ_setct_CredRevReqTBS = OBJ_international_organizations , 42L , 0L , 35L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CredRevReqTBS); }))) {
            mixin(enumMixinStr_OBJ_setct_CredRevReqTBS);
        }
    }




    static if(!is(typeof(SN_setct_CredRevReqTBSX))) {
        private enum enumMixinStr_SN_setct_CredRevReqTBSX = `enum SN_setct_CredRevReqTBSX = "setct-CredRevReqTBSX";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CredRevReqTBSX); }))) {
            mixin(enumMixinStr_SN_setct_CredRevReqTBSX);
        }
    }




    static if(!is(typeof(NID_setct_CredRevReqTBSX))) {
        private enum enumMixinStr_NID_setct_CredRevReqTBSX = `enum NID_setct_CredRevReqTBSX = 554;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CredRevReqTBSX); }))) {
            mixin(enumMixinStr_NID_setct_CredRevReqTBSX);
        }
    }




    static if(!is(typeof(OBJ_setct_CredRevReqTBSX))) {
        private enum enumMixinStr_OBJ_setct_CredRevReqTBSX = `enum OBJ_setct_CredRevReqTBSX = OBJ_international_organizations , 42L , 0L , 36L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CredRevReqTBSX); }))) {
            mixin(enumMixinStr_OBJ_setct_CredRevReqTBSX);
        }
    }




    static if(!is(typeof(SN_setct_CredRevResData))) {
        private enum enumMixinStr_SN_setct_CredRevResData = `enum SN_setct_CredRevResData = "setct-CredRevResData";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CredRevResData); }))) {
            mixin(enumMixinStr_SN_setct_CredRevResData);
        }
    }




    static if(!is(typeof(NID_setct_CredRevResData))) {
        private enum enumMixinStr_NID_setct_CredRevResData = `enum NID_setct_CredRevResData = 555;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CredRevResData); }))) {
            mixin(enumMixinStr_NID_setct_CredRevResData);
        }
    }




    static if(!is(typeof(OBJ_setct_CredRevResData))) {
        private enum enumMixinStr_OBJ_setct_CredRevResData = `enum OBJ_setct_CredRevResData = OBJ_international_organizations , 42L , 0L , 37L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CredRevResData); }))) {
            mixin(enumMixinStr_OBJ_setct_CredRevResData);
        }
    }




    static if(!is(typeof(SN_setct_PCertReqData))) {
        private enum enumMixinStr_SN_setct_PCertReqData = `enum SN_setct_PCertReqData = "setct-PCertReqData";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_PCertReqData); }))) {
            mixin(enumMixinStr_SN_setct_PCertReqData);
        }
    }




    static if(!is(typeof(NID_setct_PCertReqData))) {
        private enum enumMixinStr_NID_setct_PCertReqData = `enum NID_setct_PCertReqData = 556;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_PCertReqData); }))) {
            mixin(enumMixinStr_NID_setct_PCertReqData);
        }
    }




    static if(!is(typeof(OBJ_setct_PCertReqData))) {
        private enum enumMixinStr_OBJ_setct_PCertReqData = `enum OBJ_setct_PCertReqData = OBJ_international_organizations , 42L , 0L , 38L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_PCertReqData); }))) {
            mixin(enumMixinStr_OBJ_setct_PCertReqData);
        }
    }




    static if(!is(typeof(SN_setct_PCertResTBS))) {
        private enum enumMixinStr_SN_setct_PCertResTBS = `enum SN_setct_PCertResTBS = "setct-PCertResTBS";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_PCertResTBS); }))) {
            mixin(enumMixinStr_SN_setct_PCertResTBS);
        }
    }




    static if(!is(typeof(NID_setct_PCertResTBS))) {
        private enum enumMixinStr_NID_setct_PCertResTBS = `enum NID_setct_PCertResTBS = 557;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_PCertResTBS); }))) {
            mixin(enumMixinStr_NID_setct_PCertResTBS);
        }
    }




    static if(!is(typeof(OBJ_setct_PCertResTBS))) {
        private enum enumMixinStr_OBJ_setct_PCertResTBS = `enum OBJ_setct_PCertResTBS = OBJ_international_organizations , 42L , 0L , 39L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_PCertResTBS); }))) {
            mixin(enumMixinStr_OBJ_setct_PCertResTBS);
        }
    }




    static if(!is(typeof(SN_setct_BatchAdminReqData))) {
        private enum enumMixinStr_SN_setct_BatchAdminReqData = `enum SN_setct_BatchAdminReqData = "setct-BatchAdminReqData";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_BatchAdminReqData); }))) {
            mixin(enumMixinStr_SN_setct_BatchAdminReqData);
        }
    }




    static if(!is(typeof(NID_setct_BatchAdminReqData))) {
        private enum enumMixinStr_NID_setct_BatchAdminReqData = `enum NID_setct_BatchAdminReqData = 558;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_BatchAdminReqData); }))) {
            mixin(enumMixinStr_NID_setct_BatchAdminReqData);
        }
    }




    static if(!is(typeof(OBJ_setct_BatchAdminReqData))) {
        private enum enumMixinStr_OBJ_setct_BatchAdminReqData = `enum OBJ_setct_BatchAdminReqData = OBJ_international_organizations , 42L , 0L , 40L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_BatchAdminReqData); }))) {
            mixin(enumMixinStr_OBJ_setct_BatchAdminReqData);
        }
    }




    static if(!is(typeof(SN_setct_BatchAdminResData))) {
        private enum enumMixinStr_SN_setct_BatchAdminResData = `enum SN_setct_BatchAdminResData = "setct-BatchAdminResData";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_BatchAdminResData); }))) {
            mixin(enumMixinStr_SN_setct_BatchAdminResData);
        }
    }




    static if(!is(typeof(NID_setct_BatchAdminResData))) {
        private enum enumMixinStr_NID_setct_BatchAdminResData = `enum NID_setct_BatchAdminResData = 559;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_BatchAdminResData); }))) {
            mixin(enumMixinStr_NID_setct_BatchAdminResData);
        }
    }




    static if(!is(typeof(OBJ_setct_BatchAdminResData))) {
        private enum enumMixinStr_OBJ_setct_BatchAdminResData = `enum OBJ_setct_BatchAdminResData = OBJ_international_organizations , 42L , 0L , 41L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_BatchAdminResData); }))) {
            mixin(enumMixinStr_OBJ_setct_BatchAdminResData);
        }
    }




    static if(!is(typeof(SN_setct_CardCInitResTBS))) {
        private enum enumMixinStr_SN_setct_CardCInitResTBS = `enum SN_setct_CardCInitResTBS = "setct-CardCInitResTBS";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CardCInitResTBS); }))) {
            mixin(enumMixinStr_SN_setct_CardCInitResTBS);
        }
    }




    static if(!is(typeof(NID_setct_CardCInitResTBS))) {
        private enum enumMixinStr_NID_setct_CardCInitResTBS = `enum NID_setct_CardCInitResTBS = 560;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CardCInitResTBS); }))) {
            mixin(enumMixinStr_NID_setct_CardCInitResTBS);
        }
    }




    static if(!is(typeof(OBJ_setct_CardCInitResTBS))) {
        private enum enumMixinStr_OBJ_setct_CardCInitResTBS = `enum OBJ_setct_CardCInitResTBS = OBJ_international_organizations , 42L , 0L , 42L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CardCInitResTBS); }))) {
            mixin(enumMixinStr_OBJ_setct_CardCInitResTBS);
        }
    }




    static if(!is(typeof(SN_setct_MeAqCInitResTBS))) {
        private enum enumMixinStr_SN_setct_MeAqCInitResTBS = `enum SN_setct_MeAqCInitResTBS = "setct-MeAqCInitResTBS";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_MeAqCInitResTBS); }))) {
            mixin(enumMixinStr_SN_setct_MeAqCInitResTBS);
        }
    }




    static if(!is(typeof(NID_setct_MeAqCInitResTBS))) {
        private enum enumMixinStr_NID_setct_MeAqCInitResTBS = `enum NID_setct_MeAqCInitResTBS = 561;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_MeAqCInitResTBS); }))) {
            mixin(enumMixinStr_NID_setct_MeAqCInitResTBS);
        }
    }




    static if(!is(typeof(OBJ_setct_MeAqCInitResTBS))) {
        private enum enumMixinStr_OBJ_setct_MeAqCInitResTBS = `enum OBJ_setct_MeAqCInitResTBS = OBJ_international_organizations , 42L , 0L , 43L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_MeAqCInitResTBS); }))) {
            mixin(enumMixinStr_OBJ_setct_MeAqCInitResTBS);
        }
    }




    static if(!is(typeof(SN_setct_RegFormResTBS))) {
        private enum enumMixinStr_SN_setct_RegFormResTBS = `enum SN_setct_RegFormResTBS = "setct-RegFormResTBS";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_RegFormResTBS); }))) {
            mixin(enumMixinStr_SN_setct_RegFormResTBS);
        }
    }




    static if(!is(typeof(NID_setct_RegFormResTBS))) {
        private enum enumMixinStr_NID_setct_RegFormResTBS = `enum NID_setct_RegFormResTBS = 562;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_RegFormResTBS); }))) {
            mixin(enumMixinStr_NID_setct_RegFormResTBS);
        }
    }




    static if(!is(typeof(OBJ_setct_RegFormResTBS))) {
        private enum enumMixinStr_OBJ_setct_RegFormResTBS = `enum OBJ_setct_RegFormResTBS = OBJ_international_organizations , 42L , 0L , 44L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_RegFormResTBS); }))) {
            mixin(enumMixinStr_OBJ_setct_RegFormResTBS);
        }
    }




    static if(!is(typeof(SN_setct_CertReqData))) {
        private enum enumMixinStr_SN_setct_CertReqData = `enum SN_setct_CertReqData = "setct-CertReqData";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CertReqData); }))) {
            mixin(enumMixinStr_SN_setct_CertReqData);
        }
    }




    static if(!is(typeof(NID_setct_CertReqData))) {
        private enum enumMixinStr_NID_setct_CertReqData = `enum NID_setct_CertReqData = 563;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CertReqData); }))) {
            mixin(enumMixinStr_NID_setct_CertReqData);
        }
    }




    static if(!is(typeof(OBJ_setct_CertReqData))) {
        private enum enumMixinStr_OBJ_setct_CertReqData = `enum OBJ_setct_CertReqData = OBJ_international_organizations , 42L , 0L , 45L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CertReqData); }))) {
            mixin(enumMixinStr_OBJ_setct_CertReqData);
        }
    }




    static if(!is(typeof(SN_setct_CertReqTBS))) {
        private enum enumMixinStr_SN_setct_CertReqTBS = `enum SN_setct_CertReqTBS = "setct-CertReqTBS";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CertReqTBS); }))) {
            mixin(enumMixinStr_SN_setct_CertReqTBS);
        }
    }




    static if(!is(typeof(NID_setct_CertReqTBS))) {
        private enum enumMixinStr_NID_setct_CertReqTBS = `enum NID_setct_CertReqTBS = 564;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CertReqTBS); }))) {
            mixin(enumMixinStr_NID_setct_CertReqTBS);
        }
    }




    static if(!is(typeof(OBJ_setct_CertReqTBS))) {
        private enum enumMixinStr_OBJ_setct_CertReqTBS = `enum OBJ_setct_CertReqTBS = OBJ_international_organizations , 42L , 0L , 46L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CertReqTBS); }))) {
            mixin(enumMixinStr_OBJ_setct_CertReqTBS);
        }
    }




    static if(!is(typeof(SN_setct_CertResData))) {
        private enum enumMixinStr_SN_setct_CertResData = `enum SN_setct_CertResData = "setct-CertResData";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CertResData); }))) {
            mixin(enumMixinStr_SN_setct_CertResData);
        }
    }




    static if(!is(typeof(NID_setct_CertResData))) {
        private enum enumMixinStr_NID_setct_CertResData = `enum NID_setct_CertResData = 565;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CertResData); }))) {
            mixin(enumMixinStr_NID_setct_CertResData);
        }
    }




    static if(!is(typeof(OBJ_setct_CertResData))) {
        private enum enumMixinStr_OBJ_setct_CertResData = `enum OBJ_setct_CertResData = OBJ_international_organizations , 42L , 0L , 47L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CertResData); }))) {
            mixin(enumMixinStr_OBJ_setct_CertResData);
        }
    }




    static if(!is(typeof(SN_setct_CertInqReqTBS))) {
        private enum enumMixinStr_SN_setct_CertInqReqTBS = `enum SN_setct_CertInqReqTBS = "setct-CertInqReqTBS";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CertInqReqTBS); }))) {
            mixin(enumMixinStr_SN_setct_CertInqReqTBS);
        }
    }




    static if(!is(typeof(NID_setct_CertInqReqTBS))) {
        private enum enumMixinStr_NID_setct_CertInqReqTBS = `enum NID_setct_CertInqReqTBS = 566;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CertInqReqTBS); }))) {
            mixin(enumMixinStr_NID_setct_CertInqReqTBS);
        }
    }




    static if(!is(typeof(OBJ_setct_CertInqReqTBS))) {
        private enum enumMixinStr_OBJ_setct_CertInqReqTBS = `enum OBJ_setct_CertInqReqTBS = OBJ_international_organizations , 42L , 0L , 48L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CertInqReqTBS); }))) {
            mixin(enumMixinStr_OBJ_setct_CertInqReqTBS);
        }
    }




    static if(!is(typeof(SN_setct_ErrorTBS))) {
        private enum enumMixinStr_SN_setct_ErrorTBS = `enum SN_setct_ErrorTBS = "setct-ErrorTBS";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_ErrorTBS); }))) {
            mixin(enumMixinStr_SN_setct_ErrorTBS);
        }
    }




    static if(!is(typeof(NID_setct_ErrorTBS))) {
        private enum enumMixinStr_NID_setct_ErrorTBS = `enum NID_setct_ErrorTBS = 567;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_ErrorTBS); }))) {
            mixin(enumMixinStr_NID_setct_ErrorTBS);
        }
    }




    static if(!is(typeof(OBJ_setct_ErrorTBS))) {
        private enum enumMixinStr_OBJ_setct_ErrorTBS = `enum OBJ_setct_ErrorTBS = OBJ_international_organizations , 42L , 0L , 49L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_ErrorTBS); }))) {
            mixin(enumMixinStr_OBJ_setct_ErrorTBS);
        }
    }




    static if(!is(typeof(SN_setct_PIDualSignedTBE))) {
        private enum enumMixinStr_SN_setct_PIDualSignedTBE = `enum SN_setct_PIDualSignedTBE = "setct-PIDualSignedTBE";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_PIDualSignedTBE); }))) {
            mixin(enumMixinStr_SN_setct_PIDualSignedTBE);
        }
    }




    static if(!is(typeof(NID_setct_PIDualSignedTBE))) {
        private enum enumMixinStr_NID_setct_PIDualSignedTBE = `enum NID_setct_PIDualSignedTBE = 568;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_PIDualSignedTBE); }))) {
            mixin(enumMixinStr_NID_setct_PIDualSignedTBE);
        }
    }




    static if(!is(typeof(OBJ_setct_PIDualSignedTBE))) {
        private enum enumMixinStr_OBJ_setct_PIDualSignedTBE = `enum OBJ_setct_PIDualSignedTBE = OBJ_international_organizations , 42L , 0L , 50L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_PIDualSignedTBE); }))) {
            mixin(enumMixinStr_OBJ_setct_PIDualSignedTBE);
        }
    }




    static if(!is(typeof(SN_setct_PIUnsignedTBE))) {
        private enum enumMixinStr_SN_setct_PIUnsignedTBE = `enum SN_setct_PIUnsignedTBE = "setct-PIUnsignedTBE";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_PIUnsignedTBE); }))) {
            mixin(enumMixinStr_SN_setct_PIUnsignedTBE);
        }
    }




    static if(!is(typeof(NID_setct_PIUnsignedTBE))) {
        private enum enumMixinStr_NID_setct_PIUnsignedTBE = `enum NID_setct_PIUnsignedTBE = 569;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_PIUnsignedTBE); }))) {
            mixin(enumMixinStr_NID_setct_PIUnsignedTBE);
        }
    }




    static if(!is(typeof(OBJ_setct_PIUnsignedTBE))) {
        private enum enumMixinStr_OBJ_setct_PIUnsignedTBE = `enum OBJ_setct_PIUnsignedTBE = OBJ_international_organizations , 42L , 0L , 51L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_PIUnsignedTBE); }))) {
            mixin(enumMixinStr_OBJ_setct_PIUnsignedTBE);
        }
    }




    static if(!is(typeof(SN_setct_AuthReqTBE))) {
        private enum enumMixinStr_SN_setct_AuthReqTBE = `enum SN_setct_AuthReqTBE = "setct-AuthReqTBE";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_AuthReqTBE); }))) {
            mixin(enumMixinStr_SN_setct_AuthReqTBE);
        }
    }




    static if(!is(typeof(NID_setct_AuthReqTBE))) {
        private enum enumMixinStr_NID_setct_AuthReqTBE = `enum NID_setct_AuthReqTBE = 570;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_AuthReqTBE); }))) {
            mixin(enumMixinStr_NID_setct_AuthReqTBE);
        }
    }




    static if(!is(typeof(OBJ_setct_AuthReqTBE))) {
        private enum enumMixinStr_OBJ_setct_AuthReqTBE = `enum OBJ_setct_AuthReqTBE = OBJ_international_organizations , 42L , 0L , 52L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_AuthReqTBE); }))) {
            mixin(enumMixinStr_OBJ_setct_AuthReqTBE);
        }
    }




    static if(!is(typeof(SN_setct_AuthResTBE))) {
        private enum enumMixinStr_SN_setct_AuthResTBE = `enum SN_setct_AuthResTBE = "setct-AuthResTBE";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_AuthResTBE); }))) {
            mixin(enumMixinStr_SN_setct_AuthResTBE);
        }
    }




    static if(!is(typeof(NID_setct_AuthResTBE))) {
        private enum enumMixinStr_NID_setct_AuthResTBE = `enum NID_setct_AuthResTBE = 571;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_AuthResTBE); }))) {
            mixin(enumMixinStr_NID_setct_AuthResTBE);
        }
    }




    static if(!is(typeof(OBJ_setct_AuthResTBE))) {
        private enum enumMixinStr_OBJ_setct_AuthResTBE = `enum OBJ_setct_AuthResTBE = OBJ_international_organizations , 42L , 0L , 53L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_AuthResTBE); }))) {
            mixin(enumMixinStr_OBJ_setct_AuthResTBE);
        }
    }




    static if(!is(typeof(SN_setct_AuthResTBEX))) {
        private enum enumMixinStr_SN_setct_AuthResTBEX = `enum SN_setct_AuthResTBEX = "setct-AuthResTBEX";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_AuthResTBEX); }))) {
            mixin(enumMixinStr_SN_setct_AuthResTBEX);
        }
    }




    static if(!is(typeof(NID_setct_AuthResTBEX))) {
        private enum enumMixinStr_NID_setct_AuthResTBEX = `enum NID_setct_AuthResTBEX = 572;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_AuthResTBEX); }))) {
            mixin(enumMixinStr_NID_setct_AuthResTBEX);
        }
    }




    static if(!is(typeof(OBJ_setct_AuthResTBEX))) {
        private enum enumMixinStr_OBJ_setct_AuthResTBEX = `enum OBJ_setct_AuthResTBEX = OBJ_international_organizations , 42L , 0L , 54L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_AuthResTBEX); }))) {
            mixin(enumMixinStr_OBJ_setct_AuthResTBEX);
        }
    }




    static if(!is(typeof(SN_setct_AuthTokenTBE))) {
        private enum enumMixinStr_SN_setct_AuthTokenTBE = `enum SN_setct_AuthTokenTBE = "setct-AuthTokenTBE";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_AuthTokenTBE); }))) {
            mixin(enumMixinStr_SN_setct_AuthTokenTBE);
        }
    }




    static if(!is(typeof(NID_setct_AuthTokenTBE))) {
        private enum enumMixinStr_NID_setct_AuthTokenTBE = `enum NID_setct_AuthTokenTBE = 573;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_AuthTokenTBE); }))) {
            mixin(enumMixinStr_NID_setct_AuthTokenTBE);
        }
    }




    static if(!is(typeof(OBJ_setct_AuthTokenTBE))) {
        private enum enumMixinStr_OBJ_setct_AuthTokenTBE = `enum OBJ_setct_AuthTokenTBE = OBJ_international_organizations , 42L , 0L , 55L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_AuthTokenTBE); }))) {
            mixin(enumMixinStr_OBJ_setct_AuthTokenTBE);
        }
    }




    static if(!is(typeof(SN_setct_CapTokenTBE))) {
        private enum enumMixinStr_SN_setct_CapTokenTBE = `enum SN_setct_CapTokenTBE = "setct-CapTokenTBE";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CapTokenTBE); }))) {
            mixin(enumMixinStr_SN_setct_CapTokenTBE);
        }
    }




    static if(!is(typeof(NID_setct_CapTokenTBE))) {
        private enum enumMixinStr_NID_setct_CapTokenTBE = `enum NID_setct_CapTokenTBE = 574;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CapTokenTBE); }))) {
            mixin(enumMixinStr_NID_setct_CapTokenTBE);
        }
    }




    static if(!is(typeof(OBJ_setct_CapTokenTBE))) {
        private enum enumMixinStr_OBJ_setct_CapTokenTBE = `enum OBJ_setct_CapTokenTBE = OBJ_international_organizations , 42L , 0L , 56L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CapTokenTBE); }))) {
            mixin(enumMixinStr_OBJ_setct_CapTokenTBE);
        }
    }




    static if(!is(typeof(SN_setct_CapTokenTBEX))) {
        private enum enumMixinStr_SN_setct_CapTokenTBEX = `enum SN_setct_CapTokenTBEX = "setct-CapTokenTBEX";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CapTokenTBEX); }))) {
            mixin(enumMixinStr_SN_setct_CapTokenTBEX);
        }
    }




    static if(!is(typeof(NID_setct_CapTokenTBEX))) {
        private enum enumMixinStr_NID_setct_CapTokenTBEX = `enum NID_setct_CapTokenTBEX = 575;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CapTokenTBEX); }))) {
            mixin(enumMixinStr_NID_setct_CapTokenTBEX);
        }
    }




    static if(!is(typeof(OBJ_setct_CapTokenTBEX))) {
        private enum enumMixinStr_OBJ_setct_CapTokenTBEX = `enum OBJ_setct_CapTokenTBEX = OBJ_international_organizations , 42L , 0L , 57L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CapTokenTBEX); }))) {
            mixin(enumMixinStr_OBJ_setct_CapTokenTBEX);
        }
    }




    static if(!is(typeof(SN_setct_AcqCardCodeMsgTBE))) {
        private enum enumMixinStr_SN_setct_AcqCardCodeMsgTBE = `enum SN_setct_AcqCardCodeMsgTBE = "setct-AcqCardCodeMsgTBE";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_AcqCardCodeMsgTBE); }))) {
            mixin(enumMixinStr_SN_setct_AcqCardCodeMsgTBE);
        }
    }




    static if(!is(typeof(NID_setct_AcqCardCodeMsgTBE))) {
        private enum enumMixinStr_NID_setct_AcqCardCodeMsgTBE = `enum NID_setct_AcqCardCodeMsgTBE = 576;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_AcqCardCodeMsgTBE); }))) {
            mixin(enumMixinStr_NID_setct_AcqCardCodeMsgTBE);
        }
    }




    static if(!is(typeof(OBJ_setct_AcqCardCodeMsgTBE))) {
        private enum enumMixinStr_OBJ_setct_AcqCardCodeMsgTBE = `enum OBJ_setct_AcqCardCodeMsgTBE = OBJ_international_organizations , 42L , 0L , 58L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_AcqCardCodeMsgTBE); }))) {
            mixin(enumMixinStr_OBJ_setct_AcqCardCodeMsgTBE);
        }
    }




    static if(!is(typeof(SN_setct_AuthRevReqTBE))) {
        private enum enumMixinStr_SN_setct_AuthRevReqTBE = `enum SN_setct_AuthRevReqTBE = "setct-AuthRevReqTBE";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_AuthRevReqTBE); }))) {
            mixin(enumMixinStr_SN_setct_AuthRevReqTBE);
        }
    }




    static if(!is(typeof(NID_setct_AuthRevReqTBE))) {
        private enum enumMixinStr_NID_setct_AuthRevReqTBE = `enum NID_setct_AuthRevReqTBE = 577;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_AuthRevReqTBE); }))) {
            mixin(enumMixinStr_NID_setct_AuthRevReqTBE);
        }
    }




    static if(!is(typeof(OBJ_setct_AuthRevReqTBE))) {
        private enum enumMixinStr_OBJ_setct_AuthRevReqTBE = `enum OBJ_setct_AuthRevReqTBE = OBJ_international_organizations , 42L , 0L , 59L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_AuthRevReqTBE); }))) {
            mixin(enumMixinStr_OBJ_setct_AuthRevReqTBE);
        }
    }




    static if(!is(typeof(SN_setct_AuthRevResTBE))) {
        private enum enumMixinStr_SN_setct_AuthRevResTBE = `enum SN_setct_AuthRevResTBE = "setct-AuthRevResTBE";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_AuthRevResTBE); }))) {
            mixin(enumMixinStr_SN_setct_AuthRevResTBE);
        }
    }




    static if(!is(typeof(NID_setct_AuthRevResTBE))) {
        private enum enumMixinStr_NID_setct_AuthRevResTBE = `enum NID_setct_AuthRevResTBE = 578;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_AuthRevResTBE); }))) {
            mixin(enumMixinStr_NID_setct_AuthRevResTBE);
        }
    }




    static if(!is(typeof(OBJ_setct_AuthRevResTBE))) {
        private enum enumMixinStr_OBJ_setct_AuthRevResTBE = `enum OBJ_setct_AuthRevResTBE = OBJ_international_organizations , 42L , 0L , 60L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_AuthRevResTBE); }))) {
            mixin(enumMixinStr_OBJ_setct_AuthRevResTBE);
        }
    }




    static if(!is(typeof(SN_setct_AuthRevResTBEB))) {
        private enum enumMixinStr_SN_setct_AuthRevResTBEB = `enum SN_setct_AuthRevResTBEB = "setct-AuthRevResTBEB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_AuthRevResTBEB); }))) {
            mixin(enumMixinStr_SN_setct_AuthRevResTBEB);
        }
    }




    static if(!is(typeof(NID_setct_AuthRevResTBEB))) {
        private enum enumMixinStr_NID_setct_AuthRevResTBEB = `enum NID_setct_AuthRevResTBEB = 579;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_AuthRevResTBEB); }))) {
            mixin(enumMixinStr_NID_setct_AuthRevResTBEB);
        }
    }




    static if(!is(typeof(OBJ_setct_AuthRevResTBEB))) {
        private enum enumMixinStr_OBJ_setct_AuthRevResTBEB = `enum OBJ_setct_AuthRevResTBEB = OBJ_international_organizations , 42L , 0L , 61L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_AuthRevResTBEB); }))) {
            mixin(enumMixinStr_OBJ_setct_AuthRevResTBEB);
        }
    }




    static if(!is(typeof(SN_setct_CapReqTBE))) {
        private enum enumMixinStr_SN_setct_CapReqTBE = `enum SN_setct_CapReqTBE = "setct-CapReqTBE";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CapReqTBE); }))) {
            mixin(enumMixinStr_SN_setct_CapReqTBE);
        }
    }




    static if(!is(typeof(NID_setct_CapReqTBE))) {
        private enum enumMixinStr_NID_setct_CapReqTBE = `enum NID_setct_CapReqTBE = 580;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CapReqTBE); }))) {
            mixin(enumMixinStr_NID_setct_CapReqTBE);
        }
    }




    static if(!is(typeof(OBJ_setct_CapReqTBE))) {
        private enum enumMixinStr_OBJ_setct_CapReqTBE = `enum OBJ_setct_CapReqTBE = OBJ_international_organizations , 42L , 0L , 62L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CapReqTBE); }))) {
            mixin(enumMixinStr_OBJ_setct_CapReqTBE);
        }
    }




    static if(!is(typeof(SN_setct_CapReqTBEX))) {
        private enum enumMixinStr_SN_setct_CapReqTBEX = `enum SN_setct_CapReqTBEX = "setct-CapReqTBEX";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CapReqTBEX); }))) {
            mixin(enumMixinStr_SN_setct_CapReqTBEX);
        }
    }




    static if(!is(typeof(NID_setct_CapReqTBEX))) {
        private enum enumMixinStr_NID_setct_CapReqTBEX = `enum NID_setct_CapReqTBEX = 581;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CapReqTBEX); }))) {
            mixin(enumMixinStr_NID_setct_CapReqTBEX);
        }
    }




    static if(!is(typeof(OBJ_setct_CapReqTBEX))) {
        private enum enumMixinStr_OBJ_setct_CapReqTBEX = `enum OBJ_setct_CapReqTBEX = OBJ_international_organizations , 42L , 0L , 63L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CapReqTBEX); }))) {
            mixin(enumMixinStr_OBJ_setct_CapReqTBEX);
        }
    }




    static if(!is(typeof(SN_setct_CapResTBE))) {
        private enum enumMixinStr_SN_setct_CapResTBE = `enum SN_setct_CapResTBE = "setct-CapResTBE";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CapResTBE); }))) {
            mixin(enumMixinStr_SN_setct_CapResTBE);
        }
    }




    static if(!is(typeof(NID_setct_CapResTBE))) {
        private enum enumMixinStr_NID_setct_CapResTBE = `enum NID_setct_CapResTBE = 582;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CapResTBE); }))) {
            mixin(enumMixinStr_NID_setct_CapResTBE);
        }
    }




    static if(!is(typeof(OBJ_setct_CapResTBE))) {
        private enum enumMixinStr_OBJ_setct_CapResTBE = `enum OBJ_setct_CapResTBE = OBJ_international_organizations , 42L , 0L , 64L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CapResTBE); }))) {
            mixin(enumMixinStr_OBJ_setct_CapResTBE);
        }
    }




    static if(!is(typeof(SN_setct_CapRevReqTBE))) {
        private enum enumMixinStr_SN_setct_CapRevReqTBE = `enum SN_setct_CapRevReqTBE = "setct-CapRevReqTBE";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CapRevReqTBE); }))) {
            mixin(enumMixinStr_SN_setct_CapRevReqTBE);
        }
    }




    static if(!is(typeof(NID_setct_CapRevReqTBE))) {
        private enum enumMixinStr_NID_setct_CapRevReqTBE = `enum NID_setct_CapRevReqTBE = 583;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CapRevReqTBE); }))) {
            mixin(enumMixinStr_NID_setct_CapRevReqTBE);
        }
    }




    static if(!is(typeof(OBJ_setct_CapRevReqTBE))) {
        private enum enumMixinStr_OBJ_setct_CapRevReqTBE = `enum OBJ_setct_CapRevReqTBE = OBJ_international_organizations , 42L , 0L , 65L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CapRevReqTBE); }))) {
            mixin(enumMixinStr_OBJ_setct_CapRevReqTBE);
        }
    }




    static if(!is(typeof(SN_setct_CapRevReqTBEX))) {
        private enum enumMixinStr_SN_setct_CapRevReqTBEX = `enum SN_setct_CapRevReqTBEX = "setct-CapRevReqTBEX";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CapRevReqTBEX); }))) {
            mixin(enumMixinStr_SN_setct_CapRevReqTBEX);
        }
    }




    static if(!is(typeof(NID_setct_CapRevReqTBEX))) {
        private enum enumMixinStr_NID_setct_CapRevReqTBEX = `enum NID_setct_CapRevReqTBEX = 584;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CapRevReqTBEX); }))) {
            mixin(enumMixinStr_NID_setct_CapRevReqTBEX);
        }
    }




    static if(!is(typeof(OBJ_setct_CapRevReqTBEX))) {
        private enum enumMixinStr_OBJ_setct_CapRevReqTBEX = `enum OBJ_setct_CapRevReqTBEX = OBJ_international_organizations , 42L , 0L , 66L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CapRevReqTBEX); }))) {
            mixin(enumMixinStr_OBJ_setct_CapRevReqTBEX);
        }
    }




    static if(!is(typeof(SN_setct_CapRevResTBE))) {
        private enum enumMixinStr_SN_setct_CapRevResTBE = `enum SN_setct_CapRevResTBE = "setct-CapRevResTBE";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CapRevResTBE); }))) {
            mixin(enumMixinStr_SN_setct_CapRevResTBE);
        }
    }




    static if(!is(typeof(NID_setct_CapRevResTBE))) {
        private enum enumMixinStr_NID_setct_CapRevResTBE = `enum NID_setct_CapRevResTBE = 585;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CapRevResTBE); }))) {
            mixin(enumMixinStr_NID_setct_CapRevResTBE);
        }
    }




    static if(!is(typeof(OBJ_setct_CapRevResTBE))) {
        private enum enumMixinStr_OBJ_setct_CapRevResTBE = `enum OBJ_setct_CapRevResTBE = OBJ_international_organizations , 42L , 0L , 67L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CapRevResTBE); }))) {
            mixin(enumMixinStr_OBJ_setct_CapRevResTBE);
        }
    }




    static if(!is(typeof(SN_setct_CredReqTBE))) {
        private enum enumMixinStr_SN_setct_CredReqTBE = `enum SN_setct_CredReqTBE = "setct-CredReqTBE";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CredReqTBE); }))) {
            mixin(enumMixinStr_SN_setct_CredReqTBE);
        }
    }




    static if(!is(typeof(NID_setct_CredReqTBE))) {
        private enum enumMixinStr_NID_setct_CredReqTBE = `enum NID_setct_CredReqTBE = 586;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CredReqTBE); }))) {
            mixin(enumMixinStr_NID_setct_CredReqTBE);
        }
    }




    static if(!is(typeof(OBJ_setct_CredReqTBE))) {
        private enum enumMixinStr_OBJ_setct_CredReqTBE = `enum OBJ_setct_CredReqTBE = OBJ_international_organizations , 42L , 0L , 68L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CredReqTBE); }))) {
            mixin(enumMixinStr_OBJ_setct_CredReqTBE);
        }
    }




    static if(!is(typeof(SN_setct_CredReqTBEX))) {
        private enum enumMixinStr_SN_setct_CredReqTBEX = `enum SN_setct_CredReqTBEX = "setct-CredReqTBEX";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CredReqTBEX); }))) {
            mixin(enumMixinStr_SN_setct_CredReqTBEX);
        }
    }




    static if(!is(typeof(NID_setct_CredReqTBEX))) {
        private enum enumMixinStr_NID_setct_CredReqTBEX = `enum NID_setct_CredReqTBEX = 587;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CredReqTBEX); }))) {
            mixin(enumMixinStr_NID_setct_CredReqTBEX);
        }
    }




    static if(!is(typeof(OBJ_setct_CredReqTBEX))) {
        private enum enumMixinStr_OBJ_setct_CredReqTBEX = `enum OBJ_setct_CredReqTBEX = OBJ_international_organizations , 42L , 0L , 69L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CredReqTBEX); }))) {
            mixin(enumMixinStr_OBJ_setct_CredReqTBEX);
        }
    }




    static if(!is(typeof(SN_setct_CredResTBE))) {
        private enum enumMixinStr_SN_setct_CredResTBE = `enum SN_setct_CredResTBE = "setct-CredResTBE";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CredResTBE); }))) {
            mixin(enumMixinStr_SN_setct_CredResTBE);
        }
    }




    static if(!is(typeof(NID_setct_CredResTBE))) {
        private enum enumMixinStr_NID_setct_CredResTBE = `enum NID_setct_CredResTBE = 588;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CredResTBE); }))) {
            mixin(enumMixinStr_NID_setct_CredResTBE);
        }
    }




    static if(!is(typeof(OBJ_setct_CredResTBE))) {
        private enum enumMixinStr_OBJ_setct_CredResTBE = `enum OBJ_setct_CredResTBE = OBJ_international_organizations , 42L , 0L , 70L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CredResTBE); }))) {
            mixin(enumMixinStr_OBJ_setct_CredResTBE);
        }
    }




    static if(!is(typeof(SN_setct_CredRevReqTBE))) {
        private enum enumMixinStr_SN_setct_CredRevReqTBE = `enum SN_setct_CredRevReqTBE = "setct-CredRevReqTBE";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CredRevReqTBE); }))) {
            mixin(enumMixinStr_SN_setct_CredRevReqTBE);
        }
    }




    static if(!is(typeof(NID_setct_CredRevReqTBE))) {
        private enum enumMixinStr_NID_setct_CredRevReqTBE = `enum NID_setct_CredRevReqTBE = 589;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CredRevReqTBE); }))) {
            mixin(enumMixinStr_NID_setct_CredRevReqTBE);
        }
    }




    static if(!is(typeof(OBJ_setct_CredRevReqTBE))) {
        private enum enumMixinStr_OBJ_setct_CredRevReqTBE = `enum OBJ_setct_CredRevReqTBE = OBJ_international_organizations , 42L , 0L , 71L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CredRevReqTBE); }))) {
            mixin(enumMixinStr_OBJ_setct_CredRevReqTBE);
        }
    }




    static if(!is(typeof(SN_setct_CredRevReqTBEX))) {
        private enum enumMixinStr_SN_setct_CredRevReqTBEX = `enum SN_setct_CredRevReqTBEX = "setct-CredRevReqTBEX";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CredRevReqTBEX); }))) {
            mixin(enumMixinStr_SN_setct_CredRevReqTBEX);
        }
    }




    static if(!is(typeof(NID_setct_CredRevReqTBEX))) {
        private enum enumMixinStr_NID_setct_CredRevReqTBEX = `enum NID_setct_CredRevReqTBEX = 590;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CredRevReqTBEX); }))) {
            mixin(enumMixinStr_NID_setct_CredRevReqTBEX);
        }
    }




    static if(!is(typeof(OBJ_setct_CredRevReqTBEX))) {
        private enum enumMixinStr_OBJ_setct_CredRevReqTBEX = `enum OBJ_setct_CredRevReqTBEX = OBJ_international_organizations , 42L , 0L , 72L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CredRevReqTBEX); }))) {
            mixin(enumMixinStr_OBJ_setct_CredRevReqTBEX);
        }
    }




    static if(!is(typeof(SN_setct_CredRevResTBE))) {
        private enum enumMixinStr_SN_setct_CredRevResTBE = `enum SN_setct_CredRevResTBE = "setct-CredRevResTBE";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CredRevResTBE); }))) {
            mixin(enumMixinStr_SN_setct_CredRevResTBE);
        }
    }




    static if(!is(typeof(NID_setct_CredRevResTBE))) {
        private enum enumMixinStr_NID_setct_CredRevResTBE = `enum NID_setct_CredRevResTBE = 591;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CredRevResTBE); }))) {
            mixin(enumMixinStr_NID_setct_CredRevResTBE);
        }
    }




    static if(!is(typeof(OBJ_setct_CredRevResTBE))) {
        private enum enumMixinStr_OBJ_setct_CredRevResTBE = `enum OBJ_setct_CredRevResTBE = OBJ_international_organizations , 42L , 0L , 73L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CredRevResTBE); }))) {
            mixin(enumMixinStr_OBJ_setct_CredRevResTBE);
        }
    }




    static if(!is(typeof(SN_setct_BatchAdminReqTBE))) {
        private enum enumMixinStr_SN_setct_BatchAdminReqTBE = `enum SN_setct_BatchAdminReqTBE = "setct-BatchAdminReqTBE";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_BatchAdminReqTBE); }))) {
            mixin(enumMixinStr_SN_setct_BatchAdminReqTBE);
        }
    }




    static if(!is(typeof(NID_setct_BatchAdminReqTBE))) {
        private enum enumMixinStr_NID_setct_BatchAdminReqTBE = `enum NID_setct_BatchAdminReqTBE = 592;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_BatchAdminReqTBE); }))) {
            mixin(enumMixinStr_NID_setct_BatchAdminReqTBE);
        }
    }




    static if(!is(typeof(OBJ_setct_BatchAdminReqTBE))) {
        private enum enumMixinStr_OBJ_setct_BatchAdminReqTBE = `enum OBJ_setct_BatchAdminReqTBE = OBJ_international_organizations , 42L , 0L , 74L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_BatchAdminReqTBE); }))) {
            mixin(enumMixinStr_OBJ_setct_BatchAdminReqTBE);
        }
    }




    static if(!is(typeof(SN_setct_BatchAdminResTBE))) {
        private enum enumMixinStr_SN_setct_BatchAdminResTBE = `enum SN_setct_BatchAdminResTBE = "setct-BatchAdminResTBE";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_BatchAdminResTBE); }))) {
            mixin(enumMixinStr_SN_setct_BatchAdminResTBE);
        }
    }




    static if(!is(typeof(NID_setct_BatchAdminResTBE))) {
        private enum enumMixinStr_NID_setct_BatchAdminResTBE = `enum NID_setct_BatchAdminResTBE = 593;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_BatchAdminResTBE); }))) {
            mixin(enumMixinStr_NID_setct_BatchAdminResTBE);
        }
    }




    static if(!is(typeof(OBJ_setct_BatchAdminResTBE))) {
        private enum enumMixinStr_OBJ_setct_BatchAdminResTBE = `enum OBJ_setct_BatchAdminResTBE = OBJ_international_organizations , 42L , 0L , 75L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_BatchAdminResTBE); }))) {
            mixin(enumMixinStr_OBJ_setct_BatchAdminResTBE);
        }
    }




    static if(!is(typeof(SN_setct_RegFormReqTBE))) {
        private enum enumMixinStr_SN_setct_RegFormReqTBE = `enum SN_setct_RegFormReqTBE = "setct-RegFormReqTBE";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_RegFormReqTBE); }))) {
            mixin(enumMixinStr_SN_setct_RegFormReqTBE);
        }
    }




    static if(!is(typeof(NID_setct_RegFormReqTBE))) {
        private enum enumMixinStr_NID_setct_RegFormReqTBE = `enum NID_setct_RegFormReqTBE = 594;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_RegFormReqTBE); }))) {
            mixin(enumMixinStr_NID_setct_RegFormReqTBE);
        }
    }




    static if(!is(typeof(OBJ_setct_RegFormReqTBE))) {
        private enum enumMixinStr_OBJ_setct_RegFormReqTBE = `enum OBJ_setct_RegFormReqTBE = OBJ_international_organizations , 42L , 0L , 76L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_RegFormReqTBE); }))) {
            mixin(enumMixinStr_OBJ_setct_RegFormReqTBE);
        }
    }




    static if(!is(typeof(SN_setct_CertReqTBE))) {
        private enum enumMixinStr_SN_setct_CertReqTBE = `enum SN_setct_CertReqTBE = "setct-CertReqTBE";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CertReqTBE); }))) {
            mixin(enumMixinStr_SN_setct_CertReqTBE);
        }
    }




    static if(!is(typeof(NID_setct_CertReqTBE))) {
        private enum enumMixinStr_NID_setct_CertReqTBE = `enum NID_setct_CertReqTBE = 595;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CertReqTBE); }))) {
            mixin(enumMixinStr_NID_setct_CertReqTBE);
        }
    }




    static if(!is(typeof(OBJ_setct_CertReqTBE))) {
        private enum enumMixinStr_OBJ_setct_CertReqTBE = `enum OBJ_setct_CertReqTBE = OBJ_international_organizations , 42L , 0L , 77L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CertReqTBE); }))) {
            mixin(enumMixinStr_OBJ_setct_CertReqTBE);
        }
    }




    static if(!is(typeof(SN_setct_CertReqTBEX))) {
        private enum enumMixinStr_SN_setct_CertReqTBEX = `enum SN_setct_CertReqTBEX = "setct-CertReqTBEX";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CertReqTBEX); }))) {
            mixin(enumMixinStr_SN_setct_CertReqTBEX);
        }
    }




    static if(!is(typeof(NID_setct_CertReqTBEX))) {
        private enum enumMixinStr_NID_setct_CertReqTBEX = `enum NID_setct_CertReqTBEX = 596;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CertReqTBEX); }))) {
            mixin(enumMixinStr_NID_setct_CertReqTBEX);
        }
    }




    static if(!is(typeof(OBJ_setct_CertReqTBEX))) {
        private enum enumMixinStr_OBJ_setct_CertReqTBEX = `enum OBJ_setct_CertReqTBEX = OBJ_international_organizations , 42L , 0L , 78L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CertReqTBEX); }))) {
            mixin(enumMixinStr_OBJ_setct_CertReqTBEX);
        }
    }




    static if(!is(typeof(SN_setct_CertResTBE))) {
        private enum enumMixinStr_SN_setct_CertResTBE = `enum SN_setct_CertResTBE = "setct-CertResTBE";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CertResTBE); }))) {
            mixin(enumMixinStr_SN_setct_CertResTBE);
        }
    }




    static if(!is(typeof(NID_setct_CertResTBE))) {
        private enum enumMixinStr_NID_setct_CertResTBE = `enum NID_setct_CertResTBE = 597;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CertResTBE); }))) {
            mixin(enumMixinStr_NID_setct_CertResTBE);
        }
    }




    static if(!is(typeof(OBJ_setct_CertResTBE))) {
        private enum enumMixinStr_OBJ_setct_CertResTBE = `enum OBJ_setct_CertResTBE = OBJ_international_organizations , 42L , 0L , 79L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CertResTBE); }))) {
            mixin(enumMixinStr_OBJ_setct_CertResTBE);
        }
    }




    static if(!is(typeof(SN_setct_CRLNotificationTBS))) {
        private enum enumMixinStr_SN_setct_CRLNotificationTBS = `enum SN_setct_CRLNotificationTBS = "setct-CRLNotificationTBS";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CRLNotificationTBS); }))) {
            mixin(enumMixinStr_SN_setct_CRLNotificationTBS);
        }
    }




    static if(!is(typeof(NID_setct_CRLNotificationTBS))) {
        private enum enumMixinStr_NID_setct_CRLNotificationTBS = `enum NID_setct_CRLNotificationTBS = 598;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CRLNotificationTBS); }))) {
            mixin(enumMixinStr_NID_setct_CRLNotificationTBS);
        }
    }




    static if(!is(typeof(OBJ_setct_CRLNotificationTBS))) {
        private enum enumMixinStr_OBJ_setct_CRLNotificationTBS = `enum OBJ_setct_CRLNotificationTBS = OBJ_international_organizations , 42L , 0L , 80L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CRLNotificationTBS); }))) {
            mixin(enumMixinStr_OBJ_setct_CRLNotificationTBS);
        }
    }




    static if(!is(typeof(SN_setct_CRLNotificationResTBS))) {
        private enum enumMixinStr_SN_setct_CRLNotificationResTBS = `enum SN_setct_CRLNotificationResTBS = "setct-CRLNotificationResTBS";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_CRLNotificationResTBS); }))) {
            mixin(enumMixinStr_SN_setct_CRLNotificationResTBS);
        }
    }




    static if(!is(typeof(NID_setct_CRLNotificationResTBS))) {
        private enum enumMixinStr_NID_setct_CRLNotificationResTBS = `enum NID_setct_CRLNotificationResTBS = 599;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_CRLNotificationResTBS); }))) {
            mixin(enumMixinStr_NID_setct_CRLNotificationResTBS);
        }
    }




    static if(!is(typeof(OBJ_setct_CRLNotificationResTBS))) {
        private enum enumMixinStr_OBJ_setct_CRLNotificationResTBS = `enum OBJ_setct_CRLNotificationResTBS = OBJ_international_organizations , 42L , 0L , 81L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_CRLNotificationResTBS); }))) {
            mixin(enumMixinStr_OBJ_setct_CRLNotificationResTBS);
        }
    }




    static if(!is(typeof(SN_setct_BCIDistributionTBS))) {
        private enum enumMixinStr_SN_setct_BCIDistributionTBS = `enum SN_setct_BCIDistributionTBS = "setct-BCIDistributionTBS";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setct_BCIDistributionTBS); }))) {
            mixin(enumMixinStr_SN_setct_BCIDistributionTBS);
        }
    }




    static if(!is(typeof(NID_setct_BCIDistributionTBS))) {
        private enum enumMixinStr_NID_setct_BCIDistributionTBS = `enum NID_setct_BCIDistributionTBS = 600;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setct_BCIDistributionTBS); }))) {
            mixin(enumMixinStr_NID_setct_BCIDistributionTBS);
        }
    }




    static if(!is(typeof(OBJ_setct_BCIDistributionTBS))) {
        private enum enumMixinStr_OBJ_setct_BCIDistributionTBS = `enum OBJ_setct_BCIDistributionTBS = OBJ_international_organizations , 42L , 0L , 82L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setct_BCIDistributionTBS); }))) {
            mixin(enumMixinStr_OBJ_setct_BCIDistributionTBS);
        }
    }




    static if(!is(typeof(SN_setext_genCrypt))) {
        private enum enumMixinStr_SN_setext_genCrypt = `enum SN_setext_genCrypt = "setext-genCrypt";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setext_genCrypt); }))) {
            mixin(enumMixinStr_SN_setext_genCrypt);
        }
    }




    static if(!is(typeof(LN_setext_genCrypt))) {
        private enum enumMixinStr_LN_setext_genCrypt = `enum LN_setext_genCrypt = "generic cryptogram";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_setext_genCrypt); }))) {
            mixin(enumMixinStr_LN_setext_genCrypt);
        }
    }




    static if(!is(typeof(NID_setext_genCrypt))) {
        private enum enumMixinStr_NID_setext_genCrypt = `enum NID_setext_genCrypt = 601;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setext_genCrypt); }))) {
            mixin(enumMixinStr_NID_setext_genCrypt);
        }
    }




    static if(!is(typeof(OBJ_setext_genCrypt))) {
        private enum enumMixinStr_OBJ_setext_genCrypt = `enum OBJ_setext_genCrypt = OBJ_international_organizations , 42L , 1L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setext_genCrypt); }))) {
            mixin(enumMixinStr_OBJ_setext_genCrypt);
        }
    }




    static if(!is(typeof(SN_setext_miAuth))) {
        private enum enumMixinStr_SN_setext_miAuth = `enum SN_setext_miAuth = "setext-miAuth";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setext_miAuth); }))) {
            mixin(enumMixinStr_SN_setext_miAuth);
        }
    }




    static if(!is(typeof(LN_setext_miAuth))) {
        private enum enumMixinStr_LN_setext_miAuth = `enum LN_setext_miAuth = "merchant initiated auth";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_setext_miAuth); }))) {
            mixin(enumMixinStr_LN_setext_miAuth);
        }
    }




    static if(!is(typeof(NID_setext_miAuth))) {
        private enum enumMixinStr_NID_setext_miAuth = `enum NID_setext_miAuth = 602;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setext_miAuth); }))) {
            mixin(enumMixinStr_NID_setext_miAuth);
        }
    }




    static if(!is(typeof(OBJ_setext_miAuth))) {
        private enum enumMixinStr_OBJ_setext_miAuth = `enum OBJ_setext_miAuth = OBJ_international_organizations , 42L , 1L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setext_miAuth); }))) {
            mixin(enumMixinStr_OBJ_setext_miAuth);
        }
    }




    static if(!is(typeof(SN_setext_pinSecure))) {
        private enum enumMixinStr_SN_setext_pinSecure = `enum SN_setext_pinSecure = "setext-pinSecure";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setext_pinSecure); }))) {
            mixin(enumMixinStr_SN_setext_pinSecure);
        }
    }




    static if(!is(typeof(NID_setext_pinSecure))) {
        private enum enumMixinStr_NID_setext_pinSecure = `enum NID_setext_pinSecure = 603;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setext_pinSecure); }))) {
            mixin(enumMixinStr_NID_setext_pinSecure);
        }
    }




    static if(!is(typeof(OBJ_setext_pinSecure))) {
        private enum enumMixinStr_OBJ_setext_pinSecure = `enum OBJ_setext_pinSecure = OBJ_international_organizations , 42L , 1L , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setext_pinSecure); }))) {
            mixin(enumMixinStr_OBJ_setext_pinSecure);
        }
    }




    static if(!is(typeof(SN_setext_pinAny))) {
        private enum enumMixinStr_SN_setext_pinAny = `enum SN_setext_pinAny = "setext-pinAny";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setext_pinAny); }))) {
            mixin(enumMixinStr_SN_setext_pinAny);
        }
    }




    static if(!is(typeof(NID_setext_pinAny))) {
        private enum enumMixinStr_NID_setext_pinAny = `enum NID_setext_pinAny = 604;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setext_pinAny); }))) {
            mixin(enumMixinStr_NID_setext_pinAny);
        }
    }




    static if(!is(typeof(OBJ_setext_pinAny))) {
        private enum enumMixinStr_OBJ_setext_pinAny = `enum OBJ_setext_pinAny = OBJ_international_organizations , 42L , 1L , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setext_pinAny); }))) {
            mixin(enumMixinStr_OBJ_setext_pinAny);
        }
    }




    static if(!is(typeof(SN_setext_track2))) {
        private enum enumMixinStr_SN_setext_track2 = `enum SN_setext_track2 = "setext-track2";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setext_track2); }))) {
            mixin(enumMixinStr_SN_setext_track2);
        }
    }




    static if(!is(typeof(NID_setext_track2))) {
        private enum enumMixinStr_NID_setext_track2 = `enum NID_setext_track2 = 605;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setext_track2); }))) {
            mixin(enumMixinStr_NID_setext_track2);
        }
    }




    static if(!is(typeof(OBJ_setext_track2))) {
        private enum enumMixinStr_OBJ_setext_track2 = `enum OBJ_setext_track2 = OBJ_international_organizations , 42L , 1L , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setext_track2); }))) {
            mixin(enumMixinStr_OBJ_setext_track2);
        }
    }




    static if(!is(typeof(SN_setext_cv))) {
        private enum enumMixinStr_SN_setext_cv = `enum SN_setext_cv = "setext-cv";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setext_cv); }))) {
            mixin(enumMixinStr_SN_setext_cv);
        }
    }




    static if(!is(typeof(LN_setext_cv))) {
        private enum enumMixinStr_LN_setext_cv = `enum LN_setext_cv = "additional verification";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_setext_cv); }))) {
            mixin(enumMixinStr_LN_setext_cv);
        }
    }




    static if(!is(typeof(NID_setext_cv))) {
        private enum enumMixinStr_NID_setext_cv = `enum NID_setext_cv = 606;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setext_cv); }))) {
            mixin(enumMixinStr_NID_setext_cv);
        }
    }




    static if(!is(typeof(OBJ_setext_cv))) {
        private enum enumMixinStr_OBJ_setext_cv = `enum OBJ_setext_cv = OBJ_international_organizations , 42L , 1L , 8L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setext_cv); }))) {
            mixin(enumMixinStr_OBJ_setext_cv);
        }
    }




    static if(!is(typeof(SN_set_policy_root))) {
        private enum enumMixinStr_SN_set_policy_root = `enum SN_set_policy_root = "set-policy-root";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_set_policy_root); }))) {
            mixin(enumMixinStr_SN_set_policy_root);
        }
    }




    static if(!is(typeof(NID_set_policy_root))) {
        private enum enumMixinStr_NID_set_policy_root = `enum NID_set_policy_root = 607;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_set_policy_root); }))) {
            mixin(enumMixinStr_NID_set_policy_root);
        }
    }




    static if(!is(typeof(OBJ_set_policy_root))) {
        private enum enumMixinStr_OBJ_set_policy_root = `enum OBJ_set_policy_root = OBJ_international_organizations , 42L , 5L , 0L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_set_policy_root); }))) {
            mixin(enumMixinStr_OBJ_set_policy_root);
        }
    }




    static if(!is(typeof(SN_setCext_hashedRoot))) {
        private enum enumMixinStr_SN_setCext_hashedRoot = `enum SN_setCext_hashedRoot = "setCext-hashedRoot";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setCext_hashedRoot); }))) {
            mixin(enumMixinStr_SN_setCext_hashedRoot);
        }
    }




    static if(!is(typeof(NID_setCext_hashedRoot))) {
        private enum enumMixinStr_NID_setCext_hashedRoot = `enum NID_setCext_hashedRoot = 608;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setCext_hashedRoot); }))) {
            mixin(enumMixinStr_NID_setCext_hashedRoot);
        }
    }




    static if(!is(typeof(OBJ_setCext_hashedRoot))) {
        private enum enumMixinStr_OBJ_setCext_hashedRoot = `enum OBJ_setCext_hashedRoot = OBJ_international_organizations , 42L , 7L , 0L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setCext_hashedRoot); }))) {
            mixin(enumMixinStr_OBJ_setCext_hashedRoot);
        }
    }




    static if(!is(typeof(SN_setCext_certType))) {
        private enum enumMixinStr_SN_setCext_certType = `enum SN_setCext_certType = "setCext-certType";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setCext_certType); }))) {
            mixin(enumMixinStr_SN_setCext_certType);
        }
    }




    static if(!is(typeof(NID_setCext_certType))) {
        private enum enumMixinStr_NID_setCext_certType = `enum NID_setCext_certType = 609;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setCext_certType); }))) {
            mixin(enumMixinStr_NID_setCext_certType);
        }
    }




    static if(!is(typeof(OBJ_setCext_certType))) {
        private enum enumMixinStr_OBJ_setCext_certType = `enum OBJ_setCext_certType = OBJ_international_organizations , 42L , 7L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setCext_certType); }))) {
            mixin(enumMixinStr_OBJ_setCext_certType);
        }
    }




    static if(!is(typeof(SN_setCext_merchData))) {
        private enum enumMixinStr_SN_setCext_merchData = `enum SN_setCext_merchData = "setCext-merchData";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setCext_merchData); }))) {
            mixin(enumMixinStr_SN_setCext_merchData);
        }
    }




    static if(!is(typeof(NID_setCext_merchData))) {
        private enum enumMixinStr_NID_setCext_merchData = `enum NID_setCext_merchData = 610;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setCext_merchData); }))) {
            mixin(enumMixinStr_NID_setCext_merchData);
        }
    }




    static if(!is(typeof(OBJ_setCext_merchData))) {
        private enum enumMixinStr_OBJ_setCext_merchData = `enum OBJ_setCext_merchData = OBJ_international_organizations , 42L , 7L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setCext_merchData); }))) {
            mixin(enumMixinStr_OBJ_setCext_merchData);
        }
    }




    static if(!is(typeof(SN_setCext_cCertRequired))) {
        private enum enumMixinStr_SN_setCext_cCertRequired = `enum SN_setCext_cCertRequired = "setCext-cCertRequired";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setCext_cCertRequired); }))) {
            mixin(enumMixinStr_SN_setCext_cCertRequired);
        }
    }




    static if(!is(typeof(NID_setCext_cCertRequired))) {
        private enum enumMixinStr_NID_setCext_cCertRequired = `enum NID_setCext_cCertRequired = 611;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setCext_cCertRequired); }))) {
            mixin(enumMixinStr_NID_setCext_cCertRequired);
        }
    }




    static if(!is(typeof(OBJ_setCext_cCertRequired))) {
        private enum enumMixinStr_OBJ_setCext_cCertRequired = `enum OBJ_setCext_cCertRequired = OBJ_international_organizations , 42L , 7L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setCext_cCertRequired); }))) {
            mixin(enumMixinStr_OBJ_setCext_cCertRequired);
        }
    }




    static if(!is(typeof(SN_setCext_tunneling))) {
        private enum enumMixinStr_SN_setCext_tunneling = `enum SN_setCext_tunneling = "setCext-tunneling";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setCext_tunneling); }))) {
            mixin(enumMixinStr_SN_setCext_tunneling);
        }
    }




    static if(!is(typeof(NID_setCext_tunneling))) {
        private enum enumMixinStr_NID_setCext_tunneling = `enum NID_setCext_tunneling = 612;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setCext_tunneling); }))) {
            mixin(enumMixinStr_NID_setCext_tunneling);
        }
    }




    static if(!is(typeof(OBJ_setCext_tunneling))) {
        private enum enumMixinStr_OBJ_setCext_tunneling = `enum OBJ_setCext_tunneling = OBJ_international_organizations , 42L , 7L , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setCext_tunneling); }))) {
            mixin(enumMixinStr_OBJ_setCext_tunneling);
        }
    }




    static if(!is(typeof(SN_setCext_setExt))) {
        private enum enumMixinStr_SN_setCext_setExt = `enum SN_setCext_setExt = "setCext-setExt";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setCext_setExt); }))) {
            mixin(enumMixinStr_SN_setCext_setExt);
        }
    }




    static if(!is(typeof(NID_setCext_setExt))) {
        private enum enumMixinStr_NID_setCext_setExt = `enum NID_setCext_setExt = 613;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setCext_setExt); }))) {
            mixin(enumMixinStr_NID_setCext_setExt);
        }
    }




    static if(!is(typeof(OBJ_setCext_setExt))) {
        private enum enumMixinStr_OBJ_setCext_setExt = `enum OBJ_setCext_setExt = OBJ_international_organizations , 42L , 7L , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setCext_setExt); }))) {
            mixin(enumMixinStr_OBJ_setCext_setExt);
        }
    }




    static if(!is(typeof(SN_setCext_setQualf))) {
        private enum enumMixinStr_SN_setCext_setQualf = `enum SN_setCext_setQualf = "setCext-setQualf";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setCext_setQualf); }))) {
            mixin(enumMixinStr_SN_setCext_setQualf);
        }
    }




    static if(!is(typeof(NID_setCext_setQualf))) {
        private enum enumMixinStr_NID_setCext_setQualf = `enum NID_setCext_setQualf = 614;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setCext_setQualf); }))) {
            mixin(enumMixinStr_NID_setCext_setQualf);
        }
    }




    static if(!is(typeof(OBJ_setCext_setQualf))) {
        private enum enumMixinStr_OBJ_setCext_setQualf = `enum OBJ_setCext_setQualf = OBJ_international_organizations , 42L , 7L , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setCext_setQualf); }))) {
            mixin(enumMixinStr_OBJ_setCext_setQualf);
        }
    }




    static if(!is(typeof(SN_setCext_PGWYcapabilities))) {
        private enum enumMixinStr_SN_setCext_PGWYcapabilities = `enum SN_setCext_PGWYcapabilities = "setCext-PGWYcapabilities";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setCext_PGWYcapabilities); }))) {
            mixin(enumMixinStr_SN_setCext_PGWYcapabilities);
        }
    }




    static if(!is(typeof(NID_setCext_PGWYcapabilities))) {
        private enum enumMixinStr_NID_setCext_PGWYcapabilities = `enum NID_setCext_PGWYcapabilities = 615;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setCext_PGWYcapabilities); }))) {
            mixin(enumMixinStr_NID_setCext_PGWYcapabilities);
        }
    }




    static if(!is(typeof(OBJ_setCext_PGWYcapabilities))) {
        private enum enumMixinStr_OBJ_setCext_PGWYcapabilities = `enum OBJ_setCext_PGWYcapabilities = OBJ_international_organizations , 42L , 7L , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setCext_PGWYcapabilities); }))) {
            mixin(enumMixinStr_OBJ_setCext_PGWYcapabilities);
        }
    }




    static if(!is(typeof(SN_setCext_TokenIdentifier))) {
        private enum enumMixinStr_SN_setCext_TokenIdentifier = `enum SN_setCext_TokenIdentifier = "setCext-TokenIdentifier";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setCext_TokenIdentifier); }))) {
            mixin(enumMixinStr_SN_setCext_TokenIdentifier);
        }
    }




    static if(!is(typeof(NID_setCext_TokenIdentifier))) {
        private enum enumMixinStr_NID_setCext_TokenIdentifier = `enum NID_setCext_TokenIdentifier = 616;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setCext_TokenIdentifier); }))) {
            mixin(enumMixinStr_NID_setCext_TokenIdentifier);
        }
    }




    static if(!is(typeof(OBJ_setCext_TokenIdentifier))) {
        private enum enumMixinStr_OBJ_setCext_TokenIdentifier = `enum OBJ_setCext_TokenIdentifier = OBJ_international_organizations , 42L , 7L , 8L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setCext_TokenIdentifier); }))) {
            mixin(enumMixinStr_OBJ_setCext_TokenIdentifier);
        }
    }




    static if(!is(typeof(SN_setCext_Track2Data))) {
        private enum enumMixinStr_SN_setCext_Track2Data = `enum SN_setCext_Track2Data = "setCext-Track2Data";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setCext_Track2Data); }))) {
            mixin(enumMixinStr_SN_setCext_Track2Data);
        }
    }




    static if(!is(typeof(NID_setCext_Track2Data))) {
        private enum enumMixinStr_NID_setCext_Track2Data = `enum NID_setCext_Track2Data = 617;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setCext_Track2Data); }))) {
            mixin(enumMixinStr_NID_setCext_Track2Data);
        }
    }




    static if(!is(typeof(OBJ_setCext_Track2Data))) {
        private enum enumMixinStr_OBJ_setCext_Track2Data = `enum OBJ_setCext_Track2Data = OBJ_international_organizations , 42L , 7L , 9L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setCext_Track2Data); }))) {
            mixin(enumMixinStr_OBJ_setCext_Track2Data);
        }
    }




    static if(!is(typeof(SN_setCext_TokenType))) {
        private enum enumMixinStr_SN_setCext_TokenType = `enum SN_setCext_TokenType = "setCext-TokenType";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setCext_TokenType); }))) {
            mixin(enumMixinStr_SN_setCext_TokenType);
        }
    }




    static if(!is(typeof(NID_setCext_TokenType))) {
        private enum enumMixinStr_NID_setCext_TokenType = `enum NID_setCext_TokenType = 618;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setCext_TokenType); }))) {
            mixin(enumMixinStr_NID_setCext_TokenType);
        }
    }




    static if(!is(typeof(OBJ_setCext_TokenType))) {
        private enum enumMixinStr_OBJ_setCext_TokenType = `enum OBJ_setCext_TokenType = OBJ_international_organizations , 42L , 7L , 10L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setCext_TokenType); }))) {
            mixin(enumMixinStr_OBJ_setCext_TokenType);
        }
    }




    static if(!is(typeof(SN_setCext_IssuerCapabilities))) {
        private enum enumMixinStr_SN_setCext_IssuerCapabilities = `enum SN_setCext_IssuerCapabilities = "setCext-IssuerCapabilities";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setCext_IssuerCapabilities); }))) {
            mixin(enumMixinStr_SN_setCext_IssuerCapabilities);
        }
    }




    static if(!is(typeof(NID_setCext_IssuerCapabilities))) {
        private enum enumMixinStr_NID_setCext_IssuerCapabilities = `enum NID_setCext_IssuerCapabilities = 619;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setCext_IssuerCapabilities); }))) {
            mixin(enumMixinStr_NID_setCext_IssuerCapabilities);
        }
    }




    static if(!is(typeof(OBJ_setCext_IssuerCapabilities))) {
        private enum enumMixinStr_OBJ_setCext_IssuerCapabilities = `enum OBJ_setCext_IssuerCapabilities = OBJ_international_organizations , 42L , 7L , 11L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setCext_IssuerCapabilities); }))) {
            mixin(enumMixinStr_OBJ_setCext_IssuerCapabilities);
        }
    }




    static if(!is(typeof(SN_setAttr_Cert))) {
        private enum enumMixinStr_SN_setAttr_Cert = `enum SN_setAttr_Cert = "setAttr-Cert";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setAttr_Cert); }))) {
            mixin(enumMixinStr_SN_setAttr_Cert);
        }
    }




    static if(!is(typeof(NID_setAttr_Cert))) {
        private enum enumMixinStr_NID_setAttr_Cert = `enum NID_setAttr_Cert = 620;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setAttr_Cert); }))) {
            mixin(enumMixinStr_NID_setAttr_Cert);
        }
    }




    static if(!is(typeof(OBJ_setAttr_Cert))) {
        private enum enumMixinStr_OBJ_setAttr_Cert = `enum OBJ_setAttr_Cert = OBJ_international_organizations , 42L , 3L , 0L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setAttr_Cert); }))) {
            mixin(enumMixinStr_OBJ_setAttr_Cert);
        }
    }




    static if(!is(typeof(SN_setAttr_PGWYcap))) {
        private enum enumMixinStr_SN_setAttr_PGWYcap = `enum SN_setAttr_PGWYcap = "setAttr-PGWYcap";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setAttr_PGWYcap); }))) {
            mixin(enumMixinStr_SN_setAttr_PGWYcap);
        }
    }




    static if(!is(typeof(LN_setAttr_PGWYcap))) {
        private enum enumMixinStr_LN_setAttr_PGWYcap = `enum LN_setAttr_PGWYcap = "payment gateway capabilities";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_setAttr_PGWYcap); }))) {
            mixin(enumMixinStr_LN_setAttr_PGWYcap);
        }
    }




    static if(!is(typeof(NID_setAttr_PGWYcap))) {
        private enum enumMixinStr_NID_setAttr_PGWYcap = `enum NID_setAttr_PGWYcap = 621;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setAttr_PGWYcap); }))) {
            mixin(enumMixinStr_NID_setAttr_PGWYcap);
        }
    }




    static if(!is(typeof(OBJ_setAttr_PGWYcap))) {
        private enum enumMixinStr_OBJ_setAttr_PGWYcap = `enum OBJ_setAttr_PGWYcap = OBJ_international_organizations , 42L , 3L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setAttr_PGWYcap); }))) {
            mixin(enumMixinStr_OBJ_setAttr_PGWYcap);
        }
    }




    static if(!is(typeof(SN_setAttr_TokenType))) {
        private enum enumMixinStr_SN_setAttr_TokenType = `enum SN_setAttr_TokenType = "setAttr-TokenType";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setAttr_TokenType); }))) {
            mixin(enumMixinStr_SN_setAttr_TokenType);
        }
    }




    static if(!is(typeof(NID_setAttr_TokenType))) {
        private enum enumMixinStr_NID_setAttr_TokenType = `enum NID_setAttr_TokenType = 622;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setAttr_TokenType); }))) {
            mixin(enumMixinStr_NID_setAttr_TokenType);
        }
    }




    static if(!is(typeof(OBJ_setAttr_TokenType))) {
        private enum enumMixinStr_OBJ_setAttr_TokenType = `enum OBJ_setAttr_TokenType = OBJ_international_organizations , 42L , 3L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setAttr_TokenType); }))) {
            mixin(enumMixinStr_OBJ_setAttr_TokenType);
        }
    }




    static if(!is(typeof(SN_setAttr_IssCap))) {
        private enum enumMixinStr_SN_setAttr_IssCap = `enum SN_setAttr_IssCap = "setAttr-IssCap";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setAttr_IssCap); }))) {
            mixin(enumMixinStr_SN_setAttr_IssCap);
        }
    }




    static if(!is(typeof(LN_setAttr_IssCap))) {
        private enum enumMixinStr_LN_setAttr_IssCap = `enum LN_setAttr_IssCap = "issuer capabilities";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_setAttr_IssCap); }))) {
            mixin(enumMixinStr_LN_setAttr_IssCap);
        }
    }




    static if(!is(typeof(NID_setAttr_IssCap))) {
        private enum enumMixinStr_NID_setAttr_IssCap = `enum NID_setAttr_IssCap = 623;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setAttr_IssCap); }))) {
            mixin(enumMixinStr_NID_setAttr_IssCap);
        }
    }




    static if(!is(typeof(OBJ_setAttr_IssCap))) {
        private enum enumMixinStr_OBJ_setAttr_IssCap = `enum OBJ_setAttr_IssCap = OBJ_international_organizations , 42L , 3L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setAttr_IssCap); }))) {
            mixin(enumMixinStr_OBJ_setAttr_IssCap);
        }
    }




    static if(!is(typeof(SN_set_rootKeyThumb))) {
        private enum enumMixinStr_SN_set_rootKeyThumb = `enum SN_set_rootKeyThumb = "set-rootKeyThumb";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_set_rootKeyThumb); }))) {
            mixin(enumMixinStr_SN_set_rootKeyThumb);
        }
    }




    static if(!is(typeof(NID_set_rootKeyThumb))) {
        private enum enumMixinStr_NID_set_rootKeyThumb = `enum NID_set_rootKeyThumb = 624;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_set_rootKeyThumb); }))) {
            mixin(enumMixinStr_NID_set_rootKeyThumb);
        }
    }




    static if(!is(typeof(OBJ_set_rootKeyThumb))) {
        private enum enumMixinStr_OBJ_set_rootKeyThumb = `enum OBJ_set_rootKeyThumb = OBJ_international_organizations , 42L , 3L , 0L , 0L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_set_rootKeyThumb); }))) {
            mixin(enumMixinStr_OBJ_set_rootKeyThumb);
        }
    }




    static if(!is(typeof(SN_set_addPolicy))) {
        private enum enumMixinStr_SN_set_addPolicy = `enum SN_set_addPolicy = "set-addPolicy";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_set_addPolicy); }))) {
            mixin(enumMixinStr_SN_set_addPolicy);
        }
    }




    static if(!is(typeof(NID_set_addPolicy))) {
        private enum enumMixinStr_NID_set_addPolicy = `enum NID_set_addPolicy = 625;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_set_addPolicy); }))) {
            mixin(enumMixinStr_NID_set_addPolicy);
        }
    }




    static if(!is(typeof(OBJ_set_addPolicy))) {
        private enum enumMixinStr_OBJ_set_addPolicy = `enum OBJ_set_addPolicy = OBJ_international_organizations , 42L , 3L , 0L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_set_addPolicy); }))) {
            mixin(enumMixinStr_OBJ_set_addPolicy);
        }
    }




    static if(!is(typeof(SN_setAttr_Token_EMV))) {
        private enum enumMixinStr_SN_setAttr_Token_EMV = `enum SN_setAttr_Token_EMV = "setAttr-Token-EMV";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setAttr_Token_EMV); }))) {
            mixin(enumMixinStr_SN_setAttr_Token_EMV);
        }
    }




    static if(!is(typeof(NID_setAttr_Token_EMV))) {
        private enum enumMixinStr_NID_setAttr_Token_EMV = `enum NID_setAttr_Token_EMV = 626;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setAttr_Token_EMV); }))) {
            mixin(enumMixinStr_NID_setAttr_Token_EMV);
        }
    }




    static if(!is(typeof(OBJ_setAttr_Token_EMV))) {
        private enum enumMixinStr_OBJ_setAttr_Token_EMV = `enum OBJ_setAttr_Token_EMV = OBJ_international_organizations , 42L , 3L , 2L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setAttr_Token_EMV); }))) {
            mixin(enumMixinStr_OBJ_setAttr_Token_EMV);
        }
    }




    static if(!is(typeof(SN_setAttr_Token_B0Prime))) {
        private enum enumMixinStr_SN_setAttr_Token_B0Prime = `enum SN_setAttr_Token_B0Prime = "setAttr-Token-B0Prime";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setAttr_Token_B0Prime); }))) {
            mixin(enumMixinStr_SN_setAttr_Token_B0Prime);
        }
    }




    static if(!is(typeof(NID_setAttr_Token_B0Prime))) {
        private enum enumMixinStr_NID_setAttr_Token_B0Prime = `enum NID_setAttr_Token_B0Prime = 627;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setAttr_Token_B0Prime); }))) {
            mixin(enumMixinStr_NID_setAttr_Token_B0Prime);
        }
    }




    static if(!is(typeof(OBJ_setAttr_Token_B0Prime))) {
        private enum enumMixinStr_OBJ_setAttr_Token_B0Prime = `enum OBJ_setAttr_Token_B0Prime = OBJ_international_organizations , 42L , 3L , 2L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setAttr_Token_B0Prime); }))) {
            mixin(enumMixinStr_OBJ_setAttr_Token_B0Prime);
        }
    }




    static if(!is(typeof(SN_setAttr_IssCap_CVM))) {
        private enum enumMixinStr_SN_setAttr_IssCap_CVM = `enum SN_setAttr_IssCap_CVM = "setAttr-IssCap-CVM";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setAttr_IssCap_CVM); }))) {
            mixin(enumMixinStr_SN_setAttr_IssCap_CVM);
        }
    }




    static if(!is(typeof(NID_setAttr_IssCap_CVM))) {
        private enum enumMixinStr_NID_setAttr_IssCap_CVM = `enum NID_setAttr_IssCap_CVM = 628;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setAttr_IssCap_CVM); }))) {
            mixin(enumMixinStr_NID_setAttr_IssCap_CVM);
        }
    }




    static if(!is(typeof(OBJ_setAttr_IssCap_CVM))) {
        private enum enumMixinStr_OBJ_setAttr_IssCap_CVM = `enum OBJ_setAttr_IssCap_CVM = OBJ_international_organizations , 42L , 3L , 3L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setAttr_IssCap_CVM); }))) {
            mixin(enumMixinStr_OBJ_setAttr_IssCap_CVM);
        }
    }




    static if(!is(typeof(SN_setAttr_IssCap_T2))) {
        private enum enumMixinStr_SN_setAttr_IssCap_T2 = `enum SN_setAttr_IssCap_T2 = "setAttr-IssCap-T2";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setAttr_IssCap_T2); }))) {
            mixin(enumMixinStr_SN_setAttr_IssCap_T2);
        }
    }




    static if(!is(typeof(NID_setAttr_IssCap_T2))) {
        private enum enumMixinStr_NID_setAttr_IssCap_T2 = `enum NID_setAttr_IssCap_T2 = 629;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setAttr_IssCap_T2); }))) {
            mixin(enumMixinStr_NID_setAttr_IssCap_T2);
        }
    }




    static if(!is(typeof(OBJ_setAttr_IssCap_T2))) {
        private enum enumMixinStr_OBJ_setAttr_IssCap_T2 = `enum OBJ_setAttr_IssCap_T2 = OBJ_international_organizations , 42L , 3L , 3L , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setAttr_IssCap_T2); }))) {
            mixin(enumMixinStr_OBJ_setAttr_IssCap_T2);
        }
    }




    static if(!is(typeof(SN_setAttr_IssCap_Sig))) {
        private enum enumMixinStr_SN_setAttr_IssCap_Sig = `enum SN_setAttr_IssCap_Sig = "setAttr-IssCap-Sig";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setAttr_IssCap_Sig); }))) {
            mixin(enumMixinStr_SN_setAttr_IssCap_Sig);
        }
    }




    static if(!is(typeof(NID_setAttr_IssCap_Sig))) {
        private enum enumMixinStr_NID_setAttr_IssCap_Sig = `enum NID_setAttr_IssCap_Sig = 630;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setAttr_IssCap_Sig); }))) {
            mixin(enumMixinStr_NID_setAttr_IssCap_Sig);
        }
    }




    static if(!is(typeof(OBJ_setAttr_IssCap_Sig))) {
        private enum enumMixinStr_OBJ_setAttr_IssCap_Sig = `enum OBJ_setAttr_IssCap_Sig = OBJ_international_organizations , 42L , 3L , 3L , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setAttr_IssCap_Sig); }))) {
            mixin(enumMixinStr_OBJ_setAttr_IssCap_Sig);
        }
    }




    static if(!is(typeof(SN_setAttr_GenCryptgrm))) {
        private enum enumMixinStr_SN_setAttr_GenCryptgrm = `enum SN_setAttr_GenCryptgrm = "setAttr-GenCryptgrm";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setAttr_GenCryptgrm); }))) {
            mixin(enumMixinStr_SN_setAttr_GenCryptgrm);
        }
    }




    static if(!is(typeof(LN_setAttr_GenCryptgrm))) {
        private enum enumMixinStr_LN_setAttr_GenCryptgrm = `enum LN_setAttr_GenCryptgrm = "generate cryptogram";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_setAttr_GenCryptgrm); }))) {
            mixin(enumMixinStr_LN_setAttr_GenCryptgrm);
        }
    }




    static if(!is(typeof(NID_setAttr_GenCryptgrm))) {
        private enum enumMixinStr_NID_setAttr_GenCryptgrm = `enum NID_setAttr_GenCryptgrm = 631;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setAttr_GenCryptgrm); }))) {
            mixin(enumMixinStr_NID_setAttr_GenCryptgrm);
        }
    }




    static if(!is(typeof(OBJ_setAttr_GenCryptgrm))) {
        private enum enumMixinStr_OBJ_setAttr_GenCryptgrm = `enum OBJ_setAttr_GenCryptgrm = OBJ_international_organizations , 42L , 3L , 3L , 3L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setAttr_GenCryptgrm); }))) {
            mixin(enumMixinStr_OBJ_setAttr_GenCryptgrm);
        }
    }




    static if(!is(typeof(SN_setAttr_T2Enc))) {
        private enum enumMixinStr_SN_setAttr_T2Enc = `enum SN_setAttr_T2Enc = "setAttr-T2Enc";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setAttr_T2Enc); }))) {
            mixin(enumMixinStr_SN_setAttr_T2Enc);
        }
    }




    static if(!is(typeof(LN_setAttr_T2Enc))) {
        private enum enumMixinStr_LN_setAttr_T2Enc = `enum LN_setAttr_T2Enc = "encrypted track 2";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_setAttr_T2Enc); }))) {
            mixin(enumMixinStr_LN_setAttr_T2Enc);
        }
    }




    static if(!is(typeof(NID_setAttr_T2Enc))) {
        private enum enumMixinStr_NID_setAttr_T2Enc = `enum NID_setAttr_T2Enc = 632;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setAttr_T2Enc); }))) {
            mixin(enumMixinStr_NID_setAttr_T2Enc);
        }
    }




    static if(!is(typeof(OBJ_setAttr_T2Enc))) {
        private enum enumMixinStr_OBJ_setAttr_T2Enc = `enum OBJ_setAttr_T2Enc = OBJ_international_organizations , 42L , 3L , 3L , 4L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setAttr_T2Enc); }))) {
            mixin(enumMixinStr_OBJ_setAttr_T2Enc);
        }
    }




    static if(!is(typeof(SN_setAttr_T2cleartxt))) {
        private enum enumMixinStr_SN_setAttr_T2cleartxt = `enum SN_setAttr_T2cleartxt = "setAttr-T2cleartxt";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setAttr_T2cleartxt); }))) {
            mixin(enumMixinStr_SN_setAttr_T2cleartxt);
        }
    }




    static if(!is(typeof(LN_setAttr_T2cleartxt))) {
        private enum enumMixinStr_LN_setAttr_T2cleartxt = `enum LN_setAttr_T2cleartxt = "cleartext track 2";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_setAttr_T2cleartxt); }))) {
            mixin(enumMixinStr_LN_setAttr_T2cleartxt);
        }
    }




    static if(!is(typeof(NID_setAttr_T2cleartxt))) {
        private enum enumMixinStr_NID_setAttr_T2cleartxt = `enum NID_setAttr_T2cleartxt = 633;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setAttr_T2cleartxt); }))) {
            mixin(enumMixinStr_NID_setAttr_T2cleartxt);
        }
    }




    static if(!is(typeof(OBJ_setAttr_T2cleartxt))) {
        private enum enumMixinStr_OBJ_setAttr_T2cleartxt = `enum OBJ_setAttr_T2cleartxt = OBJ_international_organizations , 42L , 3L , 3L , 4L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setAttr_T2cleartxt); }))) {
            mixin(enumMixinStr_OBJ_setAttr_T2cleartxt);
        }
    }




    static if(!is(typeof(SN_setAttr_TokICCsig))) {
        private enum enumMixinStr_SN_setAttr_TokICCsig = `enum SN_setAttr_TokICCsig = "setAttr-TokICCsig";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setAttr_TokICCsig); }))) {
            mixin(enumMixinStr_SN_setAttr_TokICCsig);
        }
    }




    static if(!is(typeof(LN_setAttr_TokICCsig))) {
        private enum enumMixinStr_LN_setAttr_TokICCsig = `enum LN_setAttr_TokICCsig = "ICC or token signature";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_setAttr_TokICCsig); }))) {
            mixin(enumMixinStr_LN_setAttr_TokICCsig);
        }
    }




    static if(!is(typeof(NID_setAttr_TokICCsig))) {
        private enum enumMixinStr_NID_setAttr_TokICCsig = `enum NID_setAttr_TokICCsig = 634;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setAttr_TokICCsig); }))) {
            mixin(enumMixinStr_NID_setAttr_TokICCsig);
        }
    }




    static if(!is(typeof(OBJ_setAttr_TokICCsig))) {
        private enum enumMixinStr_OBJ_setAttr_TokICCsig = `enum OBJ_setAttr_TokICCsig = OBJ_international_organizations , 42L , 3L , 3L , 5L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setAttr_TokICCsig); }))) {
            mixin(enumMixinStr_OBJ_setAttr_TokICCsig);
        }
    }




    static if(!is(typeof(SN_setAttr_SecDevSig))) {
        private enum enumMixinStr_SN_setAttr_SecDevSig = `enum SN_setAttr_SecDevSig = "setAttr-SecDevSig";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_setAttr_SecDevSig); }))) {
            mixin(enumMixinStr_SN_setAttr_SecDevSig);
        }
    }




    static if(!is(typeof(LN_setAttr_SecDevSig))) {
        private enum enumMixinStr_LN_setAttr_SecDevSig = `enum LN_setAttr_SecDevSig = "secure device signature";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_setAttr_SecDevSig); }))) {
            mixin(enumMixinStr_LN_setAttr_SecDevSig);
        }
    }




    static if(!is(typeof(NID_setAttr_SecDevSig))) {
        private enum enumMixinStr_NID_setAttr_SecDevSig = `enum NID_setAttr_SecDevSig = 635;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_setAttr_SecDevSig); }))) {
            mixin(enumMixinStr_NID_setAttr_SecDevSig);
        }
    }




    static if(!is(typeof(OBJ_setAttr_SecDevSig))) {
        private enum enumMixinStr_OBJ_setAttr_SecDevSig = `enum OBJ_setAttr_SecDevSig = OBJ_international_organizations , 42L , 3L , 3L , 5L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_setAttr_SecDevSig); }))) {
            mixin(enumMixinStr_OBJ_setAttr_SecDevSig);
        }
    }




    static if(!is(typeof(SN_set_brand_IATA_ATA))) {
        private enum enumMixinStr_SN_set_brand_IATA_ATA = `enum SN_set_brand_IATA_ATA = "set-brand-IATA-ATA";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_set_brand_IATA_ATA); }))) {
            mixin(enumMixinStr_SN_set_brand_IATA_ATA);
        }
    }




    static if(!is(typeof(NID_set_brand_IATA_ATA))) {
        private enum enumMixinStr_NID_set_brand_IATA_ATA = `enum NID_set_brand_IATA_ATA = 636;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_set_brand_IATA_ATA); }))) {
            mixin(enumMixinStr_NID_set_brand_IATA_ATA);
        }
    }




    static if(!is(typeof(OBJ_set_brand_IATA_ATA))) {
        private enum enumMixinStr_OBJ_set_brand_IATA_ATA = `enum OBJ_set_brand_IATA_ATA = OBJ_international_organizations , 42L , 8L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_set_brand_IATA_ATA); }))) {
            mixin(enumMixinStr_OBJ_set_brand_IATA_ATA);
        }
    }




    static if(!is(typeof(SN_set_brand_Diners))) {
        private enum enumMixinStr_SN_set_brand_Diners = `enum SN_set_brand_Diners = "set-brand-Diners";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_set_brand_Diners); }))) {
            mixin(enumMixinStr_SN_set_brand_Diners);
        }
    }




    static if(!is(typeof(NID_set_brand_Diners))) {
        private enum enumMixinStr_NID_set_brand_Diners = `enum NID_set_brand_Diners = 637;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_set_brand_Diners); }))) {
            mixin(enumMixinStr_NID_set_brand_Diners);
        }
    }




    static if(!is(typeof(OBJ_set_brand_Diners))) {
        private enum enumMixinStr_OBJ_set_brand_Diners = `enum OBJ_set_brand_Diners = OBJ_international_organizations , 42L , 8L , 30L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_set_brand_Diners); }))) {
            mixin(enumMixinStr_OBJ_set_brand_Diners);
        }
    }




    static if(!is(typeof(SN_set_brand_AmericanExpress))) {
        private enum enumMixinStr_SN_set_brand_AmericanExpress = `enum SN_set_brand_AmericanExpress = "set-brand-AmericanExpress";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_set_brand_AmericanExpress); }))) {
            mixin(enumMixinStr_SN_set_brand_AmericanExpress);
        }
    }




    static if(!is(typeof(NID_set_brand_AmericanExpress))) {
        private enum enumMixinStr_NID_set_brand_AmericanExpress = `enum NID_set_brand_AmericanExpress = 638;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_set_brand_AmericanExpress); }))) {
            mixin(enumMixinStr_NID_set_brand_AmericanExpress);
        }
    }




    static if(!is(typeof(OBJ_set_brand_AmericanExpress))) {
        private enum enumMixinStr_OBJ_set_brand_AmericanExpress = `enum OBJ_set_brand_AmericanExpress = OBJ_international_organizations , 42L , 8L , 34L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_set_brand_AmericanExpress); }))) {
            mixin(enumMixinStr_OBJ_set_brand_AmericanExpress);
        }
    }




    static if(!is(typeof(SN_set_brand_JCB))) {
        private enum enumMixinStr_SN_set_brand_JCB = `enum SN_set_brand_JCB = "set-brand-JCB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_set_brand_JCB); }))) {
            mixin(enumMixinStr_SN_set_brand_JCB);
        }
    }




    static if(!is(typeof(NID_set_brand_JCB))) {
        private enum enumMixinStr_NID_set_brand_JCB = `enum NID_set_brand_JCB = 639;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_set_brand_JCB); }))) {
            mixin(enumMixinStr_NID_set_brand_JCB);
        }
    }




    static if(!is(typeof(OBJ_set_brand_JCB))) {
        private enum enumMixinStr_OBJ_set_brand_JCB = `enum OBJ_set_brand_JCB = OBJ_international_organizations , 42L , 8L , 35L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_set_brand_JCB); }))) {
            mixin(enumMixinStr_OBJ_set_brand_JCB);
        }
    }




    static if(!is(typeof(SN_set_brand_Visa))) {
        private enum enumMixinStr_SN_set_brand_Visa = `enum SN_set_brand_Visa = "set-brand-Visa";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_set_brand_Visa); }))) {
            mixin(enumMixinStr_SN_set_brand_Visa);
        }
    }




    static if(!is(typeof(NID_set_brand_Visa))) {
        private enum enumMixinStr_NID_set_brand_Visa = `enum NID_set_brand_Visa = 640;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_set_brand_Visa); }))) {
            mixin(enumMixinStr_NID_set_brand_Visa);
        }
    }




    static if(!is(typeof(OBJ_set_brand_Visa))) {
        private enum enumMixinStr_OBJ_set_brand_Visa = `enum OBJ_set_brand_Visa = OBJ_international_organizations , 42L , 8L , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_set_brand_Visa); }))) {
            mixin(enumMixinStr_OBJ_set_brand_Visa);
        }
    }




    static if(!is(typeof(SN_set_brand_MasterCard))) {
        private enum enumMixinStr_SN_set_brand_MasterCard = `enum SN_set_brand_MasterCard = "set-brand-MasterCard";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_set_brand_MasterCard); }))) {
            mixin(enumMixinStr_SN_set_brand_MasterCard);
        }
    }




    static if(!is(typeof(NID_set_brand_MasterCard))) {
        private enum enumMixinStr_NID_set_brand_MasterCard = `enum NID_set_brand_MasterCard = 641;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_set_brand_MasterCard); }))) {
            mixin(enumMixinStr_NID_set_brand_MasterCard);
        }
    }




    static if(!is(typeof(OBJ_set_brand_MasterCard))) {
        private enum enumMixinStr_OBJ_set_brand_MasterCard = `enum OBJ_set_brand_MasterCard = OBJ_international_organizations , 42L , 8L , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_set_brand_MasterCard); }))) {
            mixin(enumMixinStr_OBJ_set_brand_MasterCard);
        }
    }




    static if(!is(typeof(SN_set_brand_Novus))) {
        private enum enumMixinStr_SN_set_brand_Novus = `enum SN_set_brand_Novus = "set-brand-Novus";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_set_brand_Novus); }))) {
            mixin(enumMixinStr_SN_set_brand_Novus);
        }
    }




    static if(!is(typeof(NID_set_brand_Novus))) {
        private enum enumMixinStr_NID_set_brand_Novus = `enum NID_set_brand_Novus = 642;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_set_brand_Novus); }))) {
            mixin(enumMixinStr_NID_set_brand_Novus);
        }
    }




    static if(!is(typeof(OBJ_set_brand_Novus))) {
        private enum enumMixinStr_OBJ_set_brand_Novus = `enum OBJ_set_brand_Novus = OBJ_international_organizations , 42L , 8L , 6011L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_set_brand_Novus); }))) {
            mixin(enumMixinStr_OBJ_set_brand_Novus);
        }
    }




    static if(!is(typeof(SN_des_cdmf))) {
        private enum enumMixinStr_SN_des_cdmf = `enum SN_des_cdmf = "DES-CDMF";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_des_cdmf); }))) {
            mixin(enumMixinStr_SN_des_cdmf);
        }
    }




    static if(!is(typeof(LN_des_cdmf))) {
        private enum enumMixinStr_LN_des_cdmf = `enum LN_des_cdmf = "des-cdmf";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_des_cdmf); }))) {
            mixin(enumMixinStr_LN_des_cdmf);
        }
    }




    static if(!is(typeof(NID_des_cdmf))) {
        private enum enumMixinStr_NID_des_cdmf = `enum NID_des_cdmf = 643;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_des_cdmf); }))) {
            mixin(enumMixinStr_NID_des_cdmf);
        }
    }




    static if(!is(typeof(OBJ_des_cdmf))) {
        private enum enumMixinStr_OBJ_des_cdmf = `enum OBJ_des_cdmf = OBJ_rsadsi , 3L , 10L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_des_cdmf); }))) {
            mixin(enumMixinStr_OBJ_des_cdmf);
        }
    }




    static if(!is(typeof(SN_rsaOAEPEncryptionSET))) {
        private enum enumMixinStr_SN_rsaOAEPEncryptionSET = `enum SN_rsaOAEPEncryptionSET = "rsaOAEPEncryptionSET";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_rsaOAEPEncryptionSET); }))) {
            mixin(enumMixinStr_SN_rsaOAEPEncryptionSET);
        }
    }




    static if(!is(typeof(NID_rsaOAEPEncryptionSET))) {
        private enum enumMixinStr_NID_rsaOAEPEncryptionSET = `enum NID_rsaOAEPEncryptionSET = 644;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_rsaOAEPEncryptionSET); }))) {
            mixin(enumMixinStr_NID_rsaOAEPEncryptionSET);
        }
    }




    static if(!is(typeof(OBJ_rsaOAEPEncryptionSET))) {
        private enum enumMixinStr_OBJ_rsaOAEPEncryptionSET = `enum OBJ_rsaOAEPEncryptionSET = OBJ_rsadsi , 1L , 1L , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_rsaOAEPEncryptionSET); }))) {
            mixin(enumMixinStr_OBJ_rsaOAEPEncryptionSET);
        }
    }




    static if(!is(typeof(SN_ipsec3))) {
        private enum enumMixinStr_SN_ipsec3 = `enum SN_ipsec3 = "Oakley-EC2N-3";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ipsec3); }))) {
            mixin(enumMixinStr_SN_ipsec3);
        }
    }




    static if(!is(typeof(LN_ipsec3))) {
        private enum enumMixinStr_LN_ipsec3 = `enum LN_ipsec3 = "ipsec3";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ipsec3); }))) {
            mixin(enumMixinStr_LN_ipsec3);
        }
    }




    static if(!is(typeof(NID_ipsec3))) {
        private enum enumMixinStr_NID_ipsec3 = `enum NID_ipsec3 = 749;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ipsec3); }))) {
            mixin(enumMixinStr_NID_ipsec3);
        }
    }




    static if(!is(typeof(SN_ipsec4))) {
        private enum enumMixinStr_SN_ipsec4 = `enum SN_ipsec4 = "Oakley-EC2N-4";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ipsec4); }))) {
            mixin(enumMixinStr_SN_ipsec4);
        }
    }




    static if(!is(typeof(LN_ipsec4))) {
        private enum enumMixinStr_LN_ipsec4 = `enum LN_ipsec4 = "ipsec4";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ipsec4); }))) {
            mixin(enumMixinStr_LN_ipsec4);
        }
    }




    static if(!is(typeof(NID_ipsec4))) {
        private enum enumMixinStr_NID_ipsec4 = `enum NID_ipsec4 = 750;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ipsec4); }))) {
            mixin(enumMixinStr_NID_ipsec4);
        }
    }




    static if(!is(typeof(SN_whirlpool))) {
        private enum enumMixinStr_SN_whirlpool = `enum SN_whirlpool = "whirlpool";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_whirlpool); }))) {
            mixin(enumMixinStr_SN_whirlpool);
        }
    }




    static if(!is(typeof(NID_whirlpool))) {
        private enum enumMixinStr_NID_whirlpool = `enum NID_whirlpool = 804;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_whirlpool); }))) {
            mixin(enumMixinStr_NID_whirlpool);
        }
    }




    static if(!is(typeof(OBJ_whirlpool))) {
        private enum enumMixinStr_OBJ_whirlpool = `enum OBJ_whirlpool = OBJ_iso , 0L , 10118L , 3L , 0L , 55L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_whirlpool); }))) {
            mixin(enumMixinStr_OBJ_whirlpool);
        }
    }




    static if(!is(typeof(SN_cryptopro))) {
        private enum enumMixinStr_SN_cryptopro = `enum SN_cryptopro = "cryptopro";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_cryptopro); }))) {
            mixin(enumMixinStr_SN_cryptopro);
        }
    }




    static if(!is(typeof(NID_cryptopro))) {
        private enum enumMixinStr_NID_cryptopro = `enum NID_cryptopro = 805;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_cryptopro); }))) {
            mixin(enumMixinStr_NID_cryptopro);
        }
    }




    static if(!is(typeof(OBJ_cryptopro))) {
        private enum enumMixinStr_OBJ_cryptopro = `enum OBJ_cryptopro = OBJ_member_body , 643L , 2L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_cryptopro); }))) {
            mixin(enumMixinStr_OBJ_cryptopro);
        }
    }




    static if(!is(typeof(SN_cryptocom))) {
        private enum enumMixinStr_SN_cryptocom = `enum SN_cryptocom = "cryptocom";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_cryptocom); }))) {
            mixin(enumMixinStr_SN_cryptocom);
        }
    }




    static if(!is(typeof(NID_cryptocom))) {
        private enum enumMixinStr_NID_cryptocom = `enum NID_cryptocom = 806;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_cryptocom); }))) {
            mixin(enumMixinStr_NID_cryptocom);
        }
    }




    static if(!is(typeof(OBJ_cryptocom))) {
        private enum enumMixinStr_OBJ_cryptocom = `enum OBJ_cryptocom = OBJ_member_body , 643L , 2L , 9L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_cryptocom); }))) {
            mixin(enumMixinStr_OBJ_cryptocom);
        }
    }




    static if(!is(typeof(SN_id_tc26))) {
        private enum enumMixinStr_SN_id_tc26 = `enum SN_id_tc26 = "id-tc26";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26); }))) {
            mixin(enumMixinStr_SN_id_tc26);
        }
    }




    static if(!is(typeof(NID_id_tc26))) {
        private enum enumMixinStr_NID_id_tc26 = `enum NID_id_tc26 = 974;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26); }))) {
            mixin(enumMixinStr_NID_id_tc26);
        }
    }




    static if(!is(typeof(OBJ_id_tc26))) {
        private enum enumMixinStr_OBJ_id_tc26 = `enum OBJ_id_tc26 = OBJ_member_body , 643L , 7L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26); }))) {
            mixin(enumMixinStr_OBJ_id_tc26);
        }
    }




    static if(!is(typeof(SN_id_GostR3411_94_with_GostR3410_2001))) {
        private enum enumMixinStr_SN_id_GostR3411_94_with_GostR3410_2001 = `enum SN_id_GostR3411_94_with_GostR3410_2001 = "id-GostR3411-94-with-GostR3410-2001";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3411_94_with_GostR3410_2001); }))) {
            mixin(enumMixinStr_SN_id_GostR3411_94_with_GostR3410_2001);
        }
    }




    static if(!is(typeof(LN_id_GostR3411_94_with_GostR3410_2001))) {
        private enum enumMixinStr_LN_id_GostR3411_94_with_GostR3410_2001 = `enum LN_id_GostR3411_94_with_GostR3410_2001 = "GOST R 34.11-94 with GOST R 34.10-2001";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_GostR3411_94_with_GostR3410_2001); }))) {
            mixin(enumMixinStr_LN_id_GostR3411_94_with_GostR3410_2001);
        }
    }




    static if(!is(typeof(NID_id_GostR3411_94_with_GostR3410_2001))) {
        private enum enumMixinStr_NID_id_GostR3411_94_with_GostR3410_2001 = `enum NID_id_GostR3411_94_with_GostR3410_2001 = 807;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3411_94_with_GostR3410_2001); }))) {
            mixin(enumMixinStr_NID_id_GostR3411_94_with_GostR3410_2001);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3411_94_with_GostR3410_2001))) {
        private enum enumMixinStr_OBJ_id_GostR3411_94_with_GostR3410_2001 = `enum OBJ_id_GostR3411_94_with_GostR3410_2001 = OBJ_member_body , 643L , 2L , 2L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3411_94_with_GostR3410_2001); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3411_94_with_GostR3410_2001);
        }
    }




    static if(!is(typeof(SN_id_GostR3411_94_with_GostR3410_94))) {
        private enum enumMixinStr_SN_id_GostR3411_94_with_GostR3410_94 = `enum SN_id_GostR3411_94_with_GostR3410_94 = "id-GostR3411-94-with-GostR3410-94";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3411_94_with_GostR3410_94); }))) {
            mixin(enumMixinStr_SN_id_GostR3411_94_with_GostR3410_94);
        }
    }




    static if(!is(typeof(LN_id_GostR3411_94_with_GostR3410_94))) {
        private enum enumMixinStr_LN_id_GostR3411_94_with_GostR3410_94 = `enum LN_id_GostR3411_94_with_GostR3410_94 = "GOST R 34.11-94 with GOST R 34.10-94";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_GostR3411_94_with_GostR3410_94); }))) {
            mixin(enumMixinStr_LN_id_GostR3411_94_with_GostR3410_94);
        }
    }




    static if(!is(typeof(NID_id_GostR3411_94_with_GostR3410_94))) {
        private enum enumMixinStr_NID_id_GostR3411_94_with_GostR3410_94 = `enum NID_id_GostR3411_94_with_GostR3410_94 = 808;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3411_94_with_GostR3410_94); }))) {
            mixin(enumMixinStr_NID_id_GostR3411_94_with_GostR3410_94);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3411_94_with_GostR3410_94))) {
        private enum enumMixinStr_OBJ_id_GostR3411_94_with_GostR3410_94 = `enum OBJ_id_GostR3411_94_with_GostR3410_94 = OBJ_member_body , 643L , 2L , 2L , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3411_94_with_GostR3410_94); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3411_94_with_GostR3410_94);
        }
    }




    static if(!is(typeof(SN_id_GostR3411_94))) {
        private enum enumMixinStr_SN_id_GostR3411_94 = `enum SN_id_GostR3411_94 = "md_gost94";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3411_94); }))) {
            mixin(enumMixinStr_SN_id_GostR3411_94);
        }
    }




    static if(!is(typeof(LN_id_GostR3411_94))) {
        private enum enumMixinStr_LN_id_GostR3411_94 = `enum LN_id_GostR3411_94 = "GOST R 34.11-94";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_GostR3411_94); }))) {
            mixin(enumMixinStr_LN_id_GostR3411_94);
        }
    }




    static if(!is(typeof(NID_id_GostR3411_94))) {
        private enum enumMixinStr_NID_id_GostR3411_94 = `enum NID_id_GostR3411_94 = 809;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3411_94); }))) {
            mixin(enumMixinStr_NID_id_GostR3411_94);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3411_94))) {
        private enum enumMixinStr_OBJ_id_GostR3411_94 = `enum OBJ_id_GostR3411_94 = OBJ_member_body , 643L , 2L , 2L , 9L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3411_94); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3411_94);
        }
    }




    static if(!is(typeof(SN_id_HMACGostR3411_94))) {
        private enum enumMixinStr_SN_id_HMACGostR3411_94 = `enum SN_id_HMACGostR3411_94 = "id-HMACGostR3411-94";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_HMACGostR3411_94); }))) {
            mixin(enumMixinStr_SN_id_HMACGostR3411_94);
        }
    }




    static if(!is(typeof(LN_id_HMACGostR3411_94))) {
        private enum enumMixinStr_LN_id_HMACGostR3411_94 = `enum LN_id_HMACGostR3411_94 = "HMAC GOST 34.11-94";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_HMACGostR3411_94); }))) {
            mixin(enumMixinStr_LN_id_HMACGostR3411_94);
        }
    }




    static if(!is(typeof(NID_id_HMACGostR3411_94))) {
        private enum enumMixinStr_NID_id_HMACGostR3411_94 = `enum NID_id_HMACGostR3411_94 = 810;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_HMACGostR3411_94); }))) {
            mixin(enumMixinStr_NID_id_HMACGostR3411_94);
        }
    }




    static if(!is(typeof(OBJ_id_HMACGostR3411_94))) {
        private enum enumMixinStr_OBJ_id_HMACGostR3411_94 = `enum OBJ_id_HMACGostR3411_94 = OBJ_member_body , 643L , 2L , 2L , 10L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_HMACGostR3411_94); }))) {
            mixin(enumMixinStr_OBJ_id_HMACGostR3411_94);
        }
    }




    static if(!is(typeof(SN_id_GostR3410_2001))) {
        private enum enumMixinStr_SN_id_GostR3410_2001 = `enum SN_id_GostR3410_2001 = "gost2001";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3410_2001); }))) {
            mixin(enumMixinStr_SN_id_GostR3410_2001);
        }
    }




    static if(!is(typeof(LN_id_GostR3410_2001))) {
        private enum enumMixinStr_LN_id_GostR3410_2001 = `enum LN_id_GostR3410_2001 = "GOST R 34.10-2001";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_GostR3410_2001); }))) {
            mixin(enumMixinStr_LN_id_GostR3410_2001);
        }
    }




    static if(!is(typeof(NID_id_GostR3410_2001))) {
        private enum enumMixinStr_NID_id_GostR3410_2001 = `enum NID_id_GostR3410_2001 = 811;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3410_2001); }))) {
            mixin(enumMixinStr_NID_id_GostR3410_2001);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3410_2001))) {
        private enum enumMixinStr_OBJ_id_GostR3410_2001 = `enum OBJ_id_GostR3410_2001 = OBJ_member_body , 643L , 2L , 2L , 19L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3410_2001); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3410_2001);
        }
    }




    static if(!is(typeof(SN_id_GostR3410_94))) {
        private enum enumMixinStr_SN_id_GostR3410_94 = `enum SN_id_GostR3410_94 = "gost94";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3410_94); }))) {
            mixin(enumMixinStr_SN_id_GostR3410_94);
        }
    }




    static if(!is(typeof(LN_id_GostR3410_94))) {
        private enum enumMixinStr_LN_id_GostR3410_94 = `enum LN_id_GostR3410_94 = "GOST R 34.10-94";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_GostR3410_94); }))) {
            mixin(enumMixinStr_LN_id_GostR3410_94);
        }
    }




    static if(!is(typeof(NID_id_GostR3410_94))) {
        private enum enumMixinStr_NID_id_GostR3410_94 = `enum NID_id_GostR3410_94 = 812;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3410_94); }))) {
            mixin(enumMixinStr_NID_id_GostR3410_94);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3410_94))) {
        private enum enumMixinStr_OBJ_id_GostR3410_94 = `enum OBJ_id_GostR3410_94 = OBJ_member_body , 643L , 2L , 2L , 20L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3410_94); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3410_94);
        }
    }




    static if(!is(typeof(SN_id_Gost28147_89))) {
        private enum enumMixinStr_SN_id_Gost28147_89 = `enum SN_id_Gost28147_89 = "gost89";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_Gost28147_89); }))) {
            mixin(enumMixinStr_SN_id_Gost28147_89);
        }
    }




    static if(!is(typeof(LN_id_Gost28147_89))) {
        private enum enumMixinStr_LN_id_Gost28147_89 = `enum LN_id_Gost28147_89 = "GOST 28147-89";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_Gost28147_89); }))) {
            mixin(enumMixinStr_LN_id_Gost28147_89);
        }
    }




    static if(!is(typeof(NID_id_Gost28147_89))) {
        private enum enumMixinStr_NID_id_Gost28147_89 = `enum NID_id_Gost28147_89 = 813;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_Gost28147_89); }))) {
            mixin(enumMixinStr_NID_id_Gost28147_89);
        }
    }




    static if(!is(typeof(OBJ_id_Gost28147_89))) {
        private enum enumMixinStr_OBJ_id_Gost28147_89 = `enum OBJ_id_Gost28147_89 = OBJ_member_body , 643L , 2L , 2L , 21L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_Gost28147_89); }))) {
            mixin(enumMixinStr_OBJ_id_Gost28147_89);
        }
    }




    static if(!is(typeof(SN_gost89_cnt))) {
        private enum enumMixinStr_SN_gost89_cnt = `enum SN_gost89_cnt = "gost89-cnt";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_gost89_cnt); }))) {
            mixin(enumMixinStr_SN_gost89_cnt);
        }
    }




    static if(!is(typeof(NID_gost89_cnt))) {
        private enum enumMixinStr_NID_gost89_cnt = `enum NID_gost89_cnt = 814;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_gost89_cnt); }))) {
            mixin(enumMixinStr_NID_gost89_cnt);
        }
    }




    static if(!is(typeof(SN_gost89_cnt_12))) {
        private enum enumMixinStr_SN_gost89_cnt_12 = `enum SN_gost89_cnt_12 = "gost89-cnt-12";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_gost89_cnt_12); }))) {
            mixin(enumMixinStr_SN_gost89_cnt_12);
        }
    }




    static if(!is(typeof(NID_gost89_cnt_12))) {
        private enum enumMixinStr_NID_gost89_cnt_12 = `enum NID_gost89_cnt_12 = 975;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_gost89_cnt_12); }))) {
            mixin(enumMixinStr_NID_gost89_cnt_12);
        }
    }




    static if(!is(typeof(SN_gost89_cbc))) {
        private enum enumMixinStr_SN_gost89_cbc = `enum SN_gost89_cbc = "gost89-cbc";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_gost89_cbc); }))) {
            mixin(enumMixinStr_SN_gost89_cbc);
        }
    }




    static if(!is(typeof(NID_gost89_cbc))) {
        private enum enumMixinStr_NID_gost89_cbc = `enum NID_gost89_cbc = 1009;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_gost89_cbc); }))) {
            mixin(enumMixinStr_NID_gost89_cbc);
        }
    }




    static if(!is(typeof(SN_gost89_ecb))) {
        private enum enumMixinStr_SN_gost89_ecb = `enum SN_gost89_ecb = "gost89-ecb";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_gost89_ecb); }))) {
            mixin(enumMixinStr_SN_gost89_ecb);
        }
    }




    static if(!is(typeof(NID_gost89_ecb))) {
        private enum enumMixinStr_NID_gost89_ecb = `enum NID_gost89_ecb = 1010;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_gost89_ecb); }))) {
            mixin(enumMixinStr_NID_gost89_ecb);
        }
    }




    static if(!is(typeof(SN_gost89_ctr))) {
        private enum enumMixinStr_SN_gost89_ctr = `enum SN_gost89_ctr = "gost89-ctr";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_gost89_ctr); }))) {
            mixin(enumMixinStr_SN_gost89_ctr);
        }
    }




    static if(!is(typeof(NID_gost89_ctr))) {
        private enum enumMixinStr_NID_gost89_ctr = `enum NID_gost89_ctr = 1011;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_gost89_ctr); }))) {
            mixin(enumMixinStr_NID_gost89_ctr);
        }
    }




    static if(!is(typeof(SN_id_Gost28147_89_MAC))) {
        private enum enumMixinStr_SN_id_Gost28147_89_MAC = `enum SN_id_Gost28147_89_MAC = "gost-mac";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_Gost28147_89_MAC); }))) {
            mixin(enumMixinStr_SN_id_Gost28147_89_MAC);
        }
    }




    static if(!is(typeof(LN_id_Gost28147_89_MAC))) {
        private enum enumMixinStr_LN_id_Gost28147_89_MAC = `enum LN_id_Gost28147_89_MAC = "GOST 28147-89 MAC";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_Gost28147_89_MAC); }))) {
            mixin(enumMixinStr_LN_id_Gost28147_89_MAC);
        }
    }




    static if(!is(typeof(NID_id_Gost28147_89_MAC))) {
        private enum enumMixinStr_NID_id_Gost28147_89_MAC = `enum NID_id_Gost28147_89_MAC = 815;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_Gost28147_89_MAC); }))) {
            mixin(enumMixinStr_NID_id_Gost28147_89_MAC);
        }
    }




    static if(!is(typeof(OBJ_id_Gost28147_89_MAC))) {
        private enum enumMixinStr_OBJ_id_Gost28147_89_MAC = `enum OBJ_id_Gost28147_89_MAC = OBJ_member_body , 643L , 2L , 2L , 22L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_Gost28147_89_MAC); }))) {
            mixin(enumMixinStr_OBJ_id_Gost28147_89_MAC);
        }
    }




    static if(!is(typeof(SN_gost_mac_12))) {
        private enum enumMixinStr_SN_gost_mac_12 = `enum SN_gost_mac_12 = "gost-mac-12";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_gost_mac_12); }))) {
            mixin(enumMixinStr_SN_gost_mac_12);
        }
    }




    static if(!is(typeof(NID_gost_mac_12))) {
        private enum enumMixinStr_NID_gost_mac_12 = `enum NID_gost_mac_12 = 976;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_gost_mac_12); }))) {
            mixin(enumMixinStr_NID_gost_mac_12);
        }
    }




    static if(!is(typeof(SN_id_GostR3411_94_prf))) {
        private enum enumMixinStr_SN_id_GostR3411_94_prf = `enum SN_id_GostR3411_94_prf = "prf-gostr3411-94";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3411_94_prf); }))) {
            mixin(enumMixinStr_SN_id_GostR3411_94_prf);
        }
    }




    static if(!is(typeof(LN_id_GostR3411_94_prf))) {
        private enum enumMixinStr_LN_id_GostR3411_94_prf = `enum LN_id_GostR3411_94_prf = "GOST R 34.11-94 PRF";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_GostR3411_94_prf); }))) {
            mixin(enumMixinStr_LN_id_GostR3411_94_prf);
        }
    }




    static if(!is(typeof(NID_id_GostR3411_94_prf))) {
        private enum enumMixinStr_NID_id_GostR3411_94_prf = `enum NID_id_GostR3411_94_prf = 816;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3411_94_prf); }))) {
            mixin(enumMixinStr_NID_id_GostR3411_94_prf);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3411_94_prf))) {
        private enum enumMixinStr_OBJ_id_GostR3411_94_prf = `enum OBJ_id_GostR3411_94_prf = OBJ_member_body , 643L , 2L , 2L , 23L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3411_94_prf); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3411_94_prf);
        }
    }




    static if(!is(typeof(SN_id_GostR3410_2001DH))) {
        private enum enumMixinStr_SN_id_GostR3410_2001DH = `enum SN_id_GostR3410_2001DH = "id-GostR3410-2001DH";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3410_2001DH); }))) {
            mixin(enumMixinStr_SN_id_GostR3410_2001DH);
        }
    }




    static if(!is(typeof(LN_id_GostR3410_2001DH))) {
        private enum enumMixinStr_LN_id_GostR3410_2001DH = `enum LN_id_GostR3410_2001DH = "GOST R 34.10-2001 DH";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_GostR3410_2001DH); }))) {
            mixin(enumMixinStr_LN_id_GostR3410_2001DH);
        }
    }




    static if(!is(typeof(NID_id_GostR3410_2001DH))) {
        private enum enumMixinStr_NID_id_GostR3410_2001DH = `enum NID_id_GostR3410_2001DH = 817;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3410_2001DH); }))) {
            mixin(enumMixinStr_NID_id_GostR3410_2001DH);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3410_2001DH))) {
        private enum enumMixinStr_OBJ_id_GostR3410_2001DH = `enum OBJ_id_GostR3410_2001DH = OBJ_member_body , 643L , 2L , 2L , 98L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3410_2001DH); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3410_2001DH);
        }
    }




    static if(!is(typeof(SN_id_GostR3410_94DH))) {
        private enum enumMixinStr_SN_id_GostR3410_94DH = `enum SN_id_GostR3410_94DH = "id-GostR3410-94DH";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3410_94DH); }))) {
            mixin(enumMixinStr_SN_id_GostR3410_94DH);
        }
    }




    static if(!is(typeof(LN_id_GostR3410_94DH))) {
        private enum enumMixinStr_LN_id_GostR3410_94DH = `enum LN_id_GostR3410_94DH = "GOST R 34.10-94 DH";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_GostR3410_94DH); }))) {
            mixin(enumMixinStr_LN_id_GostR3410_94DH);
        }
    }




    static if(!is(typeof(NID_id_GostR3410_94DH))) {
        private enum enumMixinStr_NID_id_GostR3410_94DH = `enum NID_id_GostR3410_94DH = 818;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3410_94DH); }))) {
            mixin(enumMixinStr_NID_id_GostR3410_94DH);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3410_94DH))) {
        private enum enumMixinStr_OBJ_id_GostR3410_94DH = `enum OBJ_id_GostR3410_94DH = OBJ_member_body , 643L , 2L , 2L , 99L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3410_94DH); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3410_94DH);
        }
    }




    static if(!is(typeof(SN_id_Gost28147_89_CryptoPro_KeyMeshing))) {
        private enum enumMixinStr_SN_id_Gost28147_89_CryptoPro_KeyMeshing = `enum SN_id_Gost28147_89_CryptoPro_KeyMeshing = "id-Gost28147-89-CryptoPro-KeyMeshing";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_Gost28147_89_CryptoPro_KeyMeshing); }))) {
            mixin(enumMixinStr_SN_id_Gost28147_89_CryptoPro_KeyMeshing);
        }
    }




    static if(!is(typeof(NID_id_Gost28147_89_CryptoPro_KeyMeshing))) {
        private enum enumMixinStr_NID_id_Gost28147_89_CryptoPro_KeyMeshing = `enum NID_id_Gost28147_89_CryptoPro_KeyMeshing = 819;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_Gost28147_89_CryptoPro_KeyMeshing); }))) {
            mixin(enumMixinStr_NID_id_Gost28147_89_CryptoPro_KeyMeshing);
        }
    }




    static if(!is(typeof(OBJ_id_Gost28147_89_CryptoPro_KeyMeshing))) {
        private enum enumMixinStr_OBJ_id_Gost28147_89_CryptoPro_KeyMeshing = `enum OBJ_id_Gost28147_89_CryptoPro_KeyMeshing = OBJ_member_body , 643L , 2L , 2L , 14L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_Gost28147_89_CryptoPro_KeyMeshing); }))) {
            mixin(enumMixinStr_OBJ_id_Gost28147_89_CryptoPro_KeyMeshing);
        }
    }




    static if(!is(typeof(SN_id_Gost28147_89_None_KeyMeshing))) {
        private enum enumMixinStr_SN_id_Gost28147_89_None_KeyMeshing = `enum SN_id_Gost28147_89_None_KeyMeshing = "id-Gost28147-89-None-KeyMeshing";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_Gost28147_89_None_KeyMeshing); }))) {
            mixin(enumMixinStr_SN_id_Gost28147_89_None_KeyMeshing);
        }
    }




    static if(!is(typeof(NID_id_Gost28147_89_None_KeyMeshing))) {
        private enum enumMixinStr_NID_id_Gost28147_89_None_KeyMeshing = `enum NID_id_Gost28147_89_None_KeyMeshing = 820;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_Gost28147_89_None_KeyMeshing); }))) {
            mixin(enumMixinStr_NID_id_Gost28147_89_None_KeyMeshing);
        }
    }




    static if(!is(typeof(OBJ_id_Gost28147_89_None_KeyMeshing))) {
        private enum enumMixinStr_OBJ_id_Gost28147_89_None_KeyMeshing = `enum OBJ_id_Gost28147_89_None_KeyMeshing = OBJ_member_body , 643L , 2L , 2L , 14L , 0L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_Gost28147_89_None_KeyMeshing); }))) {
            mixin(enumMixinStr_OBJ_id_Gost28147_89_None_KeyMeshing);
        }
    }




    static if(!is(typeof(SN_id_GostR3411_94_TestParamSet))) {
        private enum enumMixinStr_SN_id_GostR3411_94_TestParamSet = `enum SN_id_GostR3411_94_TestParamSet = "id-GostR3411-94-TestParamSet";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3411_94_TestParamSet); }))) {
            mixin(enumMixinStr_SN_id_GostR3411_94_TestParamSet);
        }
    }




    static if(!is(typeof(NID_id_GostR3411_94_TestParamSet))) {
        private enum enumMixinStr_NID_id_GostR3411_94_TestParamSet = `enum NID_id_GostR3411_94_TestParamSet = 821;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3411_94_TestParamSet); }))) {
            mixin(enumMixinStr_NID_id_GostR3411_94_TestParamSet);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3411_94_TestParamSet))) {
        private enum enumMixinStr_OBJ_id_GostR3411_94_TestParamSet = `enum OBJ_id_GostR3411_94_TestParamSet = OBJ_member_body , 643L , 2L , 2L , 30L , 0L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3411_94_TestParamSet); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3411_94_TestParamSet);
        }
    }




    static if(!is(typeof(SN_id_GostR3411_94_CryptoProParamSet))) {
        private enum enumMixinStr_SN_id_GostR3411_94_CryptoProParamSet = `enum SN_id_GostR3411_94_CryptoProParamSet = "id-GostR3411-94-CryptoProParamSet";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3411_94_CryptoProParamSet); }))) {
            mixin(enumMixinStr_SN_id_GostR3411_94_CryptoProParamSet);
        }
    }




    static if(!is(typeof(NID_id_GostR3411_94_CryptoProParamSet))) {
        private enum enumMixinStr_NID_id_GostR3411_94_CryptoProParamSet = `enum NID_id_GostR3411_94_CryptoProParamSet = 822;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3411_94_CryptoProParamSet); }))) {
            mixin(enumMixinStr_NID_id_GostR3411_94_CryptoProParamSet);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3411_94_CryptoProParamSet))) {
        private enum enumMixinStr_OBJ_id_GostR3411_94_CryptoProParamSet = `enum OBJ_id_GostR3411_94_CryptoProParamSet = OBJ_member_body , 643L , 2L , 2L , 30L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3411_94_CryptoProParamSet); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3411_94_CryptoProParamSet);
        }
    }




    static if(!is(typeof(SN_id_Gost28147_89_TestParamSet))) {
        private enum enumMixinStr_SN_id_Gost28147_89_TestParamSet = `enum SN_id_Gost28147_89_TestParamSet = "id-Gost28147-89-TestParamSet";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_Gost28147_89_TestParamSet); }))) {
            mixin(enumMixinStr_SN_id_Gost28147_89_TestParamSet);
        }
    }




    static if(!is(typeof(NID_id_Gost28147_89_TestParamSet))) {
        private enum enumMixinStr_NID_id_Gost28147_89_TestParamSet = `enum NID_id_Gost28147_89_TestParamSet = 823;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_Gost28147_89_TestParamSet); }))) {
            mixin(enumMixinStr_NID_id_Gost28147_89_TestParamSet);
        }
    }




    static if(!is(typeof(OBJ_id_Gost28147_89_TestParamSet))) {
        private enum enumMixinStr_OBJ_id_Gost28147_89_TestParamSet = `enum OBJ_id_Gost28147_89_TestParamSet = OBJ_member_body , 643L , 2L , 2L , 31L , 0L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_Gost28147_89_TestParamSet); }))) {
            mixin(enumMixinStr_OBJ_id_Gost28147_89_TestParamSet);
        }
    }




    static if(!is(typeof(SN_id_Gost28147_89_CryptoPro_A_ParamSet))) {
        private enum enumMixinStr_SN_id_Gost28147_89_CryptoPro_A_ParamSet = `enum SN_id_Gost28147_89_CryptoPro_A_ParamSet = "id-Gost28147-89-CryptoPro-A-ParamSet";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_Gost28147_89_CryptoPro_A_ParamSet); }))) {
            mixin(enumMixinStr_SN_id_Gost28147_89_CryptoPro_A_ParamSet);
        }
    }




    static if(!is(typeof(NID_id_Gost28147_89_CryptoPro_A_ParamSet))) {
        private enum enumMixinStr_NID_id_Gost28147_89_CryptoPro_A_ParamSet = `enum NID_id_Gost28147_89_CryptoPro_A_ParamSet = 824;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_Gost28147_89_CryptoPro_A_ParamSet); }))) {
            mixin(enumMixinStr_NID_id_Gost28147_89_CryptoPro_A_ParamSet);
        }
    }




    static if(!is(typeof(OBJ_id_Gost28147_89_CryptoPro_A_ParamSet))) {
        private enum enumMixinStr_OBJ_id_Gost28147_89_CryptoPro_A_ParamSet = `enum OBJ_id_Gost28147_89_CryptoPro_A_ParamSet = OBJ_member_body , 643L , 2L , 2L , 31L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_Gost28147_89_CryptoPro_A_ParamSet); }))) {
            mixin(enumMixinStr_OBJ_id_Gost28147_89_CryptoPro_A_ParamSet);
        }
    }




    static if(!is(typeof(SN_id_Gost28147_89_CryptoPro_B_ParamSet))) {
        private enum enumMixinStr_SN_id_Gost28147_89_CryptoPro_B_ParamSet = `enum SN_id_Gost28147_89_CryptoPro_B_ParamSet = "id-Gost28147-89-CryptoPro-B-ParamSet";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_Gost28147_89_CryptoPro_B_ParamSet); }))) {
            mixin(enumMixinStr_SN_id_Gost28147_89_CryptoPro_B_ParamSet);
        }
    }




    static if(!is(typeof(NID_id_Gost28147_89_CryptoPro_B_ParamSet))) {
        private enum enumMixinStr_NID_id_Gost28147_89_CryptoPro_B_ParamSet = `enum NID_id_Gost28147_89_CryptoPro_B_ParamSet = 825;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_Gost28147_89_CryptoPro_B_ParamSet); }))) {
            mixin(enumMixinStr_NID_id_Gost28147_89_CryptoPro_B_ParamSet);
        }
    }




    static if(!is(typeof(OBJ_id_Gost28147_89_CryptoPro_B_ParamSet))) {
        private enum enumMixinStr_OBJ_id_Gost28147_89_CryptoPro_B_ParamSet = `enum OBJ_id_Gost28147_89_CryptoPro_B_ParamSet = OBJ_member_body , 643L , 2L , 2L , 31L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_Gost28147_89_CryptoPro_B_ParamSet); }))) {
            mixin(enumMixinStr_OBJ_id_Gost28147_89_CryptoPro_B_ParamSet);
        }
    }




    static if(!is(typeof(SN_id_Gost28147_89_CryptoPro_C_ParamSet))) {
        private enum enumMixinStr_SN_id_Gost28147_89_CryptoPro_C_ParamSet = `enum SN_id_Gost28147_89_CryptoPro_C_ParamSet = "id-Gost28147-89-CryptoPro-C-ParamSet";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_Gost28147_89_CryptoPro_C_ParamSet); }))) {
            mixin(enumMixinStr_SN_id_Gost28147_89_CryptoPro_C_ParamSet);
        }
    }




    static if(!is(typeof(NID_id_Gost28147_89_CryptoPro_C_ParamSet))) {
        private enum enumMixinStr_NID_id_Gost28147_89_CryptoPro_C_ParamSet = `enum NID_id_Gost28147_89_CryptoPro_C_ParamSet = 826;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_Gost28147_89_CryptoPro_C_ParamSet); }))) {
            mixin(enumMixinStr_NID_id_Gost28147_89_CryptoPro_C_ParamSet);
        }
    }




    static if(!is(typeof(OBJ_id_Gost28147_89_CryptoPro_C_ParamSet))) {
        private enum enumMixinStr_OBJ_id_Gost28147_89_CryptoPro_C_ParamSet = `enum OBJ_id_Gost28147_89_CryptoPro_C_ParamSet = OBJ_member_body , 643L , 2L , 2L , 31L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_Gost28147_89_CryptoPro_C_ParamSet); }))) {
            mixin(enumMixinStr_OBJ_id_Gost28147_89_CryptoPro_C_ParamSet);
        }
    }




    static if(!is(typeof(SN_id_Gost28147_89_CryptoPro_D_ParamSet))) {
        private enum enumMixinStr_SN_id_Gost28147_89_CryptoPro_D_ParamSet = `enum SN_id_Gost28147_89_CryptoPro_D_ParamSet = "id-Gost28147-89-CryptoPro-D-ParamSet";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_Gost28147_89_CryptoPro_D_ParamSet); }))) {
            mixin(enumMixinStr_SN_id_Gost28147_89_CryptoPro_D_ParamSet);
        }
    }




    static if(!is(typeof(NID_id_Gost28147_89_CryptoPro_D_ParamSet))) {
        private enum enumMixinStr_NID_id_Gost28147_89_CryptoPro_D_ParamSet = `enum NID_id_Gost28147_89_CryptoPro_D_ParamSet = 827;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_Gost28147_89_CryptoPro_D_ParamSet); }))) {
            mixin(enumMixinStr_NID_id_Gost28147_89_CryptoPro_D_ParamSet);
        }
    }




    static if(!is(typeof(OBJ_id_Gost28147_89_CryptoPro_D_ParamSet))) {
        private enum enumMixinStr_OBJ_id_Gost28147_89_CryptoPro_D_ParamSet = `enum OBJ_id_Gost28147_89_CryptoPro_D_ParamSet = OBJ_member_body , 643L , 2L , 2L , 31L , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_Gost28147_89_CryptoPro_D_ParamSet); }))) {
            mixin(enumMixinStr_OBJ_id_Gost28147_89_CryptoPro_D_ParamSet);
        }
    }




    static if(!is(typeof(SN_id_Gost28147_89_CryptoPro_Oscar_1_1_ParamSet))) {
        private enum enumMixinStr_SN_id_Gost28147_89_CryptoPro_Oscar_1_1_ParamSet = `enum SN_id_Gost28147_89_CryptoPro_Oscar_1_1_ParamSet = "id-Gost28147-89-CryptoPro-Oscar-1-1-ParamSet";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_Gost28147_89_CryptoPro_Oscar_1_1_ParamSet); }))) {
            mixin(enumMixinStr_SN_id_Gost28147_89_CryptoPro_Oscar_1_1_ParamSet);
        }
    }




    static if(!is(typeof(NID_id_Gost28147_89_CryptoPro_Oscar_1_1_ParamSet))) {
        private enum enumMixinStr_NID_id_Gost28147_89_CryptoPro_Oscar_1_1_ParamSet = `enum NID_id_Gost28147_89_CryptoPro_Oscar_1_1_ParamSet = 828;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_Gost28147_89_CryptoPro_Oscar_1_1_ParamSet); }))) {
            mixin(enumMixinStr_NID_id_Gost28147_89_CryptoPro_Oscar_1_1_ParamSet);
        }
    }




    static if(!is(typeof(OBJ_id_Gost28147_89_CryptoPro_Oscar_1_1_ParamSet))) {
        private enum enumMixinStr_OBJ_id_Gost28147_89_CryptoPro_Oscar_1_1_ParamSet = `enum OBJ_id_Gost28147_89_CryptoPro_Oscar_1_1_ParamSet = OBJ_member_body , 643L , 2L , 2L , 31L , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_Gost28147_89_CryptoPro_Oscar_1_1_ParamSet); }))) {
            mixin(enumMixinStr_OBJ_id_Gost28147_89_CryptoPro_Oscar_1_1_ParamSet);
        }
    }




    static if(!is(typeof(SN_id_Gost28147_89_CryptoPro_Oscar_1_0_ParamSet))) {
        private enum enumMixinStr_SN_id_Gost28147_89_CryptoPro_Oscar_1_0_ParamSet = `enum SN_id_Gost28147_89_CryptoPro_Oscar_1_0_ParamSet = "id-Gost28147-89-CryptoPro-Oscar-1-0-ParamSet";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_Gost28147_89_CryptoPro_Oscar_1_0_ParamSet); }))) {
            mixin(enumMixinStr_SN_id_Gost28147_89_CryptoPro_Oscar_1_0_ParamSet);
        }
    }




    static if(!is(typeof(NID_id_Gost28147_89_CryptoPro_Oscar_1_0_ParamSet))) {
        private enum enumMixinStr_NID_id_Gost28147_89_CryptoPro_Oscar_1_0_ParamSet = `enum NID_id_Gost28147_89_CryptoPro_Oscar_1_0_ParamSet = 829;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_Gost28147_89_CryptoPro_Oscar_1_0_ParamSet); }))) {
            mixin(enumMixinStr_NID_id_Gost28147_89_CryptoPro_Oscar_1_0_ParamSet);
        }
    }




    static if(!is(typeof(OBJ_id_Gost28147_89_CryptoPro_Oscar_1_0_ParamSet))) {
        private enum enumMixinStr_OBJ_id_Gost28147_89_CryptoPro_Oscar_1_0_ParamSet = `enum OBJ_id_Gost28147_89_CryptoPro_Oscar_1_0_ParamSet = OBJ_member_body , 643L , 2L , 2L , 31L , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_Gost28147_89_CryptoPro_Oscar_1_0_ParamSet); }))) {
            mixin(enumMixinStr_OBJ_id_Gost28147_89_CryptoPro_Oscar_1_0_ParamSet);
        }
    }




    static if(!is(typeof(SN_id_Gost28147_89_CryptoPro_RIC_1_ParamSet))) {
        private enum enumMixinStr_SN_id_Gost28147_89_CryptoPro_RIC_1_ParamSet = `enum SN_id_Gost28147_89_CryptoPro_RIC_1_ParamSet = "id-Gost28147-89-CryptoPro-RIC-1-ParamSet";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_Gost28147_89_CryptoPro_RIC_1_ParamSet); }))) {
            mixin(enumMixinStr_SN_id_Gost28147_89_CryptoPro_RIC_1_ParamSet);
        }
    }




    static if(!is(typeof(NID_id_Gost28147_89_CryptoPro_RIC_1_ParamSet))) {
        private enum enumMixinStr_NID_id_Gost28147_89_CryptoPro_RIC_1_ParamSet = `enum NID_id_Gost28147_89_CryptoPro_RIC_1_ParamSet = 830;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_Gost28147_89_CryptoPro_RIC_1_ParamSet); }))) {
            mixin(enumMixinStr_NID_id_Gost28147_89_CryptoPro_RIC_1_ParamSet);
        }
    }




    static if(!is(typeof(OBJ_id_Gost28147_89_CryptoPro_RIC_1_ParamSet))) {
        private enum enumMixinStr_OBJ_id_Gost28147_89_CryptoPro_RIC_1_ParamSet = `enum OBJ_id_Gost28147_89_CryptoPro_RIC_1_ParamSet = OBJ_member_body , 643L , 2L , 2L , 31L , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_Gost28147_89_CryptoPro_RIC_1_ParamSet); }))) {
            mixin(enumMixinStr_OBJ_id_Gost28147_89_CryptoPro_RIC_1_ParamSet);
        }
    }




    static if(!is(typeof(SN_id_GostR3410_94_TestParamSet))) {
        private enum enumMixinStr_SN_id_GostR3410_94_TestParamSet = `enum SN_id_GostR3410_94_TestParamSet = "id-GostR3410-94-TestParamSet";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3410_94_TestParamSet); }))) {
            mixin(enumMixinStr_SN_id_GostR3410_94_TestParamSet);
        }
    }




    static if(!is(typeof(NID_id_GostR3410_94_TestParamSet))) {
        private enum enumMixinStr_NID_id_GostR3410_94_TestParamSet = `enum NID_id_GostR3410_94_TestParamSet = 831;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3410_94_TestParamSet); }))) {
            mixin(enumMixinStr_NID_id_GostR3410_94_TestParamSet);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3410_94_TestParamSet))) {
        private enum enumMixinStr_OBJ_id_GostR3410_94_TestParamSet = `enum OBJ_id_GostR3410_94_TestParamSet = OBJ_member_body , 643L , 2L , 2L , 32L , 0L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3410_94_TestParamSet); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3410_94_TestParamSet);
        }
    }




    static if(!is(typeof(SN_id_GostR3410_94_CryptoPro_A_ParamSet))) {
        private enum enumMixinStr_SN_id_GostR3410_94_CryptoPro_A_ParamSet = `enum SN_id_GostR3410_94_CryptoPro_A_ParamSet = "id-GostR3410-94-CryptoPro-A-ParamSet";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3410_94_CryptoPro_A_ParamSet); }))) {
            mixin(enumMixinStr_SN_id_GostR3410_94_CryptoPro_A_ParamSet);
        }
    }




    static if(!is(typeof(NID_id_GostR3410_94_CryptoPro_A_ParamSet))) {
        private enum enumMixinStr_NID_id_GostR3410_94_CryptoPro_A_ParamSet = `enum NID_id_GostR3410_94_CryptoPro_A_ParamSet = 832;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3410_94_CryptoPro_A_ParamSet); }))) {
            mixin(enumMixinStr_NID_id_GostR3410_94_CryptoPro_A_ParamSet);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3410_94_CryptoPro_A_ParamSet))) {
        private enum enumMixinStr_OBJ_id_GostR3410_94_CryptoPro_A_ParamSet = `enum OBJ_id_GostR3410_94_CryptoPro_A_ParamSet = OBJ_member_body , 643L , 2L , 2L , 32L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3410_94_CryptoPro_A_ParamSet); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3410_94_CryptoPro_A_ParamSet);
        }
    }




    static if(!is(typeof(SN_id_GostR3410_94_CryptoPro_B_ParamSet))) {
        private enum enumMixinStr_SN_id_GostR3410_94_CryptoPro_B_ParamSet = `enum SN_id_GostR3410_94_CryptoPro_B_ParamSet = "id-GostR3410-94-CryptoPro-B-ParamSet";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3410_94_CryptoPro_B_ParamSet); }))) {
            mixin(enumMixinStr_SN_id_GostR3410_94_CryptoPro_B_ParamSet);
        }
    }




    static if(!is(typeof(NID_id_GostR3410_94_CryptoPro_B_ParamSet))) {
        private enum enumMixinStr_NID_id_GostR3410_94_CryptoPro_B_ParamSet = `enum NID_id_GostR3410_94_CryptoPro_B_ParamSet = 833;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3410_94_CryptoPro_B_ParamSet); }))) {
            mixin(enumMixinStr_NID_id_GostR3410_94_CryptoPro_B_ParamSet);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3410_94_CryptoPro_B_ParamSet))) {
        private enum enumMixinStr_OBJ_id_GostR3410_94_CryptoPro_B_ParamSet = `enum OBJ_id_GostR3410_94_CryptoPro_B_ParamSet = OBJ_member_body , 643L , 2L , 2L , 32L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3410_94_CryptoPro_B_ParamSet); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3410_94_CryptoPro_B_ParamSet);
        }
    }




    static if(!is(typeof(SN_id_GostR3410_94_CryptoPro_C_ParamSet))) {
        private enum enumMixinStr_SN_id_GostR3410_94_CryptoPro_C_ParamSet = `enum SN_id_GostR3410_94_CryptoPro_C_ParamSet = "id-GostR3410-94-CryptoPro-C-ParamSet";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3410_94_CryptoPro_C_ParamSet); }))) {
            mixin(enumMixinStr_SN_id_GostR3410_94_CryptoPro_C_ParamSet);
        }
    }




    static if(!is(typeof(NID_id_GostR3410_94_CryptoPro_C_ParamSet))) {
        private enum enumMixinStr_NID_id_GostR3410_94_CryptoPro_C_ParamSet = `enum NID_id_GostR3410_94_CryptoPro_C_ParamSet = 834;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3410_94_CryptoPro_C_ParamSet); }))) {
            mixin(enumMixinStr_NID_id_GostR3410_94_CryptoPro_C_ParamSet);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3410_94_CryptoPro_C_ParamSet))) {
        private enum enumMixinStr_OBJ_id_GostR3410_94_CryptoPro_C_ParamSet = `enum OBJ_id_GostR3410_94_CryptoPro_C_ParamSet = OBJ_member_body , 643L , 2L , 2L , 32L , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3410_94_CryptoPro_C_ParamSet); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3410_94_CryptoPro_C_ParamSet);
        }
    }




    static if(!is(typeof(SN_id_GostR3410_94_CryptoPro_D_ParamSet))) {
        private enum enumMixinStr_SN_id_GostR3410_94_CryptoPro_D_ParamSet = `enum SN_id_GostR3410_94_CryptoPro_D_ParamSet = "id-GostR3410-94-CryptoPro-D-ParamSet";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3410_94_CryptoPro_D_ParamSet); }))) {
            mixin(enumMixinStr_SN_id_GostR3410_94_CryptoPro_D_ParamSet);
        }
    }




    static if(!is(typeof(NID_id_GostR3410_94_CryptoPro_D_ParamSet))) {
        private enum enumMixinStr_NID_id_GostR3410_94_CryptoPro_D_ParamSet = `enum NID_id_GostR3410_94_CryptoPro_D_ParamSet = 835;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3410_94_CryptoPro_D_ParamSet); }))) {
            mixin(enumMixinStr_NID_id_GostR3410_94_CryptoPro_D_ParamSet);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3410_94_CryptoPro_D_ParamSet))) {
        private enum enumMixinStr_OBJ_id_GostR3410_94_CryptoPro_D_ParamSet = `enum OBJ_id_GostR3410_94_CryptoPro_D_ParamSet = OBJ_member_body , 643L , 2L , 2L , 32L , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3410_94_CryptoPro_D_ParamSet); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3410_94_CryptoPro_D_ParamSet);
        }
    }




    static if(!is(typeof(SN_id_GostR3410_94_CryptoPro_XchA_ParamSet))) {
        private enum enumMixinStr_SN_id_GostR3410_94_CryptoPro_XchA_ParamSet = `enum SN_id_GostR3410_94_CryptoPro_XchA_ParamSet = "id-GostR3410-94-CryptoPro-XchA-ParamSet";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3410_94_CryptoPro_XchA_ParamSet); }))) {
            mixin(enumMixinStr_SN_id_GostR3410_94_CryptoPro_XchA_ParamSet);
        }
    }




    static if(!is(typeof(NID_id_GostR3410_94_CryptoPro_XchA_ParamSet))) {
        private enum enumMixinStr_NID_id_GostR3410_94_CryptoPro_XchA_ParamSet = `enum NID_id_GostR3410_94_CryptoPro_XchA_ParamSet = 836;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3410_94_CryptoPro_XchA_ParamSet); }))) {
            mixin(enumMixinStr_NID_id_GostR3410_94_CryptoPro_XchA_ParamSet);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3410_94_CryptoPro_XchA_ParamSet))) {
        private enum enumMixinStr_OBJ_id_GostR3410_94_CryptoPro_XchA_ParamSet = `enum OBJ_id_GostR3410_94_CryptoPro_XchA_ParamSet = OBJ_member_body , 643L , 2L , 2L , 33L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3410_94_CryptoPro_XchA_ParamSet); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3410_94_CryptoPro_XchA_ParamSet);
        }
    }




    static if(!is(typeof(SN_id_GostR3410_94_CryptoPro_XchB_ParamSet))) {
        private enum enumMixinStr_SN_id_GostR3410_94_CryptoPro_XchB_ParamSet = `enum SN_id_GostR3410_94_CryptoPro_XchB_ParamSet = "id-GostR3410-94-CryptoPro-XchB-ParamSet";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3410_94_CryptoPro_XchB_ParamSet); }))) {
            mixin(enumMixinStr_SN_id_GostR3410_94_CryptoPro_XchB_ParamSet);
        }
    }




    static if(!is(typeof(NID_id_GostR3410_94_CryptoPro_XchB_ParamSet))) {
        private enum enumMixinStr_NID_id_GostR3410_94_CryptoPro_XchB_ParamSet = `enum NID_id_GostR3410_94_CryptoPro_XchB_ParamSet = 837;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3410_94_CryptoPro_XchB_ParamSet); }))) {
            mixin(enumMixinStr_NID_id_GostR3410_94_CryptoPro_XchB_ParamSet);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3410_94_CryptoPro_XchB_ParamSet))) {
        private enum enumMixinStr_OBJ_id_GostR3410_94_CryptoPro_XchB_ParamSet = `enum OBJ_id_GostR3410_94_CryptoPro_XchB_ParamSet = OBJ_member_body , 643L , 2L , 2L , 33L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3410_94_CryptoPro_XchB_ParamSet); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3410_94_CryptoPro_XchB_ParamSet);
        }
    }




    static if(!is(typeof(SN_id_GostR3410_94_CryptoPro_XchC_ParamSet))) {
        private enum enumMixinStr_SN_id_GostR3410_94_CryptoPro_XchC_ParamSet = `enum SN_id_GostR3410_94_CryptoPro_XchC_ParamSet = "id-GostR3410-94-CryptoPro-XchC-ParamSet";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3410_94_CryptoPro_XchC_ParamSet); }))) {
            mixin(enumMixinStr_SN_id_GostR3410_94_CryptoPro_XchC_ParamSet);
        }
    }




    static if(!is(typeof(NID_id_GostR3410_94_CryptoPro_XchC_ParamSet))) {
        private enum enumMixinStr_NID_id_GostR3410_94_CryptoPro_XchC_ParamSet = `enum NID_id_GostR3410_94_CryptoPro_XchC_ParamSet = 838;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3410_94_CryptoPro_XchC_ParamSet); }))) {
            mixin(enumMixinStr_NID_id_GostR3410_94_CryptoPro_XchC_ParamSet);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3410_94_CryptoPro_XchC_ParamSet))) {
        private enum enumMixinStr_OBJ_id_GostR3410_94_CryptoPro_XchC_ParamSet = `enum OBJ_id_GostR3410_94_CryptoPro_XchC_ParamSet = OBJ_member_body , 643L , 2L , 2L , 33L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3410_94_CryptoPro_XchC_ParamSet); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3410_94_CryptoPro_XchC_ParamSet);
        }
    }




    static if(!is(typeof(SN_id_GostR3410_2001_TestParamSet))) {
        private enum enumMixinStr_SN_id_GostR3410_2001_TestParamSet = `enum SN_id_GostR3410_2001_TestParamSet = "id-GostR3410-2001-TestParamSet";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3410_2001_TestParamSet); }))) {
            mixin(enumMixinStr_SN_id_GostR3410_2001_TestParamSet);
        }
    }




    static if(!is(typeof(NID_id_GostR3410_2001_TestParamSet))) {
        private enum enumMixinStr_NID_id_GostR3410_2001_TestParamSet = `enum NID_id_GostR3410_2001_TestParamSet = 839;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3410_2001_TestParamSet); }))) {
            mixin(enumMixinStr_NID_id_GostR3410_2001_TestParamSet);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3410_2001_TestParamSet))) {
        private enum enumMixinStr_OBJ_id_GostR3410_2001_TestParamSet = `enum OBJ_id_GostR3410_2001_TestParamSet = OBJ_member_body , 643L , 2L , 2L , 35L , 0L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3410_2001_TestParamSet); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3410_2001_TestParamSet);
        }
    }




    static if(!is(typeof(SN_id_GostR3410_2001_CryptoPro_A_ParamSet))) {
        private enum enumMixinStr_SN_id_GostR3410_2001_CryptoPro_A_ParamSet = `enum SN_id_GostR3410_2001_CryptoPro_A_ParamSet = "id-GostR3410-2001-CryptoPro-A-ParamSet";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3410_2001_CryptoPro_A_ParamSet); }))) {
            mixin(enumMixinStr_SN_id_GostR3410_2001_CryptoPro_A_ParamSet);
        }
    }




    static if(!is(typeof(NID_id_GostR3410_2001_CryptoPro_A_ParamSet))) {
        private enum enumMixinStr_NID_id_GostR3410_2001_CryptoPro_A_ParamSet = `enum NID_id_GostR3410_2001_CryptoPro_A_ParamSet = 840;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3410_2001_CryptoPro_A_ParamSet); }))) {
            mixin(enumMixinStr_NID_id_GostR3410_2001_CryptoPro_A_ParamSet);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3410_2001_CryptoPro_A_ParamSet))) {
        private enum enumMixinStr_OBJ_id_GostR3410_2001_CryptoPro_A_ParamSet = `enum OBJ_id_GostR3410_2001_CryptoPro_A_ParamSet = OBJ_member_body , 643L , 2L , 2L , 35L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3410_2001_CryptoPro_A_ParamSet); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3410_2001_CryptoPro_A_ParamSet);
        }
    }




    static if(!is(typeof(SN_id_GostR3410_2001_CryptoPro_B_ParamSet))) {
        private enum enumMixinStr_SN_id_GostR3410_2001_CryptoPro_B_ParamSet = `enum SN_id_GostR3410_2001_CryptoPro_B_ParamSet = "id-GostR3410-2001-CryptoPro-B-ParamSet";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3410_2001_CryptoPro_B_ParamSet); }))) {
            mixin(enumMixinStr_SN_id_GostR3410_2001_CryptoPro_B_ParamSet);
        }
    }




    static if(!is(typeof(NID_id_GostR3410_2001_CryptoPro_B_ParamSet))) {
        private enum enumMixinStr_NID_id_GostR3410_2001_CryptoPro_B_ParamSet = `enum NID_id_GostR3410_2001_CryptoPro_B_ParamSet = 841;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3410_2001_CryptoPro_B_ParamSet); }))) {
            mixin(enumMixinStr_NID_id_GostR3410_2001_CryptoPro_B_ParamSet);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3410_2001_CryptoPro_B_ParamSet))) {
        private enum enumMixinStr_OBJ_id_GostR3410_2001_CryptoPro_B_ParamSet = `enum OBJ_id_GostR3410_2001_CryptoPro_B_ParamSet = OBJ_member_body , 643L , 2L , 2L , 35L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3410_2001_CryptoPro_B_ParamSet); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3410_2001_CryptoPro_B_ParamSet);
        }
    }




    static if(!is(typeof(SN_id_GostR3410_2001_CryptoPro_C_ParamSet))) {
        private enum enumMixinStr_SN_id_GostR3410_2001_CryptoPro_C_ParamSet = `enum SN_id_GostR3410_2001_CryptoPro_C_ParamSet = "id-GostR3410-2001-CryptoPro-C-ParamSet";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3410_2001_CryptoPro_C_ParamSet); }))) {
            mixin(enumMixinStr_SN_id_GostR3410_2001_CryptoPro_C_ParamSet);
        }
    }




    static if(!is(typeof(NID_id_GostR3410_2001_CryptoPro_C_ParamSet))) {
        private enum enumMixinStr_NID_id_GostR3410_2001_CryptoPro_C_ParamSet = `enum NID_id_GostR3410_2001_CryptoPro_C_ParamSet = 842;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3410_2001_CryptoPro_C_ParamSet); }))) {
            mixin(enumMixinStr_NID_id_GostR3410_2001_CryptoPro_C_ParamSet);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3410_2001_CryptoPro_C_ParamSet))) {
        private enum enumMixinStr_OBJ_id_GostR3410_2001_CryptoPro_C_ParamSet = `enum OBJ_id_GostR3410_2001_CryptoPro_C_ParamSet = OBJ_member_body , 643L , 2L , 2L , 35L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3410_2001_CryptoPro_C_ParamSet); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3410_2001_CryptoPro_C_ParamSet);
        }
    }




    static if(!is(typeof(SN_id_GostR3410_2001_CryptoPro_XchA_ParamSet))) {
        private enum enumMixinStr_SN_id_GostR3410_2001_CryptoPro_XchA_ParamSet = `enum SN_id_GostR3410_2001_CryptoPro_XchA_ParamSet = "id-GostR3410-2001-CryptoPro-XchA-ParamSet";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3410_2001_CryptoPro_XchA_ParamSet); }))) {
            mixin(enumMixinStr_SN_id_GostR3410_2001_CryptoPro_XchA_ParamSet);
        }
    }




    static if(!is(typeof(NID_id_GostR3410_2001_CryptoPro_XchA_ParamSet))) {
        private enum enumMixinStr_NID_id_GostR3410_2001_CryptoPro_XchA_ParamSet = `enum NID_id_GostR3410_2001_CryptoPro_XchA_ParamSet = 843;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3410_2001_CryptoPro_XchA_ParamSet); }))) {
            mixin(enumMixinStr_NID_id_GostR3410_2001_CryptoPro_XchA_ParamSet);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3410_2001_CryptoPro_XchA_ParamSet))) {
        private enum enumMixinStr_OBJ_id_GostR3410_2001_CryptoPro_XchA_ParamSet = `enum OBJ_id_GostR3410_2001_CryptoPro_XchA_ParamSet = OBJ_member_body , 643L , 2L , 2L , 36L , 0L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3410_2001_CryptoPro_XchA_ParamSet); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3410_2001_CryptoPro_XchA_ParamSet);
        }
    }




    static if(!is(typeof(SN_id_GostR3410_2001_CryptoPro_XchB_ParamSet))) {
        private enum enumMixinStr_SN_id_GostR3410_2001_CryptoPro_XchB_ParamSet = `enum SN_id_GostR3410_2001_CryptoPro_XchB_ParamSet = "id-GostR3410-2001-CryptoPro-XchB-ParamSet";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3410_2001_CryptoPro_XchB_ParamSet); }))) {
            mixin(enumMixinStr_SN_id_GostR3410_2001_CryptoPro_XchB_ParamSet);
        }
    }




    static if(!is(typeof(NID_id_GostR3410_2001_CryptoPro_XchB_ParamSet))) {
        private enum enumMixinStr_NID_id_GostR3410_2001_CryptoPro_XchB_ParamSet = `enum NID_id_GostR3410_2001_CryptoPro_XchB_ParamSet = 844;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3410_2001_CryptoPro_XchB_ParamSet); }))) {
            mixin(enumMixinStr_NID_id_GostR3410_2001_CryptoPro_XchB_ParamSet);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3410_2001_CryptoPro_XchB_ParamSet))) {
        private enum enumMixinStr_OBJ_id_GostR3410_2001_CryptoPro_XchB_ParamSet = `enum OBJ_id_GostR3410_2001_CryptoPro_XchB_ParamSet = OBJ_member_body , 643L , 2L , 2L , 36L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3410_2001_CryptoPro_XchB_ParamSet); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3410_2001_CryptoPro_XchB_ParamSet);
        }
    }




    static if(!is(typeof(SN_id_GostR3410_94_a))) {
        private enum enumMixinStr_SN_id_GostR3410_94_a = `enum SN_id_GostR3410_94_a = "id-GostR3410-94-a";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3410_94_a); }))) {
            mixin(enumMixinStr_SN_id_GostR3410_94_a);
        }
    }




    static if(!is(typeof(NID_id_GostR3410_94_a))) {
        private enum enumMixinStr_NID_id_GostR3410_94_a = `enum NID_id_GostR3410_94_a = 845;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3410_94_a); }))) {
            mixin(enumMixinStr_NID_id_GostR3410_94_a);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3410_94_a))) {
        private enum enumMixinStr_OBJ_id_GostR3410_94_a = `enum OBJ_id_GostR3410_94_a = OBJ_member_body , 643L , 2L , 2L , 20L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3410_94_a); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3410_94_a);
        }
    }




    static if(!is(typeof(SN_id_GostR3410_94_aBis))) {
        private enum enumMixinStr_SN_id_GostR3410_94_aBis = `enum SN_id_GostR3410_94_aBis = "id-GostR3410-94-aBis";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3410_94_aBis); }))) {
            mixin(enumMixinStr_SN_id_GostR3410_94_aBis);
        }
    }




    static if(!is(typeof(NID_id_GostR3410_94_aBis))) {
        private enum enumMixinStr_NID_id_GostR3410_94_aBis = `enum NID_id_GostR3410_94_aBis = 846;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3410_94_aBis); }))) {
            mixin(enumMixinStr_NID_id_GostR3410_94_aBis);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3410_94_aBis))) {
        private enum enumMixinStr_OBJ_id_GostR3410_94_aBis = `enum OBJ_id_GostR3410_94_aBis = OBJ_member_body , 643L , 2L , 2L , 20L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3410_94_aBis); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3410_94_aBis);
        }
    }




    static if(!is(typeof(SN_id_GostR3410_94_b))) {
        private enum enumMixinStr_SN_id_GostR3410_94_b = `enum SN_id_GostR3410_94_b = "id-GostR3410-94-b";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3410_94_b); }))) {
            mixin(enumMixinStr_SN_id_GostR3410_94_b);
        }
    }




    static if(!is(typeof(NID_id_GostR3410_94_b))) {
        private enum enumMixinStr_NID_id_GostR3410_94_b = `enum NID_id_GostR3410_94_b = 847;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3410_94_b); }))) {
            mixin(enumMixinStr_NID_id_GostR3410_94_b);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3410_94_b))) {
        private enum enumMixinStr_OBJ_id_GostR3410_94_b = `enum OBJ_id_GostR3410_94_b = OBJ_member_body , 643L , 2L , 2L , 20L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3410_94_b); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3410_94_b);
        }
    }




    static if(!is(typeof(SN_id_GostR3410_94_bBis))) {
        private enum enumMixinStr_SN_id_GostR3410_94_bBis = `enum SN_id_GostR3410_94_bBis = "id-GostR3410-94-bBis";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3410_94_bBis); }))) {
            mixin(enumMixinStr_SN_id_GostR3410_94_bBis);
        }
    }




    static if(!is(typeof(NID_id_GostR3410_94_bBis))) {
        private enum enumMixinStr_NID_id_GostR3410_94_bBis = `enum NID_id_GostR3410_94_bBis = 848;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3410_94_bBis); }))) {
            mixin(enumMixinStr_NID_id_GostR3410_94_bBis);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3410_94_bBis))) {
        private enum enumMixinStr_OBJ_id_GostR3410_94_bBis = `enum OBJ_id_GostR3410_94_bBis = OBJ_member_body , 643L , 2L , 2L , 20L , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3410_94_bBis); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3410_94_bBis);
        }
    }




    static if(!is(typeof(SN_id_Gost28147_89_cc))) {
        private enum enumMixinStr_SN_id_Gost28147_89_cc = `enum SN_id_Gost28147_89_cc = "id-Gost28147-89-cc";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_Gost28147_89_cc); }))) {
            mixin(enumMixinStr_SN_id_Gost28147_89_cc);
        }
    }




    static if(!is(typeof(LN_id_Gost28147_89_cc))) {
        private enum enumMixinStr_LN_id_Gost28147_89_cc = `enum LN_id_Gost28147_89_cc = "GOST 28147-89 Cryptocom ParamSet";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_Gost28147_89_cc); }))) {
            mixin(enumMixinStr_LN_id_Gost28147_89_cc);
        }
    }




    static if(!is(typeof(NID_id_Gost28147_89_cc))) {
        private enum enumMixinStr_NID_id_Gost28147_89_cc = `enum NID_id_Gost28147_89_cc = 849;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_Gost28147_89_cc); }))) {
            mixin(enumMixinStr_NID_id_Gost28147_89_cc);
        }
    }




    static if(!is(typeof(OBJ_id_Gost28147_89_cc))) {
        private enum enumMixinStr_OBJ_id_Gost28147_89_cc = `enum OBJ_id_Gost28147_89_cc = OBJ_member_body , 643L , 2L , 9L , 1L , 6L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_Gost28147_89_cc); }))) {
            mixin(enumMixinStr_OBJ_id_Gost28147_89_cc);
        }
    }




    static if(!is(typeof(SN_id_GostR3410_94_cc))) {
        private enum enumMixinStr_SN_id_GostR3410_94_cc = `enum SN_id_GostR3410_94_cc = "gost94cc";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3410_94_cc); }))) {
            mixin(enumMixinStr_SN_id_GostR3410_94_cc);
        }
    }




    static if(!is(typeof(LN_id_GostR3410_94_cc))) {
        private enum enumMixinStr_LN_id_GostR3410_94_cc = `enum LN_id_GostR3410_94_cc = "GOST 34.10-94 Cryptocom";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_GostR3410_94_cc); }))) {
            mixin(enumMixinStr_LN_id_GostR3410_94_cc);
        }
    }




    static if(!is(typeof(NID_id_GostR3410_94_cc))) {
        private enum enumMixinStr_NID_id_GostR3410_94_cc = `enum NID_id_GostR3410_94_cc = 850;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3410_94_cc); }))) {
            mixin(enumMixinStr_NID_id_GostR3410_94_cc);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3410_94_cc))) {
        private enum enumMixinStr_OBJ_id_GostR3410_94_cc = `enum OBJ_id_GostR3410_94_cc = OBJ_member_body , 643L , 2L , 9L , 1L , 5L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3410_94_cc); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3410_94_cc);
        }
    }




    static if(!is(typeof(SN_id_GostR3410_2001_cc))) {
        private enum enumMixinStr_SN_id_GostR3410_2001_cc = `enum SN_id_GostR3410_2001_cc = "gost2001cc";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3410_2001_cc); }))) {
            mixin(enumMixinStr_SN_id_GostR3410_2001_cc);
        }
    }




    static if(!is(typeof(LN_id_GostR3410_2001_cc))) {
        private enum enumMixinStr_LN_id_GostR3410_2001_cc = `enum LN_id_GostR3410_2001_cc = "GOST 34.10-2001 Cryptocom";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_GostR3410_2001_cc); }))) {
            mixin(enumMixinStr_LN_id_GostR3410_2001_cc);
        }
    }




    static if(!is(typeof(NID_id_GostR3410_2001_cc))) {
        private enum enumMixinStr_NID_id_GostR3410_2001_cc = `enum NID_id_GostR3410_2001_cc = 851;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3410_2001_cc); }))) {
            mixin(enumMixinStr_NID_id_GostR3410_2001_cc);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3410_2001_cc))) {
        private enum enumMixinStr_OBJ_id_GostR3410_2001_cc = `enum OBJ_id_GostR3410_2001_cc = OBJ_member_body , 643L , 2L , 9L , 1L , 5L , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3410_2001_cc); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3410_2001_cc);
        }
    }




    static if(!is(typeof(SN_id_GostR3411_94_with_GostR3410_94_cc))) {
        private enum enumMixinStr_SN_id_GostR3411_94_with_GostR3410_94_cc = `enum SN_id_GostR3411_94_with_GostR3410_94_cc = "id-GostR3411-94-with-GostR3410-94-cc";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3411_94_with_GostR3410_94_cc); }))) {
            mixin(enumMixinStr_SN_id_GostR3411_94_with_GostR3410_94_cc);
        }
    }




    static if(!is(typeof(LN_id_GostR3411_94_with_GostR3410_94_cc))) {
        private enum enumMixinStr_LN_id_GostR3411_94_with_GostR3410_94_cc = `enum LN_id_GostR3411_94_with_GostR3410_94_cc = "GOST R 34.11-94 with GOST R 34.10-94 Cryptocom";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_GostR3411_94_with_GostR3410_94_cc); }))) {
            mixin(enumMixinStr_LN_id_GostR3411_94_with_GostR3410_94_cc);
        }
    }




    static if(!is(typeof(NID_id_GostR3411_94_with_GostR3410_94_cc))) {
        private enum enumMixinStr_NID_id_GostR3411_94_with_GostR3410_94_cc = `enum NID_id_GostR3411_94_with_GostR3410_94_cc = 852;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3411_94_with_GostR3410_94_cc); }))) {
            mixin(enumMixinStr_NID_id_GostR3411_94_with_GostR3410_94_cc);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3411_94_with_GostR3410_94_cc))) {
        private enum enumMixinStr_OBJ_id_GostR3411_94_with_GostR3410_94_cc = `enum OBJ_id_GostR3411_94_with_GostR3410_94_cc = OBJ_member_body , 643L , 2L , 9L , 1L , 3L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3411_94_with_GostR3410_94_cc); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3411_94_with_GostR3410_94_cc);
        }
    }




    static if(!is(typeof(SN_id_GostR3411_94_with_GostR3410_2001_cc))) {
        private enum enumMixinStr_SN_id_GostR3411_94_with_GostR3410_2001_cc = `enum SN_id_GostR3411_94_with_GostR3410_2001_cc = "id-GostR3411-94-with-GostR3410-2001-cc";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3411_94_with_GostR3410_2001_cc); }))) {
            mixin(enumMixinStr_SN_id_GostR3411_94_with_GostR3410_2001_cc);
        }
    }




    static if(!is(typeof(LN_id_GostR3411_94_with_GostR3410_2001_cc))) {
        private enum enumMixinStr_LN_id_GostR3411_94_with_GostR3410_2001_cc = `enum LN_id_GostR3411_94_with_GostR3410_2001_cc = "GOST R 34.11-94 with GOST R 34.10-2001 Cryptocom";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_GostR3411_94_with_GostR3410_2001_cc); }))) {
            mixin(enumMixinStr_LN_id_GostR3411_94_with_GostR3410_2001_cc);
        }
    }




    static if(!is(typeof(NID_id_GostR3411_94_with_GostR3410_2001_cc))) {
        private enum enumMixinStr_NID_id_GostR3411_94_with_GostR3410_2001_cc = `enum NID_id_GostR3411_94_with_GostR3410_2001_cc = 853;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3411_94_with_GostR3410_2001_cc); }))) {
            mixin(enumMixinStr_NID_id_GostR3411_94_with_GostR3410_2001_cc);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3411_94_with_GostR3410_2001_cc))) {
        private enum enumMixinStr_OBJ_id_GostR3411_94_with_GostR3410_2001_cc = `enum OBJ_id_GostR3411_94_with_GostR3410_2001_cc = OBJ_member_body , 643L , 2L , 9L , 1L , 3L , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3411_94_with_GostR3410_2001_cc); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3411_94_with_GostR3410_2001_cc);
        }
    }




    static if(!is(typeof(SN_id_GostR3410_2001_ParamSet_cc))) {
        private enum enumMixinStr_SN_id_GostR3410_2001_ParamSet_cc = `enum SN_id_GostR3410_2001_ParamSet_cc = "id-GostR3410-2001-ParamSet-cc";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3410_2001_ParamSet_cc); }))) {
            mixin(enumMixinStr_SN_id_GostR3410_2001_ParamSet_cc);
        }
    }




    static if(!is(typeof(LN_id_GostR3410_2001_ParamSet_cc))) {
        private enum enumMixinStr_LN_id_GostR3410_2001_ParamSet_cc = `enum LN_id_GostR3410_2001_ParamSet_cc = "GOST R 3410-2001 Parameter Set Cryptocom";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_GostR3410_2001_ParamSet_cc); }))) {
            mixin(enumMixinStr_LN_id_GostR3410_2001_ParamSet_cc);
        }
    }




    static if(!is(typeof(NID_id_GostR3410_2001_ParamSet_cc))) {
        private enum enumMixinStr_NID_id_GostR3410_2001_ParamSet_cc = `enum NID_id_GostR3410_2001_ParamSet_cc = 854;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3410_2001_ParamSet_cc); }))) {
            mixin(enumMixinStr_NID_id_GostR3410_2001_ParamSet_cc);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3410_2001_ParamSet_cc))) {
        private enum enumMixinStr_OBJ_id_GostR3410_2001_ParamSet_cc = `enum OBJ_id_GostR3410_2001_ParamSet_cc = OBJ_member_body , 643L , 2L , 9L , 1L , 8L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3410_2001_ParamSet_cc); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3410_2001_ParamSet_cc);
        }
    }




    static if(!is(typeof(SN_id_tc26_algorithms))) {
        private enum enumMixinStr_SN_id_tc26_algorithms = `enum SN_id_tc26_algorithms = "id-tc26-algorithms";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_algorithms); }))) {
            mixin(enumMixinStr_SN_id_tc26_algorithms);
        }
    }




    static if(!is(typeof(NID_id_tc26_algorithms))) {
        private enum enumMixinStr_NID_id_tc26_algorithms = `enum NID_id_tc26_algorithms = 977;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_algorithms); }))) {
            mixin(enumMixinStr_NID_id_tc26_algorithms);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_algorithms))) {
        private enum enumMixinStr_OBJ_id_tc26_algorithms = `enum OBJ_id_tc26_algorithms = OBJ_member_body , 643L , 7L , 1L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_algorithms); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_algorithms);
        }
    }




    static if(!is(typeof(SN_id_tc26_sign))) {
        private enum enumMixinStr_SN_id_tc26_sign = `enum SN_id_tc26_sign = "id-tc26-sign";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_sign); }))) {
            mixin(enumMixinStr_SN_id_tc26_sign);
        }
    }




    static if(!is(typeof(NID_id_tc26_sign))) {
        private enum enumMixinStr_NID_id_tc26_sign = `enum NID_id_tc26_sign = 978;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_sign); }))) {
            mixin(enumMixinStr_NID_id_tc26_sign);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_sign))) {
        private enum enumMixinStr_OBJ_id_tc26_sign = `enum OBJ_id_tc26_sign = OBJ_member_body , 643L , 7L , 1L , 1L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_sign); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_sign);
        }
    }




    static if(!is(typeof(SN_id_GostR3410_2012_256))) {
        private enum enumMixinStr_SN_id_GostR3410_2012_256 = `enum SN_id_GostR3410_2012_256 = "gost2012_256";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3410_2012_256); }))) {
            mixin(enumMixinStr_SN_id_GostR3410_2012_256);
        }
    }




    static if(!is(typeof(LN_id_GostR3410_2012_256))) {
        private enum enumMixinStr_LN_id_GostR3410_2012_256 = `enum LN_id_GostR3410_2012_256 = "GOST R 34.10-2012 with 256 bit modulus";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_GostR3410_2012_256); }))) {
            mixin(enumMixinStr_LN_id_GostR3410_2012_256);
        }
    }




    static if(!is(typeof(NID_id_GostR3410_2012_256))) {
        private enum enumMixinStr_NID_id_GostR3410_2012_256 = `enum NID_id_GostR3410_2012_256 = 979;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3410_2012_256); }))) {
            mixin(enumMixinStr_NID_id_GostR3410_2012_256);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3410_2012_256))) {
        private enum enumMixinStr_OBJ_id_GostR3410_2012_256 = `enum OBJ_id_GostR3410_2012_256 = OBJ_member_body , 643L , 7L , 1L , 1L , 1L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3410_2012_256); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3410_2012_256);
        }
    }




    static if(!is(typeof(SN_id_GostR3410_2012_512))) {
        private enum enumMixinStr_SN_id_GostR3410_2012_512 = `enum SN_id_GostR3410_2012_512 = "gost2012_512";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3410_2012_512); }))) {
            mixin(enumMixinStr_SN_id_GostR3410_2012_512);
        }
    }




    static if(!is(typeof(LN_id_GostR3410_2012_512))) {
        private enum enumMixinStr_LN_id_GostR3410_2012_512 = `enum LN_id_GostR3410_2012_512 = "GOST R 34.10-2012 with 512 bit modulus";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_GostR3410_2012_512); }))) {
            mixin(enumMixinStr_LN_id_GostR3410_2012_512);
        }
    }




    static if(!is(typeof(NID_id_GostR3410_2012_512))) {
        private enum enumMixinStr_NID_id_GostR3410_2012_512 = `enum NID_id_GostR3410_2012_512 = 980;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3410_2012_512); }))) {
            mixin(enumMixinStr_NID_id_GostR3410_2012_512);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3410_2012_512))) {
        private enum enumMixinStr_OBJ_id_GostR3410_2012_512 = `enum OBJ_id_GostR3410_2012_512 = OBJ_member_body , 643L , 7L , 1L , 1L , 1L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3410_2012_512); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3410_2012_512);
        }
    }




    static if(!is(typeof(SN_id_tc26_digest))) {
        private enum enumMixinStr_SN_id_tc26_digest = `enum SN_id_tc26_digest = "id-tc26-digest";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_digest); }))) {
            mixin(enumMixinStr_SN_id_tc26_digest);
        }
    }




    static if(!is(typeof(NID_id_tc26_digest))) {
        private enum enumMixinStr_NID_id_tc26_digest = `enum NID_id_tc26_digest = 981;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_digest); }))) {
            mixin(enumMixinStr_NID_id_tc26_digest);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_digest))) {
        private enum enumMixinStr_OBJ_id_tc26_digest = `enum OBJ_id_tc26_digest = OBJ_member_body , 643L , 7L , 1L , 1L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_digest); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_digest);
        }
    }




    static if(!is(typeof(SN_id_GostR3411_2012_256))) {
        private enum enumMixinStr_SN_id_GostR3411_2012_256 = `enum SN_id_GostR3411_2012_256 = "md_gost12_256";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3411_2012_256); }))) {
            mixin(enumMixinStr_SN_id_GostR3411_2012_256);
        }
    }




    static if(!is(typeof(LN_id_GostR3411_2012_256))) {
        private enum enumMixinStr_LN_id_GostR3411_2012_256 = `enum LN_id_GostR3411_2012_256 = "GOST R 34.11-2012 with 256 bit hash";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_GostR3411_2012_256); }))) {
            mixin(enumMixinStr_LN_id_GostR3411_2012_256);
        }
    }




    static if(!is(typeof(NID_id_GostR3411_2012_256))) {
        private enum enumMixinStr_NID_id_GostR3411_2012_256 = `enum NID_id_GostR3411_2012_256 = 982;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3411_2012_256); }))) {
            mixin(enumMixinStr_NID_id_GostR3411_2012_256);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3411_2012_256))) {
        private enum enumMixinStr_OBJ_id_GostR3411_2012_256 = `enum OBJ_id_GostR3411_2012_256 = OBJ_member_body , 643L , 7L , 1L , 1L , 2L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3411_2012_256); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3411_2012_256);
        }
    }




    static if(!is(typeof(SN_id_GostR3411_2012_512))) {
        private enum enumMixinStr_SN_id_GostR3411_2012_512 = `enum SN_id_GostR3411_2012_512 = "md_gost12_512";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_GostR3411_2012_512); }))) {
            mixin(enumMixinStr_SN_id_GostR3411_2012_512);
        }
    }




    static if(!is(typeof(LN_id_GostR3411_2012_512))) {
        private enum enumMixinStr_LN_id_GostR3411_2012_512 = `enum LN_id_GostR3411_2012_512 = "GOST R 34.11-2012 with 512 bit hash";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_GostR3411_2012_512); }))) {
            mixin(enumMixinStr_LN_id_GostR3411_2012_512);
        }
    }




    static if(!is(typeof(NID_id_GostR3411_2012_512))) {
        private enum enumMixinStr_NID_id_GostR3411_2012_512 = `enum NID_id_GostR3411_2012_512 = 983;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_GostR3411_2012_512); }))) {
            mixin(enumMixinStr_NID_id_GostR3411_2012_512);
        }
    }




    static if(!is(typeof(OBJ_id_GostR3411_2012_512))) {
        private enum enumMixinStr_OBJ_id_GostR3411_2012_512 = `enum OBJ_id_GostR3411_2012_512 = OBJ_member_body , 643L , 7L , 1L , 1L , 2L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_GostR3411_2012_512); }))) {
            mixin(enumMixinStr_OBJ_id_GostR3411_2012_512);
        }
    }




    static if(!is(typeof(SN_id_tc26_signwithdigest))) {
        private enum enumMixinStr_SN_id_tc26_signwithdigest = `enum SN_id_tc26_signwithdigest = "id-tc26-signwithdigest";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_signwithdigest); }))) {
            mixin(enumMixinStr_SN_id_tc26_signwithdigest);
        }
    }




    static if(!is(typeof(NID_id_tc26_signwithdigest))) {
        private enum enumMixinStr_NID_id_tc26_signwithdigest = `enum NID_id_tc26_signwithdigest = 984;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_signwithdigest); }))) {
            mixin(enumMixinStr_NID_id_tc26_signwithdigest);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_signwithdigest))) {
        private enum enumMixinStr_OBJ_id_tc26_signwithdigest = `enum OBJ_id_tc26_signwithdigest = OBJ_member_body , 643L , 7L , 1L , 1L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_signwithdigest); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_signwithdigest);
        }
    }




    static if(!is(typeof(SN_id_tc26_signwithdigest_gost3410_2012_256))) {
        private enum enumMixinStr_SN_id_tc26_signwithdigest_gost3410_2012_256 = `enum SN_id_tc26_signwithdigest_gost3410_2012_256 = "id-tc26-signwithdigest-gost3410-2012-256";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_signwithdigest_gost3410_2012_256); }))) {
            mixin(enumMixinStr_SN_id_tc26_signwithdigest_gost3410_2012_256);
        }
    }




    static if(!is(typeof(LN_id_tc26_signwithdigest_gost3410_2012_256))) {
        private enum enumMixinStr_LN_id_tc26_signwithdigest_gost3410_2012_256 = `enum LN_id_tc26_signwithdigest_gost3410_2012_256 = "GOST R 34.10-2012 with GOST R 34.11-2012 (256 bit)";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_tc26_signwithdigest_gost3410_2012_256); }))) {
            mixin(enumMixinStr_LN_id_tc26_signwithdigest_gost3410_2012_256);
        }
    }




    static if(!is(typeof(NID_id_tc26_signwithdigest_gost3410_2012_256))) {
        private enum enumMixinStr_NID_id_tc26_signwithdigest_gost3410_2012_256 = `enum NID_id_tc26_signwithdigest_gost3410_2012_256 = 985;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_signwithdigest_gost3410_2012_256); }))) {
            mixin(enumMixinStr_NID_id_tc26_signwithdigest_gost3410_2012_256);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_signwithdigest_gost3410_2012_256))) {
        private enum enumMixinStr_OBJ_id_tc26_signwithdigest_gost3410_2012_256 = `enum OBJ_id_tc26_signwithdigest_gost3410_2012_256 = OBJ_member_body , 643L , 7L , 1L , 1L , 3L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_signwithdigest_gost3410_2012_256); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_signwithdigest_gost3410_2012_256);
        }
    }




    static if(!is(typeof(SN_id_tc26_signwithdigest_gost3410_2012_512))) {
        private enum enumMixinStr_SN_id_tc26_signwithdigest_gost3410_2012_512 = `enum SN_id_tc26_signwithdigest_gost3410_2012_512 = "id-tc26-signwithdigest-gost3410-2012-512";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_signwithdigest_gost3410_2012_512); }))) {
            mixin(enumMixinStr_SN_id_tc26_signwithdigest_gost3410_2012_512);
        }
    }




    static if(!is(typeof(LN_id_tc26_signwithdigest_gost3410_2012_512))) {
        private enum enumMixinStr_LN_id_tc26_signwithdigest_gost3410_2012_512 = `enum LN_id_tc26_signwithdigest_gost3410_2012_512 = "GOST R 34.10-2012 with GOST R 34.11-2012 (512 bit)";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_tc26_signwithdigest_gost3410_2012_512); }))) {
            mixin(enumMixinStr_LN_id_tc26_signwithdigest_gost3410_2012_512);
        }
    }




    static if(!is(typeof(NID_id_tc26_signwithdigest_gost3410_2012_512))) {
        private enum enumMixinStr_NID_id_tc26_signwithdigest_gost3410_2012_512 = `enum NID_id_tc26_signwithdigest_gost3410_2012_512 = 986;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_signwithdigest_gost3410_2012_512); }))) {
            mixin(enumMixinStr_NID_id_tc26_signwithdigest_gost3410_2012_512);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_signwithdigest_gost3410_2012_512))) {
        private enum enumMixinStr_OBJ_id_tc26_signwithdigest_gost3410_2012_512 = `enum OBJ_id_tc26_signwithdigest_gost3410_2012_512 = OBJ_member_body , 643L , 7L , 1L , 1L , 3L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_signwithdigest_gost3410_2012_512); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_signwithdigest_gost3410_2012_512);
        }
    }




    static if(!is(typeof(SN_id_tc26_mac))) {
        private enum enumMixinStr_SN_id_tc26_mac = `enum SN_id_tc26_mac = "id-tc26-mac";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_mac); }))) {
            mixin(enumMixinStr_SN_id_tc26_mac);
        }
    }




    static if(!is(typeof(NID_id_tc26_mac))) {
        private enum enumMixinStr_NID_id_tc26_mac = `enum NID_id_tc26_mac = 987;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_mac); }))) {
            mixin(enumMixinStr_NID_id_tc26_mac);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_mac))) {
        private enum enumMixinStr_OBJ_id_tc26_mac = `enum OBJ_id_tc26_mac = OBJ_member_body , 643L , 7L , 1L , 1L , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_mac); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_mac);
        }
    }




    static if(!is(typeof(SN_id_tc26_hmac_gost_3411_2012_256))) {
        private enum enumMixinStr_SN_id_tc26_hmac_gost_3411_2012_256 = `enum SN_id_tc26_hmac_gost_3411_2012_256 = "id-tc26-hmac-gost-3411-2012-256";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_hmac_gost_3411_2012_256); }))) {
            mixin(enumMixinStr_SN_id_tc26_hmac_gost_3411_2012_256);
        }
    }




    static if(!is(typeof(LN_id_tc26_hmac_gost_3411_2012_256))) {
        private enum enumMixinStr_LN_id_tc26_hmac_gost_3411_2012_256 = `enum LN_id_tc26_hmac_gost_3411_2012_256 = "HMAC GOST 34.11-2012 256 bit";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_tc26_hmac_gost_3411_2012_256); }))) {
            mixin(enumMixinStr_LN_id_tc26_hmac_gost_3411_2012_256);
        }
    }




    static if(!is(typeof(NID_id_tc26_hmac_gost_3411_2012_256))) {
        private enum enumMixinStr_NID_id_tc26_hmac_gost_3411_2012_256 = `enum NID_id_tc26_hmac_gost_3411_2012_256 = 988;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_hmac_gost_3411_2012_256); }))) {
            mixin(enumMixinStr_NID_id_tc26_hmac_gost_3411_2012_256);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_hmac_gost_3411_2012_256))) {
        private enum enumMixinStr_OBJ_id_tc26_hmac_gost_3411_2012_256 = `enum OBJ_id_tc26_hmac_gost_3411_2012_256 = OBJ_member_body , 643L , 7L , 1L , 1L , 4L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_hmac_gost_3411_2012_256); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_hmac_gost_3411_2012_256);
        }
    }




    static if(!is(typeof(SN_id_tc26_hmac_gost_3411_2012_512))) {
        private enum enumMixinStr_SN_id_tc26_hmac_gost_3411_2012_512 = `enum SN_id_tc26_hmac_gost_3411_2012_512 = "id-tc26-hmac-gost-3411-2012-512";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_hmac_gost_3411_2012_512); }))) {
            mixin(enumMixinStr_SN_id_tc26_hmac_gost_3411_2012_512);
        }
    }




    static if(!is(typeof(LN_id_tc26_hmac_gost_3411_2012_512))) {
        private enum enumMixinStr_LN_id_tc26_hmac_gost_3411_2012_512 = `enum LN_id_tc26_hmac_gost_3411_2012_512 = "HMAC GOST 34.11-2012 512 bit";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_tc26_hmac_gost_3411_2012_512); }))) {
            mixin(enumMixinStr_LN_id_tc26_hmac_gost_3411_2012_512);
        }
    }




    static if(!is(typeof(NID_id_tc26_hmac_gost_3411_2012_512))) {
        private enum enumMixinStr_NID_id_tc26_hmac_gost_3411_2012_512 = `enum NID_id_tc26_hmac_gost_3411_2012_512 = 989;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_hmac_gost_3411_2012_512); }))) {
            mixin(enumMixinStr_NID_id_tc26_hmac_gost_3411_2012_512);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_hmac_gost_3411_2012_512))) {
        private enum enumMixinStr_OBJ_id_tc26_hmac_gost_3411_2012_512 = `enum OBJ_id_tc26_hmac_gost_3411_2012_512 = OBJ_member_body , 643L , 7L , 1L , 1L , 4L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_hmac_gost_3411_2012_512); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_hmac_gost_3411_2012_512);
        }
    }




    static if(!is(typeof(SN_id_tc26_cipher))) {
        private enum enumMixinStr_SN_id_tc26_cipher = `enum SN_id_tc26_cipher = "id-tc26-cipher";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_cipher); }))) {
            mixin(enumMixinStr_SN_id_tc26_cipher);
        }
    }




    static if(!is(typeof(NID_id_tc26_cipher))) {
        private enum enumMixinStr_NID_id_tc26_cipher = `enum NID_id_tc26_cipher = 990;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_cipher); }))) {
            mixin(enumMixinStr_NID_id_tc26_cipher);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_cipher))) {
        private enum enumMixinStr_OBJ_id_tc26_cipher = `enum OBJ_id_tc26_cipher = OBJ_member_body , 643L , 7L , 1L , 1L , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_cipher); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_cipher);
        }
    }




    static if(!is(typeof(SN_id_tc26_cipher_gostr3412_2015_magma))) {
        private enum enumMixinStr_SN_id_tc26_cipher_gostr3412_2015_magma = `enum SN_id_tc26_cipher_gostr3412_2015_magma = "id-tc26-cipher-gostr3412-2015-magma";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_cipher_gostr3412_2015_magma); }))) {
            mixin(enumMixinStr_SN_id_tc26_cipher_gostr3412_2015_magma);
        }
    }




    static if(!is(typeof(NID_id_tc26_cipher_gostr3412_2015_magma))) {
        private enum enumMixinStr_NID_id_tc26_cipher_gostr3412_2015_magma = `enum NID_id_tc26_cipher_gostr3412_2015_magma = 1173;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_cipher_gostr3412_2015_magma); }))) {
            mixin(enumMixinStr_NID_id_tc26_cipher_gostr3412_2015_magma);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_cipher_gostr3412_2015_magma))) {
        private enum enumMixinStr_OBJ_id_tc26_cipher_gostr3412_2015_magma = `enum OBJ_id_tc26_cipher_gostr3412_2015_magma = OBJ_member_body , 643L , 7L , 1L , 1L , 5L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_cipher_gostr3412_2015_magma); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_cipher_gostr3412_2015_magma);
        }
    }




    static if(!is(typeof(SN_id_tc26_cipher_gostr3412_2015_magma_ctracpkm))) {
        private enum enumMixinStr_SN_id_tc26_cipher_gostr3412_2015_magma_ctracpkm = `enum SN_id_tc26_cipher_gostr3412_2015_magma_ctracpkm = "id-tc26-cipher-gostr3412-2015-magma-ctracpkm";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_cipher_gostr3412_2015_magma_ctracpkm); }))) {
            mixin(enumMixinStr_SN_id_tc26_cipher_gostr3412_2015_magma_ctracpkm);
        }
    }




    static if(!is(typeof(NID_id_tc26_cipher_gostr3412_2015_magma_ctracpkm))) {
        private enum enumMixinStr_NID_id_tc26_cipher_gostr3412_2015_magma_ctracpkm = `enum NID_id_tc26_cipher_gostr3412_2015_magma_ctracpkm = 1174;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_cipher_gostr3412_2015_magma_ctracpkm); }))) {
            mixin(enumMixinStr_NID_id_tc26_cipher_gostr3412_2015_magma_ctracpkm);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_cipher_gostr3412_2015_magma_ctracpkm))) {
        private enum enumMixinStr_OBJ_id_tc26_cipher_gostr3412_2015_magma_ctracpkm = `enum OBJ_id_tc26_cipher_gostr3412_2015_magma_ctracpkm = OBJ_member_body , 643L , 7L , 1L , 1L , 5L , 1L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_cipher_gostr3412_2015_magma_ctracpkm); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_cipher_gostr3412_2015_magma_ctracpkm);
        }
    }




    static if(!is(typeof(SN_id_tc26_cipher_gostr3412_2015_magma_ctracpkm_omac))) {
        private enum enumMixinStr_SN_id_tc26_cipher_gostr3412_2015_magma_ctracpkm_omac = `enum SN_id_tc26_cipher_gostr3412_2015_magma_ctracpkm_omac = "id-tc26-cipher-gostr3412-2015-magma-ctracpkm-omac";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_cipher_gostr3412_2015_magma_ctracpkm_omac); }))) {
            mixin(enumMixinStr_SN_id_tc26_cipher_gostr3412_2015_magma_ctracpkm_omac);
        }
    }




    static if(!is(typeof(NID_id_tc26_cipher_gostr3412_2015_magma_ctracpkm_omac))) {
        private enum enumMixinStr_NID_id_tc26_cipher_gostr3412_2015_magma_ctracpkm_omac = `enum NID_id_tc26_cipher_gostr3412_2015_magma_ctracpkm_omac = 1175;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_cipher_gostr3412_2015_magma_ctracpkm_omac); }))) {
            mixin(enumMixinStr_NID_id_tc26_cipher_gostr3412_2015_magma_ctracpkm_omac);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_cipher_gostr3412_2015_magma_ctracpkm_omac))) {
        private enum enumMixinStr_OBJ_id_tc26_cipher_gostr3412_2015_magma_ctracpkm_omac = `enum OBJ_id_tc26_cipher_gostr3412_2015_magma_ctracpkm_omac = OBJ_member_body , 643L , 7L , 1L , 1L , 5L , 1L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_cipher_gostr3412_2015_magma_ctracpkm_omac); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_cipher_gostr3412_2015_magma_ctracpkm_omac);
        }
    }




    static if(!is(typeof(SN_id_tc26_cipher_gostr3412_2015_kuznyechik))) {
        private enum enumMixinStr_SN_id_tc26_cipher_gostr3412_2015_kuznyechik = `enum SN_id_tc26_cipher_gostr3412_2015_kuznyechik = "id-tc26-cipher-gostr3412-2015-kuznyechik";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_cipher_gostr3412_2015_kuznyechik); }))) {
            mixin(enumMixinStr_SN_id_tc26_cipher_gostr3412_2015_kuznyechik);
        }
    }




    static if(!is(typeof(NID_id_tc26_cipher_gostr3412_2015_kuznyechik))) {
        private enum enumMixinStr_NID_id_tc26_cipher_gostr3412_2015_kuznyechik = `enum NID_id_tc26_cipher_gostr3412_2015_kuznyechik = 1176;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_cipher_gostr3412_2015_kuznyechik); }))) {
            mixin(enumMixinStr_NID_id_tc26_cipher_gostr3412_2015_kuznyechik);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_cipher_gostr3412_2015_kuznyechik))) {
        private enum enumMixinStr_OBJ_id_tc26_cipher_gostr3412_2015_kuznyechik = `enum OBJ_id_tc26_cipher_gostr3412_2015_kuznyechik = OBJ_member_body , 643L , 7L , 1L , 1L , 5L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_cipher_gostr3412_2015_kuznyechik); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_cipher_gostr3412_2015_kuznyechik);
        }
    }




    static if(!is(typeof(SN_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm))) {
        private enum enumMixinStr_SN_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm = `enum SN_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm = "id-tc26-cipher-gostr3412-2015-kuznyechik-ctracpkm";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm); }))) {
            mixin(enumMixinStr_SN_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm);
        }
    }




    static if(!is(typeof(NID_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm))) {
        private enum enumMixinStr_NID_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm = `enum NID_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm = 1177;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm); }))) {
            mixin(enumMixinStr_NID_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm))) {
        private enum enumMixinStr_OBJ_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm = `enum OBJ_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm = OBJ_member_body , 643L , 7L , 1L , 1L , 5L , 2L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm);
        }
    }




    static if(!is(typeof(SN_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm_omac))) {
        private enum enumMixinStr_SN_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm_omac = `enum SN_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm_omac = "id-tc26-cipher-gostr3412-2015-kuznyechik-ctracpkm-omac";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm_omac); }))) {
            mixin(enumMixinStr_SN_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm_omac);
        }
    }




    static if(!is(typeof(NID_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm_omac))) {
        private enum enumMixinStr_NID_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm_omac = `enum NID_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm_omac = 1178;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm_omac); }))) {
            mixin(enumMixinStr_NID_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm_omac);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm_omac))) {
        private enum enumMixinStr_OBJ_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm_omac = `enum OBJ_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm_omac = OBJ_member_body , 643L , 7L , 1L , 1L , 5L , 2L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm_omac); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm_omac);
        }
    }




    static if(!is(typeof(SN_id_tc26_agreement))) {
        private enum enumMixinStr_SN_id_tc26_agreement = `enum SN_id_tc26_agreement = "id-tc26-agreement";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_agreement); }))) {
            mixin(enumMixinStr_SN_id_tc26_agreement);
        }
    }




    static if(!is(typeof(NID_id_tc26_agreement))) {
        private enum enumMixinStr_NID_id_tc26_agreement = `enum NID_id_tc26_agreement = 991;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_agreement); }))) {
            mixin(enumMixinStr_NID_id_tc26_agreement);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_agreement))) {
        private enum enumMixinStr_OBJ_id_tc26_agreement = `enum OBJ_id_tc26_agreement = OBJ_member_body , 643L , 7L , 1L , 1L , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_agreement); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_agreement);
        }
    }




    static if(!is(typeof(SN_id_tc26_agreement_gost_3410_2012_256))) {
        private enum enumMixinStr_SN_id_tc26_agreement_gost_3410_2012_256 = `enum SN_id_tc26_agreement_gost_3410_2012_256 = "id-tc26-agreement-gost-3410-2012-256";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_agreement_gost_3410_2012_256); }))) {
            mixin(enumMixinStr_SN_id_tc26_agreement_gost_3410_2012_256);
        }
    }




    static if(!is(typeof(NID_id_tc26_agreement_gost_3410_2012_256))) {
        private enum enumMixinStr_NID_id_tc26_agreement_gost_3410_2012_256 = `enum NID_id_tc26_agreement_gost_3410_2012_256 = 992;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_agreement_gost_3410_2012_256); }))) {
            mixin(enumMixinStr_NID_id_tc26_agreement_gost_3410_2012_256);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_agreement_gost_3410_2012_256))) {
        private enum enumMixinStr_OBJ_id_tc26_agreement_gost_3410_2012_256 = `enum OBJ_id_tc26_agreement_gost_3410_2012_256 = OBJ_member_body , 643L , 7L , 1L , 1L , 6L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_agreement_gost_3410_2012_256); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_agreement_gost_3410_2012_256);
        }
    }




    static if(!is(typeof(SN_id_tc26_agreement_gost_3410_2012_512))) {
        private enum enumMixinStr_SN_id_tc26_agreement_gost_3410_2012_512 = `enum SN_id_tc26_agreement_gost_3410_2012_512 = "id-tc26-agreement-gost-3410-2012-512";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_agreement_gost_3410_2012_512); }))) {
            mixin(enumMixinStr_SN_id_tc26_agreement_gost_3410_2012_512);
        }
    }




    static if(!is(typeof(NID_id_tc26_agreement_gost_3410_2012_512))) {
        private enum enumMixinStr_NID_id_tc26_agreement_gost_3410_2012_512 = `enum NID_id_tc26_agreement_gost_3410_2012_512 = 993;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_agreement_gost_3410_2012_512); }))) {
            mixin(enumMixinStr_NID_id_tc26_agreement_gost_3410_2012_512);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_agreement_gost_3410_2012_512))) {
        private enum enumMixinStr_OBJ_id_tc26_agreement_gost_3410_2012_512 = `enum OBJ_id_tc26_agreement_gost_3410_2012_512 = OBJ_member_body , 643L , 7L , 1L , 1L , 6L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_agreement_gost_3410_2012_512); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_agreement_gost_3410_2012_512);
        }
    }




    static if(!is(typeof(SN_id_tc26_wrap))) {
        private enum enumMixinStr_SN_id_tc26_wrap = `enum SN_id_tc26_wrap = "id-tc26-wrap";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_wrap); }))) {
            mixin(enumMixinStr_SN_id_tc26_wrap);
        }
    }




    static if(!is(typeof(NID_id_tc26_wrap))) {
        private enum enumMixinStr_NID_id_tc26_wrap = `enum NID_id_tc26_wrap = 1179;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_wrap); }))) {
            mixin(enumMixinStr_NID_id_tc26_wrap);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_wrap))) {
        private enum enumMixinStr_OBJ_id_tc26_wrap = `enum OBJ_id_tc26_wrap = OBJ_member_body , 643L , 7L , 1L , 1L , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_wrap); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_wrap);
        }
    }




    static if(!is(typeof(SN_id_tc26_wrap_gostr3412_2015_magma))) {
        private enum enumMixinStr_SN_id_tc26_wrap_gostr3412_2015_magma = `enum SN_id_tc26_wrap_gostr3412_2015_magma = "id-tc26-wrap-gostr3412-2015-magma";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_wrap_gostr3412_2015_magma); }))) {
            mixin(enumMixinStr_SN_id_tc26_wrap_gostr3412_2015_magma);
        }
    }




    static if(!is(typeof(NID_id_tc26_wrap_gostr3412_2015_magma))) {
        private enum enumMixinStr_NID_id_tc26_wrap_gostr3412_2015_magma = `enum NID_id_tc26_wrap_gostr3412_2015_magma = 1180;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_wrap_gostr3412_2015_magma); }))) {
            mixin(enumMixinStr_NID_id_tc26_wrap_gostr3412_2015_magma);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_wrap_gostr3412_2015_magma))) {
        private enum enumMixinStr_OBJ_id_tc26_wrap_gostr3412_2015_magma = `enum OBJ_id_tc26_wrap_gostr3412_2015_magma = OBJ_member_body , 643L , 7L , 1L , 1L , 7L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_wrap_gostr3412_2015_magma); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_wrap_gostr3412_2015_magma);
        }
    }




    static if(!is(typeof(SN_id_tc26_wrap_gostr3412_2015_magma_kexp15))) {
        private enum enumMixinStr_SN_id_tc26_wrap_gostr3412_2015_magma_kexp15 = `enum SN_id_tc26_wrap_gostr3412_2015_magma_kexp15 = "id-tc26-wrap-gostr3412-2015-magma-kexp15";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_wrap_gostr3412_2015_magma_kexp15); }))) {
            mixin(enumMixinStr_SN_id_tc26_wrap_gostr3412_2015_magma_kexp15);
        }
    }




    static if(!is(typeof(NID_id_tc26_wrap_gostr3412_2015_magma_kexp15))) {
        private enum enumMixinStr_NID_id_tc26_wrap_gostr3412_2015_magma_kexp15 = `enum NID_id_tc26_wrap_gostr3412_2015_magma_kexp15 = 1181;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_wrap_gostr3412_2015_magma_kexp15); }))) {
            mixin(enumMixinStr_NID_id_tc26_wrap_gostr3412_2015_magma_kexp15);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_wrap_gostr3412_2015_magma_kexp15))) {
        private enum enumMixinStr_OBJ_id_tc26_wrap_gostr3412_2015_magma_kexp15 = `enum OBJ_id_tc26_wrap_gostr3412_2015_magma_kexp15 = OBJ_member_body , 643L , 7L , 1L , 1L , 7L , 1L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_wrap_gostr3412_2015_magma_kexp15); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_wrap_gostr3412_2015_magma_kexp15);
        }
    }




    static if(!is(typeof(SN_id_tc26_wrap_gostr3412_2015_kuznyechik))) {
        private enum enumMixinStr_SN_id_tc26_wrap_gostr3412_2015_kuznyechik = `enum SN_id_tc26_wrap_gostr3412_2015_kuznyechik = "id-tc26-wrap-gostr3412-2015-kuznyechik";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_wrap_gostr3412_2015_kuznyechik); }))) {
            mixin(enumMixinStr_SN_id_tc26_wrap_gostr3412_2015_kuznyechik);
        }
    }




    static if(!is(typeof(NID_id_tc26_wrap_gostr3412_2015_kuznyechik))) {
        private enum enumMixinStr_NID_id_tc26_wrap_gostr3412_2015_kuznyechik = `enum NID_id_tc26_wrap_gostr3412_2015_kuznyechik = 1182;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_wrap_gostr3412_2015_kuznyechik); }))) {
            mixin(enumMixinStr_NID_id_tc26_wrap_gostr3412_2015_kuznyechik);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_wrap_gostr3412_2015_kuznyechik))) {
        private enum enumMixinStr_OBJ_id_tc26_wrap_gostr3412_2015_kuznyechik = `enum OBJ_id_tc26_wrap_gostr3412_2015_kuznyechik = OBJ_member_body , 643L , 7L , 1L , 1L , 7L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_wrap_gostr3412_2015_kuznyechik); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_wrap_gostr3412_2015_kuznyechik);
        }
    }




    static if(!is(typeof(SN_id_tc26_wrap_gostr3412_2015_kuznyechik_kexp15))) {
        private enum enumMixinStr_SN_id_tc26_wrap_gostr3412_2015_kuznyechik_kexp15 = `enum SN_id_tc26_wrap_gostr3412_2015_kuznyechik_kexp15 = "id-tc26-wrap-gostr3412-2015-kuznyechik-kexp15";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_wrap_gostr3412_2015_kuznyechik_kexp15); }))) {
            mixin(enumMixinStr_SN_id_tc26_wrap_gostr3412_2015_kuznyechik_kexp15);
        }
    }




    static if(!is(typeof(NID_id_tc26_wrap_gostr3412_2015_kuznyechik_kexp15))) {
        private enum enumMixinStr_NID_id_tc26_wrap_gostr3412_2015_kuznyechik_kexp15 = `enum NID_id_tc26_wrap_gostr3412_2015_kuznyechik_kexp15 = 1183;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_wrap_gostr3412_2015_kuznyechik_kexp15); }))) {
            mixin(enumMixinStr_NID_id_tc26_wrap_gostr3412_2015_kuznyechik_kexp15);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_wrap_gostr3412_2015_kuznyechik_kexp15))) {
        private enum enumMixinStr_OBJ_id_tc26_wrap_gostr3412_2015_kuznyechik_kexp15 = `enum OBJ_id_tc26_wrap_gostr3412_2015_kuznyechik_kexp15 = OBJ_member_body , 643L , 7L , 1L , 1L , 7L , 2L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_wrap_gostr3412_2015_kuznyechik_kexp15); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_wrap_gostr3412_2015_kuznyechik_kexp15);
        }
    }




    static if(!is(typeof(SN_id_tc26_constants))) {
        private enum enumMixinStr_SN_id_tc26_constants = `enum SN_id_tc26_constants = "id-tc26-constants";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_constants); }))) {
            mixin(enumMixinStr_SN_id_tc26_constants);
        }
    }




    static if(!is(typeof(NID_id_tc26_constants))) {
        private enum enumMixinStr_NID_id_tc26_constants = `enum NID_id_tc26_constants = 994;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_constants); }))) {
            mixin(enumMixinStr_NID_id_tc26_constants);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_constants))) {
        private enum enumMixinStr_OBJ_id_tc26_constants = `enum OBJ_id_tc26_constants = OBJ_member_body , 643L , 7L , 1L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_constants); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_constants);
        }
    }




    static if(!is(typeof(SN_id_tc26_sign_constants))) {
        private enum enumMixinStr_SN_id_tc26_sign_constants = `enum SN_id_tc26_sign_constants = "id-tc26-sign-constants";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_sign_constants); }))) {
            mixin(enumMixinStr_SN_id_tc26_sign_constants);
        }
    }




    static if(!is(typeof(NID_id_tc26_sign_constants))) {
        private enum enumMixinStr_NID_id_tc26_sign_constants = `enum NID_id_tc26_sign_constants = 995;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_sign_constants); }))) {
            mixin(enumMixinStr_NID_id_tc26_sign_constants);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_sign_constants))) {
        private enum enumMixinStr_OBJ_id_tc26_sign_constants = `enum OBJ_id_tc26_sign_constants = OBJ_member_body , 643L , 7L , 1L , 2L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_sign_constants); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_sign_constants);
        }
    }




    static if(!is(typeof(SN_id_tc26_gost_3410_2012_256_constants))) {
        private enum enumMixinStr_SN_id_tc26_gost_3410_2012_256_constants = `enum SN_id_tc26_gost_3410_2012_256_constants = "id-tc26-gost-3410-2012-256-constants";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_gost_3410_2012_256_constants); }))) {
            mixin(enumMixinStr_SN_id_tc26_gost_3410_2012_256_constants);
        }
    }




    static if(!is(typeof(NID_id_tc26_gost_3410_2012_256_constants))) {
        private enum enumMixinStr_NID_id_tc26_gost_3410_2012_256_constants = `enum NID_id_tc26_gost_3410_2012_256_constants = 1147;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_gost_3410_2012_256_constants); }))) {
            mixin(enumMixinStr_NID_id_tc26_gost_3410_2012_256_constants);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_gost_3410_2012_256_constants))) {
        private enum enumMixinStr_OBJ_id_tc26_gost_3410_2012_256_constants = `enum OBJ_id_tc26_gost_3410_2012_256_constants = OBJ_member_body , 643L , 7L , 1L , 2L , 1L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_gost_3410_2012_256_constants); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_gost_3410_2012_256_constants);
        }
    }




    static if(!is(typeof(SN_id_tc26_gost_3410_2012_256_paramSetA))) {
        private enum enumMixinStr_SN_id_tc26_gost_3410_2012_256_paramSetA = `enum SN_id_tc26_gost_3410_2012_256_paramSetA = "id-tc26-gost-3410-2012-256-paramSetA";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_gost_3410_2012_256_paramSetA); }))) {
            mixin(enumMixinStr_SN_id_tc26_gost_3410_2012_256_paramSetA);
        }
    }




    static if(!is(typeof(LN_id_tc26_gost_3410_2012_256_paramSetA))) {
        private enum enumMixinStr_LN_id_tc26_gost_3410_2012_256_paramSetA = `enum LN_id_tc26_gost_3410_2012_256_paramSetA = "GOST R 34.10-2012 (256 bit) ParamSet A";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_tc26_gost_3410_2012_256_paramSetA); }))) {
            mixin(enumMixinStr_LN_id_tc26_gost_3410_2012_256_paramSetA);
        }
    }




    static if(!is(typeof(NID_id_tc26_gost_3410_2012_256_paramSetA))) {
        private enum enumMixinStr_NID_id_tc26_gost_3410_2012_256_paramSetA = `enum NID_id_tc26_gost_3410_2012_256_paramSetA = 1148;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_gost_3410_2012_256_paramSetA); }))) {
            mixin(enumMixinStr_NID_id_tc26_gost_3410_2012_256_paramSetA);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_gost_3410_2012_256_paramSetA))) {
        private enum enumMixinStr_OBJ_id_tc26_gost_3410_2012_256_paramSetA = `enum OBJ_id_tc26_gost_3410_2012_256_paramSetA = OBJ_member_body , 643L , 7L , 1L , 2L , 1L , 1L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_gost_3410_2012_256_paramSetA); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_gost_3410_2012_256_paramSetA);
        }
    }




    static if(!is(typeof(SN_id_tc26_gost_3410_2012_256_paramSetB))) {
        private enum enumMixinStr_SN_id_tc26_gost_3410_2012_256_paramSetB = `enum SN_id_tc26_gost_3410_2012_256_paramSetB = "id-tc26-gost-3410-2012-256-paramSetB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_gost_3410_2012_256_paramSetB); }))) {
            mixin(enumMixinStr_SN_id_tc26_gost_3410_2012_256_paramSetB);
        }
    }




    static if(!is(typeof(LN_id_tc26_gost_3410_2012_256_paramSetB))) {
        private enum enumMixinStr_LN_id_tc26_gost_3410_2012_256_paramSetB = `enum LN_id_tc26_gost_3410_2012_256_paramSetB = "GOST R 34.10-2012 (256 bit) ParamSet B";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_tc26_gost_3410_2012_256_paramSetB); }))) {
            mixin(enumMixinStr_LN_id_tc26_gost_3410_2012_256_paramSetB);
        }
    }




    static if(!is(typeof(NID_id_tc26_gost_3410_2012_256_paramSetB))) {
        private enum enumMixinStr_NID_id_tc26_gost_3410_2012_256_paramSetB = `enum NID_id_tc26_gost_3410_2012_256_paramSetB = 1184;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_gost_3410_2012_256_paramSetB); }))) {
            mixin(enumMixinStr_NID_id_tc26_gost_3410_2012_256_paramSetB);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_gost_3410_2012_256_paramSetB))) {
        private enum enumMixinStr_OBJ_id_tc26_gost_3410_2012_256_paramSetB = `enum OBJ_id_tc26_gost_3410_2012_256_paramSetB = OBJ_member_body , 643L , 7L , 1L , 2L , 1L , 1L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_gost_3410_2012_256_paramSetB); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_gost_3410_2012_256_paramSetB);
        }
    }




    static if(!is(typeof(SN_id_tc26_gost_3410_2012_256_paramSetC))) {
        private enum enumMixinStr_SN_id_tc26_gost_3410_2012_256_paramSetC = `enum SN_id_tc26_gost_3410_2012_256_paramSetC = "id-tc26-gost-3410-2012-256-paramSetC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_gost_3410_2012_256_paramSetC); }))) {
            mixin(enumMixinStr_SN_id_tc26_gost_3410_2012_256_paramSetC);
        }
    }




    static if(!is(typeof(LN_id_tc26_gost_3410_2012_256_paramSetC))) {
        private enum enumMixinStr_LN_id_tc26_gost_3410_2012_256_paramSetC = `enum LN_id_tc26_gost_3410_2012_256_paramSetC = "GOST R 34.10-2012 (256 bit) ParamSet C";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_tc26_gost_3410_2012_256_paramSetC); }))) {
            mixin(enumMixinStr_LN_id_tc26_gost_3410_2012_256_paramSetC);
        }
    }




    static if(!is(typeof(NID_id_tc26_gost_3410_2012_256_paramSetC))) {
        private enum enumMixinStr_NID_id_tc26_gost_3410_2012_256_paramSetC = `enum NID_id_tc26_gost_3410_2012_256_paramSetC = 1185;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_gost_3410_2012_256_paramSetC); }))) {
            mixin(enumMixinStr_NID_id_tc26_gost_3410_2012_256_paramSetC);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_gost_3410_2012_256_paramSetC))) {
        private enum enumMixinStr_OBJ_id_tc26_gost_3410_2012_256_paramSetC = `enum OBJ_id_tc26_gost_3410_2012_256_paramSetC = OBJ_member_body , 643L , 7L , 1L , 2L , 1L , 1L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_gost_3410_2012_256_paramSetC); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_gost_3410_2012_256_paramSetC);
        }
    }




    static if(!is(typeof(SN_id_tc26_gost_3410_2012_256_paramSetD))) {
        private enum enumMixinStr_SN_id_tc26_gost_3410_2012_256_paramSetD = `enum SN_id_tc26_gost_3410_2012_256_paramSetD = "id-tc26-gost-3410-2012-256-paramSetD";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_gost_3410_2012_256_paramSetD); }))) {
            mixin(enumMixinStr_SN_id_tc26_gost_3410_2012_256_paramSetD);
        }
    }




    static if(!is(typeof(LN_id_tc26_gost_3410_2012_256_paramSetD))) {
        private enum enumMixinStr_LN_id_tc26_gost_3410_2012_256_paramSetD = `enum LN_id_tc26_gost_3410_2012_256_paramSetD = "GOST R 34.10-2012 (256 bit) ParamSet D";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_tc26_gost_3410_2012_256_paramSetD); }))) {
            mixin(enumMixinStr_LN_id_tc26_gost_3410_2012_256_paramSetD);
        }
    }




    static if(!is(typeof(NID_id_tc26_gost_3410_2012_256_paramSetD))) {
        private enum enumMixinStr_NID_id_tc26_gost_3410_2012_256_paramSetD = `enum NID_id_tc26_gost_3410_2012_256_paramSetD = 1186;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_gost_3410_2012_256_paramSetD); }))) {
            mixin(enumMixinStr_NID_id_tc26_gost_3410_2012_256_paramSetD);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_gost_3410_2012_256_paramSetD))) {
        private enum enumMixinStr_OBJ_id_tc26_gost_3410_2012_256_paramSetD = `enum OBJ_id_tc26_gost_3410_2012_256_paramSetD = OBJ_member_body , 643L , 7L , 1L , 2L , 1L , 1L , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_gost_3410_2012_256_paramSetD); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_gost_3410_2012_256_paramSetD);
        }
    }




    static if(!is(typeof(SN_id_tc26_gost_3410_2012_512_constants))) {
        private enum enumMixinStr_SN_id_tc26_gost_3410_2012_512_constants = `enum SN_id_tc26_gost_3410_2012_512_constants = "id-tc26-gost-3410-2012-512-constants";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_gost_3410_2012_512_constants); }))) {
            mixin(enumMixinStr_SN_id_tc26_gost_3410_2012_512_constants);
        }
    }




    static if(!is(typeof(NID_id_tc26_gost_3410_2012_512_constants))) {
        private enum enumMixinStr_NID_id_tc26_gost_3410_2012_512_constants = `enum NID_id_tc26_gost_3410_2012_512_constants = 996;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_gost_3410_2012_512_constants); }))) {
            mixin(enumMixinStr_NID_id_tc26_gost_3410_2012_512_constants);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_gost_3410_2012_512_constants))) {
        private enum enumMixinStr_OBJ_id_tc26_gost_3410_2012_512_constants = `enum OBJ_id_tc26_gost_3410_2012_512_constants = OBJ_member_body , 643L , 7L , 1L , 2L , 1L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_gost_3410_2012_512_constants); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_gost_3410_2012_512_constants);
        }
    }




    static if(!is(typeof(SN_id_tc26_gost_3410_2012_512_paramSetTest))) {
        private enum enumMixinStr_SN_id_tc26_gost_3410_2012_512_paramSetTest = `enum SN_id_tc26_gost_3410_2012_512_paramSetTest = "id-tc26-gost-3410-2012-512-paramSetTest";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_gost_3410_2012_512_paramSetTest); }))) {
            mixin(enumMixinStr_SN_id_tc26_gost_3410_2012_512_paramSetTest);
        }
    }




    static if(!is(typeof(LN_id_tc26_gost_3410_2012_512_paramSetTest))) {
        private enum enumMixinStr_LN_id_tc26_gost_3410_2012_512_paramSetTest = `enum LN_id_tc26_gost_3410_2012_512_paramSetTest = "GOST R 34.10-2012 (512 bit) testing parameter set";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_tc26_gost_3410_2012_512_paramSetTest); }))) {
            mixin(enumMixinStr_LN_id_tc26_gost_3410_2012_512_paramSetTest);
        }
    }




    static if(!is(typeof(NID_id_tc26_gost_3410_2012_512_paramSetTest))) {
        private enum enumMixinStr_NID_id_tc26_gost_3410_2012_512_paramSetTest = `enum NID_id_tc26_gost_3410_2012_512_paramSetTest = 997;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_gost_3410_2012_512_paramSetTest); }))) {
            mixin(enumMixinStr_NID_id_tc26_gost_3410_2012_512_paramSetTest);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_gost_3410_2012_512_paramSetTest))) {
        private enum enumMixinStr_OBJ_id_tc26_gost_3410_2012_512_paramSetTest = `enum OBJ_id_tc26_gost_3410_2012_512_paramSetTest = OBJ_member_body , 643L , 7L , 1L , 2L , 1L , 2L , 0L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_gost_3410_2012_512_paramSetTest); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_gost_3410_2012_512_paramSetTest);
        }
    }




    static if(!is(typeof(SN_id_tc26_gost_3410_2012_512_paramSetA))) {
        private enum enumMixinStr_SN_id_tc26_gost_3410_2012_512_paramSetA = `enum SN_id_tc26_gost_3410_2012_512_paramSetA = "id-tc26-gost-3410-2012-512-paramSetA";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_gost_3410_2012_512_paramSetA); }))) {
            mixin(enumMixinStr_SN_id_tc26_gost_3410_2012_512_paramSetA);
        }
    }




    static if(!is(typeof(LN_id_tc26_gost_3410_2012_512_paramSetA))) {
        private enum enumMixinStr_LN_id_tc26_gost_3410_2012_512_paramSetA = `enum LN_id_tc26_gost_3410_2012_512_paramSetA = "GOST R 34.10-2012 (512 bit) ParamSet A";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_tc26_gost_3410_2012_512_paramSetA); }))) {
            mixin(enumMixinStr_LN_id_tc26_gost_3410_2012_512_paramSetA);
        }
    }




    static if(!is(typeof(NID_id_tc26_gost_3410_2012_512_paramSetA))) {
        private enum enumMixinStr_NID_id_tc26_gost_3410_2012_512_paramSetA = `enum NID_id_tc26_gost_3410_2012_512_paramSetA = 998;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_gost_3410_2012_512_paramSetA); }))) {
            mixin(enumMixinStr_NID_id_tc26_gost_3410_2012_512_paramSetA);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_gost_3410_2012_512_paramSetA))) {
        private enum enumMixinStr_OBJ_id_tc26_gost_3410_2012_512_paramSetA = `enum OBJ_id_tc26_gost_3410_2012_512_paramSetA = OBJ_member_body , 643L , 7L , 1L , 2L , 1L , 2L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_gost_3410_2012_512_paramSetA); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_gost_3410_2012_512_paramSetA);
        }
    }




    static if(!is(typeof(SN_id_tc26_gost_3410_2012_512_paramSetB))) {
        private enum enumMixinStr_SN_id_tc26_gost_3410_2012_512_paramSetB = `enum SN_id_tc26_gost_3410_2012_512_paramSetB = "id-tc26-gost-3410-2012-512-paramSetB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_gost_3410_2012_512_paramSetB); }))) {
            mixin(enumMixinStr_SN_id_tc26_gost_3410_2012_512_paramSetB);
        }
    }




    static if(!is(typeof(LN_id_tc26_gost_3410_2012_512_paramSetB))) {
        private enum enumMixinStr_LN_id_tc26_gost_3410_2012_512_paramSetB = `enum LN_id_tc26_gost_3410_2012_512_paramSetB = "GOST R 34.10-2012 (512 bit) ParamSet B";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_tc26_gost_3410_2012_512_paramSetB); }))) {
            mixin(enumMixinStr_LN_id_tc26_gost_3410_2012_512_paramSetB);
        }
    }




    static if(!is(typeof(NID_id_tc26_gost_3410_2012_512_paramSetB))) {
        private enum enumMixinStr_NID_id_tc26_gost_3410_2012_512_paramSetB = `enum NID_id_tc26_gost_3410_2012_512_paramSetB = 999;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_gost_3410_2012_512_paramSetB); }))) {
            mixin(enumMixinStr_NID_id_tc26_gost_3410_2012_512_paramSetB);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_gost_3410_2012_512_paramSetB))) {
        private enum enumMixinStr_OBJ_id_tc26_gost_3410_2012_512_paramSetB = `enum OBJ_id_tc26_gost_3410_2012_512_paramSetB = OBJ_member_body , 643L , 7L , 1L , 2L , 1L , 2L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_gost_3410_2012_512_paramSetB); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_gost_3410_2012_512_paramSetB);
        }
    }




    static if(!is(typeof(SN_id_tc26_gost_3410_2012_512_paramSetC))) {
        private enum enumMixinStr_SN_id_tc26_gost_3410_2012_512_paramSetC = `enum SN_id_tc26_gost_3410_2012_512_paramSetC = "id-tc26-gost-3410-2012-512-paramSetC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_gost_3410_2012_512_paramSetC); }))) {
            mixin(enumMixinStr_SN_id_tc26_gost_3410_2012_512_paramSetC);
        }
    }




    static if(!is(typeof(LN_id_tc26_gost_3410_2012_512_paramSetC))) {
        private enum enumMixinStr_LN_id_tc26_gost_3410_2012_512_paramSetC = `enum LN_id_tc26_gost_3410_2012_512_paramSetC = "GOST R 34.10-2012 (512 bit) ParamSet C";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_tc26_gost_3410_2012_512_paramSetC); }))) {
            mixin(enumMixinStr_LN_id_tc26_gost_3410_2012_512_paramSetC);
        }
    }




    static if(!is(typeof(NID_id_tc26_gost_3410_2012_512_paramSetC))) {
        private enum enumMixinStr_NID_id_tc26_gost_3410_2012_512_paramSetC = `enum NID_id_tc26_gost_3410_2012_512_paramSetC = 1149;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_gost_3410_2012_512_paramSetC); }))) {
            mixin(enumMixinStr_NID_id_tc26_gost_3410_2012_512_paramSetC);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_gost_3410_2012_512_paramSetC))) {
        private enum enumMixinStr_OBJ_id_tc26_gost_3410_2012_512_paramSetC = `enum OBJ_id_tc26_gost_3410_2012_512_paramSetC = OBJ_member_body , 643L , 7L , 1L , 2L , 1L , 2L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_gost_3410_2012_512_paramSetC); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_gost_3410_2012_512_paramSetC);
        }
    }




    static if(!is(typeof(SN_id_tc26_digest_constants))) {
        private enum enumMixinStr_SN_id_tc26_digest_constants = `enum SN_id_tc26_digest_constants = "id-tc26-digest-constants";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_digest_constants); }))) {
            mixin(enumMixinStr_SN_id_tc26_digest_constants);
        }
    }




    static if(!is(typeof(NID_id_tc26_digest_constants))) {
        private enum enumMixinStr_NID_id_tc26_digest_constants = `enum NID_id_tc26_digest_constants = 1000;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_digest_constants); }))) {
            mixin(enumMixinStr_NID_id_tc26_digest_constants);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_digest_constants))) {
        private enum enumMixinStr_OBJ_id_tc26_digest_constants = `enum OBJ_id_tc26_digest_constants = OBJ_member_body , 643L , 7L , 1L , 2L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_digest_constants); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_digest_constants);
        }
    }




    static if(!is(typeof(SN_id_tc26_cipher_constants))) {
        private enum enumMixinStr_SN_id_tc26_cipher_constants = `enum SN_id_tc26_cipher_constants = "id-tc26-cipher-constants";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_cipher_constants); }))) {
            mixin(enumMixinStr_SN_id_tc26_cipher_constants);
        }
    }




    static if(!is(typeof(NID_id_tc26_cipher_constants))) {
        private enum enumMixinStr_NID_id_tc26_cipher_constants = `enum NID_id_tc26_cipher_constants = 1001;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_cipher_constants); }))) {
            mixin(enumMixinStr_NID_id_tc26_cipher_constants);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_cipher_constants))) {
        private enum enumMixinStr_OBJ_id_tc26_cipher_constants = `enum OBJ_id_tc26_cipher_constants = OBJ_member_body , 643L , 7L , 1L , 2L , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_cipher_constants); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_cipher_constants);
        }
    }




    static if(!is(typeof(SN_id_tc26_gost_28147_constants))) {
        private enum enumMixinStr_SN_id_tc26_gost_28147_constants = `enum SN_id_tc26_gost_28147_constants = "id-tc26-gost-28147-constants";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_gost_28147_constants); }))) {
            mixin(enumMixinStr_SN_id_tc26_gost_28147_constants);
        }
    }




    static if(!is(typeof(NID_id_tc26_gost_28147_constants))) {
        private enum enumMixinStr_NID_id_tc26_gost_28147_constants = `enum NID_id_tc26_gost_28147_constants = 1002;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_gost_28147_constants); }))) {
            mixin(enumMixinStr_NID_id_tc26_gost_28147_constants);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_gost_28147_constants))) {
        private enum enumMixinStr_OBJ_id_tc26_gost_28147_constants = `enum OBJ_id_tc26_gost_28147_constants = OBJ_member_body , 643L , 7L , 1L , 2L , 5L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_gost_28147_constants); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_gost_28147_constants);
        }
    }




    static if(!is(typeof(SN_id_tc26_gost_28147_param_Z))) {
        private enum enumMixinStr_SN_id_tc26_gost_28147_param_Z = `enum SN_id_tc26_gost_28147_param_Z = "id-tc26-gost-28147-param-Z";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_tc26_gost_28147_param_Z); }))) {
            mixin(enumMixinStr_SN_id_tc26_gost_28147_param_Z);
        }
    }




    static if(!is(typeof(LN_id_tc26_gost_28147_param_Z))) {
        private enum enumMixinStr_LN_id_tc26_gost_28147_param_Z = `enum LN_id_tc26_gost_28147_param_Z = "GOST 28147-89 TC26 parameter set";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_tc26_gost_28147_param_Z); }))) {
            mixin(enumMixinStr_LN_id_tc26_gost_28147_param_Z);
        }
    }




    static if(!is(typeof(NID_id_tc26_gost_28147_param_Z))) {
        private enum enumMixinStr_NID_id_tc26_gost_28147_param_Z = `enum NID_id_tc26_gost_28147_param_Z = 1003;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_tc26_gost_28147_param_Z); }))) {
            mixin(enumMixinStr_NID_id_tc26_gost_28147_param_Z);
        }
    }




    static if(!is(typeof(OBJ_id_tc26_gost_28147_param_Z))) {
        private enum enumMixinStr_OBJ_id_tc26_gost_28147_param_Z = `enum OBJ_id_tc26_gost_28147_param_Z = OBJ_member_body , 643L , 7L , 1L , 2L , 5L , 1L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_tc26_gost_28147_param_Z); }))) {
            mixin(enumMixinStr_OBJ_id_tc26_gost_28147_param_Z);
        }
    }




    static if(!is(typeof(SN_INN))) {
        private enum enumMixinStr_SN_INN = `enum SN_INN = "INN";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_INN); }))) {
            mixin(enumMixinStr_SN_INN);
        }
    }




    static if(!is(typeof(LN_INN))) {
        private enum enumMixinStr_LN_INN = `enum LN_INN = "INN";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_INN); }))) {
            mixin(enumMixinStr_LN_INN);
        }
    }




    static if(!is(typeof(NID_INN))) {
        private enum enumMixinStr_NID_INN = `enum NID_INN = 1004;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_INN); }))) {
            mixin(enumMixinStr_NID_INN);
        }
    }




    static if(!is(typeof(OBJ_INN))) {
        private enum enumMixinStr_OBJ_INN = `enum OBJ_INN = OBJ_member_body , 643L , 3L , 131L , 1L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_INN); }))) {
            mixin(enumMixinStr_OBJ_INN);
        }
    }




    static if(!is(typeof(SN_OGRN))) {
        private enum enumMixinStr_SN_OGRN = `enum SN_OGRN = "OGRN";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_OGRN); }))) {
            mixin(enumMixinStr_SN_OGRN);
        }
    }




    static if(!is(typeof(LN_OGRN))) {
        private enum enumMixinStr_LN_OGRN = `enum LN_OGRN = "OGRN";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_OGRN); }))) {
            mixin(enumMixinStr_LN_OGRN);
        }
    }




    static if(!is(typeof(NID_OGRN))) {
        private enum enumMixinStr_NID_OGRN = `enum NID_OGRN = 1005;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_OGRN); }))) {
            mixin(enumMixinStr_NID_OGRN);
        }
    }




    static if(!is(typeof(OBJ_OGRN))) {
        private enum enumMixinStr_OBJ_OGRN = `enum OBJ_OGRN = OBJ_member_body , 643L , 100L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_OGRN); }))) {
            mixin(enumMixinStr_OBJ_OGRN);
        }
    }




    static if(!is(typeof(SN_SNILS))) {
        private enum enumMixinStr_SN_SNILS = `enum SN_SNILS = "SNILS";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_SNILS); }))) {
            mixin(enumMixinStr_SN_SNILS);
        }
    }




    static if(!is(typeof(LN_SNILS))) {
        private enum enumMixinStr_LN_SNILS = `enum LN_SNILS = "SNILS";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_SNILS); }))) {
            mixin(enumMixinStr_LN_SNILS);
        }
    }




    static if(!is(typeof(NID_SNILS))) {
        private enum enumMixinStr_NID_SNILS = `enum NID_SNILS = 1006;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_SNILS); }))) {
            mixin(enumMixinStr_NID_SNILS);
        }
    }




    static if(!is(typeof(OBJ_SNILS))) {
        private enum enumMixinStr_OBJ_SNILS = `enum OBJ_SNILS = OBJ_member_body , 643L , 100L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_SNILS); }))) {
            mixin(enumMixinStr_OBJ_SNILS);
        }
    }




    static if(!is(typeof(SN_subjectSignTool))) {
        private enum enumMixinStr_SN_subjectSignTool = `enum SN_subjectSignTool = "subjectSignTool";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_subjectSignTool); }))) {
            mixin(enumMixinStr_SN_subjectSignTool);
        }
    }




    static if(!is(typeof(LN_subjectSignTool))) {
        private enum enumMixinStr_LN_subjectSignTool = `enum LN_subjectSignTool = "Signing Tool of Subject";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_subjectSignTool); }))) {
            mixin(enumMixinStr_LN_subjectSignTool);
        }
    }




    static if(!is(typeof(NID_subjectSignTool))) {
        private enum enumMixinStr_NID_subjectSignTool = `enum NID_subjectSignTool = 1007;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_subjectSignTool); }))) {
            mixin(enumMixinStr_NID_subjectSignTool);
        }
    }




    static if(!is(typeof(OBJ_subjectSignTool))) {
        private enum enumMixinStr_OBJ_subjectSignTool = `enum OBJ_subjectSignTool = OBJ_member_body , 643L , 100L , 111L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_subjectSignTool); }))) {
            mixin(enumMixinStr_OBJ_subjectSignTool);
        }
    }




    static if(!is(typeof(SN_issuerSignTool))) {
        private enum enumMixinStr_SN_issuerSignTool = `enum SN_issuerSignTool = "issuerSignTool";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_issuerSignTool); }))) {
            mixin(enumMixinStr_SN_issuerSignTool);
        }
    }




    static if(!is(typeof(LN_issuerSignTool))) {
        private enum enumMixinStr_LN_issuerSignTool = `enum LN_issuerSignTool = "Signing Tool of Issuer";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_issuerSignTool); }))) {
            mixin(enumMixinStr_LN_issuerSignTool);
        }
    }




    static if(!is(typeof(NID_issuerSignTool))) {
        private enum enumMixinStr_NID_issuerSignTool = `enum NID_issuerSignTool = 1008;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_issuerSignTool); }))) {
            mixin(enumMixinStr_NID_issuerSignTool);
        }
    }




    static if(!is(typeof(OBJ_issuerSignTool))) {
        private enum enumMixinStr_OBJ_issuerSignTool = `enum OBJ_issuerSignTool = OBJ_member_body , 643L , 100L , 112L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_issuerSignTool); }))) {
            mixin(enumMixinStr_OBJ_issuerSignTool);
        }
    }




    static if(!is(typeof(SN_grasshopper_ecb))) {
        private enum enumMixinStr_SN_grasshopper_ecb = `enum SN_grasshopper_ecb = "grasshopper-ecb";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_grasshopper_ecb); }))) {
            mixin(enumMixinStr_SN_grasshopper_ecb);
        }
    }




    static if(!is(typeof(NID_grasshopper_ecb))) {
        private enum enumMixinStr_NID_grasshopper_ecb = `enum NID_grasshopper_ecb = 1012;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_grasshopper_ecb); }))) {
            mixin(enumMixinStr_NID_grasshopper_ecb);
        }
    }




    static if(!is(typeof(SN_grasshopper_ctr))) {
        private enum enumMixinStr_SN_grasshopper_ctr = `enum SN_grasshopper_ctr = "grasshopper-ctr";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_grasshopper_ctr); }))) {
            mixin(enumMixinStr_SN_grasshopper_ctr);
        }
    }




    static if(!is(typeof(NID_grasshopper_ctr))) {
        private enum enumMixinStr_NID_grasshopper_ctr = `enum NID_grasshopper_ctr = 1013;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_grasshopper_ctr); }))) {
            mixin(enumMixinStr_NID_grasshopper_ctr);
        }
    }




    static if(!is(typeof(SN_grasshopper_ofb))) {
        private enum enumMixinStr_SN_grasshopper_ofb = `enum SN_grasshopper_ofb = "grasshopper-ofb";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_grasshopper_ofb); }))) {
            mixin(enumMixinStr_SN_grasshopper_ofb);
        }
    }




    static if(!is(typeof(NID_grasshopper_ofb))) {
        private enum enumMixinStr_NID_grasshopper_ofb = `enum NID_grasshopper_ofb = 1014;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_grasshopper_ofb); }))) {
            mixin(enumMixinStr_NID_grasshopper_ofb);
        }
    }




    static if(!is(typeof(SN_grasshopper_cbc))) {
        private enum enumMixinStr_SN_grasshopper_cbc = `enum SN_grasshopper_cbc = "grasshopper-cbc";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_grasshopper_cbc); }))) {
            mixin(enumMixinStr_SN_grasshopper_cbc);
        }
    }




    static if(!is(typeof(NID_grasshopper_cbc))) {
        private enum enumMixinStr_NID_grasshopper_cbc = `enum NID_grasshopper_cbc = 1015;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_grasshopper_cbc); }))) {
            mixin(enumMixinStr_NID_grasshopper_cbc);
        }
    }




    static if(!is(typeof(SN_grasshopper_cfb))) {
        private enum enumMixinStr_SN_grasshopper_cfb = `enum SN_grasshopper_cfb = "grasshopper-cfb";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_grasshopper_cfb); }))) {
            mixin(enumMixinStr_SN_grasshopper_cfb);
        }
    }




    static if(!is(typeof(NID_grasshopper_cfb))) {
        private enum enumMixinStr_NID_grasshopper_cfb = `enum NID_grasshopper_cfb = 1016;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_grasshopper_cfb); }))) {
            mixin(enumMixinStr_NID_grasshopper_cfb);
        }
    }




    static if(!is(typeof(SN_grasshopper_mac))) {
        private enum enumMixinStr_SN_grasshopper_mac = `enum SN_grasshopper_mac = "grasshopper-mac";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_grasshopper_mac); }))) {
            mixin(enumMixinStr_SN_grasshopper_mac);
        }
    }




    static if(!is(typeof(NID_grasshopper_mac))) {
        private enum enumMixinStr_NID_grasshopper_mac = `enum NID_grasshopper_mac = 1017;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_grasshopper_mac); }))) {
            mixin(enumMixinStr_NID_grasshopper_mac);
        }
    }




    static if(!is(typeof(SN_magma_ecb))) {
        private enum enumMixinStr_SN_magma_ecb = `enum SN_magma_ecb = "magma-ecb";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_magma_ecb); }))) {
            mixin(enumMixinStr_SN_magma_ecb);
        }
    }




    static if(!is(typeof(NID_magma_ecb))) {
        private enum enumMixinStr_NID_magma_ecb = `enum NID_magma_ecb = 1187;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_magma_ecb); }))) {
            mixin(enumMixinStr_NID_magma_ecb);
        }
    }




    static if(!is(typeof(SN_magma_ctr))) {
        private enum enumMixinStr_SN_magma_ctr = `enum SN_magma_ctr = "magma-ctr";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_magma_ctr); }))) {
            mixin(enumMixinStr_SN_magma_ctr);
        }
    }




    static if(!is(typeof(NID_magma_ctr))) {
        private enum enumMixinStr_NID_magma_ctr = `enum NID_magma_ctr = 1188;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_magma_ctr); }))) {
            mixin(enumMixinStr_NID_magma_ctr);
        }
    }




    static if(!is(typeof(SN_magma_ofb))) {
        private enum enumMixinStr_SN_magma_ofb = `enum SN_magma_ofb = "magma-ofb";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_magma_ofb); }))) {
            mixin(enumMixinStr_SN_magma_ofb);
        }
    }




    static if(!is(typeof(NID_magma_ofb))) {
        private enum enumMixinStr_NID_magma_ofb = `enum NID_magma_ofb = 1189;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_magma_ofb); }))) {
            mixin(enumMixinStr_NID_magma_ofb);
        }
    }




    static if(!is(typeof(SN_magma_cbc))) {
        private enum enumMixinStr_SN_magma_cbc = `enum SN_magma_cbc = "magma-cbc";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_magma_cbc); }))) {
            mixin(enumMixinStr_SN_magma_cbc);
        }
    }




    static if(!is(typeof(NID_magma_cbc))) {
        private enum enumMixinStr_NID_magma_cbc = `enum NID_magma_cbc = 1190;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_magma_cbc); }))) {
            mixin(enumMixinStr_NID_magma_cbc);
        }
    }




    static if(!is(typeof(SN_magma_cfb))) {
        private enum enumMixinStr_SN_magma_cfb = `enum SN_magma_cfb = "magma-cfb";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_magma_cfb); }))) {
            mixin(enumMixinStr_SN_magma_cfb);
        }
    }




    static if(!is(typeof(NID_magma_cfb))) {
        private enum enumMixinStr_NID_magma_cfb = `enum NID_magma_cfb = 1191;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_magma_cfb); }))) {
            mixin(enumMixinStr_NID_magma_cfb);
        }
    }




    static if(!is(typeof(SN_magma_mac))) {
        private enum enumMixinStr_SN_magma_mac = `enum SN_magma_mac = "magma-mac";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_magma_mac); }))) {
            mixin(enumMixinStr_SN_magma_mac);
        }
    }




    static if(!is(typeof(NID_magma_mac))) {
        private enum enumMixinStr_NID_magma_mac = `enum NID_magma_mac = 1192;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_magma_mac); }))) {
            mixin(enumMixinStr_NID_magma_mac);
        }
    }




    static if(!is(typeof(SN_camellia_128_cbc))) {
        private enum enumMixinStr_SN_camellia_128_cbc = `enum SN_camellia_128_cbc = "CAMELLIA-128-CBC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_camellia_128_cbc); }))) {
            mixin(enumMixinStr_SN_camellia_128_cbc);
        }
    }




    static if(!is(typeof(LN_camellia_128_cbc))) {
        private enum enumMixinStr_LN_camellia_128_cbc = `enum LN_camellia_128_cbc = "camellia-128-cbc";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_camellia_128_cbc); }))) {
            mixin(enumMixinStr_LN_camellia_128_cbc);
        }
    }




    static if(!is(typeof(NID_camellia_128_cbc))) {
        private enum enumMixinStr_NID_camellia_128_cbc = `enum NID_camellia_128_cbc = 751;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_camellia_128_cbc); }))) {
            mixin(enumMixinStr_NID_camellia_128_cbc);
        }
    }




    static if(!is(typeof(OBJ_camellia_128_cbc))) {
        private enum enumMixinStr_OBJ_camellia_128_cbc = `enum OBJ_camellia_128_cbc = 1L , 2L , 392L , 200011L , 61L , 1L , 1L , 1L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_camellia_128_cbc); }))) {
            mixin(enumMixinStr_OBJ_camellia_128_cbc);
        }
    }




    static if(!is(typeof(SN_camellia_192_cbc))) {
        private enum enumMixinStr_SN_camellia_192_cbc = `enum SN_camellia_192_cbc = "CAMELLIA-192-CBC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_camellia_192_cbc); }))) {
            mixin(enumMixinStr_SN_camellia_192_cbc);
        }
    }




    static if(!is(typeof(LN_camellia_192_cbc))) {
        private enum enumMixinStr_LN_camellia_192_cbc = `enum LN_camellia_192_cbc = "camellia-192-cbc";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_camellia_192_cbc); }))) {
            mixin(enumMixinStr_LN_camellia_192_cbc);
        }
    }




    static if(!is(typeof(NID_camellia_192_cbc))) {
        private enum enumMixinStr_NID_camellia_192_cbc = `enum NID_camellia_192_cbc = 752;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_camellia_192_cbc); }))) {
            mixin(enumMixinStr_NID_camellia_192_cbc);
        }
    }




    static if(!is(typeof(OBJ_camellia_192_cbc))) {
        private enum enumMixinStr_OBJ_camellia_192_cbc = `enum OBJ_camellia_192_cbc = 1L , 2L , 392L , 200011L , 61L , 1L , 1L , 1L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_camellia_192_cbc); }))) {
            mixin(enumMixinStr_OBJ_camellia_192_cbc);
        }
    }




    static if(!is(typeof(SN_camellia_256_cbc))) {
        private enum enumMixinStr_SN_camellia_256_cbc = `enum SN_camellia_256_cbc = "CAMELLIA-256-CBC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_camellia_256_cbc); }))) {
            mixin(enumMixinStr_SN_camellia_256_cbc);
        }
    }




    static if(!is(typeof(LN_camellia_256_cbc))) {
        private enum enumMixinStr_LN_camellia_256_cbc = `enum LN_camellia_256_cbc = "camellia-256-cbc";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_camellia_256_cbc); }))) {
            mixin(enumMixinStr_LN_camellia_256_cbc);
        }
    }




    static if(!is(typeof(NID_camellia_256_cbc))) {
        private enum enumMixinStr_NID_camellia_256_cbc = `enum NID_camellia_256_cbc = 753;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_camellia_256_cbc); }))) {
            mixin(enumMixinStr_NID_camellia_256_cbc);
        }
    }




    static if(!is(typeof(OBJ_camellia_256_cbc))) {
        private enum enumMixinStr_OBJ_camellia_256_cbc = `enum OBJ_camellia_256_cbc = 1L , 2L , 392L , 200011L , 61L , 1L , 1L , 1L , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_camellia_256_cbc); }))) {
            mixin(enumMixinStr_OBJ_camellia_256_cbc);
        }
    }




    static if(!is(typeof(SN_id_camellia128_wrap))) {
        private enum enumMixinStr_SN_id_camellia128_wrap = `enum SN_id_camellia128_wrap = "id-camellia128-wrap";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_camellia128_wrap); }))) {
            mixin(enumMixinStr_SN_id_camellia128_wrap);
        }
    }




    static if(!is(typeof(NID_id_camellia128_wrap))) {
        private enum enumMixinStr_NID_id_camellia128_wrap = `enum NID_id_camellia128_wrap = 907;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_camellia128_wrap); }))) {
            mixin(enumMixinStr_NID_id_camellia128_wrap);
        }
    }




    static if(!is(typeof(OBJ_id_camellia128_wrap))) {
        private enum enumMixinStr_OBJ_id_camellia128_wrap = `enum OBJ_id_camellia128_wrap = 1L , 2L , 392L , 200011L , 61L , 1L , 1L , 3L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_camellia128_wrap); }))) {
            mixin(enumMixinStr_OBJ_id_camellia128_wrap);
        }
    }




    static if(!is(typeof(SN_id_camellia192_wrap))) {
        private enum enumMixinStr_SN_id_camellia192_wrap = `enum SN_id_camellia192_wrap = "id-camellia192-wrap";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_camellia192_wrap); }))) {
            mixin(enumMixinStr_SN_id_camellia192_wrap);
        }
    }




    static if(!is(typeof(NID_id_camellia192_wrap))) {
        private enum enumMixinStr_NID_id_camellia192_wrap = `enum NID_id_camellia192_wrap = 908;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_camellia192_wrap); }))) {
            mixin(enumMixinStr_NID_id_camellia192_wrap);
        }
    }




    static if(!is(typeof(OBJ_id_camellia192_wrap))) {
        private enum enumMixinStr_OBJ_id_camellia192_wrap = `enum OBJ_id_camellia192_wrap = 1L , 2L , 392L , 200011L , 61L , 1L , 1L , 3L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_camellia192_wrap); }))) {
            mixin(enumMixinStr_OBJ_id_camellia192_wrap);
        }
    }




    static if(!is(typeof(SN_id_camellia256_wrap))) {
        private enum enumMixinStr_SN_id_camellia256_wrap = `enum SN_id_camellia256_wrap = "id-camellia256-wrap";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_camellia256_wrap); }))) {
            mixin(enumMixinStr_SN_id_camellia256_wrap);
        }
    }




    static if(!is(typeof(NID_id_camellia256_wrap))) {
        private enum enumMixinStr_NID_id_camellia256_wrap = `enum NID_id_camellia256_wrap = 909;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_camellia256_wrap); }))) {
            mixin(enumMixinStr_NID_id_camellia256_wrap);
        }
    }




    static if(!is(typeof(OBJ_id_camellia256_wrap))) {
        private enum enumMixinStr_OBJ_id_camellia256_wrap = `enum OBJ_id_camellia256_wrap = 1L , 2L , 392L , 200011L , 61L , 1L , 1L , 3L , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_camellia256_wrap); }))) {
            mixin(enumMixinStr_OBJ_id_camellia256_wrap);
        }
    }




    static if(!is(typeof(OBJ_ntt_ds))) {
        private enum enumMixinStr_OBJ_ntt_ds = `enum OBJ_ntt_ds = 0L , 3L , 4401L , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ntt_ds); }))) {
            mixin(enumMixinStr_OBJ_ntt_ds);
        }
    }




    static if(!is(typeof(OBJ_camellia))) {
        private enum enumMixinStr_OBJ_camellia = `enum OBJ_camellia = 0L , 3L , 4401L , 5L , 3L , 1L , 9L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_camellia); }))) {
            mixin(enumMixinStr_OBJ_camellia);
        }
    }




    static if(!is(typeof(SN_camellia_128_ecb))) {
        private enum enumMixinStr_SN_camellia_128_ecb = `enum SN_camellia_128_ecb = "CAMELLIA-128-ECB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_camellia_128_ecb); }))) {
            mixin(enumMixinStr_SN_camellia_128_ecb);
        }
    }




    static if(!is(typeof(LN_camellia_128_ecb))) {
        private enum enumMixinStr_LN_camellia_128_ecb = `enum LN_camellia_128_ecb = "camellia-128-ecb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_camellia_128_ecb); }))) {
            mixin(enumMixinStr_LN_camellia_128_ecb);
        }
    }




    static if(!is(typeof(NID_camellia_128_ecb))) {
        private enum enumMixinStr_NID_camellia_128_ecb = `enum NID_camellia_128_ecb = 754;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_camellia_128_ecb); }))) {
            mixin(enumMixinStr_NID_camellia_128_ecb);
        }
    }




    static if(!is(typeof(OBJ_camellia_128_ecb))) {
        private enum enumMixinStr_OBJ_camellia_128_ecb = `enum OBJ_camellia_128_ecb = 0L , 3L , 4401L , 5L , 3L , 1L , 9L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_camellia_128_ecb); }))) {
            mixin(enumMixinStr_OBJ_camellia_128_ecb);
        }
    }




    static if(!is(typeof(SN_camellia_128_ofb128))) {
        private enum enumMixinStr_SN_camellia_128_ofb128 = `enum SN_camellia_128_ofb128 = "CAMELLIA-128-OFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_camellia_128_ofb128); }))) {
            mixin(enumMixinStr_SN_camellia_128_ofb128);
        }
    }




    static if(!is(typeof(LN_camellia_128_ofb128))) {
        private enum enumMixinStr_LN_camellia_128_ofb128 = `enum LN_camellia_128_ofb128 = "camellia-128-ofb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_camellia_128_ofb128); }))) {
            mixin(enumMixinStr_LN_camellia_128_ofb128);
        }
    }




    static if(!is(typeof(NID_camellia_128_ofb128))) {
        private enum enumMixinStr_NID_camellia_128_ofb128 = `enum NID_camellia_128_ofb128 = 766;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_camellia_128_ofb128); }))) {
            mixin(enumMixinStr_NID_camellia_128_ofb128);
        }
    }




    static if(!is(typeof(OBJ_camellia_128_ofb128))) {
        private enum enumMixinStr_OBJ_camellia_128_ofb128 = `enum OBJ_camellia_128_ofb128 = 0L , 3L , 4401L , 5L , 3L , 1L , 9L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_camellia_128_ofb128); }))) {
            mixin(enumMixinStr_OBJ_camellia_128_ofb128);
        }
    }




    static if(!is(typeof(SN_camellia_128_cfb128))) {
        private enum enumMixinStr_SN_camellia_128_cfb128 = `enum SN_camellia_128_cfb128 = "CAMELLIA-128-CFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_camellia_128_cfb128); }))) {
            mixin(enumMixinStr_SN_camellia_128_cfb128);
        }
    }




    static if(!is(typeof(LN_camellia_128_cfb128))) {
        private enum enumMixinStr_LN_camellia_128_cfb128 = `enum LN_camellia_128_cfb128 = "camellia-128-cfb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_camellia_128_cfb128); }))) {
            mixin(enumMixinStr_LN_camellia_128_cfb128);
        }
    }




    static if(!is(typeof(NID_camellia_128_cfb128))) {
        private enum enumMixinStr_NID_camellia_128_cfb128 = `enum NID_camellia_128_cfb128 = 757;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_camellia_128_cfb128); }))) {
            mixin(enumMixinStr_NID_camellia_128_cfb128);
        }
    }




    static if(!is(typeof(OBJ_camellia_128_cfb128))) {
        private enum enumMixinStr_OBJ_camellia_128_cfb128 = `enum OBJ_camellia_128_cfb128 = 0L , 3L , 4401L , 5L , 3L , 1L , 9L , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_camellia_128_cfb128); }))) {
            mixin(enumMixinStr_OBJ_camellia_128_cfb128);
        }
    }




    static if(!is(typeof(SN_camellia_128_gcm))) {
        private enum enumMixinStr_SN_camellia_128_gcm = `enum SN_camellia_128_gcm = "CAMELLIA-128-GCM";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_camellia_128_gcm); }))) {
            mixin(enumMixinStr_SN_camellia_128_gcm);
        }
    }




    static if(!is(typeof(LN_camellia_128_gcm))) {
        private enum enumMixinStr_LN_camellia_128_gcm = `enum LN_camellia_128_gcm = "camellia-128-gcm";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_camellia_128_gcm); }))) {
            mixin(enumMixinStr_LN_camellia_128_gcm);
        }
    }




    static if(!is(typeof(NID_camellia_128_gcm))) {
        private enum enumMixinStr_NID_camellia_128_gcm = `enum NID_camellia_128_gcm = 961;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_camellia_128_gcm); }))) {
            mixin(enumMixinStr_NID_camellia_128_gcm);
        }
    }




    static if(!is(typeof(OBJ_camellia_128_gcm))) {
        private enum enumMixinStr_OBJ_camellia_128_gcm = `enum OBJ_camellia_128_gcm = 0L , 3L , 4401L , 5L , 3L , 1L , 9L , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_camellia_128_gcm); }))) {
            mixin(enumMixinStr_OBJ_camellia_128_gcm);
        }
    }




    static if(!is(typeof(SN_camellia_128_ccm))) {
        private enum enumMixinStr_SN_camellia_128_ccm = `enum SN_camellia_128_ccm = "CAMELLIA-128-CCM";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_camellia_128_ccm); }))) {
            mixin(enumMixinStr_SN_camellia_128_ccm);
        }
    }




    static if(!is(typeof(LN_camellia_128_ccm))) {
        private enum enumMixinStr_LN_camellia_128_ccm = `enum LN_camellia_128_ccm = "camellia-128-ccm";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_camellia_128_ccm); }))) {
            mixin(enumMixinStr_LN_camellia_128_ccm);
        }
    }




    static if(!is(typeof(NID_camellia_128_ccm))) {
        private enum enumMixinStr_NID_camellia_128_ccm = `enum NID_camellia_128_ccm = 962;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_camellia_128_ccm); }))) {
            mixin(enumMixinStr_NID_camellia_128_ccm);
        }
    }




    static if(!is(typeof(OBJ_camellia_128_ccm))) {
        private enum enumMixinStr_OBJ_camellia_128_ccm = `enum OBJ_camellia_128_ccm = 0L , 3L , 4401L , 5L , 3L , 1L , 9L , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_camellia_128_ccm); }))) {
            mixin(enumMixinStr_OBJ_camellia_128_ccm);
        }
    }




    static if(!is(typeof(SN_camellia_128_ctr))) {
        private enum enumMixinStr_SN_camellia_128_ctr = `enum SN_camellia_128_ctr = "CAMELLIA-128-CTR";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_camellia_128_ctr); }))) {
            mixin(enumMixinStr_SN_camellia_128_ctr);
        }
    }




    static if(!is(typeof(LN_camellia_128_ctr))) {
        private enum enumMixinStr_LN_camellia_128_ctr = `enum LN_camellia_128_ctr = "camellia-128-ctr";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_camellia_128_ctr); }))) {
            mixin(enumMixinStr_LN_camellia_128_ctr);
        }
    }




    static if(!is(typeof(NID_camellia_128_ctr))) {
        private enum enumMixinStr_NID_camellia_128_ctr = `enum NID_camellia_128_ctr = 963;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_camellia_128_ctr); }))) {
            mixin(enumMixinStr_NID_camellia_128_ctr);
        }
    }




    static if(!is(typeof(OBJ_camellia_128_ctr))) {
        private enum enumMixinStr_OBJ_camellia_128_ctr = `enum OBJ_camellia_128_ctr = 0L , 3L , 4401L , 5L , 3L , 1L , 9L , 9L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_camellia_128_ctr); }))) {
            mixin(enumMixinStr_OBJ_camellia_128_ctr);
        }
    }




    static if(!is(typeof(SN_camellia_128_cmac))) {
        private enum enumMixinStr_SN_camellia_128_cmac = `enum SN_camellia_128_cmac = "CAMELLIA-128-CMAC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_camellia_128_cmac); }))) {
            mixin(enumMixinStr_SN_camellia_128_cmac);
        }
    }




    static if(!is(typeof(LN_camellia_128_cmac))) {
        private enum enumMixinStr_LN_camellia_128_cmac = `enum LN_camellia_128_cmac = "camellia-128-cmac";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_camellia_128_cmac); }))) {
            mixin(enumMixinStr_LN_camellia_128_cmac);
        }
    }




    static if(!is(typeof(NID_camellia_128_cmac))) {
        private enum enumMixinStr_NID_camellia_128_cmac = `enum NID_camellia_128_cmac = 964;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_camellia_128_cmac); }))) {
            mixin(enumMixinStr_NID_camellia_128_cmac);
        }
    }




    static if(!is(typeof(OBJ_camellia_128_cmac))) {
        private enum enumMixinStr_OBJ_camellia_128_cmac = `enum OBJ_camellia_128_cmac = 0L , 3L , 4401L , 5L , 3L , 1L , 9L , 10L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_camellia_128_cmac); }))) {
            mixin(enumMixinStr_OBJ_camellia_128_cmac);
        }
    }




    static if(!is(typeof(SN_camellia_192_ecb))) {
        private enum enumMixinStr_SN_camellia_192_ecb = `enum SN_camellia_192_ecb = "CAMELLIA-192-ECB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_camellia_192_ecb); }))) {
            mixin(enumMixinStr_SN_camellia_192_ecb);
        }
    }




    static if(!is(typeof(LN_camellia_192_ecb))) {
        private enum enumMixinStr_LN_camellia_192_ecb = `enum LN_camellia_192_ecb = "camellia-192-ecb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_camellia_192_ecb); }))) {
            mixin(enumMixinStr_LN_camellia_192_ecb);
        }
    }




    static if(!is(typeof(NID_camellia_192_ecb))) {
        private enum enumMixinStr_NID_camellia_192_ecb = `enum NID_camellia_192_ecb = 755;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_camellia_192_ecb); }))) {
            mixin(enumMixinStr_NID_camellia_192_ecb);
        }
    }




    static if(!is(typeof(OBJ_camellia_192_ecb))) {
        private enum enumMixinStr_OBJ_camellia_192_ecb = `enum OBJ_camellia_192_ecb = 0L , 3L , 4401L , 5L , 3L , 1L , 9L , 21L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_camellia_192_ecb); }))) {
            mixin(enumMixinStr_OBJ_camellia_192_ecb);
        }
    }




    static if(!is(typeof(SN_camellia_192_ofb128))) {
        private enum enumMixinStr_SN_camellia_192_ofb128 = `enum SN_camellia_192_ofb128 = "CAMELLIA-192-OFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_camellia_192_ofb128); }))) {
            mixin(enumMixinStr_SN_camellia_192_ofb128);
        }
    }




    static if(!is(typeof(LN_camellia_192_ofb128))) {
        private enum enumMixinStr_LN_camellia_192_ofb128 = `enum LN_camellia_192_ofb128 = "camellia-192-ofb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_camellia_192_ofb128); }))) {
            mixin(enumMixinStr_LN_camellia_192_ofb128);
        }
    }




    static if(!is(typeof(NID_camellia_192_ofb128))) {
        private enum enumMixinStr_NID_camellia_192_ofb128 = `enum NID_camellia_192_ofb128 = 767;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_camellia_192_ofb128); }))) {
            mixin(enumMixinStr_NID_camellia_192_ofb128);
        }
    }




    static if(!is(typeof(OBJ_camellia_192_ofb128))) {
        private enum enumMixinStr_OBJ_camellia_192_ofb128 = `enum OBJ_camellia_192_ofb128 = 0L , 3L , 4401L , 5L , 3L , 1L , 9L , 23L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_camellia_192_ofb128); }))) {
            mixin(enumMixinStr_OBJ_camellia_192_ofb128);
        }
    }




    static if(!is(typeof(SN_camellia_192_cfb128))) {
        private enum enumMixinStr_SN_camellia_192_cfb128 = `enum SN_camellia_192_cfb128 = "CAMELLIA-192-CFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_camellia_192_cfb128); }))) {
            mixin(enumMixinStr_SN_camellia_192_cfb128);
        }
    }




    static if(!is(typeof(LN_camellia_192_cfb128))) {
        private enum enumMixinStr_LN_camellia_192_cfb128 = `enum LN_camellia_192_cfb128 = "camellia-192-cfb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_camellia_192_cfb128); }))) {
            mixin(enumMixinStr_LN_camellia_192_cfb128);
        }
    }




    static if(!is(typeof(NID_camellia_192_cfb128))) {
        private enum enumMixinStr_NID_camellia_192_cfb128 = `enum NID_camellia_192_cfb128 = 758;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_camellia_192_cfb128); }))) {
            mixin(enumMixinStr_NID_camellia_192_cfb128);
        }
    }




    static if(!is(typeof(OBJ_camellia_192_cfb128))) {
        private enum enumMixinStr_OBJ_camellia_192_cfb128 = `enum OBJ_camellia_192_cfb128 = 0L , 3L , 4401L , 5L , 3L , 1L , 9L , 24L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_camellia_192_cfb128); }))) {
            mixin(enumMixinStr_OBJ_camellia_192_cfb128);
        }
    }




    static if(!is(typeof(SN_camellia_192_gcm))) {
        private enum enumMixinStr_SN_camellia_192_gcm = `enum SN_camellia_192_gcm = "CAMELLIA-192-GCM";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_camellia_192_gcm); }))) {
            mixin(enumMixinStr_SN_camellia_192_gcm);
        }
    }




    static if(!is(typeof(LN_camellia_192_gcm))) {
        private enum enumMixinStr_LN_camellia_192_gcm = `enum LN_camellia_192_gcm = "camellia-192-gcm";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_camellia_192_gcm); }))) {
            mixin(enumMixinStr_LN_camellia_192_gcm);
        }
    }




    static if(!is(typeof(NID_camellia_192_gcm))) {
        private enum enumMixinStr_NID_camellia_192_gcm = `enum NID_camellia_192_gcm = 965;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_camellia_192_gcm); }))) {
            mixin(enumMixinStr_NID_camellia_192_gcm);
        }
    }




    static if(!is(typeof(OBJ_camellia_192_gcm))) {
        private enum enumMixinStr_OBJ_camellia_192_gcm = `enum OBJ_camellia_192_gcm = 0L , 3L , 4401L , 5L , 3L , 1L , 9L , 26L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_camellia_192_gcm); }))) {
            mixin(enumMixinStr_OBJ_camellia_192_gcm);
        }
    }




    static if(!is(typeof(SN_camellia_192_ccm))) {
        private enum enumMixinStr_SN_camellia_192_ccm = `enum SN_camellia_192_ccm = "CAMELLIA-192-CCM";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_camellia_192_ccm); }))) {
            mixin(enumMixinStr_SN_camellia_192_ccm);
        }
    }




    static if(!is(typeof(LN_camellia_192_ccm))) {
        private enum enumMixinStr_LN_camellia_192_ccm = `enum LN_camellia_192_ccm = "camellia-192-ccm";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_camellia_192_ccm); }))) {
            mixin(enumMixinStr_LN_camellia_192_ccm);
        }
    }




    static if(!is(typeof(NID_camellia_192_ccm))) {
        private enum enumMixinStr_NID_camellia_192_ccm = `enum NID_camellia_192_ccm = 966;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_camellia_192_ccm); }))) {
            mixin(enumMixinStr_NID_camellia_192_ccm);
        }
    }




    static if(!is(typeof(OBJ_camellia_192_ccm))) {
        private enum enumMixinStr_OBJ_camellia_192_ccm = `enum OBJ_camellia_192_ccm = 0L , 3L , 4401L , 5L , 3L , 1L , 9L , 27L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_camellia_192_ccm); }))) {
            mixin(enumMixinStr_OBJ_camellia_192_ccm);
        }
    }




    static if(!is(typeof(SN_camellia_192_ctr))) {
        private enum enumMixinStr_SN_camellia_192_ctr = `enum SN_camellia_192_ctr = "CAMELLIA-192-CTR";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_camellia_192_ctr); }))) {
            mixin(enumMixinStr_SN_camellia_192_ctr);
        }
    }




    static if(!is(typeof(LN_camellia_192_ctr))) {
        private enum enumMixinStr_LN_camellia_192_ctr = `enum LN_camellia_192_ctr = "camellia-192-ctr";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_camellia_192_ctr); }))) {
            mixin(enumMixinStr_LN_camellia_192_ctr);
        }
    }




    static if(!is(typeof(NID_camellia_192_ctr))) {
        private enum enumMixinStr_NID_camellia_192_ctr = `enum NID_camellia_192_ctr = 967;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_camellia_192_ctr); }))) {
            mixin(enumMixinStr_NID_camellia_192_ctr);
        }
    }




    static if(!is(typeof(OBJ_camellia_192_ctr))) {
        private enum enumMixinStr_OBJ_camellia_192_ctr = `enum OBJ_camellia_192_ctr = 0L , 3L , 4401L , 5L , 3L , 1L , 9L , 29L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_camellia_192_ctr); }))) {
            mixin(enumMixinStr_OBJ_camellia_192_ctr);
        }
    }




    static if(!is(typeof(SN_camellia_192_cmac))) {
        private enum enumMixinStr_SN_camellia_192_cmac = `enum SN_camellia_192_cmac = "CAMELLIA-192-CMAC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_camellia_192_cmac); }))) {
            mixin(enumMixinStr_SN_camellia_192_cmac);
        }
    }




    static if(!is(typeof(LN_camellia_192_cmac))) {
        private enum enumMixinStr_LN_camellia_192_cmac = `enum LN_camellia_192_cmac = "camellia-192-cmac";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_camellia_192_cmac); }))) {
            mixin(enumMixinStr_LN_camellia_192_cmac);
        }
    }




    static if(!is(typeof(NID_camellia_192_cmac))) {
        private enum enumMixinStr_NID_camellia_192_cmac = `enum NID_camellia_192_cmac = 968;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_camellia_192_cmac); }))) {
            mixin(enumMixinStr_NID_camellia_192_cmac);
        }
    }




    static if(!is(typeof(OBJ_camellia_192_cmac))) {
        private enum enumMixinStr_OBJ_camellia_192_cmac = `enum OBJ_camellia_192_cmac = 0L , 3L , 4401L , 5L , 3L , 1L , 9L , 30L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_camellia_192_cmac); }))) {
            mixin(enumMixinStr_OBJ_camellia_192_cmac);
        }
    }




    static if(!is(typeof(SN_camellia_256_ecb))) {
        private enum enumMixinStr_SN_camellia_256_ecb = `enum SN_camellia_256_ecb = "CAMELLIA-256-ECB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_camellia_256_ecb); }))) {
            mixin(enumMixinStr_SN_camellia_256_ecb);
        }
    }




    static if(!is(typeof(LN_camellia_256_ecb))) {
        private enum enumMixinStr_LN_camellia_256_ecb = `enum LN_camellia_256_ecb = "camellia-256-ecb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_camellia_256_ecb); }))) {
            mixin(enumMixinStr_LN_camellia_256_ecb);
        }
    }




    static if(!is(typeof(NID_camellia_256_ecb))) {
        private enum enumMixinStr_NID_camellia_256_ecb = `enum NID_camellia_256_ecb = 756;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_camellia_256_ecb); }))) {
            mixin(enumMixinStr_NID_camellia_256_ecb);
        }
    }




    static if(!is(typeof(OBJ_camellia_256_ecb))) {
        private enum enumMixinStr_OBJ_camellia_256_ecb = `enum OBJ_camellia_256_ecb = 0L , 3L , 4401L , 5L , 3L , 1L , 9L , 41L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_camellia_256_ecb); }))) {
            mixin(enumMixinStr_OBJ_camellia_256_ecb);
        }
    }




    static if(!is(typeof(SN_camellia_256_ofb128))) {
        private enum enumMixinStr_SN_camellia_256_ofb128 = `enum SN_camellia_256_ofb128 = "CAMELLIA-256-OFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_camellia_256_ofb128); }))) {
            mixin(enumMixinStr_SN_camellia_256_ofb128);
        }
    }




    static if(!is(typeof(LN_camellia_256_ofb128))) {
        private enum enumMixinStr_LN_camellia_256_ofb128 = `enum LN_camellia_256_ofb128 = "camellia-256-ofb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_camellia_256_ofb128); }))) {
            mixin(enumMixinStr_LN_camellia_256_ofb128);
        }
    }




    static if(!is(typeof(NID_camellia_256_ofb128))) {
        private enum enumMixinStr_NID_camellia_256_ofb128 = `enum NID_camellia_256_ofb128 = 768;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_camellia_256_ofb128); }))) {
            mixin(enumMixinStr_NID_camellia_256_ofb128);
        }
    }




    static if(!is(typeof(OBJ_camellia_256_ofb128))) {
        private enum enumMixinStr_OBJ_camellia_256_ofb128 = `enum OBJ_camellia_256_ofb128 = 0L , 3L , 4401L , 5L , 3L , 1L , 9L , 43L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_camellia_256_ofb128); }))) {
            mixin(enumMixinStr_OBJ_camellia_256_ofb128);
        }
    }




    static if(!is(typeof(SN_camellia_256_cfb128))) {
        private enum enumMixinStr_SN_camellia_256_cfb128 = `enum SN_camellia_256_cfb128 = "CAMELLIA-256-CFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_camellia_256_cfb128); }))) {
            mixin(enumMixinStr_SN_camellia_256_cfb128);
        }
    }




    static if(!is(typeof(LN_camellia_256_cfb128))) {
        private enum enumMixinStr_LN_camellia_256_cfb128 = `enum LN_camellia_256_cfb128 = "camellia-256-cfb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_camellia_256_cfb128); }))) {
            mixin(enumMixinStr_LN_camellia_256_cfb128);
        }
    }




    static if(!is(typeof(NID_camellia_256_cfb128))) {
        private enum enumMixinStr_NID_camellia_256_cfb128 = `enum NID_camellia_256_cfb128 = 759;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_camellia_256_cfb128); }))) {
            mixin(enumMixinStr_NID_camellia_256_cfb128);
        }
    }




    static if(!is(typeof(OBJ_camellia_256_cfb128))) {
        private enum enumMixinStr_OBJ_camellia_256_cfb128 = `enum OBJ_camellia_256_cfb128 = 0L , 3L , 4401L , 5L , 3L , 1L , 9L , 44L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_camellia_256_cfb128); }))) {
            mixin(enumMixinStr_OBJ_camellia_256_cfb128);
        }
    }




    static if(!is(typeof(SN_camellia_256_gcm))) {
        private enum enumMixinStr_SN_camellia_256_gcm = `enum SN_camellia_256_gcm = "CAMELLIA-256-GCM";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_camellia_256_gcm); }))) {
            mixin(enumMixinStr_SN_camellia_256_gcm);
        }
    }




    static if(!is(typeof(LN_camellia_256_gcm))) {
        private enum enumMixinStr_LN_camellia_256_gcm = `enum LN_camellia_256_gcm = "camellia-256-gcm";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_camellia_256_gcm); }))) {
            mixin(enumMixinStr_LN_camellia_256_gcm);
        }
    }




    static if(!is(typeof(NID_camellia_256_gcm))) {
        private enum enumMixinStr_NID_camellia_256_gcm = `enum NID_camellia_256_gcm = 969;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_camellia_256_gcm); }))) {
            mixin(enumMixinStr_NID_camellia_256_gcm);
        }
    }




    static if(!is(typeof(OBJ_camellia_256_gcm))) {
        private enum enumMixinStr_OBJ_camellia_256_gcm = `enum OBJ_camellia_256_gcm = 0L , 3L , 4401L , 5L , 3L , 1L , 9L , 46L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_camellia_256_gcm); }))) {
            mixin(enumMixinStr_OBJ_camellia_256_gcm);
        }
    }




    static if(!is(typeof(SN_camellia_256_ccm))) {
        private enum enumMixinStr_SN_camellia_256_ccm = `enum SN_camellia_256_ccm = "CAMELLIA-256-CCM";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_camellia_256_ccm); }))) {
            mixin(enumMixinStr_SN_camellia_256_ccm);
        }
    }




    static if(!is(typeof(LN_camellia_256_ccm))) {
        private enum enumMixinStr_LN_camellia_256_ccm = `enum LN_camellia_256_ccm = "camellia-256-ccm";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_camellia_256_ccm); }))) {
            mixin(enumMixinStr_LN_camellia_256_ccm);
        }
    }




    static if(!is(typeof(NID_camellia_256_ccm))) {
        private enum enumMixinStr_NID_camellia_256_ccm = `enum NID_camellia_256_ccm = 970;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_camellia_256_ccm); }))) {
            mixin(enumMixinStr_NID_camellia_256_ccm);
        }
    }




    static if(!is(typeof(OBJ_camellia_256_ccm))) {
        private enum enumMixinStr_OBJ_camellia_256_ccm = `enum OBJ_camellia_256_ccm = 0L , 3L , 4401L , 5L , 3L , 1L , 9L , 47L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_camellia_256_ccm); }))) {
            mixin(enumMixinStr_OBJ_camellia_256_ccm);
        }
    }




    static if(!is(typeof(SN_camellia_256_ctr))) {
        private enum enumMixinStr_SN_camellia_256_ctr = `enum SN_camellia_256_ctr = "CAMELLIA-256-CTR";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_camellia_256_ctr); }))) {
            mixin(enumMixinStr_SN_camellia_256_ctr);
        }
    }




    static if(!is(typeof(LN_camellia_256_ctr))) {
        private enum enumMixinStr_LN_camellia_256_ctr = `enum LN_camellia_256_ctr = "camellia-256-ctr";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_camellia_256_ctr); }))) {
            mixin(enumMixinStr_LN_camellia_256_ctr);
        }
    }




    static if(!is(typeof(NID_camellia_256_ctr))) {
        private enum enumMixinStr_NID_camellia_256_ctr = `enum NID_camellia_256_ctr = 971;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_camellia_256_ctr); }))) {
            mixin(enumMixinStr_NID_camellia_256_ctr);
        }
    }




    static if(!is(typeof(OBJ_camellia_256_ctr))) {
        private enum enumMixinStr_OBJ_camellia_256_ctr = `enum OBJ_camellia_256_ctr = 0L , 3L , 4401L , 5L , 3L , 1L , 9L , 49L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_camellia_256_ctr); }))) {
            mixin(enumMixinStr_OBJ_camellia_256_ctr);
        }
    }




    static if(!is(typeof(SN_camellia_256_cmac))) {
        private enum enumMixinStr_SN_camellia_256_cmac = `enum SN_camellia_256_cmac = "CAMELLIA-256-CMAC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_camellia_256_cmac); }))) {
            mixin(enumMixinStr_SN_camellia_256_cmac);
        }
    }




    static if(!is(typeof(LN_camellia_256_cmac))) {
        private enum enumMixinStr_LN_camellia_256_cmac = `enum LN_camellia_256_cmac = "camellia-256-cmac";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_camellia_256_cmac); }))) {
            mixin(enumMixinStr_LN_camellia_256_cmac);
        }
    }




    static if(!is(typeof(NID_camellia_256_cmac))) {
        private enum enumMixinStr_NID_camellia_256_cmac = `enum NID_camellia_256_cmac = 972;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_camellia_256_cmac); }))) {
            mixin(enumMixinStr_NID_camellia_256_cmac);
        }
    }




    static if(!is(typeof(OBJ_camellia_256_cmac))) {
        private enum enumMixinStr_OBJ_camellia_256_cmac = `enum OBJ_camellia_256_cmac = 0L , 3L , 4401L , 5L , 3L , 1L , 9L , 50L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_camellia_256_cmac); }))) {
            mixin(enumMixinStr_OBJ_camellia_256_cmac);
        }
    }




    static if(!is(typeof(SN_camellia_128_cfb1))) {
        private enum enumMixinStr_SN_camellia_128_cfb1 = `enum SN_camellia_128_cfb1 = "CAMELLIA-128-CFB1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_camellia_128_cfb1); }))) {
            mixin(enumMixinStr_SN_camellia_128_cfb1);
        }
    }




    static if(!is(typeof(LN_camellia_128_cfb1))) {
        private enum enumMixinStr_LN_camellia_128_cfb1 = `enum LN_camellia_128_cfb1 = "camellia-128-cfb1";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_camellia_128_cfb1); }))) {
            mixin(enumMixinStr_LN_camellia_128_cfb1);
        }
    }




    static if(!is(typeof(NID_camellia_128_cfb1))) {
        private enum enumMixinStr_NID_camellia_128_cfb1 = `enum NID_camellia_128_cfb1 = 760;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_camellia_128_cfb1); }))) {
            mixin(enumMixinStr_NID_camellia_128_cfb1);
        }
    }




    static if(!is(typeof(SN_camellia_192_cfb1))) {
        private enum enumMixinStr_SN_camellia_192_cfb1 = `enum SN_camellia_192_cfb1 = "CAMELLIA-192-CFB1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_camellia_192_cfb1); }))) {
            mixin(enumMixinStr_SN_camellia_192_cfb1);
        }
    }




    static if(!is(typeof(LN_camellia_192_cfb1))) {
        private enum enumMixinStr_LN_camellia_192_cfb1 = `enum LN_camellia_192_cfb1 = "camellia-192-cfb1";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_camellia_192_cfb1); }))) {
            mixin(enumMixinStr_LN_camellia_192_cfb1);
        }
    }




    static if(!is(typeof(NID_camellia_192_cfb1))) {
        private enum enumMixinStr_NID_camellia_192_cfb1 = `enum NID_camellia_192_cfb1 = 761;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_camellia_192_cfb1); }))) {
            mixin(enumMixinStr_NID_camellia_192_cfb1);
        }
    }




    static if(!is(typeof(SN_camellia_256_cfb1))) {
        private enum enumMixinStr_SN_camellia_256_cfb1 = `enum SN_camellia_256_cfb1 = "CAMELLIA-256-CFB1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_camellia_256_cfb1); }))) {
            mixin(enumMixinStr_SN_camellia_256_cfb1);
        }
    }




    static if(!is(typeof(LN_camellia_256_cfb1))) {
        private enum enumMixinStr_LN_camellia_256_cfb1 = `enum LN_camellia_256_cfb1 = "camellia-256-cfb1";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_camellia_256_cfb1); }))) {
            mixin(enumMixinStr_LN_camellia_256_cfb1);
        }
    }




    static if(!is(typeof(NID_camellia_256_cfb1))) {
        private enum enumMixinStr_NID_camellia_256_cfb1 = `enum NID_camellia_256_cfb1 = 762;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_camellia_256_cfb1); }))) {
            mixin(enumMixinStr_NID_camellia_256_cfb1);
        }
    }




    static if(!is(typeof(SN_camellia_128_cfb8))) {
        private enum enumMixinStr_SN_camellia_128_cfb8 = `enum SN_camellia_128_cfb8 = "CAMELLIA-128-CFB8";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_camellia_128_cfb8); }))) {
            mixin(enumMixinStr_SN_camellia_128_cfb8);
        }
    }




    static if(!is(typeof(LN_camellia_128_cfb8))) {
        private enum enumMixinStr_LN_camellia_128_cfb8 = `enum LN_camellia_128_cfb8 = "camellia-128-cfb8";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_camellia_128_cfb8); }))) {
            mixin(enumMixinStr_LN_camellia_128_cfb8);
        }
    }




    static if(!is(typeof(NID_camellia_128_cfb8))) {
        private enum enumMixinStr_NID_camellia_128_cfb8 = `enum NID_camellia_128_cfb8 = 763;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_camellia_128_cfb8); }))) {
            mixin(enumMixinStr_NID_camellia_128_cfb8);
        }
    }




    static if(!is(typeof(SN_camellia_192_cfb8))) {
        private enum enumMixinStr_SN_camellia_192_cfb8 = `enum SN_camellia_192_cfb8 = "CAMELLIA-192-CFB8";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_camellia_192_cfb8); }))) {
            mixin(enumMixinStr_SN_camellia_192_cfb8);
        }
    }




    static if(!is(typeof(LN_camellia_192_cfb8))) {
        private enum enumMixinStr_LN_camellia_192_cfb8 = `enum LN_camellia_192_cfb8 = "camellia-192-cfb8";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_camellia_192_cfb8); }))) {
            mixin(enumMixinStr_LN_camellia_192_cfb8);
        }
    }




    static if(!is(typeof(NID_camellia_192_cfb8))) {
        private enum enumMixinStr_NID_camellia_192_cfb8 = `enum NID_camellia_192_cfb8 = 764;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_camellia_192_cfb8); }))) {
            mixin(enumMixinStr_NID_camellia_192_cfb8);
        }
    }




    static if(!is(typeof(SN_camellia_256_cfb8))) {
        private enum enumMixinStr_SN_camellia_256_cfb8 = `enum SN_camellia_256_cfb8 = "CAMELLIA-256-CFB8";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_camellia_256_cfb8); }))) {
            mixin(enumMixinStr_SN_camellia_256_cfb8);
        }
    }




    static if(!is(typeof(LN_camellia_256_cfb8))) {
        private enum enumMixinStr_LN_camellia_256_cfb8 = `enum LN_camellia_256_cfb8 = "camellia-256-cfb8";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_camellia_256_cfb8); }))) {
            mixin(enumMixinStr_LN_camellia_256_cfb8);
        }
    }




    static if(!is(typeof(NID_camellia_256_cfb8))) {
        private enum enumMixinStr_NID_camellia_256_cfb8 = `enum NID_camellia_256_cfb8 = 765;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_camellia_256_cfb8); }))) {
            mixin(enumMixinStr_NID_camellia_256_cfb8);
        }
    }




    static if(!is(typeof(OBJ_aria))) {
        private enum enumMixinStr_OBJ_aria = `enum OBJ_aria = 1L , 2L , 410L , 200046L , 1L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aria); }))) {
            mixin(enumMixinStr_OBJ_aria);
        }
    }




    static if(!is(typeof(SN_aria_128_ecb))) {
        private enum enumMixinStr_SN_aria_128_ecb = `enum SN_aria_128_ecb = "ARIA-128-ECB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aria_128_ecb); }))) {
            mixin(enumMixinStr_SN_aria_128_ecb);
        }
    }




    static if(!is(typeof(LN_aria_128_ecb))) {
        private enum enumMixinStr_LN_aria_128_ecb = `enum LN_aria_128_ecb = "aria-128-ecb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aria_128_ecb); }))) {
            mixin(enumMixinStr_LN_aria_128_ecb);
        }
    }




    static if(!is(typeof(NID_aria_128_ecb))) {
        private enum enumMixinStr_NID_aria_128_ecb = `enum NID_aria_128_ecb = 1065;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aria_128_ecb); }))) {
            mixin(enumMixinStr_NID_aria_128_ecb);
        }
    }




    static if(!is(typeof(OBJ_aria_128_ecb))) {
        private enum enumMixinStr_OBJ_aria_128_ecb = `enum OBJ_aria_128_ecb = 1L , 2L , 410L , 200046L , 1L , 1L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aria_128_ecb); }))) {
            mixin(enumMixinStr_OBJ_aria_128_ecb);
        }
    }




    static if(!is(typeof(SN_aria_128_cbc))) {
        private enum enumMixinStr_SN_aria_128_cbc = `enum SN_aria_128_cbc = "ARIA-128-CBC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aria_128_cbc); }))) {
            mixin(enumMixinStr_SN_aria_128_cbc);
        }
    }




    static if(!is(typeof(LN_aria_128_cbc))) {
        private enum enumMixinStr_LN_aria_128_cbc = `enum LN_aria_128_cbc = "aria-128-cbc";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aria_128_cbc); }))) {
            mixin(enumMixinStr_LN_aria_128_cbc);
        }
    }




    static if(!is(typeof(NID_aria_128_cbc))) {
        private enum enumMixinStr_NID_aria_128_cbc = `enum NID_aria_128_cbc = 1066;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aria_128_cbc); }))) {
            mixin(enumMixinStr_NID_aria_128_cbc);
        }
    }




    static if(!is(typeof(OBJ_aria_128_cbc))) {
        private enum enumMixinStr_OBJ_aria_128_cbc = `enum OBJ_aria_128_cbc = 1L , 2L , 410L , 200046L , 1L , 1L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aria_128_cbc); }))) {
            mixin(enumMixinStr_OBJ_aria_128_cbc);
        }
    }




    static if(!is(typeof(SN_aria_128_cfb128))) {
        private enum enumMixinStr_SN_aria_128_cfb128 = `enum SN_aria_128_cfb128 = "ARIA-128-CFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aria_128_cfb128); }))) {
            mixin(enumMixinStr_SN_aria_128_cfb128);
        }
    }




    static if(!is(typeof(LN_aria_128_cfb128))) {
        private enum enumMixinStr_LN_aria_128_cfb128 = `enum LN_aria_128_cfb128 = "aria-128-cfb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aria_128_cfb128); }))) {
            mixin(enumMixinStr_LN_aria_128_cfb128);
        }
    }




    static if(!is(typeof(NID_aria_128_cfb128))) {
        private enum enumMixinStr_NID_aria_128_cfb128 = `enum NID_aria_128_cfb128 = 1067;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aria_128_cfb128); }))) {
            mixin(enumMixinStr_NID_aria_128_cfb128);
        }
    }




    static if(!is(typeof(OBJ_aria_128_cfb128))) {
        private enum enumMixinStr_OBJ_aria_128_cfb128 = `enum OBJ_aria_128_cfb128 = 1L , 2L , 410L , 200046L , 1L , 1L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aria_128_cfb128); }))) {
            mixin(enumMixinStr_OBJ_aria_128_cfb128);
        }
    }




    static if(!is(typeof(SN_aria_128_ofb128))) {
        private enum enumMixinStr_SN_aria_128_ofb128 = `enum SN_aria_128_ofb128 = "ARIA-128-OFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aria_128_ofb128); }))) {
            mixin(enumMixinStr_SN_aria_128_ofb128);
        }
    }




    static if(!is(typeof(LN_aria_128_ofb128))) {
        private enum enumMixinStr_LN_aria_128_ofb128 = `enum LN_aria_128_ofb128 = "aria-128-ofb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aria_128_ofb128); }))) {
            mixin(enumMixinStr_LN_aria_128_ofb128);
        }
    }




    static if(!is(typeof(NID_aria_128_ofb128))) {
        private enum enumMixinStr_NID_aria_128_ofb128 = `enum NID_aria_128_ofb128 = 1068;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aria_128_ofb128); }))) {
            mixin(enumMixinStr_NID_aria_128_ofb128);
        }
    }




    static if(!is(typeof(OBJ_aria_128_ofb128))) {
        private enum enumMixinStr_OBJ_aria_128_ofb128 = `enum OBJ_aria_128_ofb128 = 1L , 2L , 410L , 200046L , 1L , 1L , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aria_128_ofb128); }))) {
            mixin(enumMixinStr_OBJ_aria_128_ofb128);
        }
    }




    static if(!is(typeof(SN_aria_128_ctr))) {
        private enum enumMixinStr_SN_aria_128_ctr = `enum SN_aria_128_ctr = "ARIA-128-CTR";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aria_128_ctr); }))) {
            mixin(enumMixinStr_SN_aria_128_ctr);
        }
    }




    static if(!is(typeof(LN_aria_128_ctr))) {
        private enum enumMixinStr_LN_aria_128_ctr = `enum LN_aria_128_ctr = "aria-128-ctr";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aria_128_ctr); }))) {
            mixin(enumMixinStr_LN_aria_128_ctr);
        }
    }




    static if(!is(typeof(NID_aria_128_ctr))) {
        private enum enumMixinStr_NID_aria_128_ctr = `enum NID_aria_128_ctr = 1069;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aria_128_ctr); }))) {
            mixin(enumMixinStr_NID_aria_128_ctr);
        }
    }




    static if(!is(typeof(OBJ_aria_128_ctr))) {
        private enum enumMixinStr_OBJ_aria_128_ctr = `enum OBJ_aria_128_ctr = 1L , 2L , 410L , 200046L , 1L , 1L , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aria_128_ctr); }))) {
            mixin(enumMixinStr_OBJ_aria_128_ctr);
        }
    }




    static if(!is(typeof(SN_aria_192_ecb))) {
        private enum enumMixinStr_SN_aria_192_ecb = `enum SN_aria_192_ecb = "ARIA-192-ECB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aria_192_ecb); }))) {
            mixin(enumMixinStr_SN_aria_192_ecb);
        }
    }




    static if(!is(typeof(LN_aria_192_ecb))) {
        private enum enumMixinStr_LN_aria_192_ecb = `enum LN_aria_192_ecb = "aria-192-ecb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aria_192_ecb); }))) {
            mixin(enumMixinStr_LN_aria_192_ecb);
        }
    }




    static if(!is(typeof(NID_aria_192_ecb))) {
        private enum enumMixinStr_NID_aria_192_ecb = `enum NID_aria_192_ecb = 1070;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aria_192_ecb); }))) {
            mixin(enumMixinStr_NID_aria_192_ecb);
        }
    }




    static if(!is(typeof(OBJ_aria_192_ecb))) {
        private enum enumMixinStr_OBJ_aria_192_ecb = `enum OBJ_aria_192_ecb = 1L , 2L , 410L , 200046L , 1L , 1L , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aria_192_ecb); }))) {
            mixin(enumMixinStr_OBJ_aria_192_ecb);
        }
    }




    static if(!is(typeof(SN_aria_192_cbc))) {
        private enum enumMixinStr_SN_aria_192_cbc = `enum SN_aria_192_cbc = "ARIA-192-CBC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aria_192_cbc); }))) {
            mixin(enumMixinStr_SN_aria_192_cbc);
        }
    }




    static if(!is(typeof(LN_aria_192_cbc))) {
        private enum enumMixinStr_LN_aria_192_cbc = `enum LN_aria_192_cbc = "aria-192-cbc";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aria_192_cbc); }))) {
            mixin(enumMixinStr_LN_aria_192_cbc);
        }
    }




    static if(!is(typeof(NID_aria_192_cbc))) {
        private enum enumMixinStr_NID_aria_192_cbc = `enum NID_aria_192_cbc = 1071;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aria_192_cbc); }))) {
            mixin(enumMixinStr_NID_aria_192_cbc);
        }
    }




    static if(!is(typeof(OBJ_aria_192_cbc))) {
        private enum enumMixinStr_OBJ_aria_192_cbc = `enum OBJ_aria_192_cbc = 1L , 2L , 410L , 200046L , 1L , 1L , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aria_192_cbc); }))) {
            mixin(enumMixinStr_OBJ_aria_192_cbc);
        }
    }




    static if(!is(typeof(SN_aria_192_cfb128))) {
        private enum enumMixinStr_SN_aria_192_cfb128 = `enum SN_aria_192_cfb128 = "ARIA-192-CFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aria_192_cfb128); }))) {
            mixin(enumMixinStr_SN_aria_192_cfb128);
        }
    }




    static if(!is(typeof(LN_aria_192_cfb128))) {
        private enum enumMixinStr_LN_aria_192_cfb128 = `enum LN_aria_192_cfb128 = "aria-192-cfb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aria_192_cfb128); }))) {
            mixin(enumMixinStr_LN_aria_192_cfb128);
        }
    }




    static if(!is(typeof(NID_aria_192_cfb128))) {
        private enum enumMixinStr_NID_aria_192_cfb128 = `enum NID_aria_192_cfb128 = 1072;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aria_192_cfb128); }))) {
            mixin(enumMixinStr_NID_aria_192_cfb128);
        }
    }




    static if(!is(typeof(OBJ_aria_192_cfb128))) {
        private enum enumMixinStr_OBJ_aria_192_cfb128 = `enum OBJ_aria_192_cfb128 = 1L , 2L , 410L , 200046L , 1L , 1L , 8L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aria_192_cfb128); }))) {
            mixin(enumMixinStr_OBJ_aria_192_cfb128);
        }
    }




    static if(!is(typeof(SN_aria_192_ofb128))) {
        private enum enumMixinStr_SN_aria_192_ofb128 = `enum SN_aria_192_ofb128 = "ARIA-192-OFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aria_192_ofb128); }))) {
            mixin(enumMixinStr_SN_aria_192_ofb128);
        }
    }




    static if(!is(typeof(LN_aria_192_ofb128))) {
        private enum enumMixinStr_LN_aria_192_ofb128 = `enum LN_aria_192_ofb128 = "aria-192-ofb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aria_192_ofb128); }))) {
            mixin(enumMixinStr_LN_aria_192_ofb128);
        }
    }




    static if(!is(typeof(NID_aria_192_ofb128))) {
        private enum enumMixinStr_NID_aria_192_ofb128 = `enum NID_aria_192_ofb128 = 1073;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aria_192_ofb128); }))) {
            mixin(enumMixinStr_NID_aria_192_ofb128);
        }
    }




    static if(!is(typeof(OBJ_aria_192_ofb128))) {
        private enum enumMixinStr_OBJ_aria_192_ofb128 = `enum OBJ_aria_192_ofb128 = 1L , 2L , 410L , 200046L , 1L , 1L , 9L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aria_192_ofb128); }))) {
            mixin(enumMixinStr_OBJ_aria_192_ofb128);
        }
    }




    static if(!is(typeof(SN_aria_192_ctr))) {
        private enum enumMixinStr_SN_aria_192_ctr = `enum SN_aria_192_ctr = "ARIA-192-CTR";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aria_192_ctr); }))) {
            mixin(enumMixinStr_SN_aria_192_ctr);
        }
    }




    static if(!is(typeof(LN_aria_192_ctr))) {
        private enum enumMixinStr_LN_aria_192_ctr = `enum LN_aria_192_ctr = "aria-192-ctr";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aria_192_ctr); }))) {
            mixin(enumMixinStr_LN_aria_192_ctr);
        }
    }




    static if(!is(typeof(NID_aria_192_ctr))) {
        private enum enumMixinStr_NID_aria_192_ctr = `enum NID_aria_192_ctr = 1074;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aria_192_ctr); }))) {
            mixin(enumMixinStr_NID_aria_192_ctr);
        }
    }




    static if(!is(typeof(OBJ_aria_192_ctr))) {
        private enum enumMixinStr_OBJ_aria_192_ctr = `enum OBJ_aria_192_ctr = 1L , 2L , 410L , 200046L , 1L , 1L , 10L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aria_192_ctr); }))) {
            mixin(enumMixinStr_OBJ_aria_192_ctr);
        }
    }




    static if(!is(typeof(SN_aria_256_ecb))) {
        private enum enumMixinStr_SN_aria_256_ecb = `enum SN_aria_256_ecb = "ARIA-256-ECB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aria_256_ecb); }))) {
            mixin(enumMixinStr_SN_aria_256_ecb);
        }
    }




    static if(!is(typeof(LN_aria_256_ecb))) {
        private enum enumMixinStr_LN_aria_256_ecb = `enum LN_aria_256_ecb = "aria-256-ecb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aria_256_ecb); }))) {
            mixin(enumMixinStr_LN_aria_256_ecb);
        }
    }




    static if(!is(typeof(NID_aria_256_ecb))) {
        private enum enumMixinStr_NID_aria_256_ecb = `enum NID_aria_256_ecb = 1075;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aria_256_ecb); }))) {
            mixin(enumMixinStr_NID_aria_256_ecb);
        }
    }




    static if(!is(typeof(OBJ_aria_256_ecb))) {
        private enum enumMixinStr_OBJ_aria_256_ecb = `enum OBJ_aria_256_ecb = 1L , 2L , 410L , 200046L , 1L , 1L , 11L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aria_256_ecb); }))) {
            mixin(enumMixinStr_OBJ_aria_256_ecb);
        }
    }




    static if(!is(typeof(SN_aria_256_cbc))) {
        private enum enumMixinStr_SN_aria_256_cbc = `enum SN_aria_256_cbc = "ARIA-256-CBC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aria_256_cbc); }))) {
            mixin(enumMixinStr_SN_aria_256_cbc);
        }
    }




    static if(!is(typeof(LN_aria_256_cbc))) {
        private enum enumMixinStr_LN_aria_256_cbc = `enum LN_aria_256_cbc = "aria-256-cbc";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aria_256_cbc); }))) {
            mixin(enumMixinStr_LN_aria_256_cbc);
        }
    }




    static if(!is(typeof(NID_aria_256_cbc))) {
        private enum enumMixinStr_NID_aria_256_cbc = `enum NID_aria_256_cbc = 1076;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aria_256_cbc); }))) {
            mixin(enumMixinStr_NID_aria_256_cbc);
        }
    }




    static if(!is(typeof(OBJ_aria_256_cbc))) {
        private enum enumMixinStr_OBJ_aria_256_cbc = `enum OBJ_aria_256_cbc = 1L , 2L , 410L , 200046L , 1L , 1L , 12L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aria_256_cbc); }))) {
            mixin(enumMixinStr_OBJ_aria_256_cbc);
        }
    }




    static if(!is(typeof(SN_aria_256_cfb128))) {
        private enum enumMixinStr_SN_aria_256_cfb128 = `enum SN_aria_256_cfb128 = "ARIA-256-CFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aria_256_cfb128); }))) {
            mixin(enumMixinStr_SN_aria_256_cfb128);
        }
    }




    static if(!is(typeof(LN_aria_256_cfb128))) {
        private enum enumMixinStr_LN_aria_256_cfb128 = `enum LN_aria_256_cfb128 = "aria-256-cfb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aria_256_cfb128); }))) {
            mixin(enumMixinStr_LN_aria_256_cfb128);
        }
    }




    static if(!is(typeof(NID_aria_256_cfb128))) {
        private enum enumMixinStr_NID_aria_256_cfb128 = `enum NID_aria_256_cfb128 = 1077;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aria_256_cfb128); }))) {
            mixin(enumMixinStr_NID_aria_256_cfb128);
        }
    }




    static if(!is(typeof(OBJ_aria_256_cfb128))) {
        private enum enumMixinStr_OBJ_aria_256_cfb128 = `enum OBJ_aria_256_cfb128 = 1L , 2L , 410L , 200046L , 1L , 1L , 13L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aria_256_cfb128); }))) {
            mixin(enumMixinStr_OBJ_aria_256_cfb128);
        }
    }




    static if(!is(typeof(SN_aria_256_ofb128))) {
        private enum enumMixinStr_SN_aria_256_ofb128 = `enum SN_aria_256_ofb128 = "ARIA-256-OFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aria_256_ofb128); }))) {
            mixin(enumMixinStr_SN_aria_256_ofb128);
        }
    }




    static if(!is(typeof(LN_aria_256_ofb128))) {
        private enum enumMixinStr_LN_aria_256_ofb128 = `enum LN_aria_256_ofb128 = "aria-256-ofb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aria_256_ofb128); }))) {
            mixin(enumMixinStr_LN_aria_256_ofb128);
        }
    }




    static if(!is(typeof(NID_aria_256_ofb128))) {
        private enum enumMixinStr_NID_aria_256_ofb128 = `enum NID_aria_256_ofb128 = 1078;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aria_256_ofb128); }))) {
            mixin(enumMixinStr_NID_aria_256_ofb128);
        }
    }




    static if(!is(typeof(OBJ_aria_256_ofb128))) {
        private enum enumMixinStr_OBJ_aria_256_ofb128 = `enum OBJ_aria_256_ofb128 = 1L , 2L , 410L , 200046L , 1L , 1L , 14L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aria_256_ofb128); }))) {
            mixin(enumMixinStr_OBJ_aria_256_ofb128);
        }
    }




    static if(!is(typeof(SN_aria_256_ctr))) {
        private enum enumMixinStr_SN_aria_256_ctr = `enum SN_aria_256_ctr = "ARIA-256-CTR";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aria_256_ctr); }))) {
            mixin(enumMixinStr_SN_aria_256_ctr);
        }
    }




    static if(!is(typeof(LN_aria_256_ctr))) {
        private enum enumMixinStr_LN_aria_256_ctr = `enum LN_aria_256_ctr = "aria-256-ctr";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aria_256_ctr); }))) {
            mixin(enumMixinStr_LN_aria_256_ctr);
        }
    }




    static if(!is(typeof(NID_aria_256_ctr))) {
        private enum enumMixinStr_NID_aria_256_ctr = `enum NID_aria_256_ctr = 1079;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aria_256_ctr); }))) {
            mixin(enumMixinStr_NID_aria_256_ctr);
        }
    }




    static if(!is(typeof(OBJ_aria_256_ctr))) {
        private enum enumMixinStr_OBJ_aria_256_ctr = `enum OBJ_aria_256_ctr = 1L , 2L , 410L , 200046L , 1L , 1L , 15L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aria_256_ctr); }))) {
            mixin(enumMixinStr_OBJ_aria_256_ctr);
        }
    }




    static if(!is(typeof(SN_aria_128_cfb1))) {
        private enum enumMixinStr_SN_aria_128_cfb1 = `enum SN_aria_128_cfb1 = "ARIA-128-CFB1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aria_128_cfb1); }))) {
            mixin(enumMixinStr_SN_aria_128_cfb1);
        }
    }




    static if(!is(typeof(LN_aria_128_cfb1))) {
        private enum enumMixinStr_LN_aria_128_cfb1 = `enum LN_aria_128_cfb1 = "aria-128-cfb1";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aria_128_cfb1); }))) {
            mixin(enumMixinStr_LN_aria_128_cfb1);
        }
    }




    static if(!is(typeof(NID_aria_128_cfb1))) {
        private enum enumMixinStr_NID_aria_128_cfb1 = `enum NID_aria_128_cfb1 = 1080;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aria_128_cfb1); }))) {
            mixin(enumMixinStr_NID_aria_128_cfb1);
        }
    }




    static if(!is(typeof(SN_aria_192_cfb1))) {
        private enum enumMixinStr_SN_aria_192_cfb1 = `enum SN_aria_192_cfb1 = "ARIA-192-CFB1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aria_192_cfb1); }))) {
            mixin(enumMixinStr_SN_aria_192_cfb1);
        }
    }




    static if(!is(typeof(LN_aria_192_cfb1))) {
        private enum enumMixinStr_LN_aria_192_cfb1 = `enum LN_aria_192_cfb1 = "aria-192-cfb1";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aria_192_cfb1); }))) {
            mixin(enumMixinStr_LN_aria_192_cfb1);
        }
    }




    static if(!is(typeof(NID_aria_192_cfb1))) {
        private enum enumMixinStr_NID_aria_192_cfb1 = `enum NID_aria_192_cfb1 = 1081;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aria_192_cfb1); }))) {
            mixin(enumMixinStr_NID_aria_192_cfb1);
        }
    }




    static if(!is(typeof(SN_aria_256_cfb1))) {
        private enum enumMixinStr_SN_aria_256_cfb1 = `enum SN_aria_256_cfb1 = "ARIA-256-CFB1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aria_256_cfb1); }))) {
            mixin(enumMixinStr_SN_aria_256_cfb1);
        }
    }




    static if(!is(typeof(LN_aria_256_cfb1))) {
        private enum enumMixinStr_LN_aria_256_cfb1 = `enum LN_aria_256_cfb1 = "aria-256-cfb1";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aria_256_cfb1); }))) {
            mixin(enumMixinStr_LN_aria_256_cfb1);
        }
    }




    static if(!is(typeof(NID_aria_256_cfb1))) {
        private enum enumMixinStr_NID_aria_256_cfb1 = `enum NID_aria_256_cfb1 = 1082;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aria_256_cfb1); }))) {
            mixin(enumMixinStr_NID_aria_256_cfb1);
        }
    }




    static if(!is(typeof(SN_aria_128_cfb8))) {
        private enum enumMixinStr_SN_aria_128_cfb8 = `enum SN_aria_128_cfb8 = "ARIA-128-CFB8";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aria_128_cfb8); }))) {
            mixin(enumMixinStr_SN_aria_128_cfb8);
        }
    }




    static if(!is(typeof(LN_aria_128_cfb8))) {
        private enum enumMixinStr_LN_aria_128_cfb8 = `enum LN_aria_128_cfb8 = "aria-128-cfb8";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aria_128_cfb8); }))) {
            mixin(enumMixinStr_LN_aria_128_cfb8);
        }
    }




    static if(!is(typeof(NID_aria_128_cfb8))) {
        private enum enumMixinStr_NID_aria_128_cfb8 = `enum NID_aria_128_cfb8 = 1083;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aria_128_cfb8); }))) {
            mixin(enumMixinStr_NID_aria_128_cfb8);
        }
    }




    static if(!is(typeof(SN_aria_192_cfb8))) {
        private enum enumMixinStr_SN_aria_192_cfb8 = `enum SN_aria_192_cfb8 = "ARIA-192-CFB8";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aria_192_cfb8); }))) {
            mixin(enumMixinStr_SN_aria_192_cfb8);
        }
    }




    static if(!is(typeof(LN_aria_192_cfb8))) {
        private enum enumMixinStr_LN_aria_192_cfb8 = `enum LN_aria_192_cfb8 = "aria-192-cfb8";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aria_192_cfb8); }))) {
            mixin(enumMixinStr_LN_aria_192_cfb8);
        }
    }




    static if(!is(typeof(NID_aria_192_cfb8))) {
        private enum enumMixinStr_NID_aria_192_cfb8 = `enum NID_aria_192_cfb8 = 1084;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aria_192_cfb8); }))) {
            mixin(enumMixinStr_NID_aria_192_cfb8);
        }
    }




    static if(!is(typeof(SN_aria_256_cfb8))) {
        private enum enumMixinStr_SN_aria_256_cfb8 = `enum SN_aria_256_cfb8 = "ARIA-256-CFB8";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aria_256_cfb8); }))) {
            mixin(enumMixinStr_SN_aria_256_cfb8);
        }
    }




    static if(!is(typeof(LN_aria_256_cfb8))) {
        private enum enumMixinStr_LN_aria_256_cfb8 = `enum LN_aria_256_cfb8 = "aria-256-cfb8";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aria_256_cfb8); }))) {
            mixin(enumMixinStr_LN_aria_256_cfb8);
        }
    }




    static if(!is(typeof(NID_aria_256_cfb8))) {
        private enum enumMixinStr_NID_aria_256_cfb8 = `enum NID_aria_256_cfb8 = 1085;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aria_256_cfb8); }))) {
            mixin(enumMixinStr_NID_aria_256_cfb8);
        }
    }




    static if(!is(typeof(SN_aria_128_ccm))) {
        private enum enumMixinStr_SN_aria_128_ccm = `enum SN_aria_128_ccm = "ARIA-128-CCM";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aria_128_ccm); }))) {
            mixin(enumMixinStr_SN_aria_128_ccm);
        }
    }




    static if(!is(typeof(LN_aria_128_ccm))) {
        private enum enumMixinStr_LN_aria_128_ccm = `enum LN_aria_128_ccm = "aria-128-ccm";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aria_128_ccm); }))) {
            mixin(enumMixinStr_LN_aria_128_ccm);
        }
    }




    static if(!is(typeof(NID_aria_128_ccm))) {
        private enum enumMixinStr_NID_aria_128_ccm = `enum NID_aria_128_ccm = 1120;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aria_128_ccm); }))) {
            mixin(enumMixinStr_NID_aria_128_ccm);
        }
    }




    static if(!is(typeof(OBJ_aria_128_ccm))) {
        private enum enumMixinStr_OBJ_aria_128_ccm = `enum OBJ_aria_128_ccm = 1L , 2L , 410L , 200046L , 1L , 1L , 37L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aria_128_ccm); }))) {
            mixin(enumMixinStr_OBJ_aria_128_ccm);
        }
    }




    static if(!is(typeof(SN_aria_192_ccm))) {
        private enum enumMixinStr_SN_aria_192_ccm = `enum SN_aria_192_ccm = "ARIA-192-CCM";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aria_192_ccm); }))) {
            mixin(enumMixinStr_SN_aria_192_ccm);
        }
    }




    static if(!is(typeof(LN_aria_192_ccm))) {
        private enum enumMixinStr_LN_aria_192_ccm = `enum LN_aria_192_ccm = "aria-192-ccm";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aria_192_ccm); }))) {
            mixin(enumMixinStr_LN_aria_192_ccm);
        }
    }




    static if(!is(typeof(NID_aria_192_ccm))) {
        private enum enumMixinStr_NID_aria_192_ccm = `enum NID_aria_192_ccm = 1121;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aria_192_ccm); }))) {
            mixin(enumMixinStr_NID_aria_192_ccm);
        }
    }




    static if(!is(typeof(OBJ_aria_192_ccm))) {
        private enum enumMixinStr_OBJ_aria_192_ccm = `enum OBJ_aria_192_ccm = 1L , 2L , 410L , 200046L , 1L , 1L , 38L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aria_192_ccm); }))) {
            mixin(enumMixinStr_OBJ_aria_192_ccm);
        }
    }




    static if(!is(typeof(SN_aria_256_ccm))) {
        private enum enumMixinStr_SN_aria_256_ccm = `enum SN_aria_256_ccm = "ARIA-256-CCM";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aria_256_ccm); }))) {
            mixin(enumMixinStr_SN_aria_256_ccm);
        }
    }




    static if(!is(typeof(LN_aria_256_ccm))) {
        private enum enumMixinStr_LN_aria_256_ccm = `enum LN_aria_256_ccm = "aria-256-ccm";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aria_256_ccm); }))) {
            mixin(enumMixinStr_LN_aria_256_ccm);
        }
    }




    static if(!is(typeof(NID_aria_256_ccm))) {
        private enum enumMixinStr_NID_aria_256_ccm = `enum NID_aria_256_ccm = 1122;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aria_256_ccm); }))) {
            mixin(enumMixinStr_NID_aria_256_ccm);
        }
    }




    static if(!is(typeof(OBJ_aria_256_ccm))) {
        private enum enumMixinStr_OBJ_aria_256_ccm = `enum OBJ_aria_256_ccm = 1L , 2L , 410L , 200046L , 1L , 1L , 39L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aria_256_ccm); }))) {
            mixin(enumMixinStr_OBJ_aria_256_ccm);
        }
    }




    static if(!is(typeof(SN_aria_128_gcm))) {
        private enum enumMixinStr_SN_aria_128_gcm = `enum SN_aria_128_gcm = "ARIA-128-GCM";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aria_128_gcm); }))) {
            mixin(enumMixinStr_SN_aria_128_gcm);
        }
    }




    static if(!is(typeof(LN_aria_128_gcm))) {
        private enum enumMixinStr_LN_aria_128_gcm = `enum LN_aria_128_gcm = "aria-128-gcm";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aria_128_gcm); }))) {
            mixin(enumMixinStr_LN_aria_128_gcm);
        }
    }




    static if(!is(typeof(NID_aria_128_gcm))) {
        private enum enumMixinStr_NID_aria_128_gcm = `enum NID_aria_128_gcm = 1123;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aria_128_gcm); }))) {
            mixin(enumMixinStr_NID_aria_128_gcm);
        }
    }




    static if(!is(typeof(OBJ_aria_128_gcm))) {
        private enum enumMixinStr_OBJ_aria_128_gcm = `enum OBJ_aria_128_gcm = 1L , 2L , 410L , 200046L , 1L , 1L , 34L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aria_128_gcm); }))) {
            mixin(enumMixinStr_OBJ_aria_128_gcm);
        }
    }




    static if(!is(typeof(SN_aria_192_gcm))) {
        private enum enumMixinStr_SN_aria_192_gcm = `enum SN_aria_192_gcm = "ARIA-192-GCM";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aria_192_gcm); }))) {
            mixin(enumMixinStr_SN_aria_192_gcm);
        }
    }




    static if(!is(typeof(LN_aria_192_gcm))) {
        private enum enumMixinStr_LN_aria_192_gcm = `enum LN_aria_192_gcm = "aria-192-gcm";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aria_192_gcm); }))) {
            mixin(enumMixinStr_LN_aria_192_gcm);
        }
    }




    static if(!is(typeof(NID_aria_192_gcm))) {
        private enum enumMixinStr_NID_aria_192_gcm = `enum NID_aria_192_gcm = 1124;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aria_192_gcm); }))) {
            mixin(enumMixinStr_NID_aria_192_gcm);
        }
    }




    static if(!is(typeof(OBJ_aria_192_gcm))) {
        private enum enumMixinStr_OBJ_aria_192_gcm = `enum OBJ_aria_192_gcm = 1L , 2L , 410L , 200046L , 1L , 1L , 35L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aria_192_gcm); }))) {
            mixin(enumMixinStr_OBJ_aria_192_gcm);
        }
    }




    static if(!is(typeof(SN_aria_256_gcm))) {
        private enum enumMixinStr_SN_aria_256_gcm = `enum SN_aria_256_gcm = "ARIA-256-GCM";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aria_256_gcm); }))) {
            mixin(enumMixinStr_SN_aria_256_gcm);
        }
    }




    static if(!is(typeof(LN_aria_256_gcm))) {
        private enum enumMixinStr_LN_aria_256_gcm = `enum LN_aria_256_gcm = "aria-256-gcm";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aria_256_gcm); }))) {
            mixin(enumMixinStr_LN_aria_256_gcm);
        }
    }




    static if(!is(typeof(NID_aria_256_gcm))) {
        private enum enumMixinStr_NID_aria_256_gcm = `enum NID_aria_256_gcm = 1125;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aria_256_gcm); }))) {
            mixin(enumMixinStr_NID_aria_256_gcm);
        }
    }




    static if(!is(typeof(OBJ_aria_256_gcm))) {
        private enum enumMixinStr_OBJ_aria_256_gcm = `enum OBJ_aria_256_gcm = 1L , 2L , 410L , 200046L , 1L , 1L , 36L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aria_256_gcm); }))) {
            mixin(enumMixinStr_OBJ_aria_256_gcm);
        }
    }




    static if(!is(typeof(SN_kisa))) {
        private enum enumMixinStr_SN_kisa = `enum SN_kisa = "KISA";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_kisa); }))) {
            mixin(enumMixinStr_SN_kisa);
        }
    }




    static if(!is(typeof(LN_kisa))) {
        private enum enumMixinStr_LN_kisa = `enum LN_kisa = "kisa";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_kisa); }))) {
            mixin(enumMixinStr_LN_kisa);
        }
    }




    static if(!is(typeof(NID_kisa))) {
        private enum enumMixinStr_NID_kisa = `enum NID_kisa = 773;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_kisa); }))) {
            mixin(enumMixinStr_NID_kisa);
        }
    }




    static if(!is(typeof(OBJ_kisa))) {
        private enum enumMixinStr_OBJ_kisa = `enum OBJ_kisa = OBJ_member_body , 410L , 200004L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_kisa); }))) {
            mixin(enumMixinStr_OBJ_kisa);
        }
    }




    static if(!is(typeof(SN_seed_ecb))) {
        private enum enumMixinStr_SN_seed_ecb = `enum SN_seed_ecb = "SEED-ECB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_seed_ecb); }))) {
            mixin(enumMixinStr_SN_seed_ecb);
        }
    }




    static if(!is(typeof(LN_seed_ecb))) {
        private enum enumMixinStr_LN_seed_ecb = `enum LN_seed_ecb = "seed-ecb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_seed_ecb); }))) {
            mixin(enumMixinStr_LN_seed_ecb);
        }
    }




    static if(!is(typeof(NID_seed_ecb))) {
        private enum enumMixinStr_NID_seed_ecb = `enum NID_seed_ecb = 776;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_seed_ecb); }))) {
            mixin(enumMixinStr_NID_seed_ecb);
        }
    }




    static if(!is(typeof(OBJ_seed_ecb))) {
        private enum enumMixinStr_OBJ_seed_ecb = `enum OBJ_seed_ecb = OBJ_member_body , 410L , 200004L , 1L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_seed_ecb); }))) {
            mixin(enumMixinStr_OBJ_seed_ecb);
        }
    }




    static if(!is(typeof(SN_seed_cbc))) {
        private enum enumMixinStr_SN_seed_cbc = `enum SN_seed_cbc = "SEED-CBC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_seed_cbc); }))) {
            mixin(enumMixinStr_SN_seed_cbc);
        }
    }




    static if(!is(typeof(LN_seed_cbc))) {
        private enum enumMixinStr_LN_seed_cbc = `enum LN_seed_cbc = "seed-cbc";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_seed_cbc); }))) {
            mixin(enumMixinStr_LN_seed_cbc);
        }
    }




    static if(!is(typeof(NID_seed_cbc))) {
        private enum enumMixinStr_NID_seed_cbc = `enum NID_seed_cbc = 777;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_seed_cbc); }))) {
            mixin(enumMixinStr_NID_seed_cbc);
        }
    }




    static if(!is(typeof(OBJ_seed_cbc))) {
        private enum enumMixinStr_OBJ_seed_cbc = `enum OBJ_seed_cbc = OBJ_member_body , 410L , 200004L , 1L , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_seed_cbc); }))) {
            mixin(enumMixinStr_OBJ_seed_cbc);
        }
    }




    static if(!is(typeof(SN_seed_cfb128))) {
        private enum enumMixinStr_SN_seed_cfb128 = `enum SN_seed_cfb128 = "SEED-CFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_seed_cfb128); }))) {
            mixin(enumMixinStr_SN_seed_cfb128);
        }
    }




    static if(!is(typeof(LN_seed_cfb128))) {
        private enum enumMixinStr_LN_seed_cfb128 = `enum LN_seed_cfb128 = "seed-cfb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_seed_cfb128); }))) {
            mixin(enumMixinStr_LN_seed_cfb128);
        }
    }




    static if(!is(typeof(NID_seed_cfb128))) {
        private enum enumMixinStr_NID_seed_cfb128 = `enum NID_seed_cfb128 = 779;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_seed_cfb128); }))) {
            mixin(enumMixinStr_NID_seed_cfb128);
        }
    }




    static if(!is(typeof(OBJ_seed_cfb128))) {
        private enum enumMixinStr_OBJ_seed_cfb128 = `enum OBJ_seed_cfb128 = OBJ_member_body , 410L , 200004L , 1L , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_seed_cfb128); }))) {
            mixin(enumMixinStr_OBJ_seed_cfb128);
        }
    }




    static if(!is(typeof(SN_seed_ofb128))) {
        private enum enumMixinStr_SN_seed_ofb128 = `enum SN_seed_ofb128 = "SEED-OFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_seed_ofb128); }))) {
            mixin(enumMixinStr_SN_seed_ofb128);
        }
    }




    static if(!is(typeof(LN_seed_ofb128))) {
        private enum enumMixinStr_LN_seed_ofb128 = `enum LN_seed_ofb128 = "seed-ofb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_seed_ofb128); }))) {
            mixin(enumMixinStr_LN_seed_ofb128);
        }
    }




    static if(!is(typeof(NID_seed_ofb128))) {
        private enum enumMixinStr_NID_seed_ofb128 = `enum NID_seed_ofb128 = 778;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_seed_ofb128); }))) {
            mixin(enumMixinStr_NID_seed_ofb128);
        }
    }




    static if(!is(typeof(OBJ_seed_ofb128))) {
        private enum enumMixinStr_OBJ_seed_ofb128 = `enum OBJ_seed_ofb128 = OBJ_member_body , 410L , 200004L , 1L , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_seed_ofb128); }))) {
            mixin(enumMixinStr_OBJ_seed_ofb128);
        }
    }




    static if(!is(typeof(SN_sm4_ecb))) {
        private enum enumMixinStr_SN_sm4_ecb = `enum SN_sm4_ecb = "SM4-ECB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sm4_ecb); }))) {
            mixin(enumMixinStr_SN_sm4_ecb);
        }
    }




    static if(!is(typeof(LN_sm4_ecb))) {
        private enum enumMixinStr_LN_sm4_ecb = `enum LN_sm4_ecb = "sm4-ecb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sm4_ecb); }))) {
            mixin(enumMixinStr_LN_sm4_ecb);
        }
    }




    static if(!is(typeof(NID_sm4_ecb))) {
        private enum enumMixinStr_NID_sm4_ecb = `enum NID_sm4_ecb = 1133;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sm4_ecb); }))) {
            mixin(enumMixinStr_NID_sm4_ecb);
        }
    }




    static if(!is(typeof(OBJ_sm4_ecb))) {
        private enum enumMixinStr_OBJ_sm4_ecb = `enum OBJ_sm4_ecb = OBJ_sm_scheme , 104L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sm4_ecb); }))) {
            mixin(enumMixinStr_OBJ_sm4_ecb);
        }
    }




    static if(!is(typeof(SN_sm4_cbc))) {
        private enum enumMixinStr_SN_sm4_cbc = `enum SN_sm4_cbc = "SM4-CBC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sm4_cbc); }))) {
            mixin(enumMixinStr_SN_sm4_cbc);
        }
    }




    static if(!is(typeof(LN_sm4_cbc))) {
        private enum enumMixinStr_LN_sm4_cbc = `enum LN_sm4_cbc = "sm4-cbc";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sm4_cbc); }))) {
            mixin(enumMixinStr_LN_sm4_cbc);
        }
    }




    static if(!is(typeof(NID_sm4_cbc))) {
        private enum enumMixinStr_NID_sm4_cbc = `enum NID_sm4_cbc = 1134;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sm4_cbc); }))) {
            mixin(enumMixinStr_NID_sm4_cbc);
        }
    }




    static if(!is(typeof(OBJ_sm4_cbc))) {
        private enum enumMixinStr_OBJ_sm4_cbc = `enum OBJ_sm4_cbc = OBJ_sm_scheme , 104L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sm4_cbc); }))) {
            mixin(enumMixinStr_OBJ_sm4_cbc);
        }
    }




    static if(!is(typeof(SN_sm4_ofb128))) {
        private enum enumMixinStr_SN_sm4_ofb128 = `enum SN_sm4_ofb128 = "SM4-OFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sm4_ofb128); }))) {
            mixin(enumMixinStr_SN_sm4_ofb128);
        }
    }




    static if(!is(typeof(LN_sm4_ofb128))) {
        private enum enumMixinStr_LN_sm4_ofb128 = `enum LN_sm4_ofb128 = "sm4-ofb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sm4_ofb128); }))) {
            mixin(enumMixinStr_LN_sm4_ofb128);
        }
    }




    static if(!is(typeof(NID_sm4_ofb128))) {
        private enum enumMixinStr_NID_sm4_ofb128 = `enum NID_sm4_ofb128 = 1135;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sm4_ofb128); }))) {
            mixin(enumMixinStr_NID_sm4_ofb128);
        }
    }




    static if(!is(typeof(OBJ_sm4_ofb128))) {
        private enum enumMixinStr_OBJ_sm4_ofb128 = `enum OBJ_sm4_ofb128 = OBJ_sm_scheme , 104L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sm4_ofb128); }))) {
            mixin(enumMixinStr_OBJ_sm4_ofb128);
        }
    }




    static if(!is(typeof(SN_sm4_cfb128))) {
        private enum enumMixinStr_SN_sm4_cfb128 = `enum SN_sm4_cfb128 = "SM4-CFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sm4_cfb128); }))) {
            mixin(enumMixinStr_SN_sm4_cfb128);
        }
    }




    static if(!is(typeof(LN_sm4_cfb128))) {
        private enum enumMixinStr_LN_sm4_cfb128 = `enum LN_sm4_cfb128 = "sm4-cfb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sm4_cfb128); }))) {
            mixin(enumMixinStr_LN_sm4_cfb128);
        }
    }




    static if(!is(typeof(NID_sm4_cfb128))) {
        private enum enumMixinStr_NID_sm4_cfb128 = `enum NID_sm4_cfb128 = 1137;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sm4_cfb128); }))) {
            mixin(enumMixinStr_NID_sm4_cfb128);
        }
    }




    static if(!is(typeof(OBJ_sm4_cfb128))) {
        private enum enumMixinStr_OBJ_sm4_cfb128 = `enum OBJ_sm4_cfb128 = OBJ_sm_scheme , 104L , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sm4_cfb128); }))) {
            mixin(enumMixinStr_OBJ_sm4_cfb128);
        }
    }




    static if(!is(typeof(SN_sm4_cfb1))) {
        private enum enumMixinStr_SN_sm4_cfb1 = `enum SN_sm4_cfb1 = "SM4-CFB1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sm4_cfb1); }))) {
            mixin(enumMixinStr_SN_sm4_cfb1);
        }
    }




    static if(!is(typeof(LN_sm4_cfb1))) {
        private enum enumMixinStr_LN_sm4_cfb1 = `enum LN_sm4_cfb1 = "sm4-cfb1";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sm4_cfb1); }))) {
            mixin(enumMixinStr_LN_sm4_cfb1);
        }
    }




    static if(!is(typeof(NID_sm4_cfb1))) {
        private enum enumMixinStr_NID_sm4_cfb1 = `enum NID_sm4_cfb1 = 1136;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sm4_cfb1); }))) {
            mixin(enumMixinStr_NID_sm4_cfb1);
        }
    }




    static if(!is(typeof(OBJ_sm4_cfb1))) {
        private enum enumMixinStr_OBJ_sm4_cfb1 = `enum OBJ_sm4_cfb1 = OBJ_sm_scheme , 104L , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sm4_cfb1); }))) {
            mixin(enumMixinStr_OBJ_sm4_cfb1);
        }
    }




    static if(!is(typeof(SN_sm4_cfb8))) {
        private enum enumMixinStr_SN_sm4_cfb8 = `enum SN_sm4_cfb8 = "SM4-CFB8";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sm4_cfb8); }))) {
            mixin(enumMixinStr_SN_sm4_cfb8);
        }
    }




    static if(!is(typeof(LN_sm4_cfb8))) {
        private enum enumMixinStr_LN_sm4_cfb8 = `enum LN_sm4_cfb8 = "sm4-cfb8";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sm4_cfb8); }))) {
            mixin(enumMixinStr_LN_sm4_cfb8);
        }
    }




    static if(!is(typeof(NID_sm4_cfb8))) {
        private enum enumMixinStr_NID_sm4_cfb8 = `enum NID_sm4_cfb8 = 1138;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sm4_cfb8); }))) {
            mixin(enumMixinStr_NID_sm4_cfb8);
        }
    }




    static if(!is(typeof(OBJ_sm4_cfb8))) {
        private enum enumMixinStr_OBJ_sm4_cfb8 = `enum OBJ_sm4_cfb8 = OBJ_sm_scheme , 104L , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sm4_cfb8); }))) {
            mixin(enumMixinStr_OBJ_sm4_cfb8);
        }
    }




    static if(!is(typeof(SN_sm4_ctr))) {
        private enum enumMixinStr_SN_sm4_ctr = `enum SN_sm4_ctr = "SM4-CTR";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sm4_ctr); }))) {
            mixin(enumMixinStr_SN_sm4_ctr);
        }
    }




    static if(!is(typeof(LN_sm4_ctr))) {
        private enum enumMixinStr_LN_sm4_ctr = `enum LN_sm4_ctr = "sm4-ctr";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sm4_ctr); }))) {
            mixin(enumMixinStr_LN_sm4_ctr);
        }
    }




    static if(!is(typeof(NID_sm4_ctr))) {
        private enum enumMixinStr_NID_sm4_ctr = `enum NID_sm4_ctr = 1139;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sm4_ctr); }))) {
            mixin(enumMixinStr_NID_sm4_ctr);
        }
    }




    static if(!is(typeof(OBJ_sm4_ctr))) {
        private enum enumMixinStr_OBJ_sm4_ctr = `enum OBJ_sm4_ctr = OBJ_sm_scheme , 104L , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sm4_ctr); }))) {
            mixin(enumMixinStr_OBJ_sm4_ctr);
        }
    }




    static if(!is(typeof(SN_hmac))) {
        private enum enumMixinStr_SN_hmac = `enum SN_hmac = "HMAC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_hmac); }))) {
            mixin(enumMixinStr_SN_hmac);
        }
    }




    static if(!is(typeof(LN_hmac))) {
        private enum enumMixinStr_LN_hmac = `enum LN_hmac = "hmac";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_hmac); }))) {
            mixin(enumMixinStr_LN_hmac);
        }
    }




    static if(!is(typeof(NID_hmac))) {
        private enum enumMixinStr_NID_hmac = `enum NID_hmac = 855;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_hmac); }))) {
            mixin(enumMixinStr_NID_hmac);
        }
    }




    static if(!is(typeof(SN_cmac))) {
        private enum enumMixinStr_SN_cmac = `enum SN_cmac = "CMAC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_cmac); }))) {
            mixin(enumMixinStr_SN_cmac);
        }
    }




    static if(!is(typeof(LN_cmac))) {
        private enum enumMixinStr_LN_cmac = `enum LN_cmac = "cmac";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_cmac); }))) {
            mixin(enumMixinStr_LN_cmac);
        }
    }




    static if(!is(typeof(NID_cmac))) {
        private enum enumMixinStr_NID_cmac = `enum NID_cmac = 894;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_cmac); }))) {
            mixin(enumMixinStr_NID_cmac);
        }
    }




    static if(!is(typeof(SN_rc4_hmac_md5))) {
        private enum enumMixinStr_SN_rc4_hmac_md5 = `enum SN_rc4_hmac_md5 = "RC4-HMAC-MD5";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_rc4_hmac_md5); }))) {
            mixin(enumMixinStr_SN_rc4_hmac_md5);
        }
    }




    static if(!is(typeof(LN_rc4_hmac_md5))) {
        private enum enumMixinStr_LN_rc4_hmac_md5 = `enum LN_rc4_hmac_md5 = "rc4-hmac-md5";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_rc4_hmac_md5); }))) {
            mixin(enumMixinStr_LN_rc4_hmac_md5);
        }
    }




    static if(!is(typeof(NID_rc4_hmac_md5))) {
        private enum enumMixinStr_NID_rc4_hmac_md5 = `enum NID_rc4_hmac_md5 = 915;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_rc4_hmac_md5); }))) {
            mixin(enumMixinStr_NID_rc4_hmac_md5);
        }
    }




    static if(!is(typeof(SN_aes_128_cbc_hmac_sha1))) {
        private enum enumMixinStr_SN_aes_128_cbc_hmac_sha1 = `enum SN_aes_128_cbc_hmac_sha1 = "AES-128-CBC-HMAC-SHA1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_128_cbc_hmac_sha1); }))) {
            mixin(enumMixinStr_SN_aes_128_cbc_hmac_sha1);
        }
    }




    static if(!is(typeof(LN_aes_128_cbc_hmac_sha1))) {
        private enum enumMixinStr_LN_aes_128_cbc_hmac_sha1 = `enum LN_aes_128_cbc_hmac_sha1 = "aes-128-cbc-hmac-sha1";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_128_cbc_hmac_sha1); }))) {
            mixin(enumMixinStr_LN_aes_128_cbc_hmac_sha1);
        }
    }




    static if(!is(typeof(NID_aes_128_cbc_hmac_sha1))) {
        private enum enumMixinStr_NID_aes_128_cbc_hmac_sha1 = `enum NID_aes_128_cbc_hmac_sha1 = 916;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_128_cbc_hmac_sha1); }))) {
            mixin(enumMixinStr_NID_aes_128_cbc_hmac_sha1);
        }
    }




    static if(!is(typeof(SN_aes_192_cbc_hmac_sha1))) {
        private enum enumMixinStr_SN_aes_192_cbc_hmac_sha1 = `enum SN_aes_192_cbc_hmac_sha1 = "AES-192-CBC-HMAC-SHA1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_192_cbc_hmac_sha1); }))) {
            mixin(enumMixinStr_SN_aes_192_cbc_hmac_sha1);
        }
    }




    static if(!is(typeof(LN_aes_192_cbc_hmac_sha1))) {
        private enum enumMixinStr_LN_aes_192_cbc_hmac_sha1 = `enum LN_aes_192_cbc_hmac_sha1 = "aes-192-cbc-hmac-sha1";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_192_cbc_hmac_sha1); }))) {
            mixin(enumMixinStr_LN_aes_192_cbc_hmac_sha1);
        }
    }




    static if(!is(typeof(NID_aes_192_cbc_hmac_sha1))) {
        private enum enumMixinStr_NID_aes_192_cbc_hmac_sha1 = `enum NID_aes_192_cbc_hmac_sha1 = 917;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_192_cbc_hmac_sha1); }))) {
            mixin(enumMixinStr_NID_aes_192_cbc_hmac_sha1);
        }
    }




    static if(!is(typeof(SN_aes_256_cbc_hmac_sha1))) {
        private enum enumMixinStr_SN_aes_256_cbc_hmac_sha1 = `enum SN_aes_256_cbc_hmac_sha1 = "AES-256-CBC-HMAC-SHA1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_256_cbc_hmac_sha1); }))) {
            mixin(enumMixinStr_SN_aes_256_cbc_hmac_sha1);
        }
    }




    static if(!is(typeof(LN_aes_256_cbc_hmac_sha1))) {
        private enum enumMixinStr_LN_aes_256_cbc_hmac_sha1 = `enum LN_aes_256_cbc_hmac_sha1 = "aes-256-cbc-hmac-sha1";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_256_cbc_hmac_sha1); }))) {
            mixin(enumMixinStr_LN_aes_256_cbc_hmac_sha1);
        }
    }




    static if(!is(typeof(NID_aes_256_cbc_hmac_sha1))) {
        private enum enumMixinStr_NID_aes_256_cbc_hmac_sha1 = `enum NID_aes_256_cbc_hmac_sha1 = 918;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_256_cbc_hmac_sha1); }))) {
            mixin(enumMixinStr_NID_aes_256_cbc_hmac_sha1);
        }
    }




    static if(!is(typeof(SN_aes_128_cbc_hmac_sha256))) {
        private enum enumMixinStr_SN_aes_128_cbc_hmac_sha256 = `enum SN_aes_128_cbc_hmac_sha256 = "AES-128-CBC-HMAC-SHA256";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_128_cbc_hmac_sha256); }))) {
            mixin(enumMixinStr_SN_aes_128_cbc_hmac_sha256);
        }
    }




    static if(!is(typeof(LN_aes_128_cbc_hmac_sha256))) {
        private enum enumMixinStr_LN_aes_128_cbc_hmac_sha256 = `enum LN_aes_128_cbc_hmac_sha256 = "aes-128-cbc-hmac-sha256";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_128_cbc_hmac_sha256); }))) {
            mixin(enumMixinStr_LN_aes_128_cbc_hmac_sha256);
        }
    }




    static if(!is(typeof(NID_aes_128_cbc_hmac_sha256))) {
        private enum enumMixinStr_NID_aes_128_cbc_hmac_sha256 = `enum NID_aes_128_cbc_hmac_sha256 = 948;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_128_cbc_hmac_sha256); }))) {
            mixin(enumMixinStr_NID_aes_128_cbc_hmac_sha256);
        }
    }




    static if(!is(typeof(SN_aes_192_cbc_hmac_sha256))) {
        private enum enumMixinStr_SN_aes_192_cbc_hmac_sha256 = `enum SN_aes_192_cbc_hmac_sha256 = "AES-192-CBC-HMAC-SHA256";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_192_cbc_hmac_sha256); }))) {
            mixin(enumMixinStr_SN_aes_192_cbc_hmac_sha256);
        }
    }




    static if(!is(typeof(LN_aes_192_cbc_hmac_sha256))) {
        private enum enumMixinStr_LN_aes_192_cbc_hmac_sha256 = `enum LN_aes_192_cbc_hmac_sha256 = "aes-192-cbc-hmac-sha256";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_192_cbc_hmac_sha256); }))) {
            mixin(enumMixinStr_LN_aes_192_cbc_hmac_sha256);
        }
    }




    static if(!is(typeof(NID_aes_192_cbc_hmac_sha256))) {
        private enum enumMixinStr_NID_aes_192_cbc_hmac_sha256 = `enum NID_aes_192_cbc_hmac_sha256 = 949;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_192_cbc_hmac_sha256); }))) {
            mixin(enumMixinStr_NID_aes_192_cbc_hmac_sha256);
        }
    }




    static if(!is(typeof(SN_aes_256_cbc_hmac_sha256))) {
        private enum enumMixinStr_SN_aes_256_cbc_hmac_sha256 = `enum SN_aes_256_cbc_hmac_sha256 = "AES-256-CBC-HMAC-SHA256";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aes_256_cbc_hmac_sha256); }))) {
            mixin(enumMixinStr_SN_aes_256_cbc_hmac_sha256);
        }
    }




    static if(!is(typeof(LN_aes_256_cbc_hmac_sha256))) {
        private enum enumMixinStr_LN_aes_256_cbc_hmac_sha256 = `enum LN_aes_256_cbc_hmac_sha256 = "aes-256-cbc-hmac-sha256";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_aes_256_cbc_hmac_sha256); }))) {
            mixin(enumMixinStr_LN_aes_256_cbc_hmac_sha256);
        }
    }




    static if(!is(typeof(NID_aes_256_cbc_hmac_sha256))) {
        private enum enumMixinStr_NID_aes_256_cbc_hmac_sha256 = `enum NID_aes_256_cbc_hmac_sha256 = 950;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aes_256_cbc_hmac_sha256); }))) {
            mixin(enumMixinStr_NID_aes_256_cbc_hmac_sha256);
        }
    }




    static if(!is(typeof(SN_chacha20_poly1305))) {
        private enum enumMixinStr_SN_chacha20_poly1305 = `enum SN_chacha20_poly1305 = "ChaCha20-Poly1305";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_chacha20_poly1305); }))) {
            mixin(enumMixinStr_SN_chacha20_poly1305);
        }
    }




    static if(!is(typeof(LN_chacha20_poly1305))) {
        private enum enumMixinStr_LN_chacha20_poly1305 = `enum LN_chacha20_poly1305 = "chacha20-poly1305";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_chacha20_poly1305); }))) {
            mixin(enumMixinStr_LN_chacha20_poly1305);
        }
    }




    static if(!is(typeof(NID_chacha20_poly1305))) {
        private enum enumMixinStr_NID_chacha20_poly1305 = `enum NID_chacha20_poly1305 = 1018;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_chacha20_poly1305); }))) {
            mixin(enumMixinStr_NID_chacha20_poly1305);
        }
    }




    static if(!is(typeof(SN_chacha20))) {
        private enum enumMixinStr_SN_chacha20 = `enum SN_chacha20 = "ChaCha20";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_chacha20); }))) {
            mixin(enumMixinStr_SN_chacha20);
        }
    }




    static if(!is(typeof(LN_chacha20))) {
        private enum enumMixinStr_LN_chacha20 = `enum LN_chacha20 = "chacha20";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_chacha20); }))) {
            mixin(enumMixinStr_LN_chacha20);
        }
    }




    static if(!is(typeof(NID_chacha20))) {
        private enum enumMixinStr_NID_chacha20 = `enum NID_chacha20 = 1019;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_chacha20); }))) {
            mixin(enumMixinStr_NID_chacha20);
        }
    }




    static if(!is(typeof(SN_dhpublicnumber))) {
        private enum enumMixinStr_SN_dhpublicnumber = `enum SN_dhpublicnumber = "dhpublicnumber";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dhpublicnumber); }))) {
            mixin(enumMixinStr_SN_dhpublicnumber);
        }
    }




    static if(!is(typeof(LN_dhpublicnumber))) {
        private enum enumMixinStr_LN_dhpublicnumber = `enum LN_dhpublicnumber = "X9.42 DH";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_dhpublicnumber); }))) {
            mixin(enumMixinStr_LN_dhpublicnumber);
        }
    }




    static if(!is(typeof(NID_dhpublicnumber))) {
        private enum enumMixinStr_NID_dhpublicnumber = `enum NID_dhpublicnumber = 920;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dhpublicnumber); }))) {
            mixin(enumMixinStr_NID_dhpublicnumber);
        }
    }




    static if(!is(typeof(OBJ_dhpublicnumber))) {
        private enum enumMixinStr_OBJ_dhpublicnumber = `enum OBJ_dhpublicnumber = OBJ_ISO_US , 10046L , 2L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dhpublicnumber); }))) {
            mixin(enumMixinStr_OBJ_dhpublicnumber);
        }
    }




    static if(!is(typeof(SN_brainpoolP160r1))) {
        private enum enumMixinStr_SN_brainpoolP160r1 = `enum SN_brainpoolP160r1 = "brainpoolP160r1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_brainpoolP160r1); }))) {
            mixin(enumMixinStr_SN_brainpoolP160r1);
        }
    }




    static if(!is(typeof(NID_brainpoolP160r1))) {
        private enum enumMixinStr_NID_brainpoolP160r1 = `enum NID_brainpoolP160r1 = 921;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_brainpoolP160r1); }))) {
            mixin(enumMixinStr_NID_brainpoolP160r1);
        }
    }




    static if(!is(typeof(OBJ_brainpoolP160r1))) {
        private enum enumMixinStr_OBJ_brainpoolP160r1 = `enum OBJ_brainpoolP160r1 = 1L , 3L , 36L , 3L , 3L , 2L , 8L , 1L , 1L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_brainpoolP160r1); }))) {
            mixin(enumMixinStr_OBJ_brainpoolP160r1);
        }
    }




    static if(!is(typeof(SN_brainpoolP160t1))) {
        private enum enumMixinStr_SN_brainpoolP160t1 = `enum SN_brainpoolP160t1 = "brainpoolP160t1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_brainpoolP160t1); }))) {
            mixin(enumMixinStr_SN_brainpoolP160t1);
        }
    }




    static if(!is(typeof(NID_brainpoolP160t1))) {
        private enum enumMixinStr_NID_brainpoolP160t1 = `enum NID_brainpoolP160t1 = 922;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_brainpoolP160t1); }))) {
            mixin(enumMixinStr_NID_brainpoolP160t1);
        }
    }




    static if(!is(typeof(OBJ_brainpoolP160t1))) {
        private enum enumMixinStr_OBJ_brainpoolP160t1 = `enum OBJ_brainpoolP160t1 = 1L , 3L , 36L , 3L , 3L , 2L , 8L , 1L , 1L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_brainpoolP160t1); }))) {
            mixin(enumMixinStr_OBJ_brainpoolP160t1);
        }
    }




    static if(!is(typeof(SN_brainpoolP192r1))) {
        private enum enumMixinStr_SN_brainpoolP192r1 = `enum SN_brainpoolP192r1 = "brainpoolP192r1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_brainpoolP192r1); }))) {
            mixin(enumMixinStr_SN_brainpoolP192r1);
        }
    }




    static if(!is(typeof(NID_brainpoolP192r1))) {
        private enum enumMixinStr_NID_brainpoolP192r1 = `enum NID_brainpoolP192r1 = 923;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_brainpoolP192r1); }))) {
            mixin(enumMixinStr_NID_brainpoolP192r1);
        }
    }




    static if(!is(typeof(OBJ_brainpoolP192r1))) {
        private enum enumMixinStr_OBJ_brainpoolP192r1 = `enum OBJ_brainpoolP192r1 = 1L , 3L , 36L , 3L , 3L , 2L , 8L , 1L , 1L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_brainpoolP192r1); }))) {
            mixin(enumMixinStr_OBJ_brainpoolP192r1);
        }
    }




    static if(!is(typeof(SN_brainpoolP192t1))) {
        private enum enumMixinStr_SN_brainpoolP192t1 = `enum SN_brainpoolP192t1 = "brainpoolP192t1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_brainpoolP192t1); }))) {
            mixin(enumMixinStr_SN_brainpoolP192t1);
        }
    }




    static if(!is(typeof(NID_brainpoolP192t1))) {
        private enum enumMixinStr_NID_brainpoolP192t1 = `enum NID_brainpoolP192t1 = 924;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_brainpoolP192t1); }))) {
            mixin(enumMixinStr_NID_brainpoolP192t1);
        }
    }




    static if(!is(typeof(OBJ_brainpoolP192t1))) {
        private enum enumMixinStr_OBJ_brainpoolP192t1 = `enum OBJ_brainpoolP192t1 = 1L , 3L , 36L , 3L , 3L , 2L , 8L , 1L , 1L , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_brainpoolP192t1); }))) {
            mixin(enumMixinStr_OBJ_brainpoolP192t1);
        }
    }




    static if(!is(typeof(SN_brainpoolP224r1))) {
        private enum enumMixinStr_SN_brainpoolP224r1 = `enum SN_brainpoolP224r1 = "brainpoolP224r1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_brainpoolP224r1); }))) {
            mixin(enumMixinStr_SN_brainpoolP224r1);
        }
    }




    static if(!is(typeof(NID_brainpoolP224r1))) {
        private enum enumMixinStr_NID_brainpoolP224r1 = `enum NID_brainpoolP224r1 = 925;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_brainpoolP224r1); }))) {
            mixin(enumMixinStr_NID_brainpoolP224r1);
        }
    }




    static if(!is(typeof(OBJ_brainpoolP224r1))) {
        private enum enumMixinStr_OBJ_brainpoolP224r1 = `enum OBJ_brainpoolP224r1 = 1L , 3L , 36L , 3L , 3L , 2L , 8L , 1L , 1L , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_brainpoolP224r1); }))) {
            mixin(enumMixinStr_OBJ_brainpoolP224r1);
        }
    }




    static if(!is(typeof(SN_brainpoolP224t1))) {
        private enum enumMixinStr_SN_brainpoolP224t1 = `enum SN_brainpoolP224t1 = "brainpoolP224t1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_brainpoolP224t1); }))) {
            mixin(enumMixinStr_SN_brainpoolP224t1);
        }
    }




    static if(!is(typeof(NID_brainpoolP224t1))) {
        private enum enumMixinStr_NID_brainpoolP224t1 = `enum NID_brainpoolP224t1 = 926;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_brainpoolP224t1); }))) {
            mixin(enumMixinStr_NID_brainpoolP224t1);
        }
    }




    static if(!is(typeof(OBJ_brainpoolP224t1))) {
        private enum enumMixinStr_OBJ_brainpoolP224t1 = `enum OBJ_brainpoolP224t1 = 1L , 3L , 36L , 3L , 3L , 2L , 8L , 1L , 1L , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_brainpoolP224t1); }))) {
            mixin(enumMixinStr_OBJ_brainpoolP224t1);
        }
    }




    static if(!is(typeof(SN_brainpoolP256r1))) {
        private enum enumMixinStr_SN_brainpoolP256r1 = `enum SN_brainpoolP256r1 = "brainpoolP256r1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_brainpoolP256r1); }))) {
            mixin(enumMixinStr_SN_brainpoolP256r1);
        }
    }




    static if(!is(typeof(NID_brainpoolP256r1))) {
        private enum enumMixinStr_NID_brainpoolP256r1 = `enum NID_brainpoolP256r1 = 927;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_brainpoolP256r1); }))) {
            mixin(enumMixinStr_NID_brainpoolP256r1);
        }
    }




    static if(!is(typeof(OBJ_brainpoolP256r1))) {
        private enum enumMixinStr_OBJ_brainpoolP256r1 = `enum OBJ_brainpoolP256r1 = 1L , 3L , 36L , 3L , 3L , 2L , 8L , 1L , 1L , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_brainpoolP256r1); }))) {
            mixin(enumMixinStr_OBJ_brainpoolP256r1);
        }
    }




    static if(!is(typeof(SN_brainpoolP256t1))) {
        private enum enumMixinStr_SN_brainpoolP256t1 = `enum SN_brainpoolP256t1 = "brainpoolP256t1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_brainpoolP256t1); }))) {
            mixin(enumMixinStr_SN_brainpoolP256t1);
        }
    }




    static if(!is(typeof(NID_brainpoolP256t1))) {
        private enum enumMixinStr_NID_brainpoolP256t1 = `enum NID_brainpoolP256t1 = 928;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_brainpoolP256t1); }))) {
            mixin(enumMixinStr_NID_brainpoolP256t1);
        }
    }




    static if(!is(typeof(OBJ_brainpoolP256t1))) {
        private enum enumMixinStr_OBJ_brainpoolP256t1 = `enum OBJ_brainpoolP256t1 = 1L , 3L , 36L , 3L , 3L , 2L , 8L , 1L , 1L , 8L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_brainpoolP256t1); }))) {
            mixin(enumMixinStr_OBJ_brainpoolP256t1);
        }
    }




    static if(!is(typeof(SN_brainpoolP320r1))) {
        private enum enumMixinStr_SN_brainpoolP320r1 = `enum SN_brainpoolP320r1 = "brainpoolP320r1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_brainpoolP320r1); }))) {
            mixin(enumMixinStr_SN_brainpoolP320r1);
        }
    }




    static if(!is(typeof(NID_brainpoolP320r1))) {
        private enum enumMixinStr_NID_brainpoolP320r1 = `enum NID_brainpoolP320r1 = 929;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_brainpoolP320r1); }))) {
            mixin(enumMixinStr_NID_brainpoolP320r1);
        }
    }




    static if(!is(typeof(OBJ_brainpoolP320r1))) {
        private enum enumMixinStr_OBJ_brainpoolP320r1 = `enum OBJ_brainpoolP320r1 = 1L , 3L , 36L , 3L , 3L , 2L , 8L , 1L , 1L , 9L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_brainpoolP320r1); }))) {
            mixin(enumMixinStr_OBJ_brainpoolP320r1);
        }
    }




    static if(!is(typeof(SN_brainpoolP320t1))) {
        private enum enumMixinStr_SN_brainpoolP320t1 = `enum SN_brainpoolP320t1 = "brainpoolP320t1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_brainpoolP320t1); }))) {
            mixin(enumMixinStr_SN_brainpoolP320t1);
        }
    }




    static if(!is(typeof(NID_brainpoolP320t1))) {
        private enum enumMixinStr_NID_brainpoolP320t1 = `enum NID_brainpoolP320t1 = 930;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_brainpoolP320t1); }))) {
            mixin(enumMixinStr_NID_brainpoolP320t1);
        }
    }




    static if(!is(typeof(OBJ_brainpoolP320t1))) {
        private enum enumMixinStr_OBJ_brainpoolP320t1 = `enum OBJ_brainpoolP320t1 = 1L , 3L , 36L , 3L , 3L , 2L , 8L , 1L , 1L , 10L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_brainpoolP320t1); }))) {
            mixin(enumMixinStr_OBJ_brainpoolP320t1);
        }
    }




    static if(!is(typeof(SN_brainpoolP384r1))) {
        private enum enumMixinStr_SN_brainpoolP384r1 = `enum SN_brainpoolP384r1 = "brainpoolP384r1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_brainpoolP384r1); }))) {
            mixin(enumMixinStr_SN_brainpoolP384r1);
        }
    }




    static if(!is(typeof(NID_brainpoolP384r1))) {
        private enum enumMixinStr_NID_brainpoolP384r1 = `enum NID_brainpoolP384r1 = 931;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_brainpoolP384r1); }))) {
            mixin(enumMixinStr_NID_brainpoolP384r1);
        }
    }




    static if(!is(typeof(OBJ_brainpoolP384r1))) {
        private enum enumMixinStr_OBJ_brainpoolP384r1 = `enum OBJ_brainpoolP384r1 = 1L , 3L , 36L , 3L , 3L , 2L , 8L , 1L , 1L , 11L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_brainpoolP384r1); }))) {
            mixin(enumMixinStr_OBJ_brainpoolP384r1);
        }
    }




    static if(!is(typeof(SN_brainpoolP384t1))) {
        private enum enumMixinStr_SN_brainpoolP384t1 = `enum SN_brainpoolP384t1 = "brainpoolP384t1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_brainpoolP384t1); }))) {
            mixin(enumMixinStr_SN_brainpoolP384t1);
        }
    }




    static if(!is(typeof(NID_brainpoolP384t1))) {
        private enum enumMixinStr_NID_brainpoolP384t1 = `enum NID_brainpoolP384t1 = 932;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_brainpoolP384t1); }))) {
            mixin(enumMixinStr_NID_brainpoolP384t1);
        }
    }




    static if(!is(typeof(OBJ_brainpoolP384t1))) {
        private enum enumMixinStr_OBJ_brainpoolP384t1 = `enum OBJ_brainpoolP384t1 = 1L , 3L , 36L , 3L , 3L , 2L , 8L , 1L , 1L , 12L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_brainpoolP384t1); }))) {
            mixin(enumMixinStr_OBJ_brainpoolP384t1);
        }
    }




    static if(!is(typeof(SN_brainpoolP512r1))) {
        private enum enumMixinStr_SN_brainpoolP512r1 = `enum SN_brainpoolP512r1 = "brainpoolP512r1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_brainpoolP512r1); }))) {
            mixin(enumMixinStr_SN_brainpoolP512r1);
        }
    }




    static if(!is(typeof(NID_brainpoolP512r1))) {
        private enum enumMixinStr_NID_brainpoolP512r1 = `enum NID_brainpoolP512r1 = 933;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_brainpoolP512r1); }))) {
            mixin(enumMixinStr_NID_brainpoolP512r1);
        }
    }




    static if(!is(typeof(OBJ_brainpoolP512r1))) {
        private enum enumMixinStr_OBJ_brainpoolP512r1 = `enum OBJ_brainpoolP512r1 = 1L , 3L , 36L , 3L , 3L , 2L , 8L , 1L , 1L , 13L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_brainpoolP512r1); }))) {
            mixin(enumMixinStr_OBJ_brainpoolP512r1);
        }
    }




    static if(!is(typeof(SN_brainpoolP512t1))) {
        private enum enumMixinStr_SN_brainpoolP512t1 = `enum SN_brainpoolP512t1 = "brainpoolP512t1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_brainpoolP512t1); }))) {
            mixin(enumMixinStr_SN_brainpoolP512t1);
        }
    }




    static if(!is(typeof(NID_brainpoolP512t1))) {
        private enum enumMixinStr_NID_brainpoolP512t1 = `enum NID_brainpoolP512t1 = 934;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_brainpoolP512t1); }))) {
            mixin(enumMixinStr_NID_brainpoolP512t1);
        }
    }




    static if(!is(typeof(OBJ_brainpoolP512t1))) {
        private enum enumMixinStr_OBJ_brainpoolP512t1 = `enum OBJ_brainpoolP512t1 = 1L , 3L , 36L , 3L , 3L , 2L , 8L , 1L , 1L , 14L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_brainpoolP512t1); }))) {
            mixin(enumMixinStr_OBJ_brainpoolP512t1);
        }
    }




    static if(!is(typeof(OBJ_x9_63_scheme))) {
        private enum enumMixinStr_OBJ_x9_63_scheme = `enum OBJ_x9_63_scheme = 1L , 3L , 133L , 16L , 840L , 63L , 0L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_x9_63_scheme); }))) {
            mixin(enumMixinStr_OBJ_x9_63_scheme);
        }
    }




    static if(!is(typeof(OBJ_secg_scheme))) {
        private enum enumMixinStr_OBJ_secg_scheme = `enum OBJ_secg_scheme = OBJ_certicom_arc , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_secg_scheme); }))) {
            mixin(enumMixinStr_OBJ_secg_scheme);
        }
    }




    static if(!is(typeof(SN_dhSinglePass_stdDH_sha1kdf_scheme))) {
        private enum enumMixinStr_SN_dhSinglePass_stdDH_sha1kdf_scheme = `enum SN_dhSinglePass_stdDH_sha1kdf_scheme = "dhSinglePass-stdDH-sha1kdf-scheme";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dhSinglePass_stdDH_sha1kdf_scheme); }))) {
            mixin(enumMixinStr_SN_dhSinglePass_stdDH_sha1kdf_scheme);
        }
    }




    static if(!is(typeof(NID_dhSinglePass_stdDH_sha1kdf_scheme))) {
        private enum enumMixinStr_NID_dhSinglePass_stdDH_sha1kdf_scheme = `enum NID_dhSinglePass_stdDH_sha1kdf_scheme = 936;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dhSinglePass_stdDH_sha1kdf_scheme); }))) {
            mixin(enumMixinStr_NID_dhSinglePass_stdDH_sha1kdf_scheme);
        }
    }




    static if(!is(typeof(OBJ_dhSinglePass_stdDH_sha1kdf_scheme))) {
        private enum enumMixinStr_OBJ_dhSinglePass_stdDH_sha1kdf_scheme = `enum OBJ_dhSinglePass_stdDH_sha1kdf_scheme = 1L , 3L , 133L , 16L , 840L , 63L , 0L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dhSinglePass_stdDH_sha1kdf_scheme); }))) {
            mixin(enumMixinStr_OBJ_dhSinglePass_stdDH_sha1kdf_scheme);
        }
    }




    static if(!is(typeof(SN_dhSinglePass_stdDH_sha224kdf_scheme))) {
        private enum enumMixinStr_SN_dhSinglePass_stdDH_sha224kdf_scheme = `enum SN_dhSinglePass_stdDH_sha224kdf_scheme = "dhSinglePass-stdDH-sha224kdf-scheme";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dhSinglePass_stdDH_sha224kdf_scheme); }))) {
            mixin(enumMixinStr_SN_dhSinglePass_stdDH_sha224kdf_scheme);
        }
    }




    static if(!is(typeof(NID_dhSinglePass_stdDH_sha224kdf_scheme))) {
        private enum enumMixinStr_NID_dhSinglePass_stdDH_sha224kdf_scheme = `enum NID_dhSinglePass_stdDH_sha224kdf_scheme = 937;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dhSinglePass_stdDH_sha224kdf_scheme); }))) {
            mixin(enumMixinStr_NID_dhSinglePass_stdDH_sha224kdf_scheme);
        }
    }




    static if(!is(typeof(OBJ_dhSinglePass_stdDH_sha224kdf_scheme))) {
        private enum enumMixinStr_OBJ_dhSinglePass_stdDH_sha224kdf_scheme = `enum OBJ_dhSinglePass_stdDH_sha224kdf_scheme = OBJ_certicom_arc , 1L , 11L , 0L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dhSinglePass_stdDH_sha224kdf_scheme); }))) {
            mixin(enumMixinStr_OBJ_dhSinglePass_stdDH_sha224kdf_scheme);
        }
    }




    static if(!is(typeof(SN_dhSinglePass_stdDH_sha256kdf_scheme))) {
        private enum enumMixinStr_SN_dhSinglePass_stdDH_sha256kdf_scheme = `enum SN_dhSinglePass_stdDH_sha256kdf_scheme = "dhSinglePass-stdDH-sha256kdf-scheme";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dhSinglePass_stdDH_sha256kdf_scheme); }))) {
            mixin(enumMixinStr_SN_dhSinglePass_stdDH_sha256kdf_scheme);
        }
    }




    static if(!is(typeof(NID_dhSinglePass_stdDH_sha256kdf_scheme))) {
        private enum enumMixinStr_NID_dhSinglePass_stdDH_sha256kdf_scheme = `enum NID_dhSinglePass_stdDH_sha256kdf_scheme = 938;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dhSinglePass_stdDH_sha256kdf_scheme); }))) {
            mixin(enumMixinStr_NID_dhSinglePass_stdDH_sha256kdf_scheme);
        }
    }




    static if(!is(typeof(OBJ_dhSinglePass_stdDH_sha256kdf_scheme))) {
        private enum enumMixinStr_OBJ_dhSinglePass_stdDH_sha256kdf_scheme = `enum OBJ_dhSinglePass_stdDH_sha256kdf_scheme = OBJ_certicom_arc , 1L , 11L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dhSinglePass_stdDH_sha256kdf_scheme); }))) {
            mixin(enumMixinStr_OBJ_dhSinglePass_stdDH_sha256kdf_scheme);
        }
    }




    static if(!is(typeof(SN_dhSinglePass_stdDH_sha384kdf_scheme))) {
        private enum enumMixinStr_SN_dhSinglePass_stdDH_sha384kdf_scheme = `enum SN_dhSinglePass_stdDH_sha384kdf_scheme = "dhSinglePass-stdDH-sha384kdf-scheme";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dhSinglePass_stdDH_sha384kdf_scheme); }))) {
            mixin(enumMixinStr_SN_dhSinglePass_stdDH_sha384kdf_scheme);
        }
    }




    static if(!is(typeof(NID_dhSinglePass_stdDH_sha384kdf_scheme))) {
        private enum enumMixinStr_NID_dhSinglePass_stdDH_sha384kdf_scheme = `enum NID_dhSinglePass_stdDH_sha384kdf_scheme = 939;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dhSinglePass_stdDH_sha384kdf_scheme); }))) {
            mixin(enumMixinStr_NID_dhSinglePass_stdDH_sha384kdf_scheme);
        }
    }




    static if(!is(typeof(OBJ_dhSinglePass_stdDH_sha384kdf_scheme))) {
        private enum enumMixinStr_OBJ_dhSinglePass_stdDH_sha384kdf_scheme = `enum OBJ_dhSinglePass_stdDH_sha384kdf_scheme = OBJ_certicom_arc , 1L , 11L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dhSinglePass_stdDH_sha384kdf_scheme); }))) {
            mixin(enumMixinStr_OBJ_dhSinglePass_stdDH_sha384kdf_scheme);
        }
    }




    static if(!is(typeof(SN_dhSinglePass_stdDH_sha512kdf_scheme))) {
        private enum enumMixinStr_SN_dhSinglePass_stdDH_sha512kdf_scheme = `enum SN_dhSinglePass_stdDH_sha512kdf_scheme = "dhSinglePass-stdDH-sha512kdf-scheme";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dhSinglePass_stdDH_sha512kdf_scheme); }))) {
            mixin(enumMixinStr_SN_dhSinglePass_stdDH_sha512kdf_scheme);
        }
    }




    static if(!is(typeof(NID_dhSinglePass_stdDH_sha512kdf_scheme))) {
        private enum enumMixinStr_NID_dhSinglePass_stdDH_sha512kdf_scheme = `enum NID_dhSinglePass_stdDH_sha512kdf_scheme = 940;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dhSinglePass_stdDH_sha512kdf_scheme); }))) {
            mixin(enumMixinStr_NID_dhSinglePass_stdDH_sha512kdf_scheme);
        }
    }




    static if(!is(typeof(OBJ_dhSinglePass_stdDH_sha512kdf_scheme))) {
        private enum enumMixinStr_OBJ_dhSinglePass_stdDH_sha512kdf_scheme = `enum OBJ_dhSinglePass_stdDH_sha512kdf_scheme = OBJ_certicom_arc , 1L , 11L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dhSinglePass_stdDH_sha512kdf_scheme); }))) {
            mixin(enumMixinStr_OBJ_dhSinglePass_stdDH_sha512kdf_scheme);
        }
    }




    static if(!is(typeof(SN_dhSinglePass_cofactorDH_sha1kdf_scheme))) {
        private enum enumMixinStr_SN_dhSinglePass_cofactorDH_sha1kdf_scheme = `enum SN_dhSinglePass_cofactorDH_sha1kdf_scheme = "dhSinglePass-cofactorDH-sha1kdf-scheme";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dhSinglePass_cofactorDH_sha1kdf_scheme); }))) {
            mixin(enumMixinStr_SN_dhSinglePass_cofactorDH_sha1kdf_scheme);
        }
    }




    static if(!is(typeof(NID_dhSinglePass_cofactorDH_sha1kdf_scheme))) {
        private enum enumMixinStr_NID_dhSinglePass_cofactorDH_sha1kdf_scheme = `enum NID_dhSinglePass_cofactorDH_sha1kdf_scheme = 941;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dhSinglePass_cofactorDH_sha1kdf_scheme); }))) {
            mixin(enumMixinStr_NID_dhSinglePass_cofactorDH_sha1kdf_scheme);
        }
    }




    static if(!is(typeof(OBJ_dhSinglePass_cofactorDH_sha1kdf_scheme))) {
        private enum enumMixinStr_OBJ_dhSinglePass_cofactorDH_sha1kdf_scheme = `enum OBJ_dhSinglePass_cofactorDH_sha1kdf_scheme = 1L , 3L , 133L , 16L , 840L , 63L , 0L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dhSinglePass_cofactorDH_sha1kdf_scheme); }))) {
            mixin(enumMixinStr_OBJ_dhSinglePass_cofactorDH_sha1kdf_scheme);
        }
    }




    static if(!is(typeof(SN_dhSinglePass_cofactorDH_sha224kdf_scheme))) {
        private enum enumMixinStr_SN_dhSinglePass_cofactorDH_sha224kdf_scheme = `enum SN_dhSinglePass_cofactorDH_sha224kdf_scheme = "dhSinglePass-cofactorDH-sha224kdf-scheme";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dhSinglePass_cofactorDH_sha224kdf_scheme); }))) {
            mixin(enumMixinStr_SN_dhSinglePass_cofactorDH_sha224kdf_scheme);
        }
    }




    static if(!is(typeof(NID_dhSinglePass_cofactorDH_sha224kdf_scheme))) {
        private enum enumMixinStr_NID_dhSinglePass_cofactorDH_sha224kdf_scheme = `enum NID_dhSinglePass_cofactorDH_sha224kdf_scheme = 942;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dhSinglePass_cofactorDH_sha224kdf_scheme); }))) {
            mixin(enumMixinStr_NID_dhSinglePass_cofactorDH_sha224kdf_scheme);
        }
    }




    static if(!is(typeof(OBJ_dhSinglePass_cofactorDH_sha224kdf_scheme))) {
        private enum enumMixinStr_OBJ_dhSinglePass_cofactorDH_sha224kdf_scheme = `enum OBJ_dhSinglePass_cofactorDH_sha224kdf_scheme = OBJ_certicom_arc , 1L , 14L , 0L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dhSinglePass_cofactorDH_sha224kdf_scheme); }))) {
            mixin(enumMixinStr_OBJ_dhSinglePass_cofactorDH_sha224kdf_scheme);
        }
    }




    static if(!is(typeof(SN_dhSinglePass_cofactorDH_sha256kdf_scheme))) {
        private enum enumMixinStr_SN_dhSinglePass_cofactorDH_sha256kdf_scheme = `enum SN_dhSinglePass_cofactorDH_sha256kdf_scheme = "dhSinglePass-cofactorDH-sha256kdf-scheme";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dhSinglePass_cofactorDH_sha256kdf_scheme); }))) {
            mixin(enumMixinStr_SN_dhSinglePass_cofactorDH_sha256kdf_scheme);
        }
    }




    static if(!is(typeof(NID_dhSinglePass_cofactorDH_sha256kdf_scheme))) {
        private enum enumMixinStr_NID_dhSinglePass_cofactorDH_sha256kdf_scheme = `enum NID_dhSinglePass_cofactorDH_sha256kdf_scheme = 943;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dhSinglePass_cofactorDH_sha256kdf_scheme); }))) {
            mixin(enumMixinStr_NID_dhSinglePass_cofactorDH_sha256kdf_scheme);
        }
    }




    static if(!is(typeof(OBJ_dhSinglePass_cofactorDH_sha256kdf_scheme))) {
        private enum enumMixinStr_OBJ_dhSinglePass_cofactorDH_sha256kdf_scheme = `enum OBJ_dhSinglePass_cofactorDH_sha256kdf_scheme = OBJ_certicom_arc , 1L , 14L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dhSinglePass_cofactorDH_sha256kdf_scheme); }))) {
            mixin(enumMixinStr_OBJ_dhSinglePass_cofactorDH_sha256kdf_scheme);
        }
    }




    static if(!is(typeof(SN_dhSinglePass_cofactorDH_sha384kdf_scheme))) {
        private enum enumMixinStr_SN_dhSinglePass_cofactorDH_sha384kdf_scheme = `enum SN_dhSinglePass_cofactorDH_sha384kdf_scheme = "dhSinglePass-cofactorDH-sha384kdf-scheme";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dhSinglePass_cofactorDH_sha384kdf_scheme); }))) {
            mixin(enumMixinStr_SN_dhSinglePass_cofactorDH_sha384kdf_scheme);
        }
    }




    static if(!is(typeof(NID_dhSinglePass_cofactorDH_sha384kdf_scheme))) {
        private enum enumMixinStr_NID_dhSinglePass_cofactorDH_sha384kdf_scheme = `enum NID_dhSinglePass_cofactorDH_sha384kdf_scheme = 944;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dhSinglePass_cofactorDH_sha384kdf_scheme); }))) {
            mixin(enumMixinStr_NID_dhSinglePass_cofactorDH_sha384kdf_scheme);
        }
    }




    static if(!is(typeof(OBJ_dhSinglePass_cofactorDH_sha384kdf_scheme))) {
        private enum enumMixinStr_OBJ_dhSinglePass_cofactorDH_sha384kdf_scheme = `enum OBJ_dhSinglePass_cofactorDH_sha384kdf_scheme = OBJ_certicom_arc , 1L , 14L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dhSinglePass_cofactorDH_sha384kdf_scheme); }))) {
            mixin(enumMixinStr_OBJ_dhSinglePass_cofactorDH_sha384kdf_scheme);
        }
    }




    static if(!is(typeof(SN_dhSinglePass_cofactorDH_sha512kdf_scheme))) {
        private enum enumMixinStr_SN_dhSinglePass_cofactorDH_sha512kdf_scheme = `enum SN_dhSinglePass_cofactorDH_sha512kdf_scheme = "dhSinglePass-cofactorDH-sha512kdf-scheme";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dhSinglePass_cofactorDH_sha512kdf_scheme); }))) {
            mixin(enumMixinStr_SN_dhSinglePass_cofactorDH_sha512kdf_scheme);
        }
    }




    static if(!is(typeof(NID_dhSinglePass_cofactorDH_sha512kdf_scheme))) {
        private enum enumMixinStr_NID_dhSinglePass_cofactorDH_sha512kdf_scheme = `enum NID_dhSinglePass_cofactorDH_sha512kdf_scheme = 945;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dhSinglePass_cofactorDH_sha512kdf_scheme); }))) {
            mixin(enumMixinStr_NID_dhSinglePass_cofactorDH_sha512kdf_scheme);
        }
    }




    static if(!is(typeof(OBJ_dhSinglePass_cofactorDH_sha512kdf_scheme))) {
        private enum enumMixinStr_OBJ_dhSinglePass_cofactorDH_sha512kdf_scheme = `enum OBJ_dhSinglePass_cofactorDH_sha512kdf_scheme = OBJ_certicom_arc , 1L , 14L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dhSinglePass_cofactorDH_sha512kdf_scheme); }))) {
            mixin(enumMixinStr_OBJ_dhSinglePass_cofactorDH_sha512kdf_scheme);
        }
    }




    static if(!is(typeof(SN_dh_std_kdf))) {
        private enum enumMixinStr_SN_dh_std_kdf = `enum SN_dh_std_kdf = "dh-std-kdf";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dh_std_kdf); }))) {
            mixin(enumMixinStr_SN_dh_std_kdf);
        }
    }




    static if(!is(typeof(NID_dh_std_kdf))) {
        private enum enumMixinStr_NID_dh_std_kdf = `enum NID_dh_std_kdf = 946;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dh_std_kdf); }))) {
            mixin(enumMixinStr_NID_dh_std_kdf);
        }
    }




    static if(!is(typeof(SN_dh_cofactor_kdf))) {
        private enum enumMixinStr_SN_dh_cofactor_kdf = `enum SN_dh_cofactor_kdf = "dh-cofactor-kdf";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dh_cofactor_kdf); }))) {
            mixin(enumMixinStr_SN_dh_cofactor_kdf);
        }
    }




    static if(!is(typeof(NID_dh_cofactor_kdf))) {
        private enum enumMixinStr_NID_dh_cofactor_kdf = `enum NID_dh_cofactor_kdf = 947;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dh_cofactor_kdf); }))) {
            mixin(enumMixinStr_NID_dh_cofactor_kdf);
        }
    }




    static if(!is(typeof(SN_ct_precert_scts))) {
        private enum enumMixinStr_SN_ct_precert_scts = `enum SN_ct_precert_scts = "ct_precert_scts";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ct_precert_scts); }))) {
            mixin(enumMixinStr_SN_ct_precert_scts);
        }
    }




    static if(!is(typeof(LN_ct_precert_scts))) {
        private enum enumMixinStr_LN_ct_precert_scts = `enum LN_ct_precert_scts = "CT Precertificate SCTs";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ct_precert_scts); }))) {
            mixin(enumMixinStr_LN_ct_precert_scts);
        }
    }




    static if(!is(typeof(NID_ct_precert_scts))) {
        private enum enumMixinStr_NID_ct_precert_scts = `enum NID_ct_precert_scts = 951;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ct_precert_scts); }))) {
            mixin(enumMixinStr_NID_ct_precert_scts);
        }
    }




    static if(!is(typeof(OBJ_ct_precert_scts))) {
        private enum enumMixinStr_OBJ_ct_precert_scts = `enum OBJ_ct_precert_scts = 1L , 3L , 6L , 1L , 4L , 1L , 11129L , 2L , 4L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ct_precert_scts); }))) {
            mixin(enumMixinStr_OBJ_ct_precert_scts);
        }
    }




    static if(!is(typeof(SN_ct_precert_poison))) {
        private enum enumMixinStr_SN_ct_precert_poison = `enum SN_ct_precert_poison = "ct_precert_poison";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ct_precert_poison); }))) {
            mixin(enumMixinStr_SN_ct_precert_poison);
        }
    }




    static if(!is(typeof(LN_ct_precert_poison))) {
        private enum enumMixinStr_LN_ct_precert_poison = `enum LN_ct_precert_poison = "CT Precertificate Poison";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ct_precert_poison); }))) {
            mixin(enumMixinStr_LN_ct_precert_poison);
        }
    }




    static if(!is(typeof(NID_ct_precert_poison))) {
        private enum enumMixinStr_NID_ct_precert_poison = `enum NID_ct_precert_poison = 952;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ct_precert_poison); }))) {
            mixin(enumMixinStr_NID_ct_precert_poison);
        }
    }




    static if(!is(typeof(OBJ_ct_precert_poison))) {
        private enum enumMixinStr_OBJ_ct_precert_poison = `enum OBJ_ct_precert_poison = 1L , 3L , 6L , 1L , 4L , 1L , 11129L , 2L , 4L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ct_precert_poison); }))) {
            mixin(enumMixinStr_OBJ_ct_precert_poison);
        }
    }




    static if(!is(typeof(SN_ct_precert_signer))) {
        private enum enumMixinStr_SN_ct_precert_signer = `enum SN_ct_precert_signer = "ct_precert_signer";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ct_precert_signer); }))) {
            mixin(enumMixinStr_SN_ct_precert_signer);
        }
    }




    static if(!is(typeof(LN_ct_precert_signer))) {
        private enum enumMixinStr_LN_ct_precert_signer = `enum LN_ct_precert_signer = "CT Precertificate Signer";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ct_precert_signer); }))) {
            mixin(enumMixinStr_LN_ct_precert_signer);
        }
    }




    static if(!is(typeof(NID_ct_precert_signer))) {
        private enum enumMixinStr_NID_ct_precert_signer = `enum NID_ct_precert_signer = 953;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ct_precert_signer); }))) {
            mixin(enumMixinStr_NID_ct_precert_signer);
        }
    }




    static if(!is(typeof(OBJ_ct_precert_signer))) {
        private enum enumMixinStr_OBJ_ct_precert_signer = `enum OBJ_ct_precert_signer = 1L , 3L , 6L , 1L , 4L , 1L , 11129L , 2L , 4L , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ct_precert_signer); }))) {
            mixin(enumMixinStr_OBJ_ct_precert_signer);
        }
    }




    static if(!is(typeof(SN_ct_cert_scts))) {
        private enum enumMixinStr_SN_ct_cert_scts = `enum SN_ct_cert_scts = "ct_cert_scts";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ct_cert_scts); }))) {
            mixin(enumMixinStr_SN_ct_cert_scts);
        }
    }




    static if(!is(typeof(LN_ct_cert_scts))) {
        private enum enumMixinStr_LN_ct_cert_scts = `enum LN_ct_cert_scts = "CT Certificate SCTs";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ct_cert_scts); }))) {
            mixin(enumMixinStr_LN_ct_cert_scts);
        }
    }




    static if(!is(typeof(NID_ct_cert_scts))) {
        private enum enumMixinStr_NID_ct_cert_scts = `enum NID_ct_cert_scts = 954;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ct_cert_scts); }))) {
            mixin(enumMixinStr_NID_ct_cert_scts);
        }
    }




    static if(!is(typeof(OBJ_ct_cert_scts))) {
        private enum enumMixinStr_OBJ_ct_cert_scts = `enum OBJ_ct_cert_scts = 1L , 3L , 6L , 1L , 4L , 1L , 11129L , 2L , 4L , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ct_cert_scts); }))) {
            mixin(enumMixinStr_OBJ_ct_cert_scts);
        }
    }




    static if(!is(typeof(SN_jurisdictionLocalityName))) {
        private enum enumMixinStr_SN_jurisdictionLocalityName = `enum SN_jurisdictionLocalityName = "jurisdictionL";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_jurisdictionLocalityName); }))) {
            mixin(enumMixinStr_SN_jurisdictionLocalityName);
        }
    }




    static if(!is(typeof(LN_jurisdictionLocalityName))) {
        private enum enumMixinStr_LN_jurisdictionLocalityName = `enum LN_jurisdictionLocalityName = "jurisdictionLocalityName";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_jurisdictionLocalityName); }))) {
            mixin(enumMixinStr_LN_jurisdictionLocalityName);
        }
    }




    static if(!is(typeof(NID_jurisdictionLocalityName))) {
        private enum enumMixinStr_NID_jurisdictionLocalityName = `enum NID_jurisdictionLocalityName = 955;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_jurisdictionLocalityName); }))) {
            mixin(enumMixinStr_NID_jurisdictionLocalityName);
        }
    }




    static if(!is(typeof(OBJ_jurisdictionLocalityName))) {
        private enum enumMixinStr_OBJ_jurisdictionLocalityName = `enum OBJ_jurisdictionLocalityName = 1L , 3L , 6L , 1L , 4L , 1L , 311L , 60L , 2L , 1L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_jurisdictionLocalityName); }))) {
            mixin(enumMixinStr_OBJ_jurisdictionLocalityName);
        }
    }




    static if(!is(typeof(SN_jurisdictionStateOrProvinceName))) {
        private enum enumMixinStr_SN_jurisdictionStateOrProvinceName = `enum SN_jurisdictionStateOrProvinceName = "jurisdictionST";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_jurisdictionStateOrProvinceName); }))) {
            mixin(enumMixinStr_SN_jurisdictionStateOrProvinceName);
        }
    }




    static if(!is(typeof(LN_jurisdictionStateOrProvinceName))) {
        private enum enumMixinStr_LN_jurisdictionStateOrProvinceName = `enum LN_jurisdictionStateOrProvinceName = "jurisdictionStateOrProvinceName";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_jurisdictionStateOrProvinceName); }))) {
            mixin(enumMixinStr_LN_jurisdictionStateOrProvinceName);
        }
    }




    static if(!is(typeof(NID_jurisdictionStateOrProvinceName))) {
        private enum enumMixinStr_NID_jurisdictionStateOrProvinceName = `enum NID_jurisdictionStateOrProvinceName = 956;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_jurisdictionStateOrProvinceName); }))) {
            mixin(enumMixinStr_NID_jurisdictionStateOrProvinceName);
        }
    }




    static if(!is(typeof(OBJ_jurisdictionStateOrProvinceName))) {
        private enum enumMixinStr_OBJ_jurisdictionStateOrProvinceName = `enum OBJ_jurisdictionStateOrProvinceName = 1L , 3L , 6L , 1L , 4L , 1L , 311L , 60L , 2L , 1L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_jurisdictionStateOrProvinceName); }))) {
            mixin(enumMixinStr_OBJ_jurisdictionStateOrProvinceName);
        }
    }




    static if(!is(typeof(SN_jurisdictionCountryName))) {
        private enum enumMixinStr_SN_jurisdictionCountryName = `enum SN_jurisdictionCountryName = "jurisdictionC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_jurisdictionCountryName); }))) {
            mixin(enumMixinStr_SN_jurisdictionCountryName);
        }
    }




    static if(!is(typeof(LN_jurisdictionCountryName))) {
        private enum enumMixinStr_LN_jurisdictionCountryName = `enum LN_jurisdictionCountryName = "jurisdictionCountryName";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_jurisdictionCountryName); }))) {
            mixin(enumMixinStr_LN_jurisdictionCountryName);
        }
    }




    static if(!is(typeof(NID_jurisdictionCountryName))) {
        private enum enumMixinStr_NID_jurisdictionCountryName = `enum NID_jurisdictionCountryName = 957;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_jurisdictionCountryName); }))) {
            mixin(enumMixinStr_NID_jurisdictionCountryName);
        }
    }




    static if(!is(typeof(OBJ_jurisdictionCountryName))) {
        private enum enumMixinStr_OBJ_jurisdictionCountryName = `enum OBJ_jurisdictionCountryName = 1L , 3L , 6L , 1L , 4L , 1L , 311L , 60L , 2L , 1L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_jurisdictionCountryName); }))) {
            mixin(enumMixinStr_OBJ_jurisdictionCountryName);
        }
    }




    static if(!is(typeof(SN_id_scrypt))) {
        private enum enumMixinStr_SN_id_scrypt = `enum SN_id_scrypt = "id-scrypt";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_scrypt); }))) {
            mixin(enumMixinStr_SN_id_scrypt);
        }
    }




    static if(!is(typeof(LN_id_scrypt))) {
        private enum enumMixinStr_LN_id_scrypt = `enum LN_id_scrypt = "scrypt";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_scrypt); }))) {
            mixin(enumMixinStr_LN_id_scrypt);
        }
    }




    static if(!is(typeof(NID_id_scrypt))) {
        private enum enumMixinStr_NID_id_scrypt = `enum NID_id_scrypt = 973;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_scrypt); }))) {
            mixin(enumMixinStr_NID_id_scrypt);
        }
    }




    static if(!is(typeof(OBJ_id_scrypt))) {
        private enum enumMixinStr_OBJ_id_scrypt = `enum OBJ_id_scrypt = 1L , 3L , 6L , 1L , 4L , 1L , 11591L , 4L , 11L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_scrypt); }))) {
            mixin(enumMixinStr_OBJ_id_scrypt);
        }
    }




    static if(!is(typeof(SN_tls1_prf))) {
        private enum enumMixinStr_SN_tls1_prf = `enum SN_tls1_prf = "TLS1-PRF";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_tls1_prf); }))) {
            mixin(enumMixinStr_SN_tls1_prf);
        }
    }




    static if(!is(typeof(LN_tls1_prf))) {
        private enum enumMixinStr_LN_tls1_prf = `enum LN_tls1_prf = "tls1-prf";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_tls1_prf); }))) {
            mixin(enumMixinStr_LN_tls1_prf);
        }
    }




    static if(!is(typeof(NID_tls1_prf))) {
        private enum enumMixinStr_NID_tls1_prf = `enum NID_tls1_prf = 1021;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_tls1_prf); }))) {
            mixin(enumMixinStr_NID_tls1_prf);
        }
    }




    static if(!is(typeof(SN_hkdf))) {
        private enum enumMixinStr_SN_hkdf = `enum SN_hkdf = "HKDF";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_hkdf); }))) {
            mixin(enumMixinStr_SN_hkdf);
        }
    }




    static if(!is(typeof(LN_hkdf))) {
        private enum enumMixinStr_LN_hkdf = `enum LN_hkdf = "hkdf";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_hkdf); }))) {
            mixin(enumMixinStr_LN_hkdf);
        }
    }




    static if(!is(typeof(NID_hkdf))) {
        private enum enumMixinStr_NID_hkdf = `enum NID_hkdf = 1036;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_hkdf); }))) {
            mixin(enumMixinStr_NID_hkdf);
        }
    }




    static if(!is(typeof(SN_id_pkinit))) {
        private enum enumMixinStr_SN_id_pkinit = `enum SN_id_pkinit = "id-pkinit";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_pkinit); }))) {
            mixin(enumMixinStr_SN_id_pkinit);
        }
    }




    static if(!is(typeof(NID_id_pkinit))) {
        private enum enumMixinStr_NID_id_pkinit = `enum NID_id_pkinit = 1031;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_pkinit); }))) {
            mixin(enumMixinStr_NID_id_pkinit);
        }
    }




    static if(!is(typeof(OBJ_id_pkinit))) {
        private enum enumMixinStr_OBJ_id_pkinit = `enum OBJ_id_pkinit = 1L , 3L , 6L , 1L , 5L , 2L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_pkinit); }))) {
            mixin(enumMixinStr_OBJ_id_pkinit);
        }
    }




    static if(!is(typeof(SN_pkInitClientAuth))) {
        private enum enumMixinStr_SN_pkInitClientAuth = `enum SN_pkInitClientAuth = "pkInitClientAuth";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_pkInitClientAuth); }))) {
            mixin(enumMixinStr_SN_pkInitClientAuth);
        }
    }




    static if(!is(typeof(LN_pkInitClientAuth))) {
        private enum enumMixinStr_LN_pkInitClientAuth = `enum LN_pkInitClientAuth = "PKINIT Client Auth";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pkInitClientAuth); }))) {
            mixin(enumMixinStr_LN_pkInitClientAuth);
        }
    }




    static if(!is(typeof(NID_pkInitClientAuth))) {
        private enum enumMixinStr_NID_pkInitClientAuth = `enum NID_pkInitClientAuth = 1032;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pkInitClientAuth); }))) {
            mixin(enumMixinStr_NID_pkInitClientAuth);
        }
    }




    static if(!is(typeof(OBJ_pkInitClientAuth))) {
        private enum enumMixinStr_OBJ_pkInitClientAuth = `enum OBJ_pkInitClientAuth = 1L , 3L , 6L , 1L , 5L , 2L , 3L , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pkInitClientAuth); }))) {
            mixin(enumMixinStr_OBJ_pkInitClientAuth);
        }
    }




    static if(!is(typeof(SN_pkInitKDC))) {
        private enum enumMixinStr_SN_pkInitKDC = `enum SN_pkInitKDC = "pkInitKDC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_pkInitKDC); }))) {
            mixin(enumMixinStr_SN_pkInitKDC);
        }
    }




    static if(!is(typeof(LN_pkInitKDC))) {
        private enum enumMixinStr_LN_pkInitKDC = `enum LN_pkInitKDC = "Signing KDC Response";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pkInitKDC); }))) {
            mixin(enumMixinStr_LN_pkInitKDC);
        }
    }




    static if(!is(typeof(NID_pkInitKDC))) {
        private enum enumMixinStr_NID_pkInitKDC = `enum NID_pkInitKDC = 1033;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pkInitKDC); }))) {
            mixin(enumMixinStr_NID_pkInitKDC);
        }
    }




    static if(!is(typeof(OBJ_pkInitKDC))) {
        private enum enumMixinStr_OBJ_pkInitKDC = `enum OBJ_pkInitKDC = 1L , 3L , 6L , 1L , 5L , 2L , 3L , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pkInitKDC); }))) {
            mixin(enumMixinStr_OBJ_pkInitKDC);
        }
    }




    static if(!is(typeof(SN_X25519))) {
        private enum enumMixinStr_SN_X25519 = `enum SN_X25519 = "X25519";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X25519); }))) {
            mixin(enumMixinStr_SN_X25519);
        }
    }




    static if(!is(typeof(NID_X25519))) {
        private enum enumMixinStr_NID_X25519 = `enum NID_X25519 = 1034;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X25519); }))) {
            mixin(enumMixinStr_NID_X25519);
        }
    }




    static if(!is(typeof(OBJ_X25519))) {
        private enum enumMixinStr_OBJ_X25519 = `enum OBJ_X25519 = 1L , 3L , 101L , 110L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X25519); }))) {
            mixin(enumMixinStr_OBJ_X25519);
        }
    }




    static if(!is(typeof(SN_X448))) {
        private enum enumMixinStr_SN_X448 = `enum SN_X448 = "X448";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X448); }))) {
            mixin(enumMixinStr_SN_X448);
        }
    }




    static if(!is(typeof(NID_X448))) {
        private enum enumMixinStr_NID_X448 = `enum NID_X448 = 1035;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X448); }))) {
            mixin(enumMixinStr_NID_X448);
        }
    }




    static if(!is(typeof(OBJ_X448))) {
        private enum enumMixinStr_OBJ_X448 = `enum OBJ_X448 = 1L , 3L , 101L , 111L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X448); }))) {
            mixin(enumMixinStr_OBJ_X448);
        }
    }




    static if(!is(typeof(SN_ED25519))) {
        private enum enumMixinStr_SN_ED25519 = `enum SN_ED25519 = "ED25519";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ED25519); }))) {
            mixin(enumMixinStr_SN_ED25519);
        }
    }




    static if(!is(typeof(NID_ED25519))) {
        private enum enumMixinStr_NID_ED25519 = `enum NID_ED25519 = 1087;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ED25519); }))) {
            mixin(enumMixinStr_NID_ED25519);
        }
    }




    static if(!is(typeof(OBJ_ED25519))) {
        private enum enumMixinStr_OBJ_ED25519 = `enum OBJ_ED25519 = 1L , 3L , 101L , 112L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ED25519); }))) {
            mixin(enumMixinStr_OBJ_ED25519);
        }
    }




    static if(!is(typeof(SN_ED448))) {
        private enum enumMixinStr_SN_ED448 = `enum SN_ED448 = "ED448";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ED448); }))) {
            mixin(enumMixinStr_SN_ED448);
        }
    }




    static if(!is(typeof(NID_ED448))) {
        private enum enumMixinStr_NID_ED448 = `enum NID_ED448 = 1088;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ED448); }))) {
            mixin(enumMixinStr_NID_ED448);
        }
    }




    static if(!is(typeof(OBJ_ED448))) {
        private enum enumMixinStr_OBJ_ED448 = `enum OBJ_ED448 = 1L , 3L , 101L , 113L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ED448); }))) {
            mixin(enumMixinStr_OBJ_ED448);
        }
    }




    static if(!is(typeof(SN_kx_rsa))) {
        private enum enumMixinStr_SN_kx_rsa = `enum SN_kx_rsa = "KxRSA";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_kx_rsa); }))) {
            mixin(enumMixinStr_SN_kx_rsa);
        }
    }




    static if(!is(typeof(LN_kx_rsa))) {
        private enum enumMixinStr_LN_kx_rsa = `enum LN_kx_rsa = "kx-rsa";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_kx_rsa); }))) {
            mixin(enumMixinStr_LN_kx_rsa);
        }
    }




    static if(!is(typeof(NID_kx_rsa))) {
        private enum enumMixinStr_NID_kx_rsa = `enum NID_kx_rsa = 1037;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_kx_rsa); }))) {
            mixin(enumMixinStr_NID_kx_rsa);
        }
    }




    static if(!is(typeof(SN_kx_ecdhe))) {
        private enum enumMixinStr_SN_kx_ecdhe = `enum SN_kx_ecdhe = "KxECDHE";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_kx_ecdhe); }))) {
            mixin(enumMixinStr_SN_kx_ecdhe);
        }
    }




    static if(!is(typeof(LN_kx_ecdhe))) {
        private enum enumMixinStr_LN_kx_ecdhe = `enum LN_kx_ecdhe = "kx-ecdhe";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_kx_ecdhe); }))) {
            mixin(enumMixinStr_LN_kx_ecdhe);
        }
    }




    static if(!is(typeof(NID_kx_ecdhe))) {
        private enum enumMixinStr_NID_kx_ecdhe = `enum NID_kx_ecdhe = 1038;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_kx_ecdhe); }))) {
            mixin(enumMixinStr_NID_kx_ecdhe);
        }
    }




    static if(!is(typeof(SN_kx_dhe))) {
        private enum enumMixinStr_SN_kx_dhe = `enum SN_kx_dhe = "KxDHE";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_kx_dhe); }))) {
            mixin(enumMixinStr_SN_kx_dhe);
        }
    }




    static if(!is(typeof(LN_kx_dhe))) {
        private enum enumMixinStr_LN_kx_dhe = `enum LN_kx_dhe = "kx-dhe";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_kx_dhe); }))) {
            mixin(enumMixinStr_LN_kx_dhe);
        }
    }




    static if(!is(typeof(NID_kx_dhe))) {
        private enum enumMixinStr_NID_kx_dhe = `enum NID_kx_dhe = 1039;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_kx_dhe); }))) {
            mixin(enumMixinStr_NID_kx_dhe);
        }
    }




    static if(!is(typeof(SN_kx_ecdhe_psk))) {
        private enum enumMixinStr_SN_kx_ecdhe_psk = `enum SN_kx_ecdhe_psk = "KxECDHE-PSK";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_kx_ecdhe_psk); }))) {
            mixin(enumMixinStr_SN_kx_ecdhe_psk);
        }
    }




    static if(!is(typeof(LN_kx_ecdhe_psk))) {
        private enum enumMixinStr_LN_kx_ecdhe_psk = `enum LN_kx_ecdhe_psk = "kx-ecdhe-psk";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_kx_ecdhe_psk); }))) {
            mixin(enumMixinStr_LN_kx_ecdhe_psk);
        }
    }




    static if(!is(typeof(NID_kx_ecdhe_psk))) {
        private enum enumMixinStr_NID_kx_ecdhe_psk = `enum NID_kx_ecdhe_psk = 1040;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_kx_ecdhe_psk); }))) {
            mixin(enumMixinStr_NID_kx_ecdhe_psk);
        }
    }




    static if(!is(typeof(SN_kx_dhe_psk))) {
        private enum enumMixinStr_SN_kx_dhe_psk = `enum SN_kx_dhe_psk = "KxDHE-PSK";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_kx_dhe_psk); }))) {
            mixin(enumMixinStr_SN_kx_dhe_psk);
        }
    }




    static if(!is(typeof(LN_kx_dhe_psk))) {
        private enum enumMixinStr_LN_kx_dhe_psk = `enum LN_kx_dhe_psk = "kx-dhe-psk";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_kx_dhe_psk); }))) {
            mixin(enumMixinStr_LN_kx_dhe_psk);
        }
    }




    static if(!is(typeof(NID_kx_dhe_psk))) {
        private enum enumMixinStr_NID_kx_dhe_psk = `enum NID_kx_dhe_psk = 1041;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_kx_dhe_psk); }))) {
            mixin(enumMixinStr_NID_kx_dhe_psk);
        }
    }




    static if(!is(typeof(SN_kx_rsa_psk))) {
        private enum enumMixinStr_SN_kx_rsa_psk = `enum SN_kx_rsa_psk = "KxRSA_PSK";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_kx_rsa_psk); }))) {
            mixin(enumMixinStr_SN_kx_rsa_psk);
        }
    }




    static if(!is(typeof(LN_kx_rsa_psk))) {
        private enum enumMixinStr_LN_kx_rsa_psk = `enum LN_kx_rsa_psk = "kx-rsa-psk";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_kx_rsa_psk); }))) {
            mixin(enumMixinStr_LN_kx_rsa_psk);
        }
    }




    static if(!is(typeof(NID_kx_rsa_psk))) {
        private enum enumMixinStr_NID_kx_rsa_psk = `enum NID_kx_rsa_psk = 1042;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_kx_rsa_psk); }))) {
            mixin(enumMixinStr_NID_kx_rsa_psk);
        }
    }




    static if(!is(typeof(SN_kx_psk))) {
        private enum enumMixinStr_SN_kx_psk = `enum SN_kx_psk = "KxPSK";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_kx_psk); }))) {
            mixin(enumMixinStr_SN_kx_psk);
        }
    }




    static if(!is(typeof(LN_kx_psk))) {
        private enum enumMixinStr_LN_kx_psk = `enum LN_kx_psk = "kx-psk";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_kx_psk); }))) {
            mixin(enumMixinStr_LN_kx_psk);
        }
    }




    static if(!is(typeof(NID_kx_psk))) {
        private enum enumMixinStr_NID_kx_psk = `enum NID_kx_psk = 1043;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_kx_psk); }))) {
            mixin(enumMixinStr_NID_kx_psk);
        }
    }




    static if(!is(typeof(SN_kx_srp))) {
        private enum enumMixinStr_SN_kx_srp = `enum SN_kx_srp = "KxSRP";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_kx_srp); }))) {
            mixin(enumMixinStr_SN_kx_srp);
        }
    }




    static if(!is(typeof(LN_kx_srp))) {
        private enum enumMixinStr_LN_kx_srp = `enum LN_kx_srp = "kx-srp";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_kx_srp); }))) {
            mixin(enumMixinStr_LN_kx_srp);
        }
    }




    static if(!is(typeof(NID_kx_srp))) {
        private enum enumMixinStr_NID_kx_srp = `enum NID_kx_srp = 1044;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_kx_srp); }))) {
            mixin(enumMixinStr_NID_kx_srp);
        }
    }




    static if(!is(typeof(SN_kx_gost))) {
        private enum enumMixinStr_SN_kx_gost = `enum SN_kx_gost = "KxGOST";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_kx_gost); }))) {
            mixin(enumMixinStr_SN_kx_gost);
        }
    }




    static if(!is(typeof(LN_kx_gost))) {
        private enum enumMixinStr_LN_kx_gost = `enum LN_kx_gost = "kx-gost";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_kx_gost); }))) {
            mixin(enumMixinStr_LN_kx_gost);
        }
    }




    static if(!is(typeof(NID_kx_gost))) {
        private enum enumMixinStr_NID_kx_gost = `enum NID_kx_gost = 1045;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_kx_gost); }))) {
            mixin(enumMixinStr_NID_kx_gost);
        }
    }




    static if(!is(typeof(SN_kx_any))) {
        private enum enumMixinStr_SN_kx_any = `enum SN_kx_any = "KxANY";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_kx_any); }))) {
            mixin(enumMixinStr_SN_kx_any);
        }
    }




    static if(!is(typeof(LN_kx_any))) {
        private enum enumMixinStr_LN_kx_any = `enum LN_kx_any = "kx-any";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_kx_any); }))) {
            mixin(enumMixinStr_LN_kx_any);
        }
    }




    static if(!is(typeof(NID_kx_any))) {
        private enum enumMixinStr_NID_kx_any = `enum NID_kx_any = 1063;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_kx_any); }))) {
            mixin(enumMixinStr_NID_kx_any);
        }
    }




    static if(!is(typeof(SN_auth_rsa))) {
        private enum enumMixinStr_SN_auth_rsa = `enum SN_auth_rsa = "AuthRSA";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_auth_rsa); }))) {
            mixin(enumMixinStr_SN_auth_rsa);
        }
    }




    static if(!is(typeof(LN_auth_rsa))) {
        private enum enumMixinStr_LN_auth_rsa = `enum LN_auth_rsa = "auth-rsa";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_auth_rsa); }))) {
            mixin(enumMixinStr_LN_auth_rsa);
        }
    }




    static if(!is(typeof(NID_auth_rsa))) {
        private enum enumMixinStr_NID_auth_rsa = `enum NID_auth_rsa = 1046;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_auth_rsa); }))) {
            mixin(enumMixinStr_NID_auth_rsa);
        }
    }




    static if(!is(typeof(SN_auth_ecdsa))) {
        private enum enumMixinStr_SN_auth_ecdsa = `enum SN_auth_ecdsa = "AuthECDSA";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_auth_ecdsa); }))) {
            mixin(enumMixinStr_SN_auth_ecdsa);
        }
    }




    static if(!is(typeof(LN_auth_ecdsa))) {
        private enum enumMixinStr_LN_auth_ecdsa = `enum LN_auth_ecdsa = "auth-ecdsa";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_auth_ecdsa); }))) {
            mixin(enumMixinStr_LN_auth_ecdsa);
        }
    }




    static if(!is(typeof(NID_auth_ecdsa))) {
        private enum enumMixinStr_NID_auth_ecdsa = `enum NID_auth_ecdsa = 1047;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_auth_ecdsa); }))) {
            mixin(enumMixinStr_NID_auth_ecdsa);
        }
    }




    static if(!is(typeof(SN_auth_psk))) {
        private enum enumMixinStr_SN_auth_psk = `enum SN_auth_psk = "AuthPSK";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_auth_psk); }))) {
            mixin(enumMixinStr_SN_auth_psk);
        }
    }




    static if(!is(typeof(LN_auth_psk))) {
        private enum enumMixinStr_LN_auth_psk = `enum LN_auth_psk = "auth-psk";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_auth_psk); }))) {
            mixin(enumMixinStr_LN_auth_psk);
        }
    }




    static if(!is(typeof(NID_auth_psk))) {
        private enum enumMixinStr_NID_auth_psk = `enum NID_auth_psk = 1048;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_auth_psk); }))) {
            mixin(enumMixinStr_NID_auth_psk);
        }
    }




    static if(!is(typeof(SN_auth_dss))) {
        private enum enumMixinStr_SN_auth_dss = `enum SN_auth_dss = "AuthDSS";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_auth_dss); }))) {
            mixin(enumMixinStr_SN_auth_dss);
        }
    }




    static if(!is(typeof(LN_auth_dss))) {
        private enum enumMixinStr_LN_auth_dss = `enum LN_auth_dss = "auth-dss";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_auth_dss); }))) {
            mixin(enumMixinStr_LN_auth_dss);
        }
    }




    static if(!is(typeof(NID_auth_dss))) {
        private enum enumMixinStr_NID_auth_dss = `enum NID_auth_dss = 1049;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_auth_dss); }))) {
            mixin(enumMixinStr_NID_auth_dss);
        }
    }




    static if(!is(typeof(SN_auth_gost01))) {
        private enum enumMixinStr_SN_auth_gost01 = `enum SN_auth_gost01 = "AuthGOST01";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_auth_gost01); }))) {
            mixin(enumMixinStr_SN_auth_gost01);
        }
    }




    static if(!is(typeof(LN_auth_gost01))) {
        private enum enumMixinStr_LN_auth_gost01 = `enum LN_auth_gost01 = "auth-gost01";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_auth_gost01); }))) {
            mixin(enumMixinStr_LN_auth_gost01);
        }
    }




    static if(!is(typeof(NID_auth_gost01))) {
        private enum enumMixinStr_NID_auth_gost01 = `enum NID_auth_gost01 = 1050;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_auth_gost01); }))) {
            mixin(enumMixinStr_NID_auth_gost01);
        }
    }




    static if(!is(typeof(SN_auth_gost12))) {
        private enum enumMixinStr_SN_auth_gost12 = `enum SN_auth_gost12 = "AuthGOST12";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_auth_gost12); }))) {
            mixin(enumMixinStr_SN_auth_gost12);
        }
    }




    static if(!is(typeof(LN_auth_gost12))) {
        private enum enumMixinStr_LN_auth_gost12 = `enum LN_auth_gost12 = "auth-gost12";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_auth_gost12); }))) {
            mixin(enumMixinStr_LN_auth_gost12);
        }
    }




    static if(!is(typeof(NID_auth_gost12))) {
        private enum enumMixinStr_NID_auth_gost12 = `enum NID_auth_gost12 = 1051;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_auth_gost12); }))) {
            mixin(enumMixinStr_NID_auth_gost12);
        }
    }




    static if(!is(typeof(SN_auth_srp))) {
        private enum enumMixinStr_SN_auth_srp = `enum SN_auth_srp = "AuthSRP";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_auth_srp); }))) {
            mixin(enumMixinStr_SN_auth_srp);
        }
    }




    static if(!is(typeof(LN_auth_srp))) {
        private enum enumMixinStr_LN_auth_srp = `enum LN_auth_srp = "auth-srp";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_auth_srp); }))) {
            mixin(enumMixinStr_LN_auth_srp);
        }
    }




    static if(!is(typeof(NID_auth_srp))) {
        private enum enumMixinStr_NID_auth_srp = `enum NID_auth_srp = 1052;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_auth_srp); }))) {
            mixin(enumMixinStr_NID_auth_srp);
        }
    }




    static if(!is(typeof(SN_auth_null))) {
        private enum enumMixinStr_SN_auth_null = `enum SN_auth_null = "AuthNULL";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_auth_null); }))) {
            mixin(enumMixinStr_SN_auth_null);
        }
    }




    static if(!is(typeof(LN_auth_null))) {
        private enum enumMixinStr_LN_auth_null = `enum LN_auth_null = "auth-null";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_auth_null); }))) {
            mixin(enumMixinStr_LN_auth_null);
        }
    }




    static if(!is(typeof(NID_auth_null))) {
        private enum enumMixinStr_NID_auth_null = `enum NID_auth_null = 1053;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_auth_null); }))) {
            mixin(enumMixinStr_NID_auth_null);
        }
    }




    static if(!is(typeof(SN_auth_any))) {
        private enum enumMixinStr_SN_auth_any = `enum SN_auth_any = "AuthANY";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_auth_any); }))) {
            mixin(enumMixinStr_SN_auth_any);
        }
    }




    static if(!is(typeof(LN_auth_any))) {
        private enum enumMixinStr_LN_auth_any = `enum LN_auth_any = "auth-any";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_auth_any); }))) {
            mixin(enumMixinStr_LN_auth_any);
        }
    }




    static if(!is(typeof(NID_auth_any))) {
        private enum enumMixinStr_NID_auth_any = `enum NID_auth_any = 1064;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_auth_any); }))) {
            mixin(enumMixinStr_NID_auth_any);
        }
    }




    static if(!is(typeof(SN_poly1305))) {
        private enum enumMixinStr_SN_poly1305 = `enum SN_poly1305 = "Poly1305";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_poly1305); }))) {
            mixin(enumMixinStr_SN_poly1305);
        }
    }




    static if(!is(typeof(LN_poly1305))) {
        private enum enumMixinStr_LN_poly1305 = `enum LN_poly1305 = "poly1305";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_poly1305); }))) {
            mixin(enumMixinStr_LN_poly1305);
        }
    }




    static if(!is(typeof(NID_poly1305))) {
        private enum enumMixinStr_NID_poly1305 = `enum NID_poly1305 = 1061;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_poly1305); }))) {
            mixin(enumMixinStr_NID_poly1305);
        }
    }




    static if(!is(typeof(SN_siphash))) {
        private enum enumMixinStr_SN_siphash = `enum SN_siphash = "SipHash";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_siphash); }))) {
            mixin(enumMixinStr_SN_siphash);
        }
    }




    static if(!is(typeof(LN_siphash))) {
        private enum enumMixinStr_LN_siphash = `enum LN_siphash = "siphash";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_siphash); }))) {
            mixin(enumMixinStr_LN_siphash);
        }
    }




    static if(!is(typeof(NID_siphash))) {
        private enum enumMixinStr_NID_siphash = `enum NID_siphash = 1062;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_siphash); }))) {
            mixin(enumMixinStr_NID_siphash);
        }
    }




    static if(!is(typeof(SN_ffdhe2048))) {
        private enum enumMixinStr_SN_ffdhe2048 = `enum SN_ffdhe2048 = "ffdhe2048";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ffdhe2048); }))) {
            mixin(enumMixinStr_SN_ffdhe2048);
        }
    }




    static if(!is(typeof(NID_ffdhe2048))) {
        private enum enumMixinStr_NID_ffdhe2048 = `enum NID_ffdhe2048 = 1126;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ffdhe2048); }))) {
            mixin(enumMixinStr_NID_ffdhe2048);
        }
    }




    static if(!is(typeof(SN_ffdhe3072))) {
        private enum enumMixinStr_SN_ffdhe3072 = `enum SN_ffdhe3072 = "ffdhe3072";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ffdhe3072); }))) {
            mixin(enumMixinStr_SN_ffdhe3072);
        }
    }




    static if(!is(typeof(NID_ffdhe3072))) {
        private enum enumMixinStr_NID_ffdhe3072 = `enum NID_ffdhe3072 = 1127;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ffdhe3072); }))) {
            mixin(enumMixinStr_NID_ffdhe3072);
        }
    }




    static if(!is(typeof(SN_ffdhe4096))) {
        private enum enumMixinStr_SN_ffdhe4096 = `enum SN_ffdhe4096 = "ffdhe4096";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ffdhe4096); }))) {
            mixin(enumMixinStr_SN_ffdhe4096);
        }
    }




    static if(!is(typeof(NID_ffdhe4096))) {
        private enum enumMixinStr_NID_ffdhe4096 = `enum NID_ffdhe4096 = 1128;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ffdhe4096); }))) {
            mixin(enumMixinStr_NID_ffdhe4096);
        }
    }




    static if(!is(typeof(SN_ffdhe6144))) {
        private enum enumMixinStr_SN_ffdhe6144 = `enum SN_ffdhe6144 = "ffdhe6144";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ffdhe6144); }))) {
            mixin(enumMixinStr_SN_ffdhe6144);
        }
    }




    static if(!is(typeof(NID_ffdhe6144))) {
        private enum enumMixinStr_NID_ffdhe6144 = `enum NID_ffdhe6144 = 1129;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ffdhe6144); }))) {
            mixin(enumMixinStr_NID_ffdhe6144);
        }
    }




    static if(!is(typeof(SN_ffdhe8192))) {
        private enum enumMixinStr_SN_ffdhe8192 = `enum SN_ffdhe8192 = "ffdhe8192";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ffdhe8192); }))) {
            mixin(enumMixinStr_SN_ffdhe8192);
        }
    }




    static if(!is(typeof(NID_ffdhe8192))) {
        private enum enumMixinStr_NID_ffdhe8192 = `enum NID_ffdhe8192 = 1130;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ffdhe8192); }))) {
            mixin(enumMixinStr_NID_ffdhe8192);
        }
    }




    static if(!is(typeof(SN_ISO_UA))) {
        private enum enumMixinStr_SN_ISO_UA = `enum SN_ISO_UA = "ISO-UA";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ISO_UA); }))) {
            mixin(enumMixinStr_SN_ISO_UA);
        }
    }




    static if(!is(typeof(NID_ISO_UA))) {
        private enum enumMixinStr_NID_ISO_UA = `enum NID_ISO_UA = 1150;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ISO_UA); }))) {
            mixin(enumMixinStr_NID_ISO_UA);
        }
    }




    static if(!is(typeof(OBJ_ISO_UA))) {
        private enum enumMixinStr_OBJ_ISO_UA = `enum OBJ_ISO_UA = OBJ_member_body , 804L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ISO_UA); }))) {
            mixin(enumMixinStr_OBJ_ISO_UA);
        }
    }




    static if(!is(typeof(SN_ua_pki))) {
        private enum enumMixinStr_SN_ua_pki = `enum SN_ua_pki = "ua-pki";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ua_pki); }))) {
            mixin(enumMixinStr_SN_ua_pki);
        }
    }




    static if(!is(typeof(NID_ua_pki))) {
        private enum enumMixinStr_NID_ua_pki = `enum NID_ua_pki = 1151;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ua_pki); }))) {
            mixin(enumMixinStr_NID_ua_pki);
        }
    }




    static if(!is(typeof(OBJ_ua_pki))) {
        private enum enumMixinStr_OBJ_ua_pki = `enum OBJ_ua_pki = OBJ_member_body , 804L , 2L , 1L , 1L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ua_pki); }))) {
            mixin(enumMixinStr_OBJ_ua_pki);
        }
    }




    static if(!is(typeof(SN_dstu28147))) {
        private enum enumMixinStr_SN_dstu28147 = `enum SN_dstu28147 = "dstu28147";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dstu28147); }))) {
            mixin(enumMixinStr_SN_dstu28147);
        }
    }




    static if(!is(typeof(LN_dstu28147))) {
        private enum enumMixinStr_LN_dstu28147 = `enum LN_dstu28147 = "DSTU Gost 28147-2009";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_dstu28147); }))) {
            mixin(enumMixinStr_LN_dstu28147);
        }
    }




    static if(!is(typeof(NID_dstu28147))) {
        private enum enumMixinStr_NID_dstu28147 = `enum NID_dstu28147 = 1152;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dstu28147); }))) {
            mixin(enumMixinStr_NID_dstu28147);
        }
    }




    static if(!is(typeof(OBJ_dstu28147))) {
        private enum enumMixinStr_OBJ_dstu28147 = `enum OBJ_dstu28147 = OBJ_member_body , 804L , 2L , 1L , 1L , 1L , 1L , 1L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dstu28147); }))) {
            mixin(enumMixinStr_OBJ_dstu28147);
        }
    }




    static if(!is(typeof(SN_dstu28147_ofb))) {
        private enum enumMixinStr_SN_dstu28147_ofb = `enum SN_dstu28147_ofb = "dstu28147-ofb";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dstu28147_ofb); }))) {
            mixin(enumMixinStr_SN_dstu28147_ofb);
        }
    }




    static if(!is(typeof(LN_dstu28147_ofb))) {
        private enum enumMixinStr_LN_dstu28147_ofb = `enum LN_dstu28147_ofb = "DSTU Gost 28147-2009 OFB mode";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_dstu28147_ofb); }))) {
            mixin(enumMixinStr_LN_dstu28147_ofb);
        }
    }




    static if(!is(typeof(NID_dstu28147_ofb))) {
        private enum enumMixinStr_NID_dstu28147_ofb = `enum NID_dstu28147_ofb = 1153;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dstu28147_ofb); }))) {
            mixin(enumMixinStr_NID_dstu28147_ofb);
        }
    }




    static if(!is(typeof(OBJ_dstu28147_ofb))) {
        private enum enumMixinStr_OBJ_dstu28147_ofb = `enum OBJ_dstu28147_ofb = OBJ_member_body , 804L , 2L , 1L , 1L , 1L , 1L , 1L , 1L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dstu28147_ofb); }))) {
            mixin(enumMixinStr_OBJ_dstu28147_ofb);
        }
    }




    static if(!is(typeof(SN_dstu28147_cfb))) {
        private enum enumMixinStr_SN_dstu28147_cfb = `enum SN_dstu28147_cfb = "dstu28147-cfb";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dstu28147_cfb); }))) {
            mixin(enumMixinStr_SN_dstu28147_cfb);
        }
    }




    static if(!is(typeof(LN_dstu28147_cfb))) {
        private enum enumMixinStr_LN_dstu28147_cfb = `enum LN_dstu28147_cfb = "DSTU Gost 28147-2009 CFB mode";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_dstu28147_cfb); }))) {
            mixin(enumMixinStr_LN_dstu28147_cfb);
        }
    }




    static if(!is(typeof(NID_dstu28147_cfb))) {
        private enum enumMixinStr_NID_dstu28147_cfb = `enum NID_dstu28147_cfb = 1154;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dstu28147_cfb); }))) {
            mixin(enumMixinStr_NID_dstu28147_cfb);
        }
    }




    static if(!is(typeof(OBJ_dstu28147_cfb))) {
        private enum enumMixinStr_OBJ_dstu28147_cfb = `enum OBJ_dstu28147_cfb = OBJ_member_body , 804L , 2L , 1L , 1L , 1L , 1L , 1L , 1L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dstu28147_cfb); }))) {
            mixin(enumMixinStr_OBJ_dstu28147_cfb);
        }
    }




    static if(!is(typeof(SN_dstu28147_wrap))) {
        private enum enumMixinStr_SN_dstu28147_wrap = `enum SN_dstu28147_wrap = "dstu28147-wrap";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dstu28147_wrap); }))) {
            mixin(enumMixinStr_SN_dstu28147_wrap);
        }
    }




    static if(!is(typeof(LN_dstu28147_wrap))) {
        private enum enumMixinStr_LN_dstu28147_wrap = `enum LN_dstu28147_wrap = "DSTU Gost 28147-2009 key wrap";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_dstu28147_wrap); }))) {
            mixin(enumMixinStr_LN_dstu28147_wrap);
        }
    }




    static if(!is(typeof(NID_dstu28147_wrap))) {
        private enum enumMixinStr_NID_dstu28147_wrap = `enum NID_dstu28147_wrap = 1155;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dstu28147_wrap); }))) {
            mixin(enumMixinStr_NID_dstu28147_wrap);
        }
    }




    static if(!is(typeof(OBJ_dstu28147_wrap))) {
        private enum enumMixinStr_OBJ_dstu28147_wrap = `enum OBJ_dstu28147_wrap = OBJ_member_body , 804L , 2L , 1L , 1L , 1L , 1L , 1L , 1L , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dstu28147_wrap); }))) {
            mixin(enumMixinStr_OBJ_dstu28147_wrap);
        }
    }




    static if(!is(typeof(SN_hmacWithDstu34311))) {
        private enum enumMixinStr_SN_hmacWithDstu34311 = `enum SN_hmacWithDstu34311 = "hmacWithDstu34311";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_hmacWithDstu34311); }))) {
            mixin(enumMixinStr_SN_hmacWithDstu34311);
        }
    }




    static if(!is(typeof(LN_hmacWithDstu34311))) {
        private enum enumMixinStr_LN_hmacWithDstu34311 = `enum LN_hmacWithDstu34311 = "HMAC DSTU Gost 34311-95";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_hmacWithDstu34311); }))) {
            mixin(enumMixinStr_LN_hmacWithDstu34311);
        }
    }




    static if(!is(typeof(NID_hmacWithDstu34311))) {
        private enum enumMixinStr_NID_hmacWithDstu34311 = `enum NID_hmacWithDstu34311 = 1156;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_hmacWithDstu34311); }))) {
            mixin(enumMixinStr_NID_hmacWithDstu34311);
        }
    }




    static if(!is(typeof(OBJ_hmacWithDstu34311))) {
        private enum enumMixinStr_OBJ_hmacWithDstu34311 = `enum OBJ_hmacWithDstu34311 = OBJ_member_body , 804L , 2L , 1L , 1L , 1L , 1L , 1L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_hmacWithDstu34311); }))) {
            mixin(enumMixinStr_OBJ_hmacWithDstu34311);
        }
    }




    static if(!is(typeof(SN_dstu34311))) {
        private enum enumMixinStr_SN_dstu34311 = `enum SN_dstu34311 = "dstu34311";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dstu34311); }))) {
            mixin(enumMixinStr_SN_dstu34311);
        }
    }




    static if(!is(typeof(LN_dstu34311))) {
        private enum enumMixinStr_LN_dstu34311 = `enum LN_dstu34311 = "DSTU Gost 34311-95";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_dstu34311); }))) {
            mixin(enumMixinStr_LN_dstu34311);
        }
    }




    static if(!is(typeof(NID_dstu34311))) {
        private enum enumMixinStr_NID_dstu34311 = `enum NID_dstu34311 = 1157;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dstu34311); }))) {
            mixin(enumMixinStr_NID_dstu34311);
        }
    }




    static if(!is(typeof(OBJ_dstu34311))) {
        private enum enumMixinStr_OBJ_dstu34311 = `enum OBJ_dstu34311 = OBJ_member_body , 804L , 2L , 1L , 1L , 1L , 1L , 2L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dstu34311); }))) {
            mixin(enumMixinStr_OBJ_dstu34311);
        }
    }




    static if(!is(typeof(SN_dstu4145le))) {
        private enum enumMixinStr_SN_dstu4145le = `enum SN_dstu4145le = "dstu4145le";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dstu4145le); }))) {
            mixin(enumMixinStr_SN_dstu4145le);
        }
    }




    static if(!is(typeof(LN_dstu4145le))) {
        private enum enumMixinStr_LN_dstu4145le = `enum LN_dstu4145le = "DSTU 4145-2002 little endian";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_dstu4145le); }))) {
            mixin(enumMixinStr_LN_dstu4145le);
        }
    }




    static if(!is(typeof(NID_dstu4145le))) {
        private enum enumMixinStr_NID_dstu4145le = `enum NID_dstu4145le = 1158;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dstu4145le); }))) {
            mixin(enumMixinStr_NID_dstu4145le);
        }
    }




    static if(!is(typeof(OBJ_dstu4145le))) {
        private enum enumMixinStr_OBJ_dstu4145le = `enum OBJ_dstu4145le = OBJ_member_body , 804L , 2L , 1L , 1L , 1L , 1L , 3L , 1L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dstu4145le); }))) {
            mixin(enumMixinStr_OBJ_dstu4145le);
        }
    }




    static if(!is(typeof(SN_dstu4145be))) {
        private enum enumMixinStr_SN_dstu4145be = `enum SN_dstu4145be = "dstu4145be";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dstu4145be); }))) {
            mixin(enumMixinStr_SN_dstu4145be);
        }
    }




    static if(!is(typeof(LN_dstu4145be))) {
        private enum enumMixinStr_LN_dstu4145be = `enum LN_dstu4145be = "DSTU 4145-2002 big endian";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_dstu4145be); }))) {
            mixin(enumMixinStr_LN_dstu4145be);
        }
    }




    static if(!is(typeof(NID_dstu4145be))) {
        private enum enumMixinStr_NID_dstu4145be = `enum NID_dstu4145be = 1159;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dstu4145be); }))) {
            mixin(enumMixinStr_NID_dstu4145be);
        }
    }




    static if(!is(typeof(OBJ_dstu4145be))) {
        private enum enumMixinStr_OBJ_dstu4145be = `enum OBJ_dstu4145be = OBJ_member_body , 804L , 2L , 1L , 1L , 1L , 1L , 3L , 1L , 1L , 1L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dstu4145be); }))) {
            mixin(enumMixinStr_OBJ_dstu4145be);
        }
    }




    static if(!is(typeof(SN_uacurve0))) {
        private enum enumMixinStr_SN_uacurve0 = `enum SN_uacurve0 = "uacurve0";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_uacurve0); }))) {
            mixin(enumMixinStr_SN_uacurve0);
        }
    }




    static if(!is(typeof(LN_uacurve0))) {
        private enum enumMixinStr_LN_uacurve0 = `enum LN_uacurve0 = "DSTU curve 0";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_uacurve0); }))) {
            mixin(enumMixinStr_LN_uacurve0);
        }
    }




    static if(!is(typeof(NID_uacurve0))) {
        private enum enumMixinStr_NID_uacurve0 = `enum NID_uacurve0 = 1160;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_uacurve0); }))) {
            mixin(enumMixinStr_NID_uacurve0);
        }
    }




    static if(!is(typeof(OBJ_uacurve0))) {
        private enum enumMixinStr_OBJ_uacurve0 = `enum OBJ_uacurve0 = OBJ_member_body , 804L , 2L , 1L , 1L , 1L , 1L , 3L , 1L , 1L , 2L , 0L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_uacurve0); }))) {
            mixin(enumMixinStr_OBJ_uacurve0);
        }
    }




    static if(!is(typeof(SN_uacurve1))) {
        private enum enumMixinStr_SN_uacurve1 = `enum SN_uacurve1 = "uacurve1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_uacurve1); }))) {
            mixin(enumMixinStr_SN_uacurve1);
        }
    }




    static if(!is(typeof(LN_uacurve1))) {
        private enum enumMixinStr_LN_uacurve1 = `enum LN_uacurve1 = "DSTU curve 1";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_uacurve1); }))) {
            mixin(enumMixinStr_LN_uacurve1);
        }
    }




    static if(!is(typeof(NID_uacurve1))) {
        private enum enumMixinStr_NID_uacurve1 = `enum NID_uacurve1 = 1161;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_uacurve1); }))) {
            mixin(enumMixinStr_NID_uacurve1);
        }
    }




    static if(!is(typeof(OBJ_uacurve1))) {
        private enum enumMixinStr_OBJ_uacurve1 = `enum OBJ_uacurve1 = OBJ_member_body , 804L , 2L , 1L , 1L , 1L , 1L , 3L , 1L , 1L , 2L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_uacurve1); }))) {
            mixin(enumMixinStr_OBJ_uacurve1);
        }
    }




    static if(!is(typeof(SN_uacurve2))) {
        private enum enumMixinStr_SN_uacurve2 = `enum SN_uacurve2 = "uacurve2";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_uacurve2); }))) {
            mixin(enumMixinStr_SN_uacurve2);
        }
    }




    static if(!is(typeof(LN_uacurve2))) {
        private enum enumMixinStr_LN_uacurve2 = `enum LN_uacurve2 = "DSTU curve 2";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_uacurve2); }))) {
            mixin(enumMixinStr_LN_uacurve2);
        }
    }




    static if(!is(typeof(NID_uacurve2))) {
        private enum enumMixinStr_NID_uacurve2 = `enum NID_uacurve2 = 1162;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_uacurve2); }))) {
            mixin(enumMixinStr_NID_uacurve2);
        }
    }




    static if(!is(typeof(OBJ_uacurve2))) {
        private enum enumMixinStr_OBJ_uacurve2 = `enum OBJ_uacurve2 = OBJ_member_body , 804L , 2L , 1L , 1L , 1L , 1L , 3L , 1L , 1L , 2L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_uacurve2); }))) {
            mixin(enumMixinStr_OBJ_uacurve2);
        }
    }




    static if(!is(typeof(SN_uacurve3))) {
        private enum enumMixinStr_SN_uacurve3 = `enum SN_uacurve3 = "uacurve3";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_uacurve3); }))) {
            mixin(enumMixinStr_SN_uacurve3);
        }
    }




    static if(!is(typeof(LN_uacurve3))) {
        private enum enumMixinStr_LN_uacurve3 = `enum LN_uacurve3 = "DSTU curve 3";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_uacurve3); }))) {
            mixin(enumMixinStr_LN_uacurve3);
        }
    }




    static if(!is(typeof(NID_uacurve3))) {
        private enum enumMixinStr_NID_uacurve3 = `enum NID_uacurve3 = 1163;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_uacurve3); }))) {
            mixin(enumMixinStr_NID_uacurve3);
        }
    }




    static if(!is(typeof(OBJ_uacurve3))) {
        private enum enumMixinStr_OBJ_uacurve3 = `enum OBJ_uacurve3 = OBJ_member_body , 804L , 2L , 1L , 1L , 1L , 1L , 3L , 1L , 1L , 2L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_uacurve3); }))) {
            mixin(enumMixinStr_OBJ_uacurve3);
        }
    }




    static if(!is(typeof(SN_uacurve4))) {
        private enum enumMixinStr_SN_uacurve4 = `enum SN_uacurve4 = "uacurve4";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_uacurve4); }))) {
            mixin(enumMixinStr_SN_uacurve4);
        }
    }




    static if(!is(typeof(LN_uacurve4))) {
        private enum enumMixinStr_LN_uacurve4 = `enum LN_uacurve4 = "DSTU curve 4";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_uacurve4); }))) {
            mixin(enumMixinStr_LN_uacurve4);
        }
    }




    static if(!is(typeof(NID_uacurve4))) {
        private enum enumMixinStr_NID_uacurve4 = `enum NID_uacurve4 = 1164;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_uacurve4); }))) {
            mixin(enumMixinStr_NID_uacurve4);
        }
    }




    static if(!is(typeof(OBJ_uacurve4))) {
        private enum enumMixinStr_OBJ_uacurve4 = `enum OBJ_uacurve4 = OBJ_member_body , 804L , 2L , 1L , 1L , 1L , 1L , 3L , 1L , 1L , 2L , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_uacurve4); }))) {
            mixin(enumMixinStr_OBJ_uacurve4);
        }
    }




    static if(!is(typeof(SN_uacurve5))) {
        private enum enumMixinStr_SN_uacurve5 = `enum SN_uacurve5 = "uacurve5";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_uacurve5); }))) {
            mixin(enumMixinStr_SN_uacurve5);
        }
    }




    static if(!is(typeof(LN_uacurve5))) {
        private enum enumMixinStr_LN_uacurve5 = `enum LN_uacurve5 = "DSTU curve 5";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_uacurve5); }))) {
            mixin(enumMixinStr_LN_uacurve5);
        }
    }




    static if(!is(typeof(NID_uacurve5))) {
        private enum enumMixinStr_NID_uacurve5 = `enum NID_uacurve5 = 1165;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_uacurve5); }))) {
            mixin(enumMixinStr_NID_uacurve5);
        }
    }




    static if(!is(typeof(OBJ_uacurve5))) {
        private enum enumMixinStr_OBJ_uacurve5 = `enum OBJ_uacurve5 = OBJ_member_body , 804L , 2L , 1L , 1L , 1L , 1L , 3L , 1L , 1L , 2L , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_uacurve5); }))) {
            mixin(enumMixinStr_OBJ_uacurve5);
        }
    }




    static if(!is(typeof(SN_uacurve6))) {
        private enum enumMixinStr_SN_uacurve6 = `enum SN_uacurve6 = "uacurve6";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_uacurve6); }))) {
            mixin(enumMixinStr_SN_uacurve6);
        }
    }




    static if(!is(typeof(LN_uacurve6))) {
        private enum enumMixinStr_LN_uacurve6 = `enum LN_uacurve6 = "DSTU curve 6";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_uacurve6); }))) {
            mixin(enumMixinStr_LN_uacurve6);
        }
    }




    static if(!is(typeof(NID_uacurve6))) {
        private enum enumMixinStr_NID_uacurve6 = `enum NID_uacurve6 = 1166;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_uacurve6); }))) {
            mixin(enumMixinStr_NID_uacurve6);
        }
    }




    static if(!is(typeof(OBJ_uacurve6))) {
        private enum enumMixinStr_OBJ_uacurve6 = `enum OBJ_uacurve6 = OBJ_member_body , 804L , 2L , 1L , 1L , 1L , 1L , 3L , 1L , 1L , 2L , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_uacurve6); }))) {
            mixin(enumMixinStr_OBJ_uacurve6);
        }
    }




    static if(!is(typeof(SN_uacurve7))) {
        private enum enumMixinStr_SN_uacurve7 = `enum SN_uacurve7 = "uacurve7";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_uacurve7); }))) {
            mixin(enumMixinStr_SN_uacurve7);
        }
    }




    static if(!is(typeof(LN_uacurve7))) {
        private enum enumMixinStr_LN_uacurve7 = `enum LN_uacurve7 = "DSTU curve 7";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_uacurve7); }))) {
            mixin(enumMixinStr_LN_uacurve7);
        }
    }




    static if(!is(typeof(NID_uacurve7))) {
        private enum enumMixinStr_NID_uacurve7 = `enum NID_uacurve7 = 1167;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_uacurve7); }))) {
            mixin(enumMixinStr_NID_uacurve7);
        }
    }




    static if(!is(typeof(OBJ_uacurve7))) {
        private enum enumMixinStr_OBJ_uacurve7 = `enum OBJ_uacurve7 = OBJ_member_body , 804L , 2L , 1L , 1L , 1L , 1L , 3L , 1L , 1L , 2L , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_uacurve7); }))) {
            mixin(enumMixinStr_OBJ_uacurve7);
        }
    }




    static if(!is(typeof(SN_uacurve8))) {
        private enum enumMixinStr_SN_uacurve8 = `enum SN_uacurve8 = "uacurve8";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_uacurve8); }))) {
            mixin(enumMixinStr_SN_uacurve8);
        }
    }




    static if(!is(typeof(LN_uacurve8))) {
        private enum enumMixinStr_LN_uacurve8 = `enum LN_uacurve8 = "DSTU curve 8";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_uacurve8); }))) {
            mixin(enumMixinStr_LN_uacurve8);
        }
    }




    static if(!is(typeof(NID_uacurve8))) {
        private enum enumMixinStr_NID_uacurve8 = `enum NID_uacurve8 = 1168;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_uacurve8); }))) {
            mixin(enumMixinStr_NID_uacurve8);
        }
    }




    static if(!is(typeof(OBJ_uacurve8))) {
        private enum enumMixinStr_OBJ_uacurve8 = `enum OBJ_uacurve8 = OBJ_member_body , 804L , 2L , 1L , 1L , 1L , 1L , 3L , 1L , 1L , 2L , 8L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_uacurve8); }))) {
            mixin(enumMixinStr_OBJ_uacurve8);
        }
    }




    static if(!is(typeof(SN_uacurve9))) {
        private enum enumMixinStr_SN_uacurve9 = `enum SN_uacurve9 = "uacurve9";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_uacurve9); }))) {
            mixin(enumMixinStr_SN_uacurve9);
        }
    }




    static if(!is(typeof(LN_uacurve9))) {
        private enum enumMixinStr_LN_uacurve9 = `enum LN_uacurve9 = "DSTU curve 9";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_uacurve9); }))) {
            mixin(enumMixinStr_LN_uacurve9);
        }
    }




    static if(!is(typeof(NID_uacurve9))) {
        private enum enumMixinStr_NID_uacurve9 = `enum NID_uacurve9 = 1169;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_uacurve9); }))) {
            mixin(enumMixinStr_NID_uacurve9);
        }
    }




    static if(!is(typeof(OBJ_uacurve9))) {
        private enum enumMixinStr_OBJ_uacurve9 = `enum OBJ_uacurve9 = OBJ_member_body , 804L , 2L , 1L , 1L , 1L , 1L , 3L , 1L , 1L , 2L , 9L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_uacurve9); }))) {
            mixin(enumMixinStr_OBJ_uacurve9);
        }
    }






    static if(!is(typeof(OBJ_dod))) {
        private enum enumMixinStr_OBJ_dod = `enum OBJ_dod = OBJ_org , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dod); }))) {
            mixin(enumMixinStr_OBJ_dod);
        }
    }




    static if(!is(typeof(NID_dod))) {
        private enum enumMixinStr_NID_dod = `enum NID_dod = 380;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dod); }))) {
            mixin(enumMixinStr_NID_dod);
        }
    }




    static if(!is(typeof(LN_dod))) {
        private enum enumMixinStr_LN_dod = `enum LN_dod = "dod";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_dod); }))) {
            mixin(enumMixinStr_LN_dod);
        }
    }




    static if(!is(typeof(SN_dod))) {
        private enum enumMixinStr_SN_dod = `enum SN_dod = "DOD";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dod); }))) {
            mixin(enumMixinStr_SN_dod);
        }
    }




    static if(!is(typeof(OBJ_NAME_TYPE_UNDEF))) {
        private enum enumMixinStr_OBJ_NAME_TYPE_UNDEF = `enum OBJ_NAME_TYPE_UNDEF = 0x00;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_NAME_TYPE_UNDEF); }))) {
            mixin(enumMixinStr_OBJ_NAME_TYPE_UNDEF);
        }
    }




    static if(!is(typeof(OBJ_NAME_TYPE_MD_METH))) {
        private enum enumMixinStr_OBJ_NAME_TYPE_MD_METH = `enum OBJ_NAME_TYPE_MD_METH = 0x01;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_NAME_TYPE_MD_METH); }))) {
            mixin(enumMixinStr_OBJ_NAME_TYPE_MD_METH);
        }
    }




    static if(!is(typeof(OBJ_NAME_TYPE_CIPHER_METH))) {
        private enum enumMixinStr_OBJ_NAME_TYPE_CIPHER_METH = `enum OBJ_NAME_TYPE_CIPHER_METH = 0x02;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_NAME_TYPE_CIPHER_METH); }))) {
            mixin(enumMixinStr_OBJ_NAME_TYPE_CIPHER_METH);
        }
    }




    static if(!is(typeof(OBJ_NAME_TYPE_PKEY_METH))) {
        private enum enumMixinStr_OBJ_NAME_TYPE_PKEY_METH = `enum OBJ_NAME_TYPE_PKEY_METH = 0x03;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_NAME_TYPE_PKEY_METH); }))) {
            mixin(enumMixinStr_OBJ_NAME_TYPE_PKEY_METH);
        }
    }




    static if(!is(typeof(OBJ_NAME_TYPE_COMP_METH))) {
        private enum enumMixinStr_OBJ_NAME_TYPE_COMP_METH = `enum OBJ_NAME_TYPE_COMP_METH = 0x04;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_NAME_TYPE_COMP_METH); }))) {
            mixin(enumMixinStr_OBJ_NAME_TYPE_COMP_METH);
        }
    }




    static if(!is(typeof(OBJ_NAME_TYPE_NUM))) {
        private enum enumMixinStr_OBJ_NAME_TYPE_NUM = `enum OBJ_NAME_TYPE_NUM = 0x05;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_NAME_TYPE_NUM); }))) {
            mixin(enumMixinStr_OBJ_NAME_TYPE_NUM);
        }
    }




    static if(!is(typeof(OBJ_NAME_ALIAS))) {
        private enum enumMixinStr_OBJ_NAME_ALIAS = `enum OBJ_NAME_ALIAS = 0x8000;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_NAME_ALIAS); }))) {
            mixin(enumMixinStr_OBJ_NAME_ALIAS);
        }
    }




    static if(!is(typeof(OBJ_BSEARCH_VALUE_ON_NOMATCH))) {
        private enum enumMixinStr_OBJ_BSEARCH_VALUE_ON_NOMATCH = `enum OBJ_BSEARCH_VALUE_ON_NOMATCH = 0x01;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_BSEARCH_VALUE_ON_NOMATCH); }))) {
            mixin(enumMixinStr_OBJ_BSEARCH_VALUE_ON_NOMATCH);
        }
    }




    static if(!is(typeof(OBJ_BSEARCH_FIRST_VALUE_ON_MATCH))) {
        private enum enumMixinStr_OBJ_BSEARCH_FIRST_VALUE_ON_MATCH = `enum OBJ_BSEARCH_FIRST_VALUE_ON_MATCH = 0x02;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_BSEARCH_FIRST_VALUE_ON_MATCH); }))) {
            mixin(enumMixinStr_OBJ_BSEARCH_FIRST_VALUE_ON_MATCH);
        }
    }




    static if(!is(typeof(OBJ_org))) {
        private enum enumMixinStr_OBJ_org = `enum OBJ_org = OBJ_iso , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_org); }))) {
            mixin(enumMixinStr_OBJ_org);
        }
    }




    static if(!is(typeof(NID_org))) {
        private enum enumMixinStr_NID_org = `enum NID_org = 379;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_org); }))) {
            mixin(enumMixinStr_NID_org);
        }
    }






    static if(!is(typeof(LN_org))) {
        private enum enumMixinStr_LN_org = `enum LN_org = "org";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_org); }))) {
            mixin(enumMixinStr_LN_org);
        }
    }




    static if(!is(typeof(SN_org))) {
        private enum enumMixinStr_SN_org = `enum SN_org = "ORG";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_org); }))) {
            mixin(enumMixinStr_SN_org);
        }
    }




    static if(!is(typeof(OBJ_ns_sgc))) {
        private enum enumMixinStr_OBJ_ns_sgc = `enum OBJ_ns_sgc = OBJ_netscape , 4L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ns_sgc); }))) {
            mixin(enumMixinStr_OBJ_ns_sgc);
        }
    }




    static if(!is(typeof(NID_ns_sgc))) {
        private enum enumMixinStr_NID_ns_sgc = `enum NID_ns_sgc = 139;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ns_sgc); }))) {
            mixin(enumMixinStr_NID_ns_sgc);
        }
    }




    static if(!is(typeof(LN_ns_sgc))) {
        private enum enumMixinStr_LN_ns_sgc = `enum LN_ns_sgc = "Netscape Server Gated Crypto";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ns_sgc); }))) {
            mixin(enumMixinStr_LN_ns_sgc);
        }
    }




    static if(!is(typeof(SN_ns_sgc))) {
        private enum enumMixinStr_SN_ns_sgc = `enum SN_ns_sgc = "nsSGC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ns_sgc); }))) {
            mixin(enumMixinStr_SN_ns_sgc);
        }
    }




    static if(!is(typeof(OBJ_netscape_cert_sequence))) {
        private enum enumMixinStr_OBJ_netscape_cert_sequence = `enum OBJ_netscape_cert_sequence = OBJ_netscape_data_type , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_netscape_cert_sequence); }))) {
            mixin(enumMixinStr_OBJ_netscape_cert_sequence);
        }
    }




    static if(!is(typeof(NID_netscape_cert_sequence))) {
        private enum enumMixinStr_NID_netscape_cert_sequence = `enum NID_netscape_cert_sequence = 79;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_netscape_cert_sequence); }))) {
            mixin(enumMixinStr_NID_netscape_cert_sequence);
        }
    }




    static if(!is(typeof(LN_netscape_cert_sequence))) {
        private enum enumMixinStr_LN_netscape_cert_sequence = `enum LN_netscape_cert_sequence = "Netscape Certificate Sequence";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_netscape_cert_sequence); }))) {
            mixin(enumMixinStr_LN_netscape_cert_sequence);
        }
    }




    static if(!is(typeof(SN_netscape_cert_sequence))) {
        private enum enumMixinStr_SN_netscape_cert_sequence = `enum SN_netscape_cert_sequence = "nsCertSequence";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_netscape_cert_sequence); }))) {
            mixin(enumMixinStr_SN_netscape_cert_sequence);
        }
    }




    static if(!is(typeof(OBJ_netscape_comment))) {
        private enum enumMixinStr_OBJ_netscape_comment = `enum OBJ_netscape_comment = OBJ_netscape_cert_extension , 13L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_netscape_comment); }))) {
            mixin(enumMixinStr_OBJ_netscape_comment);
        }
    }




    static if(!is(typeof(NID_netscape_comment))) {
        private enum enumMixinStr_NID_netscape_comment = `enum NID_netscape_comment = 78;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_netscape_comment); }))) {
            mixin(enumMixinStr_NID_netscape_comment);
        }
    }




    static if(!is(typeof(LN_netscape_comment))) {
        private enum enumMixinStr_LN_netscape_comment = `enum LN_netscape_comment = "Netscape Comment";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_netscape_comment); }))) {
            mixin(enumMixinStr_LN_netscape_comment);
        }
    }




    static if(!is(typeof(SN_netscape_comment))) {
        private enum enumMixinStr_SN_netscape_comment = `enum SN_netscape_comment = "nsComment";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_netscape_comment); }))) {
            mixin(enumMixinStr_SN_netscape_comment);
        }
    }




    static if(!is(typeof(OBJ_netscape_ssl_server_name))) {
        private enum enumMixinStr_OBJ_netscape_ssl_server_name = `enum OBJ_netscape_ssl_server_name = OBJ_netscape_cert_extension , 12L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_netscape_ssl_server_name); }))) {
            mixin(enumMixinStr_OBJ_netscape_ssl_server_name);
        }
    }




    static if(!is(typeof(NID_netscape_ssl_server_name))) {
        private enum enumMixinStr_NID_netscape_ssl_server_name = `enum NID_netscape_ssl_server_name = 77;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_netscape_ssl_server_name); }))) {
            mixin(enumMixinStr_NID_netscape_ssl_server_name);
        }
    }




    static if(!is(typeof(LN_netscape_ssl_server_name))) {
        private enum enumMixinStr_LN_netscape_ssl_server_name = `enum LN_netscape_ssl_server_name = "Netscape SSL Server Name";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_netscape_ssl_server_name); }))) {
            mixin(enumMixinStr_LN_netscape_ssl_server_name);
        }
    }




    static if(!is(typeof(SN_netscape_ssl_server_name))) {
        private enum enumMixinStr_SN_netscape_ssl_server_name = `enum SN_netscape_ssl_server_name = "nsSslServerName";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_netscape_ssl_server_name); }))) {
            mixin(enumMixinStr_SN_netscape_ssl_server_name);
        }
    }




    static if(!is(typeof(OBJ_netscape_ca_policy_url))) {
        private enum enumMixinStr_OBJ_netscape_ca_policy_url = `enum OBJ_netscape_ca_policy_url = OBJ_netscape_cert_extension , 8L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_netscape_ca_policy_url); }))) {
            mixin(enumMixinStr_OBJ_netscape_ca_policy_url);
        }
    }




    static if(!is(typeof(NID_netscape_ca_policy_url))) {
        private enum enumMixinStr_NID_netscape_ca_policy_url = `enum NID_netscape_ca_policy_url = 76;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_netscape_ca_policy_url); }))) {
            mixin(enumMixinStr_NID_netscape_ca_policy_url);
        }
    }




    static if(!is(typeof(LN_netscape_ca_policy_url))) {
        private enum enumMixinStr_LN_netscape_ca_policy_url = `enum LN_netscape_ca_policy_url = "Netscape CA Policy Url";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_netscape_ca_policy_url); }))) {
            mixin(enumMixinStr_LN_netscape_ca_policy_url);
        }
    }
    static if(!is(typeof(SN_netscape_ca_policy_url))) {
        private enum enumMixinStr_SN_netscape_ca_policy_url = `enum SN_netscape_ca_policy_url = "nsCaPolicyUrl";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_netscape_ca_policy_url); }))) {
            mixin(enumMixinStr_SN_netscape_ca_policy_url);
        }
    }




    static if(!is(typeof(OBJ_netscape_renewal_url))) {
        private enum enumMixinStr_OBJ_netscape_renewal_url = `enum OBJ_netscape_renewal_url = OBJ_netscape_cert_extension , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_netscape_renewal_url); }))) {
            mixin(enumMixinStr_OBJ_netscape_renewal_url);
        }
    }




    static if(!is(typeof(NID_netscape_renewal_url))) {
        private enum enumMixinStr_NID_netscape_renewal_url = `enum NID_netscape_renewal_url = 75;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_netscape_renewal_url); }))) {
            mixin(enumMixinStr_NID_netscape_renewal_url);
        }
    }




    static if(!is(typeof(LN_netscape_renewal_url))) {
        private enum enumMixinStr_LN_netscape_renewal_url = `enum LN_netscape_renewal_url = "Netscape Renewal Url";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_netscape_renewal_url); }))) {
            mixin(enumMixinStr_LN_netscape_renewal_url);
        }
    }






    static if(!is(typeof(SN_netscape_renewal_url))) {
        private enum enumMixinStr_SN_netscape_renewal_url = `enum SN_netscape_renewal_url = "nsRenewalUrl";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_netscape_renewal_url); }))) {
            mixin(enumMixinStr_SN_netscape_renewal_url);
        }
    }




    static if(!is(typeof(OBJ_netscape_ca_revocation_url))) {
        private enum enumMixinStr_OBJ_netscape_ca_revocation_url = `enum OBJ_netscape_ca_revocation_url = OBJ_netscape_cert_extension , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_netscape_ca_revocation_url); }))) {
            mixin(enumMixinStr_OBJ_netscape_ca_revocation_url);
        }
    }




    static if(!is(typeof(NID_netscape_ca_revocation_url))) {
        private enum enumMixinStr_NID_netscape_ca_revocation_url = `enum NID_netscape_ca_revocation_url = 74;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_netscape_ca_revocation_url); }))) {
            mixin(enumMixinStr_NID_netscape_ca_revocation_url);
        }
    }




    static if(!is(typeof(LN_netscape_ca_revocation_url))) {
        private enum enumMixinStr_LN_netscape_ca_revocation_url = `enum LN_netscape_ca_revocation_url = "Netscape CA Revocation Url";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_netscape_ca_revocation_url); }))) {
            mixin(enumMixinStr_LN_netscape_ca_revocation_url);
        }
    }




    static if(!is(typeof(SN_netscape_ca_revocation_url))) {
        private enum enumMixinStr_SN_netscape_ca_revocation_url = `enum SN_netscape_ca_revocation_url = "nsCaRevocationUrl";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_netscape_ca_revocation_url); }))) {
            mixin(enumMixinStr_SN_netscape_ca_revocation_url);
        }
    }




    static if(!is(typeof(OBJ_netscape_revocation_url))) {
        private enum enumMixinStr_OBJ_netscape_revocation_url = `enum OBJ_netscape_revocation_url = OBJ_netscape_cert_extension , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_netscape_revocation_url); }))) {
            mixin(enumMixinStr_OBJ_netscape_revocation_url);
        }
    }




    static if(!is(typeof(NID_netscape_revocation_url))) {
        private enum enumMixinStr_NID_netscape_revocation_url = `enum NID_netscape_revocation_url = 73;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_netscape_revocation_url); }))) {
            mixin(enumMixinStr_NID_netscape_revocation_url);
        }
    }






    static if(!is(typeof(LN_netscape_revocation_url))) {
        private enum enumMixinStr_LN_netscape_revocation_url = `enum LN_netscape_revocation_url = "Netscape Revocation Url";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_netscape_revocation_url); }))) {
            mixin(enumMixinStr_LN_netscape_revocation_url);
        }
    }




    static if(!is(typeof(SN_netscape_revocation_url))) {
        private enum enumMixinStr_SN_netscape_revocation_url = `enum SN_netscape_revocation_url = "nsRevocationUrl";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_netscape_revocation_url); }))) {
            mixin(enumMixinStr_SN_netscape_revocation_url);
        }
    }




    static if(!is(typeof(OBJ_F_OBJ_ADD_OBJECT))) {
        private enum enumMixinStr_OBJ_F_OBJ_ADD_OBJECT = `enum OBJ_F_OBJ_ADD_OBJECT = 105;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_F_OBJ_ADD_OBJECT); }))) {
            mixin(enumMixinStr_OBJ_F_OBJ_ADD_OBJECT);
        }
    }




    static if(!is(typeof(OBJ_F_OBJ_ADD_SIGID))) {
        private enum enumMixinStr_OBJ_F_OBJ_ADD_SIGID = `enum OBJ_F_OBJ_ADD_SIGID = 107;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_F_OBJ_ADD_SIGID); }))) {
            mixin(enumMixinStr_OBJ_F_OBJ_ADD_SIGID);
        }
    }




    static if(!is(typeof(OBJ_F_OBJ_CREATE))) {
        private enum enumMixinStr_OBJ_F_OBJ_CREATE = `enum OBJ_F_OBJ_CREATE = 100;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_F_OBJ_CREATE); }))) {
            mixin(enumMixinStr_OBJ_F_OBJ_CREATE);
        }
    }




    static if(!is(typeof(OBJ_F_OBJ_DUP))) {
        private enum enumMixinStr_OBJ_F_OBJ_DUP = `enum OBJ_F_OBJ_DUP = 101;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_F_OBJ_DUP); }))) {
            mixin(enumMixinStr_OBJ_F_OBJ_DUP);
        }
    }




    static if(!is(typeof(OBJ_F_OBJ_NAME_NEW_INDEX))) {
        private enum enumMixinStr_OBJ_F_OBJ_NAME_NEW_INDEX = `enum OBJ_F_OBJ_NAME_NEW_INDEX = 106;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_F_OBJ_NAME_NEW_INDEX); }))) {
            mixin(enumMixinStr_OBJ_F_OBJ_NAME_NEW_INDEX);
        }
    }




    static if(!is(typeof(OBJ_F_OBJ_NID2LN))) {
        private enum enumMixinStr_OBJ_F_OBJ_NID2LN = `enum OBJ_F_OBJ_NID2LN = 102;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_F_OBJ_NID2LN); }))) {
            mixin(enumMixinStr_OBJ_F_OBJ_NID2LN);
        }
    }




    static if(!is(typeof(OBJ_F_OBJ_NID2OBJ))) {
        private enum enumMixinStr_OBJ_F_OBJ_NID2OBJ = `enum OBJ_F_OBJ_NID2OBJ = 103;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_F_OBJ_NID2OBJ); }))) {
            mixin(enumMixinStr_OBJ_F_OBJ_NID2OBJ);
        }
    }




    static if(!is(typeof(OBJ_F_OBJ_NID2SN))) {
        private enum enumMixinStr_OBJ_F_OBJ_NID2SN = `enum OBJ_F_OBJ_NID2SN = 104;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_F_OBJ_NID2SN); }))) {
            mixin(enumMixinStr_OBJ_F_OBJ_NID2SN);
        }
    }




    static if(!is(typeof(OBJ_F_OBJ_TXT2OBJ))) {
        private enum enumMixinStr_OBJ_F_OBJ_TXT2OBJ = `enum OBJ_F_OBJ_TXT2OBJ = 108;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_F_OBJ_TXT2OBJ); }))) {
            mixin(enumMixinStr_OBJ_F_OBJ_TXT2OBJ);
        }
    }




    static if(!is(typeof(OBJ_R_OID_EXISTS))) {
        private enum enumMixinStr_OBJ_R_OID_EXISTS = `enum OBJ_R_OID_EXISTS = 102;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_R_OID_EXISTS); }))) {
            mixin(enumMixinStr_OBJ_R_OID_EXISTS);
        }
    }




    static if(!is(typeof(OBJ_R_UNKNOWN_NID))) {
        private enum enumMixinStr_OBJ_R_UNKNOWN_NID = `enum OBJ_R_UNKNOWN_NID = 101;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_R_UNKNOWN_NID); }))) {
            mixin(enumMixinStr_OBJ_R_UNKNOWN_NID);
        }
    }




    static if(!is(typeof(OBJ_netscape_base_url))) {
        private enum enumMixinStr_OBJ_netscape_base_url = `enum OBJ_netscape_base_url = OBJ_netscape_cert_extension , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_netscape_base_url); }))) {
            mixin(enumMixinStr_OBJ_netscape_base_url);
        }
    }




    static if(!is(typeof(NID_netscape_base_url))) {
        private enum enumMixinStr_NID_netscape_base_url = `enum NID_netscape_base_url = 72;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_netscape_base_url); }))) {
            mixin(enumMixinStr_NID_netscape_base_url);
        }
    }




    static if(!is(typeof(LN_netscape_base_url))) {
        private enum enumMixinStr_LN_netscape_base_url = `enum LN_netscape_base_url = "Netscape Base Url";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_netscape_base_url); }))) {
            mixin(enumMixinStr_LN_netscape_base_url);
        }
    }




    static if(!is(typeof(SN_netscape_base_url))) {
        private enum enumMixinStr_SN_netscape_base_url = `enum SN_netscape_base_url = "nsBaseUrl";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_netscape_base_url); }))) {
            mixin(enumMixinStr_SN_netscape_base_url);
        }
    }




    static if(!is(typeof(OBJ_netscape_cert_type))) {
        private enum enumMixinStr_OBJ_netscape_cert_type = `enum OBJ_netscape_cert_type = OBJ_netscape_cert_extension , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_netscape_cert_type); }))) {
            mixin(enumMixinStr_OBJ_netscape_cert_type);
        }
    }




    static if(!is(typeof(NID_netscape_cert_type))) {
        private enum enumMixinStr_NID_netscape_cert_type = `enum NID_netscape_cert_type = 71;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_netscape_cert_type); }))) {
            mixin(enumMixinStr_NID_netscape_cert_type);
        }
    }




    static if(!is(typeof(LN_netscape_cert_type))) {
        private enum enumMixinStr_LN_netscape_cert_type = `enum LN_netscape_cert_type = "Netscape Cert Type";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_netscape_cert_type); }))) {
            mixin(enumMixinStr_LN_netscape_cert_type);
        }
    }




    static if(!is(typeof(SN_netscape_cert_type))) {
        private enum enumMixinStr_SN_netscape_cert_type = `enum SN_netscape_cert_type = "nsCertType";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_netscape_cert_type); }))) {
            mixin(enumMixinStr_SN_netscape_cert_type);
        }
    }




    static if(!is(typeof(OBJ_netscape_data_type))) {
        private enum enumMixinStr_OBJ_netscape_data_type = `enum OBJ_netscape_data_type = OBJ_netscape , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_netscape_data_type); }))) {
            mixin(enumMixinStr_OBJ_netscape_data_type);
        }
    }




    static if(!is(typeof(NID_netscape_data_type))) {
        private enum enumMixinStr_NID_netscape_data_type = `enum NID_netscape_data_type = 59;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_netscape_data_type); }))) {
            mixin(enumMixinStr_NID_netscape_data_type);
        }
    }




    static if(!is(typeof(LN_netscape_data_type))) {
        private enum enumMixinStr_LN_netscape_data_type = `enum LN_netscape_data_type = "Netscape Data Type";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_netscape_data_type); }))) {
            mixin(enumMixinStr_LN_netscape_data_type);
        }
    }




    static if(!is(typeof(SN_netscape_data_type))) {
        private enum enumMixinStr_SN_netscape_data_type = `enum SN_netscape_data_type = "nsDataType";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_netscape_data_type); }))) {
            mixin(enumMixinStr_SN_netscape_data_type);
        }
    }




    static if(!is(typeof(OBJ_netscape_cert_extension))) {
        private enum enumMixinStr_OBJ_netscape_cert_extension = `enum OBJ_netscape_cert_extension = OBJ_netscape , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_netscape_cert_extension); }))) {
            mixin(enumMixinStr_OBJ_netscape_cert_extension);
        }
    }




    static if(!is(typeof(NID_netscape_cert_extension))) {
        private enum enumMixinStr_NID_netscape_cert_extension = `enum NID_netscape_cert_extension = 58;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_netscape_cert_extension); }))) {
            mixin(enumMixinStr_NID_netscape_cert_extension);
        }
    }




    static if(!is(typeof(LN_netscape_cert_extension))) {
        private enum enumMixinStr_LN_netscape_cert_extension = `enum LN_netscape_cert_extension = "Netscape Certificate Extension";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_netscape_cert_extension); }))) {
            mixin(enumMixinStr_LN_netscape_cert_extension);
        }
    }




    static if(!is(typeof(SN_netscape_cert_extension))) {
        private enum enumMixinStr_SN_netscape_cert_extension = `enum SN_netscape_cert_extension = "nsCertExt";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_netscape_cert_extension); }))) {
            mixin(enumMixinStr_SN_netscape_cert_extension);
        }
    }




    static if(!is(typeof(OBJ_netscape))) {
        private enum enumMixinStr_OBJ_netscape = `enum OBJ_netscape = 2L , 16L , 840L , 1L , 113730L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_netscape); }))) {
            mixin(enumMixinStr_OBJ_netscape);
        }
    }




    static if(!is(typeof(NID_netscape))) {
        private enum enumMixinStr_NID_netscape = `enum NID_netscape = 57;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_netscape); }))) {
            mixin(enumMixinStr_NID_netscape);
        }
    }




    static if(!is(typeof(LN_netscape))) {
        private enum enumMixinStr_LN_netscape = `enum LN_netscape = "Netscape Communications Corp.";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_netscape); }))) {
            mixin(enumMixinStr_LN_netscape);
        }
    }




    static if(!is(typeof(SN_netscape))) {
        private enum enumMixinStr_SN_netscape = `enum SN_netscape = "Netscape";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_netscape); }))) {
            mixin(enumMixinStr_SN_netscape);
        }
    }




    static if(!is(typeof(OBJ_anyExtendedKeyUsage))) {
        private enum enumMixinStr_OBJ_anyExtendedKeyUsage = `enum OBJ_anyExtendedKeyUsage = OBJ_ext_key_usage , 0L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_anyExtendedKeyUsage); }))) {
            mixin(enumMixinStr_OBJ_anyExtendedKeyUsage);
        }
    }




    static if(!is(typeof(NID_anyExtendedKeyUsage))) {
        private enum enumMixinStr_NID_anyExtendedKeyUsage = `enum NID_anyExtendedKeyUsage = 910;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_anyExtendedKeyUsage); }))) {
            mixin(enumMixinStr_NID_anyExtendedKeyUsage);
        }
    }




    static if(!is(typeof(LN_anyExtendedKeyUsage))) {
        private enum enumMixinStr_LN_anyExtendedKeyUsage = `enum LN_anyExtendedKeyUsage = "Any Extended Key Usage";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_anyExtendedKeyUsage); }))) {
            mixin(enumMixinStr_LN_anyExtendedKeyUsage);
        }
    }




    static if(!is(typeof(SN_anyExtendedKeyUsage))) {
        private enum enumMixinStr_SN_anyExtendedKeyUsage = `enum SN_anyExtendedKeyUsage = "anyExtendedKeyUsage";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_anyExtendedKeyUsage); }))) {
            mixin(enumMixinStr_SN_anyExtendedKeyUsage);
        }
    }




    static if(!is(typeof(OBJ_no_rev_avail))) {
        private enum enumMixinStr_OBJ_no_rev_avail = `enum OBJ_no_rev_avail = OBJ_id_ce , 56L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_no_rev_avail); }))) {
            mixin(enumMixinStr_OBJ_no_rev_avail);
        }
    }






    static if(!is(typeof(NID_no_rev_avail))) {
        private enum enumMixinStr_NID_no_rev_avail = `enum NID_no_rev_avail = 403;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_no_rev_avail); }))) {
            mixin(enumMixinStr_NID_no_rev_avail);
        }
    }




    static if(!is(typeof(LN_no_rev_avail))) {
        private enum enumMixinStr_LN_no_rev_avail = `enum LN_no_rev_avail = "X509v3 No Revocation Available";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_no_rev_avail); }))) {
            mixin(enumMixinStr_LN_no_rev_avail);
        }
    }




    static if(!is(typeof(SN_no_rev_avail))) {
        private enum enumMixinStr_SN_no_rev_avail = `enum SN_no_rev_avail = "noRevAvail";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_no_rev_avail); }))) {
            mixin(enumMixinStr_SN_no_rev_avail);
        }
    }




    static if(!is(typeof(OBJ_target_information))) {
        private enum enumMixinStr_OBJ_target_information = `enum OBJ_target_information = OBJ_id_ce , 55L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_target_information); }))) {
            mixin(enumMixinStr_OBJ_target_information);
        }
    }




    static if(!is(typeof(NID_target_information))) {
        private enum enumMixinStr_NID_target_information = `enum NID_target_information = 402;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_target_information); }))) {
            mixin(enumMixinStr_NID_target_information);
        }
    }




    static if(!is(typeof(LN_target_information))) {
        private enum enumMixinStr_LN_target_information = `enum LN_target_information = "X509v3 AC Targeting";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_target_information); }))) {
            mixin(enumMixinStr_LN_target_information);
        }
    }




    static if(!is(typeof(SN_target_information))) {
        private enum enumMixinStr_SN_target_information = `enum SN_target_information = "targetInformation";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_target_information); }))) {
            mixin(enumMixinStr_SN_target_information);
        }
    }




    static if(!is(typeof(OBJ_inhibit_any_policy))) {
        private enum enumMixinStr_OBJ_inhibit_any_policy = `enum OBJ_inhibit_any_policy = OBJ_id_ce , 54L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_inhibit_any_policy); }))) {
            mixin(enumMixinStr_OBJ_inhibit_any_policy);
        }
    }




    static if(!is(typeof(NID_inhibit_any_policy))) {
        private enum enumMixinStr_NID_inhibit_any_policy = `enum NID_inhibit_any_policy = 748;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_inhibit_any_policy); }))) {
            mixin(enumMixinStr_NID_inhibit_any_policy);
        }
    }




    static if(!is(typeof(LN_inhibit_any_policy))) {
        private enum enumMixinStr_LN_inhibit_any_policy = `enum LN_inhibit_any_policy = "X509v3 Inhibit Any Policy";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_inhibit_any_policy); }))) {
            mixin(enumMixinStr_LN_inhibit_any_policy);
        }
    }




    static if(!is(typeof(SN_inhibit_any_policy))) {
        private enum enumMixinStr_SN_inhibit_any_policy = `enum SN_inhibit_any_policy = "inhibitAnyPolicy";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_inhibit_any_policy); }))) {
            mixin(enumMixinStr_SN_inhibit_any_policy);
        }
    }




    static if(!is(typeof(OBJ_freshest_crl))) {
        private enum enumMixinStr_OBJ_freshest_crl = `enum OBJ_freshest_crl = OBJ_id_ce , 46L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_freshest_crl); }))) {
            mixin(enumMixinStr_OBJ_freshest_crl);
        }
    }






    static if(!is(typeof(NID_freshest_crl))) {
        private enum enumMixinStr_NID_freshest_crl = `enum NID_freshest_crl = 857;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_freshest_crl); }))) {
            mixin(enumMixinStr_NID_freshest_crl);
        }
    }




    static if(!is(typeof(LN_freshest_crl))) {
        private enum enumMixinStr_LN_freshest_crl = `enum LN_freshest_crl = "X509v3 Freshest CRL";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_freshest_crl); }))) {
            mixin(enumMixinStr_LN_freshest_crl);
        }
    }




    static if(!is(typeof(SN_freshest_crl))) {
        private enum enumMixinStr_SN_freshest_crl = `enum SN_freshest_crl = "freshestCRL";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_freshest_crl); }))) {
            mixin(enumMixinStr_SN_freshest_crl);
        }
    }




    static if(!is(typeof(OBJ_ext_key_usage))) {
        private enum enumMixinStr_OBJ_ext_key_usage = `enum OBJ_ext_key_usage = OBJ_id_ce , 37L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ext_key_usage); }))) {
            mixin(enumMixinStr_OBJ_ext_key_usage);
        }
    }




    static if(!is(typeof(NID_ext_key_usage))) {
        private enum enumMixinStr_NID_ext_key_usage = `enum NID_ext_key_usage = 126;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ext_key_usage); }))) {
            mixin(enumMixinStr_NID_ext_key_usage);
        }
    }




    static if(!is(typeof(LN_ext_key_usage))) {
        private enum enumMixinStr_LN_ext_key_usage = `enum LN_ext_key_usage = "X509v3 Extended Key Usage";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ext_key_usage); }))) {
            mixin(enumMixinStr_LN_ext_key_usage);
        }
    }




    static if(!is(typeof(SN_ext_key_usage))) {
        private enum enumMixinStr_SN_ext_key_usage = `enum SN_ext_key_usage = "extendedKeyUsage";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ext_key_usage); }))) {
            mixin(enumMixinStr_SN_ext_key_usage);
        }
    }




    static if(!is(typeof(OBJ_policy_constraints))) {
        private enum enumMixinStr_OBJ_policy_constraints = `enum OBJ_policy_constraints = OBJ_id_ce , 36L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_policy_constraints); }))) {
            mixin(enumMixinStr_OBJ_policy_constraints);
        }
    }




    static if(!is(typeof(NID_policy_constraints))) {
        private enum enumMixinStr_NID_policy_constraints = `enum NID_policy_constraints = 401;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_policy_constraints); }))) {
            mixin(enumMixinStr_NID_policy_constraints);
        }
    }




    static if(!is(typeof(LN_policy_constraints))) {
        private enum enumMixinStr_LN_policy_constraints = `enum LN_policy_constraints = "X509v3 Policy Constraints";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_policy_constraints); }))) {
            mixin(enumMixinStr_LN_policy_constraints);
        }
    }




    static if(!is(typeof(SN_policy_constraints))) {
        private enum enumMixinStr_SN_policy_constraints = `enum SN_policy_constraints = "policyConstraints";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_policy_constraints); }))) {
            mixin(enumMixinStr_SN_policy_constraints);
        }
    }




    static if(!is(typeof(OBJ_authority_key_identifier))) {
        private enum enumMixinStr_OBJ_authority_key_identifier = `enum OBJ_authority_key_identifier = OBJ_id_ce , 35L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_authority_key_identifier); }))) {
            mixin(enumMixinStr_OBJ_authority_key_identifier);
        }
    }






    static if(!is(typeof(NID_authority_key_identifier))) {
        private enum enumMixinStr_NID_authority_key_identifier = `enum NID_authority_key_identifier = 90;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_authority_key_identifier); }))) {
            mixin(enumMixinStr_NID_authority_key_identifier);
        }
    }




    static if(!is(typeof(LN_authority_key_identifier))) {
        private enum enumMixinStr_LN_authority_key_identifier = `enum LN_authority_key_identifier = "X509v3 Authority Key Identifier";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_authority_key_identifier); }))) {
            mixin(enumMixinStr_LN_authority_key_identifier);
        }
    }




    static if(!is(typeof(SN_authority_key_identifier))) {
        private enum enumMixinStr_SN_authority_key_identifier = `enum SN_authority_key_identifier = "authorityKeyIdentifier";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_authority_key_identifier); }))) {
            mixin(enumMixinStr_SN_authority_key_identifier);
        }
    }




    static if(!is(typeof(OBJ_policy_mappings))) {
        private enum enumMixinStr_OBJ_policy_mappings = `enum OBJ_policy_mappings = OBJ_id_ce , 33L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_policy_mappings); }))) {
            mixin(enumMixinStr_OBJ_policy_mappings);
        }
    }




    static if(!is(typeof(NID_policy_mappings))) {
        private enum enumMixinStr_NID_policy_mappings = `enum NID_policy_mappings = 747;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_policy_mappings); }))) {
            mixin(enumMixinStr_NID_policy_mappings);
        }
    }




    static if(!is(typeof(LN_policy_mappings))) {
        private enum enumMixinStr_LN_policy_mappings = `enum LN_policy_mappings = "X509v3 Policy Mappings";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_policy_mappings); }))) {
            mixin(enumMixinStr_LN_policy_mappings);
        }
    }




    static if(!is(typeof(SN_policy_mappings))) {
        private enum enumMixinStr_SN_policy_mappings = `enum SN_policy_mappings = "policyMappings";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_policy_mappings); }))) {
            mixin(enumMixinStr_SN_policy_mappings);
        }
    }




    static if(!is(typeof(OBJ_any_policy))) {
        private enum enumMixinStr_OBJ_any_policy = `enum OBJ_any_policy = OBJ_certificate_policies , 0L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_any_policy); }))) {
            mixin(enumMixinStr_OBJ_any_policy);
        }
    }




    static if(!is(typeof(NID_any_policy))) {
        private enum enumMixinStr_NID_any_policy = `enum NID_any_policy = 746;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_any_policy); }))) {
            mixin(enumMixinStr_NID_any_policy);
        }
    }




    static if(!is(typeof(LN_any_policy))) {
        private enum enumMixinStr_LN_any_policy = `enum LN_any_policy = "X509v3 Any Policy";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_any_policy); }))) {
            mixin(enumMixinStr_LN_any_policy);
        }
    }




    static if(!is(typeof(SN_any_policy))) {
        private enum enumMixinStr_SN_any_policy = `enum SN_any_policy = "anyPolicy";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_any_policy); }))) {
            mixin(enumMixinStr_SN_any_policy);
        }
    }




    static if(!is(typeof(OBJ_certificate_policies))) {
        private enum enumMixinStr_OBJ_certificate_policies = `enum OBJ_certificate_policies = OBJ_id_ce , 32L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_certificate_policies); }))) {
            mixin(enumMixinStr_OBJ_certificate_policies);
        }
    }






    static if(!is(typeof(NID_certificate_policies))) {
        private enum enumMixinStr_NID_certificate_policies = `enum NID_certificate_policies = 89;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_certificate_policies); }))) {
            mixin(enumMixinStr_NID_certificate_policies);
        }
    }




    static if(!is(typeof(LN_certificate_policies))) {
        private enum enumMixinStr_LN_certificate_policies = `enum LN_certificate_policies = "X509v3 Certificate Policies";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_certificate_policies); }))) {
            mixin(enumMixinStr_LN_certificate_policies);
        }
    }




    static if(!is(typeof(SN_certificate_policies))) {
        private enum enumMixinStr_SN_certificate_policies = `enum SN_certificate_policies = "certificatePolicies";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_certificate_policies); }))) {
            mixin(enumMixinStr_SN_certificate_policies);
        }
    }




    static if(!is(typeof(OBJ_crl_distribution_points))) {
        private enum enumMixinStr_OBJ_crl_distribution_points = `enum OBJ_crl_distribution_points = OBJ_id_ce , 31L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_crl_distribution_points); }))) {
            mixin(enumMixinStr_OBJ_crl_distribution_points);
        }
    }




    static if(!is(typeof(NID_crl_distribution_points))) {
        private enum enumMixinStr_NID_crl_distribution_points = `enum NID_crl_distribution_points = 103;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_crl_distribution_points); }))) {
            mixin(enumMixinStr_NID_crl_distribution_points);
        }
    }




    static if(!is(typeof(LN_crl_distribution_points))) {
        private enum enumMixinStr_LN_crl_distribution_points = `enum LN_crl_distribution_points = "X509v3 CRL Distribution Points";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_crl_distribution_points); }))) {
            mixin(enumMixinStr_LN_crl_distribution_points);
        }
    }




    static if(!is(typeof(SN_crl_distribution_points))) {
        private enum enumMixinStr_SN_crl_distribution_points = `enum SN_crl_distribution_points = "crlDistributionPoints";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_crl_distribution_points); }))) {
            mixin(enumMixinStr_SN_crl_distribution_points);
        }
    }




    static if(!is(typeof(OBJ_name_constraints))) {
        private enum enumMixinStr_OBJ_name_constraints = `enum OBJ_name_constraints = OBJ_id_ce , 30L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_name_constraints); }))) {
            mixin(enumMixinStr_OBJ_name_constraints);
        }
    }




    static if(!is(typeof(NID_name_constraints))) {
        private enum enumMixinStr_NID_name_constraints = `enum NID_name_constraints = 666;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_name_constraints); }))) {
            mixin(enumMixinStr_NID_name_constraints);
        }
    }




    static if(!is(typeof(LN_name_constraints))) {
        private enum enumMixinStr_LN_name_constraints = `enum LN_name_constraints = "X509v3 Name Constraints";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_name_constraints); }))) {
            mixin(enumMixinStr_LN_name_constraints);
        }
    }




    static if(!is(typeof(SN_name_constraints))) {
        private enum enumMixinStr_SN_name_constraints = `enum SN_name_constraints = "nameConstraints";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_name_constraints); }))) {
            mixin(enumMixinStr_SN_name_constraints);
        }
    }




    static if(!is(typeof(OBJ_certificate_issuer))) {
        private enum enumMixinStr_OBJ_certificate_issuer = `enum OBJ_certificate_issuer = OBJ_id_ce , 29L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_certificate_issuer); }))) {
            mixin(enumMixinStr_OBJ_certificate_issuer);
        }
    }






    static if(!is(typeof(NID_certificate_issuer))) {
        private enum enumMixinStr_NID_certificate_issuer = `enum NID_certificate_issuer = 771;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_certificate_issuer); }))) {
            mixin(enumMixinStr_NID_certificate_issuer);
        }
    }




    static if(!is(typeof(LN_certificate_issuer))) {
        private enum enumMixinStr_LN_certificate_issuer = `enum LN_certificate_issuer = "X509v3 Certificate Issuer";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_certificate_issuer); }))) {
            mixin(enumMixinStr_LN_certificate_issuer);
        }
    }




    static if(!is(typeof(SN_certificate_issuer))) {
        private enum enumMixinStr_SN_certificate_issuer = `enum SN_certificate_issuer = "certificateIssuer";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_certificate_issuer); }))) {
            mixin(enumMixinStr_SN_certificate_issuer);
        }
    }




    static if(!is(typeof(OBJ_issuing_distribution_point))) {
        private enum enumMixinStr_OBJ_issuing_distribution_point = `enum OBJ_issuing_distribution_point = OBJ_id_ce , 28L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_issuing_distribution_point); }))) {
            mixin(enumMixinStr_OBJ_issuing_distribution_point);
        }
    }




    static if(!is(typeof(NID_issuing_distribution_point))) {
        private enum enumMixinStr_NID_issuing_distribution_point = `enum NID_issuing_distribution_point = 770;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_issuing_distribution_point); }))) {
            mixin(enumMixinStr_NID_issuing_distribution_point);
        }
    }




    static if(!is(typeof(LN_issuing_distribution_point))) {
        private enum enumMixinStr_LN_issuing_distribution_point = `enum LN_issuing_distribution_point = "X509v3 Issuing Distribution Point";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_issuing_distribution_point); }))) {
            mixin(enumMixinStr_LN_issuing_distribution_point);
        }
    }




    static if(!is(typeof(SN_issuing_distribution_point))) {
        private enum enumMixinStr_SN_issuing_distribution_point = `enum SN_issuing_distribution_point = "issuingDistributionPoint";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_issuing_distribution_point); }))) {
            mixin(enumMixinStr_SN_issuing_distribution_point);
        }
    }




    static if(!is(typeof(OBJ_delta_crl))) {
        private enum enumMixinStr_OBJ_delta_crl = `enum OBJ_delta_crl = OBJ_id_ce , 27L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_delta_crl); }))) {
            mixin(enumMixinStr_OBJ_delta_crl);
        }
    }




    static if(!is(typeof(NID_delta_crl))) {
        private enum enumMixinStr_NID_delta_crl = `enum NID_delta_crl = 140;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_delta_crl); }))) {
            mixin(enumMixinStr_NID_delta_crl);
        }
    }




    static if(!is(typeof(LN_delta_crl))) {
        private enum enumMixinStr_LN_delta_crl = `enum LN_delta_crl = "X509v3 Delta CRL Indicator";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_delta_crl); }))) {
            mixin(enumMixinStr_LN_delta_crl);
        }
    }




    static if(!is(typeof(SN_delta_crl))) {
        private enum enumMixinStr_SN_delta_crl = `enum SN_delta_crl = "deltaCRL";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_delta_crl); }))) {
            mixin(enumMixinStr_SN_delta_crl);
        }
    }




    static if(!is(typeof(OBJ_invalidity_date))) {
        private enum enumMixinStr_OBJ_invalidity_date = `enum OBJ_invalidity_date = OBJ_id_ce , 24L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_invalidity_date); }))) {
            mixin(enumMixinStr_OBJ_invalidity_date);
        }
    }






    static if(!is(typeof(NID_invalidity_date))) {
        private enum enumMixinStr_NID_invalidity_date = `enum NID_invalidity_date = 142;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_invalidity_date); }))) {
            mixin(enumMixinStr_NID_invalidity_date);
        }
    }




    static if(!is(typeof(LN_invalidity_date))) {
        private enum enumMixinStr_LN_invalidity_date = `enum LN_invalidity_date = "Invalidity Date";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_invalidity_date); }))) {
            mixin(enumMixinStr_LN_invalidity_date);
        }
    }




    static if(!is(typeof(SN_invalidity_date))) {
        private enum enumMixinStr_SN_invalidity_date = `enum SN_invalidity_date = "invalidityDate";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_invalidity_date); }))) {
            mixin(enumMixinStr_SN_invalidity_date);
        }
    }




    static if(!is(typeof(OBJ_crl_reason))) {
        private enum enumMixinStr_OBJ_crl_reason = `enum OBJ_crl_reason = OBJ_id_ce , 21L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_crl_reason); }))) {
            mixin(enumMixinStr_OBJ_crl_reason);
        }
    }




    static if(!is(typeof(NID_crl_reason))) {
        private enum enumMixinStr_NID_crl_reason = `enum NID_crl_reason = 141;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_crl_reason); }))) {
            mixin(enumMixinStr_NID_crl_reason);
        }
    }




    static if(!is(typeof(LN_crl_reason))) {
        private enum enumMixinStr_LN_crl_reason = `enum LN_crl_reason = "X509v3 CRL Reason Code";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_crl_reason); }))) {
            mixin(enumMixinStr_LN_crl_reason);
        }
    }




    static if(!is(typeof(SN_crl_reason))) {
        private enum enumMixinStr_SN_crl_reason = `enum SN_crl_reason = "CRLReason";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_crl_reason); }))) {
            mixin(enumMixinStr_SN_crl_reason);
        }
    }




    static if(!is(typeof(OBJ_crl_number))) {
        private enum enumMixinStr_OBJ_crl_number = `enum OBJ_crl_number = OBJ_id_ce , 20L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_crl_number); }))) {
            mixin(enumMixinStr_OBJ_crl_number);
        }
    }




    static if(!is(typeof(NID_crl_number))) {
        private enum enumMixinStr_NID_crl_number = `enum NID_crl_number = 88;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_crl_number); }))) {
            mixin(enumMixinStr_NID_crl_number);
        }
    }




    static if(!is(typeof(LN_crl_number))) {
        private enum enumMixinStr_LN_crl_number = `enum LN_crl_number = "X509v3 CRL Number";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_crl_number); }))) {
            mixin(enumMixinStr_LN_crl_number);
        }
    }




    static if(!is(typeof(SN_crl_number))) {
        private enum enumMixinStr_SN_crl_number = `enum SN_crl_number = "crlNumber";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_crl_number); }))) {
            mixin(enumMixinStr_SN_crl_number);
        }
    }




    static if(!is(typeof(OBJ_basic_constraints))) {
        private enum enumMixinStr_OBJ_basic_constraints = `enum OBJ_basic_constraints = OBJ_id_ce , 19L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_basic_constraints); }))) {
            mixin(enumMixinStr_OBJ_basic_constraints);
        }
    }






    static if(!is(typeof(NID_basic_constraints))) {
        private enum enumMixinStr_NID_basic_constraints = `enum NID_basic_constraints = 87;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_basic_constraints); }))) {
            mixin(enumMixinStr_NID_basic_constraints);
        }
    }




    static if(!is(typeof(LN_basic_constraints))) {
        private enum enumMixinStr_LN_basic_constraints = `enum LN_basic_constraints = "X509v3 Basic Constraints";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_basic_constraints); }))) {
            mixin(enumMixinStr_LN_basic_constraints);
        }
    }




    static if(!is(typeof(SN_basic_constraints))) {
        private enum enumMixinStr_SN_basic_constraints = `enum SN_basic_constraints = "basicConstraints";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_basic_constraints); }))) {
            mixin(enumMixinStr_SN_basic_constraints);
        }
    }




    static if(!is(typeof(OBJ_issuer_alt_name))) {
        private enum enumMixinStr_OBJ_issuer_alt_name = `enum OBJ_issuer_alt_name = OBJ_id_ce , 18L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_issuer_alt_name); }))) {
            mixin(enumMixinStr_OBJ_issuer_alt_name);
        }
    }




    static if(!is(typeof(NID_issuer_alt_name))) {
        private enum enumMixinStr_NID_issuer_alt_name = `enum NID_issuer_alt_name = 86;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_issuer_alt_name); }))) {
            mixin(enumMixinStr_NID_issuer_alt_name);
        }
    }




    static if(!is(typeof(LN_issuer_alt_name))) {
        private enum enumMixinStr_LN_issuer_alt_name = `enum LN_issuer_alt_name = "X509v3 Issuer Alternative Name";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_issuer_alt_name); }))) {
            mixin(enumMixinStr_LN_issuer_alt_name);
        }
    }




    static if(!is(typeof(SN_issuer_alt_name))) {
        private enum enumMixinStr_SN_issuer_alt_name = `enum SN_issuer_alt_name = "issuerAltName";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_issuer_alt_name); }))) {
            mixin(enumMixinStr_SN_issuer_alt_name);
        }
    }




    static if(!is(typeof(OBJ_subject_alt_name))) {
        private enum enumMixinStr_OBJ_subject_alt_name = `enum OBJ_subject_alt_name = OBJ_id_ce , 17L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_subject_alt_name); }))) {
            mixin(enumMixinStr_OBJ_subject_alt_name);
        }
    }




    static if(!is(typeof(NID_subject_alt_name))) {
        private enum enumMixinStr_NID_subject_alt_name = `enum NID_subject_alt_name = 85;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_subject_alt_name); }))) {
            mixin(enumMixinStr_NID_subject_alt_name);
        }
    }




    static if(!is(typeof(LN_subject_alt_name))) {
        private enum enumMixinStr_LN_subject_alt_name = `enum LN_subject_alt_name = "X509v3 Subject Alternative Name";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_subject_alt_name); }))) {
            mixin(enumMixinStr_LN_subject_alt_name);
        }
    }




    static if(!is(typeof(SN_subject_alt_name))) {
        private enum enumMixinStr_SN_subject_alt_name = `enum SN_subject_alt_name = "subjectAltName";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_subject_alt_name); }))) {
            mixin(enumMixinStr_SN_subject_alt_name);
        }
    }




    static if(!is(typeof(OBJ_private_key_usage_period))) {
        private enum enumMixinStr_OBJ_private_key_usage_period = `enum OBJ_private_key_usage_period = OBJ_id_ce , 16L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_private_key_usage_period); }))) {
            mixin(enumMixinStr_OBJ_private_key_usage_period);
        }
    }






    static if(!is(typeof(NID_private_key_usage_period))) {
        private enum enumMixinStr_NID_private_key_usage_period = `enum NID_private_key_usage_period = 84;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_private_key_usage_period); }))) {
            mixin(enumMixinStr_NID_private_key_usage_period);
        }
    }




    static if(!is(typeof(LN_private_key_usage_period))) {
        private enum enumMixinStr_LN_private_key_usage_period = `enum LN_private_key_usage_period = "X509v3 Private Key Usage Period";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_private_key_usage_period); }))) {
            mixin(enumMixinStr_LN_private_key_usage_period);
        }
    }




    static if(!is(typeof(SN_private_key_usage_period))) {
        private enum enumMixinStr_SN_private_key_usage_period = `enum SN_private_key_usage_period = "privateKeyUsagePeriod";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_private_key_usage_period); }))) {
            mixin(enumMixinStr_SN_private_key_usage_period);
        }
    }




    static if(!is(typeof(OBJ_key_usage))) {
        private enum enumMixinStr_OBJ_key_usage = `enum OBJ_key_usage = OBJ_id_ce , 15L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_key_usage); }))) {
            mixin(enumMixinStr_OBJ_key_usage);
        }
    }




    static if(!is(typeof(NID_key_usage))) {
        private enum enumMixinStr_NID_key_usage = `enum NID_key_usage = 83;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_key_usage); }))) {
            mixin(enumMixinStr_NID_key_usage);
        }
    }




    static if(!is(typeof(LN_key_usage))) {
        private enum enumMixinStr_LN_key_usage = `enum LN_key_usage = "X509v3 Key Usage";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_key_usage); }))) {
            mixin(enumMixinStr_LN_key_usage);
        }
    }




    static if(!is(typeof(SN_key_usage))) {
        private enum enumMixinStr_SN_key_usage = `enum SN_key_usage = "keyUsage";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_key_usage); }))) {
            mixin(enumMixinStr_SN_key_usage);
        }
    }




    static if(!is(typeof(OBJ_subject_key_identifier))) {
        private enum enumMixinStr_OBJ_subject_key_identifier = `enum OBJ_subject_key_identifier = OBJ_id_ce , 14L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_subject_key_identifier); }))) {
            mixin(enumMixinStr_OBJ_subject_key_identifier);
        }
    }




    static if(!is(typeof(NID_subject_key_identifier))) {
        private enum enumMixinStr_NID_subject_key_identifier = `enum NID_subject_key_identifier = 82;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_subject_key_identifier); }))) {
            mixin(enumMixinStr_NID_subject_key_identifier);
        }
    }




    static if(!is(typeof(LN_subject_key_identifier))) {
        private enum enumMixinStr_LN_subject_key_identifier = `enum LN_subject_key_identifier = "X509v3 Subject Key Identifier";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_subject_key_identifier); }))) {
            mixin(enumMixinStr_LN_subject_key_identifier);
        }
    }




    static if(!is(typeof(SN_subject_key_identifier))) {
        private enum enumMixinStr_SN_subject_key_identifier = `enum SN_subject_key_identifier = "subjectKeyIdentifier";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_subject_key_identifier); }))) {
            mixin(enumMixinStr_SN_subject_key_identifier);
        }
    }




    static if(!is(typeof(OBJ_subject_directory_attributes))) {
        private enum enumMixinStr_OBJ_subject_directory_attributes = `enum OBJ_subject_directory_attributes = OBJ_id_ce , 9L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_subject_directory_attributes); }))) {
            mixin(enumMixinStr_OBJ_subject_directory_attributes);
        }
    }






    static if(!is(typeof(NID_subject_directory_attributes))) {
        private enum enumMixinStr_NID_subject_directory_attributes = `enum NID_subject_directory_attributes = 769;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_subject_directory_attributes); }))) {
            mixin(enumMixinStr_NID_subject_directory_attributes);
        }
    }




    static if(!is(typeof(LN_subject_directory_attributes))) {
        private enum enumMixinStr_LN_subject_directory_attributes = `enum LN_subject_directory_attributes = "X509v3 Subject Directory Attributes";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_subject_directory_attributes); }))) {
            mixin(enumMixinStr_LN_subject_directory_attributes);
        }
    }




    static if(!is(typeof(SN_subject_directory_attributes))) {
        private enum enumMixinStr_SN_subject_directory_attributes = `enum SN_subject_directory_attributes = "subjectDirectoryAttributes";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_subject_directory_attributes); }))) {
            mixin(enumMixinStr_SN_subject_directory_attributes);
        }
    }




    static if(!is(typeof(OBJ_id_ce))) {
        private enum enumMixinStr_OBJ_id_ce = `enum OBJ_id_ce = OBJ_X500 , 29L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_ce); }))) {
            mixin(enumMixinStr_OBJ_id_ce);
        }
    }




    static if(!is(typeof(NID_id_ce))) {
        private enum enumMixinStr_NID_id_ce = `enum NID_id_ce = 81;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_ce); }))) {
            mixin(enumMixinStr_NID_id_ce);
        }
    }




    static if(!is(typeof(SN_id_ce))) {
        private enum enumMixinStr_SN_id_ce = `enum SN_id_ce = "id-ce";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_ce); }))) {
            mixin(enumMixinStr_SN_id_ce);
        }
    }




    static if(!is(typeof(OBJ_mdc2))) {
        private enum enumMixinStr_OBJ_mdc2 = `enum OBJ_mdc2 = OBJ_X500algorithms , 3L , 101L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_mdc2); }))) {
            mixin(enumMixinStr_OBJ_mdc2);
        }
    }




    static if(!is(typeof(NID_mdc2))) {
        private enum enumMixinStr_NID_mdc2 = `enum NID_mdc2 = 95;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_mdc2); }))) {
            mixin(enumMixinStr_NID_mdc2);
        }
    }




    static if(!is(typeof(LN_mdc2))) {
        private enum enumMixinStr_LN_mdc2 = `enum LN_mdc2 = "mdc2";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_mdc2); }))) {
            mixin(enumMixinStr_LN_mdc2);
        }
    }




    static if(!is(typeof(SN_mdc2))) {
        private enum enumMixinStr_SN_mdc2 = `enum SN_mdc2 = "MDC2";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_mdc2); }))) {
            mixin(enumMixinStr_SN_mdc2);
        }
    }




    static if(!is(typeof(OBJ_mdc2WithRSA))) {
        private enum enumMixinStr_OBJ_mdc2WithRSA = `enum OBJ_mdc2WithRSA = OBJ_X500algorithms , 3L , 100L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_mdc2WithRSA); }))) {
            mixin(enumMixinStr_OBJ_mdc2WithRSA);
        }
    }




    static if(!is(typeof(NID_mdc2WithRSA))) {
        private enum enumMixinStr_NID_mdc2WithRSA = `enum NID_mdc2WithRSA = 96;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_mdc2WithRSA); }))) {
            mixin(enumMixinStr_NID_mdc2WithRSA);
        }
    }






    static if(!is(typeof(LN_mdc2WithRSA))) {
        private enum enumMixinStr_LN_mdc2WithRSA = `enum LN_mdc2WithRSA = "mdc2WithRSA";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_mdc2WithRSA); }))) {
            mixin(enumMixinStr_LN_mdc2WithRSA);
        }
    }




    static if(!is(typeof(SN_mdc2WithRSA))) {
        private enum enumMixinStr_SN_mdc2WithRSA = `enum SN_mdc2WithRSA = "RSA-MDC2";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_mdc2WithRSA); }))) {
            mixin(enumMixinStr_SN_mdc2WithRSA);
        }
    }




    static if(!is(typeof(OBJ_rsa))) {
        private enum enumMixinStr_OBJ_rsa = `enum OBJ_rsa = OBJ_X500algorithms , 1L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_rsa); }))) {
            mixin(enumMixinStr_OBJ_rsa);
        }
    }




    static if(!is(typeof(NID_rsa))) {
        private enum enumMixinStr_NID_rsa = `enum NID_rsa = 19;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_rsa); }))) {
            mixin(enumMixinStr_NID_rsa);
        }
    }




    static if(!is(typeof(LN_rsa))) {
        private enum enumMixinStr_LN_rsa = `enum LN_rsa = "rsa";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_rsa); }))) {
            mixin(enumMixinStr_LN_rsa);
        }
    }




    static if(!is(typeof(SN_rsa))) {
        private enum enumMixinStr_SN_rsa = `enum SN_rsa = "RSA";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_rsa); }))) {
            mixin(enumMixinStr_SN_rsa);
        }
    }




    static if(!is(typeof(OBJ_X500algorithms))) {
        private enum enumMixinStr_OBJ_X500algorithms = `enum OBJ_X500algorithms = OBJ_X500 , 8L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X500algorithms); }))) {
            mixin(enumMixinStr_OBJ_X500algorithms);
        }
    }




    static if(!is(typeof(NID_X500algorithms))) {
        private enum enumMixinStr_NID_X500algorithms = `enum NID_X500algorithms = 378;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X500algorithms); }))) {
            mixin(enumMixinStr_NID_X500algorithms);
        }
    }




    static if(!is(typeof(LN_X500algorithms))) {
        private enum enumMixinStr_LN_X500algorithms = `enum LN_X500algorithms = "directory services - algorithms";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_X500algorithms); }))) {
            mixin(enumMixinStr_LN_X500algorithms);
        }
    }




    static if(!is(typeof(SN_X500algorithms))) {
        private enum enumMixinStr_SN_X500algorithms = `enum SN_X500algorithms = "X500algorithms";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X500algorithms); }))) {
            mixin(enumMixinStr_SN_X500algorithms);
        }
    }




    static if(!is(typeof(OBJ_dnsName))) {
        private enum enumMixinStr_OBJ_dnsName = `enum OBJ_dnsName = OBJ_X509 , 100L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dnsName); }))) {
            mixin(enumMixinStr_OBJ_dnsName);
        }
    }




    static if(!is(typeof(NID_dnsName))) {
        private enum enumMixinStr_NID_dnsName = `enum NID_dnsName = 1092;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dnsName); }))) {
            mixin(enumMixinStr_NID_dnsName);
        }
    }






    static if(!is(typeof(LN_dnsName))) {
        private enum enumMixinStr_LN_dnsName = `enum LN_dnsName = "dnsName";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_dnsName); }))) {
            mixin(enumMixinStr_LN_dnsName);
        }
    }




    static if(!is(typeof(OBJ_countryCode3n))) {
        private enum enumMixinStr_OBJ_countryCode3n = `enum OBJ_countryCode3n = OBJ_X509 , 99L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_countryCode3n); }))) {
            mixin(enumMixinStr_OBJ_countryCode3n);
        }
    }




    static if(!is(typeof(NID_countryCode3n))) {
        private enum enumMixinStr_NID_countryCode3n = `enum NID_countryCode3n = 1091;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_countryCode3n); }))) {
            mixin(enumMixinStr_NID_countryCode3n);
        }
    }




    static if(!is(typeof(LN_countryCode3n))) {
        private enum enumMixinStr_LN_countryCode3n = `enum LN_countryCode3n = "countryCode3n";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_countryCode3n); }))) {
            mixin(enumMixinStr_LN_countryCode3n);
        }
    }




    static if(!is(typeof(SN_countryCode3n))) {
        private enum enumMixinStr_SN_countryCode3n = `enum SN_countryCode3n = "n3";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_countryCode3n); }))) {
            mixin(enumMixinStr_SN_countryCode3n);
        }
    }




    static if(!is(typeof(OBJ_countryCode3c))) {
        private enum enumMixinStr_OBJ_countryCode3c = `enum OBJ_countryCode3c = OBJ_X509 , 98L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_countryCode3c); }))) {
            mixin(enumMixinStr_OBJ_countryCode3c);
        }
    }




    static if(!is(typeof(NID_countryCode3c))) {
        private enum enumMixinStr_NID_countryCode3c = `enum NID_countryCode3c = 1090;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_countryCode3c); }))) {
            mixin(enumMixinStr_NID_countryCode3c);
        }
    }




    static if(!is(typeof(LN_countryCode3c))) {
        private enum enumMixinStr_LN_countryCode3c = `enum LN_countryCode3c = "countryCode3c";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_countryCode3c); }))) {
            mixin(enumMixinStr_LN_countryCode3c);
        }
    }




    static if(!is(typeof(SN_countryCode3c))) {
        private enum enumMixinStr_SN_countryCode3c = `enum SN_countryCode3c = "c3";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_countryCode3c); }))) {
            mixin(enumMixinStr_SN_countryCode3c);
        }
    }




    static if(!is(typeof(OBJ_organizationIdentifier))) {
        private enum enumMixinStr_OBJ_organizationIdentifier = `enum OBJ_organizationIdentifier = OBJ_X509 , 97L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_organizationIdentifier); }))) {
            mixin(enumMixinStr_OBJ_organizationIdentifier);
        }
    }




    static if(!is(typeof(NID_organizationIdentifier))) {
        private enum enumMixinStr_NID_organizationIdentifier = `enum NID_organizationIdentifier = 1089;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_organizationIdentifier); }))) {
            mixin(enumMixinStr_NID_organizationIdentifier);
        }
    }




    static if(!is(typeof(LN_organizationIdentifier))) {
        private enum enumMixinStr_LN_organizationIdentifier = `enum LN_organizationIdentifier = "organizationIdentifier";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_organizationIdentifier); }))) {
            mixin(enumMixinStr_LN_organizationIdentifier);
        }
    }






    static if(!is(typeof(OBJ_role))) {
        private enum enumMixinStr_OBJ_role = `enum OBJ_role = OBJ_X509 , 72L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_role); }))) {
            mixin(enumMixinStr_OBJ_role);
        }
    }




    static if(!is(typeof(NID_role))) {
        private enum enumMixinStr_NID_role = `enum NID_role = 400;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_role); }))) {
            mixin(enumMixinStr_NID_role);
        }
    }




    static if(!is(typeof(LN_role))) {
        private enum enumMixinStr_LN_role = `enum LN_role = "role";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_role); }))) {
            mixin(enumMixinStr_LN_role);
        }
    }




    static if(!is(typeof(SN_role))) {
        private enum enumMixinStr_SN_role = `enum SN_role = "role";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_role); }))) {
            mixin(enumMixinStr_SN_role);
        }
    }




    static if(!is(typeof(OBJ_pseudonym))) {
        private enum enumMixinStr_OBJ_pseudonym = `enum OBJ_pseudonym = OBJ_X509 , 65L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pseudonym); }))) {
            mixin(enumMixinStr_OBJ_pseudonym);
        }
    }




    static if(!is(typeof(NID_pseudonym))) {
        private enum enumMixinStr_NID_pseudonym = `enum NID_pseudonym = 510;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pseudonym); }))) {
            mixin(enumMixinStr_NID_pseudonym);
        }
    }




    static if(!is(typeof(LN_pseudonym))) {
        private enum enumMixinStr_LN_pseudonym = `enum LN_pseudonym = "pseudonym";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pseudonym); }))) {
            mixin(enumMixinStr_LN_pseudonym);
        }
    }




    static if(!is(typeof(OBJ_dmdName))) {
        private enum enumMixinStr_OBJ_dmdName = `enum OBJ_dmdName = OBJ_X509 , 54L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dmdName); }))) {
            mixin(enumMixinStr_OBJ_dmdName);
        }
    }




    static if(!is(typeof(NID_dmdName))) {
        private enum enumMixinStr_NID_dmdName = `enum NID_dmdName = 892;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dmdName); }))) {
            mixin(enumMixinStr_NID_dmdName);
        }
    }




    static if(!is(typeof(SN_dmdName))) {
        private enum enumMixinStr_SN_dmdName = `enum SN_dmdName = "dmdName";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dmdName); }))) {
            mixin(enumMixinStr_SN_dmdName);
        }
    }




    static if(!is(typeof(OBJ_deltaRevocationList))) {
        private enum enumMixinStr_OBJ_deltaRevocationList = `enum OBJ_deltaRevocationList = OBJ_X509 , 53L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_deltaRevocationList); }))) {
            mixin(enumMixinStr_OBJ_deltaRevocationList);
        }
    }




    static if(!is(typeof(NID_deltaRevocationList))) {
        private enum enumMixinStr_NID_deltaRevocationList = `enum NID_deltaRevocationList = 891;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_deltaRevocationList); }))) {
            mixin(enumMixinStr_NID_deltaRevocationList);
        }
    }






    static if(!is(typeof(LN_deltaRevocationList))) {
        private enum enumMixinStr_LN_deltaRevocationList = `enum LN_deltaRevocationList = "deltaRevocationList";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_deltaRevocationList); }))) {
            mixin(enumMixinStr_LN_deltaRevocationList);
        }
    }




    static if(!is(typeof(OBJ_supportedAlgorithms))) {
        private enum enumMixinStr_OBJ_supportedAlgorithms = `enum OBJ_supportedAlgorithms = OBJ_X509 , 52L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_supportedAlgorithms); }))) {
            mixin(enumMixinStr_OBJ_supportedAlgorithms);
        }
    }




    static if(!is(typeof(NID_supportedAlgorithms))) {
        private enum enumMixinStr_NID_supportedAlgorithms = `enum NID_supportedAlgorithms = 890;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_supportedAlgorithms); }))) {
            mixin(enumMixinStr_NID_supportedAlgorithms);
        }
    }




    static if(!is(typeof(LN_supportedAlgorithms))) {
        private enum enumMixinStr_LN_supportedAlgorithms = `enum LN_supportedAlgorithms = "supportedAlgorithms";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_supportedAlgorithms); }))) {
            mixin(enumMixinStr_LN_supportedAlgorithms);
        }
    }




    static if(!is(typeof(OBJ_houseIdentifier))) {
        private enum enumMixinStr_OBJ_houseIdentifier = `enum OBJ_houseIdentifier = OBJ_X509 , 51L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_houseIdentifier); }))) {
            mixin(enumMixinStr_OBJ_houseIdentifier);
        }
    }




    static if(!is(typeof(NID_houseIdentifier))) {
        private enum enumMixinStr_NID_houseIdentifier = `enum NID_houseIdentifier = 889;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_houseIdentifier); }))) {
            mixin(enumMixinStr_NID_houseIdentifier);
        }
    }




    static if(!is(typeof(LN_houseIdentifier))) {
        private enum enumMixinStr_LN_houseIdentifier = `enum LN_houseIdentifier = "houseIdentifier";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_houseIdentifier); }))) {
            mixin(enumMixinStr_LN_houseIdentifier);
        }
    }




    static if(!is(typeof(OBJ_uniqueMember))) {
        private enum enumMixinStr_OBJ_uniqueMember = `enum OBJ_uniqueMember = OBJ_X509 , 50L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_uniqueMember); }))) {
            mixin(enumMixinStr_OBJ_uniqueMember);
        }
    }




    static if(!is(typeof(NID_uniqueMember))) {
        private enum enumMixinStr_NID_uniqueMember = `enum NID_uniqueMember = 888;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_uniqueMember); }))) {
            mixin(enumMixinStr_NID_uniqueMember);
        }
    }




    static if(!is(typeof(LN_uniqueMember))) {
        private enum enumMixinStr_LN_uniqueMember = `enum LN_uniqueMember = "uniqueMember";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_uniqueMember); }))) {
            mixin(enumMixinStr_LN_uniqueMember);
        }
    }




    static if(!is(typeof(OBJ_distinguishedName))) {
        private enum enumMixinStr_OBJ_distinguishedName = `enum OBJ_distinguishedName = OBJ_X509 , 49L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_distinguishedName); }))) {
            mixin(enumMixinStr_OBJ_distinguishedName);
        }
    }




    static if(!is(typeof(NID_distinguishedName))) {
        private enum enumMixinStr_NID_distinguishedName = `enum NID_distinguishedName = 887;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_distinguishedName); }))) {
            mixin(enumMixinStr_NID_distinguishedName);
        }
    }






    static if(!is(typeof(LN_distinguishedName))) {
        private enum enumMixinStr_LN_distinguishedName = `enum LN_distinguishedName = "distinguishedName";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_distinguishedName); }))) {
            mixin(enumMixinStr_LN_distinguishedName);
        }
    }




    static if(!is(typeof(OBJ_protocolInformation))) {
        private enum enumMixinStr_OBJ_protocolInformation = `enum OBJ_protocolInformation = OBJ_X509 , 48L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_protocolInformation); }))) {
            mixin(enumMixinStr_OBJ_protocolInformation);
        }
    }




    static if(!is(typeof(NID_protocolInformation))) {
        private enum enumMixinStr_NID_protocolInformation = `enum NID_protocolInformation = 886;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_protocolInformation); }))) {
            mixin(enumMixinStr_NID_protocolInformation);
        }
    }




    static if(!is(typeof(LN_protocolInformation))) {
        private enum enumMixinStr_LN_protocolInformation = `enum LN_protocolInformation = "protocolInformation";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_protocolInformation); }))) {
            mixin(enumMixinStr_LN_protocolInformation);
        }
    }




    static if(!is(typeof(OBJ_enhancedSearchGuide))) {
        private enum enumMixinStr_OBJ_enhancedSearchGuide = `enum OBJ_enhancedSearchGuide = OBJ_X509 , 47L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_enhancedSearchGuide); }))) {
            mixin(enumMixinStr_OBJ_enhancedSearchGuide);
        }
    }




    static if(!is(typeof(NID_enhancedSearchGuide))) {
        private enum enumMixinStr_NID_enhancedSearchGuide = `enum NID_enhancedSearchGuide = 885;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_enhancedSearchGuide); }))) {
            mixin(enumMixinStr_NID_enhancedSearchGuide);
        }
    }




    static if(!is(typeof(LN_enhancedSearchGuide))) {
        private enum enumMixinStr_LN_enhancedSearchGuide = `enum LN_enhancedSearchGuide = "enhancedSearchGuide";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_enhancedSearchGuide); }))) {
            mixin(enumMixinStr_LN_enhancedSearchGuide);
        }
    }




    static if(!is(typeof(OBJ_dnQualifier))) {
        private enum enumMixinStr_OBJ_dnQualifier = `enum OBJ_dnQualifier = OBJ_X509 , 46L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dnQualifier); }))) {
            mixin(enumMixinStr_OBJ_dnQualifier);
        }
    }




    static if(!is(typeof(NID_dnQualifier))) {
        private enum enumMixinStr_NID_dnQualifier = `enum NID_dnQualifier = 174;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dnQualifier); }))) {
            mixin(enumMixinStr_NID_dnQualifier);
        }
    }




    static if(!is(typeof(LN_dnQualifier))) {
        private enum enumMixinStr_LN_dnQualifier = `enum LN_dnQualifier = "dnQualifier";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_dnQualifier); }))) {
            mixin(enumMixinStr_LN_dnQualifier);
        }
    }




    static if(!is(typeof(SN_dnQualifier))) {
        private enum enumMixinStr_SN_dnQualifier = `enum SN_dnQualifier = "dnQualifier";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dnQualifier); }))) {
            mixin(enumMixinStr_SN_dnQualifier);
        }
    }




    static if(!is(typeof(OBJ_x500UniqueIdentifier))) {
        private enum enumMixinStr_OBJ_x500UniqueIdentifier = `enum OBJ_x500UniqueIdentifier = OBJ_X509 , 45L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_x500UniqueIdentifier); }))) {
            mixin(enumMixinStr_OBJ_x500UniqueIdentifier);
        }
    }






    static if(!is(typeof(NID_x500UniqueIdentifier))) {
        private enum enumMixinStr_NID_x500UniqueIdentifier = `enum NID_x500UniqueIdentifier = 503;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_x500UniqueIdentifier); }))) {
            mixin(enumMixinStr_NID_x500UniqueIdentifier);
        }
    }




    static if(!is(typeof(LN_x500UniqueIdentifier))) {
        private enum enumMixinStr_LN_x500UniqueIdentifier = `enum LN_x500UniqueIdentifier = "x500UniqueIdentifier";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_x500UniqueIdentifier); }))) {
            mixin(enumMixinStr_LN_x500UniqueIdentifier);
        }
    }




    static if(!is(typeof(OBJ_generationQualifier))) {
        private enum enumMixinStr_OBJ_generationQualifier = `enum OBJ_generationQualifier = OBJ_X509 , 44L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_generationQualifier); }))) {
            mixin(enumMixinStr_OBJ_generationQualifier);
        }
    }




    static if(!is(typeof(NID_generationQualifier))) {
        private enum enumMixinStr_NID_generationQualifier = `enum NID_generationQualifier = 509;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_generationQualifier); }))) {
            mixin(enumMixinStr_NID_generationQualifier);
        }
    }




    static if(!is(typeof(LN_generationQualifier))) {
        private enum enumMixinStr_LN_generationQualifier = `enum LN_generationQualifier = "generationQualifier";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_generationQualifier); }))) {
            mixin(enumMixinStr_LN_generationQualifier);
        }
    }




    static if(!is(typeof(OBJ_initials))) {
        private enum enumMixinStr_OBJ_initials = `enum OBJ_initials = OBJ_X509 , 43L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_initials); }))) {
            mixin(enumMixinStr_OBJ_initials);
        }
    }




    static if(!is(typeof(NID_initials))) {
        private enum enumMixinStr_NID_initials = `enum NID_initials = 101;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_initials); }))) {
            mixin(enumMixinStr_NID_initials);
        }
    }




    static if(!is(typeof(LN_initials))) {
        private enum enumMixinStr_LN_initials = `enum LN_initials = "initials";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_initials); }))) {
            mixin(enumMixinStr_LN_initials);
        }
    }




    static if(!is(typeof(SN_initials))) {
        private enum enumMixinStr_SN_initials = `enum SN_initials = "initials";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_initials); }))) {
            mixin(enumMixinStr_SN_initials);
        }
    }




    static if(!is(typeof(OBJ_givenName))) {
        private enum enumMixinStr_OBJ_givenName = `enum OBJ_givenName = OBJ_X509 , 42L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_givenName); }))) {
            mixin(enumMixinStr_OBJ_givenName);
        }
    }




    static if(!is(typeof(NID_givenName))) {
        private enum enumMixinStr_NID_givenName = `enum NID_givenName = 99;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_givenName); }))) {
            mixin(enumMixinStr_NID_givenName);
        }
    }




    static if(!is(typeof(LN_givenName))) {
        private enum enumMixinStr_LN_givenName = `enum LN_givenName = "givenName";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_givenName); }))) {
            mixin(enumMixinStr_LN_givenName);
        }
    }






    static if(!is(typeof(SN_givenName))) {
        private enum enumMixinStr_SN_givenName = `enum SN_givenName = "GN";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_givenName); }))) {
            mixin(enumMixinStr_SN_givenName);
        }
    }




    static if(!is(typeof(OBJ_name))) {
        private enum enumMixinStr_OBJ_name = `enum OBJ_name = OBJ_X509 , 41L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_name); }))) {
            mixin(enumMixinStr_OBJ_name);
        }
    }




    static if(!is(typeof(NID_name))) {
        private enum enumMixinStr_NID_name = `enum NID_name = 173;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_name); }))) {
            mixin(enumMixinStr_NID_name);
        }
    }




    static if(!is(typeof(LN_name))) {
        private enum enumMixinStr_LN_name = `enum LN_name = "name";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_name); }))) {
            mixin(enumMixinStr_LN_name);
        }
    }




    static if(!is(typeof(SN_name))) {
        private enum enumMixinStr_SN_name = `enum SN_name = "name";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_name); }))) {
            mixin(enumMixinStr_SN_name);
        }
    }




    static if(!is(typeof(OBJ_crossCertificatePair))) {
        private enum enumMixinStr_OBJ_crossCertificatePair = `enum OBJ_crossCertificatePair = OBJ_X509 , 40L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_crossCertificatePair); }))) {
            mixin(enumMixinStr_OBJ_crossCertificatePair);
        }
    }




    static if(!is(typeof(NID_crossCertificatePair))) {
        private enum enumMixinStr_NID_crossCertificatePair = `enum NID_crossCertificatePair = 884;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_crossCertificatePair); }))) {
            mixin(enumMixinStr_NID_crossCertificatePair);
        }
    }




    static if(!is(typeof(LN_crossCertificatePair))) {
        private enum enumMixinStr_LN_crossCertificatePair = `enum LN_crossCertificatePair = "crossCertificatePair";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_crossCertificatePair); }))) {
            mixin(enumMixinStr_LN_crossCertificatePair);
        }
    }




    static if(!is(typeof(OBJ_certificateRevocationList))) {
        private enum enumMixinStr_OBJ_certificateRevocationList = `enum OBJ_certificateRevocationList = OBJ_X509 , 39L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_certificateRevocationList); }))) {
            mixin(enumMixinStr_OBJ_certificateRevocationList);
        }
    }




    static if(!is(typeof(NID_certificateRevocationList))) {
        private enum enumMixinStr_NID_certificateRevocationList = `enum NID_certificateRevocationList = 883;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_certificateRevocationList); }))) {
            mixin(enumMixinStr_NID_certificateRevocationList);
        }
    }




    static if(!is(typeof(LN_certificateRevocationList))) {
        private enum enumMixinStr_LN_certificateRevocationList = `enum LN_certificateRevocationList = "certificateRevocationList";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_certificateRevocationList); }))) {
            mixin(enumMixinStr_LN_certificateRevocationList);
        }
    }




    static if(!is(typeof(OBJ_authorityRevocationList))) {
        private enum enumMixinStr_OBJ_authorityRevocationList = `enum OBJ_authorityRevocationList = OBJ_X509 , 38L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_authorityRevocationList); }))) {
            mixin(enumMixinStr_OBJ_authorityRevocationList);
        }
    }






    static if(!is(typeof(NID_authorityRevocationList))) {
        private enum enumMixinStr_NID_authorityRevocationList = `enum NID_authorityRevocationList = 882;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_authorityRevocationList); }))) {
            mixin(enumMixinStr_NID_authorityRevocationList);
        }
    }




    static if(!is(typeof(LN_authorityRevocationList))) {
        private enum enumMixinStr_LN_authorityRevocationList = `enum LN_authorityRevocationList = "authorityRevocationList";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_authorityRevocationList); }))) {
            mixin(enumMixinStr_LN_authorityRevocationList);
        }
    }




    static if(!is(typeof(OBJ_cACertificate))) {
        private enum enumMixinStr_OBJ_cACertificate = `enum OBJ_cACertificate = OBJ_X509 , 37L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_cACertificate); }))) {
            mixin(enumMixinStr_OBJ_cACertificate);
        }
    }




    static if(!is(typeof(NID_cACertificate))) {
        private enum enumMixinStr_NID_cACertificate = `enum NID_cACertificate = 881;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_cACertificate); }))) {
            mixin(enumMixinStr_NID_cACertificate);
        }
    }




    static if(!is(typeof(LN_cACertificate))) {
        private enum enumMixinStr_LN_cACertificate = `enum LN_cACertificate = "cACertificate";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_cACertificate); }))) {
            mixin(enumMixinStr_LN_cACertificate);
        }
    }




    static if(!is(typeof(OBJ_userCertificate))) {
        private enum enumMixinStr_OBJ_userCertificate = `enum OBJ_userCertificate = OBJ_X509 , 36L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_userCertificate); }))) {
            mixin(enumMixinStr_OBJ_userCertificate);
        }
    }




    static if(!is(typeof(NID_userCertificate))) {
        private enum enumMixinStr_NID_userCertificate = `enum NID_userCertificate = 880;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_userCertificate); }))) {
            mixin(enumMixinStr_NID_userCertificate);
        }
    }




    static if(!is(typeof(LN_userCertificate))) {
        private enum enumMixinStr_LN_userCertificate = `enum LN_userCertificate = "userCertificate";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_userCertificate); }))) {
            mixin(enumMixinStr_LN_userCertificate);
        }
    }




    static if(!is(typeof(OBJ_userPassword))) {
        private enum enumMixinStr_OBJ_userPassword = `enum OBJ_userPassword = OBJ_X509 , 35L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_userPassword); }))) {
            mixin(enumMixinStr_OBJ_userPassword);
        }
    }




    static if(!is(typeof(NID_userPassword))) {
        private enum enumMixinStr_NID_userPassword = `enum NID_userPassword = 879;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_userPassword); }))) {
            mixin(enumMixinStr_NID_userPassword);
        }
    }




    static if(!is(typeof(LN_userPassword))) {
        private enum enumMixinStr_LN_userPassword = `enum LN_userPassword = "userPassword";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_userPassword); }))) {
            mixin(enumMixinStr_LN_userPassword);
        }
    }




    static if(!is(typeof(OBJ_seeAlso))) {
        private enum enumMixinStr_OBJ_seeAlso = `enum OBJ_seeAlso = OBJ_X509 , 34L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_seeAlso); }))) {
            mixin(enumMixinStr_OBJ_seeAlso);
        }
    }






    static if(!is(typeof(NID_seeAlso))) {
        private enum enumMixinStr_NID_seeAlso = `enum NID_seeAlso = 878;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_seeAlso); }))) {
            mixin(enumMixinStr_NID_seeAlso);
        }
    }




    static if(!is(typeof(SN_seeAlso))) {
        private enum enumMixinStr_SN_seeAlso = `enum SN_seeAlso = "seeAlso";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_seeAlso); }))) {
            mixin(enumMixinStr_SN_seeAlso);
        }
    }




    static if(!is(typeof(OBJ_roleOccupant))) {
        private enum enumMixinStr_OBJ_roleOccupant = `enum OBJ_roleOccupant = OBJ_X509 , 33L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_roleOccupant); }))) {
            mixin(enumMixinStr_OBJ_roleOccupant);
        }
    }




    static if(!is(typeof(NID_roleOccupant))) {
        private enum enumMixinStr_NID_roleOccupant = `enum NID_roleOccupant = 877;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_roleOccupant); }))) {
            mixin(enumMixinStr_NID_roleOccupant);
        }
    }




    static if(!is(typeof(LN_roleOccupant))) {
        private enum enumMixinStr_LN_roleOccupant = `enum LN_roleOccupant = "roleOccupant";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_roleOccupant); }))) {
            mixin(enumMixinStr_LN_roleOccupant);
        }
    }




    static if(!is(typeof(OBJ_owner))) {
        private enum enumMixinStr_OBJ_owner = `enum OBJ_owner = OBJ_X509 , 32L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_owner); }))) {
            mixin(enumMixinStr_OBJ_owner);
        }
    }




    static if(!is(typeof(NID_owner))) {
        private enum enumMixinStr_NID_owner = `enum NID_owner = 876;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_owner); }))) {
            mixin(enumMixinStr_NID_owner);
        }
    }




    static if(!is(typeof(SN_owner))) {
        private enum enumMixinStr_SN_owner = `enum SN_owner = "owner";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_owner); }))) {
            mixin(enumMixinStr_SN_owner);
        }
    }




    static if(!is(typeof(OBJ_member))) {
        private enum enumMixinStr_OBJ_member = `enum OBJ_member = OBJ_X509 , 31L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_member); }))) {
            mixin(enumMixinStr_OBJ_member);
        }
    }




    static if(!is(typeof(NID_member))) {
        private enum enumMixinStr_NID_member = `enum NID_member = 875;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_member); }))) {
            mixin(enumMixinStr_NID_member);
        }
    }




    static if(!is(typeof(SN_member))) {
        private enum enumMixinStr_SN_member = `enum SN_member = "member";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_member); }))) {
            mixin(enumMixinStr_SN_member);
        }
    }




    static if(!is(typeof(OBJ_supportedApplicationContext))) {
        private enum enumMixinStr_OBJ_supportedApplicationContext = `enum OBJ_supportedApplicationContext = OBJ_X509 , 30L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_supportedApplicationContext); }))) {
            mixin(enumMixinStr_OBJ_supportedApplicationContext);
        }
    }






    static if(!is(typeof(NID_supportedApplicationContext))) {
        private enum enumMixinStr_NID_supportedApplicationContext = `enum NID_supportedApplicationContext = 874;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_supportedApplicationContext); }))) {
            mixin(enumMixinStr_NID_supportedApplicationContext);
        }
    }




    static if(!is(typeof(LN_supportedApplicationContext))) {
        private enum enumMixinStr_LN_supportedApplicationContext = `enum LN_supportedApplicationContext = "supportedApplicationContext";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_supportedApplicationContext); }))) {
            mixin(enumMixinStr_LN_supportedApplicationContext);
        }
    }




    static if(!is(typeof(OBJ_presentationAddress))) {
        private enum enumMixinStr_OBJ_presentationAddress = `enum OBJ_presentationAddress = OBJ_X509 , 29L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_presentationAddress); }))) {
            mixin(enumMixinStr_OBJ_presentationAddress);
        }
    }




    static if(!is(typeof(NID_presentationAddress))) {
        private enum enumMixinStr_NID_presentationAddress = `enum NID_presentationAddress = 873;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_presentationAddress); }))) {
            mixin(enumMixinStr_NID_presentationAddress);
        }
    }




    static if(!is(typeof(LN_presentationAddress))) {
        private enum enumMixinStr_LN_presentationAddress = `enum LN_presentationAddress = "presentationAddress";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_presentationAddress); }))) {
            mixin(enumMixinStr_LN_presentationAddress);
        }
    }




    static if(!is(typeof(OBJ_preferredDeliveryMethod))) {
        private enum enumMixinStr_OBJ_preferredDeliveryMethod = `enum OBJ_preferredDeliveryMethod = OBJ_X509 , 28L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_preferredDeliveryMethod); }))) {
            mixin(enumMixinStr_OBJ_preferredDeliveryMethod);
        }
    }




    static if(!is(typeof(NID_preferredDeliveryMethod))) {
        private enum enumMixinStr_NID_preferredDeliveryMethod = `enum NID_preferredDeliveryMethod = 872;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_preferredDeliveryMethod); }))) {
            mixin(enumMixinStr_NID_preferredDeliveryMethod);
        }
    }




    static if(!is(typeof(LN_preferredDeliveryMethod))) {
        private enum enumMixinStr_LN_preferredDeliveryMethod = `enum LN_preferredDeliveryMethod = "preferredDeliveryMethod";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_preferredDeliveryMethod); }))) {
            mixin(enumMixinStr_LN_preferredDeliveryMethod);
        }
    }




    static if(!is(typeof(OBJ_destinationIndicator))) {
        private enum enumMixinStr_OBJ_destinationIndicator = `enum OBJ_destinationIndicator = OBJ_X509 , 27L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_destinationIndicator); }))) {
            mixin(enumMixinStr_OBJ_destinationIndicator);
        }
    }




    static if(!is(typeof(NID_destinationIndicator))) {
        private enum enumMixinStr_NID_destinationIndicator = `enum NID_destinationIndicator = 871;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_destinationIndicator); }))) {
            mixin(enumMixinStr_NID_destinationIndicator);
        }
    }




    static if(!is(typeof(LN_destinationIndicator))) {
        private enum enumMixinStr_LN_destinationIndicator = `enum LN_destinationIndicator = "destinationIndicator";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_destinationIndicator); }))) {
            mixin(enumMixinStr_LN_destinationIndicator);
        }
    }




    static if(!is(typeof(OBJ_registeredAddress))) {
        private enum enumMixinStr_OBJ_registeredAddress = `enum OBJ_registeredAddress = OBJ_X509 , 26L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_registeredAddress); }))) {
            mixin(enumMixinStr_OBJ_registeredAddress);
        }
    }






    static if(!is(typeof(NID_registeredAddress))) {
        private enum enumMixinStr_NID_registeredAddress = `enum NID_registeredAddress = 870;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_registeredAddress); }))) {
            mixin(enumMixinStr_NID_registeredAddress);
        }
    }




    static if(!is(typeof(LN_registeredAddress))) {
        private enum enumMixinStr_LN_registeredAddress = `enum LN_registeredAddress = "registeredAddress";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_registeredAddress); }))) {
            mixin(enumMixinStr_LN_registeredAddress);
        }
    }




    static if(!is(typeof(OBJ_internationaliSDNNumber))) {
        private enum enumMixinStr_OBJ_internationaliSDNNumber = `enum OBJ_internationaliSDNNumber = OBJ_X509 , 25L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_internationaliSDNNumber); }))) {
            mixin(enumMixinStr_OBJ_internationaliSDNNumber);
        }
    }




    static if(!is(typeof(NID_internationaliSDNNumber))) {
        private enum enumMixinStr_NID_internationaliSDNNumber = `enum NID_internationaliSDNNumber = 869;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_internationaliSDNNumber); }))) {
            mixin(enumMixinStr_NID_internationaliSDNNumber);
        }
    }




    static if(!is(typeof(LN_internationaliSDNNumber))) {
        private enum enumMixinStr_LN_internationaliSDNNumber = `enum LN_internationaliSDNNumber = "internationaliSDNNumber";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_internationaliSDNNumber); }))) {
            mixin(enumMixinStr_LN_internationaliSDNNumber);
        }
    }




    static if(!is(typeof(OBJ_x121Address))) {
        private enum enumMixinStr_OBJ_x121Address = `enum OBJ_x121Address = OBJ_X509 , 24L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_x121Address); }))) {
            mixin(enumMixinStr_OBJ_x121Address);
        }
    }




    static if(!is(typeof(NID_x121Address))) {
        private enum enumMixinStr_NID_x121Address = `enum NID_x121Address = 868;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_x121Address); }))) {
            mixin(enumMixinStr_NID_x121Address);
        }
    }




    static if(!is(typeof(LN_x121Address))) {
        private enum enumMixinStr_LN_x121Address = `enum LN_x121Address = "x121Address";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_x121Address); }))) {
            mixin(enumMixinStr_LN_x121Address);
        }
    }




    static if(!is(typeof(OBJ_facsimileTelephoneNumber))) {
        private enum enumMixinStr_OBJ_facsimileTelephoneNumber = `enum OBJ_facsimileTelephoneNumber = OBJ_X509 , 23L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_facsimileTelephoneNumber); }))) {
            mixin(enumMixinStr_OBJ_facsimileTelephoneNumber);
        }
    }




    static if(!is(typeof(NID_facsimileTelephoneNumber))) {
        private enum enumMixinStr_NID_facsimileTelephoneNumber = `enum NID_facsimileTelephoneNumber = 867;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_facsimileTelephoneNumber); }))) {
            mixin(enumMixinStr_NID_facsimileTelephoneNumber);
        }
    }




    static if(!is(typeof(LN_facsimileTelephoneNumber))) {
        private enum enumMixinStr_LN_facsimileTelephoneNumber = `enum LN_facsimileTelephoneNumber = "facsimileTelephoneNumber";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_facsimileTelephoneNumber); }))) {
            mixin(enumMixinStr_LN_facsimileTelephoneNumber);
        }
    }




    static if(!is(typeof(OBJ_teletexTerminalIdentifier))) {
        private enum enumMixinStr_OBJ_teletexTerminalIdentifier = `enum OBJ_teletexTerminalIdentifier = OBJ_X509 , 22L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_teletexTerminalIdentifier); }))) {
            mixin(enumMixinStr_OBJ_teletexTerminalIdentifier);
        }
    }






    static if(!is(typeof(NID_teletexTerminalIdentifier))) {
        private enum enumMixinStr_NID_teletexTerminalIdentifier = `enum NID_teletexTerminalIdentifier = 866;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_teletexTerminalIdentifier); }))) {
            mixin(enumMixinStr_NID_teletexTerminalIdentifier);
        }
    }




    static if(!is(typeof(LN_teletexTerminalIdentifier))) {
        private enum enumMixinStr_LN_teletexTerminalIdentifier = `enum LN_teletexTerminalIdentifier = "teletexTerminalIdentifier";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_teletexTerminalIdentifier); }))) {
            mixin(enumMixinStr_LN_teletexTerminalIdentifier);
        }
    }




    static if(!is(typeof(OBJ_telexNumber))) {
        private enum enumMixinStr_OBJ_telexNumber = `enum OBJ_telexNumber = OBJ_X509 , 21L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_telexNumber); }))) {
            mixin(enumMixinStr_OBJ_telexNumber);
        }
    }




    static if(!is(typeof(NID_telexNumber))) {
        private enum enumMixinStr_NID_telexNumber = `enum NID_telexNumber = 865;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_telexNumber); }))) {
            mixin(enumMixinStr_NID_telexNumber);
        }
    }




    static if(!is(typeof(LN_telexNumber))) {
        private enum enumMixinStr_LN_telexNumber = `enum LN_telexNumber = "telexNumber";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_telexNumber); }))) {
            mixin(enumMixinStr_LN_telexNumber);
        }
    }




    static if(!is(typeof(OBJ_telephoneNumber))) {
        private enum enumMixinStr_OBJ_telephoneNumber = `enum OBJ_telephoneNumber = OBJ_X509 , 20L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_telephoneNumber); }))) {
            mixin(enumMixinStr_OBJ_telephoneNumber);
        }
    }




    static if(!is(typeof(NID_telephoneNumber))) {
        private enum enumMixinStr_NID_telephoneNumber = `enum NID_telephoneNumber = 864;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_telephoneNumber); }))) {
            mixin(enumMixinStr_NID_telephoneNumber);
        }
    }




    static if(!is(typeof(LN_telephoneNumber))) {
        private enum enumMixinStr_LN_telephoneNumber = `enum LN_telephoneNumber = "telephoneNumber";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_telephoneNumber); }))) {
            mixin(enumMixinStr_LN_telephoneNumber);
        }
    }




    static if(!is(typeof(OBJ_physicalDeliveryOfficeName))) {
        private enum enumMixinStr_OBJ_physicalDeliveryOfficeName = `enum OBJ_physicalDeliveryOfficeName = OBJ_X509 , 19L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_physicalDeliveryOfficeName); }))) {
            mixin(enumMixinStr_OBJ_physicalDeliveryOfficeName);
        }
    }




    static if(!is(typeof(NID_physicalDeliveryOfficeName))) {
        private enum enumMixinStr_NID_physicalDeliveryOfficeName = `enum NID_physicalDeliveryOfficeName = 863;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_physicalDeliveryOfficeName); }))) {
            mixin(enumMixinStr_NID_physicalDeliveryOfficeName);
        }
    }




    static if(!is(typeof(LN_physicalDeliveryOfficeName))) {
        private enum enumMixinStr_LN_physicalDeliveryOfficeName = `enum LN_physicalDeliveryOfficeName = "physicalDeliveryOfficeName";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_physicalDeliveryOfficeName); }))) {
            mixin(enumMixinStr_LN_physicalDeliveryOfficeName);
        }
    }




    static if(!is(typeof(OBJ_postOfficeBox))) {
        private enum enumMixinStr_OBJ_postOfficeBox = `enum OBJ_postOfficeBox = OBJ_X509 , 18L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_postOfficeBox); }))) {
            mixin(enumMixinStr_OBJ_postOfficeBox);
        }
    }






    static if(!is(typeof(NON_EMPTY_TRANSLATION_UNIT))) {
        private enum enumMixinStr_NON_EMPTY_TRANSLATION_UNIT = `enum NON_EMPTY_TRANSLATION_UNIT = static void * dummy = & dummy ;;`;
        static if(is(typeof({ mixin(enumMixinStr_NON_EMPTY_TRANSLATION_UNIT); }))) {
            mixin(enumMixinStr_NON_EMPTY_TRANSLATION_UNIT);
        }
    }




    static if(!is(typeof(NID_postOfficeBox))) {
        private enum enumMixinStr_NID_postOfficeBox = `enum NID_postOfficeBox = 862;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_postOfficeBox); }))) {
            mixin(enumMixinStr_NID_postOfficeBox);
        }
    }




    static if(!is(typeof(LN_postOfficeBox))) {
        private enum enumMixinStr_LN_postOfficeBox = `enum LN_postOfficeBox = "postOfficeBox";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_postOfficeBox); }))) {
            mixin(enumMixinStr_LN_postOfficeBox);
        }
    }




    static if(!is(typeof(OBJ_postalCode))) {
        private enum enumMixinStr_OBJ_postalCode = `enum OBJ_postalCode = OBJ_X509 , 17L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_postalCode); }))) {
            mixin(enumMixinStr_OBJ_postalCode);
        }
    }




    static if(!is(typeof(NID_postalCode))) {
        private enum enumMixinStr_NID_postalCode = `enum NID_postalCode = 661;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_postalCode); }))) {
            mixin(enumMixinStr_NID_postalCode);
        }
    }




    static if(!is(typeof(LN_postalCode))) {
        private enum enumMixinStr_LN_postalCode = `enum LN_postalCode = "postalCode";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_postalCode); }))) {
            mixin(enumMixinStr_LN_postalCode);
        }
    }




    static if(!is(typeof(OBJ_postalAddress))) {
        private enum enumMixinStr_OBJ_postalAddress = `enum OBJ_postalAddress = OBJ_X509 , 16L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_postalAddress); }))) {
            mixin(enumMixinStr_OBJ_postalAddress);
        }
    }




    static if(!is(typeof(NID_postalAddress))) {
        private enum enumMixinStr_NID_postalAddress = `enum NID_postalAddress = 861;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_postalAddress); }))) {
            mixin(enumMixinStr_NID_postalAddress);
        }
    }




    static if(!is(typeof(LN_postalAddress))) {
        private enum enumMixinStr_LN_postalAddress = `enum LN_postalAddress = "postalAddress";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_postalAddress); }))) {
            mixin(enumMixinStr_LN_postalAddress);
        }
    }




    static if(!is(typeof(OBJ_businessCategory))) {
        private enum enumMixinStr_OBJ_businessCategory = `enum OBJ_businessCategory = OBJ_X509 , 15L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_businessCategory); }))) {
            mixin(enumMixinStr_OBJ_businessCategory);
        }
    }




    static if(!is(typeof(NID_businessCategory))) {
        private enum enumMixinStr_NID_businessCategory = `enum NID_businessCategory = 860;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_businessCategory); }))) {
            mixin(enumMixinStr_NID_businessCategory);
        }
    }




    static if(!is(typeof(LN_businessCategory))) {
        private enum enumMixinStr_LN_businessCategory = `enum LN_businessCategory = "businessCategory";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_businessCategory); }))) {
            mixin(enumMixinStr_LN_businessCategory);
        }
    }




    static if(!is(typeof(OBJ_searchGuide))) {
        private enum enumMixinStr_OBJ_searchGuide = `enum OBJ_searchGuide = OBJ_X509 , 14L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_searchGuide); }))) {
            mixin(enumMixinStr_OBJ_searchGuide);
        }
    }






    static if(!is(typeof(NID_searchGuide))) {
        private enum enumMixinStr_NID_searchGuide = `enum NID_searchGuide = 859;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_searchGuide); }))) {
            mixin(enumMixinStr_NID_searchGuide);
        }
    }




    static if(!is(typeof(LN_searchGuide))) {
        private enum enumMixinStr_LN_searchGuide = `enum LN_searchGuide = "searchGuide";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_searchGuide); }))) {
            mixin(enumMixinStr_LN_searchGuide);
        }
    }




    static if(!is(typeof(OBJ_description))) {
        private enum enumMixinStr_OBJ_description = `enum OBJ_description = OBJ_X509 , 13L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_description); }))) {
            mixin(enumMixinStr_OBJ_description);
        }
    }




    static if(!is(typeof(NID_description))) {
        private enum enumMixinStr_NID_description = `enum NID_description = 107;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_description); }))) {
            mixin(enumMixinStr_NID_description);
        }
    }




    static if(!is(typeof(LN_description))) {
        private enum enumMixinStr_LN_description = `enum LN_description = "description";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_description); }))) {
            mixin(enumMixinStr_LN_description);
        }
    }




    static if(!is(typeof(OBJ_title))) {
        private enum enumMixinStr_OBJ_title = `enum OBJ_title = OBJ_X509 , 12L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_title); }))) {
            mixin(enumMixinStr_OBJ_title);
        }
    }




    static if(!is(typeof(NID_title))) {
        private enum enumMixinStr_NID_title = `enum NID_title = 106;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_title); }))) {
            mixin(enumMixinStr_NID_title);
        }
    }




    static if(!is(typeof(LN_title))) {
        private enum enumMixinStr_LN_title = `enum LN_title = "title";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_title); }))) {
            mixin(enumMixinStr_LN_title);
        }
    }




    static if(!is(typeof(SN_title))) {
        private enum enumMixinStr_SN_title = `enum SN_title = "title";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_title); }))) {
            mixin(enumMixinStr_SN_title);
        }
    }




    static if(!is(typeof(OBJ_organizationalUnitName))) {
        private enum enumMixinStr_OBJ_organizationalUnitName = `enum OBJ_organizationalUnitName = OBJ_X509 , 11L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_organizationalUnitName); }))) {
            mixin(enumMixinStr_OBJ_organizationalUnitName);
        }
    }




    static if(!is(typeof(NID_organizationalUnitName))) {
        private enum enumMixinStr_NID_organizationalUnitName = `enum NID_organizationalUnitName = 18;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_organizationalUnitName); }))) {
            mixin(enumMixinStr_NID_organizationalUnitName);
        }
    }




    static if(!is(typeof(LN_organizationalUnitName))) {
        private enum enumMixinStr_LN_organizationalUnitName = `enum LN_organizationalUnitName = "organizationalUnitName";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_organizationalUnitName); }))) {
            mixin(enumMixinStr_LN_organizationalUnitName);
        }
    }




    static if(!is(typeof(SN_organizationalUnitName))) {
        private enum enumMixinStr_SN_organizationalUnitName = `enum SN_organizationalUnitName = "OU";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_organizationalUnitName); }))) {
            mixin(enumMixinStr_SN_organizationalUnitName);
        }
    }




    static if(!is(typeof(OBJ_organizationName))) {
        private enum enumMixinStr_OBJ_organizationName = `enum OBJ_organizationName = OBJ_X509 , 10L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_organizationName); }))) {
            mixin(enumMixinStr_OBJ_organizationName);
        }
    }




    static if(!is(typeof(NID_organizationName))) {
        private enum enumMixinStr_NID_organizationName = `enum NID_organizationName = 17;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_organizationName); }))) {
            mixin(enumMixinStr_NID_organizationName);
        }
    }




    static if(!is(typeof(LN_organizationName))) {
        private enum enumMixinStr_LN_organizationName = `enum LN_organizationName = "organizationName";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_organizationName); }))) {
            mixin(enumMixinStr_LN_organizationName);
        }
    }




    static if(!is(typeof(OPENSSL_FILE))) {
        private enum enumMixinStr_OPENSSL_FILE = `enum OPENSSL_FILE = "./sslimports.d.tmp";`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_FILE); }))) {
            mixin(enumMixinStr_OPENSSL_FILE);
        }
    }




    static if(!is(typeof(OPENSSL_LINE))) {
        private enum enumMixinStr_OPENSSL_LINE = `enum OPENSSL_LINE = 30108;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_LINE); }))) {
            mixin(enumMixinStr_OPENSSL_LINE);
        }
    }




    static if(!is(typeof(SN_organizationName))) {
        private enum enumMixinStr_SN_organizationName = `enum SN_organizationName = "O";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_organizationName); }))) {
            mixin(enumMixinStr_SN_organizationName);
        }
    }




    static if(!is(typeof(OBJ_streetAddress))) {
        private enum enumMixinStr_OBJ_streetAddress = `enum OBJ_streetAddress = OBJ_X509 , 9L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_streetAddress); }))) {
            mixin(enumMixinStr_OBJ_streetAddress);
        }
    }




    static if(!is(typeof(NID_streetAddress))) {
        private enum enumMixinStr_NID_streetAddress = `enum NID_streetAddress = 660;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_streetAddress); }))) {
            mixin(enumMixinStr_NID_streetAddress);
        }
    }




    static if(!is(typeof(LN_streetAddress))) {
        private enum enumMixinStr_LN_streetAddress = `enum LN_streetAddress = "streetAddress";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_streetAddress); }))) {
            mixin(enumMixinStr_LN_streetAddress);
        }
    }




    static if(!is(typeof(SN_streetAddress))) {
        private enum enumMixinStr_SN_streetAddress = `enum SN_streetAddress = "street";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_streetAddress); }))) {
            mixin(enumMixinStr_SN_streetAddress);
        }
    }




    static if(!is(typeof(OBJ_stateOrProvinceName))) {
        private enum enumMixinStr_OBJ_stateOrProvinceName = `enum OBJ_stateOrProvinceName = OBJ_X509 , 8L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_stateOrProvinceName); }))) {
            mixin(enumMixinStr_OBJ_stateOrProvinceName);
        }
    }




    static if(!is(typeof(NID_stateOrProvinceName))) {
        private enum enumMixinStr_NID_stateOrProvinceName = `enum NID_stateOrProvinceName = 16;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_stateOrProvinceName); }))) {
            mixin(enumMixinStr_NID_stateOrProvinceName);
        }
    }




    static if(!is(typeof(LN_stateOrProvinceName))) {
        private enum enumMixinStr_LN_stateOrProvinceName = `enum LN_stateOrProvinceName = "stateOrProvinceName";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_stateOrProvinceName); }))) {
            mixin(enumMixinStr_LN_stateOrProvinceName);
        }
    }




    static if(!is(typeof(SN_stateOrProvinceName))) {
        private enum enumMixinStr_SN_stateOrProvinceName = `enum SN_stateOrProvinceName = "ST";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_stateOrProvinceName); }))) {
            mixin(enumMixinStr_SN_stateOrProvinceName);
        }
    }




    static if(!is(typeof(OBJ_localityName))) {
        private enum enumMixinStr_OBJ_localityName = `enum OBJ_localityName = OBJ_X509 , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_localityName); }))) {
            mixin(enumMixinStr_OBJ_localityName);
        }
    }




    static if(!is(typeof(NID_localityName))) {
        private enum enumMixinStr_NID_localityName = `enum NID_localityName = 15;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_localityName); }))) {
            mixin(enumMixinStr_NID_localityName);
        }
    }




    static if(!is(typeof(LN_localityName))) {
        private enum enumMixinStr_LN_localityName = `enum LN_localityName = "localityName";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_localityName); }))) {
            mixin(enumMixinStr_LN_localityName);
        }
    }




    static if(!is(typeof(OPENSSL_MIN_API))) {
        private enum enumMixinStr_OPENSSL_MIN_API = `enum OPENSSL_MIN_API = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_MIN_API); }))) {
            mixin(enumMixinStr_OPENSSL_MIN_API);
        }
    }




    static if(!is(typeof(SN_localityName))) {
        private enum enumMixinStr_SN_localityName = `enum SN_localityName = "L";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_localityName); }))) {
            mixin(enumMixinStr_SN_localityName);
        }
    }




    static if(!is(typeof(OBJ_countryName))) {
        private enum enumMixinStr_OBJ_countryName = `enum OBJ_countryName = OBJ_X509 , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_countryName); }))) {
            mixin(enumMixinStr_OBJ_countryName);
        }
    }




    static if(!is(typeof(NID_countryName))) {
        private enum enumMixinStr_NID_countryName = `enum NID_countryName = 14;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_countryName); }))) {
            mixin(enumMixinStr_NID_countryName);
        }
    }




    static if(!is(typeof(LN_countryName))) {
        private enum enumMixinStr_LN_countryName = `enum LN_countryName = "countryName";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_countryName); }))) {
            mixin(enumMixinStr_LN_countryName);
        }
    }




    static if(!is(typeof(SN_countryName))) {
        private enum enumMixinStr_SN_countryName = `enum SN_countryName = "C";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_countryName); }))) {
            mixin(enumMixinStr_SN_countryName);
        }
    }




    static if(!is(typeof(OBJ_serialNumber))) {
        private enum enumMixinStr_OBJ_serialNumber = `enum OBJ_serialNumber = OBJ_X509 , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_serialNumber); }))) {
            mixin(enumMixinStr_OBJ_serialNumber);
        }
    }




    static if(!is(typeof(NID_serialNumber))) {
        private enum enumMixinStr_NID_serialNumber = `enum NID_serialNumber = 105;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_serialNumber); }))) {
            mixin(enumMixinStr_NID_serialNumber);
        }
    }




    static if(!is(typeof(LN_serialNumber))) {
        private enum enumMixinStr_LN_serialNumber = `enum LN_serialNumber = "serialNumber";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_serialNumber); }))) {
            mixin(enumMixinStr_LN_serialNumber);
        }
    }




    static if(!is(typeof(OBJ_surname))) {
        private enum enumMixinStr_OBJ_surname = `enum OBJ_surname = OBJ_X509 , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_surname); }))) {
            mixin(enumMixinStr_OBJ_surname);
        }
    }




    static if(!is(typeof(NID_surname))) {
        private enum enumMixinStr_NID_surname = `enum NID_surname = 100;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_surname); }))) {
            mixin(enumMixinStr_NID_surname);
        }
    }




    static if(!is(typeof(LN_surname))) {
        private enum enumMixinStr_LN_surname = `enum LN_surname = "surname";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_surname); }))) {
            mixin(enumMixinStr_LN_surname);
        }
    }




    static if(!is(typeof(SN_surname))) {
        private enum enumMixinStr_SN_surname = `enum SN_surname = "SN";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_surname); }))) {
            mixin(enumMixinStr_SN_surname);
        }
    }




    static if(!is(typeof(OBJ_commonName))) {
        private enum enumMixinStr_OBJ_commonName = `enum OBJ_commonName = OBJ_X509 , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_commonName); }))) {
            mixin(enumMixinStr_OBJ_commonName);
        }
    }




    static if(!is(typeof(NID_commonName))) {
        private enum enumMixinStr_NID_commonName = `enum NID_commonName = 13;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_commonName); }))) {
            mixin(enumMixinStr_NID_commonName);
        }
    }




    static if(!is(typeof(LN_commonName))) {
        private enum enumMixinStr_LN_commonName = `enum LN_commonName = "commonName";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_commonName); }))) {
            mixin(enumMixinStr_LN_commonName);
        }
    }




    static if(!is(typeof(SN_commonName))) {
        private enum enumMixinStr_SN_commonName = `enum SN_commonName = "CN";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_commonName); }))) {
            mixin(enumMixinStr_SN_commonName);
        }
    }




    static if(!is(typeof(OBJ_X509))) {
        private enum enumMixinStr_OBJ_X509 = `enum OBJ_X509 = OBJ_X500 , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X509); }))) {
            mixin(enumMixinStr_OBJ_X509);
        }
    }




    static if(!is(typeof(NID_X509))) {
        private enum enumMixinStr_NID_X509 = `enum NID_X509 = 12;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X509); }))) {
            mixin(enumMixinStr_NID_X509);
        }
    }




    static if(!is(typeof(SN_X509))) {
        private enum enumMixinStr_SN_X509 = `enum SN_X509 = "X509";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X509); }))) {
            mixin(enumMixinStr_SN_X509);
        }
    }




    static if(!is(typeof(OBJ_X500))) {
        private enum enumMixinStr_OBJ_X500 = `enum OBJ_X500 = 2L , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X500); }))) {
            mixin(enumMixinStr_OBJ_X500);
        }
    }




    static if(!is(typeof(NID_X500))) {
        private enum enumMixinStr_NID_X500 = `enum NID_X500 = 11;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X500); }))) {
            mixin(enumMixinStr_NID_X500);
        }
    }




    static if(!is(typeof(LN_X500))) {
        private enum enumMixinStr_LN_X500 = `enum LN_X500 = "directory services (X.500)";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_X500); }))) {
            mixin(enumMixinStr_LN_X500);
        }
    }




    static if(!is(typeof(SN_X500))) {
        private enum enumMixinStr_SN_X500 = `enum SN_X500 = "X500";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X500); }))) {
            mixin(enumMixinStr_SN_X500);
        }
    }




    static if(!is(typeof(OBJ_sxnet))) {
        private enum enumMixinStr_OBJ_sxnet = `enum OBJ_sxnet = 1L , 3L , 101L , 1L , 4L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sxnet); }))) {
            mixin(enumMixinStr_OBJ_sxnet);
        }
    }




    static if(!is(typeof(NID_sxnet))) {
        private enum enumMixinStr_NID_sxnet = `enum NID_sxnet = 143;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sxnet); }))) {
            mixin(enumMixinStr_NID_sxnet);
        }
    }




    static if(!is(typeof(LN_sxnet))) {
        private enum enumMixinStr_LN_sxnet = `enum LN_sxnet = "Strong Extranet ID";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sxnet); }))) {
            mixin(enumMixinStr_LN_sxnet);
        }
    }




    static if(!is(typeof(SN_sxnet))) {
        private enum enumMixinStr_SN_sxnet = `enum SN_sxnet = "SXNetID";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sxnet); }))) {
            mixin(enumMixinStr_SN_sxnet);
        }
    }




    static if(!is(typeof(OBJ_blake2s256))) {
        private enum enumMixinStr_OBJ_blake2s256 = `enum OBJ_blake2s256 = 1L , 3L , 6L , 1L , 4L , 1L , 1722L , 12L , 2L , 2L , 8L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_blake2s256); }))) {
            mixin(enumMixinStr_OBJ_blake2s256);
        }
    }




    static if(!is(typeof(NID_blake2s256))) {
        private enum enumMixinStr_NID_blake2s256 = `enum NID_blake2s256 = 1057;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_blake2s256); }))) {
            mixin(enumMixinStr_NID_blake2s256);
        }
    }




    static if(!is(typeof(LN_blake2s256))) {
        private enum enumMixinStr_LN_blake2s256 = `enum LN_blake2s256 = "blake2s256";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_blake2s256); }))) {
            mixin(enumMixinStr_LN_blake2s256);
        }
    }




    static if(!is(typeof(SN_blake2s256))) {
        private enum enumMixinStr_SN_blake2s256 = `enum SN_blake2s256 = "BLAKE2s256";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_blake2s256); }))) {
            mixin(enumMixinStr_SN_blake2s256);
        }
    }




    static if(!is(typeof(OBJ_blake2b512))) {
        private enum enumMixinStr_OBJ_blake2b512 = `enum OBJ_blake2b512 = 1L , 3L , 6L , 1L , 4L , 1L , 1722L , 12L , 2L , 1L , 16L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_blake2b512); }))) {
            mixin(enumMixinStr_OBJ_blake2b512);
        }
    }




    static if(!is(typeof(NID_blake2b512))) {
        private enum enumMixinStr_NID_blake2b512 = `enum NID_blake2b512 = 1056;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_blake2b512); }))) {
            mixin(enumMixinStr_NID_blake2b512);
        }
    }




    static if(!is(typeof(LN_blake2b512))) {
        private enum enumMixinStr_LN_blake2b512 = `enum LN_blake2b512 = "blake2b512";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_blake2b512); }))) {
            mixin(enumMixinStr_LN_blake2b512);
        }
    }




    static if(!is(typeof(SN_blake2b512))) {
        private enum enumMixinStr_SN_blake2b512 = `enum SN_blake2b512 = "BLAKE2b512";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_blake2b512); }))) {
            mixin(enumMixinStr_SN_blake2b512);
        }
    }




    static if(!is(typeof(OBJ_ripemd160WithRSA))) {
        private enum enumMixinStr_OBJ_ripemd160WithRSA = `enum OBJ_ripemd160WithRSA = 1L , 3L , 36L , 3L , 3L , 1L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ripemd160WithRSA); }))) {
            mixin(enumMixinStr_OBJ_ripemd160WithRSA);
        }
    }




    static if(!is(typeof(NID_ripemd160WithRSA))) {
        private enum enumMixinStr_NID_ripemd160WithRSA = `enum NID_ripemd160WithRSA = 119;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ripemd160WithRSA); }))) {
            mixin(enumMixinStr_NID_ripemd160WithRSA);
        }
    }




    static if(!is(typeof(OPENSSL_API_COMPAT))) {
        private enum enumMixinStr_OPENSSL_API_COMPAT = `enum OPENSSL_API_COMPAT = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_API_COMPAT); }))) {
            mixin(enumMixinStr_OPENSSL_API_COMPAT);
        }
    }




    static if(!is(typeof(LN_ripemd160WithRSA))) {
        private enum enumMixinStr_LN_ripemd160WithRSA = `enum LN_ripemd160WithRSA = "ripemd160WithRSA";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ripemd160WithRSA); }))) {
            mixin(enumMixinStr_LN_ripemd160WithRSA);
        }
    }




    static if(!is(typeof(SN_ripemd160WithRSA))) {
        private enum enumMixinStr_SN_ripemd160WithRSA = `enum SN_ripemd160WithRSA = "RSA-RIPEMD160";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ripemd160WithRSA); }))) {
            mixin(enumMixinStr_SN_ripemd160WithRSA);
        }
    }




    static if(!is(typeof(OBJ_ripemd160))) {
        private enum enumMixinStr_OBJ_ripemd160 = `enum OBJ_ripemd160 = 1L , 3L , 36L , 3L , 2L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ripemd160); }))) {
            mixin(enumMixinStr_OBJ_ripemd160);
        }
    }




    static if(!is(typeof(NID_ripemd160))) {
        private enum enumMixinStr_NID_ripemd160 = `enum NID_ripemd160 = 117;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ripemd160); }))) {
            mixin(enumMixinStr_NID_ripemd160);
        }
    }




    static if(!is(typeof(LN_ripemd160))) {
        private enum enumMixinStr_LN_ripemd160 = `enum LN_ripemd160 = "ripemd160";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ripemd160); }))) {
            mixin(enumMixinStr_LN_ripemd160);
        }
    }




    static if(!is(typeof(SN_ripemd160))) {
        private enum enumMixinStr_SN_ripemd160 = `enum SN_ripemd160 = "RIPEMD160";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ripemd160); }))) {
            mixin(enumMixinStr_SN_ripemd160);
        }
    }




    static if(!is(typeof(OBJ_sha1WithRSA))) {
        private enum enumMixinStr_OBJ_sha1WithRSA = `enum OBJ_sha1WithRSA = OBJ_algorithm , 29L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sha1WithRSA); }))) {
            mixin(enumMixinStr_OBJ_sha1WithRSA);
        }
    }




    static if(!is(typeof(NID_sha1WithRSA))) {
        private enum enumMixinStr_NID_sha1WithRSA = `enum NID_sha1WithRSA = 115;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sha1WithRSA); }))) {
            mixin(enumMixinStr_NID_sha1WithRSA);
        }
    }




    static if(!is(typeof(LN_sha1WithRSA))) {
        private enum enumMixinStr_LN_sha1WithRSA = `enum LN_sha1WithRSA = "sha1WithRSA";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sha1WithRSA); }))) {
            mixin(enumMixinStr_LN_sha1WithRSA);
        }
    }




    static if(!is(typeof(SN_sha1WithRSA))) {
        private enum enumMixinStr_SN_sha1WithRSA = `enum SN_sha1WithRSA = "RSA-SHA1-2";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sha1WithRSA); }))) {
            mixin(enumMixinStr_SN_sha1WithRSA);
        }
    }




    static if(!is(typeof(OBJ_dsaWithSHA1_2))) {
        private enum enumMixinStr_OBJ_dsaWithSHA1_2 = `enum OBJ_dsaWithSHA1_2 = OBJ_algorithm , 27L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dsaWithSHA1_2); }))) {
            mixin(enumMixinStr_OBJ_dsaWithSHA1_2);
        }
    }




    static if(!is(typeof(NID_dsaWithSHA1_2))) {
        private enum enumMixinStr_NID_dsaWithSHA1_2 = `enum NID_dsaWithSHA1_2 = 70;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dsaWithSHA1_2); }))) {
            mixin(enumMixinStr_NID_dsaWithSHA1_2);
        }
    }




    static if(!is(typeof(LN_dsaWithSHA1_2))) {
        private enum enumMixinStr_LN_dsaWithSHA1_2 = `enum LN_dsaWithSHA1_2 = "dsaWithSHA1-old";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_dsaWithSHA1_2); }))) {
            mixin(enumMixinStr_LN_dsaWithSHA1_2);
        }
    }






    static if(!is(typeof(SN_dsaWithSHA1_2))) {
        private enum enumMixinStr_SN_dsaWithSHA1_2 = `enum SN_dsaWithSHA1_2 = "DSA-SHA1-old";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dsaWithSHA1_2); }))) {
            mixin(enumMixinStr_SN_dsaWithSHA1_2);
        }
    }




    static if(!is(typeof(OBJ_sha1))) {
        private enum enumMixinStr_OBJ_sha1 = `enum OBJ_sha1 = OBJ_algorithm , 26L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sha1); }))) {
            mixin(enumMixinStr_OBJ_sha1);
        }
    }




    static if(!is(typeof(NID_sha1))) {
        private enum enumMixinStr_NID_sha1 = `enum NID_sha1 = 64;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sha1); }))) {
            mixin(enumMixinStr_NID_sha1);
        }
    }




    static if(!is(typeof(LN_sha1))) {
        private enum enumMixinStr_LN_sha1 = `enum LN_sha1 = "sha1";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sha1); }))) {
            mixin(enumMixinStr_LN_sha1);
        }
    }




    static if(!is(typeof(SN_sha1))) {
        private enum enumMixinStr_SN_sha1 = `enum SN_sha1 = "SHA1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sha1); }))) {
            mixin(enumMixinStr_SN_sha1);
        }
    }




    static if(!is(typeof(OBJ_sha))) {
        private enum enumMixinStr_OBJ_sha = `enum OBJ_sha = OBJ_algorithm , 18L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sha); }))) {
            mixin(enumMixinStr_OBJ_sha);
        }
    }




    static if(!is(typeof(NID_sha))) {
        private enum enumMixinStr_NID_sha = `enum NID_sha = 41;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sha); }))) {
            mixin(enumMixinStr_NID_sha);
        }
    }




    static if(!is(typeof(LN_sha))) {
        private enum enumMixinStr_LN_sha = `enum LN_sha = "sha";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sha); }))) {
            mixin(enumMixinStr_LN_sha);
        }
    }




    static if(!is(typeof(SN_sha))) {
        private enum enumMixinStr_SN_sha = `enum SN_sha = "SHA";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sha); }))) {
            mixin(enumMixinStr_SN_sha);
        }
    }




    static if(!is(typeof(NID_desx_cbc))) {
        private enum enumMixinStr_NID_desx_cbc = `enum NID_desx_cbc = 80;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_desx_cbc); }))) {
            mixin(enumMixinStr_NID_desx_cbc);
        }
    }




    static if(!is(typeof(LN_desx_cbc))) {
        private enum enumMixinStr_LN_desx_cbc = `enum LN_desx_cbc = "desx-cbc";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_desx_cbc); }))) {
            mixin(enumMixinStr_LN_desx_cbc);
        }
    }




    static if(!is(typeof(SN_desx_cbc))) {
        private enum enumMixinStr_SN_desx_cbc = `enum SN_desx_cbc = "DESX-CBC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_desx_cbc); }))) {
            mixin(enumMixinStr_SN_desx_cbc);
        }
    }




    static if(!is(typeof(NID_des_ede3_ofb64))) {
        private enum enumMixinStr_NID_des_ede3_ofb64 = `enum NID_des_ede3_ofb64 = 63;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_des_ede3_ofb64); }))) {
            mixin(enumMixinStr_NID_des_ede3_ofb64);
        }
    }






    static if(!is(typeof(LN_des_ede3_ofb64))) {
        private enum enumMixinStr_LN_des_ede3_ofb64 = `enum LN_des_ede3_ofb64 = "des-ede3-ofb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_des_ede3_ofb64); }))) {
            mixin(enumMixinStr_LN_des_ede3_ofb64);
        }
    }




    static if(!is(typeof(SN_des_ede3_ofb64))) {
        private enum enumMixinStr_SN_des_ede3_ofb64 = `enum SN_des_ede3_ofb64 = "DES-EDE3-OFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_des_ede3_ofb64); }))) {
            mixin(enumMixinStr_SN_des_ede3_ofb64);
        }
    }




    static if(!is(typeof(NID_des_ede_ofb64))) {
        private enum enumMixinStr_NID_des_ede_ofb64 = `enum NID_des_ede_ofb64 = 62;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_des_ede_ofb64); }))) {
            mixin(enumMixinStr_NID_des_ede_ofb64);
        }
    }




    static if(!is(typeof(LN_des_ede_ofb64))) {
        private enum enumMixinStr_LN_des_ede_ofb64 = `enum LN_des_ede_ofb64 = "des-ede-ofb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_des_ede_ofb64); }))) {
            mixin(enumMixinStr_LN_des_ede_ofb64);
        }
    }




    static if(!is(typeof(SN_des_ede_ofb64))) {
        private enum enumMixinStr_SN_des_ede_ofb64 = `enum SN_des_ede_ofb64 = "DES-EDE-OFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_des_ede_ofb64); }))) {
            mixin(enumMixinStr_SN_des_ede_ofb64);
        }
    }




    static if(!is(typeof(NID_des_ede3_cfb64))) {
        private enum enumMixinStr_NID_des_ede3_cfb64 = `enum NID_des_ede3_cfb64 = 61;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_des_ede3_cfb64); }))) {
            mixin(enumMixinStr_NID_des_ede3_cfb64);
        }
    }




    static if(!is(typeof(LN_des_ede3_cfb64))) {
        private enum enumMixinStr_LN_des_ede3_cfb64 = `enum LN_des_ede3_cfb64 = "des-ede3-cfb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_des_ede3_cfb64); }))) {
            mixin(enumMixinStr_LN_des_ede3_cfb64);
        }
    }




    static if(!is(typeof(SN_des_ede3_cfb64))) {
        private enum enumMixinStr_SN_des_ede3_cfb64 = `enum SN_des_ede3_cfb64 = "DES-EDE3-CFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_des_ede3_cfb64); }))) {
            mixin(enumMixinStr_SN_des_ede3_cfb64);
        }
    }




    static if(!is(typeof(NID_des_ede_cfb64))) {
        private enum enumMixinStr_NID_des_ede_cfb64 = `enum NID_des_ede_cfb64 = 60;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_des_ede_cfb64); }))) {
            mixin(enumMixinStr_NID_des_ede_cfb64);
        }
    }




    static if(!is(typeof(LN_des_ede_cfb64))) {
        private enum enumMixinStr_LN_des_ede_cfb64 = `enum LN_des_ede_cfb64 = "des-ede-cfb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_des_ede_cfb64); }))) {
            mixin(enumMixinStr_LN_des_ede_cfb64);
        }
    }




    static if(!is(typeof(SN_des_ede_cfb64))) {
        private enum enumMixinStr_SN_des_ede_cfb64 = `enum SN_des_ede_cfb64 = "DES-EDE-CFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_des_ede_cfb64); }))) {
            mixin(enumMixinStr_SN_des_ede_cfb64);
        }
    }




    static if(!is(typeof(NID_des_ede_cbc))) {
        private enum enumMixinStr_NID_des_ede_cbc = `enum NID_des_ede_cbc = 43;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_des_ede_cbc); }))) {
            mixin(enumMixinStr_NID_des_ede_cbc);
        }
    }




    static if(!is(typeof(LN_des_ede_cbc))) {
        private enum enumMixinStr_LN_des_ede_cbc = `enum LN_des_ede_cbc = "des-ede-cbc";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_des_ede_cbc); }))) {
            mixin(enumMixinStr_LN_des_ede_cbc);
        }
    }






    static if(!is(typeof(SN_des_ede_cbc))) {
        private enum enumMixinStr_SN_des_ede_cbc = `enum SN_des_ede_cbc = "DES-EDE-CBC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_des_ede_cbc); }))) {
            mixin(enumMixinStr_SN_des_ede_cbc);
        }
    }




    static if(!is(typeof(NID_des_ede3_ecb))) {
        private enum enumMixinStr_NID_des_ede3_ecb = `enum NID_des_ede3_ecb = 33;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_des_ede3_ecb); }))) {
            mixin(enumMixinStr_NID_des_ede3_ecb);
        }
    }




    static if(!is(typeof(LN_des_ede3_ecb))) {
        private enum enumMixinStr_LN_des_ede3_ecb = `enum LN_des_ede3_ecb = "des-ede3";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_des_ede3_ecb); }))) {
            mixin(enumMixinStr_LN_des_ede3_ecb);
        }
    }




    static if(!is(typeof(SN_des_ede3_ecb))) {
        private enum enumMixinStr_SN_des_ede3_ecb = `enum SN_des_ede3_ecb = "DES-EDE3";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_des_ede3_ecb); }))) {
            mixin(enumMixinStr_SN_des_ede3_ecb);
        }
    }




    static if(!is(typeof(OBJ_des_ede_ecb))) {
        private enum enumMixinStr_OBJ_des_ede_ecb = `enum OBJ_des_ede_ecb = OBJ_algorithm , 17L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_des_ede_ecb); }))) {
            mixin(enumMixinStr_OBJ_des_ede_ecb);
        }
    }




    static if(!is(typeof(NID_des_ede_ecb))) {
        private enum enumMixinStr_NID_des_ede_ecb = `enum NID_des_ede_ecb = 32;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_des_ede_ecb); }))) {
            mixin(enumMixinStr_NID_des_ede_ecb);
        }
    }




    static if(!is(typeof(LN_des_ede_ecb))) {
        private enum enumMixinStr_LN_des_ede_ecb = `enum LN_des_ede_ecb = "des-ede";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_des_ede_ecb); }))) {
            mixin(enumMixinStr_LN_des_ede_ecb);
        }
    }




    static if(!is(typeof(SN_des_ede_ecb))) {
        private enum enumMixinStr_SN_des_ede_ecb = `enum SN_des_ede_ecb = "DES-EDE";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_des_ede_ecb); }))) {
            mixin(enumMixinStr_SN_des_ede_ecb);
        }
    }




    static if(!is(typeof(OBJ_shaWithRSAEncryption))) {
        private enum enumMixinStr_OBJ_shaWithRSAEncryption = `enum OBJ_shaWithRSAEncryption = OBJ_algorithm , 15L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_shaWithRSAEncryption); }))) {
            mixin(enumMixinStr_OBJ_shaWithRSAEncryption);
        }
    }




    static if(!is(typeof(NID_shaWithRSAEncryption))) {
        private enum enumMixinStr_NID_shaWithRSAEncryption = `enum NID_shaWithRSAEncryption = 42;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_shaWithRSAEncryption); }))) {
            mixin(enumMixinStr_NID_shaWithRSAEncryption);
        }
    }




    static if(!is(typeof(LN_shaWithRSAEncryption))) {
        private enum enumMixinStr_LN_shaWithRSAEncryption = `enum LN_shaWithRSAEncryption = "shaWithRSAEncryption";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_shaWithRSAEncryption); }))) {
            mixin(enumMixinStr_LN_shaWithRSAEncryption);
        }
    }




    static if(!is(typeof(SN_shaWithRSAEncryption))) {
        private enum enumMixinStr_SN_shaWithRSAEncryption = `enum SN_shaWithRSAEncryption = "RSA-SHA";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_shaWithRSAEncryption); }))) {
            mixin(enumMixinStr_SN_shaWithRSAEncryption);
        }
    }




    static if(!is(typeof(OBJ_dsaWithSHA))) {
        private enum enumMixinStr_OBJ_dsaWithSHA = `enum OBJ_dsaWithSHA = OBJ_algorithm , 13L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dsaWithSHA); }))) {
            mixin(enumMixinStr_OBJ_dsaWithSHA);
        }
    }






    static if(!is(typeof(OPENSSL_UNISTD))) {
        private enum enumMixinStr_OPENSSL_UNISTD = `enum OPENSSL_UNISTD = < unistd . h >;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_UNISTD); }))) {
            mixin(enumMixinStr_OPENSSL_UNISTD);
        }
    }






    static if(!is(typeof(RC4_INT))) {
        private enum enumMixinStr_RC4_INT = `enum RC4_INT = unsigned int;`;
        static if(is(typeof({ mixin(enumMixinStr_RC4_INT); }))) {
            mixin(enumMixinStr_RC4_INT);
        }
    }






    static if(!is(typeof(OPENSSL_VERSION_NUMBER))) {
        private enum enumMixinStr_OPENSSL_VERSION_NUMBER = `enum OPENSSL_VERSION_NUMBER = 0x101010afL;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_VERSION_NUMBER); }))) {
            mixin(enumMixinStr_OPENSSL_VERSION_NUMBER);
        }
    }




    static if(!is(typeof(OPENSSL_VERSION_TEXT))) {
        private enum enumMixinStr_OPENSSL_VERSION_TEXT = `enum OPENSSL_VERSION_TEXT = "OpenSSL 1.1.1j  16 Feb 2021";`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_VERSION_TEXT); }))) {
            mixin(enumMixinStr_OPENSSL_VERSION_TEXT);
        }
    }




    static if(!is(typeof(SHLIB_VERSION_HISTORY))) {
        private enum enumMixinStr_SHLIB_VERSION_HISTORY = `enum SHLIB_VERSION_HISTORY = "";`;
        static if(is(typeof({ mixin(enumMixinStr_SHLIB_VERSION_HISTORY); }))) {
            mixin(enumMixinStr_SHLIB_VERSION_HISTORY);
        }
    }




    static if(!is(typeof(SHLIB_VERSION_NUMBER))) {
        private enum enumMixinStr_SHLIB_VERSION_NUMBER = `enum SHLIB_VERSION_NUMBER = "1.1";`;
        static if(is(typeof({ mixin(enumMixinStr_SHLIB_VERSION_NUMBER); }))) {
            mixin(enumMixinStr_SHLIB_VERSION_NUMBER);
        }
    }






    static if(!is(typeof(NID_dsaWithSHA))) {
        private enum enumMixinStr_NID_dsaWithSHA = `enum NID_dsaWithSHA = 66;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dsaWithSHA); }))) {
            mixin(enumMixinStr_NID_dsaWithSHA);
        }
    }




    static if(!is(typeof(LN_dsaWithSHA))) {
        private enum enumMixinStr_LN_dsaWithSHA = `enum LN_dsaWithSHA = "dsaWithSHA";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_dsaWithSHA); }))) {
            mixin(enumMixinStr_LN_dsaWithSHA);
        }
    }




    static if(!is(typeof(SN_dsaWithSHA))) {
        private enum enumMixinStr_SN_dsaWithSHA = `enum SN_dsaWithSHA = "DSA-SHA";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dsaWithSHA); }))) {
            mixin(enumMixinStr_SN_dsaWithSHA);
        }
    }




    static if(!is(typeof(OBJ_dsa_2))) {
        private enum enumMixinStr_OBJ_dsa_2 = `enum OBJ_dsa_2 = OBJ_algorithm , 12L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dsa_2); }))) {
            mixin(enumMixinStr_OBJ_dsa_2);
        }
    }




    static if(!is(typeof(NID_dsa_2))) {
        private enum enumMixinStr_NID_dsa_2 = `enum NID_dsa_2 = 67;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dsa_2); }))) {
            mixin(enumMixinStr_NID_dsa_2);
        }
    }




    static if(!is(typeof(LN_dsa_2))) {
        private enum enumMixinStr_LN_dsa_2 = `enum LN_dsa_2 = "dsaEncryption-old";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_dsa_2); }))) {
            mixin(enumMixinStr_LN_dsa_2);
        }
    }




    static if(!is(typeof(SN_dsa_2))) {
        private enum enumMixinStr_SN_dsa_2 = `enum SN_dsa_2 = "DSA-old";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dsa_2); }))) {
            mixin(enumMixinStr_SN_dsa_2);
        }
    }




    static if(!is(typeof(OBJ_rsaSignature))) {
        private enum enumMixinStr_OBJ_rsaSignature = `enum OBJ_rsaSignature = OBJ_algorithm , 11L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_rsaSignature); }))) {
            mixin(enumMixinStr_OBJ_rsaSignature);
        }
    }




    static if(!is(typeof(NID_rsaSignature))) {
        private enum enumMixinStr_NID_rsaSignature = `enum NID_rsaSignature = 377;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_rsaSignature); }))) {
            mixin(enumMixinStr_NID_rsaSignature);
        }
    }




    static if(!is(typeof(SN_rsaSignature))) {
        private enum enumMixinStr_SN_rsaSignature = `enum SN_rsaSignature = "rsaSignature";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_rsaSignature); }))) {
            mixin(enumMixinStr_SN_rsaSignature);
        }
    }




    static if(!is(typeof(OBJ_des_cfb64))) {
        private enum enumMixinStr_OBJ_des_cfb64 = `enum OBJ_des_cfb64 = OBJ_algorithm , 9L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_des_cfb64); }))) {
            mixin(enumMixinStr_OBJ_des_cfb64);
        }
    }




    static if(!is(typeof(NID_des_cfb64))) {
        private enum enumMixinStr_NID_des_cfb64 = `enum NID_des_cfb64 = 30;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_des_cfb64); }))) {
            mixin(enumMixinStr_NID_des_cfb64);
        }
    }




    static if(!is(typeof(LN_des_cfb64))) {
        private enum enumMixinStr_LN_des_cfb64 = `enum LN_des_cfb64 = "des-cfb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_des_cfb64); }))) {
            mixin(enumMixinStr_LN_des_cfb64);
        }
    }




    static if(!is(typeof(SN_des_cfb64))) {
        private enum enumMixinStr_SN_des_cfb64 = `enum SN_des_cfb64 = "DES-CFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_des_cfb64); }))) {
            mixin(enumMixinStr_SN_des_cfb64);
        }
    }




    static if(!is(typeof(OBJ_des_ofb64))) {
        private enum enumMixinStr_OBJ_des_ofb64 = `enum OBJ_des_ofb64 = OBJ_algorithm , 8L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_des_ofb64); }))) {
            mixin(enumMixinStr_OBJ_des_ofb64);
        }
    }




    static if(!is(typeof(NID_des_ofb64))) {
        private enum enumMixinStr_NID_des_ofb64 = `enum NID_des_ofb64 = 45;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_des_ofb64); }))) {
            mixin(enumMixinStr_NID_des_ofb64);
        }
    }




    static if(!is(typeof(LN_des_ofb64))) {
        private enum enumMixinStr_LN_des_ofb64 = `enum LN_des_ofb64 = "des-ofb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_des_ofb64); }))) {
            mixin(enumMixinStr_LN_des_ofb64);
        }
    }




    static if(!is(typeof(SN_des_ofb64))) {
        private enum enumMixinStr_SN_des_ofb64 = `enum SN_des_ofb64 = "DES-OFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_des_ofb64); }))) {
            mixin(enumMixinStr_SN_des_ofb64);
        }
    }




    static if(!is(typeof(OBJ_des_cbc))) {
        private enum enumMixinStr_OBJ_des_cbc = `enum OBJ_des_cbc = OBJ_algorithm , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_des_cbc); }))) {
            mixin(enumMixinStr_OBJ_des_cbc);
        }
    }




    static if(!is(typeof(NID_des_cbc))) {
        private enum enumMixinStr_NID_des_cbc = `enum NID_des_cbc = 31;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_des_cbc); }))) {
            mixin(enumMixinStr_NID_des_cbc);
        }
    }




    static if(!is(typeof(LN_des_cbc))) {
        private enum enumMixinStr_LN_des_cbc = `enum LN_des_cbc = "des-cbc";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_des_cbc); }))) {
            mixin(enumMixinStr_LN_des_cbc);
        }
    }




    static if(!is(typeof(SN_des_cbc))) {
        private enum enumMixinStr_SN_des_cbc = `enum SN_des_cbc = "DES-CBC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_des_cbc); }))) {
            mixin(enumMixinStr_SN_des_cbc);
        }
    }




    static if(!is(typeof(OBJ_des_ecb))) {
        private enum enumMixinStr_OBJ_des_ecb = `enum OBJ_des_ecb = OBJ_algorithm , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_des_ecb); }))) {
            mixin(enumMixinStr_OBJ_des_ecb);
        }
    }




    static if(!is(typeof(NID_des_ecb))) {
        private enum enumMixinStr_NID_des_ecb = `enum NID_des_ecb = 29;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_des_ecb); }))) {
            mixin(enumMixinStr_NID_des_ecb);
        }
    }




    static if(!is(typeof(LN_des_ecb))) {
        private enum enumMixinStr_LN_des_ecb = `enum LN_des_ecb = "des-ecb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_des_ecb); }))) {
            mixin(enumMixinStr_LN_des_ecb);
        }
    }




    static if(!is(typeof(SN_des_ecb))) {
        private enum enumMixinStr_SN_des_ecb = `enum SN_des_ecb = "DES-ECB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_des_ecb); }))) {
            mixin(enumMixinStr_SN_des_ecb);
        }
    }




    static if(!is(typeof(OBJ_md5WithRSA))) {
        private enum enumMixinStr_OBJ_md5WithRSA = `enum OBJ_md5WithRSA = OBJ_algorithm , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_md5WithRSA); }))) {
            mixin(enumMixinStr_OBJ_md5WithRSA);
        }
    }




    static if(!is(typeof(NID_md5WithRSA))) {
        private enum enumMixinStr_NID_md5WithRSA = `enum NID_md5WithRSA = 104;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_md5WithRSA); }))) {
            mixin(enumMixinStr_NID_md5WithRSA);
        }
    }




    static if(!is(typeof(LN_md5WithRSA))) {
        private enum enumMixinStr_LN_md5WithRSA = `enum LN_md5WithRSA = "md5WithRSA";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_md5WithRSA); }))) {
            mixin(enumMixinStr_LN_md5WithRSA);
        }
    }




    static if(!is(typeof(SN_md5WithRSA))) {
        private enum enumMixinStr_SN_md5WithRSA = `enum SN_md5WithRSA = "RSA-NP-MD5";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_md5WithRSA); }))) {
            mixin(enumMixinStr_SN_md5WithRSA);
        }
    }




    static if(!is(typeof(OBJ_algorithm))) {
        private enum enumMixinStr_OBJ_algorithm = `enum OBJ_algorithm = 1L , 3L , 14L , 3L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_algorithm); }))) {
            mixin(enumMixinStr_OBJ_algorithm);
        }
    }




    static if(!is(typeof(NID_algorithm))) {
        private enum enumMixinStr_NID_algorithm = `enum NID_algorithm = 376;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_algorithm); }))) {
            mixin(enumMixinStr_NID_algorithm);
        }
    }




    static if(!is(typeof(LN_algorithm))) {
        private enum enumMixinStr_LN_algorithm = `enum LN_algorithm = "algorithm";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_algorithm); }))) {
            mixin(enumMixinStr_LN_algorithm);
        }
    }




    static if(!is(typeof(SN_algorithm))) {
        private enum enumMixinStr_SN_algorithm = `enum SN_algorithm = "algorithm";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_algorithm); }))) {
            mixin(enumMixinStr_SN_algorithm);
        }
    }




    static if(!is(typeof(OBJ_id_pkix_OCSP_trustRoot))) {
        private enum enumMixinStr_OBJ_id_pkix_OCSP_trustRoot = `enum OBJ_id_pkix_OCSP_trustRoot = OBJ_id_pkix_OCSP , 11L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_pkix_OCSP_trustRoot); }))) {
            mixin(enumMixinStr_OBJ_id_pkix_OCSP_trustRoot);
        }
    }




    static if(!is(typeof(NID_id_pkix_OCSP_trustRoot))) {
        private enum enumMixinStr_NID_id_pkix_OCSP_trustRoot = `enum NID_id_pkix_OCSP_trustRoot = 375;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_pkix_OCSP_trustRoot); }))) {
            mixin(enumMixinStr_NID_id_pkix_OCSP_trustRoot);
        }
    }




    static if(!is(typeof(LN_id_pkix_OCSP_trustRoot))) {
        private enum enumMixinStr_LN_id_pkix_OCSP_trustRoot = `enum LN_id_pkix_OCSP_trustRoot = "Trust Root";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_pkix_OCSP_trustRoot); }))) {
            mixin(enumMixinStr_LN_id_pkix_OCSP_trustRoot);
        }
    }




    static if(!is(typeof(SN_id_pkix_OCSP_trustRoot))) {
        private enum enumMixinStr_SN_id_pkix_OCSP_trustRoot = `enum SN_id_pkix_OCSP_trustRoot = "trustRoot";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_pkix_OCSP_trustRoot); }))) {
            mixin(enumMixinStr_SN_id_pkix_OCSP_trustRoot);
        }
    }




    static if(!is(typeof(OBJ_id_pkix_OCSP_path))) {
        private enum enumMixinStr_OBJ_id_pkix_OCSP_path = `enum OBJ_id_pkix_OCSP_path = OBJ_id_pkix_OCSP , 10L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_pkix_OCSP_path); }))) {
            mixin(enumMixinStr_OBJ_id_pkix_OCSP_path);
        }
    }




    static if(!is(typeof(NID_id_pkix_OCSP_path))) {
        private enum enumMixinStr_NID_id_pkix_OCSP_path = `enum NID_id_pkix_OCSP_path = 374;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_pkix_OCSP_path); }))) {
            mixin(enumMixinStr_NID_id_pkix_OCSP_path);
        }
    }




    static if(!is(typeof(SN_id_pkix_OCSP_path))) {
        private enum enumMixinStr_SN_id_pkix_OCSP_path = `enum SN_id_pkix_OCSP_path = "path";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_pkix_OCSP_path); }))) {
            mixin(enumMixinStr_SN_id_pkix_OCSP_path);
        }
    }




    static if(!is(typeof(OBJ_id_pkix_OCSP_valid))) {
        private enum enumMixinStr_OBJ_id_pkix_OCSP_valid = `enum OBJ_id_pkix_OCSP_valid = OBJ_id_pkix_OCSP , 9L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_pkix_OCSP_valid); }))) {
            mixin(enumMixinStr_OBJ_id_pkix_OCSP_valid);
        }
    }




    static if(!is(typeof(NID_id_pkix_OCSP_valid))) {
        private enum enumMixinStr_NID_id_pkix_OCSP_valid = `enum NID_id_pkix_OCSP_valid = 373;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_pkix_OCSP_valid); }))) {
            mixin(enumMixinStr_NID_id_pkix_OCSP_valid);
        }
    }




    static if(!is(typeof(SN_id_pkix_OCSP_valid))) {
        private enum enumMixinStr_SN_id_pkix_OCSP_valid = `enum SN_id_pkix_OCSP_valid = "valid";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_pkix_OCSP_valid); }))) {
            mixin(enumMixinStr_SN_id_pkix_OCSP_valid);
        }
    }




    static if(!is(typeof(OBJ_id_pkix_OCSP_extendedStatus))) {
        private enum enumMixinStr_OBJ_id_pkix_OCSP_extendedStatus = `enum OBJ_id_pkix_OCSP_extendedStatus = OBJ_id_pkix_OCSP , 8L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_pkix_OCSP_extendedStatus); }))) {
            mixin(enumMixinStr_OBJ_id_pkix_OCSP_extendedStatus);
        }
    }




    static if(!is(typeof(NID_id_pkix_OCSP_extendedStatus))) {
        private enum enumMixinStr_NID_id_pkix_OCSP_extendedStatus = `enum NID_id_pkix_OCSP_extendedStatus = 372;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_pkix_OCSP_extendedStatus); }))) {
            mixin(enumMixinStr_NID_id_pkix_OCSP_extendedStatus);
        }
    }




    static if(!is(typeof(LN_id_pkix_OCSP_extendedStatus))) {
        private enum enumMixinStr_LN_id_pkix_OCSP_extendedStatus = `enum LN_id_pkix_OCSP_extendedStatus = "Extended OCSP Status";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_pkix_OCSP_extendedStatus); }))) {
            mixin(enumMixinStr_LN_id_pkix_OCSP_extendedStatus);
        }
    }




    static if(!is(typeof(SN_id_pkix_OCSP_extendedStatus))) {
        private enum enumMixinStr_SN_id_pkix_OCSP_extendedStatus = `enum SN_id_pkix_OCSP_extendedStatus = "extendedStatus";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_pkix_OCSP_extendedStatus); }))) {
            mixin(enumMixinStr_SN_id_pkix_OCSP_extendedStatus);
        }
    }




    static if(!is(typeof(OBJ_id_pkix_OCSP_serviceLocator))) {
        private enum enumMixinStr_OBJ_id_pkix_OCSP_serviceLocator = `enum OBJ_id_pkix_OCSP_serviceLocator = OBJ_id_pkix_OCSP , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_pkix_OCSP_serviceLocator); }))) {
            mixin(enumMixinStr_OBJ_id_pkix_OCSP_serviceLocator);
        }
    }




    static if(!is(typeof(NID_id_pkix_OCSP_serviceLocator))) {
        private enum enumMixinStr_NID_id_pkix_OCSP_serviceLocator = `enum NID_id_pkix_OCSP_serviceLocator = 371;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_pkix_OCSP_serviceLocator); }))) {
            mixin(enumMixinStr_NID_id_pkix_OCSP_serviceLocator);
        }
    }




    static if(!is(typeof(LN_id_pkix_OCSP_serviceLocator))) {
        private enum enumMixinStr_LN_id_pkix_OCSP_serviceLocator = `enum LN_id_pkix_OCSP_serviceLocator = "OCSP Service Locator";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_pkix_OCSP_serviceLocator); }))) {
            mixin(enumMixinStr_LN_id_pkix_OCSP_serviceLocator);
        }
    }




    static if(!is(typeof(SN_id_pkix_OCSP_serviceLocator))) {
        private enum enumMixinStr_SN_id_pkix_OCSP_serviceLocator = `enum SN_id_pkix_OCSP_serviceLocator = "serviceLocator";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_pkix_OCSP_serviceLocator); }))) {
            mixin(enumMixinStr_SN_id_pkix_OCSP_serviceLocator);
        }
    }




    static if(!is(typeof(OBJ_id_pkix_OCSP_archiveCutoff))) {
        private enum enumMixinStr_OBJ_id_pkix_OCSP_archiveCutoff = `enum OBJ_id_pkix_OCSP_archiveCutoff = OBJ_id_pkix_OCSP , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_pkix_OCSP_archiveCutoff); }))) {
            mixin(enumMixinStr_OBJ_id_pkix_OCSP_archiveCutoff);
        }
    }




    static if(!is(typeof(NID_id_pkix_OCSP_archiveCutoff))) {
        private enum enumMixinStr_NID_id_pkix_OCSP_archiveCutoff = `enum NID_id_pkix_OCSP_archiveCutoff = 370;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_pkix_OCSP_archiveCutoff); }))) {
            mixin(enumMixinStr_NID_id_pkix_OCSP_archiveCutoff);
        }
    }




    static if(!is(typeof(LN_id_pkix_OCSP_archiveCutoff))) {
        private enum enumMixinStr_LN_id_pkix_OCSP_archiveCutoff = `enum LN_id_pkix_OCSP_archiveCutoff = "OCSP Archive Cutoff";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_pkix_OCSP_archiveCutoff); }))) {
            mixin(enumMixinStr_LN_id_pkix_OCSP_archiveCutoff);
        }
    }




    static if(!is(typeof(SN_id_pkix_OCSP_archiveCutoff))) {
        private enum enumMixinStr_SN_id_pkix_OCSP_archiveCutoff = `enum SN_id_pkix_OCSP_archiveCutoff = "archiveCutoff";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_pkix_OCSP_archiveCutoff); }))) {
            mixin(enumMixinStr_SN_id_pkix_OCSP_archiveCutoff);
        }
    }




    static if(!is(typeof(OBJ_id_pkix_OCSP_noCheck))) {
        private enum enumMixinStr_OBJ_id_pkix_OCSP_noCheck = `enum OBJ_id_pkix_OCSP_noCheck = OBJ_id_pkix_OCSP , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_pkix_OCSP_noCheck); }))) {
            mixin(enumMixinStr_OBJ_id_pkix_OCSP_noCheck);
        }
    }




    static if(!is(typeof(NID_id_pkix_OCSP_noCheck))) {
        private enum enumMixinStr_NID_id_pkix_OCSP_noCheck = `enum NID_id_pkix_OCSP_noCheck = 369;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_pkix_OCSP_noCheck); }))) {
            mixin(enumMixinStr_NID_id_pkix_OCSP_noCheck);
        }
    }




    static if(!is(typeof(LN_id_pkix_OCSP_noCheck))) {
        private enum enumMixinStr_LN_id_pkix_OCSP_noCheck = `enum LN_id_pkix_OCSP_noCheck = "OCSP No Check";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_pkix_OCSP_noCheck); }))) {
            mixin(enumMixinStr_LN_id_pkix_OCSP_noCheck);
        }
    }




    static if(!is(typeof(SN_id_pkix_OCSP_noCheck))) {
        private enum enumMixinStr_SN_id_pkix_OCSP_noCheck = `enum SN_id_pkix_OCSP_noCheck = "noCheck";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_pkix_OCSP_noCheck); }))) {
            mixin(enumMixinStr_SN_id_pkix_OCSP_noCheck);
        }
    }




    static if(!is(typeof(OBJ_id_pkix_OCSP_acceptableResponses))) {
        private enum enumMixinStr_OBJ_id_pkix_OCSP_acceptableResponses = `enum OBJ_id_pkix_OCSP_acceptableResponses = OBJ_id_pkix_OCSP , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_pkix_OCSP_acceptableResponses); }))) {
            mixin(enumMixinStr_OBJ_id_pkix_OCSP_acceptableResponses);
        }
    }




    static if(!is(typeof(NID_id_pkix_OCSP_acceptableResponses))) {
        private enum enumMixinStr_NID_id_pkix_OCSP_acceptableResponses = `enum NID_id_pkix_OCSP_acceptableResponses = 368;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_pkix_OCSP_acceptableResponses); }))) {
            mixin(enumMixinStr_NID_id_pkix_OCSP_acceptableResponses);
        }
    }




    static if(!is(typeof(LN_id_pkix_OCSP_acceptableResponses))) {
        private enum enumMixinStr_LN_id_pkix_OCSP_acceptableResponses = `enum LN_id_pkix_OCSP_acceptableResponses = "Acceptable OCSP Responses";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_pkix_OCSP_acceptableResponses); }))) {
            mixin(enumMixinStr_LN_id_pkix_OCSP_acceptableResponses);
        }
    }




    static if(!is(typeof(SN_id_pkix_OCSP_acceptableResponses))) {
        private enum enumMixinStr_SN_id_pkix_OCSP_acceptableResponses = `enum SN_id_pkix_OCSP_acceptableResponses = "acceptableResponses";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_pkix_OCSP_acceptableResponses); }))) {
            mixin(enumMixinStr_SN_id_pkix_OCSP_acceptableResponses);
        }
    }




    static if(!is(typeof(OBJ_id_pkix_OCSP_CrlID))) {
        private enum enumMixinStr_OBJ_id_pkix_OCSP_CrlID = `enum OBJ_id_pkix_OCSP_CrlID = OBJ_id_pkix_OCSP , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_pkix_OCSP_CrlID); }))) {
            mixin(enumMixinStr_OBJ_id_pkix_OCSP_CrlID);
        }
    }




    static if(!is(typeof(NID_id_pkix_OCSP_CrlID))) {
        private enum enumMixinStr_NID_id_pkix_OCSP_CrlID = `enum NID_id_pkix_OCSP_CrlID = 367;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_pkix_OCSP_CrlID); }))) {
            mixin(enumMixinStr_NID_id_pkix_OCSP_CrlID);
        }
    }




    static if(!is(typeof(LN_id_pkix_OCSP_CrlID))) {
        private enum enumMixinStr_LN_id_pkix_OCSP_CrlID = `enum LN_id_pkix_OCSP_CrlID = "OCSP CRL ID";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_pkix_OCSP_CrlID); }))) {
            mixin(enumMixinStr_LN_id_pkix_OCSP_CrlID);
        }
    }




    static if(!is(typeof(SN_id_pkix_OCSP_CrlID))) {
        private enum enumMixinStr_SN_id_pkix_OCSP_CrlID = `enum SN_id_pkix_OCSP_CrlID = "CrlID";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_pkix_OCSP_CrlID); }))) {
            mixin(enumMixinStr_SN_id_pkix_OCSP_CrlID);
        }
    }




    static if(!is(typeof(OBJ_id_pkix_OCSP_Nonce))) {
        private enum enumMixinStr_OBJ_id_pkix_OCSP_Nonce = `enum OBJ_id_pkix_OCSP_Nonce = OBJ_id_pkix_OCSP , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_pkix_OCSP_Nonce); }))) {
            mixin(enumMixinStr_OBJ_id_pkix_OCSP_Nonce);
        }
    }




    static if(!is(typeof(NID_id_pkix_OCSP_Nonce))) {
        private enum enumMixinStr_NID_id_pkix_OCSP_Nonce = `enum NID_id_pkix_OCSP_Nonce = 366;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_pkix_OCSP_Nonce); }))) {
            mixin(enumMixinStr_NID_id_pkix_OCSP_Nonce);
        }
    }




    static if(!is(typeof(LN_id_pkix_OCSP_Nonce))) {
        private enum enumMixinStr_LN_id_pkix_OCSP_Nonce = `enum LN_id_pkix_OCSP_Nonce = "OCSP Nonce";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_pkix_OCSP_Nonce); }))) {
            mixin(enumMixinStr_LN_id_pkix_OCSP_Nonce);
        }
    }




    static if(!is(typeof(SN_id_pkix_OCSP_Nonce))) {
        private enum enumMixinStr_SN_id_pkix_OCSP_Nonce = `enum SN_id_pkix_OCSP_Nonce = "Nonce";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_pkix_OCSP_Nonce); }))) {
            mixin(enumMixinStr_SN_id_pkix_OCSP_Nonce);
        }
    }




    static if(!is(typeof(OBJ_id_pkix_OCSP_basic))) {
        private enum enumMixinStr_OBJ_id_pkix_OCSP_basic = `enum OBJ_id_pkix_OCSP_basic = OBJ_id_pkix_OCSP , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_pkix_OCSP_basic); }))) {
            mixin(enumMixinStr_OBJ_id_pkix_OCSP_basic);
        }
    }




    static if(!is(typeof(NID_id_pkix_OCSP_basic))) {
        private enum enumMixinStr_NID_id_pkix_OCSP_basic = `enum NID_id_pkix_OCSP_basic = 365;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_pkix_OCSP_basic); }))) {
            mixin(enumMixinStr_NID_id_pkix_OCSP_basic);
        }
    }




    static if(!is(typeof(LN_id_pkix_OCSP_basic))) {
        private enum enumMixinStr_LN_id_pkix_OCSP_basic = `enum LN_id_pkix_OCSP_basic = "Basic OCSP Response";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_pkix_OCSP_basic); }))) {
            mixin(enumMixinStr_LN_id_pkix_OCSP_basic);
        }
    }




    static if(!is(typeof(SN_id_pkix_OCSP_basic))) {
        private enum enumMixinStr_SN_id_pkix_OCSP_basic = `enum SN_id_pkix_OCSP_basic = "basicOCSPResponse";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_pkix_OCSP_basic); }))) {
            mixin(enumMixinStr_SN_id_pkix_OCSP_basic);
        }
    }




    static if(!is(typeof(OBJ_id_pkix_OCSP))) {
        private enum enumMixinStr_OBJ_id_pkix_OCSP = `enum OBJ_id_pkix_OCSP = OBJ_ad_OCSP;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_pkix_OCSP); }))) {
            mixin(enumMixinStr_OBJ_id_pkix_OCSP);
        }
    }




    static if(!is(typeof(OBJ_caRepository))) {
        private enum enumMixinStr_OBJ_caRepository = `enum OBJ_caRepository = OBJ_id_ad , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_caRepository); }))) {
            mixin(enumMixinStr_OBJ_caRepository);
        }
    }




    static if(!is(typeof(NID_caRepository))) {
        private enum enumMixinStr_NID_caRepository = `enum NID_caRepository = 785;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_caRepository); }))) {
            mixin(enumMixinStr_NID_caRepository);
        }
    }




    static if(!is(typeof(LN_caRepository))) {
        private enum enumMixinStr_LN_caRepository = `enum LN_caRepository = "CA Repository";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_caRepository); }))) {
            mixin(enumMixinStr_LN_caRepository);
        }
    }




    static if(!is(typeof(SN_caRepository))) {
        private enum enumMixinStr_SN_caRepository = `enum SN_caRepository = "caRepository";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_caRepository); }))) {
            mixin(enumMixinStr_SN_caRepository);
        }
    }




    static if(!is(typeof(OBJ_ad_dvcs))) {
        private enum enumMixinStr_OBJ_ad_dvcs = `enum OBJ_ad_dvcs = OBJ_id_ad , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ad_dvcs); }))) {
            mixin(enumMixinStr_OBJ_ad_dvcs);
        }
    }




    static if(!is(typeof(NID_ad_dvcs))) {
        private enum enumMixinStr_NID_ad_dvcs = `enum NID_ad_dvcs = 364;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ad_dvcs); }))) {
            mixin(enumMixinStr_NID_ad_dvcs);
        }
    }




    static if(!is(typeof(LN_ad_dvcs))) {
        private enum enumMixinStr_LN_ad_dvcs = `enum LN_ad_dvcs = "ad dvcs";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ad_dvcs); }))) {
            mixin(enumMixinStr_LN_ad_dvcs);
        }
    }




    static if(!is(typeof(SN_ad_dvcs))) {
        private enum enumMixinStr_SN_ad_dvcs = `enum SN_ad_dvcs = "AD_DVCS";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ad_dvcs); }))) {
            mixin(enumMixinStr_SN_ad_dvcs);
        }
    }




    static if(!is(typeof(OBJ_ad_timeStamping))) {
        private enum enumMixinStr_OBJ_ad_timeStamping = `enum OBJ_ad_timeStamping = OBJ_id_ad , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ad_timeStamping); }))) {
            mixin(enumMixinStr_OBJ_ad_timeStamping);
        }
    }




    static if(!is(typeof(NID_ad_timeStamping))) {
        private enum enumMixinStr_NID_ad_timeStamping = `enum NID_ad_timeStamping = 363;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ad_timeStamping); }))) {
            mixin(enumMixinStr_NID_ad_timeStamping);
        }
    }




    static if(!is(typeof(LN_ad_timeStamping))) {
        private enum enumMixinStr_LN_ad_timeStamping = `enum LN_ad_timeStamping = "AD Time Stamping";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ad_timeStamping); }))) {
            mixin(enumMixinStr_LN_ad_timeStamping);
        }
    }




    static if(!is(typeof(SN_ad_timeStamping))) {
        private enum enumMixinStr_SN_ad_timeStamping = `enum SN_ad_timeStamping = "ad_timestamping";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ad_timeStamping); }))) {
            mixin(enumMixinStr_SN_ad_timeStamping);
        }
    }




    static if(!is(typeof(OBJ_ad_ca_issuers))) {
        private enum enumMixinStr_OBJ_ad_ca_issuers = `enum OBJ_ad_ca_issuers = OBJ_id_ad , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ad_ca_issuers); }))) {
            mixin(enumMixinStr_OBJ_ad_ca_issuers);
        }
    }




    static if(!is(typeof(NID_ad_ca_issuers))) {
        private enum enumMixinStr_NID_ad_ca_issuers = `enum NID_ad_ca_issuers = 179;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ad_ca_issuers); }))) {
            mixin(enumMixinStr_NID_ad_ca_issuers);
        }
    }




    static if(!is(typeof(LN_ad_ca_issuers))) {
        private enum enumMixinStr_LN_ad_ca_issuers = `enum LN_ad_ca_issuers = "CA Issuers";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ad_ca_issuers); }))) {
            mixin(enumMixinStr_LN_ad_ca_issuers);
        }
    }




    static if(!is(typeof(SN_ad_ca_issuers))) {
        private enum enumMixinStr_SN_ad_ca_issuers = `enum SN_ad_ca_issuers = "caIssuers";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ad_ca_issuers); }))) {
            mixin(enumMixinStr_SN_ad_ca_issuers);
        }
    }




    static if(!is(typeof(OBJ_ad_OCSP))) {
        private enum enumMixinStr_OBJ_ad_OCSP = `enum OBJ_ad_OCSP = OBJ_id_ad , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ad_OCSP); }))) {
            mixin(enumMixinStr_OBJ_ad_OCSP);
        }
    }




    static if(!is(typeof(NID_ad_OCSP))) {
        private enum enumMixinStr_NID_ad_OCSP = `enum NID_ad_OCSP = 178;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ad_OCSP); }))) {
            mixin(enumMixinStr_NID_ad_OCSP);
        }
    }




    static if(!is(typeof(LN_ad_OCSP))) {
        private enum enumMixinStr_LN_ad_OCSP = `enum LN_ad_OCSP = "OCSP";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ad_OCSP); }))) {
            mixin(enumMixinStr_LN_ad_OCSP);
        }
    }




    static if(!is(typeof(SN_ad_OCSP))) {
        private enum enumMixinStr_SN_ad_OCSP = `enum SN_ad_OCSP = "OCSP";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ad_OCSP); }))) {
            mixin(enumMixinStr_SN_ad_OCSP);
        }
    }




    static if(!is(typeof(OBJ_Independent))) {
        private enum enumMixinStr_OBJ_Independent = `enum OBJ_Independent = OBJ_id_ppl , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_Independent); }))) {
            mixin(enumMixinStr_OBJ_Independent);
        }
    }




    static if(!is(typeof(NID_Independent))) {
        private enum enumMixinStr_NID_Independent = `enum NID_Independent = 667;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_Independent); }))) {
            mixin(enumMixinStr_NID_Independent);
        }
    }




    static if(!is(typeof(LN_Independent))) {
        private enum enumMixinStr_LN_Independent = `enum LN_Independent = "Independent";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_Independent); }))) {
            mixin(enumMixinStr_LN_Independent);
        }
    }




    static if(!is(typeof(SN_Independent))) {
        private enum enumMixinStr_SN_Independent = `enum SN_Independent = "id-ppl-independent";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_Independent); }))) {
            mixin(enumMixinStr_SN_Independent);
        }
    }




    static if(!is(typeof(OBJ_id_ppl_inheritAll))) {
        private enum enumMixinStr_OBJ_id_ppl_inheritAll = `enum OBJ_id_ppl_inheritAll = OBJ_id_ppl , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_ppl_inheritAll); }))) {
            mixin(enumMixinStr_OBJ_id_ppl_inheritAll);
        }
    }




    static if(!is(typeof(NID_id_ppl_inheritAll))) {
        private enum enumMixinStr_NID_id_ppl_inheritAll = `enum NID_id_ppl_inheritAll = 665;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_ppl_inheritAll); }))) {
            mixin(enumMixinStr_NID_id_ppl_inheritAll);
        }
    }




    static if(!is(typeof(LN_id_ppl_inheritAll))) {
        private enum enumMixinStr_LN_id_ppl_inheritAll = `enum LN_id_ppl_inheritAll = "Inherit all";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_ppl_inheritAll); }))) {
            mixin(enumMixinStr_LN_id_ppl_inheritAll);
        }
    }




    static if(!is(typeof(SN_id_ppl_inheritAll))) {
        private enum enumMixinStr_SN_id_ppl_inheritAll = `enum SN_id_ppl_inheritAll = "id-ppl-inheritAll";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_ppl_inheritAll); }))) {
            mixin(enumMixinStr_SN_id_ppl_inheritAll);
        }
    }




    static if(!is(typeof(OBJ_id_ppl_anyLanguage))) {
        private enum enumMixinStr_OBJ_id_ppl_anyLanguage = `enum OBJ_id_ppl_anyLanguage = OBJ_id_ppl , 0L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_ppl_anyLanguage); }))) {
            mixin(enumMixinStr_OBJ_id_ppl_anyLanguage);
        }
    }




    static if(!is(typeof(NID_id_ppl_anyLanguage))) {
        private enum enumMixinStr_NID_id_ppl_anyLanguage = `enum NID_id_ppl_anyLanguage = 664;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_ppl_anyLanguage); }))) {
            mixin(enumMixinStr_NID_id_ppl_anyLanguage);
        }
    }




    static if(!is(typeof(LN_id_ppl_anyLanguage))) {
        private enum enumMixinStr_LN_id_ppl_anyLanguage = `enum LN_id_ppl_anyLanguage = "Any language";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_ppl_anyLanguage); }))) {
            mixin(enumMixinStr_LN_id_ppl_anyLanguage);
        }
    }




    static if(!is(typeof(SN_id_ppl_anyLanguage))) {
        private enum enumMixinStr_SN_id_ppl_anyLanguage = `enum SN_id_ppl_anyLanguage = "id-ppl-anyLanguage";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_ppl_anyLanguage); }))) {
            mixin(enumMixinStr_SN_id_ppl_anyLanguage);
        }
    }




    static if(!is(typeof(OBJ_id_cct_PKIResponse))) {
        private enum enumMixinStr_OBJ_id_cct_PKIResponse = `enum OBJ_id_cct_PKIResponse = OBJ_id_cct , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_cct_PKIResponse); }))) {
            mixin(enumMixinStr_OBJ_id_cct_PKIResponse);
        }
    }




    static if(!is(typeof(NID_id_cct_PKIResponse))) {
        private enum enumMixinStr_NID_id_cct_PKIResponse = `enum NID_id_cct_PKIResponse = 362;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_cct_PKIResponse); }))) {
            mixin(enumMixinStr_NID_id_cct_PKIResponse);
        }
    }




    static if(!is(typeof(SN_id_cct_PKIResponse))) {
        private enum enumMixinStr_SN_id_cct_PKIResponse = `enum SN_id_cct_PKIResponse = "id-cct-PKIResponse";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_cct_PKIResponse); }))) {
            mixin(enumMixinStr_SN_id_cct_PKIResponse);
        }
    }




    static if(!is(typeof(OBJ_id_cct_PKIData))) {
        private enum enumMixinStr_OBJ_id_cct_PKIData = `enum OBJ_id_cct_PKIData = OBJ_id_cct , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_cct_PKIData); }))) {
            mixin(enumMixinStr_OBJ_id_cct_PKIData);
        }
    }




    static if(!is(typeof(NID_id_cct_PKIData))) {
        private enum enumMixinStr_NID_id_cct_PKIData = `enum NID_id_cct_PKIData = 361;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_cct_PKIData); }))) {
            mixin(enumMixinStr_NID_id_cct_PKIData);
        }
    }




    static if(!is(typeof(SN_id_cct_PKIData))) {
        private enum enumMixinStr_SN_id_cct_PKIData = `enum SN_id_cct_PKIData = "id-cct-PKIData";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_cct_PKIData); }))) {
            mixin(enumMixinStr_SN_id_cct_PKIData);
        }
    }




    static if(!is(typeof(OBJ_id_cct_crs))) {
        private enum enumMixinStr_OBJ_id_cct_crs = `enum OBJ_id_cct_crs = OBJ_id_cct , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_cct_crs); }))) {
            mixin(enumMixinStr_OBJ_id_cct_crs);
        }
    }




    static if(!is(typeof(NID_id_cct_crs))) {
        private enum enumMixinStr_NID_id_cct_crs = `enum NID_id_cct_crs = 360;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_cct_crs); }))) {
            mixin(enumMixinStr_NID_id_cct_crs);
        }
    }




    static if(!is(typeof(SN_id_cct_crs))) {
        private enum enumMixinStr_SN_id_cct_crs = `enum SN_id_cct_crs = "id-cct-crs";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_cct_crs); }))) {
            mixin(enumMixinStr_SN_id_cct_crs);
        }
    }




    static if(!is(typeof(OBJ_id_qcs_pkixQCSyntax_v1))) {
        private enum enumMixinStr_OBJ_id_qcs_pkixQCSyntax_v1 = `enum OBJ_id_qcs_pkixQCSyntax_v1 = OBJ_id_qcs , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_qcs_pkixQCSyntax_v1); }))) {
            mixin(enumMixinStr_OBJ_id_qcs_pkixQCSyntax_v1);
        }
    }




    static if(!is(typeof(NID_id_qcs_pkixQCSyntax_v1))) {
        private enum enumMixinStr_NID_id_qcs_pkixQCSyntax_v1 = `enum NID_id_qcs_pkixQCSyntax_v1 = 359;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_qcs_pkixQCSyntax_v1); }))) {
            mixin(enumMixinStr_NID_id_qcs_pkixQCSyntax_v1);
        }
    }




    static if(!is(typeof(SN_id_qcs_pkixQCSyntax_v1))) {
        private enum enumMixinStr_SN_id_qcs_pkixQCSyntax_v1 = `enum SN_id_qcs_pkixQCSyntax_v1 = "id-qcs-pkixQCSyntax-v1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_qcs_pkixQCSyntax_v1); }))) {
            mixin(enumMixinStr_SN_id_qcs_pkixQCSyntax_v1);
        }
    }




    static if(!is(typeof(OBJ_id_aca_encAttrs))) {
        private enum enumMixinStr_OBJ_id_aca_encAttrs = `enum OBJ_id_aca_encAttrs = OBJ_id_aca , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_aca_encAttrs); }))) {
            mixin(enumMixinStr_OBJ_id_aca_encAttrs);
        }
    }




    static if(!is(typeof(NID_id_aca_encAttrs))) {
        private enum enumMixinStr_NID_id_aca_encAttrs = `enum NID_id_aca_encAttrs = 399;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_aca_encAttrs); }))) {
            mixin(enumMixinStr_NID_id_aca_encAttrs);
        }
    }




    static if(!is(typeof(SN_id_aca_encAttrs))) {
        private enum enumMixinStr_SN_id_aca_encAttrs = `enum SN_id_aca_encAttrs = "id-aca-encAttrs";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_aca_encAttrs); }))) {
            mixin(enumMixinStr_SN_id_aca_encAttrs);
        }
    }




    static if(!is(typeof(OBJ_id_aca_role))) {
        private enum enumMixinStr_OBJ_id_aca_role = `enum OBJ_id_aca_role = OBJ_id_aca , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_aca_role); }))) {
            mixin(enumMixinStr_OBJ_id_aca_role);
        }
    }




    static if(!is(typeof(NID_id_aca_role))) {
        private enum enumMixinStr_NID_id_aca_role = `enum NID_id_aca_role = 358;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_aca_role); }))) {
            mixin(enumMixinStr_NID_id_aca_role);
        }
    }




    static if(!is(typeof(SN_id_aca_role))) {
        private enum enumMixinStr_SN_id_aca_role = `enum SN_id_aca_role = "id-aca-role";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_aca_role); }))) {
            mixin(enumMixinStr_SN_id_aca_role);
        }
    }




    static if(!is(typeof(OBJ_id_aca_group))) {
        private enum enumMixinStr_OBJ_id_aca_group = `enum OBJ_id_aca_group = OBJ_id_aca , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_aca_group); }))) {
            mixin(enumMixinStr_OBJ_id_aca_group);
        }
    }




    static if(!is(typeof(NID_id_aca_group))) {
        private enum enumMixinStr_NID_id_aca_group = `enum NID_id_aca_group = 357;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_aca_group); }))) {
            mixin(enumMixinStr_NID_id_aca_group);
        }
    }




    static if(!is(typeof(SN_id_aca_group))) {
        private enum enumMixinStr_SN_id_aca_group = `enum SN_id_aca_group = "id-aca-group";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_aca_group); }))) {
            mixin(enumMixinStr_SN_id_aca_group);
        }
    }




    static if(!is(typeof(OBJ_id_aca_chargingIdentity))) {
        private enum enumMixinStr_OBJ_id_aca_chargingIdentity = `enum OBJ_id_aca_chargingIdentity = OBJ_id_aca , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_aca_chargingIdentity); }))) {
            mixin(enumMixinStr_OBJ_id_aca_chargingIdentity);
        }
    }




    static if(!is(typeof(NID_id_aca_chargingIdentity))) {
        private enum enumMixinStr_NID_id_aca_chargingIdentity = `enum NID_id_aca_chargingIdentity = 356;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_aca_chargingIdentity); }))) {
            mixin(enumMixinStr_NID_id_aca_chargingIdentity);
        }
    }




    static if(!is(typeof(SN_id_aca_chargingIdentity))) {
        private enum enumMixinStr_SN_id_aca_chargingIdentity = `enum SN_id_aca_chargingIdentity = "id-aca-chargingIdentity";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_aca_chargingIdentity); }))) {
            mixin(enumMixinStr_SN_id_aca_chargingIdentity);
        }
    }




    static if(!is(typeof(OBJ_id_aca_accessIdentity))) {
        private enum enumMixinStr_OBJ_id_aca_accessIdentity = `enum OBJ_id_aca_accessIdentity = OBJ_id_aca , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_aca_accessIdentity); }))) {
            mixin(enumMixinStr_OBJ_id_aca_accessIdentity);
        }
    }




    static if(!is(typeof(NID_id_aca_accessIdentity))) {
        private enum enumMixinStr_NID_id_aca_accessIdentity = `enum NID_id_aca_accessIdentity = 355;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_aca_accessIdentity); }))) {
            mixin(enumMixinStr_NID_id_aca_accessIdentity);
        }
    }




    static if(!is(typeof(SN_id_aca_accessIdentity))) {
        private enum enumMixinStr_SN_id_aca_accessIdentity = `enum SN_id_aca_accessIdentity = "id-aca-accessIdentity";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_aca_accessIdentity); }))) {
            mixin(enumMixinStr_SN_id_aca_accessIdentity);
        }
    }




    static if(!is(typeof(OBJ_id_aca_authenticationInfo))) {
        private enum enumMixinStr_OBJ_id_aca_authenticationInfo = `enum OBJ_id_aca_authenticationInfo = OBJ_id_aca , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_aca_authenticationInfo); }))) {
            mixin(enumMixinStr_OBJ_id_aca_authenticationInfo);
        }
    }




    static if(!is(typeof(NID_id_aca_authenticationInfo))) {
        private enum enumMixinStr_NID_id_aca_authenticationInfo = `enum NID_id_aca_authenticationInfo = 354;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_aca_authenticationInfo); }))) {
            mixin(enumMixinStr_NID_id_aca_authenticationInfo);
        }
    }




    static if(!is(typeof(SN_id_aca_authenticationInfo))) {
        private enum enumMixinStr_SN_id_aca_authenticationInfo = `enum SN_id_aca_authenticationInfo = "id-aca-authenticationInfo";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_aca_authenticationInfo); }))) {
            mixin(enumMixinStr_SN_id_aca_authenticationInfo);
        }
    }




    static if(!is(typeof(OBJ_id_pda_countryOfResidence))) {
        private enum enumMixinStr_OBJ_id_pda_countryOfResidence = `enum OBJ_id_pda_countryOfResidence = OBJ_id_pda , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_pda_countryOfResidence); }))) {
            mixin(enumMixinStr_OBJ_id_pda_countryOfResidence);
        }
    }




    static if(!is(typeof(NID_id_pda_countryOfResidence))) {
        private enum enumMixinStr_NID_id_pda_countryOfResidence = `enum NID_id_pda_countryOfResidence = 353;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_pda_countryOfResidence); }))) {
            mixin(enumMixinStr_NID_id_pda_countryOfResidence);
        }
    }




    static if(!is(typeof(SN_id_pda_countryOfResidence))) {
        private enum enumMixinStr_SN_id_pda_countryOfResidence = `enum SN_id_pda_countryOfResidence = "id-pda-countryOfResidence";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_pda_countryOfResidence); }))) {
            mixin(enumMixinStr_SN_id_pda_countryOfResidence);
        }
    }




    static if(!is(typeof(OBJ_id_pda_countryOfCitizenship))) {
        private enum enumMixinStr_OBJ_id_pda_countryOfCitizenship = `enum OBJ_id_pda_countryOfCitizenship = OBJ_id_pda , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_pda_countryOfCitizenship); }))) {
            mixin(enumMixinStr_OBJ_id_pda_countryOfCitizenship);
        }
    }




    static if(!is(typeof(NID_id_pda_countryOfCitizenship))) {
        private enum enumMixinStr_NID_id_pda_countryOfCitizenship = `enum NID_id_pda_countryOfCitizenship = 352;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_pda_countryOfCitizenship); }))) {
            mixin(enumMixinStr_NID_id_pda_countryOfCitizenship);
        }
    }




    static if(!is(typeof(SN_id_pda_countryOfCitizenship))) {
        private enum enumMixinStr_SN_id_pda_countryOfCitizenship = `enum SN_id_pda_countryOfCitizenship = "id-pda-countryOfCitizenship";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_pda_countryOfCitizenship); }))) {
            mixin(enumMixinStr_SN_id_pda_countryOfCitizenship);
        }
    }




    static if(!is(typeof(OBJ_id_pda_gender))) {
        private enum enumMixinStr_OBJ_id_pda_gender = `enum OBJ_id_pda_gender = OBJ_id_pda , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_pda_gender); }))) {
            mixin(enumMixinStr_OBJ_id_pda_gender);
        }
    }




    static if(!is(typeof(NID_id_pda_gender))) {
        private enum enumMixinStr_NID_id_pda_gender = `enum NID_id_pda_gender = 351;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_pda_gender); }))) {
            mixin(enumMixinStr_NID_id_pda_gender);
        }
    }




    static if(!is(typeof(SN_id_pda_gender))) {
        private enum enumMixinStr_SN_id_pda_gender = `enum SN_id_pda_gender = "id-pda-gender";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_pda_gender); }))) {
            mixin(enumMixinStr_SN_id_pda_gender);
        }
    }




    static if(!is(typeof(OBJ_id_pda_placeOfBirth))) {
        private enum enumMixinStr_OBJ_id_pda_placeOfBirth = `enum OBJ_id_pda_placeOfBirth = OBJ_id_pda , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_pda_placeOfBirth); }))) {
            mixin(enumMixinStr_OBJ_id_pda_placeOfBirth);
        }
    }




    static if(!is(typeof(NID_id_pda_placeOfBirth))) {
        private enum enumMixinStr_NID_id_pda_placeOfBirth = `enum NID_id_pda_placeOfBirth = 349;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_pda_placeOfBirth); }))) {
            mixin(enumMixinStr_NID_id_pda_placeOfBirth);
        }
    }




    static if(!is(typeof(SN_id_pda_placeOfBirth))) {
        private enum enumMixinStr_SN_id_pda_placeOfBirth = `enum SN_id_pda_placeOfBirth = "id-pda-placeOfBirth";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_pda_placeOfBirth); }))) {
            mixin(enumMixinStr_SN_id_pda_placeOfBirth);
        }
    }




    static if(!is(typeof(OBJ_id_pda_dateOfBirth))) {
        private enum enumMixinStr_OBJ_id_pda_dateOfBirth = `enum OBJ_id_pda_dateOfBirth = OBJ_id_pda , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_pda_dateOfBirth); }))) {
            mixin(enumMixinStr_OBJ_id_pda_dateOfBirth);
        }
    }




    static if(!is(typeof(NID_id_pda_dateOfBirth))) {
        private enum enumMixinStr_NID_id_pda_dateOfBirth = `enum NID_id_pda_dateOfBirth = 348;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_pda_dateOfBirth); }))) {
            mixin(enumMixinStr_NID_id_pda_dateOfBirth);
        }
    }




    static if(!is(typeof(SN_id_pda_dateOfBirth))) {
        private enum enumMixinStr_SN_id_pda_dateOfBirth = `enum SN_id_pda_dateOfBirth = "id-pda-dateOfBirth";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_pda_dateOfBirth); }))) {
            mixin(enumMixinStr_SN_id_pda_dateOfBirth);
        }
    }




    static if(!is(typeof(OBJ_id_on_permanentIdentifier))) {
        private enum enumMixinStr_OBJ_id_on_permanentIdentifier = `enum OBJ_id_on_permanentIdentifier = OBJ_id_on , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_on_permanentIdentifier); }))) {
            mixin(enumMixinStr_OBJ_id_on_permanentIdentifier);
        }
    }




    static if(!is(typeof(NID_id_on_permanentIdentifier))) {
        private enum enumMixinStr_NID_id_on_permanentIdentifier = `enum NID_id_on_permanentIdentifier = 858;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_on_permanentIdentifier); }))) {
            mixin(enumMixinStr_NID_id_on_permanentIdentifier);
        }
    }




    static if(!is(typeof(LN_id_on_permanentIdentifier))) {
        private enum enumMixinStr_LN_id_on_permanentIdentifier = `enum LN_id_on_permanentIdentifier = "Permanent Identifier";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_on_permanentIdentifier); }))) {
            mixin(enumMixinStr_LN_id_on_permanentIdentifier);
        }
    }




    static if(!is(typeof(SN_id_on_permanentIdentifier))) {
        private enum enumMixinStr_SN_id_on_permanentIdentifier = `enum SN_id_on_permanentIdentifier = "id-on-permanentIdentifier";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_on_permanentIdentifier); }))) {
            mixin(enumMixinStr_SN_id_on_permanentIdentifier);
        }
    }




    static if(!is(typeof(OBJ_id_on_personalData))) {
        private enum enumMixinStr_OBJ_id_on_personalData = `enum OBJ_id_on_personalData = OBJ_id_on , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_on_personalData); }))) {
            mixin(enumMixinStr_OBJ_id_on_personalData);
        }
    }




    static if(!is(typeof(NID_id_on_personalData))) {
        private enum enumMixinStr_NID_id_on_personalData = `enum NID_id_on_personalData = 347;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_on_personalData); }))) {
            mixin(enumMixinStr_NID_id_on_personalData);
        }
    }




    static if(!is(typeof(SN_id_on_personalData))) {
        private enum enumMixinStr_SN_id_on_personalData = `enum SN_id_on_personalData = "id-on-personalData";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_on_personalData); }))) {
            mixin(enumMixinStr_SN_id_on_personalData);
        }
    }




    static if(!is(typeof(OBJ_id_cmc_confirmCertAcceptance))) {
        private enum enumMixinStr_OBJ_id_cmc_confirmCertAcceptance = `enum OBJ_id_cmc_confirmCertAcceptance = OBJ_id_cmc , 24L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_cmc_confirmCertAcceptance); }))) {
            mixin(enumMixinStr_OBJ_id_cmc_confirmCertAcceptance);
        }
    }




    static if(!is(typeof(NID_id_cmc_confirmCertAcceptance))) {
        private enum enumMixinStr_NID_id_cmc_confirmCertAcceptance = `enum NID_id_cmc_confirmCertAcceptance = 346;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_cmc_confirmCertAcceptance); }))) {
            mixin(enumMixinStr_NID_id_cmc_confirmCertAcceptance);
        }
    }




    static if(!is(typeof(SN_id_cmc_confirmCertAcceptance))) {
        private enum enumMixinStr_SN_id_cmc_confirmCertAcceptance = `enum SN_id_cmc_confirmCertAcceptance = "id-cmc-confirmCertAcceptance";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_cmc_confirmCertAcceptance); }))) {
            mixin(enumMixinStr_SN_id_cmc_confirmCertAcceptance);
        }
    }




    static if(!is(typeof(OBJ_id_cmc_popLinkWitness))) {
        private enum enumMixinStr_OBJ_id_cmc_popLinkWitness = `enum OBJ_id_cmc_popLinkWitness = OBJ_id_cmc , 23L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_cmc_popLinkWitness); }))) {
            mixin(enumMixinStr_OBJ_id_cmc_popLinkWitness);
        }
    }




    static if(!is(typeof(NID_id_cmc_popLinkWitness))) {
        private enum enumMixinStr_NID_id_cmc_popLinkWitness = `enum NID_id_cmc_popLinkWitness = 345;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_cmc_popLinkWitness); }))) {
            mixin(enumMixinStr_NID_id_cmc_popLinkWitness);
        }
    }




    static if(!is(typeof(SN_id_cmc_popLinkWitness))) {
        private enum enumMixinStr_SN_id_cmc_popLinkWitness = `enum SN_id_cmc_popLinkWitness = "id-cmc-popLinkWitness";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_cmc_popLinkWitness); }))) {
            mixin(enumMixinStr_SN_id_cmc_popLinkWitness);
        }
    }




    static if(!is(typeof(OBJ_id_cmc_popLinkRandom))) {
        private enum enumMixinStr_OBJ_id_cmc_popLinkRandom = `enum OBJ_id_cmc_popLinkRandom = OBJ_id_cmc , 22L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_cmc_popLinkRandom); }))) {
            mixin(enumMixinStr_OBJ_id_cmc_popLinkRandom);
        }
    }




    static if(!is(typeof(NID_id_cmc_popLinkRandom))) {
        private enum enumMixinStr_NID_id_cmc_popLinkRandom = `enum NID_id_cmc_popLinkRandom = 344;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_cmc_popLinkRandom); }))) {
            mixin(enumMixinStr_NID_id_cmc_popLinkRandom);
        }
    }




    static if(!is(typeof(SN_id_cmc_popLinkRandom))) {
        private enum enumMixinStr_SN_id_cmc_popLinkRandom = `enum SN_id_cmc_popLinkRandom = "id-cmc-popLinkRandom";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_cmc_popLinkRandom); }))) {
            mixin(enumMixinStr_SN_id_cmc_popLinkRandom);
        }
    }




    static if(!is(typeof(OBJ_id_cmc_queryPending))) {
        private enum enumMixinStr_OBJ_id_cmc_queryPending = `enum OBJ_id_cmc_queryPending = OBJ_id_cmc , 21L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_cmc_queryPending); }))) {
            mixin(enumMixinStr_OBJ_id_cmc_queryPending);
        }
    }




    static if(!is(typeof(NID_id_cmc_queryPending))) {
        private enum enumMixinStr_NID_id_cmc_queryPending = `enum NID_id_cmc_queryPending = 343;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_cmc_queryPending); }))) {
            mixin(enumMixinStr_NID_id_cmc_queryPending);
        }
    }




    static if(!is(typeof(SN_id_cmc_queryPending))) {
        private enum enumMixinStr_SN_id_cmc_queryPending = `enum SN_id_cmc_queryPending = "id-cmc-queryPending";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_cmc_queryPending); }))) {
            mixin(enumMixinStr_SN_id_cmc_queryPending);
        }
    }




    static if(!is(typeof(OBJ_id_cmc_responseInfo))) {
        private enum enumMixinStr_OBJ_id_cmc_responseInfo = `enum OBJ_id_cmc_responseInfo = OBJ_id_cmc , 19L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_cmc_responseInfo); }))) {
            mixin(enumMixinStr_OBJ_id_cmc_responseInfo);
        }
    }




    static if(!is(typeof(NID_id_cmc_responseInfo))) {
        private enum enumMixinStr_NID_id_cmc_responseInfo = `enum NID_id_cmc_responseInfo = 342;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_cmc_responseInfo); }))) {
            mixin(enumMixinStr_NID_id_cmc_responseInfo);
        }
    }




    static if(!is(typeof(SN_id_cmc_responseInfo))) {
        private enum enumMixinStr_SN_id_cmc_responseInfo = `enum SN_id_cmc_responseInfo = "id-cmc-responseInfo";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_cmc_responseInfo); }))) {
            mixin(enumMixinStr_SN_id_cmc_responseInfo);
        }
    }




    static if(!is(typeof(OBJ_id_cmc_regInfo))) {
        private enum enumMixinStr_OBJ_id_cmc_regInfo = `enum OBJ_id_cmc_regInfo = OBJ_id_cmc , 18L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_cmc_regInfo); }))) {
            mixin(enumMixinStr_OBJ_id_cmc_regInfo);
        }
    }




    static if(!is(typeof(NID_id_cmc_regInfo))) {
        private enum enumMixinStr_NID_id_cmc_regInfo = `enum NID_id_cmc_regInfo = 341;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_cmc_regInfo); }))) {
            mixin(enumMixinStr_NID_id_cmc_regInfo);
        }
    }




    static if(!is(typeof(SN_id_cmc_regInfo))) {
        private enum enumMixinStr_SN_id_cmc_regInfo = `enum SN_id_cmc_regInfo = "id-cmc-regInfo";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_cmc_regInfo); }))) {
            mixin(enumMixinStr_SN_id_cmc_regInfo);
        }
    }




    static if(!is(typeof(OBJ_id_cmc_revokeRequest))) {
        private enum enumMixinStr_OBJ_id_cmc_revokeRequest = `enum OBJ_id_cmc_revokeRequest = OBJ_id_cmc , 17L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_cmc_revokeRequest); }))) {
            mixin(enumMixinStr_OBJ_id_cmc_revokeRequest);
        }
    }




    static if(!is(typeof(NID_id_cmc_revokeRequest))) {
        private enum enumMixinStr_NID_id_cmc_revokeRequest = `enum NID_id_cmc_revokeRequest = 340;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_cmc_revokeRequest); }))) {
            mixin(enumMixinStr_NID_id_cmc_revokeRequest);
        }
    }




    static if(!is(typeof(SN_id_cmc_revokeRequest))) {
        private enum enumMixinStr_SN_id_cmc_revokeRequest = `enum SN_id_cmc_revokeRequest = "id-cmc-revokeRequest";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_cmc_revokeRequest); }))) {
            mixin(enumMixinStr_SN_id_cmc_revokeRequest);
        }
    }




    static if(!is(typeof(OBJ_id_cmc_getCRL))) {
        private enum enumMixinStr_OBJ_id_cmc_getCRL = `enum OBJ_id_cmc_getCRL = OBJ_id_cmc , 16L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_cmc_getCRL); }))) {
            mixin(enumMixinStr_OBJ_id_cmc_getCRL);
        }
    }




    static if(!is(typeof(NID_id_cmc_getCRL))) {
        private enum enumMixinStr_NID_id_cmc_getCRL = `enum NID_id_cmc_getCRL = 339;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_cmc_getCRL); }))) {
            mixin(enumMixinStr_NID_id_cmc_getCRL);
        }
    }






    static if(!is(typeof(SN_id_cmc_getCRL))) {
        private enum enumMixinStr_SN_id_cmc_getCRL = `enum SN_id_cmc_getCRL = "id-cmc-getCRL";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_cmc_getCRL); }))) {
            mixin(enumMixinStr_SN_id_cmc_getCRL);
        }
    }




    static if(!is(typeof(OBJ_id_cmc_getCert))) {
        private enum enumMixinStr_OBJ_id_cmc_getCert = `enum OBJ_id_cmc_getCert = OBJ_id_cmc , 15L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_cmc_getCert); }))) {
            mixin(enumMixinStr_OBJ_id_cmc_getCert);
        }
    }




    static if(!is(typeof(NID_id_cmc_getCert))) {
        private enum enumMixinStr_NID_id_cmc_getCert = `enum NID_id_cmc_getCert = 338;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_cmc_getCert); }))) {
            mixin(enumMixinStr_NID_id_cmc_getCert);
        }
    }




    static if(!is(typeof(SN_id_cmc_getCert))) {
        private enum enumMixinStr_SN_id_cmc_getCert = `enum SN_id_cmc_getCert = "id-cmc-getCert";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_cmc_getCert); }))) {
            mixin(enumMixinStr_SN_id_cmc_getCert);
        }
    }




    static if(!is(typeof(OBJ_id_cmc_lraPOPWitness))) {
        private enum enumMixinStr_OBJ_id_cmc_lraPOPWitness = `enum OBJ_id_cmc_lraPOPWitness = OBJ_id_cmc , 11L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_cmc_lraPOPWitness); }))) {
            mixin(enumMixinStr_OBJ_id_cmc_lraPOPWitness);
        }
    }




    static if(!is(typeof(NID_id_cmc_lraPOPWitness))) {
        private enum enumMixinStr_NID_id_cmc_lraPOPWitness = `enum NID_id_cmc_lraPOPWitness = 337;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_cmc_lraPOPWitness); }))) {
            mixin(enumMixinStr_NID_id_cmc_lraPOPWitness);
        }
    }




    static if(!is(typeof(PEM_BUFSIZE))) {
        private enum enumMixinStr_PEM_BUFSIZE = `enum PEM_BUFSIZE = 1024;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_BUFSIZE); }))) {
            mixin(enumMixinStr_PEM_BUFSIZE);
        }
    }




    static if(!is(typeof(PEM_STRING_X509_OLD))) {
        private enum enumMixinStr_PEM_STRING_X509_OLD = `enum PEM_STRING_X509_OLD = "X509 CERTIFICATE";`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_STRING_X509_OLD); }))) {
            mixin(enumMixinStr_PEM_STRING_X509_OLD);
        }
    }




    static if(!is(typeof(PEM_STRING_X509))) {
        private enum enumMixinStr_PEM_STRING_X509 = `enum PEM_STRING_X509 = "CERTIFICATE";`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_STRING_X509); }))) {
            mixin(enumMixinStr_PEM_STRING_X509);
        }
    }




    static if(!is(typeof(PEM_STRING_X509_TRUSTED))) {
        private enum enumMixinStr_PEM_STRING_X509_TRUSTED = `enum PEM_STRING_X509_TRUSTED = "TRUSTED CERTIFICATE";`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_STRING_X509_TRUSTED); }))) {
            mixin(enumMixinStr_PEM_STRING_X509_TRUSTED);
        }
    }




    static if(!is(typeof(PEM_STRING_X509_REQ_OLD))) {
        private enum enumMixinStr_PEM_STRING_X509_REQ_OLD = `enum PEM_STRING_X509_REQ_OLD = "NEW CERTIFICATE REQUEST";`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_STRING_X509_REQ_OLD); }))) {
            mixin(enumMixinStr_PEM_STRING_X509_REQ_OLD);
        }
    }




    static if(!is(typeof(PEM_STRING_X509_REQ))) {
        private enum enumMixinStr_PEM_STRING_X509_REQ = `enum PEM_STRING_X509_REQ = "CERTIFICATE REQUEST";`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_STRING_X509_REQ); }))) {
            mixin(enumMixinStr_PEM_STRING_X509_REQ);
        }
    }




    static if(!is(typeof(PEM_STRING_X509_CRL))) {
        private enum enumMixinStr_PEM_STRING_X509_CRL = `enum PEM_STRING_X509_CRL = "X509 CRL";`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_STRING_X509_CRL); }))) {
            mixin(enumMixinStr_PEM_STRING_X509_CRL);
        }
    }




    static if(!is(typeof(PEM_STRING_EVP_PKEY))) {
        private enum enumMixinStr_PEM_STRING_EVP_PKEY = `enum PEM_STRING_EVP_PKEY = "ANY PRIVATE KEY";`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_STRING_EVP_PKEY); }))) {
            mixin(enumMixinStr_PEM_STRING_EVP_PKEY);
        }
    }




    static if(!is(typeof(PEM_STRING_PUBLIC))) {
        private enum enumMixinStr_PEM_STRING_PUBLIC = `enum PEM_STRING_PUBLIC = "PUBLIC KEY";`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_STRING_PUBLIC); }))) {
            mixin(enumMixinStr_PEM_STRING_PUBLIC);
        }
    }




    static if(!is(typeof(PEM_STRING_RSA))) {
        private enum enumMixinStr_PEM_STRING_RSA = `enum PEM_STRING_RSA = "RSA PRIVATE KEY";`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_STRING_RSA); }))) {
            mixin(enumMixinStr_PEM_STRING_RSA);
        }
    }




    static if(!is(typeof(PEM_STRING_RSA_PUBLIC))) {
        private enum enumMixinStr_PEM_STRING_RSA_PUBLIC = `enum PEM_STRING_RSA_PUBLIC = "RSA PUBLIC KEY";`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_STRING_RSA_PUBLIC); }))) {
            mixin(enumMixinStr_PEM_STRING_RSA_PUBLIC);
        }
    }




    static if(!is(typeof(PEM_STRING_DSA))) {
        private enum enumMixinStr_PEM_STRING_DSA = `enum PEM_STRING_DSA = "DSA PRIVATE KEY";`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_STRING_DSA); }))) {
            mixin(enumMixinStr_PEM_STRING_DSA);
        }
    }




    static if(!is(typeof(PEM_STRING_DSA_PUBLIC))) {
        private enum enumMixinStr_PEM_STRING_DSA_PUBLIC = `enum PEM_STRING_DSA_PUBLIC = "DSA PUBLIC KEY";`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_STRING_DSA_PUBLIC); }))) {
            mixin(enumMixinStr_PEM_STRING_DSA_PUBLIC);
        }
    }




    static if(!is(typeof(PEM_STRING_PKCS7))) {
        private enum enumMixinStr_PEM_STRING_PKCS7 = `enum PEM_STRING_PKCS7 = "PKCS7";`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_STRING_PKCS7); }))) {
            mixin(enumMixinStr_PEM_STRING_PKCS7);
        }
    }




    static if(!is(typeof(PEM_STRING_PKCS7_SIGNED))) {
        private enum enumMixinStr_PEM_STRING_PKCS7_SIGNED = `enum PEM_STRING_PKCS7_SIGNED = "PKCS #7 SIGNED DATA";`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_STRING_PKCS7_SIGNED); }))) {
            mixin(enumMixinStr_PEM_STRING_PKCS7_SIGNED);
        }
    }




    static if(!is(typeof(PEM_STRING_PKCS8))) {
        private enum enumMixinStr_PEM_STRING_PKCS8 = `enum PEM_STRING_PKCS8 = "ENCRYPTED PRIVATE KEY";`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_STRING_PKCS8); }))) {
            mixin(enumMixinStr_PEM_STRING_PKCS8);
        }
    }




    static if(!is(typeof(PEM_STRING_PKCS8INF))) {
        private enum enumMixinStr_PEM_STRING_PKCS8INF = `enum PEM_STRING_PKCS8INF = "PRIVATE KEY";`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_STRING_PKCS8INF); }))) {
            mixin(enumMixinStr_PEM_STRING_PKCS8INF);
        }
    }




    static if(!is(typeof(PEM_STRING_DHPARAMS))) {
        private enum enumMixinStr_PEM_STRING_DHPARAMS = `enum PEM_STRING_DHPARAMS = "DH PARAMETERS";`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_STRING_DHPARAMS); }))) {
            mixin(enumMixinStr_PEM_STRING_DHPARAMS);
        }
    }




    static if(!is(typeof(PEM_STRING_DHXPARAMS))) {
        private enum enumMixinStr_PEM_STRING_DHXPARAMS = `enum PEM_STRING_DHXPARAMS = "X9.42 DH PARAMETERS";`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_STRING_DHXPARAMS); }))) {
            mixin(enumMixinStr_PEM_STRING_DHXPARAMS);
        }
    }




    static if(!is(typeof(PEM_STRING_SSL_SESSION))) {
        private enum enumMixinStr_PEM_STRING_SSL_SESSION = `enum PEM_STRING_SSL_SESSION = "SSL SESSION PARAMETERS";`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_STRING_SSL_SESSION); }))) {
            mixin(enumMixinStr_PEM_STRING_SSL_SESSION);
        }
    }




    static if(!is(typeof(PEM_STRING_DSAPARAMS))) {
        private enum enumMixinStr_PEM_STRING_DSAPARAMS = `enum PEM_STRING_DSAPARAMS = "DSA PARAMETERS";`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_STRING_DSAPARAMS); }))) {
            mixin(enumMixinStr_PEM_STRING_DSAPARAMS);
        }
    }




    static if(!is(typeof(PEM_STRING_ECDSA_PUBLIC))) {
        private enum enumMixinStr_PEM_STRING_ECDSA_PUBLIC = `enum PEM_STRING_ECDSA_PUBLIC = "ECDSA PUBLIC KEY";`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_STRING_ECDSA_PUBLIC); }))) {
            mixin(enumMixinStr_PEM_STRING_ECDSA_PUBLIC);
        }
    }




    static if(!is(typeof(PEM_STRING_ECPARAMETERS))) {
        private enum enumMixinStr_PEM_STRING_ECPARAMETERS = `enum PEM_STRING_ECPARAMETERS = "EC PARAMETERS";`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_STRING_ECPARAMETERS); }))) {
            mixin(enumMixinStr_PEM_STRING_ECPARAMETERS);
        }
    }




    static if(!is(typeof(PEM_STRING_ECPRIVATEKEY))) {
        private enum enumMixinStr_PEM_STRING_ECPRIVATEKEY = `enum PEM_STRING_ECPRIVATEKEY = "EC PRIVATE KEY";`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_STRING_ECPRIVATEKEY); }))) {
            mixin(enumMixinStr_PEM_STRING_ECPRIVATEKEY);
        }
    }




    static if(!is(typeof(PEM_STRING_PARAMETERS))) {
        private enum enumMixinStr_PEM_STRING_PARAMETERS = `enum PEM_STRING_PARAMETERS = "PARAMETERS";`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_STRING_PARAMETERS); }))) {
            mixin(enumMixinStr_PEM_STRING_PARAMETERS);
        }
    }




    static if(!is(typeof(PEM_STRING_CMS))) {
        private enum enumMixinStr_PEM_STRING_CMS = `enum PEM_STRING_CMS = "CMS";`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_STRING_CMS); }))) {
            mixin(enumMixinStr_PEM_STRING_CMS);
        }
    }




    static if(!is(typeof(PEM_TYPE_ENCRYPTED))) {
        private enum enumMixinStr_PEM_TYPE_ENCRYPTED = `enum PEM_TYPE_ENCRYPTED = 10;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_TYPE_ENCRYPTED); }))) {
            mixin(enumMixinStr_PEM_TYPE_ENCRYPTED);
        }
    }




    static if(!is(typeof(PEM_TYPE_MIC_ONLY))) {
        private enum enumMixinStr_PEM_TYPE_MIC_ONLY = `enum PEM_TYPE_MIC_ONLY = 20;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_TYPE_MIC_ONLY); }))) {
            mixin(enumMixinStr_PEM_TYPE_MIC_ONLY);
        }
    }




    static if(!is(typeof(PEM_TYPE_MIC_CLEAR))) {
        private enum enumMixinStr_PEM_TYPE_MIC_CLEAR = `enum PEM_TYPE_MIC_CLEAR = 30;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_TYPE_MIC_CLEAR); }))) {
            mixin(enumMixinStr_PEM_TYPE_MIC_CLEAR);
        }
    }




    static if(!is(typeof(PEM_TYPE_CLEAR))) {
        private enum enumMixinStr_PEM_TYPE_CLEAR = `enum PEM_TYPE_CLEAR = 40;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_TYPE_CLEAR); }))) {
            mixin(enumMixinStr_PEM_TYPE_CLEAR);
        }
    }
    static if(!is(typeof(SN_id_cmc_lraPOPWitness))) {
        private enum enumMixinStr_SN_id_cmc_lraPOPWitness = `enum SN_id_cmc_lraPOPWitness = "id-cmc-lraPOPWitness";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_cmc_lraPOPWitness); }))) {
            mixin(enumMixinStr_SN_id_cmc_lraPOPWitness);
        }
    }




    static if(!is(typeof(OBJ_id_cmc_decryptedPOP))) {
        private enum enumMixinStr_OBJ_id_cmc_decryptedPOP = `enum OBJ_id_cmc_decryptedPOP = OBJ_id_cmc , 10L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_cmc_decryptedPOP); }))) {
            mixin(enumMixinStr_OBJ_id_cmc_decryptedPOP);
        }
    }




    static if(!is(typeof(NID_id_cmc_decryptedPOP))) {
        private enum enumMixinStr_NID_id_cmc_decryptedPOP = `enum NID_id_cmc_decryptedPOP = 336;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_cmc_decryptedPOP); }))) {
            mixin(enumMixinStr_NID_id_cmc_decryptedPOP);
        }
    }




    static if(!is(typeof(SN_id_cmc_decryptedPOP))) {
        private enum enumMixinStr_SN_id_cmc_decryptedPOP = `enum SN_id_cmc_decryptedPOP = "id-cmc-decryptedPOP";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_cmc_decryptedPOP); }))) {
            mixin(enumMixinStr_SN_id_cmc_decryptedPOP);
        }
    }




    static if(!is(typeof(PEM_FLAG_SECURE))) {
        private enum enumMixinStr_PEM_FLAG_SECURE = `enum PEM_FLAG_SECURE = 0x1;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_FLAG_SECURE); }))) {
            mixin(enumMixinStr_PEM_FLAG_SECURE);
        }
    }




    static if(!is(typeof(PEM_FLAG_EAY_COMPATIBLE))) {
        private enum enumMixinStr_PEM_FLAG_EAY_COMPATIBLE = `enum PEM_FLAG_EAY_COMPATIBLE = 0x2;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_FLAG_EAY_COMPATIBLE); }))) {
            mixin(enumMixinStr_PEM_FLAG_EAY_COMPATIBLE);
        }
    }




    static if(!is(typeof(PEM_FLAG_ONLY_B64))) {
        private enum enumMixinStr_PEM_FLAG_ONLY_B64 = `enum PEM_FLAG_ONLY_B64 = 0x4;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_FLAG_ONLY_B64); }))) {
            mixin(enumMixinStr_PEM_FLAG_ONLY_B64);
        }
    }




    static if(!is(typeof(OBJ_id_cmc_encryptedPOP))) {
        private enum enumMixinStr_OBJ_id_cmc_encryptedPOP = `enum OBJ_id_cmc_encryptedPOP = OBJ_id_cmc , 9L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_cmc_encryptedPOP); }))) {
            mixin(enumMixinStr_OBJ_id_cmc_encryptedPOP);
        }
    }




    static if(!is(typeof(NID_id_cmc_encryptedPOP))) {
        private enum enumMixinStr_NID_id_cmc_encryptedPOP = `enum NID_id_cmc_encryptedPOP = 335;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_cmc_encryptedPOP); }))) {
            mixin(enumMixinStr_NID_id_cmc_encryptedPOP);
        }
    }




    static if(!is(typeof(SN_id_cmc_encryptedPOP))) {
        private enum enumMixinStr_SN_id_cmc_encryptedPOP = `enum SN_id_cmc_encryptedPOP = "id-cmc-encryptedPOP";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_cmc_encryptedPOP); }))) {
            mixin(enumMixinStr_SN_id_cmc_encryptedPOP);
        }
    }




    static if(!is(typeof(OBJ_id_cmc_addExtensions))) {
        private enum enumMixinStr_OBJ_id_cmc_addExtensions = `enum OBJ_id_cmc_addExtensions = OBJ_id_cmc , 8L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_cmc_addExtensions); }))) {
            mixin(enumMixinStr_OBJ_id_cmc_addExtensions);
        }
    }




    static if(!is(typeof(NID_id_cmc_addExtensions))) {
        private enum enumMixinStr_NID_id_cmc_addExtensions = `enum NID_id_cmc_addExtensions = 334;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_cmc_addExtensions); }))) {
            mixin(enumMixinStr_NID_id_cmc_addExtensions);
        }
    }




    static if(!is(typeof(SN_id_cmc_addExtensions))) {
        private enum enumMixinStr_SN_id_cmc_addExtensions = `enum SN_id_cmc_addExtensions = "id-cmc-addExtensions";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_cmc_addExtensions); }))) {
            mixin(enumMixinStr_SN_id_cmc_addExtensions);
        }
    }




    static if(!is(typeof(OBJ_id_cmc_recipientNonce))) {
        private enum enumMixinStr_OBJ_id_cmc_recipientNonce = `enum OBJ_id_cmc_recipientNonce = OBJ_id_cmc , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_cmc_recipientNonce); }))) {
            mixin(enumMixinStr_OBJ_id_cmc_recipientNonce);
        }
    }




    static if(!is(typeof(NID_id_cmc_recipientNonce))) {
        private enum enumMixinStr_NID_id_cmc_recipientNonce = `enum NID_id_cmc_recipientNonce = 333;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_cmc_recipientNonce); }))) {
            mixin(enumMixinStr_NID_id_cmc_recipientNonce);
        }
    }




    static if(!is(typeof(SN_id_cmc_recipientNonce))) {
        private enum enumMixinStr_SN_id_cmc_recipientNonce = `enum SN_id_cmc_recipientNonce = "id-cmc-recipientNonce";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_cmc_recipientNonce); }))) {
            mixin(enumMixinStr_SN_id_cmc_recipientNonce);
        }
    }




    static if(!is(typeof(OBJ_id_cmc_senderNonce))) {
        private enum enumMixinStr_OBJ_id_cmc_senderNonce = `enum OBJ_id_cmc_senderNonce = OBJ_id_cmc , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_cmc_senderNonce); }))) {
            mixin(enumMixinStr_OBJ_id_cmc_senderNonce);
        }
    }




    static if(!is(typeof(NID_id_cmc_senderNonce))) {
        private enum enumMixinStr_NID_id_cmc_senderNonce = `enum NID_id_cmc_senderNonce = 332;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_cmc_senderNonce); }))) {
            mixin(enumMixinStr_NID_id_cmc_senderNonce);
        }
    }




    static if(!is(typeof(SN_id_cmc_senderNonce))) {
        private enum enumMixinStr_SN_id_cmc_senderNonce = `enum SN_id_cmc_senderNonce = "id-cmc-senderNonce";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_cmc_senderNonce); }))) {
            mixin(enumMixinStr_SN_id_cmc_senderNonce);
        }
    }




    static if(!is(typeof(OBJ_id_cmc_transactionId))) {
        private enum enumMixinStr_OBJ_id_cmc_transactionId = `enum OBJ_id_cmc_transactionId = OBJ_id_cmc , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_cmc_transactionId); }))) {
            mixin(enumMixinStr_OBJ_id_cmc_transactionId);
        }
    }




    static if(!is(typeof(NID_id_cmc_transactionId))) {
        private enum enumMixinStr_NID_id_cmc_transactionId = `enum NID_id_cmc_transactionId = 331;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_cmc_transactionId); }))) {
            mixin(enumMixinStr_NID_id_cmc_transactionId);
        }
    }




    static if(!is(typeof(SN_id_cmc_transactionId))) {
        private enum enumMixinStr_SN_id_cmc_transactionId = `enum SN_id_cmc_transactionId = "id-cmc-transactionId";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_cmc_transactionId); }))) {
            mixin(enumMixinStr_SN_id_cmc_transactionId);
        }
    }




    static if(!is(typeof(OBJ_id_cmc_dataReturn))) {
        private enum enumMixinStr_OBJ_id_cmc_dataReturn = `enum OBJ_id_cmc_dataReturn = OBJ_id_cmc , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_cmc_dataReturn); }))) {
            mixin(enumMixinStr_OBJ_id_cmc_dataReturn);
        }
    }




    static if(!is(typeof(NID_id_cmc_dataReturn))) {
        private enum enumMixinStr_NID_id_cmc_dataReturn = `enum NID_id_cmc_dataReturn = 330;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_cmc_dataReturn); }))) {
            mixin(enumMixinStr_NID_id_cmc_dataReturn);
        }
    }




    static if(!is(typeof(SN_id_cmc_dataReturn))) {
        private enum enumMixinStr_SN_id_cmc_dataReturn = `enum SN_id_cmc_dataReturn = "id-cmc-dataReturn";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_cmc_dataReturn); }))) {
            mixin(enumMixinStr_SN_id_cmc_dataReturn);
        }
    }




    static if(!is(typeof(OBJ_id_cmc_identityProof))) {
        private enum enumMixinStr_OBJ_id_cmc_identityProof = `enum OBJ_id_cmc_identityProof = OBJ_id_cmc , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_cmc_identityProof); }))) {
            mixin(enumMixinStr_OBJ_id_cmc_identityProof);
        }
    }




    static if(!is(typeof(NID_id_cmc_identityProof))) {
        private enum enumMixinStr_NID_id_cmc_identityProof = `enum NID_id_cmc_identityProof = 329;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_cmc_identityProof); }))) {
            mixin(enumMixinStr_NID_id_cmc_identityProof);
        }
    }




    static if(!is(typeof(SN_id_cmc_identityProof))) {
        private enum enumMixinStr_SN_id_cmc_identityProof = `enum SN_id_cmc_identityProof = "id-cmc-identityProof";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_cmc_identityProof); }))) {
            mixin(enumMixinStr_SN_id_cmc_identityProof);
        }
    }




    static if(!is(typeof(OBJ_id_cmc_identification))) {
        private enum enumMixinStr_OBJ_id_cmc_identification = `enum OBJ_id_cmc_identification = OBJ_id_cmc , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_cmc_identification); }))) {
            mixin(enumMixinStr_OBJ_id_cmc_identification);
        }
    }




    static if(!is(typeof(NID_id_cmc_identification))) {
        private enum enumMixinStr_NID_id_cmc_identification = `enum NID_id_cmc_identification = 328;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_cmc_identification); }))) {
            mixin(enumMixinStr_NID_id_cmc_identification);
        }
    }




    static if(!is(typeof(SN_id_cmc_identification))) {
        private enum enumMixinStr_SN_id_cmc_identification = `enum SN_id_cmc_identification = "id-cmc-identification";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_cmc_identification); }))) {
            mixin(enumMixinStr_SN_id_cmc_identification);
        }
    }




    static if(!is(typeof(OBJ_id_cmc_statusInfo))) {
        private enum enumMixinStr_OBJ_id_cmc_statusInfo = `enum OBJ_id_cmc_statusInfo = OBJ_id_cmc , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_cmc_statusInfo); }))) {
            mixin(enumMixinStr_OBJ_id_cmc_statusInfo);
        }
    }




    static if(!is(typeof(NID_id_cmc_statusInfo))) {
        private enum enumMixinStr_NID_id_cmc_statusInfo = `enum NID_id_cmc_statusInfo = 327;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_cmc_statusInfo); }))) {
            mixin(enumMixinStr_NID_id_cmc_statusInfo);
        }
    }




    static if(!is(typeof(SN_id_cmc_statusInfo))) {
        private enum enumMixinStr_SN_id_cmc_statusInfo = `enum SN_id_cmc_statusInfo = "id-cmc-statusInfo";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_cmc_statusInfo); }))) {
            mixin(enumMixinStr_SN_id_cmc_statusInfo);
        }
    }




    static if(!is(typeof(OBJ_id_alg_dh_pop))) {
        private enum enumMixinStr_OBJ_id_alg_dh_pop = `enum OBJ_id_alg_dh_pop = OBJ_id_alg , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_alg_dh_pop); }))) {
            mixin(enumMixinStr_OBJ_id_alg_dh_pop);
        }
    }




    static if(!is(typeof(NID_id_alg_dh_pop))) {
        private enum enumMixinStr_NID_id_alg_dh_pop = `enum NID_id_alg_dh_pop = 326;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_alg_dh_pop); }))) {
            mixin(enumMixinStr_NID_id_alg_dh_pop);
        }
    }




    static if(!is(typeof(SN_id_alg_dh_pop))) {
        private enum enumMixinStr_SN_id_alg_dh_pop = `enum SN_id_alg_dh_pop = "id-alg-dh-pop";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_alg_dh_pop); }))) {
            mixin(enumMixinStr_SN_id_alg_dh_pop);
        }
    }




    static if(!is(typeof(OBJ_id_alg_dh_sig_hmac_sha1))) {
        private enum enumMixinStr_OBJ_id_alg_dh_sig_hmac_sha1 = `enum OBJ_id_alg_dh_sig_hmac_sha1 = OBJ_id_alg , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_alg_dh_sig_hmac_sha1); }))) {
            mixin(enumMixinStr_OBJ_id_alg_dh_sig_hmac_sha1);
        }
    }




    static if(!is(typeof(NID_id_alg_dh_sig_hmac_sha1))) {
        private enum enumMixinStr_NID_id_alg_dh_sig_hmac_sha1 = `enum NID_id_alg_dh_sig_hmac_sha1 = 325;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_alg_dh_sig_hmac_sha1); }))) {
            mixin(enumMixinStr_NID_id_alg_dh_sig_hmac_sha1);
        }
    }




    static if(!is(typeof(SN_id_alg_dh_sig_hmac_sha1))) {
        private enum enumMixinStr_SN_id_alg_dh_sig_hmac_sha1 = `enum SN_id_alg_dh_sig_hmac_sha1 = "id-alg-dh-sig-hmac-sha1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_alg_dh_sig_hmac_sha1); }))) {
            mixin(enumMixinStr_SN_id_alg_dh_sig_hmac_sha1);
        }
    }




    static if(!is(typeof(OBJ_id_alg_noSignature))) {
        private enum enumMixinStr_OBJ_id_alg_noSignature = `enum OBJ_id_alg_noSignature = OBJ_id_alg , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_alg_noSignature); }))) {
            mixin(enumMixinStr_OBJ_id_alg_noSignature);
        }
    }




    static if(!is(typeof(NID_id_alg_noSignature))) {
        private enum enumMixinStr_NID_id_alg_noSignature = `enum NID_id_alg_noSignature = 324;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_alg_noSignature); }))) {
            mixin(enumMixinStr_NID_id_alg_noSignature);
        }
    }




    static if(!is(typeof(SN_id_alg_noSignature))) {
        private enum enumMixinStr_SN_id_alg_noSignature = `enum SN_id_alg_noSignature = "id-alg-noSignature";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_alg_noSignature); }))) {
            mixin(enumMixinStr_SN_id_alg_noSignature);
        }
    }




    static if(!is(typeof(OBJ_id_alg_des40))) {
        private enum enumMixinStr_OBJ_id_alg_des40 = `enum OBJ_id_alg_des40 = OBJ_id_alg , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_alg_des40); }))) {
            mixin(enumMixinStr_OBJ_id_alg_des40);
        }
    }




    static if(!is(typeof(NID_id_alg_des40))) {
        private enum enumMixinStr_NID_id_alg_des40 = `enum NID_id_alg_des40 = 323;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_alg_des40); }))) {
            mixin(enumMixinStr_NID_id_alg_des40);
        }
    }




    static if(!is(typeof(SN_id_alg_des40))) {
        private enum enumMixinStr_SN_id_alg_des40 = `enum SN_id_alg_des40 = "id-alg-des40";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_alg_des40); }))) {
            mixin(enumMixinStr_SN_id_alg_des40);
        }
    }




    static if(!is(typeof(OBJ_id_regInfo_certReq))) {
        private enum enumMixinStr_OBJ_id_regInfo_certReq = `enum OBJ_id_regInfo_certReq = OBJ_id_regInfo , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_regInfo_certReq); }))) {
            mixin(enumMixinStr_OBJ_id_regInfo_certReq);
        }
    }




    static if(!is(typeof(NID_id_regInfo_certReq))) {
        private enum enumMixinStr_NID_id_regInfo_certReq = `enum NID_id_regInfo_certReq = 322;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_regInfo_certReq); }))) {
            mixin(enumMixinStr_NID_id_regInfo_certReq);
        }
    }




    static if(!is(typeof(SN_id_regInfo_certReq))) {
        private enum enumMixinStr_SN_id_regInfo_certReq = `enum SN_id_regInfo_certReq = "id-regInfo-certReq";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_regInfo_certReq); }))) {
            mixin(enumMixinStr_SN_id_regInfo_certReq);
        }
    }




    static if(!is(typeof(OBJ_id_regInfo_utf8Pairs))) {
        private enum enumMixinStr_OBJ_id_regInfo_utf8Pairs = `enum OBJ_id_regInfo_utf8Pairs = OBJ_id_regInfo , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_regInfo_utf8Pairs); }))) {
            mixin(enumMixinStr_OBJ_id_regInfo_utf8Pairs);
        }
    }




    static if(!is(typeof(NID_id_regInfo_utf8Pairs))) {
        private enum enumMixinStr_NID_id_regInfo_utf8Pairs = `enum NID_id_regInfo_utf8Pairs = 321;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_regInfo_utf8Pairs); }))) {
            mixin(enumMixinStr_NID_id_regInfo_utf8Pairs);
        }
    }




    static if(!is(typeof(SN_id_regInfo_utf8Pairs))) {
        private enum enumMixinStr_SN_id_regInfo_utf8Pairs = `enum SN_id_regInfo_utf8Pairs = "id-regInfo-utf8Pairs";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_regInfo_utf8Pairs); }))) {
            mixin(enumMixinStr_SN_id_regInfo_utf8Pairs);
        }
    }




    static if(!is(typeof(OBJ_id_regCtrl_protocolEncrKey))) {
        private enum enumMixinStr_OBJ_id_regCtrl_protocolEncrKey = `enum OBJ_id_regCtrl_protocolEncrKey = OBJ_id_regCtrl , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_regCtrl_protocolEncrKey); }))) {
            mixin(enumMixinStr_OBJ_id_regCtrl_protocolEncrKey);
        }
    }




    static if(!is(typeof(NID_id_regCtrl_protocolEncrKey))) {
        private enum enumMixinStr_NID_id_regCtrl_protocolEncrKey = `enum NID_id_regCtrl_protocolEncrKey = 320;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_regCtrl_protocolEncrKey); }))) {
            mixin(enumMixinStr_NID_id_regCtrl_protocolEncrKey);
        }
    }




    static if(!is(typeof(SN_id_regCtrl_protocolEncrKey))) {
        private enum enumMixinStr_SN_id_regCtrl_protocolEncrKey = `enum SN_id_regCtrl_protocolEncrKey = "id-regCtrl-protocolEncrKey";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_regCtrl_protocolEncrKey); }))) {
            mixin(enumMixinStr_SN_id_regCtrl_protocolEncrKey);
        }
    }




    static if(!is(typeof(OBJ_id_regCtrl_oldCertID))) {
        private enum enumMixinStr_OBJ_id_regCtrl_oldCertID = `enum OBJ_id_regCtrl_oldCertID = OBJ_id_regCtrl , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_regCtrl_oldCertID); }))) {
            mixin(enumMixinStr_OBJ_id_regCtrl_oldCertID);
        }
    }




    static if(!is(typeof(NID_id_regCtrl_oldCertID))) {
        private enum enumMixinStr_NID_id_regCtrl_oldCertID = `enum NID_id_regCtrl_oldCertID = 319;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_regCtrl_oldCertID); }))) {
            mixin(enumMixinStr_NID_id_regCtrl_oldCertID);
        }
    }




    static if(!is(typeof(SN_id_regCtrl_oldCertID))) {
        private enum enumMixinStr_SN_id_regCtrl_oldCertID = `enum SN_id_regCtrl_oldCertID = "id-regCtrl-oldCertID";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_regCtrl_oldCertID); }))) {
            mixin(enumMixinStr_SN_id_regCtrl_oldCertID);
        }
    }




    static if(!is(typeof(OBJ_id_regCtrl_pkiArchiveOptions))) {
        private enum enumMixinStr_OBJ_id_regCtrl_pkiArchiveOptions = `enum OBJ_id_regCtrl_pkiArchiveOptions = OBJ_id_regCtrl , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_regCtrl_pkiArchiveOptions); }))) {
            mixin(enumMixinStr_OBJ_id_regCtrl_pkiArchiveOptions);
        }
    }




    static if(!is(typeof(NID_id_regCtrl_pkiArchiveOptions))) {
        private enum enumMixinStr_NID_id_regCtrl_pkiArchiveOptions = `enum NID_id_regCtrl_pkiArchiveOptions = 318;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_regCtrl_pkiArchiveOptions); }))) {
            mixin(enumMixinStr_NID_id_regCtrl_pkiArchiveOptions);
        }
    }




    static if(!is(typeof(SN_id_regCtrl_pkiArchiveOptions))) {
        private enum enumMixinStr_SN_id_regCtrl_pkiArchiveOptions = `enum SN_id_regCtrl_pkiArchiveOptions = "id-regCtrl-pkiArchiveOptions";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_regCtrl_pkiArchiveOptions); }))) {
            mixin(enumMixinStr_SN_id_regCtrl_pkiArchiveOptions);
        }
    }




    static if(!is(typeof(OBJ_id_regCtrl_pkiPublicationInfo))) {
        private enum enumMixinStr_OBJ_id_regCtrl_pkiPublicationInfo = `enum OBJ_id_regCtrl_pkiPublicationInfo = OBJ_id_regCtrl , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_regCtrl_pkiPublicationInfo); }))) {
            mixin(enumMixinStr_OBJ_id_regCtrl_pkiPublicationInfo);
        }
    }




    static if(!is(typeof(NID_id_regCtrl_pkiPublicationInfo))) {
        private enum enumMixinStr_NID_id_regCtrl_pkiPublicationInfo = `enum NID_id_regCtrl_pkiPublicationInfo = 317;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_regCtrl_pkiPublicationInfo); }))) {
            mixin(enumMixinStr_NID_id_regCtrl_pkiPublicationInfo);
        }
    }




    static if(!is(typeof(SN_id_regCtrl_pkiPublicationInfo))) {
        private enum enumMixinStr_SN_id_regCtrl_pkiPublicationInfo = `enum SN_id_regCtrl_pkiPublicationInfo = "id-regCtrl-pkiPublicationInfo";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_regCtrl_pkiPublicationInfo); }))) {
            mixin(enumMixinStr_SN_id_regCtrl_pkiPublicationInfo);
        }
    }




    static if(!is(typeof(OBJ_id_regCtrl_authenticator))) {
        private enum enumMixinStr_OBJ_id_regCtrl_authenticator = `enum OBJ_id_regCtrl_authenticator = OBJ_id_regCtrl , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_regCtrl_authenticator); }))) {
            mixin(enumMixinStr_OBJ_id_regCtrl_authenticator);
        }
    }




    static if(!is(typeof(NID_id_regCtrl_authenticator))) {
        private enum enumMixinStr_NID_id_regCtrl_authenticator = `enum NID_id_regCtrl_authenticator = 316;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_regCtrl_authenticator); }))) {
            mixin(enumMixinStr_NID_id_regCtrl_authenticator);
        }
    }




    static if(!is(typeof(SN_id_regCtrl_authenticator))) {
        private enum enumMixinStr_SN_id_regCtrl_authenticator = `enum SN_id_regCtrl_authenticator = "id-regCtrl-authenticator";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_regCtrl_authenticator); }))) {
            mixin(enumMixinStr_SN_id_regCtrl_authenticator);
        }
    }




    static if(!is(typeof(OBJ_id_regCtrl_regToken))) {
        private enum enumMixinStr_OBJ_id_regCtrl_regToken = `enum OBJ_id_regCtrl_regToken = OBJ_id_regCtrl , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_regCtrl_regToken); }))) {
            mixin(enumMixinStr_OBJ_id_regCtrl_regToken);
        }
    }




    static if(!is(typeof(NID_id_regCtrl_regToken))) {
        private enum enumMixinStr_NID_id_regCtrl_regToken = `enum NID_id_regCtrl_regToken = 315;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_regCtrl_regToken); }))) {
            mixin(enumMixinStr_NID_id_regCtrl_regToken);
        }
    }




    static if(!is(typeof(SN_id_regCtrl_regToken))) {
        private enum enumMixinStr_SN_id_regCtrl_regToken = `enum SN_id_regCtrl_regToken = "id-regCtrl-regToken";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_regCtrl_regToken); }))) {
            mixin(enumMixinStr_SN_id_regCtrl_regToken);
        }
    }




    static if(!is(typeof(OBJ_id_regInfo))) {
        private enum enumMixinStr_OBJ_id_regInfo = `enum OBJ_id_regInfo = OBJ_id_pkip , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_regInfo); }))) {
            mixin(enumMixinStr_OBJ_id_regInfo);
        }
    }




    static if(!is(typeof(NID_id_regInfo))) {
        private enum enumMixinStr_NID_id_regInfo = `enum NID_id_regInfo = 314;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_regInfo); }))) {
            mixin(enumMixinStr_NID_id_regInfo);
        }
    }




    static if(!is(typeof(SN_id_regInfo))) {
        private enum enumMixinStr_SN_id_regInfo = `enum SN_id_regInfo = "id-regInfo";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_regInfo); }))) {
            mixin(enumMixinStr_SN_id_regInfo);
        }
    }




    static if(!is(typeof(OBJ_id_regCtrl))) {
        private enum enumMixinStr_OBJ_id_regCtrl = `enum OBJ_id_regCtrl = OBJ_id_pkip , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_regCtrl); }))) {
            mixin(enumMixinStr_OBJ_id_regCtrl);
        }
    }




    static if(!is(typeof(NID_id_regCtrl))) {
        private enum enumMixinStr_NID_id_regCtrl = `enum NID_id_regCtrl = 313;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_regCtrl); }))) {
            mixin(enumMixinStr_NID_id_regCtrl);
        }
    }




    static if(!is(typeof(SN_id_regCtrl))) {
        private enum enumMixinStr_SN_id_regCtrl = `enum SN_id_regCtrl = "id-regCtrl";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_regCtrl); }))) {
            mixin(enumMixinStr_SN_id_regCtrl);
        }
    }




    static if(!is(typeof(OBJ_id_it_suppLangTags))) {
        private enum enumMixinStr_OBJ_id_it_suppLangTags = `enum OBJ_id_it_suppLangTags = OBJ_id_it , 16L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_it_suppLangTags); }))) {
            mixin(enumMixinStr_OBJ_id_it_suppLangTags);
        }
    }




    static if(!is(typeof(NID_id_it_suppLangTags))) {
        private enum enumMixinStr_NID_id_it_suppLangTags = `enum NID_id_it_suppLangTags = 784;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_it_suppLangTags); }))) {
            mixin(enumMixinStr_NID_id_it_suppLangTags);
        }
    }




    static if(!is(typeof(SN_id_it_suppLangTags))) {
        private enum enumMixinStr_SN_id_it_suppLangTags = `enum SN_id_it_suppLangTags = "id-it-suppLangTags";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_it_suppLangTags); }))) {
            mixin(enumMixinStr_SN_id_it_suppLangTags);
        }
    }




    static if(!is(typeof(OBJ_id_it_origPKIMessage))) {
        private enum enumMixinStr_OBJ_id_it_origPKIMessage = `enum OBJ_id_it_origPKIMessage = OBJ_id_it , 15L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_it_origPKIMessage); }))) {
            mixin(enumMixinStr_OBJ_id_it_origPKIMessage);
        }
    }




    static if(!is(typeof(NID_id_it_origPKIMessage))) {
        private enum enumMixinStr_NID_id_it_origPKIMessage = `enum NID_id_it_origPKIMessage = 312;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_it_origPKIMessage); }))) {
            mixin(enumMixinStr_NID_id_it_origPKIMessage);
        }
    }




    static if(!is(typeof(SN_id_it_origPKIMessage))) {
        private enum enumMixinStr_SN_id_it_origPKIMessage = `enum SN_id_it_origPKIMessage = "id-it-origPKIMessage";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_it_origPKIMessage); }))) {
            mixin(enumMixinStr_SN_id_it_origPKIMessage);
        }
    }




    static if(!is(typeof(OBJ_id_it_confirmWaitTime))) {
        private enum enumMixinStr_OBJ_id_it_confirmWaitTime = `enum OBJ_id_it_confirmWaitTime = OBJ_id_it , 14L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_it_confirmWaitTime); }))) {
            mixin(enumMixinStr_OBJ_id_it_confirmWaitTime);
        }
    }




    static if(!is(typeof(NID_id_it_confirmWaitTime))) {
        private enum enumMixinStr_NID_id_it_confirmWaitTime = `enum NID_id_it_confirmWaitTime = 311;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_it_confirmWaitTime); }))) {
            mixin(enumMixinStr_NID_id_it_confirmWaitTime);
        }
    }




    static if(!is(typeof(SN_id_it_confirmWaitTime))) {
        private enum enumMixinStr_SN_id_it_confirmWaitTime = `enum SN_id_it_confirmWaitTime = "id-it-confirmWaitTime";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_it_confirmWaitTime); }))) {
            mixin(enumMixinStr_SN_id_it_confirmWaitTime);
        }
    }




    static if(!is(typeof(OBJ_id_it_implicitConfirm))) {
        private enum enumMixinStr_OBJ_id_it_implicitConfirm = `enum OBJ_id_it_implicitConfirm = OBJ_id_it , 13L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_it_implicitConfirm); }))) {
            mixin(enumMixinStr_OBJ_id_it_implicitConfirm);
        }
    }




    static if(!is(typeof(NID_id_it_implicitConfirm))) {
        private enum enumMixinStr_NID_id_it_implicitConfirm = `enum NID_id_it_implicitConfirm = 310;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_it_implicitConfirm); }))) {
            mixin(enumMixinStr_NID_id_it_implicitConfirm);
        }
    }




    static if(!is(typeof(SN_id_it_implicitConfirm))) {
        private enum enumMixinStr_SN_id_it_implicitConfirm = `enum SN_id_it_implicitConfirm = "id-it-implicitConfirm";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_it_implicitConfirm); }))) {
            mixin(enumMixinStr_SN_id_it_implicitConfirm);
        }
    }




    static if(!is(typeof(OBJ_id_it_revPassphrase))) {
        private enum enumMixinStr_OBJ_id_it_revPassphrase = `enum OBJ_id_it_revPassphrase = OBJ_id_it , 12L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_it_revPassphrase); }))) {
            mixin(enumMixinStr_OBJ_id_it_revPassphrase);
        }
    }




    static if(!is(typeof(NID_id_it_revPassphrase))) {
        private enum enumMixinStr_NID_id_it_revPassphrase = `enum NID_id_it_revPassphrase = 309;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_it_revPassphrase); }))) {
            mixin(enumMixinStr_NID_id_it_revPassphrase);
        }
    }




    static if(!is(typeof(SN_id_it_revPassphrase))) {
        private enum enumMixinStr_SN_id_it_revPassphrase = `enum SN_id_it_revPassphrase = "id-it-revPassphrase";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_it_revPassphrase); }))) {
            mixin(enumMixinStr_SN_id_it_revPassphrase);
        }
    }




    static if(!is(typeof(OBJ_id_it_keyPairParamRep))) {
        private enum enumMixinStr_OBJ_id_it_keyPairParamRep = `enum OBJ_id_it_keyPairParamRep = OBJ_id_it , 11L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_it_keyPairParamRep); }))) {
            mixin(enumMixinStr_OBJ_id_it_keyPairParamRep);
        }
    }




    static if(!is(typeof(NID_id_it_keyPairParamRep))) {
        private enum enumMixinStr_NID_id_it_keyPairParamRep = `enum NID_id_it_keyPairParamRep = 308;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_it_keyPairParamRep); }))) {
            mixin(enumMixinStr_NID_id_it_keyPairParamRep);
        }
    }




    static if(!is(typeof(SN_id_it_keyPairParamRep))) {
        private enum enumMixinStr_SN_id_it_keyPairParamRep = `enum SN_id_it_keyPairParamRep = "id-it-keyPairParamRep";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_it_keyPairParamRep); }))) {
            mixin(enumMixinStr_SN_id_it_keyPairParamRep);
        }
    }




    static if(!is(typeof(OBJ_id_it_keyPairParamReq))) {
        private enum enumMixinStr_OBJ_id_it_keyPairParamReq = `enum OBJ_id_it_keyPairParamReq = OBJ_id_it , 10L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_it_keyPairParamReq); }))) {
            mixin(enumMixinStr_OBJ_id_it_keyPairParamReq);
        }
    }




    static if(!is(typeof(NID_id_it_keyPairParamReq))) {
        private enum enumMixinStr_NID_id_it_keyPairParamReq = `enum NID_id_it_keyPairParamReq = 307;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_it_keyPairParamReq); }))) {
            mixin(enumMixinStr_NID_id_it_keyPairParamReq);
        }
    }




    static if(!is(typeof(SN_id_it_keyPairParamReq))) {
        private enum enumMixinStr_SN_id_it_keyPairParamReq = `enum SN_id_it_keyPairParamReq = "id-it-keyPairParamReq";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_it_keyPairParamReq); }))) {
            mixin(enumMixinStr_SN_id_it_keyPairParamReq);
        }
    }




    static if(!is(typeof(OBJ_id_it_subscriptionResponse))) {
        private enum enumMixinStr_OBJ_id_it_subscriptionResponse = `enum OBJ_id_it_subscriptionResponse = OBJ_id_it , 9L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_it_subscriptionResponse); }))) {
            mixin(enumMixinStr_OBJ_id_it_subscriptionResponse);
        }
    }




    static if(!is(typeof(NID_id_it_subscriptionResponse))) {
        private enum enumMixinStr_NID_id_it_subscriptionResponse = `enum NID_id_it_subscriptionResponse = 306;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_it_subscriptionResponse); }))) {
            mixin(enumMixinStr_NID_id_it_subscriptionResponse);
        }
    }




    static if(!is(typeof(SN_id_it_subscriptionResponse))) {
        private enum enumMixinStr_SN_id_it_subscriptionResponse = `enum SN_id_it_subscriptionResponse = "id-it-subscriptionResponse";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_it_subscriptionResponse); }))) {
            mixin(enumMixinStr_SN_id_it_subscriptionResponse);
        }
    }




    static if(!is(typeof(OBJ_id_it_subscriptionRequest))) {
        private enum enumMixinStr_OBJ_id_it_subscriptionRequest = `enum OBJ_id_it_subscriptionRequest = OBJ_id_it , 8L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_it_subscriptionRequest); }))) {
            mixin(enumMixinStr_OBJ_id_it_subscriptionRequest);
        }
    }




    static if(!is(typeof(NID_id_it_subscriptionRequest))) {
        private enum enumMixinStr_NID_id_it_subscriptionRequest = `enum NID_id_it_subscriptionRequest = 305;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_it_subscriptionRequest); }))) {
            mixin(enumMixinStr_NID_id_it_subscriptionRequest);
        }
    }




    static if(!is(typeof(SN_id_it_subscriptionRequest))) {
        private enum enumMixinStr_SN_id_it_subscriptionRequest = `enum SN_id_it_subscriptionRequest = "id-it-subscriptionRequest";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_it_subscriptionRequest); }))) {
            mixin(enumMixinStr_SN_id_it_subscriptionRequest);
        }
    }




    static if(!is(typeof(OBJ_id_it_unsupportedOIDs))) {
        private enum enumMixinStr_OBJ_id_it_unsupportedOIDs = `enum OBJ_id_it_unsupportedOIDs = OBJ_id_it , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_it_unsupportedOIDs); }))) {
            mixin(enumMixinStr_OBJ_id_it_unsupportedOIDs);
        }
    }




    static if(!is(typeof(NID_id_it_unsupportedOIDs))) {
        private enum enumMixinStr_NID_id_it_unsupportedOIDs = `enum NID_id_it_unsupportedOIDs = 304;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_it_unsupportedOIDs); }))) {
            mixin(enumMixinStr_NID_id_it_unsupportedOIDs);
        }
    }




    static if(!is(typeof(SN_id_it_unsupportedOIDs))) {
        private enum enumMixinStr_SN_id_it_unsupportedOIDs = `enum SN_id_it_unsupportedOIDs = "id-it-unsupportedOIDs";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_it_unsupportedOIDs); }))) {
            mixin(enumMixinStr_SN_id_it_unsupportedOIDs);
        }
    }




    static if(!is(typeof(OBJ_id_it_currentCRL))) {
        private enum enumMixinStr_OBJ_id_it_currentCRL = `enum OBJ_id_it_currentCRL = OBJ_id_it , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_it_currentCRL); }))) {
            mixin(enumMixinStr_OBJ_id_it_currentCRL);
        }
    }




    static if(!is(typeof(NID_id_it_currentCRL))) {
        private enum enumMixinStr_NID_id_it_currentCRL = `enum NID_id_it_currentCRL = 303;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_it_currentCRL); }))) {
            mixin(enumMixinStr_NID_id_it_currentCRL);
        }
    }




    static if(!is(typeof(SN_id_it_currentCRL))) {
        private enum enumMixinStr_SN_id_it_currentCRL = `enum SN_id_it_currentCRL = "id-it-currentCRL";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_it_currentCRL); }))) {
            mixin(enumMixinStr_SN_id_it_currentCRL);
        }
    }




    static if(!is(typeof(OBJ_id_it_caKeyUpdateInfo))) {
        private enum enumMixinStr_OBJ_id_it_caKeyUpdateInfo = `enum OBJ_id_it_caKeyUpdateInfo = OBJ_id_it , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_it_caKeyUpdateInfo); }))) {
            mixin(enumMixinStr_OBJ_id_it_caKeyUpdateInfo);
        }
    }




    static if(!is(typeof(NID_id_it_caKeyUpdateInfo))) {
        private enum enumMixinStr_NID_id_it_caKeyUpdateInfo = `enum NID_id_it_caKeyUpdateInfo = 302;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_it_caKeyUpdateInfo); }))) {
            mixin(enumMixinStr_NID_id_it_caKeyUpdateInfo);
        }
    }




    static if(!is(typeof(SN_id_it_caKeyUpdateInfo))) {
        private enum enumMixinStr_SN_id_it_caKeyUpdateInfo = `enum SN_id_it_caKeyUpdateInfo = "id-it-caKeyUpdateInfo";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_it_caKeyUpdateInfo); }))) {
            mixin(enumMixinStr_SN_id_it_caKeyUpdateInfo);
        }
    }




    static if(!is(typeof(OBJ_id_it_preferredSymmAlg))) {
        private enum enumMixinStr_OBJ_id_it_preferredSymmAlg = `enum OBJ_id_it_preferredSymmAlg = OBJ_id_it , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_it_preferredSymmAlg); }))) {
            mixin(enumMixinStr_OBJ_id_it_preferredSymmAlg);
        }
    }




    static if(!is(typeof(NID_id_it_preferredSymmAlg))) {
        private enum enumMixinStr_NID_id_it_preferredSymmAlg = `enum NID_id_it_preferredSymmAlg = 301;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_it_preferredSymmAlg); }))) {
            mixin(enumMixinStr_NID_id_it_preferredSymmAlg);
        }
    }




    static if(!is(typeof(SN_id_it_preferredSymmAlg))) {
        private enum enumMixinStr_SN_id_it_preferredSymmAlg = `enum SN_id_it_preferredSymmAlg = "id-it-preferredSymmAlg";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_it_preferredSymmAlg); }))) {
            mixin(enumMixinStr_SN_id_it_preferredSymmAlg);
        }
    }




    static if(!is(typeof(OBJ_id_it_encKeyPairTypes))) {
        private enum enumMixinStr_OBJ_id_it_encKeyPairTypes = `enum OBJ_id_it_encKeyPairTypes = OBJ_id_it , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_it_encKeyPairTypes); }))) {
            mixin(enumMixinStr_OBJ_id_it_encKeyPairTypes);
        }
    }




    static if(!is(typeof(NID_id_it_encKeyPairTypes))) {
        private enum enumMixinStr_NID_id_it_encKeyPairTypes = `enum NID_id_it_encKeyPairTypes = 300;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_it_encKeyPairTypes); }))) {
            mixin(enumMixinStr_NID_id_it_encKeyPairTypes);
        }
    }




    static if(!is(typeof(SN_id_it_encKeyPairTypes))) {
        private enum enumMixinStr_SN_id_it_encKeyPairTypes = `enum SN_id_it_encKeyPairTypes = "id-it-encKeyPairTypes";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_it_encKeyPairTypes); }))) {
            mixin(enumMixinStr_SN_id_it_encKeyPairTypes);
        }
    }




    static if(!is(typeof(OBJ_id_it_signKeyPairTypes))) {
        private enum enumMixinStr_OBJ_id_it_signKeyPairTypes = `enum OBJ_id_it_signKeyPairTypes = OBJ_id_it , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_it_signKeyPairTypes); }))) {
            mixin(enumMixinStr_OBJ_id_it_signKeyPairTypes);
        }
    }




    static if(!is(typeof(NID_id_it_signKeyPairTypes))) {
        private enum enumMixinStr_NID_id_it_signKeyPairTypes = `enum NID_id_it_signKeyPairTypes = 299;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_it_signKeyPairTypes); }))) {
            mixin(enumMixinStr_NID_id_it_signKeyPairTypes);
        }
    }




    static if(!is(typeof(SN_id_it_signKeyPairTypes))) {
        private enum enumMixinStr_SN_id_it_signKeyPairTypes = `enum SN_id_it_signKeyPairTypes = "id-it-signKeyPairTypes";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_it_signKeyPairTypes); }))) {
            mixin(enumMixinStr_SN_id_it_signKeyPairTypes);
        }
    }




    static if(!is(typeof(OBJ_id_it_caProtEncCert))) {
        private enum enumMixinStr_OBJ_id_it_caProtEncCert = `enum OBJ_id_it_caProtEncCert = OBJ_id_it , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_it_caProtEncCert); }))) {
            mixin(enumMixinStr_OBJ_id_it_caProtEncCert);
        }
    }




    static if(!is(typeof(NID_id_it_caProtEncCert))) {
        private enum enumMixinStr_NID_id_it_caProtEncCert = `enum NID_id_it_caProtEncCert = 298;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_it_caProtEncCert); }))) {
            mixin(enumMixinStr_NID_id_it_caProtEncCert);
        }
    }




    static if(!is(typeof(SN_id_it_caProtEncCert))) {
        private enum enumMixinStr_SN_id_it_caProtEncCert = `enum SN_id_it_caProtEncCert = "id-it-caProtEncCert";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_it_caProtEncCert); }))) {
            mixin(enumMixinStr_SN_id_it_caProtEncCert);
        }
    }




    static if(!is(typeof(OBJ_cmcRA))) {
        private enum enumMixinStr_OBJ_cmcRA = `enum OBJ_cmcRA = OBJ_id_kp , 28L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_cmcRA); }))) {
            mixin(enumMixinStr_OBJ_cmcRA);
        }
    }




    static if(!is(typeof(NID_cmcRA))) {
        private enum enumMixinStr_NID_cmcRA = `enum NID_cmcRA = 1132;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_cmcRA); }))) {
            mixin(enumMixinStr_NID_cmcRA);
        }
    }




    static if(!is(typeof(LN_cmcRA))) {
        private enum enumMixinStr_LN_cmcRA = `enum LN_cmcRA = "CMC Registration Authority";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_cmcRA); }))) {
            mixin(enumMixinStr_LN_cmcRA);
        }
    }




    static if(!is(typeof(SN_cmcRA))) {
        private enum enumMixinStr_SN_cmcRA = `enum SN_cmcRA = "cmcRA";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_cmcRA); }))) {
            mixin(enumMixinStr_SN_cmcRA);
        }
    }




    static if(!is(typeof(OBJ_cmcCA))) {
        private enum enumMixinStr_OBJ_cmcCA = `enum OBJ_cmcCA = OBJ_id_kp , 27L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_cmcCA); }))) {
            mixin(enumMixinStr_OBJ_cmcCA);
        }
    }




    static if(!is(typeof(NID_cmcCA))) {
        private enum enumMixinStr_NID_cmcCA = `enum NID_cmcCA = 1131;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_cmcCA); }))) {
            mixin(enumMixinStr_NID_cmcCA);
        }
    }




    static if(!is(typeof(LN_cmcCA))) {
        private enum enumMixinStr_LN_cmcCA = `enum LN_cmcCA = "CMC Certificate Authority";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_cmcCA); }))) {
            mixin(enumMixinStr_LN_cmcCA);
        }
    }




    static if(!is(typeof(SN_cmcCA))) {
        private enum enumMixinStr_SN_cmcCA = `enum SN_cmcCA = "cmcCA";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_cmcCA); }))) {
            mixin(enumMixinStr_SN_cmcCA);
        }
    }




    static if(!is(typeof(OBJ_sendProxiedOwner))) {
        private enum enumMixinStr_OBJ_sendProxiedOwner = `enum OBJ_sendProxiedOwner = OBJ_id_kp , 26L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sendProxiedOwner); }))) {
            mixin(enumMixinStr_OBJ_sendProxiedOwner);
        }
    }




    static if(!is(typeof(NID_sendProxiedOwner))) {
        private enum enumMixinStr_NID_sendProxiedOwner = `enum NID_sendProxiedOwner = 1030;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sendProxiedOwner); }))) {
            mixin(enumMixinStr_NID_sendProxiedOwner);
        }
    }




    static if(!is(typeof(LN_sendProxiedOwner))) {
        private enum enumMixinStr_LN_sendProxiedOwner = `enum LN_sendProxiedOwner = "Send Proxied Owner";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sendProxiedOwner); }))) {
            mixin(enumMixinStr_LN_sendProxiedOwner);
        }
    }




    static if(!is(typeof(SN_sendProxiedOwner))) {
        private enum enumMixinStr_SN_sendProxiedOwner = `enum SN_sendProxiedOwner = "sendProxiedOwner";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sendProxiedOwner); }))) {
            mixin(enumMixinStr_SN_sendProxiedOwner);
        }
    }




    static if(!is(typeof(OBJ_sendOwner))) {
        private enum enumMixinStr_OBJ_sendOwner = `enum OBJ_sendOwner = OBJ_id_kp , 25L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sendOwner); }))) {
            mixin(enumMixinStr_OBJ_sendOwner);
        }
    }




    static if(!is(typeof(NID_sendOwner))) {
        private enum enumMixinStr_NID_sendOwner = `enum NID_sendOwner = 1029;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sendOwner); }))) {
            mixin(enumMixinStr_NID_sendOwner);
        }
    }




    static if(!is(typeof(LN_sendOwner))) {
        private enum enumMixinStr_LN_sendOwner = `enum LN_sendOwner = "Send Owner";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sendOwner); }))) {
            mixin(enumMixinStr_LN_sendOwner);
        }
    }




    static if(!is(typeof(SN_sendOwner))) {
        private enum enumMixinStr_SN_sendOwner = `enum SN_sendOwner = "sendOwner";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sendOwner); }))) {
            mixin(enumMixinStr_SN_sendOwner);
        }
    }




    static if(!is(typeof(OBJ_sendProxiedRouter))) {
        private enum enumMixinStr_OBJ_sendProxiedRouter = `enum OBJ_sendProxiedRouter = OBJ_id_kp , 24L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sendProxiedRouter); }))) {
            mixin(enumMixinStr_OBJ_sendProxiedRouter);
        }
    }




    static if(!is(typeof(NID_sendProxiedRouter))) {
        private enum enumMixinStr_NID_sendProxiedRouter = `enum NID_sendProxiedRouter = 1028;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sendProxiedRouter); }))) {
            mixin(enumMixinStr_NID_sendProxiedRouter);
        }
    }




    static if(!is(typeof(LN_sendProxiedRouter))) {
        private enum enumMixinStr_LN_sendProxiedRouter = `enum LN_sendProxiedRouter = "Send Proxied Router";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sendProxiedRouter); }))) {
            mixin(enumMixinStr_LN_sendProxiedRouter);
        }
    }




    static if(!is(typeof(SN_sendProxiedRouter))) {
        private enum enumMixinStr_SN_sendProxiedRouter = `enum SN_sendProxiedRouter = "sendProxiedRouter";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sendProxiedRouter); }))) {
            mixin(enumMixinStr_SN_sendProxiedRouter);
        }
    }




    static if(!is(typeof(OBJ_sendRouter))) {
        private enum enumMixinStr_OBJ_sendRouter = `enum OBJ_sendRouter = OBJ_id_kp , 23L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sendRouter); }))) {
            mixin(enumMixinStr_OBJ_sendRouter);
        }
    }




    static if(!is(typeof(NID_sendRouter))) {
        private enum enumMixinStr_NID_sendRouter = `enum NID_sendRouter = 1027;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sendRouter); }))) {
            mixin(enumMixinStr_NID_sendRouter);
        }
    }




    static if(!is(typeof(LN_sendRouter))) {
        private enum enumMixinStr_LN_sendRouter = `enum LN_sendRouter = "Send Router";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sendRouter); }))) {
            mixin(enumMixinStr_LN_sendRouter);
        }
    }




    static if(!is(typeof(SN_sendRouter))) {
        private enum enumMixinStr_SN_sendRouter = `enum SN_sendRouter = "sendRouter";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sendRouter); }))) {
            mixin(enumMixinStr_SN_sendRouter);
        }
    }




    static if(!is(typeof(OBJ_sshServer))) {
        private enum enumMixinStr_OBJ_sshServer = `enum OBJ_sshServer = OBJ_id_kp , 22L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sshServer); }))) {
            mixin(enumMixinStr_OBJ_sshServer);
        }
    }




    static if(!is(typeof(NID_sshServer))) {
        private enum enumMixinStr_NID_sshServer = `enum NID_sshServer = 1026;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sshServer); }))) {
            mixin(enumMixinStr_NID_sshServer);
        }
    }




    static if(!is(typeof(LN_sshServer))) {
        private enum enumMixinStr_LN_sshServer = `enum LN_sshServer = "SSH Server";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sshServer); }))) {
            mixin(enumMixinStr_LN_sshServer);
        }
    }




    static if(!is(typeof(SN_sshServer))) {
        private enum enumMixinStr_SN_sshServer = `enum SN_sshServer = "secureShellServer";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sshServer); }))) {
            mixin(enumMixinStr_SN_sshServer);
        }
    }




    static if(!is(typeof(OBJ_sshClient))) {
        private enum enumMixinStr_OBJ_sshClient = `enum OBJ_sshClient = OBJ_id_kp , 21L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sshClient); }))) {
            mixin(enumMixinStr_OBJ_sshClient);
        }
    }




    static if(!is(typeof(NID_sshClient))) {
        private enum enumMixinStr_NID_sshClient = `enum NID_sshClient = 1025;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sshClient); }))) {
            mixin(enumMixinStr_NID_sshClient);
        }
    }




    static if(!is(typeof(LN_sshClient))) {
        private enum enumMixinStr_LN_sshClient = `enum LN_sshClient = "SSH Client";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sshClient); }))) {
            mixin(enumMixinStr_LN_sshClient);
        }
    }




    static if(!is(typeof(SN_sshClient))) {
        private enum enumMixinStr_SN_sshClient = `enum SN_sshClient = "secureShellClient";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sshClient); }))) {
            mixin(enumMixinStr_SN_sshClient);
        }
    }




    static if(!is(typeof(OBJ_capwapWTP))) {
        private enum enumMixinStr_OBJ_capwapWTP = `enum OBJ_capwapWTP = OBJ_id_kp , 19L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_capwapWTP); }))) {
            mixin(enumMixinStr_OBJ_capwapWTP);
        }
    }




    static if(!is(typeof(NID_capwapWTP))) {
        private enum enumMixinStr_NID_capwapWTP = `enum NID_capwapWTP = 1024;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_capwapWTP); }))) {
            mixin(enumMixinStr_NID_capwapWTP);
        }
    }






    static if(!is(typeof(LN_capwapWTP))) {
        private enum enumMixinStr_LN_capwapWTP = `enum LN_capwapWTP = "Ctrl/Provision WAP Termination";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_capwapWTP); }))) {
            mixin(enumMixinStr_LN_capwapWTP);
        }
    }




    static if(!is(typeof(SN_capwapWTP))) {
        private enum enumMixinStr_SN_capwapWTP = `enum SN_capwapWTP = "capwapWTP";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_capwapWTP); }))) {
            mixin(enumMixinStr_SN_capwapWTP);
        }
    }




    static if(!is(typeof(PEM_F_B2I_DSS))) {
        private enum enumMixinStr_PEM_F_B2I_DSS = `enum PEM_F_B2I_DSS = 127;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_B2I_DSS); }))) {
            mixin(enumMixinStr_PEM_F_B2I_DSS);
        }
    }




    static if(!is(typeof(PEM_F_B2I_PVK_BIO))) {
        private enum enumMixinStr_PEM_F_B2I_PVK_BIO = `enum PEM_F_B2I_PVK_BIO = 128;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_B2I_PVK_BIO); }))) {
            mixin(enumMixinStr_PEM_F_B2I_PVK_BIO);
        }
    }




    static if(!is(typeof(PEM_F_B2I_RSA))) {
        private enum enumMixinStr_PEM_F_B2I_RSA = `enum PEM_F_B2I_RSA = 129;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_B2I_RSA); }))) {
            mixin(enumMixinStr_PEM_F_B2I_RSA);
        }
    }




    static if(!is(typeof(PEM_F_CHECK_BITLEN_DSA))) {
        private enum enumMixinStr_PEM_F_CHECK_BITLEN_DSA = `enum PEM_F_CHECK_BITLEN_DSA = 130;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_CHECK_BITLEN_DSA); }))) {
            mixin(enumMixinStr_PEM_F_CHECK_BITLEN_DSA);
        }
    }




    static if(!is(typeof(PEM_F_CHECK_BITLEN_RSA))) {
        private enum enumMixinStr_PEM_F_CHECK_BITLEN_RSA = `enum PEM_F_CHECK_BITLEN_RSA = 131;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_CHECK_BITLEN_RSA); }))) {
            mixin(enumMixinStr_PEM_F_CHECK_BITLEN_RSA);
        }
    }




    static if(!is(typeof(PEM_F_D2I_PKCS8PRIVATEKEY_BIO))) {
        private enum enumMixinStr_PEM_F_D2I_PKCS8PRIVATEKEY_BIO = `enum PEM_F_D2I_PKCS8PRIVATEKEY_BIO = 120;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_D2I_PKCS8PRIVATEKEY_BIO); }))) {
            mixin(enumMixinStr_PEM_F_D2I_PKCS8PRIVATEKEY_BIO);
        }
    }




    static if(!is(typeof(PEM_F_D2I_PKCS8PRIVATEKEY_FP))) {
        private enum enumMixinStr_PEM_F_D2I_PKCS8PRIVATEKEY_FP = `enum PEM_F_D2I_PKCS8PRIVATEKEY_FP = 121;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_D2I_PKCS8PRIVATEKEY_FP); }))) {
            mixin(enumMixinStr_PEM_F_D2I_PKCS8PRIVATEKEY_FP);
        }
    }




    static if(!is(typeof(PEM_F_DO_B2I))) {
        private enum enumMixinStr_PEM_F_DO_B2I = `enum PEM_F_DO_B2I = 132;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_DO_B2I); }))) {
            mixin(enumMixinStr_PEM_F_DO_B2I);
        }
    }




    static if(!is(typeof(PEM_F_DO_B2I_BIO))) {
        private enum enumMixinStr_PEM_F_DO_B2I_BIO = `enum PEM_F_DO_B2I_BIO = 133;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_DO_B2I_BIO); }))) {
            mixin(enumMixinStr_PEM_F_DO_B2I_BIO);
        }
    }




    static if(!is(typeof(PEM_F_DO_BLOB_HEADER))) {
        private enum enumMixinStr_PEM_F_DO_BLOB_HEADER = `enum PEM_F_DO_BLOB_HEADER = 134;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_DO_BLOB_HEADER); }))) {
            mixin(enumMixinStr_PEM_F_DO_BLOB_HEADER);
        }
    }




    static if(!is(typeof(PEM_F_DO_I2B))) {
        private enum enumMixinStr_PEM_F_DO_I2B = `enum PEM_F_DO_I2B = 146;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_DO_I2B); }))) {
            mixin(enumMixinStr_PEM_F_DO_I2B);
        }
    }




    static if(!is(typeof(PEM_F_DO_PK8PKEY))) {
        private enum enumMixinStr_PEM_F_DO_PK8PKEY = `enum PEM_F_DO_PK8PKEY = 126;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_DO_PK8PKEY); }))) {
            mixin(enumMixinStr_PEM_F_DO_PK8PKEY);
        }
    }




    static if(!is(typeof(PEM_F_DO_PK8PKEY_FP))) {
        private enum enumMixinStr_PEM_F_DO_PK8PKEY_FP = `enum PEM_F_DO_PK8PKEY_FP = 125;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_DO_PK8PKEY_FP); }))) {
            mixin(enumMixinStr_PEM_F_DO_PK8PKEY_FP);
        }
    }




    static if(!is(typeof(PEM_F_DO_PVK_BODY))) {
        private enum enumMixinStr_PEM_F_DO_PVK_BODY = `enum PEM_F_DO_PVK_BODY = 135;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_DO_PVK_BODY); }))) {
            mixin(enumMixinStr_PEM_F_DO_PVK_BODY);
        }
    }




    static if(!is(typeof(PEM_F_DO_PVK_HEADER))) {
        private enum enumMixinStr_PEM_F_DO_PVK_HEADER = `enum PEM_F_DO_PVK_HEADER = 136;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_DO_PVK_HEADER); }))) {
            mixin(enumMixinStr_PEM_F_DO_PVK_HEADER);
        }
    }




    static if(!is(typeof(PEM_F_GET_HEADER_AND_DATA))) {
        private enum enumMixinStr_PEM_F_GET_HEADER_AND_DATA = `enum PEM_F_GET_HEADER_AND_DATA = 143;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_GET_HEADER_AND_DATA); }))) {
            mixin(enumMixinStr_PEM_F_GET_HEADER_AND_DATA);
        }
    }




    static if(!is(typeof(PEM_F_GET_NAME))) {
        private enum enumMixinStr_PEM_F_GET_NAME = `enum PEM_F_GET_NAME = 144;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_GET_NAME); }))) {
            mixin(enumMixinStr_PEM_F_GET_NAME);
        }
    }




    static if(!is(typeof(PEM_F_I2B_PVK))) {
        private enum enumMixinStr_PEM_F_I2B_PVK = `enum PEM_F_I2B_PVK = 137;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_I2B_PVK); }))) {
            mixin(enumMixinStr_PEM_F_I2B_PVK);
        }
    }




    static if(!is(typeof(PEM_F_I2B_PVK_BIO))) {
        private enum enumMixinStr_PEM_F_I2B_PVK_BIO = `enum PEM_F_I2B_PVK_BIO = 138;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_I2B_PVK_BIO); }))) {
            mixin(enumMixinStr_PEM_F_I2B_PVK_BIO);
        }
    }




    static if(!is(typeof(PEM_F_LOAD_IV))) {
        private enum enumMixinStr_PEM_F_LOAD_IV = `enum PEM_F_LOAD_IV = 101;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_LOAD_IV); }))) {
            mixin(enumMixinStr_PEM_F_LOAD_IV);
        }
    }




    static if(!is(typeof(PEM_F_PEM_ASN1_READ))) {
        private enum enumMixinStr_PEM_F_PEM_ASN1_READ = `enum PEM_F_PEM_ASN1_READ = 102;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_PEM_ASN1_READ); }))) {
            mixin(enumMixinStr_PEM_F_PEM_ASN1_READ);
        }
    }




    static if(!is(typeof(PEM_F_PEM_ASN1_READ_BIO))) {
        private enum enumMixinStr_PEM_F_PEM_ASN1_READ_BIO = `enum PEM_F_PEM_ASN1_READ_BIO = 103;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_PEM_ASN1_READ_BIO); }))) {
            mixin(enumMixinStr_PEM_F_PEM_ASN1_READ_BIO);
        }
    }




    static if(!is(typeof(PEM_F_PEM_ASN1_WRITE))) {
        private enum enumMixinStr_PEM_F_PEM_ASN1_WRITE = `enum PEM_F_PEM_ASN1_WRITE = 104;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_PEM_ASN1_WRITE); }))) {
            mixin(enumMixinStr_PEM_F_PEM_ASN1_WRITE);
        }
    }




    static if(!is(typeof(PEM_F_PEM_ASN1_WRITE_BIO))) {
        private enum enumMixinStr_PEM_F_PEM_ASN1_WRITE_BIO = `enum PEM_F_PEM_ASN1_WRITE_BIO = 105;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_PEM_ASN1_WRITE_BIO); }))) {
            mixin(enumMixinStr_PEM_F_PEM_ASN1_WRITE_BIO);
        }
    }




    static if(!is(typeof(PEM_F_PEM_DEF_CALLBACK))) {
        private enum enumMixinStr_PEM_F_PEM_DEF_CALLBACK = `enum PEM_F_PEM_DEF_CALLBACK = 100;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_PEM_DEF_CALLBACK); }))) {
            mixin(enumMixinStr_PEM_F_PEM_DEF_CALLBACK);
        }
    }




    static if(!is(typeof(PEM_F_PEM_DO_HEADER))) {
        private enum enumMixinStr_PEM_F_PEM_DO_HEADER = `enum PEM_F_PEM_DO_HEADER = 106;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_PEM_DO_HEADER); }))) {
            mixin(enumMixinStr_PEM_F_PEM_DO_HEADER);
        }
    }




    static if(!is(typeof(PEM_F_PEM_GET_EVP_CIPHER_INFO))) {
        private enum enumMixinStr_PEM_F_PEM_GET_EVP_CIPHER_INFO = `enum PEM_F_PEM_GET_EVP_CIPHER_INFO = 107;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_PEM_GET_EVP_CIPHER_INFO); }))) {
            mixin(enumMixinStr_PEM_F_PEM_GET_EVP_CIPHER_INFO);
        }
    }




    static if(!is(typeof(PEM_F_PEM_READ))) {
        private enum enumMixinStr_PEM_F_PEM_READ = `enum PEM_F_PEM_READ = 108;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_PEM_READ); }))) {
            mixin(enumMixinStr_PEM_F_PEM_READ);
        }
    }




    static if(!is(typeof(PEM_F_PEM_READ_BIO))) {
        private enum enumMixinStr_PEM_F_PEM_READ_BIO = `enum PEM_F_PEM_READ_BIO = 109;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_PEM_READ_BIO); }))) {
            mixin(enumMixinStr_PEM_F_PEM_READ_BIO);
        }
    }




    static if(!is(typeof(PEM_F_PEM_READ_BIO_DHPARAMS))) {
        private enum enumMixinStr_PEM_F_PEM_READ_BIO_DHPARAMS = `enum PEM_F_PEM_READ_BIO_DHPARAMS = 141;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_PEM_READ_BIO_DHPARAMS); }))) {
            mixin(enumMixinStr_PEM_F_PEM_READ_BIO_DHPARAMS);
        }
    }




    static if(!is(typeof(PEM_F_PEM_READ_BIO_EX))) {
        private enum enumMixinStr_PEM_F_PEM_READ_BIO_EX = `enum PEM_F_PEM_READ_BIO_EX = 145;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_PEM_READ_BIO_EX); }))) {
            mixin(enumMixinStr_PEM_F_PEM_READ_BIO_EX);
        }
    }




    static if(!is(typeof(PEM_F_PEM_READ_BIO_PARAMETERS))) {
        private enum enumMixinStr_PEM_F_PEM_READ_BIO_PARAMETERS = `enum PEM_F_PEM_READ_BIO_PARAMETERS = 140;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_PEM_READ_BIO_PARAMETERS); }))) {
            mixin(enumMixinStr_PEM_F_PEM_READ_BIO_PARAMETERS);
        }
    }




    static if(!is(typeof(PEM_F_PEM_READ_BIO_PRIVATEKEY))) {
        private enum enumMixinStr_PEM_F_PEM_READ_BIO_PRIVATEKEY = `enum PEM_F_PEM_READ_BIO_PRIVATEKEY = 123;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_PEM_READ_BIO_PRIVATEKEY); }))) {
            mixin(enumMixinStr_PEM_F_PEM_READ_BIO_PRIVATEKEY);
        }
    }




    static if(!is(typeof(PEM_F_PEM_READ_DHPARAMS))) {
        private enum enumMixinStr_PEM_F_PEM_READ_DHPARAMS = `enum PEM_F_PEM_READ_DHPARAMS = 142;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_PEM_READ_DHPARAMS); }))) {
            mixin(enumMixinStr_PEM_F_PEM_READ_DHPARAMS);
        }
    }




    static if(!is(typeof(PEM_F_PEM_READ_PRIVATEKEY))) {
        private enum enumMixinStr_PEM_F_PEM_READ_PRIVATEKEY = `enum PEM_F_PEM_READ_PRIVATEKEY = 124;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_PEM_READ_PRIVATEKEY); }))) {
            mixin(enumMixinStr_PEM_F_PEM_READ_PRIVATEKEY);
        }
    }




    static if(!is(typeof(PEM_F_PEM_SIGNFINAL))) {
        private enum enumMixinStr_PEM_F_PEM_SIGNFINAL = `enum PEM_F_PEM_SIGNFINAL = 112;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_PEM_SIGNFINAL); }))) {
            mixin(enumMixinStr_PEM_F_PEM_SIGNFINAL);
        }
    }




    static if(!is(typeof(PEM_F_PEM_WRITE))) {
        private enum enumMixinStr_PEM_F_PEM_WRITE = `enum PEM_F_PEM_WRITE = 113;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_PEM_WRITE); }))) {
            mixin(enumMixinStr_PEM_F_PEM_WRITE);
        }
    }




    static if(!is(typeof(PEM_F_PEM_WRITE_BIO))) {
        private enum enumMixinStr_PEM_F_PEM_WRITE_BIO = `enum PEM_F_PEM_WRITE_BIO = 114;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_PEM_WRITE_BIO); }))) {
            mixin(enumMixinStr_PEM_F_PEM_WRITE_BIO);
        }
    }




    static if(!is(typeof(PEM_F_PEM_WRITE_BIO_PRIVATEKEY_TRADITIONAL))) {
        private enum enumMixinStr_PEM_F_PEM_WRITE_BIO_PRIVATEKEY_TRADITIONAL = `enum PEM_F_PEM_WRITE_BIO_PRIVATEKEY_TRADITIONAL = 147;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_PEM_WRITE_BIO_PRIVATEKEY_TRADITIONAL); }))) {
            mixin(enumMixinStr_PEM_F_PEM_WRITE_BIO_PRIVATEKEY_TRADITIONAL);
        }
    }




    static if(!is(typeof(PEM_F_PEM_WRITE_PRIVATEKEY))) {
        private enum enumMixinStr_PEM_F_PEM_WRITE_PRIVATEKEY = `enum PEM_F_PEM_WRITE_PRIVATEKEY = 139;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_PEM_WRITE_PRIVATEKEY); }))) {
            mixin(enumMixinStr_PEM_F_PEM_WRITE_PRIVATEKEY);
        }
    }




    static if(!is(typeof(PEM_F_PEM_X509_INFO_READ))) {
        private enum enumMixinStr_PEM_F_PEM_X509_INFO_READ = `enum PEM_F_PEM_X509_INFO_READ = 115;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_PEM_X509_INFO_READ); }))) {
            mixin(enumMixinStr_PEM_F_PEM_X509_INFO_READ);
        }
    }




    static if(!is(typeof(PEM_F_PEM_X509_INFO_READ_BIO))) {
        private enum enumMixinStr_PEM_F_PEM_X509_INFO_READ_BIO = `enum PEM_F_PEM_X509_INFO_READ_BIO = 116;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_PEM_X509_INFO_READ_BIO); }))) {
            mixin(enumMixinStr_PEM_F_PEM_X509_INFO_READ_BIO);
        }
    }




    static if(!is(typeof(PEM_F_PEM_X509_INFO_WRITE_BIO))) {
        private enum enumMixinStr_PEM_F_PEM_X509_INFO_WRITE_BIO = `enum PEM_F_PEM_X509_INFO_WRITE_BIO = 117;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_F_PEM_X509_INFO_WRITE_BIO); }))) {
            mixin(enumMixinStr_PEM_F_PEM_X509_INFO_WRITE_BIO);
        }
    }




    static if(!is(typeof(PEM_R_BAD_BASE64_DECODE))) {
        private enum enumMixinStr_PEM_R_BAD_BASE64_DECODE = `enum PEM_R_BAD_BASE64_DECODE = 100;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_R_BAD_BASE64_DECODE); }))) {
            mixin(enumMixinStr_PEM_R_BAD_BASE64_DECODE);
        }
    }




    static if(!is(typeof(PEM_R_BAD_DECRYPT))) {
        private enum enumMixinStr_PEM_R_BAD_DECRYPT = `enum PEM_R_BAD_DECRYPT = 101;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_R_BAD_DECRYPT); }))) {
            mixin(enumMixinStr_PEM_R_BAD_DECRYPT);
        }
    }




    static if(!is(typeof(PEM_R_BAD_END_LINE))) {
        private enum enumMixinStr_PEM_R_BAD_END_LINE = `enum PEM_R_BAD_END_LINE = 102;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_R_BAD_END_LINE); }))) {
            mixin(enumMixinStr_PEM_R_BAD_END_LINE);
        }
    }




    static if(!is(typeof(PEM_R_BAD_IV_CHARS))) {
        private enum enumMixinStr_PEM_R_BAD_IV_CHARS = `enum PEM_R_BAD_IV_CHARS = 103;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_R_BAD_IV_CHARS); }))) {
            mixin(enumMixinStr_PEM_R_BAD_IV_CHARS);
        }
    }




    static if(!is(typeof(PEM_R_BAD_MAGIC_NUMBER))) {
        private enum enumMixinStr_PEM_R_BAD_MAGIC_NUMBER = `enum PEM_R_BAD_MAGIC_NUMBER = 116;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_R_BAD_MAGIC_NUMBER); }))) {
            mixin(enumMixinStr_PEM_R_BAD_MAGIC_NUMBER);
        }
    }




    static if(!is(typeof(PEM_R_BAD_PASSWORD_READ))) {
        private enum enumMixinStr_PEM_R_BAD_PASSWORD_READ = `enum PEM_R_BAD_PASSWORD_READ = 104;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_R_BAD_PASSWORD_READ); }))) {
            mixin(enumMixinStr_PEM_R_BAD_PASSWORD_READ);
        }
    }




    static if(!is(typeof(PEM_R_BAD_VERSION_NUMBER))) {
        private enum enumMixinStr_PEM_R_BAD_VERSION_NUMBER = `enum PEM_R_BAD_VERSION_NUMBER = 117;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_R_BAD_VERSION_NUMBER); }))) {
            mixin(enumMixinStr_PEM_R_BAD_VERSION_NUMBER);
        }
    }




    static if(!is(typeof(PEM_R_BIO_WRITE_FAILURE))) {
        private enum enumMixinStr_PEM_R_BIO_WRITE_FAILURE = `enum PEM_R_BIO_WRITE_FAILURE = 118;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_R_BIO_WRITE_FAILURE); }))) {
            mixin(enumMixinStr_PEM_R_BIO_WRITE_FAILURE);
        }
    }




    static if(!is(typeof(PEM_R_CIPHER_IS_NULL))) {
        private enum enumMixinStr_PEM_R_CIPHER_IS_NULL = `enum PEM_R_CIPHER_IS_NULL = 127;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_R_CIPHER_IS_NULL); }))) {
            mixin(enumMixinStr_PEM_R_CIPHER_IS_NULL);
        }
    }




    static if(!is(typeof(PEM_R_ERROR_CONVERTING_PRIVATE_KEY))) {
        private enum enumMixinStr_PEM_R_ERROR_CONVERTING_PRIVATE_KEY = `enum PEM_R_ERROR_CONVERTING_PRIVATE_KEY = 115;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_R_ERROR_CONVERTING_PRIVATE_KEY); }))) {
            mixin(enumMixinStr_PEM_R_ERROR_CONVERTING_PRIVATE_KEY);
        }
    }




    static if(!is(typeof(PEM_R_EXPECTING_PRIVATE_KEY_BLOB))) {
        private enum enumMixinStr_PEM_R_EXPECTING_PRIVATE_KEY_BLOB = `enum PEM_R_EXPECTING_PRIVATE_KEY_BLOB = 119;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_R_EXPECTING_PRIVATE_KEY_BLOB); }))) {
            mixin(enumMixinStr_PEM_R_EXPECTING_PRIVATE_KEY_BLOB);
        }
    }




    static if(!is(typeof(PEM_R_EXPECTING_PUBLIC_KEY_BLOB))) {
        private enum enumMixinStr_PEM_R_EXPECTING_PUBLIC_KEY_BLOB = `enum PEM_R_EXPECTING_PUBLIC_KEY_BLOB = 120;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_R_EXPECTING_PUBLIC_KEY_BLOB); }))) {
            mixin(enumMixinStr_PEM_R_EXPECTING_PUBLIC_KEY_BLOB);
        }
    }




    static if(!is(typeof(PEM_R_HEADER_TOO_LONG))) {
        private enum enumMixinStr_PEM_R_HEADER_TOO_LONG = `enum PEM_R_HEADER_TOO_LONG = 128;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_R_HEADER_TOO_LONG); }))) {
            mixin(enumMixinStr_PEM_R_HEADER_TOO_LONG);
        }
    }




    static if(!is(typeof(PEM_R_INCONSISTENT_HEADER))) {
        private enum enumMixinStr_PEM_R_INCONSISTENT_HEADER = `enum PEM_R_INCONSISTENT_HEADER = 121;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_R_INCONSISTENT_HEADER); }))) {
            mixin(enumMixinStr_PEM_R_INCONSISTENT_HEADER);
        }
    }




    static if(!is(typeof(PEM_R_KEYBLOB_HEADER_PARSE_ERROR))) {
        private enum enumMixinStr_PEM_R_KEYBLOB_HEADER_PARSE_ERROR = `enum PEM_R_KEYBLOB_HEADER_PARSE_ERROR = 122;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_R_KEYBLOB_HEADER_PARSE_ERROR); }))) {
            mixin(enumMixinStr_PEM_R_KEYBLOB_HEADER_PARSE_ERROR);
        }
    }




    static if(!is(typeof(PEM_R_KEYBLOB_TOO_SHORT))) {
        private enum enumMixinStr_PEM_R_KEYBLOB_TOO_SHORT = `enum PEM_R_KEYBLOB_TOO_SHORT = 123;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_R_KEYBLOB_TOO_SHORT); }))) {
            mixin(enumMixinStr_PEM_R_KEYBLOB_TOO_SHORT);
        }
    }




    static if(!is(typeof(PEM_R_MISSING_DEK_IV))) {
        private enum enumMixinStr_PEM_R_MISSING_DEK_IV = `enum PEM_R_MISSING_DEK_IV = 129;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_R_MISSING_DEK_IV); }))) {
            mixin(enumMixinStr_PEM_R_MISSING_DEK_IV);
        }
    }




    static if(!is(typeof(PEM_R_NOT_DEK_INFO))) {
        private enum enumMixinStr_PEM_R_NOT_DEK_INFO = `enum PEM_R_NOT_DEK_INFO = 105;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_R_NOT_DEK_INFO); }))) {
            mixin(enumMixinStr_PEM_R_NOT_DEK_INFO);
        }
    }




    static if(!is(typeof(PEM_R_NOT_ENCRYPTED))) {
        private enum enumMixinStr_PEM_R_NOT_ENCRYPTED = `enum PEM_R_NOT_ENCRYPTED = 106;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_R_NOT_ENCRYPTED); }))) {
            mixin(enumMixinStr_PEM_R_NOT_ENCRYPTED);
        }
    }




    static if(!is(typeof(PEM_R_NOT_PROC_TYPE))) {
        private enum enumMixinStr_PEM_R_NOT_PROC_TYPE = `enum PEM_R_NOT_PROC_TYPE = 107;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_R_NOT_PROC_TYPE); }))) {
            mixin(enumMixinStr_PEM_R_NOT_PROC_TYPE);
        }
    }




    static if(!is(typeof(PEM_R_NO_START_LINE))) {
        private enum enumMixinStr_PEM_R_NO_START_LINE = `enum PEM_R_NO_START_LINE = 108;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_R_NO_START_LINE); }))) {
            mixin(enumMixinStr_PEM_R_NO_START_LINE);
        }
    }




    static if(!is(typeof(PEM_R_PROBLEMS_GETTING_PASSWORD))) {
        private enum enumMixinStr_PEM_R_PROBLEMS_GETTING_PASSWORD = `enum PEM_R_PROBLEMS_GETTING_PASSWORD = 109;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_R_PROBLEMS_GETTING_PASSWORD); }))) {
            mixin(enumMixinStr_PEM_R_PROBLEMS_GETTING_PASSWORD);
        }
    }




    static if(!is(typeof(PEM_R_PVK_DATA_TOO_SHORT))) {
        private enum enumMixinStr_PEM_R_PVK_DATA_TOO_SHORT = `enum PEM_R_PVK_DATA_TOO_SHORT = 124;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_R_PVK_DATA_TOO_SHORT); }))) {
            mixin(enumMixinStr_PEM_R_PVK_DATA_TOO_SHORT);
        }
    }




    static if(!is(typeof(PEM_R_PVK_TOO_SHORT))) {
        private enum enumMixinStr_PEM_R_PVK_TOO_SHORT = `enum PEM_R_PVK_TOO_SHORT = 125;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_R_PVK_TOO_SHORT); }))) {
            mixin(enumMixinStr_PEM_R_PVK_TOO_SHORT);
        }
    }




    static if(!is(typeof(PEM_R_READ_KEY))) {
        private enum enumMixinStr_PEM_R_READ_KEY = `enum PEM_R_READ_KEY = 111;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_R_READ_KEY); }))) {
            mixin(enumMixinStr_PEM_R_READ_KEY);
        }
    }




    static if(!is(typeof(PEM_R_SHORT_HEADER))) {
        private enum enumMixinStr_PEM_R_SHORT_HEADER = `enum PEM_R_SHORT_HEADER = 112;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_R_SHORT_HEADER); }))) {
            mixin(enumMixinStr_PEM_R_SHORT_HEADER);
        }
    }




    static if(!is(typeof(PEM_R_UNEXPECTED_DEK_IV))) {
        private enum enumMixinStr_PEM_R_UNEXPECTED_DEK_IV = `enum PEM_R_UNEXPECTED_DEK_IV = 130;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_R_UNEXPECTED_DEK_IV); }))) {
            mixin(enumMixinStr_PEM_R_UNEXPECTED_DEK_IV);
        }
    }




    static if(!is(typeof(PEM_R_UNSUPPORTED_CIPHER))) {
        private enum enumMixinStr_PEM_R_UNSUPPORTED_CIPHER = `enum PEM_R_UNSUPPORTED_CIPHER = 113;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_R_UNSUPPORTED_CIPHER); }))) {
            mixin(enumMixinStr_PEM_R_UNSUPPORTED_CIPHER);
        }
    }




    static if(!is(typeof(PEM_R_UNSUPPORTED_ENCRYPTION))) {
        private enum enumMixinStr_PEM_R_UNSUPPORTED_ENCRYPTION = `enum PEM_R_UNSUPPORTED_ENCRYPTION = 114;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_R_UNSUPPORTED_ENCRYPTION); }))) {
            mixin(enumMixinStr_PEM_R_UNSUPPORTED_ENCRYPTION);
        }
    }




    static if(!is(typeof(PEM_R_UNSUPPORTED_KEY_COMPONENTS))) {
        private enum enumMixinStr_PEM_R_UNSUPPORTED_KEY_COMPONENTS = `enum PEM_R_UNSUPPORTED_KEY_COMPONENTS = 126;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_R_UNSUPPORTED_KEY_COMPONENTS); }))) {
            mixin(enumMixinStr_PEM_R_UNSUPPORTED_KEY_COMPONENTS);
        }
    }




    static if(!is(typeof(PEM_R_UNSUPPORTED_PUBLIC_KEY_TYPE))) {
        private enum enumMixinStr_PEM_R_UNSUPPORTED_PUBLIC_KEY_TYPE = `enum PEM_R_UNSUPPORTED_PUBLIC_KEY_TYPE = 110;`;
        static if(is(typeof({ mixin(enumMixinStr_PEM_R_UNSUPPORTED_PUBLIC_KEY_TYPE); }))) {
            mixin(enumMixinStr_PEM_R_UNSUPPORTED_PUBLIC_KEY_TYPE);
        }
    }






    static if(!is(typeof(OBJ_capwapAC))) {
        private enum enumMixinStr_OBJ_capwapAC = `enum OBJ_capwapAC = OBJ_id_kp , 18L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_capwapAC); }))) {
            mixin(enumMixinStr_OBJ_capwapAC);
        }
    }




    static if(!is(typeof(NID_capwapAC))) {
        private enum enumMixinStr_NID_capwapAC = `enum NID_capwapAC = 1023;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_capwapAC); }))) {
            mixin(enumMixinStr_NID_capwapAC);
        }
    }




    static if(!is(typeof(LN_capwapAC))) {
        private enum enumMixinStr_LN_capwapAC = `enum LN_capwapAC = "Ctrl/provision WAP Access";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_capwapAC); }))) {
            mixin(enumMixinStr_LN_capwapAC);
        }
    }




    static if(!is(typeof(PKCS12_KEY_ID))) {
        private enum enumMixinStr_PKCS12_KEY_ID = `enum PKCS12_KEY_ID = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_KEY_ID); }))) {
            mixin(enumMixinStr_PKCS12_KEY_ID);
        }
    }




    static if(!is(typeof(PKCS12_IV_ID))) {
        private enum enumMixinStr_PKCS12_IV_ID = `enum PKCS12_IV_ID = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_IV_ID); }))) {
            mixin(enumMixinStr_PKCS12_IV_ID);
        }
    }




    static if(!is(typeof(PKCS12_MAC_ID))) {
        private enum enumMixinStr_PKCS12_MAC_ID = `enum PKCS12_MAC_ID = 3;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_MAC_ID); }))) {
            mixin(enumMixinStr_PKCS12_MAC_ID);
        }
    }




    static if(!is(typeof(PKCS12_DEFAULT_ITER))) {
        private enum enumMixinStr_PKCS12_DEFAULT_ITER = `enum PKCS12_DEFAULT_ITER = PKCS5_DEFAULT_ITER;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_DEFAULT_ITER); }))) {
            mixin(enumMixinStr_PKCS12_DEFAULT_ITER);
        }
    }




    static if(!is(typeof(PKCS12_MAC_KEY_LENGTH))) {
        private enum enumMixinStr_PKCS12_MAC_KEY_LENGTH = `enum PKCS12_MAC_KEY_LENGTH = 20;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_MAC_KEY_LENGTH); }))) {
            mixin(enumMixinStr_PKCS12_MAC_KEY_LENGTH);
        }
    }




    static if(!is(typeof(PKCS12_SALT_LEN))) {
        private enum enumMixinStr_PKCS12_SALT_LEN = `enum PKCS12_SALT_LEN = 8;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_SALT_LEN); }))) {
            mixin(enumMixinStr_PKCS12_SALT_LEN);
        }
    }




    static if(!is(typeof(PKCS12_key_gen))) {
        private enum enumMixinStr_PKCS12_key_gen = `enum PKCS12_key_gen = PKCS12_key_gen_utf8;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_key_gen); }))) {
            mixin(enumMixinStr_PKCS12_key_gen);
        }
    }




    static if(!is(typeof(PKCS12_add_friendlyname))) {
        private enum enumMixinStr_PKCS12_add_friendlyname = `enum PKCS12_add_friendlyname = PKCS12_add_friendlyname_utf8;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_add_friendlyname); }))) {
            mixin(enumMixinStr_PKCS12_add_friendlyname);
        }
    }




    static if(!is(typeof(KEY_EX))) {
        private enum enumMixinStr_KEY_EX = `enum KEY_EX = 0x10;`;
        static if(is(typeof({ mixin(enumMixinStr_KEY_EX); }))) {
            mixin(enumMixinStr_KEY_EX);
        }
    }




    static if(!is(typeof(KEY_SIG))) {
        private enum enumMixinStr_KEY_SIG = `enum KEY_SIG = 0x80;`;
        static if(is(typeof({ mixin(enumMixinStr_KEY_SIG); }))) {
            mixin(enumMixinStr_KEY_SIG);
        }
    }




    static if(!is(typeof(SN_capwapAC))) {
        private enum enumMixinStr_SN_capwapAC = `enum SN_capwapAC = "capwapAC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_capwapAC); }))) {
            mixin(enumMixinStr_SN_capwapAC);
        }
    }




    static if(!is(typeof(OBJ_ipsec_IKE))) {
        private enum enumMixinStr_OBJ_ipsec_IKE = `enum OBJ_ipsec_IKE = OBJ_id_kp , 17L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ipsec_IKE); }))) {
            mixin(enumMixinStr_OBJ_ipsec_IKE);
        }
    }




    static if(!is(typeof(NID_ipsec_IKE))) {
        private enum enumMixinStr_NID_ipsec_IKE = `enum NID_ipsec_IKE = 1022;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ipsec_IKE); }))) {
            mixin(enumMixinStr_NID_ipsec_IKE);
        }
    }




    static if(!is(typeof(LN_ipsec_IKE))) {
        private enum enumMixinStr_LN_ipsec_IKE = `enum LN_ipsec_IKE = "ipsec Internet Key Exchange";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ipsec_IKE); }))) {
            mixin(enumMixinStr_LN_ipsec_IKE);
        }
    }




    static if(!is(typeof(SN_ipsec_IKE))) {
        private enum enumMixinStr_SN_ipsec_IKE = `enum SN_ipsec_IKE = "ipsecIKE";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ipsec_IKE); }))) {
            mixin(enumMixinStr_SN_ipsec_IKE);
        }
    }




    static if(!is(typeof(OBJ_dvcs))) {
        private enum enumMixinStr_OBJ_dvcs = `enum OBJ_dvcs = OBJ_id_kp , 10L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dvcs); }))) {
            mixin(enumMixinStr_OBJ_dvcs);
        }
    }




    static if(!is(typeof(NID_dvcs))) {
        private enum enumMixinStr_NID_dvcs = `enum NID_dvcs = 297;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dvcs); }))) {
            mixin(enumMixinStr_NID_dvcs);
        }
    }




    static if(!is(typeof(LN_dvcs))) {
        private enum enumMixinStr_LN_dvcs = `enum LN_dvcs = "dvcs";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_dvcs); }))) {
            mixin(enumMixinStr_LN_dvcs);
        }
    }




    static if(!is(typeof(SN_dvcs))) {
        private enum enumMixinStr_SN_dvcs = `enum SN_dvcs = "DVCS";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dvcs); }))) {
            mixin(enumMixinStr_SN_dvcs);
        }
    }




    static if(!is(typeof(OBJ_OCSP_sign))) {
        private enum enumMixinStr_OBJ_OCSP_sign = `enum OBJ_OCSP_sign = OBJ_id_kp , 9L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_OCSP_sign); }))) {
            mixin(enumMixinStr_OBJ_OCSP_sign);
        }
    }




    static if(!is(typeof(NID_OCSP_sign))) {
        private enum enumMixinStr_NID_OCSP_sign = `enum NID_OCSP_sign = 180;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_OCSP_sign); }))) {
            mixin(enumMixinStr_NID_OCSP_sign);
        }
    }




    static if(!is(typeof(LN_OCSP_sign))) {
        private enum enumMixinStr_LN_OCSP_sign = `enum LN_OCSP_sign = "OCSP Signing";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_OCSP_sign); }))) {
            mixin(enumMixinStr_LN_OCSP_sign);
        }
    }




    static if(!is(typeof(SN_OCSP_sign))) {
        private enum enumMixinStr_SN_OCSP_sign = `enum SN_OCSP_sign = "OCSPSigning";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_OCSP_sign); }))) {
            mixin(enumMixinStr_SN_OCSP_sign);
        }
    }




    static if(!is(typeof(OBJ_time_stamp))) {
        private enum enumMixinStr_OBJ_time_stamp = `enum OBJ_time_stamp = OBJ_id_kp , 8L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_time_stamp); }))) {
            mixin(enumMixinStr_OBJ_time_stamp);
        }
    }




    static if(!is(typeof(NID_time_stamp))) {
        private enum enumMixinStr_NID_time_stamp = `enum NID_time_stamp = 133;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_time_stamp); }))) {
            mixin(enumMixinStr_NID_time_stamp);
        }
    }




    static if(!is(typeof(LN_time_stamp))) {
        private enum enumMixinStr_LN_time_stamp = `enum LN_time_stamp = "Time Stamping";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_time_stamp); }))) {
            mixin(enumMixinStr_LN_time_stamp);
        }
    }




    static if(!is(typeof(SN_time_stamp))) {
        private enum enumMixinStr_SN_time_stamp = `enum SN_time_stamp = "timeStamping";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_time_stamp); }))) {
            mixin(enumMixinStr_SN_time_stamp);
        }
    }




    static if(!is(typeof(OBJ_ipsecUser))) {
        private enum enumMixinStr_OBJ_ipsecUser = `enum OBJ_ipsecUser = OBJ_id_kp , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ipsecUser); }))) {
            mixin(enumMixinStr_OBJ_ipsecUser);
        }
    }




    static if(!is(typeof(NID_ipsecUser))) {
        private enum enumMixinStr_NID_ipsecUser = `enum NID_ipsecUser = 296;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ipsecUser); }))) {
            mixin(enumMixinStr_NID_ipsecUser);
        }
    }




    static if(!is(typeof(LN_ipsecUser))) {
        private enum enumMixinStr_LN_ipsecUser = `enum LN_ipsecUser = "IPSec User";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ipsecUser); }))) {
            mixin(enumMixinStr_LN_ipsecUser);
        }
    }




    static if(!is(typeof(SN_ipsecUser))) {
        private enum enumMixinStr_SN_ipsecUser = `enum SN_ipsecUser = "ipsecUser";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ipsecUser); }))) {
            mixin(enumMixinStr_SN_ipsecUser);
        }
    }




    static if(!is(typeof(OBJ_ipsecTunnel))) {
        private enum enumMixinStr_OBJ_ipsecTunnel = `enum OBJ_ipsecTunnel = OBJ_id_kp , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ipsecTunnel); }))) {
            mixin(enumMixinStr_OBJ_ipsecTunnel);
        }
    }




    static if(!is(typeof(NID_ipsecTunnel))) {
        private enum enumMixinStr_NID_ipsecTunnel = `enum NID_ipsecTunnel = 295;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ipsecTunnel); }))) {
            mixin(enumMixinStr_NID_ipsecTunnel);
        }
    }




    static if(!is(typeof(LN_ipsecTunnel))) {
        private enum enumMixinStr_LN_ipsecTunnel = `enum LN_ipsecTunnel = "IPSec Tunnel";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ipsecTunnel); }))) {
            mixin(enumMixinStr_LN_ipsecTunnel);
        }
    }




    static if(!is(typeof(SN_ipsecTunnel))) {
        private enum enumMixinStr_SN_ipsecTunnel = `enum SN_ipsecTunnel = "ipsecTunnel";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ipsecTunnel); }))) {
            mixin(enumMixinStr_SN_ipsecTunnel);
        }
    }




    static if(!is(typeof(OBJ_ipsecEndSystem))) {
        private enum enumMixinStr_OBJ_ipsecEndSystem = `enum OBJ_ipsecEndSystem = OBJ_id_kp , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ipsecEndSystem); }))) {
            mixin(enumMixinStr_OBJ_ipsecEndSystem);
        }
    }




    static if(!is(typeof(NID_ipsecEndSystem))) {
        private enum enumMixinStr_NID_ipsecEndSystem = `enum NID_ipsecEndSystem = 294;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ipsecEndSystem); }))) {
            mixin(enumMixinStr_NID_ipsecEndSystem);
        }
    }




    static if(!is(typeof(LN_ipsecEndSystem))) {
        private enum enumMixinStr_LN_ipsecEndSystem = `enum LN_ipsecEndSystem = "IPSec End System";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ipsecEndSystem); }))) {
            mixin(enumMixinStr_LN_ipsecEndSystem);
        }
    }




    static if(!is(typeof(SN_ipsecEndSystem))) {
        private enum enumMixinStr_SN_ipsecEndSystem = `enum SN_ipsecEndSystem = "ipsecEndSystem";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ipsecEndSystem); }))) {
            mixin(enumMixinStr_SN_ipsecEndSystem);
        }
    }




    static if(!is(typeof(OBJ_email_protect))) {
        private enum enumMixinStr_OBJ_email_protect = `enum OBJ_email_protect = OBJ_id_kp , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_email_protect); }))) {
            mixin(enumMixinStr_OBJ_email_protect);
        }
    }




    static if(!is(typeof(NID_email_protect))) {
        private enum enumMixinStr_NID_email_protect = `enum NID_email_protect = 132;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_email_protect); }))) {
            mixin(enumMixinStr_NID_email_protect);
        }
    }




    static if(!is(typeof(LN_email_protect))) {
        private enum enumMixinStr_LN_email_protect = `enum LN_email_protect = "E-mail Protection";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_email_protect); }))) {
            mixin(enumMixinStr_LN_email_protect);
        }
    }




    static if(!is(typeof(SN_email_protect))) {
        private enum enumMixinStr_SN_email_protect = `enum SN_email_protect = "emailProtection";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_email_protect); }))) {
            mixin(enumMixinStr_SN_email_protect);
        }
    }




    static if(!is(typeof(OBJ_code_sign))) {
        private enum enumMixinStr_OBJ_code_sign = `enum OBJ_code_sign = OBJ_id_kp , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_code_sign); }))) {
            mixin(enumMixinStr_OBJ_code_sign);
        }
    }




    static if(!is(typeof(NID_code_sign))) {
        private enum enumMixinStr_NID_code_sign = `enum NID_code_sign = 131;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_code_sign); }))) {
            mixin(enumMixinStr_NID_code_sign);
        }
    }




    static if(!is(typeof(LN_code_sign))) {
        private enum enumMixinStr_LN_code_sign = `enum LN_code_sign = "Code Signing";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_code_sign); }))) {
            mixin(enumMixinStr_LN_code_sign);
        }
    }




    static if(!is(typeof(SN_code_sign))) {
        private enum enumMixinStr_SN_code_sign = `enum SN_code_sign = "codeSigning";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_code_sign); }))) {
            mixin(enumMixinStr_SN_code_sign);
        }
    }




    static if(!is(typeof(PKCS12_ERROR))) {
        private enum enumMixinStr_PKCS12_ERROR = `enum PKCS12_ERROR = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_ERROR); }))) {
            mixin(enumMixinStr_PKCS12_ERROR);
        }
    }




    static if(!is(typeof(PKCS12_OK))) {
        private enum enumMixinStr_PKCS12_OK = `enum PKCS12_OK = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_OK); }))) {
            mixin(enumMixinStr_PKCS12_OK);
        }
    }




    static if(!is(typeof(OBJ_client_auth))) {
        private enum enumMixinStr_OBJ_client_auth = `enum OBJ_client_auth = OBJ_id_kp , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_client_auth); }))) {
            mixin(enumMixinStr_OBJ_client_auth);
        }
    }




    static if(!is(typeof(M_PKCS12_bag_type))) {
        private enum enumMixinStr_M_PKCS12_bag_type = `enum M_PKCS12_bag_type = PKCS12_bag_type;`;
        static if(is(typeof({ mixin(enumMixinStr_M_PKCS12_bag_type); }))) {
            mixin(enumMixinStr_M_PKCS12_bag_type);
        }
    }




    static if(!is(typeof(M_PKCS12_cert_bag_type))) {
        private enum enumMixinStr_M_PKCS12_cert_bag_type = `enum M_PKCS12_cert_bag_type = PKCS12_cert_bag_type;`;
        static if(is(typeof({ mixin(enumMixinStr_M_PKCS12_cert_bag_type); }))) {
            mixin(enumMixinStr_M_PKCS12_cert_bag_type);
        }
    }




    static if(!is(typeof(M_PKCS12_crl_bag_type))) {
        private enum enumMixinStr_M_PKCS12_crl_bag_type = `enum M_PKCS12_crl_bag_type = PKCS12_cert_bag_type;`;
        static if(is(typeof({ mixin(enumMixinStr_M_PKCS12_crl_bag_type); }))) {
            mixin(enumMixinStr_M_PKCS12_crl_bag_type);
        }
    }




    static if(!is(typeof(PKCS12_certbag2x509))) {
        private enum enumMixinStr_PKCS12_certbag2x509 = `enum PKCS12_certbag2x509 = PKCS12_SAFEBAG_get1_cert;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_certbag2x509); }))) {
            mixin(enumMixinStr_PKCS12_certbag2x509);
        }
    }




    static if(!is(typeof(PKCS12_certbag2scrl))) {
        private enum enumMixinStr_PKCS12_certbag2scrl = `enum PKCS12_certbag2scrl = PKCS12_SAFEBAG_get1_crl;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_certbag2scrl); }))) {
            mixin(enumMixinStr_PKCS12_certbag2scrl);
        }
    }




    static if(!is(typeof(PKCS12_bag_type))) {
        private enum enumMixinStr_PKCS12_bag_type = `enum PKCS12_bag_type = PKCS12_SAFEBAG_get_nid;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_bag_type); }))) {
            mixin(enumMixinStr_PKCS12_bag_type);
        }
    }




    static if(!is(typeof(PKCS12_cert_bag_type))) {
        private enum enumMixinStr_PKCS12_cert_bag_type = `enum PKCS12_cert_bag_type = PKCS12_SAFEBAG_get_bag_nid;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_cert_bag_type); }))) {
            mixin(enumMixinStr_PKCS12_cert_bag_type);
        }
    }




    static if(!is(typeof(PKCS12_x5092certbag))) {
        private enum enumMixinStr_PKCS12_x5092certbag = `enum PKCS12_x5092certbag = PKCS12_SAFEBAG_create_cert;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_x5092certbag); }))) {
            mixin(enumMixinStr_PKCS12_x5092certbag);
        }
    }




    static if(!is(typeof(PKCS12_x509crl2certbag))) {
        private enum enumMixinStr_PKCS12_x509crl2certbag = `enum PKCS12_x509crl2certbag = PKCS12_SAFEBAG_create_crl;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_x509crl2certbag); }))) {
            mixin(enumMixinStr_PKCS12_x509crl2certbag);
        }
    }




    static if(!is(typeof(PKCS12_MAKE_KEYBAG))) {
        private enum enumMixinStr_PKCS12_MAKE_KEYBAG = `enum PKCS12_MAKE_KEYBAG = PKCS12_SAFEBAG_create0_p8inf;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_MAKE_KEYBAG); }))) {
            mixin(enumMixinStr_PKCS12_MAKE_KEYBAG);
        }
    }




    static if(!is(typeof(PKCS12_MAKE_SHKEYBAG))) {
        private enum enumMixinStr_PKCS12_MAKE_SHKEYBAG = `enum PKCS12_MAKE_SHKEYBAG = PKCS12_SAFEBAG_create_pkcs8_encrypt;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_MAKE_SHKEYBAG); }))) {
            mixin(enumMixinStr_PKCS12_MAKE_SHKEYBAG);
        }
    }




    static if(!is(typeof(NID_client_auth))) {
        private enum enumMixinStr_NID_client_auth = `enum NID_client_auth = 130;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_client_auth); }))) {
            mixin(enumMixinStr_NID_client_auth);
        }
    }




    static if(!is(typeof(LN_client_auth))) {
        private enum enumMixinStr_LN_client_auth = `enum LN_client_auth = "TLS Web Client Authentication";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_client_auth); }))) {
            mixin(enumMixinStr_LN_client_auth);
        }
    }




    static if(!is(typeof(SN_client_auth))) {
        private enum enumMixinStr_SN_client_auth = `enum SN_client_auth = "clientAuth";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_client_auth); }))) {
            mixin(enumMixinStr_SN_client_auth);
        }
    }




    static if(!is(typeof(OBJ_server_auth))) {
        private enum enumMixinStr_OBJ_server_auth = `enum OBJ_server_auth = OBJ_id_kp , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_server_auth); }))) {
            mixin(enumMixinStr_OBJ_server_auth);
        }
    }




    static if(!is(typeof(NID_server_auth))) {
        private enum enumMixinStr_NID_server_auth = `enum NID_server_auth = 129;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_server_auth); }))) {
            mixin(enumMixinStr_NID_server_auth);
        }
    }




    static if(!is(typeof(LN_server_auth))) {
        private enum enumMixinStr_LN_server_auth = `enum LN_server_auth = "TLS Web Server Authentication";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_server_auth); }))) {
            mixin(enumMixinStr_LN_server_auth);
        }
    }




    static if(!is(typeof(SN_server_auth))) {
        private enum enumMixinStr_SN_server_auth = `enum SN_server_auth = "serverAuth";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_server_auth); }))) {
            mixin(enumMixinStr_SN_server_auth);
        }
    }




    static if(!is(typeof(OBJ_textNotice))) {
        private enum enumMixinStr_OBJ_textNotice = `enum OBJ_textNotice = OBJ_id_qt , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_textNotice); }))) {
            mixin(enumMixinStr_OBJ_textNotice);
        }
    }




    static if(!is(typeof(NID_textNotice))) {
        private enum enumMixinStr_NID_textNotice = `enum NID_textNotice = 293;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_textNotice); }))) {
            mixin(enumMixinStr_NID_textNotice);
        }
    }




    static if(!is(typeof(SN_textNotice))) {
        private enum enumMixinStr_SN_textNotice = `enum SN_textNotice = "textNotice";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_textNotice); }))) {
            mixin(enumMixinStr_SN_textNotice);
        }
    }




    static if(!is(typeof(OBJ_id_qt_unotice))) {
        private enum enumMixinStr_OBJ_id_qt_unotice = `enum OBJ_id_qt_unotice = OBJ_id_qt , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_qt_unotice); }))) {
            mixin(enumMixinStr_OBJ_id_qt_unotice);
        }
    }




    static if(!is(typeof(NID_id_qt_unotice))) {
        private enum enumMixinStr_NID_id_qt_unotice = `enum NID_id_qt_unotice = 165;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_qt_unotice); }))) {
            mixin(enumMixinStr_NID_id_qt_unotice);
        }
    }




    static if(!is(typeof(LN_id_qt_unotice))) {
        private enum enumMixinStr_LN_id_qt_unotice = `enum LN_id_qt_unotice = "Policy Qualifier User Notice";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_qt_unotice); }))) {
            mixin(enumMixinStr_LN_id_qt_unotice);
        }
    }




    static if(!is(typeof(SN_id_qt_unotice))) {
        private enum enumMixinStr_SN_id_qt_unotice = `enum SN_id_qt_unotice = "id-qt-unotice";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_qt_unotice); }))) {
            mixin(enumMixinStr_SN_id_qt_unotice);
        }
    }




    static if(!is(typeof(OBJ_id_qt_cps))) {
        private enum enumMixinStr_OBJ_id_qt_cps = `enum OBJ_id_qt_cps = OBJ_id_qt , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_qt_cps); }))) {
            mixin(enumMixinStr_OBJ_id_qt_cps);
        }
    }




    static if(!is(typeof(NID_id_qt_cps))) {
        private enum enumMixinStr_NID_id_qt_cps = `enum NID_id_qt_cps = 164;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_qt_cps); }))) {
            mixin(enumMixinStr_NID_id_qt_cps);
        }
    }




    static if(!is(typeof(LN_id_qt_cps))) {
        private enum enumMixinStr_LN_id_qt_cps = `enum LN_id_qt_cps = "Policy Qualifier CPS";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_qt_cps); }))) {
            mixin(enumMixinStr_LN_id_qt_cps);
        }
    }




    static if(!is(typeof(SN_id_qt_cps))) {
        private enum enumMixinStr_SN_id_qt_cps = `enum SN_id_qt_cps = "id-qt-cps";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_qt_cps); }))) {
            mixin(enumMixinStr_SN_id_qt_cps);
        }
    }




    static if(!is(typeof(OBJ_tlsfeature))) {
        private enum enumMixinStr_OBJ_tlsfeature = `enum OBJ_tlsfeature = OBJ_id_pe , 24L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_tlsfeature); }))) {
            mixin(enumMixinStr_OBJ_tlsfeature);
        }
    }




    static if(!is(typeof(NID_tlsfeature))) {
        private enum enumMixinStr_NID_tlsfeature = `enum NID_tlsfeature = 1020;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_tlsfeature); }))) {
            mixin(enumMixinStr_NID_tlsfeature);
        }
    }




    static if(!is(typeof(LN_tlsfeature))) {
        private enum enumMixinStr_LN_tlsfeature = `enum LN_tlsfeature = "TLS Feature";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_tlsfeature); }))) {
            mixin(enumMixinStr_LN_tlsfeature);
        }
    }




    static if(!is(typeof(SN_tlsfeature))) {
        private enum enumMixinStr_SN_tlsfeature = `enum SN_tlsfeature = "tlsfeature";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_tlsfeature); }))) {
            mixin(enumMixinStr_SN_tlsfeature);
        }
    }




    static if(!is(typeof(OBJ_proxyCertInfo))) {
        private enum enumMixinStr_OBJ_proxyCertInfo = `enum OBJ_proxyCertInfo = OBJ_id_pe , 14L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_proxyCertInfo); }))) {
            mixin(enumMixinStr_OBJ_proxyCertInfo);
        }
    }




    static if(!is(typeof(NID_proxyCertInfo))) {
        private enum enumMixinStr_NID_proxyCertInfo = `enum NID_proxyCertInfo = 663;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_proxyCertInfo); }))) {
            mixin(enumMixinStr_NID_proxyCertInfo);
        }
    }




    static if(!is(typeof(LN_proxyCertInfo))) {
        private enum enumMixinStr_LN_proxyCertInfo = `enum LN_proxyCertInfo = "Proxy Certificate Information";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_proxyCertInfo); }))) {
            mixin(enumMixinStr_LN_proxyCertInfo);
        }
    }




    static if(!is(typeof(SN_proxyCertInfo))) {
        private enum enumMixinStr_SN_proxyCertInfo = `enum SN_proxyCertInfo = "proxyCertInfo";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_proxyCertInfo); }))) {
            mixin(enumMixinStr_SN_proxyCertInfo);
        }
    }




    static if(!is(typeof(OBJ_sinfo_access))) {
        private enum enumMixinStr_OBJ_sinfo_access = `enum OBJ_sinfo_access = OBJ_id_pe , 11L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sinfo_access); }))) {
            mixin(enumMixinStr_OBJ_sinfo_access);
        }
    }




    static if(!is(typeof(NID_sinfo_access))) {
        private enum enumMixinStr_NID_sinfo_access = `enum NID_sinfo_access = 398;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sinfo_access); }))) {
            mixin(enumMixinStr_NID_sinfo_access);
        }
    }




    static if(!is(typeof(LN_sinfo_access))) {
        private enum enumMixinStr_LN_sinfo_access = `enum LN_sinfo_access = "Subject Information Access";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sinfo_access); }))) {
            mixin(enumMixinStr_LN_sinfo_access);
        }
    }




    static if(!is(typeof(SN_sinfo_access))) {
        private enum enumMixinStr_SN_sinfo_access = `enum SN_sinfo_access = "subjectInfoAccess";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sinfo_access); }))) {
            mixin(enumMixinStr_SN_sinfo_access);
        }
    }




    static if(!is(typeof(OBJ_ac_proxying))) {
        private enum enumMixinStr_OBJ_ac_proxying = `enum OBJ_ac_proxying = OBJ_id_pe , 10L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ac_proxying); }))) {
            mixin(enumMixinStr_OBJ_ac_proxying);
        }
    }




    static if(!is(typeof(NID_ac_proxying))) {
        private enum enumMixinStr_NID_ac_proxying = `enum NID_ac_proxying = 397;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ac_proxying); }))) {
            mixin(enumMixinStr_NID_ac_proxying);
        }
    }




    static if(!is(typeof(SN_ac_proxying))) {
        private enum enumMixinStr_SN_ac_proxying = `enum SN_ac_proxying = "ac-proxying";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ac_proxying); }))) {
            mixin(enumMixinStr_SN_ac_proxying);
        }
    }




    static if(!is(typeof(OBJ_sbgp_routerIdentifier))) {
        private enum enumMixinStr_OBJ_sbgp_routerIdentifier = `enum OBJ_sbgp_routerIdentifier = OBJ_id_pe , 9L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sbgp_routerIdentifier); }))) {
            mixin(enumMixinStr_OBJ_sbgp_routerIdentifier);
        }
    }




    static if(!is(typeof(NID_sbgp_routerIdentifier))) {
        private enum enumMixinStr_NID_sbgp_routerIdentifier = `enum NID_sbgp_routerIdentifier = 292;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sbgp_routerIdentifier); }))) {
            mixin(enumMixinStr_NID_sbgp_routerIdentifier);
        }
    }




    static if(!is(typeof(SN_sbgp_routerIdentifier))) {
        private enum enumMixinStr_SN_sbgp_routerIdentifier = `enum SN_sbgp_routerIdentifier = "sbgp-routerIdentifier";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sbgp_routerIdentifier); }))) {
            mixin(enumMixinStr_SN_sbgp_routerIdentifier);
        }
    }




    static if(!is(typeof(OBJ_sbgp_autonomousSysNum))) {
        private enum enumMixinStr_OBJ_sbgp_autonomousSysNum = `enum OBJ_sbgp_autonomousSysNum = OBJ_id_pe , 8L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sbgp_autonomousSysNum); }))) {
            mixin(enumMixinStr_OBJ_sbgp_autonomousSysNum);
        }
    }




    static if(!is(typeof(NID_sbgp_autonomousSysNum))) {
        private enum enumMixinStr_NID_sbgp_autonomousSysNum = `enum NID_sbgp_autonomousSysNum = 291;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sbgp_autonomousSysNum); }))) {
            mixin(enumMixinStr_NID_sbgp_autonomousSysNum);
        }
    }




    static if(!is(typeof(SN_sbgp_autonomousSysNum))) {
        private enum enumMixinStr_SN_sbgp_autonomousSysNum = `enum SN_sbgp_autonomousSysNum = "sbgp-autonomousSysNum";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sbgp_autonomousSysNum); }))) {
            mixin(enumMixinStr_SN_sbgp_autonomousSysNum);
        }
    }




    static if(!is(typeof(OBJ_sbgp_ipAddrBlock))) {
        private enum enumMixinStr_OBJ_sbgp_ipAddrBlock = `enum OBJ_sbgp_ipAddrBlock = OBJ_id_pe , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sbgp_ipAddrBlock); }))) {
            mixin(enumMixinStr_OBJ_sbgp_ipAddrBlock);
        }
    }




    static if(!is(typeof(NID_sbgp_ipAddrBlock))) {
        private enum enumMixinStr_NID_sbgp_ipAddrBlock = `enum NID_sbgp_ipAddrBlock = 290;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sbgp_ipAddrBlock); }))) {
            mixin(enumMixinStr_NID_sbgp_ipAddrBlock);
        }
    }




    static if(!is(typeof(SN_sbgp_ipAddrBlock))) {
        private enum enumMixinStr_SN_sbgp_ipAddrBlock = `enum SN_sbgp_ipAddrBlock = "sbgp-ipAddrBlock";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sbgp_ipAddrBlock); }))) {
            mixin(enumMixinStr_SN_sbgp_ipAddrBlock);
        }
    }




    static if(!is(typeof(OBJ_aaControls))) {
        private enum enumMixinStr_OBJ_aaControls = `enum OBJ_aaControls = OBJ_id_pe , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_aaControls); }))) {
            mixin(enumMixinStr_OBJ_aaControls);
        }
    }




    static if(!is(typeof(NID_aaControls))) {
        private enum enumMixinStr_NID_aaControls = `enum NID_aaControls = 289;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_aaControls); }))) {
            mixin(enumMixinStr_NID_aaControls);
        }
    }




    static if(!is(typeof(SN_aaControls))) {
        private enum enumMixinStr_SN_aaControls = `enum SN_aaControls = "aaControls";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_aaControls); }))) {
            mixin(enumMixinStr_SN_aaControls);
        }
    }




    static if(!is(typeof(OBJ_ac_targeting))) {
        private enum enumMixinStr_OBJ_ac_targeting = `enum OBJ_ac_targeting = OBJ_id_pe , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ac_targeting); }))) {
            mixin(enumMixinStr_OBJ_ac_targeting);
        }
    }




    static if(!is(typeof(NID_ac_targeting))) {
        private enum enumMixinStr_NID_ac_targeting = `enum NID_ac_targeting = 288;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ac_targeting); }))) {
            mixin(enumMixinStr_NID_ac_targeting);
        }
    }




    static if(!is(typeof(SN_ac_targeting))) {
        private enum enumMixinStr_SN_ac_targeting = `enum SN_ac_targeting = "ac-targeting";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ac_targeting); }))) {
            mixin(enumMixinStr_SN_ac_targeting);
        }
    }




    static if(!is(typeof(OBJ_ac_auditEntity))) {
        private enum enumMixinStr_OBJ_ac_auditEntity = `enum OBJ_ac_auditEntity = OBJ_id_pe , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ac_auditEntity); }))) {
            mixin(enumMixinStr_OBJ_ac_auditEntity);
        }
    }




    static if(!is(typeof(NID_ac_auditEntity))) {
        private enum enumMixinStr_NID_ac_auditEntity = `enum NID_ac_auditEntity = 287;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ac_auditEntity); }))) {
            mixin(enumMixinStr_NID_ac_auditEntity);
        }
    }




    static if(!is(typeof(SN_ac_auditEntity))) {
        private enum enumMixinStr_SN_ac_auditEntity = `enum SN_ac_auditEntity = "ac-auditEntity";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ac_auditEntity); }))) {
            mixin(enumMixinStr_SN_ac_auditEntity);
        }
    }




    static if(!is(typeof(OBJ_qcStatements))) {
        private enum enumMixinStr_OBJ_qcStatements = `enum OBJ_qcStatements = OBJ_id_pe , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_qcStatements); }))) {
            mixin(enumMixinStr_OBJ_qcStatements);
        }
    }




    static if(!is(typeof(NID_qcStatements))) {
        private enum enumMixinStr_NID_qcStatements = `enum NID_qcStatements = 286;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_qcStatements); }))) {
            mixin(enumMixinStr_NID_qcStatements);
        }
    }




    static if(!is(typeof(SN_qcStatements))) {
        private enum enumMixinStr_SN_qcStatements = `enum SN_qcStatements = "qcStatements";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_qcStatements); }))) {
            mixin(enumMixinStr_SN_qcStatements);
        }
    }




    static if(!is(typeof(OBJ_biometricInfo))) {
        private enum enumMixinStr_OBJ_biometricInfo = `enum OBJ_biometricInfo = OBJ_id_pe , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_biometricInfo); }))) {
            mixin(enumMixinStr_OBJ_biometricInfo);
        }
    }




    static if(!is(typeof(NID_biometricInfo))) {
        private enum enumMixinStr_NID_biometricInfo = `enum NID_biometricInfo = 285;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_biometricInfo); }))) {
            mixin(enumMixinStr_NID_biometricInfo);
        }
    }




    static if(!is(typeof(LN_biometricInfo))) {
        private enum enumMixinStr_LN_biometricInfo = `enum LN_biometricInfo = "Biometric Info";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_biometricInfo); }))) {
            mixin(enumMixinStr_LN_biometricInfo);
        }
    }




    static if(!is(typeof(SN_biometricInfo))) {
        private enum enumMixinStr_SN_biometricInfo = `enum SN_biometricInfo = "biometricInfo";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_biometricInfo); }))) {
            mixin(enumMixinStr_SN_biometricInfo);
        }
    }




    static if(!is(typeof(OBJ_info_access))) {
        private enum enumMixinStr_OBJ_info_access = `enum OBJ_info_access = OBJ_id_pe , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_info_access); }))) {
            mixin(enumMixinStr_OBJ_info_access);
        }
    }




    static if(!is(typeof(NID_info_access))) {
        private enum enumMixinStr_NID_info_access = `enum NID_info_access = 177;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_info_access); }))) {
            mixin(enumMixinStr_NID_info_access);
        }
    }




    static if(!is(typeof(LN_info_access))) {
        private enum enumMixinStr_LN_info_access = `enum LN_info_access = "Authority Information Access";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_info_access); }))) {
            mixin(enumMixinStr_LN_info_access);
        }
    }




    static if(!is(typeof(SN_info_access))) {
        private enum enumMixinStr_SN_info_access = `enum SN_info_access = "authorityInfoAccess";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_info_access); }))) {
            mixin(enumMixinStr_SN_info_access);
        }
    }




    static if(!is(typeof(OBJ_id_mod_cmp2000))) {
        private enum enumMixinStr_OBJ_id_mod_cmp2000 = `enum OBJ_id_mod_cmp2000 = OBJ_id_pkix_mod , 16L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_mod_cmp2000); }))) {
            mixin(enumMixinStr_OBJ_id_mod_cmp2000);
        }
    }




    static if(!is(typeof(NID_id_mod_cmp2000))) {
        private enum enumMixinStr_NID_id_mod_cmp2000 = `enum NID_id_mod_cmp2000 = 284;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_mod_cmp2000); }))) {
            mixin(enumMixinStr_NID_id_mod_cmp2000);
        }
    }




    static if(!is(typeof(SN_id_mod_cmp2000))) {
        private enum enumMixinStr_SN_id_mod_cmp2000 = `enum SN_id_mod_cmp2000 = "id-mod-cmp2000";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_mod_cmp2000); }))) {
            mixin(enumMixinStr_SN_id_mod_cmp2000);
        }
    }




    static if(!is(typeof(OBJ_id_mod_dvcs))) {
        private enum enumMixinStr_OBJ_id_mod_dvcs = `enum OBJ_id_mod_dvcs = OBJ_id_pkix_mod , 15L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_mod_dvcs); }))) {
            mixin(enumMixinStr_OBJ_id_mod_dvcs);
        }
    }




    static if(!is(typeof(NID_id_mod_dvcs))) {
        private enum enumMixinStr_NID_id_mod_dvcs = `enum NID_id_mod_dvcs = 283;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_mod_dvcs); }))) {
            mixin(enumMixinStr_NID_id_mod_dvcs);
        }
    }




    static if(!is(typeof(SN_id_mod_dvcs))) {
        private enum enumMixinStr_SN_id_mod_dvcs = `enum SN_id_mod_dvcs = "id-mod-dvcs";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_mod_dvcs); }))) {
            mixin(enumMixinStr_SN_id_mod_dvcs);
        }
    }




    static if(!is(typeof(OBJ_id_mod_ocsp))) {
        private enum enumMixinStr_OBJ_id_mod_ocsp = `enum OBJ_id_mod_ocsp = OBJ_id_pkix_mod , 14L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_mod_ocsp); }))) {
            mixin(enumMixinStr_OBJ_id_mod_ocsp);
        }
    }




    static if(!is(typeof(NID_id_mod_ocsp))) {
        private enum enumMixinStr_NID_id_mod_ocsp = `enum NID_id_mod_ocsp = 282;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_mod_ocsp); }))) {
            mixin(enumMixinStr_NID_id_mod_ocsp);
        }
    }




    static if(!is(typeof(SN_id_mod_ocsp))) {
        private enum enumMixinStr_SN_id_mod_ocsp = `enum SN_id_mod_ocsp = "id-mod-ocsp";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_mod_ocsp); }))) {
            mixin(enumMixinStr_SN_id_mod_ocsp);
        }
    }




    static if(!is(typeof(OBJ_id_mod_timestamp_protocol))) {
        private enum enumMixinStr_OBJ_id_mod_timestamp_protocol = `enum OBJ_id_mod_timestamp_protocol = OBJ_id_pkix_mod , 13L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_mod_timestamp_protocol); }))) {
            mixin(enumMixinStr_OBJ_id_mod_timestamp_protocol);
        }
    }




    static if(!is(typeof(NID_id_mod_timestamp_protocol))) {
        private enum enumMixinStr_NID_id_mod_timestamp_protocol = `enum NID_id_mod_timestamp_protocol = 281;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_mod_timestamp_protocol); }))) {
            mixin(enumMixinStr_NID_id_mod_timestamp_protocol);
        }
    }




    static if(!is(typeof(SN_id_mod_timestamp_protocol))) {
        private enum enumMixinStr_SN_id_mod_timestamp_protocol = `enum SN_id_mod_timestamp_protocol = "id-mod-timestamp-protocol";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_mod_timestamp_protocol); }))) {
            mixin(enumMixinStr_SN_id_mod_timestamp_protocol);
        }
    }




    static if(!is(typeof(OBJ_id_mod_attribute_cert))) {
        private enum enumMixinStr_OBJ_id_mod_attribute_cert = `enum OBJ_id_mod_attribute_cert = OBJ_id_pkix_mod , 12L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_mod_attribute_cert); }))) {
            mixin(enumMixinStr_OBJ_id_mod_attribute_cert);
        }
    }




    static if(!is(typeof(NID_id_mod_attribute_cert))) {
        private enum enumMixinStr_NID_id_mod_attribute_cert = `enum NID_id_mod_attribute_cert = 280;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_mod_attribute_cert); }))) {
            mixin(enumMixinStr_NID_id_mod_attribute_cert);
        }
    }




    static if(!is(typeof(SN_id_mod_attribute_cert))) {
        private enum enumMixinStr_SN_id_mod_attribute_cert = `enum SN_id_mod_attribute_cert = "id-mod-attribute-cert";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_mod_attribute_cert); }))) {
            mixin(enumMixinStr_SN_id_mod_attribute_cert);
        }
    }




    static if(!is(typeof(OBJ_id_mod_qualified_cert_93))) {
        private enum enumMixinStr_OBJ_id_mod_qualified_cert_93 = `enum OBJ_id_mod_qualified_cert_93 = OBJ_id_pkix_mod , 11L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_mod_qualified_cert_93); }))) {
            mixin(enumMixinStr_OBJ_id_mod_qualified_cert_93);
        }
    }




    static if(!is(typeof(NID_id_mod_qualified_cert_93))) {
        private enum enumMixinStr_NID_id_mod_qualified_cert_93 = `enum NID_id_mod_qualified_cert_93 = 279;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_mod_qualified_cert_93); }))) {
            mixin(enumMixinStr_NID_id_mod_qualified_cert_93);
        }
    }




    static if(!is(typeof(SN_id_mod_qualified_cert_93))) {
        private enum enumMixinStr_SN_id_mod_qualified_cert_93 = `enum SN_id_mod_qualified_cert_93 = "id-mod-qualified-cert-93";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_mod_qualified_cert_93); }))) {
            mixin(enumMixinStr_SN_id_mod_qualified_cert_93);
        }
    }




    static if(!is(typeof(OBJ_id_mod_qualified_cert_88))) {
        private enum enumMixinStr_OBJ_id_mod_qualified_cert_88 = `enum OBJ_id_mod_qualified_cert_88 = OBJ_id_pkix_mod , 10L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_mod_qualified_cert_88); }))) {
            mixin(enumMixinStr_OBJ_id_mod_qualified_cert_88);
        }
    }




    static if(!is(typeof(NID_id_mod_qualified_cert_88))) {
        private enum enumMixinStr_NID_id_mod_qualified_cert_88 = `enum NID_id_mod_qualified_cert_88 = 278;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_mod_qualified_cert_88); }))) {
            mixin(enumMixinStr_NID_id_mod_qualified_cert_88);
        }
    }




    static if(!is(typeof(SN_id_mod_qualified_cert_88))) {
        private enum enumMixinStr_SN_id_mod_qualified_cert_88 = `enum SN_id_mod_qualified_cert_88 = "id-mod-qualified-cert-88";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_mod_qualified_cert_88); }))) {
            mixin(enumMixinStr_SN_id_mod_qualified_cert_88);
        }
    }




    static if(!is(typeof(OBJ_id_mod_cmp))) {
        private enum enumMixinStr_OBJ_id_mod_cmp = `enum OBJ_id_mod_cmp = OBJ_id_pkix_mod , 9L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_mod_cmp); }))) {
            mixin(enumMixinStr_OBJ_id_mod_cmp);
        }
    }




    static if(!is(typeof(NID_id_mod_cmp))) {
        private enum enumMixinStr_NID_id_mod_cmp = `enum NID_id_mod_cmp = 277;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_mod_cmp); }))) {
            mixin(enumMixinStr_NID_id_mod_cmp);
        }
    }




    static if(!is(typeof(SN_id_mod_cmp))) {
        private enum enumMixinStr_SN_id_mod_cmp = `enum SN_id_mod_cmp = "id-mod-cmp";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_mod_cmp); }))) {
            mixin(enumMixinStr_SN_id_mod_cmp);
        }
    }




    static if(!is(typeof(OBJ_id_mod_kea_profile_93))) {
        private enum enumMixinStr_OBJ_id_mod_kea_profile_93 = `enum OBJ_id_mod_kea_profile_93 = OBJ_id_pkix_mod , 8L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_mod_kea_profile_93); }))) {
            mixin(enumMixinStr_OBJ_id_mod_kea_profile_93);
        }
    }




    static if(!is(typeof(NID_id_mod_kea_profile_93))) {
        private enum enumMixinStr_NID_id_mod_kea_profile_93 = `enum NID_id_mod_kea_profile_93 = 276;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_mod_kea_profile_93); }))) {
            mixin(enumMixinStr_NID_id_mod_kea_profile_93);
        }
    }




    static if(!is(typeof(SN_id_mod_kea_profile_93))) {
        private enum enumMixinStr_SN_id_mod_kea_profile_93 = `enum SN_id_mod_kea_profile_93 = "id-mod-kea-profile-93";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_mod_kea_profile_93); }))) {
            mixin(enumMixinStr_SN_id_mod_kea_profile_93);
        }
    }




    static if(!is(typeof(OBJ_id_mod_kea_profile_88))) {
        private enum enumMixinStr_OBJ_id_mod_kea_profile_88 = `enum OBJ_id_mod_kea_profile_88 = OBJ_id_pkix_mod , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_mod_kea_profile_88); }))) {
            mixin(enumMixinStr_OBJ_id_mod_kea_profile_88);
        }
    }




    static if(!is(typeof(NID_id_mod_kea_profile_88))) {
        private enum enumMixinStr_NID_id_mod_kea_profile_88 = `enum NID_id_mod_kea_profile_88 = 275;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_mod_kea_profile_88); }))) {
            mixin(enumMixinStr_NID_id_mod_kea_profile_88);
        }
    }




    static if(!is(typeof(SN_id_mod_kea_profile_88))) {
        private enum enumMixinStr_SN_id_mod_kea_profile_88 = `enum SN_id_mod_kea_profile_88 = "id-mod-kea-profile-88";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_mod_kea_profile_88); }))) {
            mixin(enumMixinStr_SN_id_mod_kea_profile_88);
        }
    }




    static if(!is(typeof(OBJ_id_mod_cmc))) {
        private enum enumMixinStr_OBJ_id_mod_cmc = `enum OBJ_id_mod_cmc = OBJ_id_pkix_mod , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_mod_cmc); }))) {
            mixin(enumMixinStr_OBJ_id_mod_cmc);
        }
    }




    static if(!is(typeof(NID_id_mod_cmc))) {
        private enum enumMixinStr_NID_id_mod_cmc = `enum NID_id_mod_cmc = 274;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_mod_cmc); }))) {
            mixin(enumMixinStr_NID_id_mod_cmc);
        }
    }




    static if(!is(typeof(SN_id_mod_cmc))) {
        private enum enumMixinStr_SN_id_mod_cmc = `enum SN_id_mod_cmc = "id-mod-cmc";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_mod_cmc); }))) {
            mixin(enumMixinStr_SN_id_mod_cmc);
        }
    }




    static if(!is(typeof(OBJ_id_mod_crmf))) {
        private enum enumMixinStr_OBJ_id_mod_crmf = `enum OBJ_id_mod_crmf = OBJ_id_pkix_mod , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_mod_crmf); }))) {
            mixin(enumMixinStr_OBJ_id_mod_crmf);
        }
    }




    static if(!is(typeof(NID_id_mod_crmf))) {
        private enum enumMixinStr_NID_id_mod_crmf = `enum NID_id_mod_crmf = 273;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_mod_crmf); }))) {
            mixin(enumMixinStr_NID_id_mod_crmf);
        }
    }




    static if(!is(typeof(SN_id_mod_crmf))) {
        private enum enumMixinStr_SN_id_mod_crmf = `enum SN_id_mod_crmf = "id-mod-crmf";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_mod_crmf); }))) {
            mixin(enumMixinStr_SN_id_mod_crmf);
        }
    }




    static if(!is(typeof(OBJ_id_pkix1_implicit_93))) {
        private enum enumMixinStr_OBJ_id_pkix1_implicit_93 = `enum OBJ_id_pkix1_implicit_93 = OBJ_id_pkix_mod , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_pkix1_implicit_93); }))) {
            mixin(enumMixinStr_OBJ_id_pkix1_implicit_93);
        }
    }




    static if(!is(typeof(NID_id_pkix1_implicit_93))) {
        private enum enumMixinStr_NID_id_pkix1_implicit_93 = `enum NID_id_pkix1_implicit_93 = 272;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_pkix1_implicit_93); }))) {
            mixin(enumMixinStr_NID_id_pkix1_implicit_93);
        }
    }




    static if(!is(typeof(SN_id_pkix1_implicit_93))) {
        private enum enumMixinStr_SN_id_pkix1_implicit_93 = `enum SN_id_pkix1_implicit_93 = "id-pkix1-implicit-93";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_pkix1_implicit_93); }))) {
            mixin(enumMixinStr_SN_id_pkix1_implicit_93);
        }
    }




    static if(!is(typeof(OBJ_id_pkix1_explicit_93))) {
        private enum enumMixinStr_OBJ_id_pkix1_explicit_93 = `enum OBJ_id_pkix1_explicit_93 = OBJ_id_pkix_mod , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_pkix1_explicit_93); }))) {
            mixin(enumMixinStr_OBJ_id_pkix1_explicit_93);
        }
    }




    static if(!is(typeof(NID_id_pkix1_explicit_93))) {
        private enum enumMixinStr_NID_id_pkix1_explicit_93 = `enum NID_id_pkix1_explicit_93 = 271;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_pkix1_explicit_93); }))) {
            mixin(enumMixinStr_NID_id_pkix1_explicit_93);
        }
    }




    static if(!is(typeof(SN_id_pkix1_explicit_93))) {
        private enum enumMixinStr_SN_id_pkix1_explicit_93 = `enum SN_id_pkix1_explicit_93 = "id-pkix1-explicit-93";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_pkix1_explicit_93); }))) {
            mixin(enumMixinStr_SN_id_pkix1_explicit_93);
        }
    }




    static if(!is(typeof(OBJ_id_pkix1_implicit_88))) {
        private enum enumMixinStr_OBJ_id_pkix1_implicit_88 = `enum OBJ_id_pkix1_implicit_88 = OBJ_id_pkix_mod , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_pkix1_implicit_88); }))) {
            mixin(enumMixinStr_OBJ_id_pkix1_implicit_88);
        }
    }




    static if(!is(typeof(NID_id_pkix1_implicit_88))) {
        private enum enumMixinStr_NID_id_pkix1_implicit_88 = `enum NID_id_pkix1_implicit_88 = 270;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_pkix1_implicit_88); }))) {
            mixin(enumMixinStr_NID_id_pkix1_implicit_88);
        }
    }




    static if(!is(typeof(SN_id_pkix1_implicit_88))) {
        private enum enumMixinStr_SN_id_pkix1_implicit_88 = `enum SN_id_pkix1_implicit_88 = "id-pkix1-implicit-88";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_pkix1_implicit_88); }))) {
            mixin(enumMixinStr_SN_id_pkix1_implicit_88);
        }
    }




    static if(!is(typeof(OBJ_id_pkix1_explicit_88))) {
        private enum enumMixinStr_OBJ_id_pkix1_explicit_88 = `enum OBJ_id_pkix1_explicit_88 = OBJ_id_pkix_mod , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_pkix1_explicit_88); }))) {
            mixin(enumMixinStr_OBJ_id_pkix1_explicit_88);
        }
    }




    static if(!is(typeof(NID_id_pkix1_explicit_88))) {
        private enum enumMixinStr_NID_id_pkix1_explicit_88 = `enum NID_id_pkix1_explicit_88 = 269;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_pkix1_explicit_88); }))) {
            mixin(enumMixinStr_NID_id_pkix1_explicit_88);
        }
    }




    static if(!is(typeof(SN_id_pkix1_explicit_88))) {
        private enum enumMixinStr_SN_id_pkix1_explicit_88 = `enum SN_id_pkix1_explicit_88 = "id-pkix1-explicit-88";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_pkix1_explicit_88); }))) {
            mixin(enumMixinStr_SN_id_pkix1_explicit_88);
        }
    }




    static if(!is(typeof(OBJ_id_ad))) {
        private enum enumMixinStr_OBJ_id_ad = `enum OBJ_id_ad = OBJ_id_pkix , 48L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_ad); }))) {
            mixin(enumMixinStr_OBJ_id_ad);
        }
    }






    static if(!is(typeof(NID_id_ad))) {
        private enum enumMixinStr_NID_id_ad = `enum NID_id_ad = 176;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_ad); }))) {
            mixin(enumMixinStr_NID_id_ad);
        }
    }




    static if(!is(typeof(SN_id_ad))) {
        private enum enumMixinStr_SN_id_ad = `enum SN_id_ad = "id-ad";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_ad); }))) {
            mixin(enumMixinStr_SN_id_ad);
        }
    }




    static if(!is(typeof(PKCS12_F_OPENSSL_ASC2UNI))) {
        private enum enumMixinStr_PKCS12_F_OPENSSL_ASC2UNI = `enum PKCS12_F_OPENSSL_ASC2UNI = 121;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_F_OPENSSL_ASC2UNI); }))) {
            mixin(enumMixinStr_PKCS12_F_OPENSSL_ASC2UNI);
        }
    }




    static if(!is(typeof(PKCS12_F_OPENSSL_UNI2ASC))) {
        private enum enumMixinStr_PKCS12_F_OPENSSL_UNI2ASC = `enum PKCS12_F_OPENSSL_UNI2ASC = 124;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_F_OPENSSL_UNI2ASC); }))) {
            mixin(enumMixinStr_PKCS12_F_OPENSSL_UNI2ASC);
        }
    }




    static if(!is(typeof(PKCS12_F_OPENSSL_UNI2UTF8))) {
        private enum enumMixinStr_PKCS12_F_OPENSSL_UNI2UTF8 = `enum PKCS12_F_OPENSSL_UNI2UTF8 = 127;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_F_OPENSSL_UNI2UTF8); }))) {
            mixin(enumMixinStr_PKCS12_F_OPENSSL_UNI2UTF8);
        }
    }




    static if(!is(typeof(PKCS12_F_OPENSSL_UTF82UNI))) {
        private enum enumMixinStr_PKCS12_F_OPENSSL_UTF82UNI = `enum PKCS12_F_OPENSSL_UTF82UNI = 129;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_F_OPENSSL_UTF82UNI); }))) {
            mixin(enumMixinStr_PKCS12_F_OPENSSL_UTF82UNI);
        }
    }




    static if(!is(typeof(PKCS12_F_PKCS12_CREATE))) {
        private enum enumMixinStr_PKCS12_F_PKCS12_CREATE = `enum PKCS12_F_PKCS12_CREATE = 105;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_F_PKCS12_CREATE); }))) {
            mixin(enumMixinStr_PKCS12_F_PKCS12_CREATE);
        }
    }




    static if(!is(typeof(PKCS12_F_PKCS12_GEN_MAC))) {
        private enum enumMixinStr_PKCS12_F_PKCS12_GEN_MAC = `enum PKCS12_F_PKCS12_GEN_MAC = 107;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_F_PKCS12_GEN_MAC); }))) {
            mixin(enumMixinStr_PKCS12_F_PKCS12_GEN_MAC);
        }
    }




    static if(!is(typeof(PKCS12_F_PKCS12_INIT))) {
        private enum enumMixinStr_PKCS12_F_PKCS12_INIT = `enum PKCS12_F_PKCS12_INIT = 109;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_F_PKCS12_INIT); }))) {
            mixin(enumMixinStr_PKCS12_F_PKCS12_INIT);
        }
    }




    static if(!is(typeof(PKCS12_F_PKCS12_ITEM_DECRYPT_D2I))) {
        private enum enumMixinStr_PKCS12_F_PKCS12_ITEM_DECRYPT_D2I = `enum PKCS12_F_PKCS12_ITEM_DECRYPT_D2I = 106;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_F_PKCS12_ITEM_DECRYPT_D2I); }))) {
            mixin(enumMixinStr_PKCS12_F_PKCS12_ITEM_DECRYPT_D2I);
        }
    }




    static if(!is(typeof(PKCS12_F_PKCS12_ITEM_I2D_ENCRYPT))) {
        private enum enumMixinStr_PKCS12_F_PKCS12_ITEM_I2D_ENCRYPT = `enum PKCS12_F_PKCS12_ITEM_I2D_ENCRYPT = 108;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_F_PKCS12_ITEM_I2D_ENCRYPT); }))) {
            mixin(enumMixinStr_PKCS12_F_PKCS12_ITEM_I2D_ENCRYPT);
        }
    }




    static if(!is(typeof(PKCS12_F_PKCS12_ITEM_PACK_SAFEBAG))) {
        private enum enumMixinStr_PKCS12_F_PKCS12_ITEM_PACK_SAFEBAG = `enum PKCS12_F_PKCS12_ITEM_PACK_SAFEBAG = 117;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_F_PKCS12_ITEM_PACK_SAFEBAG); }))) {
            mixin(enumMixinStr_PKCS12_F_PKCS12_ITEM_PACK_SAFEBAG);
        }
    }




    static if(!is(typeof(PKCS12_F_PKCS12_KEY_GEN_ASC))) {
        private enum enumMixinStr_PKCS12_F_PKCS12_KEY_GEN_ASC = `enum PKCS12_F_PKCS12_KEY_GEN_ASC = 110;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_F_PKCS12_KEY_GEN_ASC); }))) {
            mixin(enumMixinStr_PKCS12_F_PKCS12_KEY_GEN_ASC);
        }
    }




    static if(!is(typeof(PKCS12_F_PKCS12_KEY_GEN_UNI))) {
        private enum enumMixinStr_PKCS12_F_PKCS12_KEY_GEN_UNI = `enum PKCS12_F_PKCS12_KEY_GEN_UNI = 111;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_F_PKCS12_KEY_GEN_UNI); }))) {
            mixin(enumMixinStr_PKCS12_F_PKCS12_KEY_GEN_UNI);
        }
    }




    static if(!is(typeof(PKCS12_F_PKCS12_KEY_GEN_UTF8))) {
        private enum enumMixinStr_PKCS12_F_PKCS12_KEY_GEN_UTF8 = `enum PKCS12_F_PKCS12_KEY_GEN_UTF8 = 116;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_F_PKCS12_KEY_GEN_UTF8); }))) {
            mixin(enumMixinStr_PKCS12_F_PKCS12_KEY_GEN_UTF8);
        }
    }




    static if(!is(typeof(PKCS12_F_PKCS12_NEWPASS))) {
        private enum enumMixinStr_PKCS12_F_PKCS12_NEWPASS = `enum PKCS12_F_PKCS12_NEWPASS = 128;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_F_PKCS12_NEWPASS); }))) {
            mixin(enumMixinStr_PKCS12_F_PKCS12_NEWPASS);
        }
    }




    static if(!is(typeof(PKCS12_F_PKCS12_PACK_P7DATA))) {
        private enum enumMixinStr_PKCS12_F_PKCS12_PACK_P7DATA = `enum PKCS12_F_PKCS12_PACK_P7DATA = 114;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_F_PKCS12_PACK_P7DATA); }))) {
            mixin(enumMixinStr_PKCS12_F_PKCS12_PACK_P7DATA);
        }
    }




    static if(!is(typeof(PKCS12_F_PKCS12_PACK_P7ENCDATA))) {
        private enum enumMixinStr_PKCS12_F_PKCS12_PACK_P7ENCDATA = `enum PKCS12_F_PKCS12_PACK_P7ENCDATA = 115;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_F_PKCS12_PACK_P7ENCDATA); }))) {
            mixin(enumMixinStr_PKCS12_F_PKCS12_PACK_P7ENCDATA);
        }
    }




    static if(!is(typeof(PKCS12_F_PKCS12_PARSE))) {
        private enum enumMixinStr_PKCS12_F_PKCS12_PARSE = `enum PKCS12_F_PKCS12_PARSE = 118;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_F_PKCS12_PARSE); }))) {
            mixin(enumMixinStr_PKCS12_F_PKCS12_PARSE);
        }
    }




    static if(!is(typeof(PKCS12_F_PKCS12_PBE_CRYPT))) {
        private enum enumMixinStr_PKCS12_F_PKCS12_PBE_CRYPT = `enum PKCS12_F_PKCS12_PBE_CRYPT = 119;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_F_PKCS12_PBE_CRYPT); }))) {
            mixin(enumMixinStr_PKCS12_F_PKCS12_PBE_CRYPT);
        }
    }




    static if(!is(typeof(PKCS12_F_PKCS12_PBE_KEYIVGEN))) {
        private enum enumMixinStr_PKCS12_F_PKCS12_PBE_KEYIVGEN = `enum PKCS12_F_PKCS12_PBE_KEYIVGEN = 120;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_F_PKCS12_PBE_KEYIVGEN); }))) {
            mixin(enumMixinStr_PKCS12_F_PKCS12_PBE_KEYIVGEN);
        }
    }




    static if(!is(typeof(PKCS12_F_PKCS12_SAFEBAG_CREATE0_P8INF))) {
        private enum enumMixinStr_PKCS12_F_PKCS12_SAFEBAG_CREATE0_P8INF = `enum PKCS12_F_PKCS12_SAFEBAG_CREATE0_P8INF = 112;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_F_PKCS12_SAFEBAG_CREATE0_P8INF); }))) {
            mixin(enumMixinStr_PKCS12_F_PKCS12_SAFEBAG_CREATE0_P8INF);
        }
    }




    static if(!is(typeof(PKCS12_F_PKCS12_SAFEBAG_CREATE0_PKCS8))) {
        private enum enumMixinStr_PKCS12_F_PKCS12_SAFEBAG_CREATE0_PKCS8 = `enum PKCS12_F_PKCS12_SAFEBAG_CREATE0_PKCS8 = 113;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_F_PKCS12_SAFEBAG_CREATE0_PKCS8); }))) {
            mixin(enumMixinStr_PKCS12_F_PKCS12_SAFEBAG_CREATE0_PKCS8);
        }
    }




    static if(!is(typeof(PKCS12_F_PKCS12_SAFEBAG_CREATE_PKCS8_ENCRYPT))) {
        private enum enumMixinStr_PKCS12_F_PKCS12_SAFEBAG_CREATE_PKCS8_ENCRYPT = `enum PKCS12_F_PKCS12_SAFEBAG_CREATE_PKCS8_ENCRYPT = 133;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_F_PKCS12_SAFEBAG_CREATE_PKCS8_ENCRYPT); }))) {
            mixin(enumMixinStr_PKCS12_F_PKCS12_SAFEBAG_CREATE_PKCS8_ENCRYPT);
        }
    }




    static if(!is(typeof(PKCS12_F_PKCS12_SETUP_MAC))) {
        private enum enumMixinStr_PKCS12_F_PKCS12_SETUP_MAC = `enum PKCS12_F_PKCS12_SETUP_MAC = 122;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_F_PKCS12_SETUP_MAC); }))) {
            mixin(enumMixinStr_PKCS12_F_PKCS12_SETUP_MAC);
        }
    }




    static if(!is(typeof(PKCS12_F_PKCS12_SET_MAC))) {
        private enum enumMixinStr_PKCS12_F_PKCS12_SET_MAC = `enum PKCS12_F_PKCS12_SET_MAC = 123;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_F_PKCS12_SET_MAC); }))) {
            mixin(enumMixinStr_PKCS12_F_PKCS12_SET_MAC);
        }
    }




    static if(!is(typeof(PKCS12_F_PKCS12_UNPACK_AUTHSAFES))) {
        private enum enumMixinStr_PKCS12_F_PKCS12_UNPACK_AUTHSAFES = `enum PKCS12_F_PKCS12_UNPACK_AUTHSAFES = 130;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_F_PKCS12_UNPACK_AUTHSAFES); }))) {
            mixin(enumMixinStr_PKCS12_F_PKCS12_UNPACK_AUTHSAFES);
        }
    }




    static if(!is(typeof(PKCS12_F_PKCS12_UNPACK_P7DATA))) {
        private enum enumMixinStr_PKCS12_F_PKCS12_UNPACK_P7DATA = `enum PKCS12_F_PKCS12_UNPACK_P7DATA = 131;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_F_PKCS12_UNPACK_P7DATA); }))) {
            mixin(enumMixinStr_PKCS12_F_PKCS12_UNPACK_P7DATA);
        }
    }




    static if(!is(typeof(PKCS12_F_PKCS12_VERIFY_MAC))) {
        private enum enumMixinStr_PKCS12_F_PKCS12_VERIFY_MAC = `enum PKCS12_F_PKCS12_VERIFY_MAC = 126;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_F_PKCS12_VERIFY_MAC); }))) {
            mixin(enumMixinStr_PKCS12_F_PKCS12_VERIFY_MAC);
        }
    }




    static if(!is(typeof(PKCS12_F_PKCS8_ENCRYPT))) {
        private enum enumMixinStr_PKCS12_F_PKCS8_ENCRYPT = `enum PKCS12_F_PKCS8_ENCRYPT = 125;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_F_PKCS8_ENCRYPT); }))) {
            mixin(enumMixinStr_PKCS12_F_PKCS8_ENCRYPT);
        }
    }




    static if(!is(typeof(PKCS12_F_PKCS8_SET0_PBE))) {
        private enum enumMixinStr_PKCS12_F_PKCS8_SET0_PBE = `enum PKCS12_F_PKCS8_SET0_PBE = 132;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_F_PKCS8_SET0_PBE); }))) {
            mixin(enumMixinStr_PKCS12_F_PKCS8_SET0_PBE);
        }
    }




    static if(!is(typeof(PKCS12_R_CANT_PACK_STRUCTURE))) {
        private enum enumMixinStr_PKCS12_R_CANT_PACK_STRUCTURE = `enum PKCS12_R_CANT_PACK_STRUCTURE = 100;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_R_CANT_PACK_STRUCTURE); }))) {
            mixin(enumMixinStr_PKCS12_R_CANT_PACK_STRUCTURE);
        }
    }




    static if(!is(typeof(PKCS12_R_CONTENT_TYPE_NOT_DATA))) {
        private enum enumMixinStr_PKCS12_R_CONTENT_TYPE_NOT_DATA = `enum PKCS12_R_CONTENT_TYPE_NOT_DATA = 121;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_R_CONTENT_TYPE_NOT_DATA); }))) {
            mixin(enumMixinStr_PKCS12_R_CONTENT_TYPE_NOT_DATA);
        }
    }




    static if(!is(typeof(PKCS12_R_DECODE_ERROR))) {
        private enum enumMixinStr_PKCS12_R_DECODE_ERROR = `enum PKCS12_R_DECODE_ERROR = 101;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_R_DECODE_ERROR); }))) {
            mixin(enumMixinStr_PKCS12_R_DECODE_ERROR);
        }
    }




    static if(!is(typeof(PKCS12_R_ENCODE_ERROR))) {
        private enum enumMixinStr_PKCS12_R_ENCODE_ERROR = `enum PKCS12_R_ENCODE_ERROR = 102;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_R_ENCODE_ERROR); }))) {
            mixin(enumMixinStr_PKCS12_R_ENCODE_ERROR);
        }
    }




    static if(!is(typeof(PKCS12_R_ENCRYPT_ERROR))) {
        private enum enumMixinStr_PKCS12_R_ENCRYPT_ERROR = `enum PKCS12_R_ENCRYPT_ERROR = 103;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_R_ENCRYPT_ERROR); }))) {
            mixin(enumMixinStr_PKCS12_R_ENCRYPT_ERROR);
        }
    }




    static if(!is(typeof(PKCS12_R_ERROR_SETTING_ENCRYPTED_DATA_TYPE))) {
        private enum enumMixinStr_PKCS12_R_ERROR_SETTING_ENCRYPTED_DATA_TYPE = `enum PKCS12_R_ERROR_SETTING_ENCRYPTED_DATA_TYPE = 120;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_R_ERROR_SETTING_ENCRYPTED_DATA_TYPE); }))) {
            mixin(enumMixinStr_PKCS12_R_ERROR_SETTING_ENCRYPTED_DATA_TYPE);
        }
    }




    static if(!is(typeof(PKCS12_R_INVALID_NULL_ARGUMENT))) {
        private enum enumMixinStr_PKCS12_R_INVALID_NULL_ARGUMENT = `enum PKCS12_R_INVALID_NULL_ARGUMENT = 104;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_R_INVALID_NULL_ARGUMENT); }))) {
            mixin(enumMixinStr_PKCS12_R_INVALID_NULL_ARGUMENT);
        }
    }




    static if(!is(typeof(PKCS12_R_INVALID_NULL_PKCS12_POINTER))) {
        private enum enumMixinStr_PKCS12_R_INVALID_NULL_PKCS12_POINTER = `enum PKCS12_R_INVALID_NULL_PKCS12_POINTER = 105;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_R_INVALID_NULL_PKCS12_POINTER); }))) {
            mixin(enumMixinStr_PKCS12_R_INVALID_NULL_PKCS12_POINTER);
        }
    }




    static if(!is(typeof(PKCS12_R_IV_GEN_ERROR))) {
        private enum enumMixinStr_PKCS12_R_IV_GEN_ERROR = `enum PKCS12_R_IV_GEN_ERROR = 106;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_R_IV_GEN_ERROR); }))) {
            mixin(enumMixinStr_PKCS12_R_IV_GEN_ERROR);
        }
    }




    static if(!is(typeof(PKCS12_R_KEY_GEN_ERROR))) {
        private enum enumMixinStr_PKCS12_R_KEY_GEN_ERROR = `enum PKCS12_R_KEY_GEN_ERROR = 107;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_R_KEY_GEN_ERROR); }))) {
            mixin(enumMixinStr_PKCS12_R_KEY_GEN_ERROR);
        }
    }




    static if(!is(typeof(PKCS12_R_MAC_ABSENT))) {
        private enum enumMixinStr_PKCS12_R_MAC_ABSENT = `enum PKCS12_R_MAC_ABSENT = 108;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_R_MAC_ABSENT); }))) {
            mixin(enumMixinStr_PKCS12_R_MAC_ABSENT);
        }
    }




    static if(!is(typeof(PKCS12_R_MAC_GENERATION_ERROR))) {
        private enum enumMixinStr_PKCS12_R_MAC_GENERATION_ERROR = `enum PKCS12_R_MAC_GENERATION_ERROR = 109;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_R_MAC_GENERATION_ERROR); }))) {
            mixin(enumMixinStr_PKCS12_R_MAC_GENERATION_ERROR);
        }
    }




    static if(!is(typeof(PKCS12_R_MAC_SETUP_ERROR))) {
        private enum enumMixinStr_PKCS12_R_MAC_SETUP_ERROR = `enum PKCS12_R_MAC_SETUP_ERROR = 110;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_R_MAC_SETUP_ERROR); }))) {
            mixin(enumMixinStr_PKCS12_R_MAC_SETUP_ERROR);
        }
    }




    static if(!is(typeof(PKCS12_R_MAC_STRING_SET_ERROR))) {
        private enum enumMixinStr_PKCS12_R_MAC_STRING_SET_ERROR = `enum PKCS12_R_MAC_STRING_SET_ERROR = 111;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_R_MAC_STRING_SET_ERROR); }))) {
            mixin(enumMixinStr_PKCS12_R_MAC_STRING_SET_ERROR);
        }
    }




    static if(!is(typeof(PKCS12_R_MAC_VERIFY_FAILURE))) {
        private enum enumMixinStr_PKCS12_R_MAC_VERIFY_FAILURE = `enum PKCS12_R_MAC_VERIFY_FAILURE = 113;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_R_MAC_VERIFY_FAILURE); }))) {
            mixin(enumMixinStr_PKCS12_R_MAC_VERIFY_FAILURE);
        }
    }




    static if(!is(typeof(PKCS12_R_PARSE_ERROR))) {
        private enum enumMixinStr_PKCS12_R_PARSE_ERROR = `enum PKCS12_R_PARSE_ERROR = 114;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_R_PARSE_ERROR); }))) {
            mixin(enumMixinStr_PKCS12_R_PARSE_ERROR);
        }
    }




    static if(!is(typeof(PKCS12_R_PKCS12_ALGOR_CIPHERINIT_ERROR))) {
        private enum enumMixinStr_PKCS12_R_PKCS12_ALGOR_CIPHERINIT_ERROR = `enum PKCS12_R_PKCS12_ALGOR_CIPHERINIT_ERROR = 115;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_R_PKCS12_ALGOR_CIPHERINIT_ERROR); }))) {
            mixin(enumMixinStr_PKCS12_R_PKCS12_ALGOR_CIPHERINIT_ERROR);
        }
    }




    static if(!is(typeof(PKCS12_R_PKCS12_CIPHERFINAL_ERROR))) {
        private enum enumMixinStr_PKCS12_R_PKCS12_CIPHERFINAL_ERROR = `enum PKCS12_R_PKCS12_CIPHERFINAL_ERROR = 116;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_R_PKCS12_CIPHERFINAL_ERROR); }))) {
            mixin(enumMixinStr_PKCS12_R_PKCS12_CIPHERFINAL_ERROR);
        }
    }




    static if(!is(typeof(PKCS12_R_PKCS12_PBE_CRYPT_ERROR))) {
        private enum enumMixinStr_PKCS12_R_PKCS12_PBE_CRYPT_ERROR = `enum PKCS12_R_PKCS12_PBE_CRYPT_ERROR = 117;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_R_PKCS12_PBE_CRYPT_ERROR); }))) {
            mixin(enumMixinStr_PKCS12_R_PKCS12_PBE_CRYPT_ERROR);
        }
    }




    static if(!is(typeof(PKCS12_R_UNKNOWN_DIGEST_ALGORITHM))) {
        private enum enumMixinStr_PKCS12_R_UNKNOWN_DIGEST_ALGORITHM = `enum PKCS12_R_UNKNOWN_DIGEST_ALGORITHM = 118;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_R_UNKNOWN_DIGEST_ALGORITHM); }))) {
            mixin(enumMixinStr_PKCS12_R_UNKNOWN_DIGEST_ALGORITHM);
        }
    }




    static if(!is(typeof(PKCS12_R_UNSUPPORTED_PKCS12_MODE))) {
        private enum enumMixinStr_PKCS12_R_UNSUPPORTED_PKCS12_MODE = `enum PKCS12_R_UNSUPPORTED_PKCS12_MODE = 119;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS12_R_UNSUPPORTED_PKCS12_MODE); }))) {
            mixin(enumMixinStr_PKCS12_R_UNSUPPORTED_PKCS12_MODE);
        }
    }






    static if(!is(typeof(OBJ_id_ppl))) {
        private enum enumMixinStr_OBJ_id_ppl = `enum OBJ_id_ppl = OBJ_id_pkix , 21L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_ppl); }))) {
            mixin(enumMixinStr_OBJ_id_ppl);
        }
    }




    static if(!is(typeof(NID_id_ppl))) {
        private enum enumMixinStr_NID_id_ppl = `enum NID_id_ppl = 662;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_ppl); }))) {
            mixin(enumMixinStr_NID_id_ppl);
        }
    }




    static if(!is(typeof(SN_id_ppl))) {
        private enum enumMixinStr_SN_id_ppl = `enum SN_id_ppl = "id-ppl";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_ppl); }))) {
            mixin(enumMixinStr_SN_id_ppl);
        }
    }




    static if(!is(typeof(OBJ_id_cct))) {
        private enum enumMixinStr_OBJ_id_cct = `enum OBJ_id_cct = OBJ_id_pkix , 12L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_cct); }))) {
            mixin(enumMixinStr_OBJ_id_cct);
        }
    }




    static if(!is(typeof(NID_id_cct))) {
        private enum enumMixinStr_NID_id_cct = `enum NID_id_cct = 268;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_cct); }))) {
            mixin(enumMixinStr_NID_id_cct);
        }
    }




    static if(!is(typeof(SN_id_cct))) {
        private enum enumMixinStr_SN_id_cct = `enum SN_id_cct = "id-cct";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_cct); }))) {
            mixin(enumMixinStr_SN_id_cct);
        }
    }




    static if(!is(typeof(OBJ_id_qcs))) {
        private enum enumMixinStr_OBJ_id_qcs = `enum OBJ_id_qcs = OBJ_id_pkix , 11L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_qcs); }))) {
            mixin(enumMixinStr_OBJ_id_qcs);
        }
    }




    static if(!is(typeof(NID_id_qcs))) {
        private enum enumMixinStr_NID_id_qcs = `enum NID_id_qcs = 267;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_qcs); }))) {
            mixin(enumMixinStr_NID_id_qcs);
        }
    }




    static if(!is(typeof(SN_id_qcs))) {
        private enum enumMixinStr_SN_id_qcs = `enum SN_id_qcs = "id-qcs";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_qcs); }))) {
            mixin(enumMixinStr_SN_id_qcs);
        }
    }




    static if(!is(typeof(OBJ_id_aca))) {
        private enum enumMixinStr_OBJ_id_aca = `enum OBJ_id_aca = OBJ_id_pkix , 10L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_aca); }))) {
            mixin(enumMixinStr_OBJ_id_aca);
        }
    }




    static if(!is(typeof(NID_id_aca))) {
        private enum enumMixinStr_NID_id_aca = `enum NID_id_aca = 266;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_aca); }))) {
            mixin(enumMixinStr_NID_id_aca);
        }
    }




    static if(!is(typeof(SN_id_aca))) {
        private enum enumMixinStr_SN_id_aca = `enum SN_id_aca = "id-aca";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_aca); }))) {
            mixin(enumMixinStr_SN_id_aca);
        }
    }




    static if(!is(typeof(OBJ_id_pda))) {
        private enum enumMixinStr_OBJ_id_pda = `enum OBJ_id_pda = OBJ_id_pkix , 9L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_pda); }))) {
            mixin(enumMixinStr_OBJ_id_pda);
        }
    }




    static if(!is(typeof(NID_id_pda))) {
        private enum enumMixinStr_NID_id_pda = `enum NID_id_pda = 265;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_pda); }))) {
            mixin(enumMixinStr_NID_id_pda);
        }
    }




    static if(!is(typeof(SN_id_pda))) {
        private enum enumMixinStr_SN_id_pda = `enum SN_id_pda = "id-pda";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_pda); }))) {
            mixin(enumMixinStr_SN_id_pda);
        }
    }




    static if(!is(typeof(OBJ_id_on))) {
        private enum enumMixinStr_OBJ_id_on = `enum OBJ_id_on = OBJ_id_pkix , 8L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_on); }))) {
            mixin(enumMixinStr_OBJ_id_on);
        }
    }




    static if(!is(typeof(NID_id_on))) {
        private enum enumMixinStr_NID_id_on = `enum NID_id_on = 264;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_on); }))) {
            mixin(enumMixinStr_NID_id_on);
        }
    }




    static if(!is(typeof(SN_id_on))) {
        private enum enumMixinStr_SN_id_on = `enum SN_id_on = "id-on";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_on); }))) {
            mixin(enumMixinStr_SN_id_on);
        }
    }




    static if(!is(typeof(OBJ_id_cmc))) {
        private enum enumMixinStr_OBJ_id_cmc = `enum OBJ_id_cmc = OBJ_id_pkix , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_cmc); }))) {
            mixin(enumMixinStr_OBJ_id_cmc);
        }
    }




    static if(!is(typeof(NID_id_cmc))) {
        private enum enumMixinStr_NID_id_cmc = `enum NID_id_cmc = 263;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_cmc); }))) {
            mixin(enumMixinStr_NID_id_cmc);
        }
    }




    static if(!is(typeof(SN_id_cmc))) {
        private enum enumMixinStr_SN_id_cmc = `enum SN_id_cmc = "id-cmc";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_cmc); }))) {
            mixin(enumMixinStr_SN_id_cmc);
        }
    }




    static if(!is(typeof(OBJ_id_alg))) {
        private enum enumMixinStr_OBJ_id_alg = `enum OBJ_id_alg = OBJ_id_pkix , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_alg); }))) {
            mixin(enumMixinStr_OBJ_id_alg);
        }
    }




    static if(!is(typeof(NID_id_alg))) {
        private enum enumMixinStr_NID_id_alg = `enum NID_id_alg = 262;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_alg); }))) {
            mixin(enumMixinStr_NID_id_alg);
        }
    }




    static if(!is(typeof(SN_id_alg))) {
        private enum enumMixinStr_SN_id_alg = `enum SN_id_alg = "id-alg";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_alg); }))) {
            mixin(enumMixinStr_SN_id_alg);
        }
    }




    static if(!is(typeof(OBJ_id_pkip))) {
        private enum enumMixinStr_OBJ_id_pkip = `enum OBJ_id_pkip = OBJ_id_pkix , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_pkip); }))) {
            mixin(enumMixinStr_OBJ_id_pkip);
        }
    }




    static if(!is(typeof(NID_id_pkip))) {
        private enum enumMixinStr_NID_id_pkip = `enum NID_id_pkip = 261;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_pkip); }))) {
            mixin(enumMixinStr_NID_id_pkip);
        }
    }




    static if(!is(typeof(SN_id_pkip))) {
        private enum enumMixinStr_SN_id_pkip = `enum SN_id_pkip = "id-pkip";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_pkip); }))) {
            mixin(enumMixinStr_SN_id_pkip);
        }
    }




    static if(!is(typeof(OBJ_id_it))) {
        private enum enumMixinStr_OBJ_id_it = `enum OBJ_id_it = OBJ_id_pkix , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_it); }))) {
            mixin(enumMixinStr_OBJ_id_it);
        }
    }




    static if(!is(typeof(NID_id_it))) {
        private enum enumMixinStr_NID_id_it = `enum NID_id_it = 260;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_it); }))) {
            mixin(enumMixinStr_NID_id_it);
        }
    }




    static if(!is(typeof(SN_id_it))) {
        private enum enumMixinStr_SN_id_it = `enum SN_id_it = "id-it";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_it); }))) {
            mixin(enumMixinStr_SN_id_it);
        }
    }




    static if(!is(typeof(OBJ_id_kp))) {
        private enum enumMixinStr_OBJ_id_kp = `enum OBJ_id_kp = OBJ_id_pkix , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_kp); }))) {
            mixin(enumMixinStr_OBJ_id_kp);
        }
    }




    static if(!is(typeof(NID_id_kp))) {
        private enum enumMixinStr_NID_id_kp = `enum NID_id_kp = 128;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_kp); }))) {
            mixin(enumMixinStr_NID_id_kp);
        }
    }




    static if(!is(typeof(SN_id_kp))) {
        private enum enumMixinStr_SN_id_kp = `enum SN_id_kp = "id-kp";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_kp); }))) {
            mixin(enumMixinStr_SN_id_kp);
        }
    }




    static if(!is(typeof(OBJ_id_qt))) {
        private enum enumMixinStr_OBJ_id_qt = `enum OBJ_id_qt = OBJ_id_pkix , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_qt); }))) {
            mixin(enumMixinStr_OBJ_id_qt);
        }
    }




    static if(!is(typeof(NID_id_qt))) {
        private enum enumMixinStr_NID_id_qt = `enum NID_id_qt = 259;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_qt); }))) {
            mixin(enumMixinStr_NID_id_qt);
        }
    }




    static if(!is(typeof(SN_id_qt))) {
        private enum enumMixinStr_SN_id_qt = `enum SN_id_qt = "id-qt";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_qt); }))) {
            mixin(enumMixinStr_SN_id_qt);
        }
    }




    static if(!is(typeof(OBJ_id_pe))) {
        private enum enumMixinStr_OBJ_id_pe = `enum OBJ_id_pe = OBJ_id_pkix , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_pe); }))) {
            mixin(enumMixinStr_OBJ_id_pe);
        }
    }




    static if(!is(typeof(NID_id_pe))) {
        private enum enumMixinStr_NID_id_pe = `enum NID_id_pe = 175;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_pe); }))) {
            mixin(enumMixinStr_NID_id_pe);
        }
    }




    static if(!is(typeof(SN_id_pe))) {
        private enum enumMixinStr_SN_id_pe = `enum SN_id_pe = "id-pe";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_pe); }))) {
            mixin(enumMixinStr_SN_id_pe);
        }
    }




    static if(!is(typeof(OBJ_id_pkix_mod))) {
        private enum enumMixinStr_OBJ_id_pkix_mod = `enum OBJ_id_pkix_mod = OBJ_id_pkix , 0L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_pkix_mod); }))) {
            mixin(enumMixinStr_OBJ_id_pkix_mod);
        }
    }




    static if(!is(typeof(NID_id_pkix_mod))) {
        private enum enumMixinStr_NID_id_pkix_mod = `enum NID_id_pkix_mod = 258;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_pkix_mod); }))) {
            mixin(enumMixinStr_NID_id_pkix_mod);
        }
    }




    static if(!is(typeof(SN_id_pkix_mod))) {
        private enum enumMixinStr_SN_id_pkix_mod = `enum SN_id_pkix_mod = "id-pkix-mod";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_pkix_mod); }))) {
            mixin(enumMixinStr_SN_id_pkix_mod);
        }
    }




    static if(!is(typeof(OBJ_id_pkix))) {
        private enum enumMixinStr_OBJ_id_pkix = `enum OBJ_id_pkix = 1L , 3L , 6L , 1L , 5L , 5L , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_pkix); }))) {
            mixin(enumMixinStr_OBJ_id_pkix);
        }
    }




    static if(!is(typeof(NID_id_pkix))) {
        private enum enumMixinStr_NID_id_pkix = `enum NID_id_pkix = 127;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_pkix); }))) {
            mixin(enumMixinStr_NID_id_pkix);
        }
    }




    static if(!is(typeof(SN_id_pkix))) {
        private enum enumMixinStr_SN_id_pkix = `enum SN_id_pkix = "PKIX";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_pkix); }))) {
            mixin(enumMixinStr_SN_id_pkix);
        }
    }




    static if(!is(typeof(NID_bf_ofb64))) {
        private enum enumMixinStr_NID_bf_ofb64 = `enum NID_bf_ofb64 = 94;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_bf_ofb64); }))) {
            mixin(enumMixinStr_NID_bf_ofb64);
        }
    }




    static if(!is(typeof(LN_bf_ofb64))) {
        private enum enumMixinStr_LN_bf_ofb64 = `enum LN_bf_ofb64 = "bf-ofb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_bf_ofb64); }))) {
            mixin(enumMixinStr_LN_bf_ofb64);
        }
    }




    static if(!is(typeof(SN_bf_ofb64))) {
        private enum enumMixinStr_SN_bf_ofb64 = `enum SN_bf_ofb64 = "BF-OFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_bf_ofb64); }))) {
            mixin(enumMixinStr_SN_bf_ofb64);
        }
    }




    static if(!is(typeof(NID_bf_cfb64))) {
        private enum enumMixinStr_NID_bf_cfb64 = `enum NID_bf_cfb64 = 93;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_bf_cfb64); }))) {
            mixin(enumMixinStr_NID_bf_cfb64);
        }
    }




    static if(!is(typeof(LN_bf_cfb64))) {
        private enum enumMixinStr_LN_bf_cfb64 = `enum LN_bf_cfb64 = "bf-cfb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_bf_cfb64); }))) {
            mixin(enumMixinStr_LN_bf_cfb64);
        }
    }




    static if(!is(typeof(SN_bf_cfb64))) {
        private enum enumMixinStr_SN_bf_cfb64 = `enum SN_bf_cfb64 = "BF-CFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_bf_cfb64); }))) {
            mixin(enumMixinStr_SN_bf_cfb64);
        }
    }




    static if(!is(typeof(NID_bf_ecb))) {
        private enum enumMixinStr_NID_bf_ecb = `enum NID_bf_ecb = 92;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_bf_ecb); }))) {
            mixin(enumMixinStr_NID_bf_ecb);
        }
    }




    static if(!is(typeof(LN_bf_ecb))) {
        private enum enumMixinStr_LN_bf_ecb = `enum LN_bf_ecb = "bf-ecb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_bf_ecb); }))) {
            mixin(enumMixinStr_LN_bf_ecb);
        }
    }




    static if(!is(typeof(SN_bf_ecb))) {
        private enum enumMixinStr_SN_bf_ecb = `enum SN_bf_ecb = "BF-ECB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_bf_ecb); }))) {
            mixin(enumMixinStr_SN_bf_ecb);
        }
    }




    static if(!is(typeof(OBJ_bf_cbc))) {
        private enum enumMixinStr_OBJ_bf_cbc = `enum OBJ_bf_cbc = 1L , 3L , 6L , 1L , 4L , 1L , 3029L , 1L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_bf_cbc); }))) {
            mixin(enumMixinStr_OBJ_bf_cbc);
        }
    }




    static if(!is(typeof(NID_bf_cbc))) {
        private enum enumMixinStr_NID_bf_cbc = `enum NID_bf_cbc = 91;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_bf_cbc); }))) {
            mixin(enumMixinStr_NID_bf_cbc);
        }
    }




    static if(!is(typeof(LN_bf_cbc))) {
        private enum enumMixinStr_LN_bf_cbc = `enum LN_bf_cbc = "bf-cbc";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_bf_cbc); }))) {
            mixin(enumMixinStr_LN_bf_cbc);
        }
    }




    static if(!is(typeof(SN_bf_cbc))) {
        private enum enumMixinStr_SN_bf_cbc = `enum SN_bf_cbc = "BF-CBC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_bf_cbc); }))) {
            mixin(enumMixinStr_SN_bf_cbc);
        }
    }




    static if(!is(typeof(NID_idea_ofb64))) {
        private enum enumMixinStr_NID_idea_ofb64 = `enum NID_idea_ofb64 = 46;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_idea_ofb64); }))) {
            mixin(enumMixinStr_NID_idea_ofb64);
        }
    }




    static if(!is(typeof(LN_idea_ofb64))) {
        private enum enumMixinStr_LN_idea_ofb64 = `enum LN_idea_ofb64 = "idea-ofb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_idea_ofb64); }))) {
            mixin(enumMixinStr_LN_idea_ofb64);
        }
    }




    static if(!is(typeof(SN_idea_ofb64))) {
        private enum enumMixinStr_SN_idea_ofb64 = `enum SN_idea_ofb64 = "IDEA-OFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_idea_ofb64); }))) {
            mixin(enumMixinStr_SN_idea_ofb64);
        }
    }




    static if(!is(typeof(NID_idea_cfb64))) {
        private enum enumMixinStr_NID_idea_cfb64 = `enum NID_idea_cfb64 = 35;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_idea_cfb64); }))) {
            mixin(enumMixinStr_NID_idea_cfb64);
        }
    }




    static if(!is(typeof(LN_idea_cfb64))) {
        private enum enumMixinStr_LN_idea_cfb64 = `enum LN_idea_cfb64 = "idea-cfb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_idea_cfb64); }))) {
            mixin(enumMixinStr_LN_idea_cfb64);
        }
    }




    static if(!is(typeof(SN_idea_cfb64))) {
        private enum enumMixinStr_SN_idea_cfb64 = `enum SN_idea_cfb64 = "IDEA-CFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_idea_cfb64); }))) {
            mixin(enumMixinStr_SN_idea_cfb64);
        }
    }




    static if(!is(typeof(NID_idea_ecb))) {
        private enum enumMixinStr_NID_idea_ecb = `enum NID_idea_ecb = 36;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_idea_ecb); }))) {
            mixin(enumMixinStr_NID_idea_ecb);
        }
    }




    static if(!is(typeof(LN_idea_ecb))) {
        private enum enumMixinStr_LN_idea_ecb = `enum LN_idea_ecb = "idea-ecb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_idea_ecb); }))) {
            mixin(enumMixinStr_LN_idea_ecb);
        }
    }




    static if(!is(typeof(SN_idea_ecb))) {
        private enum enumMixinStr_SN_idea_ecb = `enum SN_idea_ecb = "IDEA-ECB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_idea_ecb); }))) {
            mixin(enumMixinStr_SN_idea_ecb);
        }
    }




    static if(!is(typeof(OBJ_idea_cbc))) {
        private enum enumMixinStr_OBJ_idea_cbc = `enum OBJ_idea_cbc = 1L , 3L , 6L , 1L , 4L , 1L , 188L , 7L , 1L , 1L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_idea_cbc); }))) {
            mixin(enumMixinStr_OBJ_idea_cbc);
        }
    }




    static if(!is(typeof(NID_idea_cbc))) {
        private enum enumMixinStr_NID_idea_cbc = `enum NID_idea_cbc = 34;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_idea_cbc); }))) {
            mixin(enumMixinStr_NID_idea_cbc);
        }
    }




    static if(!is(typeof(LN_idea_cbc))) {
        private enum enumMixinStr_LN_idea_cbc = `enum LN_idea_cbc = "idea-cbc";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_idea_cbc); }))) {
            mixin(enumMixinStr_LN_idea_cbc);
        }
    }




    static if(!is(typeof(SN_idea_cbc))) {
        private enum enumMixinStr_SN_idea_cbc = `enum SN_idea_cbc = "IDEA-CBC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_idea_cbc); }))) {
            mixin(enumMixinStr_SN_idea_cbc);
        }
    }




    static if(!is(typeof(OBJ_ms_upn))) {
        private enum enumMixinStr_OBJ_ms_upn = `enum OBJ_ms_upn = 1L , 3L , 6L , 1L , 4L , 1L , 311L , 20L , 2L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ms_upn); }))) {
            mixin(enumMixinStr_OBJ_ms_upn);
        }
    }




    static if(!is(typeof(NID_ms_upn))) {
        private enum enumMixinStr_NID_ms_upn = `enum NID_ms_upn = 649;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ms_upn); }))) {
            mixin(enumMixinStr_NID_ms_upn);
        }
    }




    static if(!is(typeof(LN_ms_upn))) {
        private enum enumMixinStr_LN_ms_upn = `enum LN_ms_upn = "Microsoft User Principal Name";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ms_upn); }))) {
            mixin(enumMixinStr_LN_ms_upn);
        }
    }




    static if(!is(typeof(SN_ms_upn))) {
        private enum enumMixinStr_SN_ms_upn = `enum SN_ms_upn = "msUPN";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ms_upn); }))) {
            mixin(enumMixinStr_SN_ms_upn);
        }
    }




    static if(!is(typeof(OBJ_ms_smartcard_login))) {
        private enum enumMixinStr_OBJ_ms_smartcard_login = `enum OBJ_ms_smartcard_login = 1L , 3L , 6L , 1L , 4L , 1L , 311L , 20L , 2L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ms_smartcard_login); }))) {
            mixin(enumMixinStr_OBJ_ms_smartcard_login);
        }
    }




    static if(!is(typeof(NID_ms_smartcard_login))) {
        private enum enumMixinStr_NID_ms_smartcard_login = `enum NID_ms_smartcard_login = 648;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ms_smartcard_login); }))) {
            mixin(enumMixinStr_NID_ms_smartcard_login);
        }
    }




    static if(!is(typeof(LN_ms_smartcard_login))) {
        private enum enumMixinStr_LN_ms_smartcard_login = `enum LN_ms_smartcard_login = "Microsoft Smartcard Login";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ms_smartcard_login); }))) {
            mixin(enumMixinStr_LN_ms_smartcard_login);
        }
    }




    static if(!is(typeof(SN_ms_smartcard_login))) {
        private enum enumMixinStr_SN_ms_smartcard_login = `enum SN_ms_smartcard_login = "msSmartcardLogin";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ms_smartcard_login); }))) {
            mixin(enumMixinStr_SN_ms_smartcard_login);
        }
    }




    static if(!is(typeof(OBJ_ms_efs))) {
        private enum enumMixinStr_OBJ_ms_efs = `enum OBJ_ms_efs = 1L , 3L , 6L , 1L , 4L , 1L , 311L , 10L , 3L , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ms_efs); }))) {
            mixin(enumMixinStr_OBJ_ms_efs);
        }
    }




    static if(!is(typeof(NID_ms_efs))) {
        private enum enumMixinStr_NID_ms_efs = `enum NID_ms_efs = 138;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ms_efs); }))) {
            mixin(enumMixinStr_NID_ms_efs);
        }
    }




    static if(!is(typeof(LN_ms_efs))) {
        private enum enumMixinStr_LN_ms_efs = `enum LN_ms_efs = "Microsoft Encrypted File System";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ms_efs); }))) {
            mixin(enumMixinStr_LN_ms_efs);
        }
    }




    static if(!is(typeof(SN_ms_efs))) {
        private enum enumMixinStr_SN_ms_efs = `enum SN_ms_efs = "msEFS";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ms_efs); }))) {
            mixin(enumMixinStr_SN_ms_efs);
        }
    }




    static if(!is(typeof(OBJ_ms_sgc))) {
        private enum enumMixinStr_OBJ_ms_sgc = `enum OBJ_ms_sgc = 1L , 3L , 6L , 1L , 4L , 1L , 311L , 10L , 3L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ms_sgc); }))) {
            mixin(enumMixinStr_OBJ_ms_sgc);
        }
    }




    static if(!is(typeof(NID_ms_sgc))) {
        private enum enumMixinStr_NID_ms_sgc = `enum NID_ms_sgc = 137;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ms_sgc); }))) {
            mixin(enumMixinStr_NID_ms_sgc);
        }
    }




    static if(!is(typeof(LN_ms_sgc))) {
        private enum enumMixinStr_LN_ms_sgc = `enum LN_ms_sgc = "Microsoft Server Gated Crypto";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ms_sgc); }))) {
            mixin(enumMixinStr_LN_ms_sgc);
        }
    }




    static if(!is(typeof(SN_ms_sgc))) {
        private enum enumMixinStr_SN_ms_sgc = `enum SN_ms_sgc = "msSGC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ms_sgc); }))) {
            mixin(enumMixinStr_SN_ms_sgc);
        }
    }




    static if(!is(typeof(OBJ_ms_ctl_sign))) {
        private enum enumMixinStr_OBJ_ms_ctl_sign = `enum OBJ_ms_ctl_sign = 1L , 3L , 6L , 1L , 4L , 1L , 311L , 10L , 3L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ms_ctl_sign); }))) {
            mixin(enumMixinStr_OBJ_ms_ctl_sign);
        }
    }




    static if(!is(typeof(NID_ms_ctl_sign))) {
        private enum enumMixinStr_NID_ms_ctl_sign = `enum NID_ms_ctl_sign = 136;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ms_ctl_sign); }))) {
            mixin(enumMixinStr_NID_ms_ctl_sign);
        }
    }




    static if(!is(typeof(LN_ms_ctl_sign))) {
        private enum enumMixinStr_LN_ms_ctl_sign = `enum LN_ms_ctl_sign = "Microsoft Trust List Signing";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ms_ctl_sign); }))) {
            mixin(enumMixinStr_LN_ms_ctl_sign);
        }
    }




    static if(!is(typeof(SN_ms_ctl_sign))) {
        private enum enumMixinStr_SN_ms_ctl_sign = `enum SN_ms_ctl_sign = "msCTLSign";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ms_ctl_sign); }))) {
            mixin(enumMixinStr_SN_ms_ctl_sign);
        }
    }




    static if(!is(typeof(OBJ_ms_code_com))) {
        private enum enumMixinStr_OBJ_ms_code_com = `enum OBJ_ms_code_com = 1L , 3L , 6L , 1L , 4L , 1L , 311L , 2L , 1L , 22L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ms_code_com); }))) {
            mixin(enumMixinStr_OBJ_ms_code_com);
        }
    }




    static if(!is(typeof(NID_ms_code_com))) {
        private enum enumMixinStr_NID_ms_code_com = `enum NID_ms_code_com = 135;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ms_code_com); }))) {
            mixin(enumMixinStr_NID_ms_code_com);
        }
    }




    static if(!is(typeof(LN_ms_code_com))) {
        private enum enumMixinStr_LN_ms_code_com = `enum LN_ms_code_com = "Microsoft Commercial Code Signing";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ms_code_com); }))) {
            mixin(enumMixinStr_LN_ms_code_com);
        }
    }




    static if(!is(typeof(SN_ms_code_com))) {
        private enum enumMixinStr_SN_ms_code_com = `enum SN_ms_code_com = "msCodeCom";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ms_code_com); }))) {
            mixin(enumMixinStr_SN_ms_code_com);
        }
    }




    static if(!is(typeof(OBJ_ms_code_ind))) {
        private enum enumMixinStr_OBJ_ms_code_ind = `enum OBJ_ms_code_ind = 1L , 3L , 6L , 1L , 4L , 1L , 311L , 2L , 1L , 21L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ms_code_ind); }))) {
            mixin(enumMixinStr_OBJ_ms_code_ind);
        }
    }




    static if(!is(typeof(PKCS7_S_HEADER))) {
        private enum enumMixinStr_PKCS7_S_HEADER = `enum PKCS7_S_HEADER = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_S_HEADER); }))) {
            mixin(enumMixinStr_PKCS7_S_HEADER);
        }
    }




    static if(!is(typeof(PKCS7_S_BODY))) {
        private enum enumMixinStr_PKCS7_S_BODY = `enum PKCS7_S_BODY = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_S_BODY); }))) {
            mixin(enumMixinStr_PKCS7_S_BODY);
        }
    }




    static if(!is(typeof(PKCS7_S_TAIL))) {
        private enum enumMixinStr_PKCS7_S_TAIL = `enum PKCS7_S_TAIL = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_S_TAIL); }))) {
            mixin(enumMixinStr_PKCS7_S_TAIL);
        }
    }




    static if(!is(typeof(NID_ms_code_ind))) {
        private enum enumMixinStr_NID_ms_code_ind = `enum NID_ms_code_ind = 134;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ms_code_ind); }))) {
            mixin(enumMixinStr_NID_ms_code_ind);
        }
    }




    static if(!is(typeof(LN_ms_code_ind))) {
        private enum enumMixinStr_LN_ms_code_ind = `enum LN_ms_code_ind = "Microsoft Individual Code Signing";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ms_code_ind); }))) {
            mixin(enumMixinStr_LN_ms_code_ind);
        }
    }




    static if(!is(typeof(SN_ms_code_ind))) {
        private enum enumMixinStr_SN_ms_code_ind = `enum SN_ms_code_ind = "msCodeInd";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ms_code_ind); }))) {
            mixin(enumMixinStr_SN_ms_code_ind);
        }
    }




    static if(!is(typeof(OBJ_ms_ext_req))) {
        private enum enumMixinStr_OBJ_ms_ext_req = `enum OBJ_ms_ext_req = 1L , 3L , 6L , 1L , 4L , 1L , 311L , 2L , 1L , 14L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ms_ext_req); }))) {
            mixin(enumMixinStr_OBJ_ms_ext_req);
        }
    }




    static if(!is(typeof(NID_ms_ext_req))) {
        private enum enumMixinStr_NID_ms_ext_req = `enum NID_ms_ext_req = 171;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ms_ext_req); }))) {
            mixin(enumMixinStr_NID_ms_ext_req);
        }
    }




    static if(!is(typeof(LN_ms_ext_req))) {
        private enum enumMixinStr_LN_ms_ext_req = `enum LN_ms_ext_req = "Microsoft Extension Request";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ms_ext_req); }))) {
            mixin(enumMixinStr_LN_ms_ext_req);
        }
    }




    static if(!is(typeof(SN_ms_ext_req))) {
        private enum enumMixinStr_SN_ms_ext_req = `enum SN_ms_ext_req = "msExtReq";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ms_ext_req); }))) {
            mixin(enumMixinStr_SN_ms_ext_req);
        }
    }




    static if(!is(typeof(NID_rc5_ofb64))) {
        private enum enumMixinStr_NID_rc5_ofb64 = `enum NID_rc5_ofb64 = 123;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_rc5_ofb64); }))) {
            mixin(enumMixinStr_NID_rc5_ofb64);
        }
    }




    static if(!is(typeof(LN_rc5_ofb64))) {
        private enum enumMixinStr_LN_rc5_ofb64 = `enum LN_rc5_ofb64 = "rc5-ofb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_rc5_ofb64); }))) {
            mixin(enumMixinStr_LN_rc5_ofb64);
        }
    }




    static if(!is(typeof(SN_rc5_ofb64))) {
        private enum enumMixinStr_SN_rc5_ofb64 = `enum SN_rc5_ofb64 = "RC5-OFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_rc5_ofb64); }))) {
            mixin(enumMixinStr_SN_rc5_ofb64);
        }
    }




    static if(!is(typeof(NID_rc5_cfb64))) {
        private enum enumMixinStr_NID_rc5_cfb64 = `enum NID_rc5_cfb64 = 122;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_rc5_cfb64); }))) {
            mixin(enumMixinStr_NID_rc5_cfb64);
        }
    }




    static if(!is(typeof(LN_rc5_cfb64))) {
        private enum enumMixinStr_LN_rc5_cfb64 = `enum LN_rc5_cfb64 = "rc5-cfb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_rc5_cfb64); }))) {
            mixin(enumMixinStr_LN_rc5_cfb64);
        }
    }




    static if(!is(typeof(SN_rc5_cfb64))) {
        private enum enumMixinStr_SN_rc5_cfb64 = `enum SN_rc5_cfb64 = "RC5-CFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_rc5_cfb64); }))) {
            mixin(enumMixinStr_SN_rc5_cfb64);
        }
    }




    static if(!is(typeof(NID_rc5_ecb))) {
        private enum enumMixinStr_NID_rc5_ecb = `enum NID_rc5_ecb = 121;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_rc5_ecb); }))) {
            mixin(enumMixinStr_NID_rc5_ecb);
        }
    }




    static if(!is(typeof(LN_rc5_ecb))) {
        private enum enumMixinStr_LN_rc5_ecb = `enum LN_rc5_ecb = "rc5-ecb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_rc5_ecb); }))) {
            mixin(enumMixinStr_LN_rc5_ecb);
        }
    }




    static if(!is(typeof(SN_rc5_ecb))) {
        private enum enumMixinStr_SN_rc5_ecb = `enum SN_rc5_ecb = "RC5-ECB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_rc5_ecb); }))) {
            mixin(enumMixinStr_SN_rc5_ecb);
        }
    }




    static if(!is(typeof(OBJ_rc5_cbc))) {
        private enum enumMixinStr_OBJ_rc5_cbc = `enum OBJ_rc5_cbc = OBJ_rsadsi , 3L , 8L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_rc5_cbc); }))) {
            mixin(enumMixinStr_OBJ_rc5_cbc);
        }
    }




    static if(!is(typeof(NID_rc5_cbc))) {
        private enum enumMixinStr_NID_rc5_cbc = `enum NID_rc5_cbc = 120;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_rc5_cbc); }))) {
            mixin(enumMixinStr_NID_rc5_cbc);
        }
    }




    static if(!is(typeof(LN_rc5_cbc))) {
        private enum enumMixinStr_LN_rc5_cbc = `enum LN_rc5_cbc = "rc5-cbc";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_rc5_cbc); }))) {
            mixin(enumMixinStr_LN_rc5_cbc);
        }
    }




    static if(!is(typeof(SN_rc5_cbc))) {
        private enum enumMixinStr_SN_rc5_cbc = `enum SN_rc5_cbc = "RC5-CBC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_rc5_cbc); }))) {
            mixin(enumMixinStr_SN_rc5_cbc);
        }
    }




    static if(!is(typeof(OBJ_des_ede3_cbc))) {
        private enum enumMixinStr_OBJ_des_ede3_cbc = `enum OBJ_des_ede3_cbc = OBJ_rsadsi , 3L , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_des_ede3_cbc); }))) {
            mixin(enumMixinStr_OBJ_des_ede3_cbc);
        }
    }




    static if(!is(typeof(NID_des_ede3_cbc))) {
        private enum enumMixinStr_NID_des_ede3_cbc = `enum NID_des_ede3_cbc = 44;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_des_ede3_cbc); }))) {
            mixin(enumMixinStr_NID_des_ede3_cbc);
        }
    }




    static if(!is(typeof(LN_des_ede3_cbc))) {
        private enum enumMixinStr_LN_des_ede3_cbc = `enum LN_des_ede3_cbc = "des-ede3-cbc";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_des_ede3_cbc); }))) {
            mixin(enumMixinStr_LN_des_ede3_cbc);
        }
    }




    static if(!is(typeof(SN_des_ede3_cbc))) {
        private enum enumMixinStr_SN_des_ede3_cbc = `enum SN_des_ede3_cbc = "DES-EDE3-CBC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_des_ede3_cbc); }))) {
            mixin(enumMixinStr_SN_des_ede3_cbc);
        }
    }




    static if(!is(typeof(NID_rc4_40))) {
        private enum enumMixinStr_NID_rc4_40 = `enum NID_rc4_40 = 97;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_rc4_40); }))) {
            mixin(enumMixinStr_NID_rc4_40);
        }
    }




    static if(!is(typeof(LN_rc4_40))) {
        private enum enumMixinStr_LN_rc4_40 = `enum LN_rc4_40 = "rc4-40";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_rc4_40); }))) {
            mixin(enumMixinStr_LN_rc4_40);
        }
    }




    static if(!is(typeof(SN_rc4_40))) {
        private enum enumMixinStr_SN_rc4_40 = `enum SN_rc4_40 = "RC4-40";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_rc4_40); }))) {
            mixin(enumMixinStr_SN_rc4_40);
        }
    }




    static if(!is(typeof(OBJ_rc4))) {
        private enum enumMixinStr_OBJ_rc4 = `enum OBJ_rc4 = OBJ_rsadsi , 3L , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_rc4); }))) {
            mixin(enumMixinStr_OBJ_rc4);
        }
    }




    static if(!is(typeof(NID_rc4))) {
        private enum enumMixinStr_NID_rc4 = `enum NID_rc4 = 5;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_rc4); }))) {
            mixin(enumMixinStr_NID_rc4);
        }
    }




    static if(!is(typeof(PKCS7_OP_SET_DETACHED_SIGNATURE))) {
        private enum enumMixinStr_PKCS7_OP_SET_DETACHED_SIGNATURE = `enum PKCS7_OP_SET_DETACHED_SIGNATURE = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_OP_SET_DETACHED_SIGNATURE); }))) {
            mixin(enumMixinStr_PKCS7_OP_SET_DETACHED_SIGNATURE);
        }
    }




    static if(!is(typeof(PKCS7_OP_GET_DETACHED_SIGNATURE))) {
        private enum enumMixinStr_PKCS7_OP_GET_DETACHED_SIGNATURE = `enum PKCS7_OP_GET_DETACHED_SIGNATURE = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_OP_GET_DETACHED_SIGNATURE); }))) {
            mixin(enumMixinStr_PKCS7_OP_GET_DETACHED_SIGNATURE);
        }
    }
    static if(!is(typeof(PKCS7_TEXT))) {
        private enum enumMixinStr_PKCS7_TEXT = `enum PKCS7_TEXT = 0x1;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_TEXT); }))) {
            mixin(enumMixinStr_PKCS7_TEXT);
        }
    }




    static if(!is(typeof(PKCS7_NOCERTS))) {
        private enum enumMixinStr_PKCS7_NOCERTS = `enum PKCS7_NOCERTS = 0x2;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_NOCERTS); }))) {
            mixin(enumMixinStr_PKCS7_NOCERTS);
        }
    }




    static if(!is(typeof(PKCS7_NOSIGS))) {
        private enum enumMixinStr_PKCS7_NOSIGS = `enum PKCS7_NOSIGS = 0x4;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_NOSIGS); }))) {
            mixin(enumMixinStr_PKCS7_NOSIGS);
        }
    }




    static if(!is(typeof(PKCS7_NOCHAIN))) {
        private enum enumMixinStr_PKCS7_NOCHAIN = `enum PKCS7_NOCHAIN = 0x8;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_NOCHAIN); }))) {
            mixin(enumMixinStr_PKCS7_NOCHAIN);
        }
    }




    static if(!is(typeof(PKCS7_NOINTERN))) {
        private enum enumMixinStr_PKCS7_NOINTERN = `enum PKCS7_NOINTERN = 0x10;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_NOINTERN); }))) {
            mixin(enumMixinStr_PKCS7_NOINTERN);
        }
    }




    static if(!is(typeof(PKCS7_NOVERIFY))) {
        private enum enumMixinStr_PKCS7_NOVERIFY = `enum PKCS7_NOVERIFY = 0x20;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_NOVERIFY); }))) {
            mixin(enumMixinStr_PKCS7_NOVERIFY);
        }
    }




    static if(!is(typeof(PKCS7_DETACHED))) {
        private enum enumMixinStr_PKCS7_DETACHED = `enum PKCS7_DETACHED = 0x40;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_DETACHED); }))) {
            mixin(enumMixinStr_PKCS7_DETACHED);
        }
    }




    static if(!is(typeof(PKCS7_BINARY))) {
        private enum enumMixinStr_PKCS7_BINARY = `enum PKCS7_BINARY = 0x80;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_BINARY); }))) {
            mixin(enumMixinStr_PKCS7_BINARY);
        }
    }




    static if(!is(typeof(PKCS7_NOATTR))) {
        private enum enumMixinStr_PKCS7_NOATTR = `enum PKCS7_NOATTR = 0x100;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_NOATTR); }))) {
            mixin(enumMixinStr_PKCS7_NOATTR);
        }
    }




    static if(!is(typeof(PKCS7_NOSMIMECAP))) {
        private enum enumMixinStr_PKCS7_NOSMIMECAP = `enum PKCS7_NOSMIMECAP = 0x200;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_NOSMIMECAP); }))) {
            mixin(enumMixinStr_PKCS7_NOSMIMECAP);
        }
    }




    static if(!is(typeof(PKCS7_NOOLDMIMETYPE))) {
        private enum enumMixinStr_PKCS7_NOOLDMIMETYPE = `enum PKCS7_NOOLDMIMETYPE = 0x400;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_NOOLDMIMETYPE); }))) {
            mixin(enumMixinStr_PKCS7_NOOLDMIMETYPE);
        }
    }




    static if(!is(typeof(PKCS7_CRLFEOL))) {
        private enum enumMixinStr_PKCS7_CRLFEOL = `enum PKCS7_CRLFEOL = 0x800;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_CRLFEOL); }))) {
            mixin(enumMixinStr_PKCS7_CRLFEOL);
        }
    }




    static if(!is(typeof(PKCS7_STREAM))) {
        private enum enumMixinStr_PKCS7_STREAM = `enum PKCS7_STREAM = 0x1000;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_STREAM); }))) {
            mixin(enumMixinStr_PKCS7_STREAM);
        }
    }




    static if(!is(typeof(PKCS7_NOCRL))) {
        private enum enumMixinStr_PKCS7_NOCRL = `enum PKCS7_NOCRL = 0x2000;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_NOCRL); }))) {
            mixin(enumMixinStr_PKCS7_NOCRL);
        }
    }




    static if(!is(typeof(PKCS7_PARTIAL))) {
        private enum enumMixinStr_PKCS7_PARTIAL = `enum PKCS7_PARTIAL = 0x4000;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_PARTIAL); }))) {
            mixin(enumMixinStr_PKCS7_PARTIAL);
        }
    }




    static if(!is(typeof(PKCS7_REUSE_DIGEST))) {
        private enum enumMixinStr_PKCS7_REUSE_DIGEST = `enum PKCS7_REUSE_DIGEST = 0x8000;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_REUSE_DIGEST); }))) {
            mixin(enumMixinStr_PKCS7_REUSE_DIGEST);
        }
    }




    static if(!is(typeof(PKCS7_NO_DUAL_CONTENT))) {
        private enum enumMixinStr_PKCS7_NO_DUAL_CONTENT = `enum PKCS7_NO_DUAL_CONTENT = 0x10000;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_NO_DUAL_CONTENT); }))) {
            mixin(enumMixinStr_PKCS7_NO_DUAL_CONTENT);
        }
    }




    static if(!is(typeof(SMIME_TEXT))) {
        private enum enumMixinStr_SMIME_TEXT = `enum SMIME_TEXT = 0x1;`;
        static if(is(typeof({ mixin(enumMixinStr_SMIME_TEXT); }))) {
            mixin(enumMixinStr_SMIME_TEXT);
        }
    }




    static if(!is(typeof(SMIME_NOCERTS))) {
        private enum enumMixinStr_SMIME_NOCERTS = `enum SMIME_NOCERTS = 0x2;`;
        static if(is(typeof({ mixin(enumMixinStr_SMIME_NOCERTS); }))) {
            mixin(enumMixinStr_SMIME_NOCERTS);
        }
    }




    static if(!is(typeof(SMIME_NOSIGS))) {
        private enum enumMixinStr_SMIME_NOSIGS = `enum SMIME_NOSIGS = 0x4;`;
        static if(is(typeof({ mixin(enumMixinStr_SMIME_NOSIGS); }))) {
            mixin(enumMixinStr_SMIME_NOSIGS);
        }
    }




    static if(!is(typeof(SMIME_NOCHAIN))) {
        private enum enumMixinStr_SMIME_NOCHAIN = `enum SMIME_NOCHAIN = 0x8;`;
        static if(is(typeof({ mixin(enumMixinStr_SMIME_NOCHAIN); }))) {
            mixin(enumMixinStr_SMIME_NOCHAIN);
        }
    }




    static if(!is(typeof(SMIME_NOINTERN))) {
        private enum enumMixinStr_SMIME_NOINTERN = `enum SMIME_NOINTERN = 0x10;`;
        static if(is(typeof({ mixin(enumMixinStr_SMIME_NOINTERN); }))) {
            mixin(enumMixinStr_SMIME_NOINTERN);
        }
    }




    static if(!is(typeof(SMIME_NOVERIFY))) {
        private enum enumMixinStr_SMIME_NOVERIFY = `enum SMIME_NOVERIFY = 0x20;`;
        static if(is(typeof({ mixin(enumMixinStr_SMIME_NOVERIFY); }))) {
            mixin(enumMixinStr_SMIME_NOVERIFY);
        }
    }




    static if(!is(typeof(SMIME_DETACHED))) {
        private enum enumMixinStr_SMIME_DETACHED = `enum SMIME_DETACHED = 0x40;`;
        static if(is(typeof({ mixin(enumMixinStr_SMIME_DETACHED); }))) {
            mixin(enumMixinStr_SMIME_DETACHED);
        }
    }




    static if(!is(typeof(SMIME_BINARY))) {
        private enum enumMixinStr_SMIME_BINARY = `enum SMIME_BINARY = 0x80;`;
        static if(is(typeof({ mixin(enumMixinStr_SMIME_BINARY); }))) {
            mixin(enumMixinStr_SMIME_BINARY);
        }
    }




    static if(!is(typeof(SMIME_NOATTR))) {
        private enum enumMixinStr_SMIME_NOATTR = `enum SMIME_NOATTR = 0x100;`;
        static if(is(typeof({ mixin(enumMixinStr_SMIME_NOATTR); }))) {
            mixin(enumMixinStr_SMIME_NOATTR);
        }
    }




    static if(!is(typeof(SMIME_ASCIICRLF))) {
        private enum enumMixinStr_SMIME_ASCIICRLF = `enum SMIME_ASCIICRLF = 0x80000;`;
        static if(is(typeof({ mixin(enumMixinStr_SMIME_ASCIICRLF); }))) {
            mixin(enumMixinStr_SMIME_ASCIICRLF);
        }
    }




    static if(!is(typeof(LN_rc4))) {
        private enum enumMixinStr_LN_rc4 = `enum LN_rc4 = "rc4";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_rc4); }))) {
            mixin(enumMixinStr_LN_rc4);
        }
    }




    static if(!is(typeof(SN_rc4))) {
        private enum enumMixinStr_SN_rc4 = `enum SN_rc4 = "RC4";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_rc4); }))) {
            mixin(enumMixinStr_SN_rc4);
        }
    }




    static if(!is(typeof(NID_rc2_64_cbc))) {
        private enum enumMixinStr_NID_rc2_64_cbc = `enum NID_rc2_64_cbc = 166;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_rc2_64_cbc); }))) {
            mixin(enumMixinStr_NID_rc2_64_cbc);
        }
    }




    static if(!is(typeof(LN_rc2_64_cbc))) {
        private enum enumMixinStr_LN_rc2_64_cbc = `enum LN_rc2_64_cbc = "rc2-64-cbc";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_rc2_64_cbc); }))) {
            mixin(enumMixinStr_LN_rc2_64_cbc);
        }
    }




    static if(!is(typeof(SN_rc2_64_cbc))) {
        private enum enumMixinStr_SN_rc2_64_cbc = `enum SN_rc2_64_cbc = "RC2-64-CBC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_rc2_64_cbc); }))) {
            mixin(enumMixinStr_SN_rc2_64_cbc);
        }
    }




    static if(!is(typeof(NID_rc2_40_cbc))) {
        private enum enumMixinStr_NID_rc2_40_cbc = `enum NID_rc2_40_cbc = 98;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_rc2_40_cbc); }))) {
            mixin(enumMixinStr_NID_rc2_40_cbc);
        }
    }




    static if(!is(typeof(LN_rc2_40_cbc))) {
        private enum enumMixinStr_LN_rc2_40_cbc = `enum LN_rc2_40_cbc = "rc2-40-cbc";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_rc2_40_cbc); }))) {
            mixin(enumMixinStr_LN_rc2_40_cbc);
        }
    }




    static if(!is(typeof(SN_rc2_40_cbc))) {
        private enum enumMixinStr_SN_rc2_40_cbc = `enum SN_rc2_40_cbc = "RC2-40-CBC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_rc2_40_cbc); }))) {
            mixin(enumMixinStr_SN_rc2_40_cbc);
        }
    }




    static if(!is(typeof(NID_rc2_ofb64))) {
        private enum enumMixinStr_NID_rc2_ofb64 = `enum NID_rc2_ofb64 = 40;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_rc2_ofb64); }))) {
            mixin(enumMixinStr_NID_rc2_ofb64);
        }
    }




    static if(!is(typeof(LN_rc2_ofb64))) {
        private enum enumMixinStr_LN_rc2_ofb64 = `enum LN_rc2_ofb64 = "rc2-ofb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_rc2_ofb64); }))) {
            mixin(enumMixinStr_LN_rc2_ofb64);
        }
    }




    static if(!is(typeof(SN_rc2_ofb64))) {
        private enum enumMixinStr_SN_rc2_ofb64 = `enum SN_rc2_ofb64 = "RC2-OFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_rc2_ofb64); }))) {
            mixin(enumMixinStr_SN_rc2_ofb64);
        }
    }




    static if(!is(typeof(NID_rc2_cfb64))) {
        private enum enumMixinStr_NID_rc2_cfb64 = `enum NID_rc2_cfb64 = 39;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_rc2_cfb64); }))) {
            mixin(enumMixinStr_NID_rc2_cfb64);
        }
    }




    static if(!is(typeof(LN_rc2_cfb64))) {
        private enum enumMixinStr_LN_rc2_cfb64 = `enum LN_rc2_cfb64 = "rc2-cfb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_rc2_cfb64); }))) {
            mixin(enumMixinStr_LN_rc2_cfb64);
        }
    }




    static if(!is(typeof(SN_rc2_cfb64))) {
        private enum enumMixinStr_SN_rc2_cfb64 = `enum SN_rc2_cfb64 = "RC2-CFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_rc2_cfb64); }))) {
            mixin(enumMixinStr_SN_rc2_cfb64);
        }
    }




    static if(!is(typeof(NID_rc2_ecb))) {
        private enum enumMixinStr_NID_rc2_ecb = `enum NID_rc2_ecb = 38;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_rc2_ecb); }))) {
            mixin(enumMixinStr_NID_rc2_ecb);
        }
    }




    static if(!is(typeof(LN_rc2_ecb))) {
        private enum enumMixinStr_LN_rc2_ecb = `enum LN_rc2_ecb = "rc2-ecb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_rc2_ecb); }))) {
            mixin(enumMixinStr_LN_rc2_ecb);
        }
    }




    static if(!is(typeof(SN_rc2_ecb))) {
        private enum enumMixinStr_SN_rc2_ecb = `enum SN_rc2_ecb = "RC2-ECB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_rc2_ecb); }))) {
            mixin(enumMixinStr_SN_rc2_ecb);
        }
    }




    static if(!is(typeof(OBJ_rc2_cbc))) {
        private enum enumMixinStr_OBJ_rc2_cbc = `enum OBJ_rc2_cbc = OBJ_rsadsi , 3L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_rc2_cbc); }))) {
            mixin(enumMixinStr_OBJ_rc2_cbc);
        }
    }




    static if(!is(typeof(NID_rc2_cbc))) {
        private enum enumMixinStr_NID_rc2_cbc = `enum NID_rc2_cbc = 37;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_rc2_cbc); }))) {
            mixin(enumMixinStr_NID_rc2_cbc);
        }
    }




    static if(!is(typeof(LN_rc2_cbc))) {
        private enum enumMixinStr_LN_rc2_cbc = `enum LN_rc2_cbc = "rc2-cbc";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_rc2_cbc); }))) {
            mixin(enumMixinStr_LN_rc2_cbc);
        }
    }




    static if(!is(typeof(SN_rc2_cbc))) {
        private enum enumMixinStr_SN_rc2_cbc = `enum SN_rc2_cbc = "RC2-CBC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_rc2_cbc); }))) {
            mixin(enumMixinStr_SN_rc2_cbc);
        }
    }




    static if(!is(typeof(OBJ_hmacWithSHA512_256))) {
        private enum enumMixinStr_OBJ_hmacWithSHA512_256 = `enum OBJ_hmacWithSHA512_256 = OBJ_rsadsi , 2L , 13L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_hmacWithSHA512_256); }))) {
            mixin(enumMixinStr_OBJ_hmacWithSHA512_256);
        }
    }




    static if(!is(typeof(NID_hmacWithSHA512_256))) {
        private enum enumMixinStr_NID_hmacWithSHA512_256 = `enum NID_hmacWithSHA512_256 = 1194;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_hmacWithSHA512_256); }))) {
            mixin(enumMixinStr_NID_hmacWithSHA512_256);
        }
    }




    static if(!is(typeof(LN_hmacWithSHA512_256))) {
        private enum enumMixinStr_LN_hmacWithSHA512_256 = `enum LN_hmacWithSHA512_256 = "hmacWithSHA512-256";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_hmacWithSHA512_256); }))) {
            mixin(enumMixinStr_LN_hmacWithSHA512_256);
        }
    }




    static if(!is(typeof(OBJ_hmacWithSHA512_224))) {
        private enum enumMixinStr_OBJ_hmacWithSHA512_224 = `enum OBJ_hmacWithSHA512_224 = OBJ_rsadsi , 2L , 12L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_hmacWithSHA512_224); }))) {
            mixin(enumMixinStr_OBJ_hmacWithSHA512_224);
        }
    }




    static if(!is(typeof(NID_hmacWithSHA512_224))) {
        private enum enumMixinStr_NID_hmacWithSHA512_224 = `enum NID_hmacWithSHA512_224 = 1193;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_hmacWithSHA512_224); }))) {
            mixin(enumMixinStr_NID_hmacWithSHA512_224);
        }
    }




    static if(!is(typeof(LN_hmacWithSHA512_224))) {
        private enum enumMixinStr_LN_hmacWithSHA512_224 = `enum LN_hmacWithSHA512_224 = "hmacWithSHA512-224";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_hmacWithSHA512_224); }))) {
            mixin(enumMixinStr_LN_hmacWithSHA512_224);
        }
    }




    static if(!is(typeof(OBJ_hmacWithSHA512))) {
        private enum enumMixinStr_OBJ_hmacWithSHA512 = `enum OBJ_hmacWithSHA512 = OBJ_rsadsi , 2L , 11L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_hmacWithSHA512); }))) {
            mixin(enumMixinStr_OBJ_hmacWithSHA512);
        }
    }




    static if(!is(typeof(NID_hmacWithSHA512))) {
        private enum enumMixinStr_NID_hmacWithSHA512 = `enum NID_hmacWithSHA512 = 801;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_hmacWithSHA512); }))) {
            mixin(enumMixinStr_NID_hmacWithSHA512);
        }
    }




    static if(!is(typeof(LN_hmacWithSHA512))) {
        private enum enumMixinStr_LN_hmacWithSHA512 = `enum LN_hmacWithSHA512 = "hmacWithSHA512";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_hmacWithSHA512); }))) {
            mixin(enumMixinStr_LN_hmacWithSHA512);
        }
    }




    static if(!is(typeof(OBJ_hmacWithSHA384))) {
        private enum enumMixinStr_OBJ_hmacWithSHA384 = `enum OBJ_hmacWithSHA384 = OBJ_rsadsi , 2L , 10L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_hmacWithSHA384); }))) {
            mixin(enumMixinStr_OBJ_hmacWithSHA384);
        }
    }




    static if(!is(typeof(NID_hmacWithSHA384))) {
        private enum enumMixinStr_NID_hmacWithSHA384 = `enum NID_hmacWithSHA384 = 800;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_hmacWithSHA384); }))) {
            mixin(enumMixinStr_NID_hmacWithSHA384);
        }
    }




    static if(!is(typeof(LN_hmacWithSHA384))) {
        private enum enumMixinStr_LN_hmacWithSHA384 = `enum LN_hmacWithSHA384 = "hmacWithSHA384";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_hmacWithSHA384); }))) {
            mixin(enumMixinStr_LN_hmacWithSHA384);
        }
    }




    static if(!is(typeof(OBJ_hmacWithSHA256))) {
        private enum enumMixinStr_OBJ_hmacWithSHA256 = `enum OBJ_hmacWithSHA256 = OBJ_rsadsi , 2L , 9L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_hmacWithSHA256); }))) {
            mixin(enumMixinStr_OBJ_hmacWithSHA256);
        }
    }




    static if(!is(typeof(NID_hmacWithSHA256))) {
        private enum enumMixinStr_NID_hmacWithSHA256 = `enum NID_hmacWithSHA256 = 799;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_hmacWithSHA256); }))) {
            mixin(enumMixinStr_NID_hmacWithSHA256);
        }
    }




    static if(!is(typeof(LN_hmacWithSHA256))) {
        private enum enumMixinStr_LN_hmacWithSHA256 = `enum LN_hmacWithSHA256 = "hmacWithSHA256";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_hmacWithSHA256); }))) {
            mixin(enumMixinStr_LN_hmacWithSHA256);
        }
    }




    static if(!is(typeof(OBJ_hmacWithSHA224))) {
        private enum enumMixinStr_OBJ_hmacWithSHA224 = `enum OBJ_hmacWithSHA224 = OBJ_rsadsi , 2L , 8L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_hmacWithSHA224); }))) {
            mixin(enumMixinStr_OBJ_hmacWithSHA224);
        }
    }




    static if(!is(typeof(NID_hmacWithSHA224))) {
        private enum enumMixinStr_NID_hmacWithSHA224 = `enum NID_hmacWithSHA224 = 798;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_hmacWithSHA224); }))) {
            mixin(enumMixinStr_NID_hmacWithSHA224);
        }
    }




    static if(!is(typeof(LN_hmacWithSHA224))) {
        private enum enumMixinStr_LN_hmacWithSHA224 = `enum LN_hmacWithSHA224 = "hmacWithSHA224";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_hmacWithSHA224); }))) {
            mixin(enumMixinStr_LN_hmacWithSHA224);
        }
    }




    static if(!is(typeof(OBJ_sm3WithRSAEncryption))) {
        private enum enumMixinStr_OBJ_sm3WithRSAEncryption = `enum OBJ_sm3WithRSAEncryption = OBJ_sm_scheme , 504L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sm3WithRSAEncryption); }))) {
            mixin(enumMixinStr_OBJ_sm3WithRSAEncryption);
        }
    }




    static if(!is(typeof(NID_sm3WithRSAEncryption))) {
        private enum enumMixinStr_NID_sm3WithRSAEncryption = `enum NID_sm3WithRSAEncryption = 1144;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sm3WithRSAEncryption); }))) {
            mixin(enumMixinStr_NID_sm3WithRSAEncryption);
        }
    }




    static if(!is(typeof(LN_sm3WithRSAEncryption))) {
        private enum enumMixinStr_LN_sm3WithRSAEncryption = `enum LN_sm3WithRSAEncryption = "sm3WithRSAEncryption";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sm3WithRSAEncryption); }))) {
            mixin(enumMixinStr_LN_sm3WithRSAEncryption);
        }
    }




    static if(!is(typeof(SN_sm3WithRSAEncryption))) {
        private enum enumMixinStr_SN_sm3WithRSAEncryption = `enum SN_sm3WithRSAEncryption = "RSA-SM3";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sm3WithRSAEncryption); }))) {
            mixin(enumMixinStr_SN_sm3WithRSAEncryption);
        }
    }




    static if(!is(typeof(OBJ_sm3))) {
        private enum enumMixinStr_OBJ_sm3 = `enum OBJ_sm3 = OBJ_sm_scheme , 401L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sm3); }))) {
            mixin(enumMixinStr_OBJ_sm3);
        }
    }




    static if(!is(typeof(NID_sm3))) {
        private enum enumMixinStr_NID_sm3 = `enum NID_sm3 = 1143;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sm3); }))) {
            mixin(enumMixinStr_NID_sm3);
        }
    }




    static if(!is(typeof(LN_sm3))) {
        private enum enumMixinStr_LN_sm3 = `enum LN_sm3 = "sm3";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sm3); }))) {
            mixin(enumMixinStr_LN_sm3);
        }
    }




    static if(!is(typeof(SN_sm3))) {
        private enum enumMixinStr_SN_sm3 = `enum SN_sm3 = "SM3";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sm3); }))) {
            mixin(enumMixinStr_SN_sm3);
        }
    }




    static if(!is(typeof(OBJ_sm2))) {
        private enum enumMixinStr_OBJ_sm2 = `enum OBJ_sm2 = OBJ_sm_scheme , 301L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sm2); }))) {
            mixin(enumMixinStr_OBJ_sm2);
        }
    }




    static if(!is(typeof(NID_sm2))) {
        private enum enumMixinStr_NID_sm2 = `enum NID_sm2 = 1172;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sm2); }))) {
            mixin(enumMixinStr_NID_sm2);
        }
    }




    static if(!is(typeof(LN_sm2))) {
        private enum enumMixinStr_LN_sm2 = `enum LN_sm2 = "sm2";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sm2); }))) {
            mixin(enumMixinStr_LN_sm2);
        }
    }




    static if(!is(typeof(SN_sm2))) {
        private enum enumMixinStr_SN_sm2 = `enum SN_sm2 = "SM2";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sm2); }))) {
            mixin(enumMixinStr_SN_sm2);
        }
    }




    static if(!is(typeof(OBJ_hmacWithSHA1))) {
        private enum enumMixinStr_OBJ_hmacWithSHA1 = `enum OBJ_hmacWithSHA1 = OBJ_rsadsi , 2L , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_hmacWithSHA1); }))) {
            mixin(enumMixinStr_OBJ_hmacWithSHA1);
        }
    }




    static if(!is(typeof(NID_hmacWithSHA1))) {
        private enum enumMixinStr_NID_hmacWithSHA1 = `enum NID_hmacWithSHA1 = 163;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_hmacWithSHA1); }))) {
            mixin(enumMixinStr_NID_hmacWithSHA1);
        }
    }




    static if(!is(typeof(LN_hmacWithSHA1))) {
        private enum enumMixinStr_LN_hmacWithSHA1 = `enum LN_hmacWithSHA1 = "hmacWithSHA1";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_hmacWithSHA1); }))) {
            mixin(enumMixinStr_LN_hmacWithSHA1);
        }
    }




    static if(!is(typeof(OBJ_hmacWithMD5))) {
        private enum enumMixinStr_OBJ_hmacWithMD5 = `enum OBJ_hmacWithMD5 = OBJ_rsadsi , 2L , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_hmacWithMD5); }))) {
            mixin(enumMixinStr_OBJ_hmacWithMD5);
        }
    }




    static if(!is(typeof(NID_hmacWithMD5))) {
        private enum enumMixinStr_NID_hmacWithMD5 = `enum NID_hmacWithMD5 = 797;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_hmacWithMD5); }))) {
            mixin(enumMixinStr_NID_hmacWithMD5);
        }
    }




    static if(!is(typeof(LN_hmacWithMD5))) {
        private enum enumMixinStr_LN_hmacWithMD5 = `enum LN_hmacWithMD5 = "hmacWithMD5";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_hmacWithMD5); }))) {
            mixin(enumMixinStr_LN_hmacWithMD5);
        }
    }




    static if(!is(typeof(NID_md5_sha1))) {
        private enum enumMixinStr_NID_md5_sha1 = `enum NID_md5_sha1 = 114;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_md5_sha1); }))) {
            mixin(enumMixinStr_NID_md5_sha1);
        }
    }




    static if(!is(typeof(LN_md5_sha1))) {
        private enum enumMixinStr_LN_md5_sha1 = `enum LN_md5_sha1 = "md5-sha1";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_md5_sha1); }))) {
            mixin(enumMixinStr_LN_md5_sha1);
        }
    }




    static if(!is(typeof(SN_md5_sha1))) {
        private enum enumMixinStr_SN_md5_sha1 = `enum SN_md5_sha1 = "MD5-SHA1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_md5_sha1); }))) {
            mixin(enumMixinStr_SN_md5_sha1);
        }
    }




    static if(!is(typeof(OBJ_md5))) {
        private enum enumMixinStr_OBJ_md5 = `enum OBJ_md5 = OBJ_rsadsi , 2L , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_md5); }))) {
            mixin(enumMixinStr_OBJ_md5);
        }
    }




    static if(!is(typeof(NID_md5))) {
        private enum enumMixinStr_NID_md5 = `enum NID_md5 = 4;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_md5); }))) {
            mixin(enumMixinStr_NID_md5);
        }
    }




    static if(!is(typeof(LN_md5))) {
        private enum enumMixinStr_LN_md5 = `enum LN_md5 = "md5";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_md5); }))) {
            mixin(enumMixinStr_LN_md5);
        }
    }




    static if(!is(typeof(SN_md5))) {
        private enum enumMixinStr_SN_md5 = `enum SN_md5 = "MD5";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_md5); }))) {
            mixin(enumMixinStr_SN_md5);
        }
    }




    static if(!is(typeof(OBJ_md4))) {
        private enum enumMixinStr_OBJ_md4 = `enum OBJ_md4 = OBJ_rsadsi , 2L , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_md4); }))) {
            mixin(enumMixinStr_OBJ_md4);
        }
    }




    static if(!is(typeof(NID_md4))) {
        private enum enumMixinStr_NID_md4 = `enum NID_md4 = 257;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_md4); }))) {
            mixin(enumMixinStr_NID_md4);
        }
    }




    static if(!is(typeof(LN_md4))) {
        private enum enumMixinStr_LN_md4 = `enum LN_md4 = "md4";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_md4); }))) {
            mixin(enumMixinStr_LN_md4);
        }
    }




    static if(!is(typeof(SN_md4))) {
        private enum enumMixinStr_SN_md4 = `enum SN_md4 = "MD4";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_md4); }))) {
            mixin(enumMixinStr_SN_md4);
        }
    }




    static if(!is(typeof(OBJ_md2))) {
        private enum enumMixinStr_OBJ_md2 = `enum OBJ_md2 = OBJ_rsadsi , 2L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_md2); }))) {
            mixin(enumMixinStr_OBJ_md2);
        }
    }




    static if(!is(typeof(NID_md2))) {
        private enum enumMixinStr_NID_md2 = `enum NID_md2 = 3;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_md2); }))) {
            mixin(enumMixinStr_NID_md2);
        }
    }




    static if(!is(typeof(LN_md2))) {
        private enum enumMixinStr_LN_md2 = `enum LN_md2 = "md2";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_md2); }))) {
            mixin(enumMixinStr_LN_md2);
        }
    }




    static if(!is(typeof(SN_md2))) {
        private enum enumMixinStr_SN_md2 = `enum SN_md2 = "MD2";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_md2); }))) {
            mixin(enumMixinStr_SN_md2);
        }
    }




    static if(!is(typeof(OBJ_safeContentsBag))) {
        private enum enumMixinStr_OBJ_safeContentsBag = `enum OBJ_safeContentsBag = OBJ_pkcs12_BagIds , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_safeContentsBag); }))) {
            mixin(enumMixinStr_OBJ_safeContentsBag);
        }
    }




    static if(!is(typeof(NID_safeContentsBag))) {
        private enum enumMixinStr_NID_safeContentsBag = `enum NID_safeContentsBag = 155;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_safeContentsBag); }))) {
            mixin(enumMixinStr_NID_safeContentsBag);
        }
    }




    static if(!is(typeof(LN_safeContentsBag))) {
        private enum enumMixinStr_LN_safeContentsBag = `enum LN_safeContentsBag = "safeContentsBag";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_safeContentsBag); }))) {
            mixin(enumMixinStr_LN_safeContentsBag);
        }
    }




    static if(!is(typeof(OBJ_secretBag))) {
        private enum enumMixinStr_OBJ_secretBag = `enum OBJ_secretBag = OBJ_pkcs12_BagIds , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_secretBag); }))) {
            mixin(enumMixinStr_OBJ_secretBag);
        }
    }




    static if(!is(typeof(NID_secretBag))) {
        private enum enumMixinStr_NID_secretBag = `enum NID_secretBag = 154;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_secretBag); }))) {
            mixin(enumMixinStr_NID_secretBag);
        }
    }




    static if(!is(typeof(LN_secretBag))) {
        private enum enumMixinStr_LN_secretBag = `enum LN_secretBag = "secretBag";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_secretBag); }))) {
            mixin(enumMixinStr_LN_secretBag);
        }
    }




    static if(!is(typeof(OBJ_crlBag))) {
        private enum enumMixinStr_OBJ_crlBag = `enum OBJ_crlBag = OBJ_pkcs12_BagIds , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_crlBag); }))) {
            mixin(enumMixinStr_OBJ_crlBag);
        }
    }




    static if(!is(typeof(NID_crlBag))) {
        private enum enumMixinStr_NID_crlBag = `enum NID_crlBag = 153;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_crlBag); }))) {
            mixin(enumMixinStr_NID_crlBag);
        }
    }




    static if(!is(typeof(LN_crlBag))) {
        private enum enumMixinStr_LN_crlBag = `enum LN_crlBag = "crlBag";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_crlBag); }))) {
            mixin(enumMixinStr_LN_crlBag);
        }
    }




    static if(!is(typeof(OBJ_certBag))) {
        private enum enumMixinStr_OBJ_certBag = `enum OBJ_certBag = OBJ_pkcs12_BagIds , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_certBag); }))) {
            mixin(enumMixinStr_OBJ_certBag);
        }
    }




    static if(!is(typeof(NID_certBag))) {
        private enum enumMixinStr_NID_certBag = `enum NID_certBag = 152;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_certBag); }))) {
            mixin(enumMixinStr_NID_certBag);
        }
    }




    static if(!is(typeof(LN_certBag))) {
        private enum enumMixinStr_LN_certBag = `enum LN_certBag = "certBag";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_certBag); }))) {
            mixin(enumMixinStr_LN_certBag);
        }
    }




    static if(!is(typeof(OBJ_pkcs8ShroudedKeyBag))) {
        private enum enumMixinStr_OBJ_pkcs8ShroudedKeyBag = `enum OBJ_pkcs8ShroudedKeyBag = OBJ_pkcs12_BagIds , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pkcs8ShroudedKeyBag); }))) {
            mixin(enumMixinStr_OBJ_pkcs8ShroudedKeyBag);
        }
    }




    static if(!is(typeof(NID_pkcs8ShroudedKeyBag))) {
        private enum enumMixinStr_NID_pkcs8ShroudedKeyBag = `enum NID_pkcs8ShroudedKeyBag = 151;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pkcs8ShroudedKeyBag); }))) {
            mixin(enumMixinStr_NID_pkcs8ShroudedKeyBag);
        }
    }




    static if(!is(typeof(LN_pkcs8ShroudedKeyBag))) {
        private enum enumMixinStr_LN_pkcs8ShroudedKeyBag = `enum LN_pkcs8ShroudedKeyBag = "pkcs8ShroudedKeyBag";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pkcs8ShroudedKeyBag); }))) {
            mixin(enumMixinStr_LN_pkcs8ShroudedKeyBag);
        }
    }




    static if(!is(typeof(OBJ_keyBag))) {
        private enum enumMixinStr_OBJ_keyBag = `enum OBJ_keyBag = OBJ_pkcs12_BagIds , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_keyBag); }))) {
            mixin(enumMixinStr_OBJ_keyBag);
        }
    }




    static if(!is(typeof(NID_keyBag))) {
        private enum enumMixinStr_NID_keyBag = `enum NID_keyBag = 150;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_keyBag); }))) {
            mixin(enumMixinStr_NID_keyBag);
        }
    }




    static if(!is(typeof(LN_keyBag))) {
        private enum enumMixinStr_LN_keyBag = `enum LN_keyBag = "keyBag";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_keyBag); }))) {
            mixin(enumMixinStr_LN_keyBag);
        }
    }




    static if(!is(typeof(OBJ_pkcs12_BagIds))) {
        private enum enumMixinStr_OBJ_pkcs12_BagIds = `enum OBJ_pkcs12_BagIds = OBJ_pkcs12_Version1 , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pkcs12_BagIds); }))) {
            mixin(enumMixinStr_OBJ_pkcs12_BagIds);
        }
    }




    static if(!is(typeof(OBJ_pkcs12_Version1))) {
        private enum enumMixinStr_OBJ_pkcs12_Version1 = `enum OBJ_pkcs12_Version1 = OBJ_pkcs12 , 10L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pkcs12_Version1); }))) {
            mixin(enumMixinStr_OBJ_pkcs12_Version1);
        }
    }




    static if(!is(typeof(OBJ_pbe_WithSHA1And40BitRC2_CBC))) {
        private enum enumMixinStr_OBJ_pbe_WithSHA1And40BitRC2_CBC = `enum OBJ_pbe_WithSHA1And40BitRC2_CBC = OBJ_pkcs12_pbeids , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pbe_WithSHA1And40BitRC2_CBC); }))) {
            mixin(enumMixinStr_OBJ_pbe_WithSHA1And40BitRC2_CBC);
        }
    }




    static if(!is(typeof(NID_pbe_WithSHA1And40BitRC2_CBC))) {
        private enum enumMixinStr_NID_pbe_WithSHA1And40BitRC2_CBC = `enum NID_pbe_WithSHA1And40BitRC2_CBC = 149;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pbe_WithSHA1And40BitRC2_CBC); }))) {
            mixin(enumMixinStr_NID_pbe_WithSHA1And40BitRC2_CBC);
        }
    }




    static if(!is(typeof(LN_pbe_WithSHA1And40BitRC2_CBC))) {
        private enum enumMixinStr_LN_pbe_WithSHA1And40BitRC2_CBC = `enum LN_pbe_WithSHA1And40BitRC2_CBC = "pbeWithSHA1And40BitRC2-CBC";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pbe_WithSHA1And40BitRC2_CBC); }))) {
            mixin(enumMixinStr_LN_pbe_WithSHA1And40BitRC2_CBC);
        }
    }




    static if(!is(typeof(SN_pbe_WithSHA1And40BitRC2_CBC))) {
        private enum enumMixinStr_SN_pbe_WithSHA1And40BitRC2_CBC = `enum SN_pbe_WithSHA1And40BitRC2_CBC = "PBE-SHA1-RC2-40";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_pbe_WithSHA1And40BitRC2_CBC); }))) {
            mixin(enumMixinStr_SN_pbe_WithSHA1And40BitRC2_CBC);
        }
    }




    static if(!is(typeof(OBJ_pbe_WithSHA1And128BitRC2_CBC))) {
        private enum enumMixinStr_OBJ_pbe_WithSHA1And128BitRC2_CBC = `enum OBJ_pbe_WithSHA1And128BitRC2_CBC = OBJ_pkcs12_pbeids , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pbe_WithSHA1And128BitRC2_CBC); }))) {
            mixin(enumMixinStr_OBJ_pbe_WithSHA1And128BitRC2_CBC);
        }
    }




    static if(!is(typeof(NID_pbe_WithSHA1And128BitRC2_CBC))) {
        private enum enumMixinStr_NID_pbe_WithSHA1And128BitRC2_CBC = `enum NID_pbe_WithSHA1And128BitRC2_CBC = 148;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pbe_WithSHA1And128BitRC2_CBC); }))) {
            mixin(enumMixinStr_NID_pbe_WithSHA1And128BitRC2_CBC);
        }
    }




    static if(!is(typeof(LN_pbe_WithSHA1And128BitRC2_CBC))) {
        private enum enumMixinStr_LN_pbe_WithSHA1And128BitRC2_CBC = `enum LN_pbe_WithSHA1And128BitRC2_CBC = "pbeWithSHA1And128BitRC2-CBC";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pbe_WithSHA1And128BitRC2_CBC); }))) {
            mixin(enumMixinStr_LN_pbe_WithSHA1And128BitRC2_CBC);
        }
    }




    static if(!is(typeof(SN_pbe_WithSHA1And128BitRC2_CBC))) {
        private enum enumMixinStr_SN_pbe_WithSHA1And128BitRC2_CBC = `enum SN_pbe_WithSHA1And128BitRC2_CBC = "PBE-SHA1-RC2-128";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_pbe_WithSHA1And128BitRC2_CBC); }))) {
            mixin(enumMixinStr_SN_pbe_WithSHA1And128BitRC2_CBC);
        }
    }




    static if(!is(typeof(OBJ_pbe_WithSHA1And2_Key_TripleDES_CBC))) {
        private enum enumMixinStr_OBJ_pbe_WithSHA1And2_Key_TripleDES_CBC = `enum OBJ_pbe_WithSHA1And2_Key_TripleDES_CBC = OBJ_pkcs12_pbeids , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pbe_WithSHA1And2_Key_TripleDES_CBC); }))) {
            mixin(enumMixinStr_OBJ_pbe_WithSHA1And2_Key_TripleDES_CBC);
        }
    }




    static if(!is(typeof(NID_pbe_WithSHA1And2_Key_TripleDES_CBC))) {
        private enum enumMixinStr_NID_pbe_WithSHA1And2_Key_TripleDES_CBC = `enum NID_pbe_WithSHA1And2_Key_TripleDES_CBC = 147;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pbe_WithSHA1And2_Key_TripleDES_CBC); }))) {
            mixin(enumMixinStr_NID_pbe_WithSHA1And2_Key_TripleDES_CBC);
        }
    }




    static if(!is(typeof(LN_pbe_WithSHA1And2_Key_TripleDES_CBC))) {
        private enum enumMixinStr_LN_pbe_WithSHA1And2_Key_TripleDES_CBC = `enum LN_pbe_WithSHA1And2_Key_TripleDES_CBC = "pbeWithSHA1And2-KeyTripleDES-CBC";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pbe_WithSHA1And2_Key_TripleDES_CBC); }))) {
            mixin(enumMixinStr_LN_pbe_WithSHA1And2_Key_TripleDES_CBC);
        }
    }




    static if(!is(typeof(SN_pbe_WithSHA1And2_Key_TripleDES_CBC))) {
        private enum enumMixinStr_SN_pbe_WithSHA1And2_Key_TripleDES_CBC = `enum SN_pbe_WithSHA1And2_Key_TripleDES_CBC = "PBE-SHA1-2DES";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_pbe_WithSHA1And2_Key_TripleDES_CBC); }))) {
            mixin(enumMixinStr_SN_pbe_WithSHA1And2_Key_TripleDES_CBC);
        }
    }




    static if(!is(typeof(OBJ_pbe_WithSHA1And3_Key_TripleDES_CBC))) {
        private enum enumMixinStr_OBJ_pbe_WithSHA1And3_Key_TripleDES_CBC = `enum OBJ_pbe_WithSHA1And3_Key_TripleDES_CBC = OBJ_pkcs12_pbeids , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pbe_WithSHA1And3_Key_TripleDES_CBC); }))) {
            mixin(enumMixinStr_OBJ_pbe_WithSHA1And3_Key_TripleDES_CBC);
        }
    }




    static if(!is(typeof(NID_pbe_WithSHA1And3_Key_TripleDES_CBC))) {
        private enum enumMixinStr_NID_pbe_WithSHA1And3_Key_TripleDES_CBC = `enum NID_pbe_WithSHA1And3_Key_TripleDES_CBC = 146;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pbe_WithSHA1And3_Key_TripleDES_CBC); }))) {
            mixin(enumMixinStr_NID_pbe_WithSHA1And3_Key_TripleDES_CBC);
        }
    }




    static if(!is(typeof(LN_pbe_WithSHA1And3_Key_TripleDES_CBC))) {
        private enum enumMixinStr_LN_pbe_WithSHA1And3_Key_TripleDES_CBC = `enum LN_pbe_WithSHA1And3_Key_TripleDES_CBC = "pbeWithSHA1And3-KeyTripleDES-CBC";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pbe_WithSHA1And3_Key_TripleDES_CBC); }))) {
            mixin(enumMixinStr_LN_pbe_WithSHA1And3_Key_TripleDES_CBC);
        }
    }




    static if(!is(typeof(SN_pbe_WithSHA1And3_Key_TripleDES_CBC))) {
        private enum enumMixinStr_SN_pbe_WithSHA1And3_Key_TripleDES_CBC = `enum SN_pbe_WithSHA1And3_Key_TripleDES_CBC = "PBE-SHA1-3DES";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_pbe_WithSHA1And3_Key_TripleDES_CBC); }))) {
            mixin(enumMixinStr_SN_pbe_WithSHA1And3_Key_TripleDES_CBC);
        }
    }




    static if(!is(typeof(OBJ_pbe_WithSHA1And40BitRC4))) {
        private enum enumMixinStr_OBJ_pbe_WithSHA1And40BitRC4 = `enum OBJ_pbe_WithSHA1And40BitRC4 = OBJ_pkcs12_pbeids , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pbe_WithSHA1And40BitRC4); }))) {
            mixin(enumMixinStr_OBJ_pbe_WithSHA1And40BitRC4);
        }
    }




    static if(!is(typeof(NID_pbe_WithSHA1And40BitRC4))) {
        private enum enumMixinStr_NID_pbe_WithSHA1And40BitRC4 = `enum NID_pbe_WithSHA1And40BitRC4 = 145;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pbe_WithSHA1And40BitRC4); }))) {
            mixin(enumMixinStr_NID_pbe_WithSHA1And40BitRC4);
        }
    }




    static if(!is(typeof(LN_pbe_WithSHA1And40BitRC4))) {
        private enum enumMixinStr_LN_pbe_WithSHA1And40BitRC4 = `enum LN_pbe_WithSHA1And40BitRC4 = "pbeWithSHA1And40BitRC4";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pbe_WithSHA1And40BitRC4); }))) {
            mixin(enumMixinStr_LN_pbe_WithSHA1And40BitRC4);
        }
    }




    static if(!is(typeof(SN_pbe_WithSHA1And40BitRC4))) {
        private enum enumMixinStr_SN_pbe_WithSHA1And40BitRC4 = `enum SN_pbe_WithSHA1And40BitRC4 = "PBE-SHA1-RC4-40";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_pbe_WithSHA1And40BitRC4); }))) {
            mixin(enumMixinStr_SN_pbe_WithSHA1And40BitRC4);
        }
    }




    static if(!is(typeof(OBJ_pbe_WithSHA1And128BitRC4))) {
        private enum enumMixinStr_OBJ_pbe_WithSHA1And128BitRC4 = `enum OBJ_pbe_WithSHA1And128BitRC4 = OBJ_pkcs12_pbeids , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pbe_WithSHA1And128BitRC4); }))) {
            mixin(enumMixinStr_OBJ_pbe_WithSHA1And128BitRC4);
        }
    }




    static if(!is(typeof(NID_pbe_WithSHA1And128BitRC4))) {
        private enum enumMixinStr_NID_pbe_WithSHA1And128BitRC4 = `enum NID_pbe_WithSHA1And128BitRC4 = 144;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pbe_WithSHA1And128BitRC4); }))) {
            mixin(enumMixinStr_NID_pbe_WithSHA1And128BitRC4);
        }
    }




    static if(!is(typeof(LN_pbe_WithSHA1And128BitRC4))) {
        private enum enumMixinStr_LN_pbe_WithSHA1And128BitRC4 = `enum LN_pbe_WithSHA1And128BitRC4 = "pbeWithSHA1And128BitRC4";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pbe_WithSHA1And128BitRC4); }))) {
            mixin(enumMixinStr_LN_pbe_WithSHA1And128BitRC4);
        }
    }




    static if(!is(typeof(SN_pbe_WithSHA1And128BitRC4))) {
        private enum enumMixinStr_SN_pbe_WithSHA1And128BitRC4 = `enum SN_pbe_WithSHA1And128BitRC4 = "PBE-SHA1-RC4-128";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_pbe_WithSHA1And128BitRC4); }))) {
            mixin(enumMixinStr_SN_pbe_WithSHA1And128BitRC4);
        }
    }




    static if(!is(typeof(OBJ_pkcs12_pbeids))) {
        private enum enumMixinStr_OBJ_pkcs12_pbeids = `enum OBJ_pkcs12_pbeids = OBJ_pkcs12 , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pkcs12_pbeids); }))) {
            mixin(enumMixinStr_OBJ_pkcs12_pbeids);
        }
    }




    static if(!is(typeof(OBJ_pkcs12))) {
        private enum enumMixinStr_OBJ_pkcs12 = `enum OBJ_pkcs12 = OBJ_pkcs , 12L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pkcs12); }))) {
            mixin(enumMixinStr_OBJ_pkcs12);
        }
    }




    static if(!is(typeof(OBJ_x509Crl))) {
        private enum enumMixinStr_OBJ_x509Crl = `enum OBJ_x509Crl = OBJ_crlTypes , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_x509Crl); }))) {
            mixin(enumMixinStr_OBJ_x509Crl);
        }
    }




    static if(!is(typeof(NID_x509Crl))) {
        private enum enumMixinStr_NID_x509Crl = `enum NID_x509Crl = 160;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_x509Crl); }))) {
            mixin(enumMixinStr_NID_x509Crl);
        }
    }




    static if(!is(typeof(LN_x509Crl))) {
        private enum enumMixinStr_LN_x509Crl = `enum LN_x509Crl = "x509Crl";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_x509Crl); }))) {
            mixin(enumMixinStr_LN_x509Crl);
        }
    }




    static if(!is(typeof(OBJ_crlTypes))) {
        private enum enumMixinStr_OBJ_crlTypes = `enum OBJ_crlTypes = OBJ_pkcs9 , 23L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_crlTypes); }))) {
            mixin(enumMixinStr_OBJ_crlTypes);
        }
    }




    static if(!is(typeof(OBJ_sdsiCertificate))) {
        private enum enumMixinStr_OBJ_sdsiCertificate = `enum OBJ_sdsiCertificate = OBJ_certTypes , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sdsiCertificate); }))) {
            mixin(enumMixinStr_OBJ_sdsiCertificate);
        }
    }




    static if(!is(typeof(NID_sdsiCertificate))) {
        private enum enumMixinStr_NID_sdsiCertificate = `enum NID_sdsiCertificate = 159;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sdsiCertificate); }))) {
            mixin(enumMixinStr_NID_sdsiCertificate);
        }
    }




    static if(!is(typeof(LN_sdsiCertificate))) {
        private enum enumMixinStr_LN_sdsiCertificate = `enum LN_sdsiCertificate = "sdsiCertificate";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sdsiCertificate); }))) {
            mixin(enumMixinStr_LN_sdsiCertificate);
        }
    }




    static if(!is(typeof(OBJ_x509Certificate))) {
        private enum enumMixinStr_OBJ_x509Certificate = `enum OBJ_x509Certificate = OBJ_certTypes , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_x509Certificate); }))) {
            mixin(enumMixinStr_OBJ_x509Certificate);
        }
    }




    static if(!is(typeof(NID_x509Certificate))) {
        private enum enumMixinStr_NID_x509Certificate = `enum NID_x509Certificate = 158;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_x509Certificate); }))) {
            mixin(enumMixinStr_NID_x509Certificate);
        }
    }




    static if(!is(typeof(LN_x509Certificate))) {
        private enum enumMixinStr_LN_x509Certificate = `enum LN_x509Certificate = "x509Certificate";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_x509Certificate); }))) {
            mixin(enumMixinStr_LN_x509Certificate);
        }
    }




    static if(!is(typeof(OBJ_certTypes))) {
        private enum enumMixinStr_OBJ_certTypes = `enum OBJ_certTypes = OBJ_pkcs9 , 22L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_certTypes); }))) {
            mixin(enumMixinStr_OBJ_certTypes);
        }
    }




    static if(!is(typeof(OBJ_LocalKeySet))) {
        private enum enumMixinStr_OBJ_LocalKeySet = `enum OBJ_LocalKeySet = 1L , 3L , 6L , 1L , 4L , 1L , 311L , 17L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_LocalKeySet); }))) {
            mixin(enumMixinStr_OBJ_LocalKeySet);
        }
    }




    static if(!is(typeof(NID_LocalKeySet))) {
        private enum enumMixinStr_NID_LocalKeySet = `enum NID_LocalKeySet = 856;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_LocalKeySet); }))) {
            mixin(enumMixinStr_NID_LocalKeySet);
        }
    }




    static if(!is(typeof(LN_LocalKeySet))) {
        private enum enumMixinStr_LN_LocalKeySet = `enum LN_LocalKeySet = "Microsoft Local Key set";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_LocalKeySet); }))) {
            mixin(enumMixinStr_LN_LocalKeySet);
        }
    }




    static if(!is(typeof(SN_LocalKeySet))) {
        private enum enumMixinStr_SN_LocalKeySet = `enum SN_LocalKeySet = "LocalKeySet";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_LocalKeySet); }))) {
            mixin(enumMixinStr_SN_LocalKeySet);
        }
    }




    static if(!is(typeof(OBJ_ms_csp_name))) {
        private enum enumMixinStr_OBJ_ms_csp_name = `enum OBJ_ms_csp_name = 1L , 3L , 6L , 1L , 4L , 1L , 311L , 17L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ms_csp_name); }))) {
            mixin(enumMixinStr_OBJ_ms_csp_name);
        }
    }




    static if(!is(typeof(NID_ms_csp_name))) {
        private enum enumMixinStr_NID_ms_csp_name = `enum NID_ms_csp_name = 417;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ms_csp_name); }))) {
            mixin(enumMixinStr_NID_ms_csp_name);
        }
    }




    static if(!is(typeof(LN_ms_csp_name))) {
        private enum enumMixinStr_LN_ms_csp_name = `enum LN_ms_csp_name = "Microsoft CSP Name";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ms_csp_name); }))) {
            mixin(enumMixinStr_LN_ms_csp_name);
        }
    }




    static if(!is(typeof(SN_ms_csp_name))) {
        private enum enumMixinStr_SN_ms_csp_name = `enum SN_ms_csp_name = "CSPName";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ms_csp_name); }))) {
            mixin(enumMixinStr_SN_ms_csp_name);
        }
    }




    static if(!is(typeof(OBJ_localKeyID))) {
        private enum enumMixinStr_OBJ_localKeyID = `enum OBJ_localKeyID = OBJ_pkcs9 , 21L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_localKeyID); }))) {
            mixin(enumMixinStr_OBJ_localKeyID);
        }
    }






    static if(!is(typeof(NID_localKeyID))) {
        private enum enumMixinStr_NID_localKeyID = `enum NID_localKeyID = 157;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_localKeyID); }))) {
            mixin(enumMixinStr_NID_localKeyID);
        }
    }




    static if(!is(typeof(LN_localKeyID))) {
        private enum enumMixinStr_LN_localKeyID = `enum LN_localKeyID = "localKeyID";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_localKeyID); }))) {
            mixin(enumMixinStr_LN_localKeyID);
        }
    }




    static if(!is(typeof(PKCS7_F_DO_PKCS7_SIGNED_ATTRIB))) {
        private enum enumMixinStr_PKCS7_F_DO_PKCS7_SIGNED_ATTRIB = `enum PKCS7_F_DO_PKCS7_SIGNED_ATTRIB = 136;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_F_DO_PKCS7_SIGNED_ATTRIB); }))) {
            mixin(enumMixinStr_PKCS7_F_DO_PKCS7_SIGNED_ATTRIB);
        }
    }




    static if(!is(typeof(PKCS7_F_PKCS7_ADD0_ATTRIB_SIGNING_TIME))) {
        private enum enumMixinStr_PKCS7_F_PKCS7_ADD0_ATTRIB_SIGNING_TIME = `enum PKCS7_F_PKCS7_ADD0_ATTRIB_SIGNING_TIME = 135;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_F_PKCS7_ADD0_ATTRIB_SIGNING_TIME); }))) {
            mixin(enumMixinStr_PKCS7_F_PKCS7_ADD0_ATTRIB_SIGNING_TIME);
        }
    }




    static if(!is(typeof(PKCS7_F_PKCS7_ADD_ATTRIB_SMIMECAP))) {
        private enum enumMixinStr_PKCS7_F_PKCS7_ADD_ATTRIB_SMIMECAP = `enum PKCS7_F_PKCS7_ADD_ATTRIB_SMIMECAP = 118;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_F_PKCS7_ADD_ATTRIB_SMIMECAP); }))) {
            mixin(enumMixinStr_PKCS7_F_PKCS7_ADD_ATTRIB_SMIMECAP);
        }
    }




    static if(!is(typeof(PKCS7_F_PKCS7_ADD_CERTIFICATE))) {
        private enum enumMixinStr_PKCS7_F_PKCS7_ADD_CERTIFICATE = `enum PKCS7_F_PKCS7_ADD_CERTIFICATE = 100;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_F_PKCS7_ADD_CERTIFICATE); }))) {
            mixin(enumMixinStr_PKCS7_F_PKCS7_ADD_CERTIFICATE);
        }
    }




    static if(!is(typeof(PKCS7_F_PKCS7_ADD_CRL))) {
        private enum enumMixinStr_PKCS7_F_PKCS7_ADD_CRL = `enum PKCS7_F_PKCS7_ADD_CRL = 101;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_F_PKCS7_ADD_CRL); }))) {
            mixin(enumMixinStr_PKCS7_F_PKCS7_ADD_CRL);
        }
    }




    static if(!is(typeof(PKCS7_F_PKCS7_ADD_RECIPIENT_INFO))) {
        private enum enumMixinStr_PKCS7_F_PKCS7_ADD_RECIPIENT_INFO = `enum PKCS7_F_PKCS7_ADD_RECIPIENT_INFO = 102;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_F_PKCS7_ADD_RECIPIENT_INFO); }))) {
            mixin(enumMixinStr_PKCS7_F_PKCS7_ADD_RECIPIENT_INFO);
        }
    }




    static if(!is(typeof(PKCS7_F_PKCS7_ADD_SIGNATURE))) {
        private enum enumMixinStr_PKCS7_F_PKCS7_ADD_SIGNATURE = `enum PKCS7_F_PKCS7_ADD_SIGNATURE = 131;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_F_PKCS7_ADD_SIGNATURE); }))) {
            mixin(enumMixinStr_PKCS7_F_PKCS7_ADD_SIGNATURE);
        }
    }




    static if(!is(typeof(PKCS7_F_PKCS7_ADD_SIGNER))) {
        private enum enumMixinStr_PKCS7_F_PKCS7_ADD_SIGNER = `enum PKCS7_F_PKCS7_ADD_SIGNER = 103;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_F_PKCS7_ADD_SIGNER); }))) {
            mixin(enumMixinStr_PKCS7_F_PKCS7_ADD_SIGNER);
        }
    }




    static if(!is(typeof(PKCS7_F_PKCS7_BIO_ADD_DIGEST))) {
        private enum enumMixinStr_PKCS7_F_PKCS7_BIO_ADD_DIGEST = `enum PKCS7_F_PKCS7_BIO_ADD_DIGEST = 125;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_F_PKCS7_BIO_ADD_DIGEST); }))) {
            mixin(enumMixinStr_PKCS7_F_PKCS7_BIO_ADD_DIGEST);
        }
    }




    static if(!is(typeof(PKCS7_F_PKCS7_COPY_EXISTING_DIGEST))) {
        private enum enumMixinStr_PKCS7_F_PKCS7_COPY_EXISTING_DIGEST = `enum PKCS7_F_PKCS7_COPY_EXISTING_DIGEST = 138;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_F_PKCS7_COPY_EXISTING_DIGEST); }))) {
            mixin(enumMixinStr_PKCS7_F_PKCS7_COPY_EXISTING_DIGEST);
        }
    }




    static if(!is(typeof(PKCS7_F_PKCS7_CTRL))) {
        private enum enumMixinStr_PKCS7_F_PKCS7_CTRL = `enum PKCS7_F_PKCS7_CTRL = 104;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_F_PKCS7_CTRL); }))) {
            mixin(enumMixinStr_PKCS7_F_PKCS7_CTRL);
        }
    }




    static if(!is(typeof(PKCS7_F_PKCS7_DATADECODE))) {
        private enum enumMixinStr_PKCS7_F_PKCS7_DATADECODE = `enum PKCS7_F_PKCS7_DATADECODE = 112;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_F_PKCS7_DATADECODE); }))) {
            mixin(enumMixinStr_PKCS7_F_PKCS7_DATADECODE);
        }
    }




    static if(!is(typeof(PKCS7_F_PKCS7_DATAFINAL))) {
        private enum enumMixinStr_PKCS7_F_PKCS7_DATAFINAL = `enum PKCS7_F_PKCS7_DATAFINAL = 128;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_F_PKCS7_DATAFINAL); }))) {
            mixin(enumMixinStr_PKCS7_F_PKCS7_DATAFINAL);
        }
    }




    static if(!is(typeof(PKCS7_F_PKCS7_DATAINIT))) {
        private enum enumMixinStr_PKCS7_F_PKCS7_DATAINIT = `enum PKCS7_F_PKCS7_DATAINIT = 105;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_F_PKCS7_DATAINIT); }))) {
            mixin(enumMixinStr_PKCS7_F_PKCS7_DATAINIT);
        }
    }




    static if(!is(typeof(PKCS7_F_PKCS7_DATAVERIFY))) {
        private enum enumMixinStr_PKCS7_F_PKCS7_DATAVERIFY = `enum PKCS7_F_PKCS7_DATAVERIFY = 107;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_F_PKCS7_DATAVERIFY); }))) {
            mixin(enumMixinStr_PKCS7_F_PKCS7_DATAVERIFY);
        }
    }




    static if(!is(typeof(PKCS7_F_PKCS7_DECRYPT))) {
        private enum enumMixinStr_PKCS7_F_PKCS7_DECRYPT = `enum PKCS7_F_PKCS7_DECRYPT = 114;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_F_PKCS7_DECRYPT); }))) {
            mixin(enumMixinStr_PKCS7_F_PKCS7_DECRYPT);
        }
    }




    static if(!is(typeof(PKCS7_F_PKCS7_DECRYPT_RINFO))) {
        private enum enumMixinStr_PKCS7_F_PKCS7_DECRYPT_RINFO = `enum PKCS7_F_PKCS7_DECRYPT_RINFO = 133;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_F_PKCS7_DECRYPT_RINFO); }))) {
            mixin(enumMixinStr_PKCS7_F_PKCS7_DECRYPT_RINFO);
        }
    }




    static if(!is(typeof(PKCS7_F_PKCS7_ENCODE_RINFO))) {
        private enum enumMixinStr_PKCS7_F_PKCS7_ENCODE_RINFO = `enum PKCS7_F_PKCS7_ENCODE_RINFO = 132;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_F_PKCS7_ENCODE_RINFO); }))) {
            mixin(enumMixinStr_PKCS7_F_PKCS7_ENCODE_RINFO);
        }
    }




    static if(!is(typeof(PKCS7_F_PKCS7_ENCRYPT))) {
        private enum enumMixinStr_PKCS7_F_PKCS7_ENCRYPT = `enum PKCS7_F_PKCS7_ENCRYPT = 115;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_F_PKCS7_ENCRYPT); }))) {
            mixin(enumMixinStr_PKCS7_F_PKCS7_ENCRYPT);
        }
    }




    static if(!is(typeof(PKCS7_F_PKCS7_FINAL))) {
        private enum enumMixinStr_PKCS7_F_PKCS7_FINAL = `enum PKCS7_F_PKCS7_FINAL = 134;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_F_PKCS7_FINAL); }))) {
            mixin(enumMixinStr_PKCS7_F_PKCS7_FINAL);
        }
    }




    static if(!is(typeof(PKCS7_F_PKCS7_FIND_DIGEST))) {
        private enum enumMixinStr_PKCS7_F_PKCS7_FIND_DIGEST = `enum PKCS7_F_PKCS7_FIND_DIGEST = 127;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_F_PKCS7_FIND_DIGEST); }))) {
            mixin(enumMixinStr_PKCS7_F_PKCS7_FIND_DIGEST);
        }
    }




    static if(!is(typeof(PKCS7_F_PKCS7_GET0_SIGNERS))) {
        private enum enumMixinStr_PKCS7_F_PKCS7_GET0_SIGNERS = `enum PKCS7_F_PKCS7_GET0_SIGNERS = 124;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_F_PKCS7_GET0_SIGNERS); }))) {
            mixin(enumMixinStr_PKCS7_F_PKCS7_GET0_SIGNERS);
        }
    }




    static if(!is(typeof(PKCS7_F_PKCS7_RECIP_INFO_SET))) {
        private enum enumMixinStr_PKCS7_F_PKCS7_RECIP_INFO_SET = `enum PKCS7_F_PKCS7_RECIP_INFO_SET = 130;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_F_PKCS7_RECIP_INFO_SET); }))) {
            mixin(enumMixinStr_PKCS7_F_PKCS7_RECIP_INFO_SET);
        }
    }




    static if(!is(typeof(PKCS7_F_PKCS7_SET_CIPHER))) {
        private enum enumMixinStr_PKCS7_F_PKCS7_SET_CIPHER = `enum PKCS7_F_PKCS7_SET_CIPHER = 108;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_F_PKCS7_SET_CIPHER); }))) {
            mixin(enumMixinStr_PKCS7_F_PKCS7_SET_CIPHER);
        }
    }




    static if(!is(typeof(PKCS7_F_PKCS7_SET_CONTENT))) {
        private enum enumMixinStr_PKCS7_F_PKCS7_SET_CONTENT = `enum PKCS7_F_PKCS7_SET_CONTENT = 109;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_F_PKCS7_SET_CONTENT); }))) {
            mixin(enumMixinStr_PKCS7_F_PKCS7_SET_CONTENT);
        }
    }




    static if(!is(typeof(PKCS7_F_PKCS7_SET_DIGEST))) {
        private enum enumMixinStr_PKCS7_F_PKCS7_SET_DIGEST = `enum PKCS7_F_PKCS7_SET_DIGEST = 126;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_F_PKCS7_SET_DIGEST); }))) {
            mixin(enumMixinStr_PKCS7_F_PKCS7_SET_DIGEST);
        }
    }




    static if(!is(typeof(PKCS7_F_PKCS7_SET_TYPE))) {
        private enum enumMixinStr_PKCS7_F_PKCS7_SET_TYPE = `enum PKCS7_F_PKCS7_SET_TYPE = 110;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_F_PKCS7_SET_TYPE); }))) {
            mixin(enumMixinStr_PKCS7_F_PKCS7_SET_TYPE);
        }
    }




    static if(!is(typeof(PKCS7_F_PKCS7_SIGN))) {
        private enum enumMixinStr_PKCS7_F_PKCS7_SIGN = `enum PKCS7_F_PKCS7_SIGN = 116;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_F_PKCS7_SIGN); }))) {
            mixin(enumMixinStr_PKCS7_F_PKCS7_SIGN);
        }
    }




    static if(!is(typeof(PKCS7_F_PKCS7_SIGNATUREVERIFY))) {
        private enum enumMixinStr_PKCS7_F_PKCS7_SIGNATUREVERIFY = `enum PKCS7_F_PKCS7_SIGNATUREVERIFY = 113;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_F_PKCS7_SIGNATUREVERIFY); }))) {
            mixin(enumMixinStr_PKCS7_F_PKCS7_SIGNATUREVERIFY);
        }
    }




    static if(!is(typeof(PKCS7_F_PKCS7_SIGNER_INFO_SET))) {
        private enum enumMixinStr_PKCS7_F_PKCS7_SIGNER_INFO_SET = `enum PKCS7_F_PKCS7_SIGNER_INFO_SET = 129;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_F_PKCS7_SIGNER_INFO_SET); }))) {
            mixin(enumMixinStr_PKCS7_F_PKCS7_SIGNER_INFO_SET);
        }
    }




    static if(!is(typeof(PKCS7_F_PKCS7_SIGNER_INFO_SIGN))) {
        private enum enumMixinStr_PKCS7_F_PKCS7_SIGNER_INFO_SIGN = `enum PKCS7_F_PKCS7_SIGNER_INFO_SIGN = 139;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_F_PKCS7_SIGNER_INFO_SIGN); }))) {
            mixin(enumMixinStr_PKCS7_F_PKCS7_SIGNER_INFO_SIGN);
        }
    }




    static if(!is(typeof(PKCS7_F_PKCS7_SIGN_ADD_SIGNER))) {
        private enum enumMixinStr_PKCS7_F_PKCS7_SIGN_ADD_SIGNER = `enum PKCS7_F_PKCS7_SIGN_ADD_SIGNER = 137;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_F_PKCS7_SIGN_ADD_SIGNER); }))) {
            mixin(enumMixinStr_PKCS7_F_PKCS7_SIGN_ADD_SIGNER);
        }
    }




    static if(!is(typeof(PKCS7_F_PKCS7_SIMPLE_SMIMECAP))) {
        private enum enumMixinStr_PKCS7_F_PKCS7_SIMPLE_SMIMECAP = `enum PKCS7_F_PKCS7_SIMPLE_SMIMECAP = 119;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_F_PKCS7_SIMPLE_SMIMECAP); }))) {
            mixin(enumMixinStr_PKCS7_F_PKCS7_SIMPLE_SMIMECAP);
        }
    }




    static if(!is(typeof(PKCS7_F_PKCS7_VERIFY))) {
        private enum enumMixinStr_PKCS7_F_PKCS7_VERIFY = `enum PKCS7_F_PKCS7_VERIFY = 117;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_F_PKCS7_VERIFY); }))) {
            mixin(enumMixinStr_PKCS7_F_PKCS7_VERIFY);
        }
    }




    static if(!is(typeof(PKCS7_R_CERTIFICATE_VERIFY_ERROR))) {
        private enum enumMixinStr_PKCS7_R_CERTIFICATE_VERIFY_ERROR = `enum PKCS7_R_CERTIFICATE_VERIFY_ERROR = 117;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_CERTIFICATE_VERIFY_ERROR); }))) {
            mixin(enumMixinStr_PKCS7_R_CERTIFICATE_VERIFY_ERROR);
        }
    }




    static if(!is(typeof(PKCS7_R_CIPHER_HAS_NO_OBJECT_IDENTIFIER))) {
        private enum enumMixinStr_PKCS7_R_CIPHER_HAS_NO_OBJECT_IDENTIFIER = `enum PKCS7_R_CIPHER_HAS_NO_OBJECT_IDENTIFIER = 144;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_CIPHER_HAS_NO_OBJECT_IDENTIFIER); }))) {
            mixin(enumMixinStr_PKCS7_R_CIPHER_HAS_NO_OBJECT_IDENTIFIER);
        }
    }




    static if(!is(typeof(PKCS7_R_CIPHER_NOT_INITIALIZED))) {
        private enum enumMixinStr_PKCS7_R_CIPHER_NOT_INITIALIZED = `enum PKCS7_R_CIPHER_NOT_INITIALIZED = 116;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_CIPHER_NOT_INITIALIZED); }))) {
            mixin(enumMixinStr_PKCS7_R_CIPHER_NOT_INITIALIZED);
        }
    }




    static if(!is(typeof(PKCS7_R_CONTENT_AND_DATA_PRESENT))) {
        private enum enumMixinStr_PKCS7_R_CONTENT_AND_DATA_PRESENT = `enum PKCS7_R_CONTENT_AND_DATA_PRESENT = 118;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_CONTENT_AND_DATA_PRESENT); }))) {
            mixin(enumMixinStr_PKCS7_R_CONTENT_AND_DATA_PRESENT);
        }
    }




    static if(!is(typeof(PKCS7_R_CTRL_ERROR))) {
        private enum enumMixinStr_PKCS7_R_CTRL_ERROR = `enum PKCS7_R_CTRL_ERROR = 152;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_CTRL_ERROR); }))) {
            mixin(enumMixinStr_PKCS7_R_CTRL_ERROR);
        }
    }




    static if(!is(typeof(PKCS7_R_DECRYPT_ERROR))) {
        private enum enumMixinStr_PKCS7_R_DECRYPT_ERROR = `enum PKCS7_R_DECRYPT_ERROR = 119;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_DECRYPT_ERROR); }))) {
            mixin(enumMixinStr_PKCS7_R_DECRYPT_ERROR);
        }
    }




    static if(!is(typeof(PKCS7_R_DIGEST_FAILURE))) {
        private enum enumMixinStr_PKCS7_R_DIGEST_FAILURE = `enum PKCS7_R_DIGEST_FAILURE = 101;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_DIGEST_FAILURE); }))) {
            mixin(enumMixinStr_PKCS7_R_DIGEST_FAILURE);
        }
    }




    static if(!is(typeof(PKCS7_R_ENCRYPTION_CTRL_FAILURE))) {
        private enum enumMixinStr_PKCS7_R_ENCRYPTION_CTRL_FAILURE = `enum PKCS7_R_ENCRYPTION_CTRL_FAILURE = 149;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_ENCRYPTION_CTRL_FAILURE); }))) {
            mixin(enumMixinStr_PKCS7_R_ENCRYPTION_CTRL_FAILURE);
        }
    }




    static if(!is(typeof(PKCS7_R_ENCRYPTION_NOT_SUPPORTED_FOR_THIS_KEY_TYPE))) {
        private enum enumMixinStr_PKCS7_R_ENCRYPTION_NOT_SUPPORTED_FOR_THIS_KEY_TYPE = `enum PKCS7_R_ENCRYPTION_NOT_SUPPORTED_FOR_THIS_KEY_TYPE = 150;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_ENCRYPTION_NOT_SUPPORTED_FOR_THIS_KEY_TYPE); }))) {
            mixin(enumMixinStr_PKCS7_R_ENCRYPTION_NOT_SUPPORTED_FOR_THIS_KEY_TYPE);
        }
    }




    static if(!is(typeof(PKCS7_R_ERROR_ADDING_RECIPIENT))) {
        private enum enumMixinStr_PKCS7_R_ERROR_ADDING_RECIPIENT = `enum PKCS7_R_ERROR_ADDING_RECIPIENT = 120;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_ERROR_ADDING_RECIPIENT); }))) {
            mixin(enumMixinStr_PKCS7_R_ERROR_ADDING_RECIPIENT);
        }
    }




    static if(!is(typeof(PKCS7_R_ERROR_SETTING_CIPHER))) {
        private enum enumMixinStr_PKCS7_R_ERROR_SETTING_CIPHER = `enum PKCS7_R_ERROR_SETTING_CIPHER = 121;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_ERROR_SETTING_CIPHER); }))) {
            mixin(enumMixinStr_PKCS7_R_ERROR_SETTING_CIPHER);
        }
    }




    static if(!is(typeof(PKCS7_R_INVALID_NULL_POINTER))) {
        private enum enumMixinStr_PKCS7_R_INVALID_NULL_POINTER = `enum PKCS7_R_INVALID_NULL_POINTER = 143;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_INVALID_NULL_POINTER); }))) {
            mixin(enumMixinStr_PKCS7_R_INVALID_NULL_POINTER);
        }
    }




    static if(!is(typeof(PKCS7_R_INVALID_SIGNED_DATA_TYPE))) {
        private enum enumMixinStr_PKCS7_R_INVALID_SIGNED_DATA_TYPE = `enum PKCS7_R_INVALID_SIGNED_DATA_TYPE = 155;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_INVALID_SIGNED_DATA_TYPE); }))) {
            mixin(enumMixinStr_PKCS7_R_INVALID_SIGNED_DATA_TYPE);
        }
    }




    static if(!is(typeof(PKCS7_R_NO_CONTENT))) {
        private enum enumMixinStr_PKCS7_R_NO_CONTENT = `enum PKCS7_R_NO_CONTENT = 122;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_NO_CONTENT); }))) {
            mixin(enumMixinStr_PKCS7_R_NO_CONTENT);
        }
    }




    static if(!is(typeof(PKCS7_R_NO_DEFAULT_DIGEST))) {
        private enum enumMixinStr_PKCS7_R_NO_DEFAULT_DIGEST = `enum PKCS7_R_NO_DEFAULT_DIGEST = 151;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_NO_DEFAULT_DIGEST); }))) {
            mixin(enumMixinStr_PKCS7_R_NO_DEFAULT_DIGEST);
        }
    }




    static if(!is(typeof(PKCS7_R_NO_MATCHING_DIGEST_TYPE_FOUND))) {
        private enum enumMixinStr_PKCS7_R_NO_MATCHING_DIGEST_TYPE_FOUND = `enum PKCS7_R_NO_MATCHING_DIGEST_TYPE_FOUND = 154;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_NO_MATCHING_DIGEST_TYPE_FOUND); }))) {
            mixin(enumMixinStr_PKCS7_R_NO_MATCHING_DIGEST_TYPE_FOUND);
        }
    }




    static if(!is(typeof(PKCS7_R_NO_RECIPIENT_MATCHES_CERTIFICATE))) {
        private enum enumMixinStr_PKCS7_R_NO_RECIPIENT_MATCHES_CERTIFICATE = `enum PKCS7_R_NO_RECIPIENT_MATCHES_CERTIFICATE = 115;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_NO_RECIPIENT_MATCHES_CERTIFICATE); }))) {
            mixin(enumMixinStr_PKCS7_R_NO_RECIPIENT_MATCHES_CERTIFICATE);
        }
    }




    static if(!is(typeof(PKCS7_R_NO_SIGNATURES_ON_DATA))) {
        private enum enumMixinStr_PKCS7_R_NO_SIGNATURES_ON_DATA = `enum PKCS7_R_NO_SIGNATURES_ON_DATA = 123;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_NO_SIGNATURES_ON_DATA); }))) {
            mixin(enumMixinStr_PKCS7_R_NO_SIGNATURES_ON_DATA);
        }
    }




    static if(!is(typeof(PKCS7_R_NO_SIGNERS))) {
        private enum enumMixinStr_PKCS7_R_NO_SIGNERS = `enum PKCS7_R_NO_SIGNERS = 142;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_NO_SIGNERS); }))) {
            mixin(enumMixinStr_PKCS7_R_NO_SIGNERS);
        }
    }




    static if(!is(typeof(PKCS7_R_OPERATION_NOT_SUPPORTED_ON_THIS_TYPE))) {
        private enum enumMixinStr_PKCS7_R_OPERATION_NOT_SUPPORTED_ON_THIS_TYPE = `enum PKCS7_R_OPERATION_NOT_SUPPORTED_ON_THIS_TYPE = 104;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_OPERATION_NOT_SUPPORTED_ON_THIS_TYPE); }))) {
            mixin(enumMixinStr_PKCS7_R_OPERATION_NOT_SUPPORTED_ON_THIS_TYPE);
        }
    }




    static if(!is(typeof(PKCS7_R_PKCS7_ADD_SIGNATURE_ERROR))) {
        private enum enumMixinStr_PKCS7_R_PKCS7_ADD_SIGNATURE_ERROR = `enum PKCS7_R_PKCS7_ADD_SIGNATURE_ERROR = 124;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_PKCS7_ADD_SIGNATURE_ERROR); }))) {
            mixin(enumMixinStr_PKCS7_R_PKCS7_ADD_SIGNATURE_ERROR);
        }
    }




    static if(!is(typeof(PKCS7_R_PKCS7_ADD_SIGNER_ERROR))) {
        private enum enumMixinStr_PKCS7_R_PKCS7_ADD_SIGNER_ERROR = `enum PKCS7_R_PKCS7_ADD_SIGNER_ERROR = 153;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_PKCS7_ADD_SIGNER_ERROR); }))) {
            mixin(enumMixinStr_PKCS7_R_PKCS7_ADD_SIGNER_ERROR);
        }
    }




    static if(!is(typeof(PKCS7_R_PKCS7_DATASIGN))) {
        private enum enumMixinStr_PKCS7_R_PKCS7_DATASIGN = `enum PKCS7_R_PKCS7_DATASIGN = 145;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_PKCS7_DATASIGN); }))) {
            mixin(enumMixinStr_PKCS7_R_PKCS7_DATASIGN);
        }
    }




    static if(!is(typeof(PKCS7_R_PRIVATE_KEY_DOES_NOT_MATCH_CERTIFICATE))) {
        private enum enumMixinStr_PKCS7_R_PRIVATE_KEY_DOES_NOT_MATCH_CERTIFICATE = `enum PKCS7_R_PRIVATE_KEY_DOES_NOT_MATCH_CERTIFICATE = 127;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_PRIVATE_KEY_DOES_NOT_MATCH_CERTIFICATE); }))) {
            mixin(enumMixinStr_PKCS7_R_PRIVATE_KEY_DOES_NOT_MATCH_CERTIFICATE);
        }
    }




    static if(!is(typeof(PKCS7_R_SIGNATURE_FAILURE))) {
        private enum enumMixinStr_PKCS7_R_SIGNATURE_FAILURE = `enum PKCS7_R_SIGNATURE_FAILURE = 105;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_SIGNATURE_FAILURE); }))) {
            mixin(enumMixinStr_PKCS7_R_SIGNATURE_FAILURE);
        }
    }




    static if(!is(typeof(PKCS7_R_SIGNER_CERTIFICATE_NOT_FOUND))) {
        private enum enumMixinStr_PKCS7_R_SIGNER_CERTIFICATE_NOT_FOUND = `enum PKCS7_R_SIGNER_CERTIFICATE_NOT_FOUND = 128;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_SIGNER_CERTIFICATE_NOT_FOUND); }))) {
            mixin(enumMixinStr_PKCS7_R_SIGNER_CERTIFICATE_NOT_FOUND);
        }
    }




    static if(!is(typeof(PKCS7_R_SIGNING_CTRL_FAILURE))) {
        private enum enumMixinStr_PKCS7_R_SIGNING_CTRL_FAILURE = `enum PKCS7_R_SIGNING_CTRL_FAILURE = 147;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_SIGNING_CTRL_FAILURE); }))) {
            mixin(enumMixinStr_PKCS7_R_SIGNING_CTRL_FAILURE);
        }
    }




    static if(!is(typeof(PKCS7_R_SIGNING_NOT_SUPPORTED_FOR_THIS_KEY_TYPE))) {
        private enum enumMixinStr_PKCS7_R_SIGNING_NOT_SUPPORTED_FOR_THIS_KEY_TYPE = `enum PKCS7_R_SIGNING_NOT_SUPPORTED_FOR_THIS_KEY_TYPE = 148;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_SIGNING_NOT_SUPPORTED_FOR_THIS_KEY_TYPE); }))) {
            mixin(enumMixinStr_PKCS7_R_SIGNING_NOT_SUPPORTED_FOR_THIS_KEY_TYPE);
        }
    }




    static if(!is(typeof(PKCS7_R_SMIME_TEXT_ERROR))) {
        private enum enumMixinStr_PKCS7_R_SMIME_TEXT_ERROR = `enum PKCS7_R_SMIME_TEXT_ERROR = 129;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_SMIME_TEXT_ERROR); }))) {
            mixin(enumMixinStr_PKCS7_R_SMIME_TEXT_ERROR);
        }
    }




    static if(!is(typeof(PKCS7_R_UNABLE_TO_FIND_CERTIFICATE))) {
        private enum enumMixinStr_PKCS7_R_UNABLE_TO_FIND_CERTIFICATE = `enum PKCS7_R_UNABLE_TO_FIND_CERTIFICATE = 106;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_UNABLE_TO_FIND_CERTIFICATE); }))) {
            mixin(enumMixinStr_PKCS7_R_UNABLE_TO_FIND_CERTIFICATE);
        }
    }




    static if(!is(typeof(PKCS7_R_UNABLE_TO_FIND_MEM_BIO))) {
        private enum enumMixinStr_PKCS7_R_UNABLE_TO_FIND_MEM_BIO = `enum PKCS7_R_UNABLE_TO_FIND_MEM_BIO = 107;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_UNABLE_TO_FIND_MEM_BIO); }))) {
            mixin(enumMixinStr_PKCS7_R_UNABLE_TO_FIND_MEM_BIO);
        }
    }




    static if(!is(typeof(PKCS7_R_UNABLE_TO_FIND_MESSAGE_DIGEST))) {
        private enum enumMixinStr_PKCS7_R_UNABLE_TO_FIND_MESSAGE_DIGEST = `enum PKCS7_R_UNABLE_TO_FIND_MESSAGE_DIGEST = 108;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_UNABLE_TO_FIND_MESSAGE_DIGEST); }))) {
            mixin(enumMixinStr_PKCS7_R_UNABLE_TO_FIND_MESSAGE_DIGEST);
        }
    }




    static if(!is(typeof(PKCS7_R_UNKNOWN_DIGEST_TYPE))) {
        private enum enumMixinStr_PKCS7_R_UNKNOWN_DIGEST_TYPE = `enum PKCS7_R_UNKNOWN_DIGEST_TYPE = 109;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_UNKNOWN_DIGEST_TYPE); }))) {
            mixin(enumMixinStr_PKCS7_R_UNKNOWN_DIGEST_TYPE);
        }
    }




    static if(!is(typeof(PKCS7_R_UNKNOWN_OPERATION))) {
        private enum enumMixinStr_PKCS7_R_UNKNOWN_OPERATION = `enum PKCS7_R_UNKNOWN_OPERATION = 110;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_UNKNOWN_OPERATION); }))) {
            mixin(enumMixinStr_PKCS7_R_UNKNOWN_OPERATION);
        }
    }




    static if(!is(typeof(PKCS7_R_UNSUPPORTED_CIPHER_TYPE))) {
        private enum enumMixinStr_PKCS7_R_UNSUPPORTED_CIPHER_TYPE = `enum PKCS7_R_UNSUPPORTED_CIPHER_TYPE = 111;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_UNSUPPORTED_CIPHER_TYPE); }))) {
            mixin(enumMixinStr_PKCS7_R_UNSUPPORTED_CIPHER_TYPE);
        }
    }




    static if(!is(typeof(PKCS7_R_UNSUPPORTED_CONTENT_TYPE))) {
        private enum enumMixinStr_PKCS7_R_UNSUPPORTED_CONTENT_TYPE = `enum PKCS7_R_UNSUPPORTED_CONTENT_TYPE = 112;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_UNSUPPORTED_CONTENT_TYPE); }))) {
            mixin(enumMixinStr_PKCS7_R_UNSUPPORTED_CONTENT_TYPE);
        }
    }




    static if(!is(typeof(PKCS7_R_WRONG_CONTENT_TYPE))) {
        private enum enumMixinStr_PKCS7_R_WRONG_CONTENT_TYPE = `enum PKCS7_R_WRONG_CONTENT_TYPE = 113;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_WRONG_CONTENT_TYPE); }))) {
            mixin(enumMixinStr_PKCS7_R_WRONG_CONTENT_TYPE);
        }
    }




    static if(!is(typeof(PKCS7_R_WRONG_PKCS7_TYPE))) {
        private enum enumMixinStr_PKCS7_R_WRONG_PKCS7_TYPE = `enum PKCS7_R_WRONG_PKCS7_TYPE = 114;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS7_R_WRONG_PKCS7_TYPE); }))) {
            mixin(enumMixinStr_PKCS7_R_WRONG_PKCS7_TYPE);
        }
    }






    static if(!is(typeof(OBJ_friendlyName))) {
        private enum enumMixinStr_OBJ_friendlyName = `enum OBJ_friendlyName = OBJ_pkcs9 , 20L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_friendlyName); }))) {
            mixin(enumMixinStr_OBJ_friendlyName);
        }
    }




    static if(!is(typeof(NID_friendlyName))) {
        private enum enumMixinStr_NID_friendlyName = `enum NID_friendlyName = 156;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_friendlyName); }))) {
            mixin(enumMixinStr_NID_friendlyName);
        }
    }




    static if(!is(typeof(LN_friendlyName))) {
        private enum enumMixinStr_LN_friendlyName = `enum LN_friendlyName = "friendlyName";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_friendlyName); }))) {
            mixin(enumMixinStr_LN_friendlyName);
        }
    }




    static if(!is(typeof(OBJ_id_smime_cti_ets_proofOfCreation))) {
        private enum enumMixinStr_OBJ_id_smime_cti_ets_proofOfCreation = `enum OBJ_id_smime_cti_ets_proofOfCreation = OBJ_id_smime_cti , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_cti_ets_proofOfCreation); }))) {
            mixin(enumMixinStr_OBJ_id_smime_cti_ets_proofOfCreation);
        }
    }




    static if(!is(typeof(NID_id_smime_cti_ets_proofOfCreation))) {
        private enum enumMixinStr_NID_id_smime_cti_ets_proofOfCreation = `enum NID_id_smime_cti_ets_proofOfCreation = 256;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_cti_ets_proofOfCreation); }))) {
            mixin(enumMixinStr_NID_id_smime_cti_ets_proofOfCreation);
        }
    }




    static if(!is(typeof(SN_id_smime_cti_ets_proofOfCreation))) {
        private enum enumMixinStr_SN_id_smime_cti_ets_proofOfCreation = `enum SN_id_smime_cti_ets_proofOfCreation = "id-smime-cti-ets-proofOfCreation";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_cti_ets_proofOfCreation); }))) {
            mixin(enumMixinStr_SN_id_smime_cti_ets_proofOfCreation);
        }
    }




    static if(!is(typeof(OBJ_id_smime_cti_ets_proofOfApproval))) {
        private enum enumMixinStr_OBJ_id_smime_cti_ets_proofOfApproval = `enum OBJ_id_smime_cti_ets_proofOfApproval = OBJ_id_smime_cti , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_cti_ets_proofOfApproval); }))) {
            mixin(enumMixinStr_OBJ_id_smime_cti_ets_proofOfApproval);
        }
    }




    static if(!is(typeof(NID_id_smime_cti_ets_proofOfApproval))) {
        private enum enumMixinStr_NID_id_smime_cti_ets_proofOfApproval = `enum NID_id_smime_cti_ets_proofOfApproval = 255;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_cti_ets_proofOfApproval); }))) {
            mixin(enumMixinStr_NID_id_smime_cti_ets_proofOfApproval);
        }
    }




    static if(!is(typeof(OPENSSL_RSA_MAX_MODULUS_BITS))) {
        private enum enumMixinStr_OPENSSL_RSA_MAX_MODULUS_BITS = `enum OPENSSL_RSA_MAX_MODULUS_BITS = 16384;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_RSA_MAX_MODULUS_BITS); }))) {
            mixin(enumMixinStr_OPENSSL_RSA_MAX_MODULUS_BITS);
        }
    }




    static if(!is(typeof(OPENSSL_RSA_FIPS_MIN_MODULUS_BITS))) {
        private enum enumMixinStr_OPENSSL_RSA_FIPS_MIN_MODULUS_BITS = `enum OPENSSL_RSA_FIPS_MIN_MODULUS_BITS = 1024;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_RSA_FIPS_MIN_MODULUS_BITS); }))) {
            mixin(enumMixinStr_OPENSSL_RSA_FIPS_MIN_MODULUS_BITS);
        }
    }




    static if(!is(typeof(OPENSSL_RSA_SMALL_MODULUS_BITS))) {
        private enum enumMixinStr_OPENSSL_RSA_SMALL_MODULUS_BITS = `enum OPENSSL_RSA_SMALL_MODULUS_BITS = 3072;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_RSA_SMALL_MODULUS_BITS); }))) {
            mixin(enumMixinStr_OPENSSL_RSA_SMALL_MODULUS_BITS);
        }
    }




    static if(!is(typeof(OPENSSL_RSA_MAX_PUBEXP_BITS))) {
        private enum enumMixinStr_OPENSSL_RSA_MAX_PUBEXP_BITS = `enum OPENSSL_RSA_MAX_PUBEXP_BITS = 64;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_RSA_MAX_PUBEXP_BITS); }))) {
            mixin(enumMixinStr_OPENSSL_RSA_MAX_PUBEXP_BITS);
        }
    }




    static if(!is(typeof(RSA_3))) {
        private enum enumMixinStr_RSA_3 = `enum RSA_3 = 0x3L;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_3); }))) {
            mixin(enumMixinStr_RSA_3);
        }
    }




    static if(!is(typeof(RSA_F4))) {
        private enum enumMixinStr_RSA_F4 = `enum RSA_F4 = 0x10001L;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F4); }))) {
            mixin(enumMixinStr_RSA_F4);
        }
    }




    static if(!is(typeof(RSA_ASN1_VERSION_DEFAULT))) {
        private enum enumMixinStr_RSA_ASN1_VERSION_DEFAULT = `enum RSA_ASN1_VERSION_DEFAULT = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_ASN1_VERSION_DEFAULT); }))) {
            mixin(enumMixinStr_RSA_ASN1_VERSION_DEFAULT);
        }
    }




    static if(!is(typeof(RSA_ASN1_VERSION_MULTI))) {
        private enum enumMixinStr_RSA_ASN1_VERSION_MULTI = `enum RSA_ASN1_VERSION_MULTI = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_ASN1_VERSION_MULTI); }))) {
            mixin(enumMixinStr_RSA_ASN1_VERSION_MULTI);
        }
    }




    static if(!is(typeof(RSA_DEFAULT_PRIME_NUM))) {
        private enum enumMixinStr_RSA_DEFAULT_PRIME_NUM = `enum RSA_DEFAULT_PRIME_NUM = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_DEFAULT_PRIME_NUM); }))) {
            mixin(enumMixinStr_RSA_DEFAULT_PRIME_NUM);
        }
    }




    static if(!is(typeof(RSA_METHOD_FLAG_NO_CHECK))) {
        private enum enumMixinStr_RSA_METHOD_FLAG_NO_CHECK = `enum RSA_METHOD_FLAG_NO_CHECK = 0x0001;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_METHOD_FLAG_NO_CHECK); }))) {
            mixin(enumMixinStr_RSA_METHOD_FLAG_NO_CHECK);
        }
    }




    static if(!is(typeof(RSA_FLAG_CACHE_PUBLIC))) {
        private enum enumMixinStr_RSA_FLAG_CACHE_PUBLIC = `enum RSA_FLAG_CACHE_PUBLIC = 0x0002;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_FLAG_CACHE_PUBLIC); }))) {
            mixin(enumMixinStr_RSA_FLAG_CACHE_PUBLIC);
        }
    }




    static if(!is(typeof(RSA_FLAG_CACHE_PRIVATE))) {
        private enum enumMixinStr_RSA_FLAG_CACHE_PRIVATE = `enum RSA_FLAG_CACHE_PRIVATE = 0x0004;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_FLAG_CACHE_PRIVATE); }))) {
            mixin(enumMixinStr_RSA_FLAG_CACHE_PRIVATE);
        }
    }




    static if(!is(typeof(RSA_FLAG_BLINDING))) {
        private enum enumMixinStr_RSA_FLAG_BLINDING = `enum RSA_FLAG_BLINDING = 0x0008;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_FLAG_BLINDING); }))) {
            mixin(enumMixinStr_RSA_FLAG_BLINDING);
        }
    }




    static if(!is(typeof(RSA_FLAG_THREAD_SAFE))) {
        private enum enumMixinStr_RSA_FLAG_THREAD_SAFE = `enum RSA_FLAG_THREAD_SAFE = 0x0010;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_FLAG_THREAD_SAFE); }))) {
            mixin(enumMixinStr_RSA_FLAG_THREAD_SAFE);
        }
    }




    static if(!is(typeof(RSA_FLAG_EXT_PKEY))) {
        private enum enumMixinStr_RSA_FLAG_EXT_PKEY = `enum RSA_FLAG_EXT_PKEY = 0x0020;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_FLAG_EXT_PKEY); }))) {
            mixin(enumMixinStr_RSA_FLAG_EXT_PKEY);
        }
    }




    static if(!is(typeof(RSA_FLAG_NO_BLINDING))) {
        private enum enumMixinStr_RSA_FLAG_NO_BLINDING = `enum RSA_FLAG_NO_BLINDING = 0x0080;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_FLAG_NO_BLINDING); }))) {
            mixin(enumMixinStr_RSA_FLAG_NO_BLINDING);
        }
    }




    static if(!is(typeof(SN_id_smime_cti_ets_proofOfApproval))) {
        private enum enumMixinStr_SN_id_smime_cti_ets_proofOfApproval = `enum SN_id_smime_cti_ets_proofOfApproval = "id-smime-cti-ets-proofOfApproval";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_cti_ets_proofOfApproval); }))) {
            mixin(enumMixinStr_SN_id_smime_cti_ets_proofOfApproval);
        }
    }




    static if(!is(typeof(RSA_FLAG_NO_CONSTTIME))) {
        private enum enumMixinStr_RSA_FLAG_NO_CONSTTIME = `enum RSA_FLAG_NO_CONSTTIME = 0x0000;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_FLAG_NO_CONSTTIME); }))) {
            mixin(enumMixinStr_RSA_FLAG_NO_CONSTTIME);
        }
    }




    static if(!is(typeof(OBJ_id_smime_cti_ets_proofOfSender))) {
        private enum enumMixinStr_OBJ_id_smime_cti_ets_proofOfSender = `enum OBJ_id_smime_cti_ets_proofOfSender = OBJ_id_smime_cti , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_cti_ets_proofOfSender); }))) {
            mixin(enumMixinStr_OBJ_id_smime_cti_ets_proofOfSender);
        }
    }




    static if(!is(typeof(RSA_FLAG_NO_EXP_CONSTTIME))) {
        private enum enumMixinStr_RSA_FLAG_NO_EXP_CONSTTIME = `enum RSA_FLAG_NO_EXP_CONSTTIME = 0x0000;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_FLAG_NO_EXP_CONSTTIME); }))) {
            mixin(enumMixinStr_RSA_FLAG_NO_EXP_CONSTTIME);
        }
    }
    static if(!is(typeof(RSA_PSS_SALTLEN_DIGEST))) {
        private enum enumMixinStr_RSA_PSS_SALTLEN_DIGEST = `enum RSA_PSS_SALTLEN_DIGEST = - 1;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_PSS_SALTLEN_DIGEST); }))) {
            mixin(enumMixinStr_RSA_PSS_SALTLEN_DIGEST);
        }
    }




    static if(!is(typeof(RSA_PSS_SALTLEN_AUTO))) {
        private enum enumMixinStr_RSA_PSS_SALTLEN_AUTO = `enum RSA_PSS_SALTLEN_AUTO = - 2;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_PSS_SALTLEN_AUTO); }))) {
            mixin(enumMixinStr_RSA_PSS_SALTLEN_AUTO);
        }
    }




    static if(!is(typeof(RSA_PSS_SALTLEN_MAX))) {
        private enum enumMixinStr_RSA_PSS_SALTLEN_MAX = `enum RSA_PSS_SALTLEN_MAX = - 3;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_PSS_SALTLEN_MAX); }))) {
            mixin(enumMixinStr_RSA_PSS_SALTLEN_MAX);
        }
    }




    static if(!is(typeof(RSA_PSS_SALTLEN_MAX_SIGN))) {
        private enum enumMixinStr_RSA_PSS_SALTLEN_MAX_SIGN = `enum RSA_PSS_SALTLEN_MAX_SIGN = - 2;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_PSS_SALTLEN_MAX_SIGN); }))) {
            mixin(enumMixinStr_RSA_PSS_SALTLEN_MAX_SIGN);
        }
    }
    static if(!is(typeof(EVP_PKEY_CTRL_RSA_PADDING))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_RSA_PADDING = `enum EVP_PKEY_CTRL_RSA_PADDING = ( EVP_PKEY_ALG_CTRL + 1 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_RSA_PADDING); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_RSA_PADDING);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_RSA_PSS_SALTLEN))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_RSA_PSS_SALTLEN = `enum EVP_PKEY_CTRL_RSA_PSS_SALTLEN = ( EVP_PKEY_ALG_CTRL + 2 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_RSA_PSS_SALTLEN); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_RSA_PSS_SALTLEN);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_RSA_KEYGEN_BITS))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_RSA_KEYGEN_BITS = `enum EVP_PKEY_CTRL_RSA_KEYGEN_BITS = ( EVP_PKEY_ALG_CTRL + 3 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_RSA_KEYGEN_BITS); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_RSA_KEYGEN_BITS);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_RSA_KEYGEN_PUBEXP))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_RSA_KEYGEN_PUBEXP = `enum EVP_PKEY_CTRL_RSA_KEYGEN_PUBEXP = ( EVP_PKEY_ALG_CTRL + 4 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_RSA_KEYGEN_PUBEXP); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_RSA_KEYGEN_PUBEXP);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_RSA_MGF1_MD))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_RSA_MGF1_MD = `enum EVP_PKEY_CTRL_RSA_MGF1_MD = ( EVP_PKEY_ALG_CTRL + 5 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_RSA_MGF1_MD); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_RSA_MGF1_MD);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_GET_RSA_PADDING))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_GET_RSA_PADDING = `enum EVP_PKEY_CTRL_GET_RSA_PADDING = ( EVP_PKEY_ALG_CTRL + 6 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_GET_RSA_PADDING); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_GET_RSA_PADDING);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_GET_RSA_PSS_SALTLEN))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_GET_RSA_PSS_SALTLEN = `enum EVP_PKEY_CTRL_GET_RSA_PSS_SALTLEN = ( EVP_PKEY_ALG_CTRL + 7 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_GET_RSA_PSS_SALTLEN); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_GET_RSA_PSS_SALTLEN);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_GET_RSA_MGF1_MD))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_GET_RSA_MGF1_MD = `enum EVP_PKEY_CTRL_GET_RSA_MGF1_MD = ( EVP_PKEY_ALG_CTRL + 8 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_GET_RSA_MGF1_MD); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_GET_RSA_MGF1_MD);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_RSA_OAEP_MD))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_RSA_OAEP_MD = `enum EVP_PKEY_CTRL_RSA_OAEP_MD = ( EVP_PKEY_ALG_CTRL + 9 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_RSA_OAEP_MD); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_RSA_OAEP_MD);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_RSA_OAEP_LABEL))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_RSA_OAEP_LABEL = `enum EVP_PKEY_CTRL_RSA_OAEP_LABEL = ( EVP_PKEY_ALG_CTRL + 10 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_RSA_OAEP_LABEL); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_RSA_OAEP_LABEL);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_GET_RSA_OAEP_MD))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_GET_RSA_OAEP_MD = `enum EVP_PKEY_CTRL_GET_RSA_OAEP_MD = ( EVP_PKEY_ALG_CTRL + 11 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_GET_RSA_OAEP_MD); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_GET_RSA_OAEP_MD);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_GET_RSA_OAEP_LABEL))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_GET_RSA_OAEP_LABEL = `enum EVP_PKEY_CTRL_GET_RSA_OAEP_LABEL = ( EVP_PKEY_ALG_CTRL + 12 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_GET_RSA_OAEP_LABEL); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_GET_RSA_OAEP_LABEL);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_RSA_KEYGEN_PRIMES))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_RSA_KEYGEN_PRIMES = `enum EVP_PKEY_CTRL_RSA_KEYGEN_PRIMES = ( EVP_PKEY_ALG_CTRL + 13 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_RSA_KEYGEN_PRIMES); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_RSA_KEYGEN_PRIMES);
        }
    }




    static if(!is(typeof(RSA_PKCS1_PADDING))) {
        private enum enumMixinStr_RSA_PKCS1_PADDING = `enum RSA_PKCS1_PADDING = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_PKCS1_PADDING); }))) {
            mixin(enumMixinStr_RSA_PKCS1_PADDING);
        }
    }




    static if(!is(typeof(RSA_SSLV23_PADDING))) {
        private enum enumMixinStr_RSA_SSLV23_PADDING = `enum RSA_SSLV23_PADDING = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_SSLV23_PADDING); }))) {
            mixin(enumMixinStr_RSA_SSLV23_PADDING);
        }
    }




    static if(!is(typeof(RSA_NO_PADDING))) {
        private enum enumMixinStr_RSA_NO_PADDING = `enum RSA_NO_PADDING = 3;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_NO_PADDING); }))) {
            mixin(enumMixinStr_RSA_NO_PADDING);
        }
    }




    static if(!is(typeof(RSA_PKCS1_OAEP_PADDING))) {
        private enum enumMixinStr_RSA_PKCS1_OAEP_PADDING = `enum RSA_PKCS1_OAEP_PADDING = 4;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_PKCS1_OAEP_PADDING); }))) {
            mixin(enumMixinStr_RSA_PKCS1_OAEP_PADDING);
        }
    }




    static if(!is(typeof(RSA_X931_PADDING))) {
        private enum enumMixinStr_RSA_X931_PADDING = `enum RSA_X931_PADDING = 5;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_X931_PADDING); }))) {
            mixin(enumMixinStr_RSA_X931_PADDING);
        }
    }




    static if(!is(typeof(RSA_PKCS1_PSS_PADDING))) {
        private enum enumMixinStr_RSA_PKCS1_PSS_PADDING = `enum RSA_PKCS1_PSS_PADDING = 6;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_PKCS1_PSS_PADDING); }))) {
            mixin(enumMixinStr_RSA_PKCS1_PSS_PADDING);
        }
    }




    static if(!is(typeof(RSA_PKCS1_PADDING_SIZE))) {
        private enum enumMixinStr_RSA_PKCS1_PADDING_SIZE = `enum RSA_PKCS1_PADDING_SIZE = 11;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_PKCS1_PADDING_SIZE); }))) {
            mixin(enumMixinStr_RSA_PKCS1_PADDING_SIZE);
        }
    }
    static if(!is(typeof(NID_id_smime_cti_ets_proofOfSender))) {
        private enum enumMixinStr_NID_id_smime_cti_ets_proofOfSender = `enum NID_id_smime_cti_ets_proofOfSender = 254;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_cti_ets_proofOfSender); }))) {
            mixin(enumMixinStr_NID_id_smime_cti_ets_proofOfSender);
        }
    }




    static if(!is(typeof(SN_id_smime_cti_ets_proofOfSender))) {
        private enum enumMixinStr_SN_id_smime_cti_ets_proofOfSender = `enum SN_id_smime_cti_ets_proofOfSender = "id-smime-cti-ets-proofOfSender";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_cti_ets_proofOfSender); }))) {
            mixin(enumMixinStr_SN_id_smime_cti_ets_proofOfSender);
        }
    }




    static if(!is(typeof(OBJ_id_smime_cti_ets_proofOfDelivery))) {
        private enum enumMixinStr_OBJ_id_smime_cti_ets_proofOfDelivery = `enum OBJ_id_smime_cti_ets_proofOfDelivery = OBJ_id_smime_cti , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_cti_ets_proofOfDelivery); }))) {
            mixin(enumMixinStr_OBJ_id_smime_cti_ets_proofOfDelivery);
        }
    }




    static if(!is(typeof(NID_id_smime_cti_ets_proofOfDelivery))) {
        private enum enumMixinStr_NID_id_smime_cti_ets_proofOfDelivery = `enum NID_id_smime_cti_ets_proofOfDelivery = 253;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_cti_ets_proofOfDelivery); }))) {
            mixin(enumMixinStr_NID_id_smime_cti_ets_proofOfDelivery);
        }
    }




    static if(!is(typeof(SN_id_smime_cti_ets_proofOfDelivery))) {
        private enum enumMixinStr_SN_id_smime_cti_ets_proofOfDelivery = `enum SN_id_smime_cti_ets_proofOfDelivery = "id-smime-cti-ets-proofOfDelivery";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_cti_ets_proofOfDelivery); }))) {
            mixin(enumMixinStr_SN_id_smime_cti_ets_proofOfDelivery);
        }
    }




    static if(!is(typeof(OBJ_id_smime_cti_ets_proofOfReceipt))) {
        private enum enumMixinStr_OBJ_id_smime_cti_ets_proofOfReceipt = `enum OBJ_id_smime_cti_ets_proofOfReceipt = OBJ_id_smime_cti , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_cti_ets_proofOfReceipt); }))) {
            mixin(enumMixinStr_OBJ_id_smime_cti_ets_proofOfReceipt);
        }
    }




    static if(!is(typeof(NID_id_smime_cti_ets_proofOfReceipt))) {
        private enum enumMixinStr_NID_id_smime_cti_ets_proofOfReceipt = `enum NID_id_smime_cti_ets_proofOfReceipt = 252;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_cti_ets_proofOfReceipt); }))) {
            mixin(enumMixinStr_NID_id_smime_cti_ets_proofOfReceipt);
        }
    }




    static if(!is(typeof(SN_id_smime_cti_ets_proofOfReceipt))) {
        private enum enumMixinStr_SN_id_smime_cti_ets_proofOfReceipt = `enum SN_id_smime_cti_ets_proofOfReceipt = "id-smime-cti-ets-proofOfReceipt";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_cti_ets_proofOfReceipt); }))) {
            mixin(enumMixinStr_SN_id_smime_cti_ets_proofOfReceipt);
        }
    }




    static if(!is(typeof(OBJ_id_smime_cti_ets_proofOfOrigin))) {
        private enum enumMixinStr_OBJ_id_smime_cti_ets_proofOfOrigin = `enum OBJ_id_smime_cti_ets_proofOfOrigin = OBJ_id_smime_cti , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_cti_ets_proofOfOrigin); }))) {
            mixin(enumMixinStr_OBJ_id_smime_cti_ets_proofOfOrigin);
        }
    }




    static if(!is(typeof(NID_id_smime_cti_ets_proofOfOrigin))) {
        private enum enumMixinStr_NID_id_smime_cti_ets_proofOfOrigin = `enum NID_id_smime_cti_ets_proofOfOrigin = 251;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_cti_ets_proofOfOrigin); }))) {
            mixin(enumMixinStr_NID_id_smime_cti_ets_proofOfOrigin);
        }
    }




    static if(!is(typeof(SN_id_smime_cti_ets_proofOfOrigin))) {
        private enum enumMixinStr_SN_id_smime_cti_ets_proofOfOrigin = `enum SN_id_smime_cti_ets_proofOfOrigin = "id-smime-cti-ets-proofOfOrigin";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_cti_ets_proofOfOrigin); }))) {
            mixin(enumMixinStr_SN_id_smime_cti_ets_proofOfOrigin);
        }
    }




    static if(!is(typeof(OBJ_id_smime_spq_ets_sqt_unotice))) {
        private enum enumMixinStr_OBJ_id_smime_spq_ets_sqt_unotice = `enum OBJ_id_smime_spq_ets_sqt_unotice = OBJ_id_smime_spq , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_spq_ets_sqt_unotice); }))) {
            mixin(enumMixinStr_OBJ_id_smime_spq_ets_sqt_unotice);
        }
    }




    static if(!is(typeof(NID_id_smime_spq_ets_sqt_unotice))) {
        private enum enumMixinStr_NID_id_smime_spq_ets_sqt_unotice = `enum NID_id_smime_spq_ets_sqt_unotice = 250;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_spq_ets_sqt_unotice); }))) {
            mixin(enumMixinStr_NID_id_smime_spq_ets_sqt_unotice);
        }
    }




    static if(!is(typeof(SN_id_smime_spq_ets_sqt_unotice))) {
        private enum enumMixinStr_SN_id_smime_spq_ets_sqt_unotice = `enum SN_id_smime_spq_ets_sqt_unotice = "id-smime-spq-ets-sqt-unotice";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_spq_ets_sqt_unotice); }))) {
            mixin(enumMixinStr_SN_id_smime_spq_ets_sqt_unotice);
        }
    }




    static if(!is(typeof(OBJ_id_smime_spq_ets_sqt_uri))) {
        private enum enumMixinStr_OBJ_id_smime_spq_ets_sqt_uri = `enum OBJ_id_smime_spq_ets_sqt_uri = OBJ_id_smime_spq , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_spq_ets_sqt_uri); }))) {
            mixin(enumMixinStr_OBJ_id_smime_spq_ets_sqt_uri);
        }
    }




    static if(!is(typeof(NID_id_smime_spq_ets_sqt_uri))) {
        private enum enumMixinStr_NID_id_smime_spq_ets_sqt_uri = `enum NID_id_smime_spq_ets_sqt_uri = 249;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_spq_ets_sqt_uri); }))) {
            mixin(enumMixinStr_NID_id_smime_spq_ets_sqt_uri);
        }
    }




    static if(!is(typeof(SN_id_smime_spq_ets_sqt_uri))) {
        private enum enumMixinStr_SN_id_smime_spq_ets_sqt_uri = `enum SN_id_smime_spq_ets_sqt_uri = "id-smime-spq-ets-sqt-uri";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_spq_ets_sqt_uri); }))) {
            mixin(enumMixinStr_SN_id_smime_spq_ets_sqt_uri);
        }
    }




    static if(!is(typeof(OBJ_id_smime_cd_ldap))) {
        private enum enumMixinStr_OBJ_id_smime_cd_ldap = `enum OBJ_id_smime_cd_ldap = OBJ_id_smime_cd , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_cd_ldap); }))) {
            mixin(enumMixinStr_OBJ_id_smime_cd_ldap);
        }
    }




    static if(!is(typeof(NID_id_smime_cd_ldap))) {
        private enum enumMixinStr_NID_id_smime_cd_ldap = `enum NID_id_smime_cd_ldap = 248;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_cd_ldap); }))) {
            mixin(enumMixinStr_NID_id_smime_cd_ldap);
        }
    }




    static if(!is(typeof(SN_id_smime_cd_ldap))) {
        private enum enumMixinStr_SN_id_smime_cd_ldap = `enum SN_id_smime_cd_ldap = "id-smime-cd-ldap";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_cd_ldap); }))) {
            mixin(enumMixinStr_SN_id_smime_cd_ldap);
        }
    }




    static if(!is(typeof(OBJ_id_alg_PWRI_KEK))) {
        private enum enumMixinStr_OBJ_id_alg_PWRI_KEK = `enum OBJ_id_alg_PWRI_KEK = OBJ_id_smime_alg , 9L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_alg_PWRI_KEK); }))) {
            mixin(enumMixinStr_OBJ_id_alg_PWRI_KEK);
        }
    }




    static if(!is(typeof(NID_id_alg_PWRI_KEK))) {
        private enum enumMixinStr_NID_id_alg_PWRI_KEK = `enum NID_id_alg_PWRI_KEK = 893;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_alg_PWRI_KEK); }))) {
            mixin(enumMixinStr_NID_id_alg_PWRI_KEK);
        }
    }




    static if(!is(typeof(SN_id_alg_PWRI_KEK))) {
        private enum enumMixinStr_SN_id_alg_PWRI_KEK = `enum SN_id_alg_PWRI_KEK = "id-alg-PWRI-KEK";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_alg_PWRI_KEK); }))) {
            mixin(enumMixinStr_SN_id_alg_PWRI_KEK);
        }
    }




    static if(!is(typeof(OBJ_id_smime_alg_CMSRC2wrap))) {
        private enum enumMixinStr_OBJ_id_smime_alg_CMSRC2wrap = `enum OBJ_id_smime_alg_CMSRC2wrap = OBJ_id_smime_alg , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_alg_CMSRC2wrap); }))) {
            mixin(enumMixinStr_OBJ_id_smime_alg_CMSRC2wrap);
        }
    }




    static if(!is(typeof(NID_id_smime_alg_CMSRC2wrap))) {
        private enum enumMixinStr_NID_id_smime_alg_CMSRC2wrap = `enum NID_id_smime_alg_CMSRC2wrap = 247;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_alg_CMSRC2wrap); }))) {
            mixin(enumMixinStr_NID_id_smime_alg_CMSRC2wrap);
        }
    }




    static if(!is(typeof(SN_id_smime_alg_CMSRC2wrap))) {
        private enum enumMixinStr_SN_id_smime_alg_CMSRC2wrap = `enum SN_id_smime_alg_CMSRC2wrap = "id-smime-alg-CMSRC2wrap";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_alg_CMSRC2wrap); }))) {
            mixin(enumMixinStr_SN_id_smime_alg_CMSRC2wrap);
        }
    }




    static if(!is(typeof(OBJ_id_smime_alg_CMS3DESwrap))) {
        private enum enumMixinStr_OBJ_id_smime_alg_CMS3DESwrap = `enum OBJ_id_smime_alg_CMS3DESwrap = OBJ_id_smime_alg , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_alg_CMS3DESwrap); }))) {
            mixin(enumMixinStr_OBJ_id_smime_alg_CMS3DESwrap);
        }
    }




    static if(!is(typeof(NID_id_smime_alg_CMS3DESwrap))) {
        private enum enumMixinStr_NID_id_smime_alg_CMS3DESwrap = `enum NID_id_smime_alg_CMS3DESwrap = 246;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_alg_CMS3DESwrap); }))) {
            mixin(enumMixinStr_NID_id_smime_alg_CMS3DESwrap);
        }
    }




    static if(!is(typeof(SN_id_smime_alg_CMS3DESwrap))) {
        private enum enumMixinStr_SN_id_smime_alg_CMS3DESwrap = `enum SN_id_smime_alg_CMS3DESwrap = "id-smime-alg-CMS3DESwrap";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_alg_CMS3DESwrap); }))) {
            mixin(enumMixinStr_SN_id_smime_alg_CMS3DESwrap);
        }
    }




    static if(!is(typeof(OBJ_id_smime_alg_ESDH))) {
        private enum enumMixinStr_OBJ_id_smime_alg_ESDH = `enum OBJ_id_smime_alg_ESDH = OBJ_id_smime_alg , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_alg_ESDH); }))) {
            mixin(enumMixinStr_OBJ_id_smime_alg_ESDH);
        }
    }




    static if(!is(typeof(NID_id_smime_alg_ESDH))) {
        private enum enumMixinStr_NID_id_smime_alg_ESDH = `enum NID_id_smime_alg_ESDH = 245;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_alg_ESDH); }))) {
            mixin(enumMixinStr_NID_id_smime_alg_ESDH);
        }
    }




    static if(!is(typeof(SN_id_smime_alg_ESDH))) {
        private enum enumMixinStr_SN_id_smime_alg_ESDH = `enum SN_id_smime_alg_ESDH = "id-smime-alg-ESDH";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_alg_ESDH); }))) {
            mixin(enumMixinStr_SN_id_smime_alg_ESDH);
        }
    }




    static if(!is(typeof(OBJ_id_smime_alg_RC2wrap))) {
        private enum enumMixinStr_OBJ_id_smime_alg_RC2wrap = `enum OBJ_id_smime_alg_RC2wrap = OBJ_id_smime_alg , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_alg_RC2wrap); }))) {
            mixin(enumMixinStr_OBJ_id_smime_alg_RC2wrap);
        }
    }




    static if(!is(typeof(NID_id_smime_alg_RC2wrap))) {
        private enum enumMixinStr_NID_id_smime_alg_RC2wrap = `enum NID_id_smime_alg_RC2wrap = 244;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_alg_RC2wrap); }))) {
            mixin(enumMixinStr_NID_id_smime_alg_RC2wrap);
        }
    }




    static if(!is(typeof(SN_id_smime_alg_RC2wrap))) {
        private enum enumMixinStr_SN_id_smime_alg_RC2wrap = `enum SN_id_smime_alg_RC2wrap = "id-smime-alg-RC2wrap";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_alg_RC2wrap); }))) {
            mixin(enumMixinStr_SN_id_smime_alg_RC2wrap);
        }
    }




    static if(!is(typeof(OBJ_id_smime_alg_3DESwrap))) {
        private enum enumMixinStr_OBJ_id_smime_alg_3DESwrap = `enum OBJ_id_smime_alg_3DESwrap = OBJ_id_smime_alg , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_alg_3DESwrap); }))) {
            mixin(enumMixinStr_OBJ_id_smime_alg_3DESwrap);
        }
    }




    static if(!is(typeof(NID_id_smime_alg_3DESwrap))) {
        private enum enumMixinStr_NID_id_smime_alg_3DESwrap = `enum NID_id_smime_alg_3DESwrap = 243;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_alg_3DESwrap); }))) {
            mixin(enumMixinStr_NID_id_smime_alg_3DESwrap);
        }
    }




    static if(!is(typeof(SN_id_smime_alg_3DESwrap))) {
        private enum enumMixinStr_SN_id_smime_alg_3DESwrap = `enum SN_id_smime_alg_3DESwrap = "id-smime-alg-3DESwrap";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_alg_3DESwrap); }))) {
            mixin(enumMixinStr_SN_id_smime_alg_3DESwrap);
        }
    }




    static if(!is(typeof(OBJ_id_smime_alg_ESDHwithRC2))) {
        private enum enumMixinStr_OBJ_id_smime_alg_ESDHwithRC2 = `enum OBJ_id_smime_alg_ESDHwithRC2 = OBJ_id_smime_alg , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_alg_ESDHwithRC2); }))) {
            mixin(enumMixinStr_OBJ_id_smime_alg_ESDHwithRC2);
        }
    }




    static if(!is(typeof(NID_id_smime_alg_ESDHwithRC2))) {
        private enum enumMixinStr_NID_id_smime_alg_ESDHwithRC2 = `enum NID_id_smime_alg_ESDHwithRC2 = 242;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_alg_ESDHwithRC2); }))) {
            mixin(enumMixinStr_NID_id_smime_alg_ESDHwithRC2);
        }
    }




    static if(!is(typeof(SN_id_smime_alg_ESDHwithRC2))) {
        private enum enumMixinStr_SN_id_smime_alg_ESDHwithRC2 = `enum SN_id_smime_alg_ESDHwithRC2 = "id-smime-alg-ESDHwithRC2";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_alg_ESDHwithRC2); }))) {
            mixin(enumMixinStr_SN_id_smime_alg_ESDHwithRC2);
        }
    }




    static if(!is(typeof(OBJ_id_smime_alg_ESDHwith3DES))) {
        private enum enumMixinStr_OBJ_id_smime_alg_ESDHwith3DES = `enum OBJ_id_smime_alg_ESDHwith3DES = OBJ_id_smime_alg , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_alg_ESDHwith3DES); }))) {
            mixin(enumMixinStr_OBJ_id_smime_alg_ESDHwith3DES);
        }
    }




    static if(!is(typeof(NID_id_smime_alg_ESDHwith3DES))) {
        private enum enumMixinStr_NID_id_smime_alg_ESDHwith3DES = `enum NID_id_smime_alg_ESDHwith3DES = 241;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_alg_ESDHwith3DES); }))) {
            mixin(enumMixinStr_NID_id_smime_alg_ESDHwith3DES);
        }
    }




    static if(!is(typeof(SN_id_smime_alg_ESDHwith3DES))) {
        private enum enumMixinStr_SN_id_smime_alg_ESDHwith3DES = `enum SN_id_smime_alg_ESDHwith3DES = "id-smime-alg-ESDHwith3DES";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_alg_ESDHwith3DES); }))) {
            mixin(enumMixinStr_SN_id_smime_alg_ESDHwith3DES);
        }
    }




    static if(!is(typeof(OBJ_id_smime_aa_signingCertificateV2))) {
        private enum enumMixinStr_OBJ_id_smime_aa_signingCertificateV2 = `enum OBJ_id_smime_aa_signingCertificateV2 = OBJ_id_smime_aa , 47L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_aa_signingCertificateV2); }))) {
            mixin(enumMixinStr_OBJ_id_smime_aa_signingCertificateV2);
        }
    }




    static if(!is(typeof(NID_id_smime_aa_signingCertificateV2))) {
        private enum enumMixinStr_NID_id_smime_aa_signingCertificateV2 = `enum NID_id_smime_aa_signingCertificateV2 = 1086;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_aa_signingCertificateV2); }))) {
            mixin(enumMixinStr_NID_id_smime_aa_signingCertificateV2);
        }
    }




    static if(!is(typeof(SN_id_smime_aa_signingCertificateV2))) {
        private enum enumMixinStr_SN_id_smime_aa_signingCertificateV2 = `enum SN_id_smime_aa_signingCertificateV2 = "id-smime-aa-signingCertificateV2";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_aa_signingCertificateV2); }))) {
            mixin(enumMixinStr_SN_id_smime_aa_signingCertificateV2);
        }
    }




    static if(!is(typeof(OBJ_id_smime_aa_dvcs_dvc))) {
        private enum enumMixinStr_OBJ_id_smime_aa_dvcs_dvc = `enum OBJ_id_smime_aa_dvcs_dvc = OBJ_id_smime_aa , 29L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_aa_dvcs_dvc); }))) {
            mixin(enumMixinStr_OBJ_id_smime_aa_dvcs_dvc);
        }
    }




    static if(!is(typeof(NID_id_smime_aa_dvcs_dvc))) {
        private enum enumMixinStr_NID_id_smime_aa_dvcs_dvc = `enum NID_id_smime_aa_dvcs_dvc = 240;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_aa_dvcs_dvc); }))) {
            mixin(enumMixinStr_NID_id_smime_aa_dvcs_dvc);
        }
    }




    static if(!is(typeof(SN_id_smime_aa_dvcs_dvc))) {
        private enum enumMixinStr_SN_id_smime_aa_dvcs_dvc = `enum SN_id_smime_aa_dvcs_dvc = "id-smime-aa-dvcs-dvc";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_aa_dvcs_dvc); }))) {
            mixin(enumMixinStr_SN_id_smime_aa_dvcs_dvc);
        }
    }




    static if(!is(typeof(OBJ_id_smime_aa_signatureType))) {
        private enum enumMixinStr_OBJ_id_smime_aa_signatureType = `enum OBJ_id_smime_aa_signatureType = OBJ_id_smime_aa , 28L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_aa_signatureType); }))) {
            mixin(enumMixinStr_OBJ_id_smime_aa_signatureType);
        }
    }




    static if(!is(typeof(NID_id_smime_aa_signatureType))) {
        private enum enumMixinStr_NID_id_smime_aa_signatureType = `enum NID_id_smime_aa_signatureType = 239;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_aa_signatureType); }))) {
            mixin(enumMixinStr_NID_id_smime_aa_signatureType);
        }
    }




    static if(!is(typeof(SN_id_smime_aa_signatureType))) {
        private enum enumMixinStr_SN_id_smime_aa_signatureType = `enum SN_id_smime_aa_signatureType = "id-smime-aa-signatureType";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_aa_signatureType); }))) {
            mixin(enumMixinStr_SN_id_smime_aa_signatureType);
        }
    }




    static if(!is(typeof(OBJ_id_smime_aa_ets_archiveTimeStamp))) {
        private enum enumMixinStr_OBJ_id_smime_aa_ets_archiveTimeStamp = `enum OBJ_id_smime_aa_ets_archiveTimeStamp = OBJ_id_smime_aa , 27L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_aa_ets_archiveTimeStamp); }))) {
            mixin(enumMixinStr_OBJ_id_smime_aa_ets_archiveTimeStamp);
        }
    }




    static if(!is(typeof(NID_id_smime_aa_ets_archiveTimeStamp))) {
        private enum enumMixinStr_NID_id_smime_aa_ets_archiveTimeStamp = `enum NID_id_smime_aa_ets_archiveTimeStamp = 238;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_aa_ets_archiveTimeStamp); }))) {
            mixin(enumMixinStr_NID_id_smime_aa_ets_archiveTimeStamp);
        }
    }




    static if(!is(typeof(SN_id_smime_aa_ets_archiveTimeStamp))) {
        private enum enumMixinStr_SN_id_smime_aa_ets_archiveTimeStamp = `enum SN_id_smime_aa_ets_archiveTimeStamp = "id-smime-aa-ets-archiveTimeStamp";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_aa_ets_archiveTimeStamp); }))) {
            mixin(enumMixinStr_SN_id_smime_aa_ets_archiveTimeStamp);
        }
    }




    static if(!is(typeof(OBJ_id_smime_aa_ets_certCRLTimestamp))) {
        private enum enumMixinStr_OBJ_id_smime_aa_ets_certCRLTimestamp = `enum OBJ_id_smime_aa_ets_certCRLTimestamp = OBJ_id_smime_aa , 26L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_aa_ets_certCRLTimestamp); }))) {
            mixin(enumMixinStr_OBJ_id_smime_aa_ets_certCRLTimestamp);
        }
    }




    static if(!is(typeof(NID_id_smime_aa_ets_certCRLTimestamp))) {
        private enum enumMixinStr_NID_id_smime_aa_ets_certCRLTimestamp = `enum NID_id_smime_aa_ets_certCRLTimestamp = 237;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_aa_ets_certCRLTimestamp); }))) {
            mixin(enumMixinStr_NID_id_smime_aa_ets_certCRLTimestamp);
        }
    }




    static if(!is(typeof(SN_id_smime_aa_ets_certCRLTimestamp))) {
        private enum enumMixinStr_SN_id_smime_aa_ets_certCRLTimestamp = `enum SN_id_smime_aa_ets_certCRLTimestamp = "id-smime-aa-ets-certCRLTimestamp";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_aa_ets_certCRLTimestamp); }))) {
            mixin(enumMixinStr_SN_id_smime_aa_ets_certCRLTimestamp);
        }
    }




    static if(!is(typeof(OBJ_id_smime_aa_ets_escTimeStamp))) {
        private enum enumMixinStr_OBJ_id_smime_aa_ets_escTimeStamp = `enum OBJ_id_smime_aa_ets_escTimeStamp = OBJ_id_smime_aa , 25L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_aa_ets_escTimeStamp); }))) {
            mixin(enumMixinStr_OBJ_id_smime_aa_ets_escTimeStamp);
        }
    }




    static if(!is(typeof(NID_id_smime_aa_ets_escTimeStamp))) {
        private enum enumMixinStr_NID_id_smime_aa_ets_escTimeStamp = `enum NID_id_smime_aa_ets_escTimeStamp = 236;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_aa_ets_escTimeStamp); }))) {
            mixin(enumMixinStr_NID_id_smime_aa_ets_escTimeStamp);
        }
    }




    static if(!is(typeof(SN_id_smime_aa_ets_escTimeStamp))) {
        private enum enumMixinStr_SN_id_smime_aa_ets_escTimeStamp = `enum SN_id_smime_aa_ets_escTimeStamp = "id-smime-aa-ets-escTimeStamp";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_aa_ets_escTimeStamp); }))) {
            mixin(enumMixinStr_SN_id_smime_aa_ets_escTimeStamp);
        }
    }




    static if(!is(typeof(OBJ_id_smime_aa_ets_revocationValues))) {
        private enum enumMixinStr_OBJ_id_smime_aa_ets_revocationValues = `enum OBJ_id_smime_aa_ets_revocationValues = OBJ_id_smime_aa , 24L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_aa_ets_revocationValues); }))) {
            mixin(enumMixinStr_OBJ_id_smime_aa_ets_revocationValues);
        }
    }




    static if(!is(typeof(NID_id_smime_aa_ets_revocationValues))) {
        private enum enumMixinStr_NID_id_smime_aa_ets_revocationValues = `enum NID_id_smime_aa_ets_revocationValues = 235;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_aa_ets_revocationValues); }))) {
            mixin(enumMixinStr_NID_id_smime_aa_ets_revocationValues);
        }
    }




    static if(!is(typeof(SN_id_smime_aa_ets_revocationValues))) {
        private enum enumMixinStr_SN_id_smime_aa_ets_revocationValues = `enum SN_id_smime_aa_ets_revocationValues = "id-smime-aa-ets-revocationValues";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_aa_ets_revocationValues); }))) {
            mixin(enumMixinStr_SN_id_smime_aa_ets_revocationValues);
        }
    }




    static if(!is(typeof(OBJ_id_smime_aa_ets_certValues))) {
        private enum enumMixinStr_OBJ_id_smime_aa_ets_certValues = `enum OBJ_id_smime_aa_ets_certValues = OBJ_id_smime_aa , 23L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_aa_ets_certValues); }))) {
            mixin(enumMixinStr_OBJ_id_smime_aa_ets_certValues);
        }
    }




    static if(!is(typeof(NID_id_smime_aa_ets_certValues))) {
        private enum enumMixinStr_NID_id_smime_aa_ets_certValues = `enum NID_id_smime_aa_ets_certValues = 234;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_aa_ets_certValues); }))) {
            mixin(enumMixinStr_NID_id_smime_aa_ets_certValues);
        }
    }




    static if(!is(typeof(SN_id_smime_aa_ets_certValues))) {
        private enum enumMixinStr_SN_id_smime_aa_ets_certValues = `enum SN_id_smime_aa_ets_certValues = "id-smime-aa-ets-certValues";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_aa_ets_certValues); }))) {
            mixin(enumMixinStr_SN_id_smime_aa_ets_certValues);
        }
    }




    static if(!is(typeof(OBJ_id_smime_aa_ets_RevocationRefs))) {
        private enum enumMixinStr_OBJ_id_smime_aa_ets_RevocationRefs = `enum OBJ_id_smime_aa_ets_RevocationRefs = OBJ_id_smime_aa , 22L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_aa_ets_RevocationRefs); }))) {
            mixin(enumMixinStr_OBJ_id_smime_aa_ets_RevocationRefs);
        }
    }




    static if(!is(typeof(NID_id_smime_aa_ets_RevocationRefs))) {
        private enum enumMixinStr_NID_id_smime_aa_ets_RevocationRefs = `enum NID_id_smime_aa_ets_RevocationRefs = 233;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_aa_ets_RevocationRefs); }))) {
            mixin(enumMixinStr_NID_id_smime_aa_ets_RevocationRefs);
        }
    }




    static if(!is(typeof(SN_id_smime_aa_ets_RevocationRefs))) {
        private enum enumMixinStr_SN_id_smime_aa_ets_RevocationRefs = `enum SN_id_smime_aa_ets_RevocationRefs = "id-smime-aa-ets-RevocationRefs";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_aa_ets_RevocationRefs); }))) {
            mixin(enumMixinStr_SN_id_smime_aa_ets_RevocationRefs);
        }
    }




    static if(!is(typeof(OBJ_id_smime_aa_ets_CertificateRefs))) {
        private enum enumMixinStr_OBJ_id_smime_aa_ets_CertificateRefs = `enum OBJ_id_smime_aa_ets_CertificateRefs = OBJ_id_smime_aa , 21L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_aa_ets_CertificateRefs); }))) {
            mixin(enumMixinStr_OBJ_id_smime_aa_ets_CertificateRefs);
        }
    }




    static if(!is(typeof(NID_id_smime_aa_ets_CertificateRefs))) {
        private enum enumMixinStr_NID_id_smime_aa_ets_CertificateRefs = `enum NID_id_smime_aa_ets_CertificateRefs = 232;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_aa_ets_CertificateRefs); }))) {
            mixin(enumMixinStr_NID_id_smime_aa_ets_CertificateRefs);
        }
    }




    static if(!is(typeof(SN_id_smime_aa_ets_CertificateRefs))) {
        private enum enumMixinStr_SN_id_smime_aa_ets_CertificateRefs = `enum SN_id_smime_aa_ets_CertificateRefs = "id-smime-aa-ets-CertificateRefs";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_aa_ets_CertificateRefs); }))) {
            mixin(enumMixinStr_SN_id_smime_aa_ets_CertificateRefs);
        }
    }




    static if(!is(typeof(OBJ_id_smime_aa_ets_contentTimestamp))) {
        private enum enumMixinStr_OBJ_id_smime_aa_ets_contentTimestamp = `enum OBJ_id_smime_aa_ets_contentTimestamp = OBJ_id_smime_aa , 20L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_aa_ets_contentTimestamp); }))) {
            mixin(enumMixinStr_OBJ_id_smime_aa_ets_contentTimestamp);
        }
    }




    static if(!is(typeof(NID_id_smime_aa_ets_contentTimestamp))) {
        private enum enumMixinStr_NID_id_smime_aa_ets_contentTimestamp = `enum NID_id_smime_aa_ets_contentTimestamp = 231;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_aa_ets_contentTimestamp); }))) {
            mixin(enumMixinStr_NID_id_smime_aa_ets_contentTimestamp);
        }
    }




    static if(!is(typeof(SN_id_smime_aa_ets_contentTimestamp))) {
        private enum enumMixinStr_SN_id_smime_aa_ets_contentTimestamp = `enum SN_id_smime_aa_ets_contentTimestamp = "id-smime-aa-ets-contentTimestamp";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_aa_ets_contentTimestamp); }))) {
            mixin(enumMixinStr_SN_id_smime_aa_ets_contentTimestamp);
        }
    }




    static if(!is(typeof(OBJ_id_smime_aa_ets_otherSigCert))) {
        private enum enumMixinStr_OBJ_id_smime_aa_ets_otherSigCert = `enum OBJ_id_smime_aa_ets_otherSigCert = OBJ_id_smime_aa , 19L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_aa_ets_otherSigCert); }))) {
            mixin(enumMixinStr_OBJ_id_smime_aa_ets_otherSigCert);
        }
    }




    static if(!is(typeof(NID_id_smime_aa_ets_otherSigCert))) {
        private enum enumMixinStr_NID_id_smime_aa_ets_otherSigCert = `enum NID_id_smime_aa_ets_otherSigCert = 230;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_aa_ets_otherSigCert); }))) {
            mixin(enumMixinStr_NID_id_smime_aa_ets_otherSigCert);
        }
    }




    static if(!is(typeof(SN_id_smime_aa_ets_otherSigCert))) {
        private enum enumMixinStr_SN_id_smime_aa_ets_otherSigCert = `enum SN_id_smime_aa_ets_otherSigCert = "id-smime-aa-ets-otherSigCert";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_aa_ets_otherSigCert); }))) {
            mixin(enumMixinStr_SN_id_smime_aa_ets_otherSigCert);
        }
    }




    static if(!is(typeof(OBJ_id_smime_aa_ets_signerAttr))) {
        private enum enumMixinStr_OBJ_id_smime_aa_ets_signerAttr = `enum OBJ_id_smime_aa_ets_signerAttr = OBJ_id_smime_aa , 18L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_aa_ets_signerAttr); }))) {
            mixin(enumMixinStr_OBJ_id_smime_aa_ets_signerAttr);
        }
    }




    static if(!is(typeof(NID_id_smime_aa_ets_signerAttr))) {
        private enum enumMixinStr_NID_id_smime_aa_ets_signerAttr = `enum NID_id_smime_aa_ets_signerAttr = 229;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_aa_ets_signerAttr); }))) {
            mixin(enumMixinStr_NID_id_smime_aa_ets_signerAttr);
        }
    }




    static if(!is(typeof(SN_id_smime_aa_ets_signerAttr))) {
        private enum enumMixinStr_SN_id_smime_aa_ets_signerAttr = `enum SN_id_smime_aa_ets_signerAttr = "id-smime-aa-ets-signerAttr";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_aa_ets_signerAttr); }))) {
            mixin(enumMixinStr_SN_id_smime_aa_ets_signerAttr);
        }
    }




    static if(!is(typeof(OBJ_id_smime_aa_ets_signerLocation))) {
        private enum enumMixinStr_OBJ_id_smime_aa_ets_signerLocation = `enum OBJ_id_smime_aa_ets_signerLocation = OBJ_id_smime_aa , 17L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_aa_ets_signerLocation); }))) {
            mixin(enumMixinStr_OBJ_id_smime_aa_ets_signerLocation);
        }
    }




    static if(!is(typeof(NID_id_smime_aa_ets_signerLocation))) {
        private enum enumMixinStr_NID_id_smime_aa_ets_signerLocation = `enum NID_id_smime_aa_ets_signerLocation = 228;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_aa_ets_signerLocation); }))) {
            mixin(enumMixinStr_NID_id_smime_aa_ets_signerLocation);
        }
    }




    static if(!is(typeof(SN_id_smime_aa_ets_signerLocation))) {
        private enum enumMixinStr_SN_id_smime_aa_ets_signerLocation = `enum SN_id_smime_aa_ets_signerLocation = "id-smime-aa-ets-signerLocation";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_aa_ets_signerLocation); }))) {
            mixin(enumMixinStr_SN_id_smime_aa_ets_signerLocation);
        }
    }




    static if(!is(typeof(OBJ_id_smime_aa_ets_commitmentType))) {
        private enum enumMixinStr_OBJ_id_smime_aa_ets_commitmentType = `enum OBJ_id_smime_aa_ets_commitmentType = OBJ_id_smime_aa , 16L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_aa_ets_commitmentType); }))) {
            mixin(enumMixinStr_OBJ_id_smime_aa_ets_commitmentType);
        }
    }




    static if(!is(typeof(NID_id_smime_aa_ets_commitmentType))) {
        private enum enumMixinStr_NID_id_smime_aa_ets_commitmentType = `enum NID_id_smime_aa_ets_commitmentType = 227;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_aa_ets_commitmentType); }))) {
            mixin(enumMixinStr_NID_id_smime_aa_ets_commitmentType);
        }
    }




    static if(!is(typeof(SN_id_smime_aa_ets_commitmentType))) {
        private enum enumMixinStr_SN_id_smime_aa_ets_commitmentType = `enum SN_id_smime_aa_ets_commitmentType = "id-smime-aa-ets-commitmentType";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_aa_ets_commitmentType); }))) {
            mixin(enumMixinStr_SN_id_smime_aa_ets_commitmentType);
        }
    }




    static if(!is(typeof(OBJ_id_smime_aa_ets_sigPolicyId))) {
        private enum enumMixinStr_OBJ_id_smime_aa_ets_sigPolicyId = `enum OBJ_id_smime_aa_ets_sigPolicyId = OBJ_id_smime_aa , 15L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_aa_ets_sigPolicyId); }))) {
            mixin(enumMixinStr_OBJ_id_smime_aa_ets_sigPolicyId);
        }
    }




    static if(!is(typeof(NID_id_smime_aa_ets_sigPolicyId))) {
        private enum enumMixinStr_NID_id_smime_aa_ets_sigPolicyId = `enum NID_id_smime_aa_ets_sigPolicyId = 226;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_aa_ets_sigPolicyId); }))) {
            mixin(enumMixinStr_NID_id_smime_aa_ets_sigPolicyId);
        }
    }




    static if(!is(typeof(SN_id_smime_aa_ets_sigPolicyId))) {
        private enum enumMixinStr_SN_id_smime_aa_ets_sigPolicyId = `enum SN_id_smime_aa_ets_sigPolicyId = "id-smime-aa-ets-sigPolicyId";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_aa_ets_sigPolicyId); }))) {
            mixin(enumMixinStr_SN_id_smime_aa_ets_sigPolicyId);
        }
    }




    static if(!is(typeof(OBJ_id_smime_aa_timeStampToken))) {
        private enum enumMixinStr_OBJ_id_smime_aa_timeStampToken = `enum OBJ_id_smime_aa_timeStampToken = OBJ_id_smime_aa , 14L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_aa_timeStampToken); }))) {
            mixin(enumMixinStr_OBJ_id_smime_aa_timeStampToken);
        }
    }




    static if(!is(typeof(NID_id_smime_aa_timeStampToken))) {
        private enum enumMixinStr_NID_id_smime_aa_timeStampToken = `enum NID_id_smime_aa_timeStampToken = 225;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_aa_timeStampToken); }))) {
            mixin(enumMixinStr_NID_id_smime_aa_timeStampToken);
        }
    }




    static if(!is(typeof(SN_id_smime_aa_timeStampToken))) {
        private enum enumMixinStr_SN_id_smime_aa_timeStampToken = `enum SN_id_smime_aa_timeStampToken = "id-smime-aa-timeStampToken";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_aa_timeStampToken); }))) {
            mixin(enumMixinStr_SN_id_smime_aa_timeStampToken);
        }
    }




    static if(!is(typeof(OBJ_id_smime_aa_smimeEncryptCerts))) {
        private enum enumMixinStr_OBJ_id_smime_aa_smimeEncryptCerts = `enum OBJ_id_smime_aa_smimeEncryptCerts = OBJ_id_smime_aa , 13L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_aa_smimeEncryptCerts); }))) {
            mixin(enumMixinStr_OBJ_id_smime_aa_smimeEncryptCerts);
        }
    }




    static if(!is(typeof(NID_id_smime_aa_smimeEncryptCerts))) {
        private enum enumMixinStr_NID_id_smime_aa_smimeEncryptCerts = `enum NID_id_smime_aa_smimeEncryptCerts = 224;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_aa_smimeEncryptCerts); }))) {
            mixin(enumMixinStr_NID_id_smime_aa_smimeEncryptCerts);
        }
    }




    static if(!is(typeof(SN_id_smime_aa_smimeEncryptCerts))) {
        private enum enumMixinStr_SN_id_smime_aa_smimeEncryptCerts = `enum SN_id_smime_aa_smimeEncryptCerts = "id-smime-aa-smimeEncryptCerts";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_aa_smimeEncryptCerts); }))) {
            mixin(enumMixinStr_SN_id_smime_aa_smimeEncryptCerts);
        }
    }




    static if(!is(typeof(OBJ_id_smime_aa_signingCertificate))) {
        private enum enumMixinStr_OBJ_id_smime_aa_signingCertificate = `enum OBJ_id_smime_aa_signingCertificate = OBJ_id_smime_aa , 12L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_aa_signingCertificate); }))) {
            mixin(enumMixinStr_OBJ_id_smime_aa_signingCertificate);
        }
    }




    static if(!is(typeof(NID_id_smime_aa_signingCertificate))) {
        private enum enumMixinStr_NID_id_smime_aa_signingCertificate = `enum NID_id_smime_aa_signingCertificate = 223;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_aa_signingCertificate); }))) {
            mixin(enumMixinStr_NID_id_smime_aa_signingCertificate);
        }
    }




    static if(!is(typeof(SN_id_smime_aa_signingCertificate))) {
        private enum enumMixinStr_SN_id_smime_aa_signingCertificate = `enum SN_id_smime_aa_signingCertificate = "id-smime-aa-signingCertificate";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_aa_signingCertificate); }))) {
            mixin(enumMixinStr_SN_id_smime_aa_signingCertificate);
        }
    }




    static if(!is(typeof(OBJ_id_smime_aa_encrypKeyPref))) {
        private enum enumMixinStr_OBJ_id_smime_aa_encrypKeyPref = `enum OBJ_id_smime_aa_encrypKeyPref = OBJ_id_smime_aa , 11L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_aa_encrypKeyPref); }))) {
            mixin(enumMixinStr_OBJ_id_smime_aa_encrypKeyPref);
        }
    }






    static if(!is(typeof(NID_id_smime_aa_encrypKeyPref))) {
        private enum enumMixinStr_NID_id_smime_aa_encrypKeyPref = `enum NID_id_smime_aa_encrypKeyPref = 222;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_aa_encrypKeyPref); }))) {
            mixin(enumMixinStr_NID_id_smime_aa_encrypKeyPref);
        }
    }




    static if(!is(typeof(SN_id_smime_aa_encrypKeyPref))) {
        private enum enumMixinStr_SN_id_smime_aa_encrypKeyPref = `enum SN_id_smime_aa_encrypKeyPref = "id-smime-aa-encrypKeyPref";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_aa_encrypKeyPref); }))) {
            mixin(enumMixinStr_SN_id_smime_aa_encrypKeyPref);
        }
    }




    static if(!is(typeof(OBJ_id_smime_aa_contentReference))) {
        private enum enumMixinStr_OBJ_id_smime_aa_contentReference = `enum OBJ_id_smime_aa_contentReference = OBJ_id_smime_aa , 10L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_aa_contentReference); }))) {
            mixin(enumMixinStr_OBJ_id_smime_aa_contentReference);
        }
    }




    static if(!is(typeof(NID_id_smime_aa_contentReference))) {
        private enum enumMixinStr_NID_id_smime_aa_contentReference = `enum NID_id_smime_aa_contentReference = 221;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_aa_contentReference); }))) {
            mixin(enumMixinStr_NID_id_smime_aa_contentReference);
        }
    }




    static if(!is(typeof(RSA_FLAG_FIPS_METHOD))) {
        private enum enumMixinStr_RSA_FLAG_FIPS_METHOD = `enum RSA_FLAG_FIPS_METHOD = 0x0400;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_FLAG_FIPS_METHOD); }))) {
            mixin(enumMixinStr_RSA_FLAG_FIPS_METHOD);
        }
    }




    static if(!is(typeof(RSA_FLAG_NON_FIPS_ALLOW))) {
        private enum enumMixinStr_RSA_FLAG_NON_FIPS_ALLOW = `enum RSA_FLAG_NON_FIPS_ALLOW = 0x0400;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_FLAG_NON_FIPS_ALLOW); }))) {
            mixin(enumMixinStr_RSA_FLAG_NON_FIPS_ALLOW);
        }
    }




    static if(!is(typeof(RSA_FLAG_CHECKED))) {
        private enum enumMixinStr_RSA_FLAG_CHECKED = `enum RSA_FLAG_CHECKED = 0x0800;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_FLAG_CHECKED); }))) {
            mixin(enumMixinStr_RSA_FLAG_CHECKED);
        }
    }




    static if(!is(typeof(SN_id_smime_aa_contentReference))) {
        private enum enumMixinStr_SN_id_smime_aa_contentReference = `enum SN_id_smime_aa_contentReference = "id-smime-aa-contentReference";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_aa_contentReference); }))) {
            mixin(enumMixinStr_SN_id_smime_aa_contentReference);
        }
    }




    static if(!is(typeof(OBJ_id_smime_aa_equivalentLabels))) {
        private enum enumMixinStr_OBJ_id_smime_aa_equivalentLabels = `enum OBJ_id_smime_aa_equivalentLabels = OBJ_id_smime_aa , 9L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_aa_equivalentLabels); }))) {
            mixin(enumMixinStr_OBJ_id_smime_aa_equivalentLabels);
        }
    }




    static if(!is(typeof(NID_id_smime_aa_equivalentLabels))) {
        private enum enumMixinStr_NID_id_smime_aa_equivalentLabels = `enum NID_id_smime_aa_equivalentLabels = 220;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_aa_equivalentLabels); }))) {
            mixin(enumMixinStr_NID_id_smime_aa_equivalentLabels);
        }
    }




    static if(!is(typeof(SN_id_smime_aa_equivalentLabels))) {
        private enum enumMixinStr_SN_id_smime_aa_equivalentLabels = `enum SN_id_smime_aa_equivalentLabels = "id-smime-aa-equivalentLabels";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_aa_equivalentLabels); }))) {
            mixin(enumMixinStr_SN_id_smime_aa_equivalentLabels);
        }
    }




    static if(!is(typeof(OBJ_id_smime_aa_macValue))) {
        private enum enumMixinStr_OBJ_id_smime_aa_macValue = `enum OBJ_id_smime_aa_macValue = OBJ_id_smime_aa , 8L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_aa_macValue); }))) {
            mixin(enumMixinStr_OBJ_id_smime_aa_macValue);
        }
    }




    static if(!is(typeof(NID_id_smime_aa_macValue))) {
        private enum enumMixinStr_NID_id_smime_aa_macValue = `enum NID_id_smime_aa_macValue = 219;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_aa_macValue); }))) {
            mixin(enumMixinStr_NID_id_smime_aa_macValue);
        }
    }




    static if(!is(typeof(SN_id_smime_aa_macValue))) {
        private enum enumMixinStr_SN_id_smime_aa_macValue = `enum SN_id_smime_aa_macValue = "id-smime-aa-macValue";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_aa_macValue); }))) {
            mixin(enumMixinStr_SN_id_smime_aa_macValue);
        }
    }




    static if(!is(typeof(OBJ_id_smime_aa_contentIdentifier))) {
        private enum enumMixinStr_OBJ_id_smime_aa_contentIdentifier = `enum OBJ_id_smime_aa_contentIdentifier = OBJ_id_smime_aa , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_aa_contentIdentifier); }))) {
            mixin(enumMixinStr_OBJ_id_smime_aa_contentIdentifier);
        }
    }




    static if(!is(typeof(NID_id_smime_aa_contentIdentifier))) {
        private enum enumMixinStr_NID_id_smime_aa_contentIdentifier = `enum NID_id_smime_aa_contentIdentifier = 218;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_aa_contentIdentifier); }))) {
            mixin(enumMixinStr_NID_id_smime_aa_contentIdentifier);
        }
    }




    static if(!is(typeof(SN_id_smime_aa_contentIdentifier))) {
        private enum enumMixinStr_SN_id_smime_aa_contentIdentifier = `enum SN_id_smime_aa_contentIdentifier = "id-smime-aa-contentIdentifier";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_aa_contentIdentifier); }))) {
            mixin(enumMixinStr_SN_id_smime_aa_contentIdentifier);
        }
    }




    static if(!is(typeof(OBJ_id_smime_aa_encapContentType))) {
        private enum enumMixinStr_OBJ_id_smime_aa_encapContentType = `enum OBJ_id_smime_aa_encapContentType = OBJ_id_smime_aa , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_aa_encapContentType); }))) {
            mixin(enumMixinStr_OBJ_id_smime_aa_encapContentType);
        }
    }




    static if(!is(typeof(NID_id_smime_aa_encapContentType))) {
        private enum enumMixinStr_NID_id_smime_aa_encapContentType = `enum NID_id_smime_aa_encapContentType = 217;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_aa_encapContentType); }))) {
            mixin(enumMixinStr_NID_id_smime_aa_encapContentType);
        }
    }




    static if(!is(typeof(SN_id_smime_aa_encapContentType))) {
        private enum enumMixinStr_SN_id_smime_aa_encapContentType = `enum SN_id_smime_aa_encapContentType = "id-smime-aa-encapContentType";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_aa_encapContentType); }))) {
            mixin(enumMixinStr_SN_id_smime_aa_encapContentType);
        }
    }




    static if(!is(typeof(OBJ_id_smime_aa_msgSigDigest))) {
        private enum enumMixinStr_OBJ_id_smime_aa_msgSigDigest = `enum OBJ_id_smime_aa_msgSigDigest = OBJ_id_smime_aa , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_aa_msgSigDigest); }))) {
            mixin(enumMixinStr_OBJ_id_smime_aa_msgSigDigest);
        }
    }




    static if(!is(typeof(NID_id_smime_aa_msgSigDigest))) {
        private enum enumMixinStr_NID_id_smime_aa_msgSigDigest = `enum NID_id_smime_aa_msgSigDigest = 216;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_aa_msgSigDigest); }))) {
            mixin(enumMixinStr_NID_id_smime_aa_msgSigDigest);
        }
    }




    static if(!is(typeof(SN_id_smime_aa_msgSigDigest))) {
        private enum enumMixinStr_SN_id_smime_aa_msgSigDigest = `enum SN_id_smime_aa_msgSigDigest = "id-smime-aa-msgSigDigest";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_aa_msgSigDigest); }))) {
            mixin(enumMixinStr_SN_id_smime_aa_msgSigDigest);
        }
    }




    static if(!is(typeof(OBJ_id_smime_aa_contentHint))) {
        private enum enumMixinStr_OBJ_id_smime_aa_contentHint = `enum OBJ_id_smime_aa_contentHint = OBJ_id_smime_aa , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_aa_contentHint); }))) {
            mixin(enumMixinStr_OBJ_id_smime_aa_contentHint);
        }
    }




    static if(!is(typeof(NID_id_smime_aa_contentHint))) {
        private enum enumMixinStr_NID_id_smime_aa_contentHint = `enum NID_id_smime_aa_contentHint = 215;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_aa_contentHint); }))) {
            mixin(enumMixinStr_NID_id_smime_aa_contentHint);
        }
    }




    static if(!is(typeof(SN_id_smime_aa_contentHint))) {
        private enum enumMixinStr_SN_id_smime_aa_contentHint = `enum SN_id_smime_aa_contentHint = "id-smime-aa-contentHint";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_aa_contentHint); }))) {
            mixin(enumMixinStr_SN_id_smime_aa_contentHint);
        }
    }




    static if(!is(typeof(OBJ_id_smime_aa_mlExpandHistory))) {
        private enum enumMixinStr_OBJ_id_smime_aa_mlExpandHistory = `enum OBJ_id_smime_aa_mlExpandHistory = OBJ_id_smime_aa , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_aa_mlExpandHistory); }))) {
            mixin(enumMixinStr_OBJ_id_smime_aa_mlExpandHistory);
        }
    }




    static if(!is(typeof(NID_id_smime_aa_mlExpandHistory))) {
        private enum enumMixinStr_NID_id_smime_aa_mlExpandHistory = `enum NID_id_smime_aa_mlExpandHistory = 214;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_aa_mlExpandHistory); }))) {
            mixin(enumMixinStr_NID_id_smime_aa_mlExpandHistory);
        }
    }




    static if(!is(typeof(SN_id_smime_aa_mlExpandHistory))) {
        private enum enumMixinStr_SN_id_smime_aa_mlExpandHistory = `enum SN_id_smime_aa_mlExpandHistory = "id-smime-aa-mlExpandHistory";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_aa_mlExpandHistory); }))) {
            mixin(enumMixinStr_SN_id_smime_aa_mlExpandHistory);
        }
    }




    static if(!is(typeof(OBJ_id_smime_aa_securityLabel))) {
        private enum enumMixinStr_OBJ_id_smime_aa_securityLabel = `enum OBJ_id_smime_aa_securityLabel = OBJ_id_smime_aa , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_aa_securityLabel); }))) {
            mixin(enumMixinStr_OBJ_id_smime_aa_securityLabel);
        }
    }




    static if(!is(typeof(NID_id_smime_aa_securityLabel))) {
        private enum enumMixinStr_NID_id_smime_aa_securityLabel = `enum NID_id_smime_aa_securityLabel = 213;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_aa_securityLabel); }))) {
            mixin(enumMixinStr_NID_id_smime_aa_securityLabel);
        }
    }




    static if(!is(typeof(SN_id_smime_aa_securityLabel))) {
        private enum enumMixinStr_SN_id_smime_aa_securityLabel = `enum SN_id_smime_aa_securityLabel = "id-smime-aa-securityLabel";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_aa_securityLabel); }))) {
            mixin(enumMixinStr_SN_id_smime_aa_securityLabel);
        }
    }




    static if(!is(typeof(OBJ_id_smime_aa_receiptRequest))) {
        private enum enumMixinStr_OBJ_id_smime_aa_receiptRequest = `enum OBJ_id_smime_aa_receiptRequest = OBJ_id_smime_aa , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_aa_receiptRequest); }))) {
            mixin(enumMixinStr_OBJ_id_smime_aa_receiptRequest);
        }
    }




    static if(!is(typeof(NID_id_smime_aa_receiptRequest))) {
        private enum enumMixinStr_NID_id_smime_aa_receiptRequest = `enum NID_id_smime_aa_receiptRequest = 212;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_aa_receiptRequest); }))) {
            mixin(enumMixinStr_NID_id_smime_aa_receiptRequest);
        }
    }




    static if(!is(typeof(SN_id_smime_aa_receiptRequest))) {
        private enum enumMixinStr_SN_id_smime_aa_receiptRequest = `enum SN_id_smime_aa_receiptRequest = "id-smime-aa-receiptRequest";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_aa_receiptRequest); }))) {
            mixin(enumMixinStr_SN_id_smime_aa_receiptRequest);
        }
    }




    static if(!is(typeof(OBJ_id_ct_xml))) {
        private enum enumMixinStr_OBJ_id_ct_xml = `enum OBJ_id_ct_xml = OBJ_id_smime_ct , 28L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_ct_xml); }))) {
            mixin(enumMixinStr_OBJ_id_ct_xml);
        }
    }




    static if(!is(typeof(NID_id_ct_xml))) {
        private enum enumMixinStr_NID_id_ct_xml = `enum NID_id_ct_xml = 1060;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_ct_xml); }))) {
            mixin(enumMixinStr_NID_id_ct_xml);
        }
    }




    static if(!is(typeof(SN_id_ct_xml))) {
        private enum enumMixinStr_SN_id_ct_xml = `enum SN_id_ct_xml = "id-ct-xml";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_ct_xml); }))) {
            mixin(enumMixinStr_SN_id_ct_xml);
        }
    }




    static if(!is(typeof(OBJ_id_ct_asciiTextWithCRLF))) {
        private enum enumMixinStr_OBJ_id_ct_asciiTextWithCRLF = `enum OBJ_id_ct_asciiTextWithCRLF = OBJ_id_smime_ct , 27L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_ct_asciiTextWithCRLF); }))) {
            mixin(enumMixinStr_OBJ_id_ct_asciiTextWithCRLF);
        }
    }




    static if(!is(typeof(NID_id_ct_asciiTextWithCRLF))) {
        private enum enumMixinStr_NID_id_ct_asciiTextWithCRLF = `enum NID_id_ct_asciiTextWithCRLF = 787;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_ct_asciiTextWithCRLF); }))) {
            mixin(enumMixinStr_NID_id_ct_asciiTextWithCRLF);
        }
    }






    static if(!is(typeof(SN_id_ct_asciiTextWithCRLF))) {
        private enum enumMixinStr_SN_id_ct_asciiTextWithCRLF = `enum SN_id_ct_asciiTextWithCRLF = "id-ct-asciiTextWithCRLF";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_ct_asciiTextWithCRLF); }))) {
            mixin(enumMixinStr_SN_id_ct_asciiTextWithCRLF);
        }
    }




    static if(!is(typeof(OBJ_id_smime_ct_authEnvelopedData))) {
        private enum enumMixinStr_OBJ_id_smime_ct_authEnvelopedData = `enum OBJ_id_smime_ct_authEnvelopedData = OBJ_id_smime_ct , 23L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_ct_authEnvelopedData); }))) {
            mixin(enumMixinStr_OBJ_id_smime_ct_authEnvelopedData);
        }
    }




    static if(!is(typeof(RSA_F_CHECK_PADDING_MD))) {
        private enum enumMixinStr_RSA_F_CHECK_PADDING_MD = `enum RSA_F_CHECK_PADDING_MD = 140;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_CHECK_PADDING_MD); }))) {
            mixin(enumMixinStr_RSA_F_CHECK_PADDING_MD);
        }
    }




    static if(!is(typeof(RSA_F_ENCODE_PKCS1))) {
        private enum enumMixinStr_RSA_F_ENCODE_PKCS1 = `enum RSA_F_ENCODE_PKCS1 = 146;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_ENCODE_PKCS1); }))) {
            mixin(enumMixinStr_RSA_F_ENCODE_PKCS1);
        }
    }




    static if(!is(typeof(RSA_F_INT_RSA_VERIFY))) {
        private enum enumMixinStr_RSA_F_INT_RSA_VERIFY = `enum RSA_F_INT_RSA_VERIFY = 145;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_INT_RSA_VERIFY); }))) {
            mixin(enumMixinStr_RSA_F_INT_RSA_VERIFY);
        }
    }




    static if(!is(typeof(RSA_F_OLD_RSA_PRIV_DECODE))) {
        private enum enumMixinStr_RSA_F_OLD_RSA_PRIV_DECODE = `enum RSA_F_OLD_RSA_PRIV_DECODE = 147;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_OLD_RSA_PRIV_DECODE); }))) {
            mixin(enumMixinStr_RSA_F_OLD_RSA_PRIV_DECODE);
        }
    }




    static if(!is(typeof(RSA_F_PKEY_PSS_INIT))) {
        private enum enumMixinStr_RSA_F_PKEY_PSS_INIT = `enum RSA_F_PKEY_PSS_INIT = 165;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_PKEY_PSS_INIT); }))) {
            mixin(enumMixinStr_RSA_F_PKEY_PSS_INIT);
        }
    }




    static if(!is(typeof(RSA_F_PKEY_RSA_CTRL))) {
        private enum enumMixinStr_RSA_F_PKEY_RSA_CTRL = `enum RSA_F_PKEY_RSA_CTRL = 143;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_PKEY_RSA_CTRL); }))) {
            mixin(enumMixinStr_RSA_F_PKEY_RSA_CTRL);
        }
    }




    static if(!is(typeof(RSA_F_PKEY_RSA_CTRL_STR))) {
        private enum enumMixinStr_RSA_F_PKEY_RSA_CTRL_STR = `enum RSA_F_PKEY_RSA_CTRL_STR = 144;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_PKEY_RSA_CTRL_STR); }))) {
            mixin(enumMixinStr_RSA_F_PKEY_RSA_CTRL_STR);
        }
    }




    static if(!is(typeof(RSA_F_PKEY_RSA_SIGN))) {
        private enum enumMixinStr_RSA_F_PKEY_RSA_SIGN = `enum RSA_F_PKEY_RSA_SIGN = 142;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_PKEY_RSA_SIGN); }))) {
            mixin(enumMixinStr_RSA_F_PKEY_RSA_SIGN);
        }
    }




    static if(!is(typeof(RSA_F_PKEY_RSA_VERIFY))) {
        private enum enumMixinStr_RSA_F_PKEY_RSA_VERIFY = `enum RSA_F_PKEY_RSA_VERIFY = 149;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_PKEY_RSA_VERIFY); }))) {
            mixin(enumMixinStr_RSA_F_PKEY_RSA_VERIFY);
        }
    }




    static if(!is(typeof(RSA_F_PKEY_RSA_VERIFYRECOVER))) {
        private enum enumMixinStr_RSA_F_PKEY_RSA_VERIFYRECOVER = `enum RSA_F_PKEY_RSA_VERIFYRECOVER = 141;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_PKEY_RSA_VERIFYRECOVER); }))) {
            mixin(enumMixinStr_RSA_F_PKEY_RSA_VERIFYRECOVER);
        }
    }




    static if(!is(typeof(RSA_F_RSA_ALGOR_TO_MD))) {
        private enum enumMixinStr_RSA_F_RSA_ALGOR_TO_MD = `enum RSA_F_RSA_ALGOR_TO_MD = 156;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_ALGOR_TO_MD); }))) {
            mixin(enumMixinStr_RSA_F_RSA_ALGOR_TO_MD);
        }
    }




    static if(!is(typeof(RSA_F_RSA_BUILTIN_KEYGEN))) {
        private enum enumMixinStr_RSA_F_RSA_BUILTIN_KEYGEN = `enum RSA_F_RSA_BUILTIN_KEYGEN = 129;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_BUILTIN_KEYGEN); }))) {
            mixin(enumMixinStr_RSA_F_RSA_BUILTIN_KEYGEN);
        }
    }




    static if(!is(typeof(RSA_F_RSA_CHECK_KEY))) {
        private enum enumMixinStr_RSA_F_RSA_CHECK_KEY = `enum RSA_F_RSA_CHECK_KEY = 123;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_CHECK_KEY); }))) {
            mixin(enumMixinStr_RSA_F_RSA_CHECK_KEY);
        }
    }




    static if(!is(typeof(RSA_F_RSA_CHECK_KEY_EX))) {
        private enum enumMixinStr_RSA_F_RSA_CHECK_KEY_EX = `enum RSA_F_RSA_CHECK_KEY_EX = 160;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_CHECK_KEY_EX); }))) {
            mixin(enumMixinStr_RSA_F_RSA_CHECK_KEY_EX);
        }
    }




    static if(!is(typeof(RSA_F_RSA_CMS_DECRYPT))) {
        private enum enumMixinStr_RSA_F_RSA_CMS_DECRYPT = `enum RSA_F_RSA_CMS_DECRYPT = 159;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_CMS_DECRYPT); }))) {
            mixin(enumMixinStr_RSA_F_RSA_CMS_DECRYPT);
        }
    }




    static if(!is(typeof(RSA_F_RSA_CMS_VERIFY))) {
        private enum enumMixinStr_RSA_F_RSA_CMS_VERIFY = `enum RSA_F_RSA_CMS_VERIFY = 158;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_CMS_VERIFY); }))) {
            mixin(enumMixinStr_RSA_F_RSA_CMS_VERIFY);
        }
    }




    static if(!is(typeof(RSA_F_RSA_ITEM_VERIFY))) {
        private enum enumMixinStr_RSA_F_RSA_ITEM_VERIFY = `enum RSA_F_RSA_ITEM_VERIFY = 148;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_ITEM_VERIFY); }))) {
            mixin(enumMixinStr_RSA_F_RSA_ITEM_VERIFY);
        }
    }




    static if(!is(typeof(RSA_F_RSA_METH_DUP))) {
        private enum enumMixinStr_RSA_F_RSA_METH_DUP = `enum RSA_F_RSA_METH_DUP = 161;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_METH_DUP); }))) {
            mixin(enumMixinStr_RSA_F_RSA_METH_DUP);
        }
    }




    static if(!is(typeof(RSA_F_RSA_METH_NEW))) {
        private enum enumMixinStr_RSA_F_RSA_METH_NEW = `enum RSA_F_RSA_METH_NEW = 162;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_METH_NEW); }))) {
            mixin(enumMixinStr_RSA_F_RSA_METH_NEW);
        }
    }




    static if(!is(typeof(RSA_F_RSA_METH_SET1_NAME))) {
        private enum enumMixinStr_RSA_F_RSA_METH_SET1_NAME = `enum RSA_F_RSA_METH_SET1_NAME = 163;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_METH_SET1_NAME); }))) {
            mixin(enumMixinStr_RSA_F_RSA_METH_SET1_NAME);
        }
    }




    static if(!is(typeof(RSA_F_RSA_MGF1_TO_MD))) {
        private enum enumMixinStr_RSA_F_RSA_MGF1_TO_MD = `enum RSA_F_RSA_MGF1_TO_MD = 157;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_MGF1_TO_MD); }))) {
            mixin(enumMixinStr_RSA_F_RSA_MGF1_TO_MD);
        }
    }




    static if(!is(typeof(RSA_F_RSA_MULTIP_INFO_NEW))) {
        private enum enumMixinStr_RSA_F_RSA_MULTIP_INFO_NEW = `enum RSA_F_RSA_MULTIP_INFO_NEW = 166;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_MULTIP_INFO_NEW); }))) {
            mixin(enumMixinStr_RSA_F_RSA_MULTIP_INFO_NEW);
        }
    }




    static if(!is(typeof(RSA_F_RSA_NEW_METHOD))) {
        private enum enumMixinStr_RSA_F_RSA_NEW_METHOD = `enum RSA_F_RSA_NEW_METHOD = 106;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_NEW_METHOD); }))) {
            mixin(enumMixinStr_RSA_F_RSA_NEW_METHOD);
        }
    }




    static if(!is(typeof(RSA_F_RSA_NULL))) {
        private enum enumMixinStr_RSA_F_RSA_NULL = `enum RSA_F_RSA_NULL = 124;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_NULL); }))) {
            mixin(enumMixinStr_RSA_F_RSA_NULL);
        }
    }




    static if(!is(typeof(RSA_F_RSA_NULL_PRIVATE_DECRYPT))) {
        private enum enumMixinStr_RSA_F_RSA_NULL_PRIVATE_DECRYPT = `enum RSA_F_RSA_NULL_PRIVATE_DECRYPT = 132;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_NULL_PRIVATE_DECRYPT); }))) {
            mixin(enumMixinStr_RSA_F_RSA_NULL_PRIVATE_DECRYPT);
        }
    }




    static if(!is(typeof(RSA_F_RSA_NULL_PRIVATE_ENCRYPT))) {
        private enum enumMixinStr_RSA_F_RSA_NULL_PRIVATE_ENCRYPT = `enum RSA_F_RSA_NULL_PRIVATE_ENCRYPT = 133;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_NULL_PRIVATE_ENCRYPT); }))) {
            mixin(enumMixinStr_RSA_F_RSA_NULL_PRIVATE_ENCRYPT);
        }
    }




    static if(!is(typeof(RSA_F_RSA_NULL_PUBLIC_DECRYPT))) {
        private enum enumMixinStr_RSA_F_RSA_NULL_PUBLIC_DECRYPT = `enum RSA_F_RSA_NULL_PUBLIC_DECRYPT = 134;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_NULL_PUBLIC_DECRYPT); }))) {
            mixin(enumMixinStr_RSA_F_RSA_NULL_PUBLIC_DECRYPT);
        }
    }




    static if(!is(typeof(RSA_F_RSA_NULL_PUBLIC_ENCRYPT))) {
        private enum enumMixinStr_RSA_F_RSA_NULL_PUBLIC_ENCRYPT = `enum RSA_F_RSA_NULL_PUBLIC_ENCRYPT = 135;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_NULL_PUBLIC_ENCRYPT); }))) {
            mixin(enumMixinStr_RSA_F_RSA_NULL_PUBLIC_ENCRYPT);
        }
    }




    static if(!is(typeof(RSA_F_RSA_OSSL_PRIVATE_DECRYPT))) {
        private enum enumMixinStr_RSA_F_RSA_OSSL_PRIVATE_DECRYPT = `enum RSA_F_RSA_OSSL_PRIVATE_DECRYPT = 101;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_OSSL_PRIVATE_DECRYPT); }))) {
            mixin(enumMixinStr_RSA_F_RSA_OSSL_PRIVATE_DECRYPT);
        }
    }




    static if(!is(typeof(RSA_F_RSA_OSSL_PRIVATE_ENCRYPT))) {
        private enum enumMixinStr_RSA_F_RSA_OSSL_PRIVATE_ENCRYPT = `enum RSA_F_RSA_OSSL_PRIVATE_ENCRYPT = 102;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_OSSL_PRIVATE_ENCRYPT); }))) {
            mixin(enumMixinStr_RSA_F_RSA_OSSL_PRIVATE_ENCRYPT);
        }
    }




    static if(!is(typeof(RSA_F_RSA_OSSL_PUBLIC_DECRYPT))) {
        private enum enumMixinStr_RSA_F_RSA_OSSL_PUBLIC_DECRYPT = `enum RSA_F_RSA_OSSL_PUBLIC_DECRYPT = 103;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_OSSL_PUBLIC_DECRYPT); }))) {
            mixin(enumMixinStr_RSA_F_RSA_OSSL_PUBLIC_DECRYPT);
        }
    }




    static if(!is(typeof(RSA_F_RSA_OSSL_PUBLIC_ENCRYPT))) {
        private enum enumMixinStr_RSA_F_RSA_OSSL_PUBLIC_ENCRYPT = `enum RSA_F_RSA_OSSL_PUBLIC_ENCRYPT = 104;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_OSSL_PUBLIC_ENCRYPT); }))) {
            mixin(enumMixinStr_RSA_F_RSA_OSSL_PUBLIC_ENCRYPT);
        }
    }




    static if(!is(typeof(RSA_F_RSA_PADDING_ADD_NONE))) {
        private enum enumMixinStr_RSA_F_RSA_PADDING_ADD_NONE = `enum RSA_F_RSA_PADDING_ADD_NONE = 107;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_PADDING_ADD_NONE); }))) {
            mixin(enumMixinStr_RSA_F_RSA_PADDING_ADD_NONE);
        }
    }




    static if(!is(typeof(RSA_F_RSA_PADDING_ADD_PKCS1_OAEP))) {
        private enum enumMixinStr_RSA_F_RSA_PADDING_ADD_PKCS1_OAEP = `enum RSA_F_RSA_PADDING_ADD_PKCS1_OAEP = 121;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_PADDING_ADD_PKCS1_OAEP); }))) {
            mixin(enumMixinStr_RSA_F_RSA_PADDING_ADD_PKCS1_OAEP);
        }
    }




    static if(!is(typeof(RSA_F_RSA_PADDING_ADD_PKCS1_OAEP_MGF1))) {
        private enum enumMixinStr_RSA_F_RSA_PADDING_ADD_PKCS1_OAEP_MGF1 = `enum RSA_F_RSA_PADDING_ADD_PKCS1_OAEP_MGF1 = 154;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_PADDING_ADD_PKCS1_OAEP_MGF1); }))) {
            mixin(enumMixinStr_RSA_F_RSA_PADDING_ADD_PKCS1_OAEP_MGF1);
        }
    }




    static if(!is(typeof(RSA_F_RSA_PADDING_ADD_PKCS1_PSS))) {
        private enum enumMixinStr_RSA_F_RSA_PADDING_ADD_PKCS1_PSS = `enum RSA_F_RSA_PADDING_ADD_PKCS1_PSS = 125;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_PADDING_ADD_PKCS1_PSS); }))) {
            mixin(enumMixinStr_RSA_F_RSA_PADDING_ADD_PKCS1_PSS);
        }
    }




    static if(!is(typeof(RSA_F_RSA_PADDING_ADD_PKCS1_PSS_MGF1))) {
        private enum enumMixinStr_RSA_F_RSA_PADDING_ADD_PKCS1_PSS_MGF1 = `enum RSA_F_RSA_PADDING_ADD_PKCS1_PSS_MGF1 = 152;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_PADDING_ADD_PKCS1_PSS_MGF1); }))) {
            mixin(enumMixinStr_RSA_F_RSA_PADDING_ADD_PKCS1_PSS_MGF1);
        }
    }




    static if(!is(typeof(RSA_F_RSA_PADDING_ADD_PKCS1_TYPE_1))) {
        private enum enumMixinStr_RSA_F_RSA_PADDING_ADD_PKCS1_TYPE_1 = `enum RSA_F_RSA_PADDING_ADD_PKCS1_TYPE_1 = 108;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_PADDING_ADD_PKCS1_TYPE_1); }))) {
            mixin(enumMixinStr_RSA_F_RSA_PADDING_ADD_PKCS1_TYPE_1);
        }
    }




    static if(!is(typeof(RSA_F_RSA_PADDING_ADD_PKCS1_TYPE_2))) {
        private enum enumMixinStr_RSA_F_RSA_PADDING_ADD_PKCS1_TYPE_2 = `enum RSA_F_RSA_PADDING_ADD_PKCS1_TYPE_2 = 109;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_PADDING_ADD_PKCS1_TYPE_2); }))) {
            mixin(enumMixinStr_RSA_F_RSA_PADDING_ADD_PKCS1_TYPE_2);
        }
    }




    static if(!is(typeof(RSA_F_RSA_PADDING_ADD_SSLV23))) {
        private enum enumMixinStr_RSA_F_RSA_PADDING_ADD_SSLV23 = `enum RSA_F_RSA_PADDING_ADD_SSLV23 = 110;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_PADDING_ADD_SSLV23); }))) {
            mixin(enumMixinStr_RSA_F_RSA_PADDING_ADD_SSLV23);
        }
    }




    static if(!is(typeof(RSA_F_RSA_PADDING_ADD_X931))) {
        private enum enumMixinStr_RSA_F_RSA_PADDING_ADD_X931 = `enum RSA_F_RSA_PADDING_ADD_X931 = 127;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_PADDING_ADD_X931); }))) {
            mixin(enumMixinStr_RSA_F_RSA_PADDING_ADD_X931);
        }
    }




    static if(!is(typeof(RSA_F_RSA_PADDING_CHECK_NONE))) {
        private enum enumMixinStr_RSA_F_RSA_PADDING_CHECK_NONE = `enum RSA_F_RSA_PADDING_CHECK_NONE = 111;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_PADDING_CHECK_NONE); }))) {
            mixin(enumMixinStr_RSA_F_RSA_PADDING_CHECK_NONE);
        }
    }




    static if(!is(typeof(RSA_F_RSA_PADDING_CHECK_PKCS1_OAEP))) {
        private enum enumMixinStr_RSA_F_RSA_PADDING_CHECK_PKCS1_OAEP = `enum RSA_F_RSA_PADDING_CHECK_PKCS1_OAEP = 122;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_PADDING_CHECK_PKCS1_OAEP); }))) {
            mixin(enumMixinStr_RSA_F_RSA_PADDING_CHECK_PKCS1_OAEP);
        }
    }




    static if(!is(typeof(RSA_F_RSA_PADDING_CHECK_PKCS1_OAEP_MGF1))) {
        private enum enumMixinStr_RSA_F_RSA_PADDING_CHECK_PKCS1_OAEP_MGF1 = `enum RSA_F_RSA_PADDING_CHECK_PKCS1_OAEP_MGF1 = 153;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_PADDING_CHECK_PKCS1_OAEP_MGF1); }))) {
            mixin(enumMixinStr_RSA_F_RSA_PADDING_CHECK_PKCS1_OAEP_MGF1);
        }
    }




    static if(!is(typeof(RSA_F_RSA_PADDING_CHECK_PKCS1_TYPE_1))) {
        private enum enumMixinStr_RSA_F_RSA_PADDING_CHECK_PKCS1_TYPE_1 = `enum RSA_F_RSA_PADDING_CHECK_PKCS1_TYPE_1 = 112;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_PADDING_CHECK_PKCS1_TYPE_1); }))) {
            mixin(enumMixinStr_RSA_F_RSA_PADDING_CHECK_PKCS1_TYPE_1);
        }
    }




    static if(!is(typeof(RSA_F_RSA_PADDING_CHECK_PKCS1_TYPE_2))) {
        private enum enumMixinStr_RSA_F_RSA_PADDING_CHECK_PKCS1_TYPE_2 = `enum RSA_F_RSA_PADDING_CHECK_PKCS1_TYPE_2 = 113;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_PADDING_CHECK_PKCS1_TYPE_2); }))) {
            mixin(enumMixinStr_RSA_F_RSA_PADDING_CHECK_PKCS1_TYPE_2);
        }
    }




    static if(!is(typeof(RSA_F_RSA_PADDING_CHECK_SSLV23))) {
        private enum enumMixinStr_RSA_F_RSA_PADDING_CHECK_SSLV23 = `enum RSA_F_RSA_PADDING_CHECK_SSLV23 = 114;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_PADDING_CHECK_SSLV23); }))) {
            mixin(enumMixinStr_RSA_F_RSA_PADDING_CHECK_SSLV23);
        }
    }




    static if(!is(typeof(RSA_F_RSA_PADDING_CHECK_X931))) {
        private enum enumMixinStr_RSA_F_RSA_PADDING_CHECK_X931 = `enum RSA_F_RSA_PADDING_CHECK_X931 = 128;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_PADDING_CHECK_X931); }))) {
            mixin(enumMixinStr_RSA_F_RSA_PADDING_CHECK_X931);
        }
    }




    static if(!is(typeof(RSA_F_RSA_PARAM_DECODE))) {
        private enum enumMixinStr_RSA_F_RSA_PARAM_DECODE = `enum RSA_F_RSA_PARAM_DECODE = 164;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_PARAM_DECODE); }))) {
            mixin(enumMixinStr_RSA_F_RSA_PARAM_DECODE);
        }
    }




    static if(!is(typeof(RSA_F_RSA_PRINT))) {
        private enum enumMixinStr_RSA_F_RSA_PRINT = `enum RSA_F_RSA_PRINT = 115;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_PRINT); }))) {
            mixin(enumMixinStr_RSA_F_RSA_PRINT);
        }
    }




    static if(!is(typeof(RSA_F_RSA_PRINT_FP))) {
        private enum enumMixinStr_RSA_F_RSA_PRINT_FP = `enum RSA_F_RSA_PRINT_FP = 116;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_PRINT_FP); }))) {
            mixin(enumMixinStr_RSA_F_RSA_PRINT_FP);
        }
    }




    static if(!is(typeof(RSA_F_RSA_PRIV_DECODE))) {
        private enum enumMixinStr_RSA_F_RSA_PRIV_DECODE = `enum RSA_F_RSA_PRIV_DECODE = 150;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_PRIV_DECODE); }))) {
            mixin(enumMixinStr_RSA_F_RSA_PRIV_DECODE);
        }
    }




    static if(!is(typeof(RSA_F_RSA_PRIV_ENCODE))) {
        private enum enumMixinStr_RSA_F_RSA_PRIV_ENCODE = `enum RSA_F_RSA_PRIV_ENCODE = 138;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_PRIV_ENCODE); }))) {
            mixin(enumMixinStr_RSA_F_RSA_PRIV_ENCODE);
        }
    }




    static if(!is(typeof(RSA_F_RSA_PSS_GET_PARAM))) {
        private enum enumMixinStr_RSA_F_RSA_PSS_GET_PARAM = `enum RSA_F_RSA_PSS_GET_PARAM = 151;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_PSS_GET_PARAM); }))) {
            mixin(enumMixinStr_RSA_F_RSA_PSS_GET_PARAM);
        }
    }




    static if(!is(typeof(RSA_F_RSA_PSS_TO_CTX))) {
        private enum enumMixinStr_RSA_F_RSA_PSS_TO_CTX = `enum RSA_F_RSA_PSS_TO_CTX = 155;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_PSS_TO_CTX); }))) {
            mixin(enumMixinStr_RSA_F_RSA_PSS_TO_CTX);
        }
    }




    static if(!is(typeof(RSA_F_RSA_PUB_DECODE))) {
        private enum enumMixinStr_RSA_F_RSA_PUB_DECODE = `enum RSA_F_RSA_PUB_DECODE = 139;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_PUB_DECODE); }))) {
            mixin(enumMixinStr_RSA_F_RSA_PUB_DECODE);
        }
    }




    static if(!is(typeof(RSA_F_RSA_SETUP_BLINDING))) {
        private enum enumMixinStr_RSA_F_RSA_SETUP_BLINDING = `enum RSA_F_RSA_SETUP_BLINDING = 136;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_SETUP_BLINDING); }))) {
            mixin(enumMixinStr_RSA_F_RSA_SETUP_BLINDING);
        }
    }




    static if(!is(typeof(RSA_F_RSA_SIGN))) {
        private enum enumMixinStr_RSA_F_RSA_SIGN = `enum RSA_F_RSA_SIGN = 117;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_SIGN); }))) {
            mixin(enumMixinStr_RSA_F_RSA_SIGN);
        }
    }




    static if(!is(typeof(RSA_F_RSA_SIGN_ASN1_OCTET_STRING))) {
        private enum enumMixinStr_RSA_F_RSA_SIGN_ASN1_OCTET_STRING = `enum RSA_F_RSA_SIGN_ASN1_OCTET_STRING = 118;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_SIGN_ASN1_OCTET_STRING); }))) {
            mixin(enumMixinStr_RSA_F_RSA_SIGN_ASN1_OCTET_STRING);
        }
    }




    static if(!is(typeof(RSA_F_RSA_VERIFY))) {
        private enum enumMixinStr_RSA_F_RSA_VERIFY = `enum RSA_F_RSA_VERIFY = 119;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_VERIFY); }))) {
            mixin(enumMixinStr_RSA_F_RSA_VERIFY);
        }
    }




    static if(!is(typeof(RSA_F_RSA_VERIFY_ASN1_OCTET_STRING))) {
        private enum enumMixinStr_RSA_F_RSA_VERIFY_ASN1_OCTET_STRING = `enum RSA_F_RSA_VERIFY_ASN1_OCTET_STRING = 120;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_VERIFY_ASN1_OCTET_STRING); }))) {
            mixin(enumMixinStr_RSA_F_RSA_VERIFY_ASN1_OCTET_STRING);
        }
    }




    static if(!is(typeof(RSA_F_RSA_VERIFY_PKCS1_PSS_MGF1))) {
        private enum enumMixinStr_RSA_F_RSA_VERIFY_PKCS1_PSS_MGF1 = `enum RSA_F_RSA_VERIFY_PKCS1_PSS_MGF1 = 126;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_RSA_VERIFY_PKCS1_PSS_MGF1); }))) {
            mixin(enumMixinStr_RSA_F_RSA_VERIFY_PKCS1_PSS_MGF1);
        }
    }




    static if(!is(typeof(RSA_F_SETUP_TBUF))) {
        private enum enumMixinStr_RSA_F_SETUP_TBUF = `enum RSA_F_SETUP_TBUF = 167;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_F_SETUP_TBUF); }))) {
            mixin(enumMixinStr_RSA_F_SETUP_TBUF);
        }
    }




    static if(!is(typeof(RSA_R_ALGORITHM_MISMATCH))) {
        private enum enumMixinStr_RSA_R_ALGORITHM_MISMATCH = `enum RSA_R_ALGORITHM_MISMATCH = 100;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_ALGORITHM_MISMATCH); }))) {
            mixin(enumMixinStr_RSA_R_ALGORITHM_MISMATCH);
        }
    }




    static if(!is(typeof(RSA_R_BAD_E_VALUE))) {
        private enum enumMixinStr_RSA_R_BAD_E_VALUE = `enum RSA_R_BAD_E_VALUE = 101;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_BAD_E_VALUE); }))) {
            mixin(enumMixinStr_RSA_R_BAD_E_VALUE);
        }
    }




    static if(!is(typeof(RSA_R_BAD_FIXED_HEADER_DECRYPT))) {
        private enum enumMixinStr_RSA_R_BAD_FIXED_HEADER_DECRYPT = `enum RSA_R_BAD_FIXED_HEADER_DECRYPT = 102;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_BAD_FIXED_HEADER_DECRYPT); }))) {
            mixin(enumMixinStr_RSA_R_BAD_FIXED_HEADER_DECRYPT);
        }
    }




    static if(!is(typeof(RSA_R_BAD_PAD_BYTE_COUNT))) {
        private enum enumMixinStr_RSA_R_BAD_PAD_BYTE_COUNT = `enum RSA_R_BAD_PAD_BYTE_COUNT = 103;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_BAD_PAD_BYTE_COUNT); }))) {
            mixin(enumMixinStr_RSA_R_BAD_PAD_BYTE_COUNT);
        }
    }




    static if(!is(typeof(RSA_R_BAD_SIGNATURE))) {
        private enum enumMixinStr_RSA_R_BAD_SIGNATURE = `enum RSA_R_BAD_SIGNATURE = 104;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_BAD_SIGNATURE); }))) {
            mixin(enumMixinStr_RSA_R_BAD_SIGNATURE);
        }
    }




    static if(!is(typeof(RSA_R_BLOCK_TYPE_IS_NOT_01))) {
        private enum enumMixinStr_RSA_R_BLOCK_TYPE_IS_NOT_01 = `enum RSA_R_BLOCK_TYPE_IS_NOT_01 = 106;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_BLOCK_TYPE_IS_NOT_01); }))) {
            mixin(enumMixinStr_RSA_R_BLOCK_TYPE_IS_NOT_01);
        }
    }




    static if(!is(typeof(RSA_R_BLOCK_TYPE_IS_NOT_02))) {
        private enum enumMixinStr_RSA_R_BLOCK_TYPE_IS_NOT_02 = `enum RSA_R_BLOCK_TYPE_IS_NOT_02 = 107;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_BLOCK_TYPE_IS_NOT_02); }))) {
            mixin(enumMixinStr_RSA_R_BLOCK_TYPE_IS_NOT_02);
        }
    }




    static if(!is(typeof(RSA_R_DATA_GREATER_THAN_MOD_LEN))) {
        private enum enumMixinStr_RSA_R_DATA_GREATER_THAN_MOD_LEN = `enum RSA_R_DATA_GREATER_THAN_MOD_LEN = 108;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_DATA_GREATER_THAN_MOD_LEN); }))) {
            mixin(enumMixinStr_RSA_R_DATA_GREATER_THAN_MOD_LEN);
        }
    }




    static if(!is(typeof(RSA_R_DATA_TOO_LARGE))) {
        private enum enumMixinStr_RSA_R_DATA_TOO_LARGE = `enum RSA_R_DATA_TOO_LARGE = 109;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_DATA_TOO_LARGE); }))) {
            mixin(enumMixinStr_RSA_R_DATA_TOO_LARGE);
        }
    }




    static if(!is(typeof(RSA_R_DATA_TOO_LARGE_FOR_KEY_SIZE))) {
        private enum enumMixinStr_RSA_R_DATA_TOO_LARGE_FOR_KEY_SIZE = `enum RSA_R_DATA_TOO_LARGE_FOR_KEY_SIZE = 110;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_DATA_TOO_LARGE_FOR_KEY_SIZE); }))) {
            mixin(enumMixinStr_RSA_R_DATA_TOO_LARGE_FOR_KEY_SIZE);
        }
    }




    static if(!is(typeof(RSA_R_DATA_TOO_LARGE_FOR_MODULUS))) {
        private enum enumMixinStr_RSA_R_DATA_TOO_LARGE_FOR_MODULUS = `enum RSA_R_DATA_TOO_LARGE_FOR_MODULUS = 132;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_DATA_TOO_LARGE_FOR_MODULUS); }))) {
            mixin(enumMixinStr_RSA_R_DATA_TOO_LARGE_FOR_MODULUS);
        }
    }




    static if(!is(typeof(RSA_R_DATA_TOO_SMALL))) {
        private enum enumMixinStr_RSA_R_DATA_TOO_SMALL = `enum RSA_R_DATA_TOO_SMALL = 111;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_DATA_TOO_SMALL); }))) {
            mixin(enumMixinStr_RSA_R_DATA_TOO_SMALL);
        }
    }




    static if(!is(typeof(RSA_R_DATA_TOO_SMALL_FOR_KEY_SIZE))) {
        private enum enumMixinStr_RSA_R_DATA_TOO_SMALL_FOR_KEY_SIZE = `enum RSA_R_DATA_TOO_SMALL_FOR_KEY_SIZE = 122;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_DATA_TOO_SMALL_FOR_KEY_SIZE); }))) {
            mixin(enumMixinStr_RSA_R_DATA_TOO_SMALL_FOR_KEY_SIZE);
        }
    }




    static if(!is(typeof(RSA_R_DIGEST_DOES_NOT_MATCH))) {
        private enum enumMixinStr_RSA_R_DIGEST_DOES_NOT_MATCH = `enum RSA_R_DIGEST_DOES_NOT_MATCH = 158;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_DIGEST_DOES_NOT_MATCH); }))) {
            mixin(enumMixinStr_RSA_R_DIGEST_DOES_NOT_MATCH);
        }
    }




    static if(!is(typeof(RSA_R_DIGEST_NOT_ALLOWED))) {
        private enum enumMixinStr_RSA_R_DIGEST_NOT_ALLOWED = `enum RSA_R_DIGEST_NOT_ALLOWED = 145;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_DIGEST_NOT_ALLOWED); }))) {
            mixin(enumMixinStr_RSA_R_DIGEST_NOT_ALLOWED);
        }
    }




    static if(!is(typeof(RSA_R_DIGEST_TOO_BIG_FOR_RSA_KEY))) {
        private enum enumMixinStr_RSA_R_DIGEST_TOO_BIG_FOR_RSA_KEY = `enum RSA_R_DIGEST_TOO_BIG_FOR_RSA_KEY = 112;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_DIGEST_TOO_BIG_FOR_RSA_KEY); }))) {
            mixin(enumMixinStr_RSA_R_DIGEST_TOO_BIG_FOR_RSA_KEY);
        }
    }




    static if(!is(typeof(RSA_R_DMP1_NOT_CONGRUENT_TO_D))) {
        private enum enumMixinStr_RSA_R_DMP1_NOT_CONGRUENT_TO_D = `enum RSA_R_DMP1_NOT_CONGRUENT_TO_D = 124;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_DMP1_NOT_CONGRUENT_TO_D); }))) {
            mixin(enumMixinStr_RSA_R_DMP1_NOT_CONGRUENT_TO_D);
        }
    }




    static if(!is(typeof(RSA_R_DMQ1_NOT_CONGRUENT_TO_D))) {
        private enum enumMixinStr_RSA_R_DMQ1_NOT_CONGRUENT_TO_D = `enum RSA_R_DMQ1_NOT_CONGRUENT_TO_D = 125;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_DMQ1_NOT_CONGRUENT_TO_D); }))) {
            mixin(enumMixinStr_RSA_R_DMQ1_NOT_CONGRUENT_TO_D);
        }
    }




    static if(!is(typeof(RSA_R_D_E_NOT_CONGRUENT_TO_1))) {
        private enum enumMixinStr_RSA_R_D_E_NOT_CONGRUENT_TO_1 = `enum RSA_R_D_E_NOT_CONGRUENT_TO_1 = 123;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_D_E_NOT_CONGRUENT_TO_1); }))) {
            mixin(enumMixinStr_RSA_R_D_E_NOT_CONGRUENT_TO_1);
        }
    }




    static if(!is(typeof(RSA_R_FIRST_OCTET_INVALID))) {
        private enum enumMixinStr_RSA_R_FIRST_OCTET_INVALID = `enum RSA_R_FIRST_OCTET_INVALID = 133;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_FIRST_OCTET_INVALID); }))) {
            mixin(enumMixinStr_RSA_R_FIRST_OCTET_INVALID);
        }
    }




    static if(!is(typeof(RSA_R_ILLEGAL_OR_UNSUPPORTED_PADDING_MODE))) {
        private enum enumMixinStr_RSA_R_ILLEGAL_OR_UNSUPPORTED_PADDING_MODE = `enum RSA_R_ILLEGAL_OR_UNSUPPORTED_PADDING_MODE = 144;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_ILLEGAL_OR_UNSUPPORTED_PADDING_MODE); }))) {
            mixin(enumMixinStr_RSA_R_ILLEGAL_OR_UNSUPPORTED_PADDING_MODE);
        }
    }




    static if(!is(typeof(RSA_R_INVALID_DIGEST))) {
        private enum enumMixinStr_RSA_R_INVALID_DIGEST = `enum RSA_R_INVALID_DIGEST = 157;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_INVALID_DIGEST); }))) {
            mixin(enumMixinStr_RSA_R_INVALID_DIGEST);
        }
    }




    static if(!is(typeof(RSA_R_INVALID_DIGEST_LENGTH))) {
        private enum enumMixinStr_RSA_R_INVALID_DIGEST_LENGTH = `enum RSA_R_INVALID_DIGEST_LENGTH = 143;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_INVALID_DIGEST_LENGTH); }))) {
            mixin(enumMixinStr_RSA_R_INVALID_DIGEST_LENGTH);
        }
    }




    static if(!is(typeof(RSA_R_INVALID_HEADER))) {
        private enum enumMixinStr_RSA_R_INVALID_HEADER = `enum RSA_R_INVALID_HEADER = 137;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_INVALID_HEADER); }))) {
            mixin(enumMixinStr_RSA_R_INVALID_HEADER);
        }
    }




    static if(!is(typeof(RSA_R_INVALID_LABEL))) {
        private enum enumMixinStr_RSA_R_INVALID_LABEL = `enum RSA_R_INVALID_LABEL = 160;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_INVALID_LABEL); }))) {
            mixin(enumMixinStr_RSA_R_INVALID_LABEL);
        }
    }




    static if(!is(typeof(RSA_R_INVALID_MESSAGE_LENGTH))) {
        private enum enumMixinStr_RSA_R_INVALID_MESSAGE_LENGTH = `enum RSA_R_INVALID_MESSAGE_LENGTH = 131;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_INVALID_MESSAGE_LENGTH); }))) {
            mixin(enumMixinStr_RSA_R_INVALID_MESSAGE_LENGTH);
        }
    }




    static if(!is(typeof(RSA_R_INVALID_MGF1_MD))) {
        private enum enumMixinStr_RSA_R_INVALID_MGF1_MD = `enum RSA_R_INVALID_MGF1_MD = 156;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_INVALID_MGF1_MD); }))) {
            mixin(enumMixinStr_RSA_R_INVALID_MGF1_MD);
        }
    }




    static if(!is(typeof(RSA_R_INVALID_MULTI_PRIME_KEY))) {
        private enum enumMixinStr_RSA_R_INVALID_MULTI_PRIME_KEY = `enum RSA_R_INVALID_MULTI_PRIME_KEY = 167;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_INVALID_MULTI_PRIME_KEY); }))) {
            mixin(enumMixinStr_RSA_R_INVALID_MULTI_PRIME_KEY);
        }
    }




    static if(!is(typeof(RSA_R_INVALID_OAEP_PARAMETERS))) {
        private enum enumMixinStr_RSA_R_INVALID_OAEP_PARAMETERS = `enum RSA_R_INVALID_OAEP_PARAMETERS = 161;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_INVALID_OAEP_PARAMETERS); }))) {
            mixin(enumMixinStr_RSA_R_INVALID_OAEP_PARAMETERS);
        }
    }




    static if(!is(typeof(RSA_R_INVALID_PADDING))) {
        private enum enumMixinStr_RSA_R_INVALID_PADDING = `enum RSA_R_INVALID_PADDING = 138;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_INVALID_PADDING); }))) {
            mixin(enumMixinStr_RSA_R_INVALID_PADDING);
        }
    }




    static if(!is(typeof(RSA_R_INVALID_PADDING_MODE))) {
        private enum enumMixinStr_RSA_R_INVALID_PADDING_MODE = `enum RSA_R_INVALID_PADDING_MODE = 141;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_INVALID_PADDING_MODE); }))) {
            mixin(enumMixinStr_RSA_R_INVALID_PADDING_MODE);
        }
    }




    static if(!is(typeof(RSA_R_INVALID_PSS_PARAMETERS))) {
        private enum enumMixinStr_RSA_R_INVALID_PSS_PARAMETERS = `enum RSA_R_INVALID_PSS_PARAMETERS = 149;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_INVALID_PSS_PARAMETERS); }))) {
            mixin(enumMixinStr_RSA_R_INVALID_PSS_PARAMETERS);
        }
    }




    static if(!is(typeof(RSA_R_INVALID_PSS_SALTLEN))) {
        private enum enumMixinStr_RSA_R_INVALID_PSS_SALTLEN = `enum RSA_R_INVALID_PSS_SALTLEN = 146;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_INVALID_PSS_SALTLEN); }))) {
            mixin(enumMixinStr_RSA_R_INVALID_PSS_SALTLEN);
        }
    }




    static if(!is(typeof(RSA_R_INVALID_SALT_LENGTH))) {
        private enum enumMixinStr_RSA_R_INVALID_SALT_LENGTH = `enum RSA_R_INVALID_SALT_LENGTH = 150;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_INVALID_SALT_LENGTH); }))) {
            mixin(enumMixinStr_RSA_R_INVALID_SALT_LENGTH);
        }
    }




    static if(!is(typeof(RSA_R_INVALID_TRAILER))) {
        private enum enumMixinStr_RSA_R_INVALID_TRAILER = `enum RSA_R_INVALID_TRAILER = 139;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_INVALID_TRAILER); }))) {
            mixin(enumMixinStr_RSA_R_INVALID_TRAILER);
        }
    }




    static if(!is(typeof(RSA_R_INVALID_X931_DIGEST))) {
        private enum enumMixinStr_RSA_R_INVALID_X931_DIGEST = `enum RSA_R_INVALID_X931_DIGEST = 142;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_INVALID_X931_DIGEST); }))) {
            mixin(enumMixinStr_RSA_R_INVALID_X931_DIGEST);
        }
    }




    static if(!is(typeof(RSA_R_IQMP_NOT_INVERSE_OF_Q))) {
        private enum enumMixinStr_RSA_R_IQMP_NOT_INVERSE_OF_Q = `enum RSA_R_IQMP_NOT_INVERSE_OF_Q = 126;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_IQMP_NOT_INVERSE_OF_Q); }))) {
            mixin(enumMixinStr_RSA_R_IQMP_NOT_INVERSE_OF_Q);
        }
    }




    static if(!is(typeof(RSA_R_KEY_PRIME_NUM_INVALID))) {
        private enum enumMixinStr_RSA_R_KEY_PRIME_NUM_INVALID = `enum RSA_R_KEY_PRIME_NUM_INVALID = 165;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_KEY_PRIME_NUM_INVALID); }))) {
            mixin(enumMixinStr_RSA_R_KEY_PRIME_NUM_INVALID);
        }
    }




    static if(!is(typeof(RSA_R_KEY_SIZE_TOO_SMALL))) {
        private enum enumMixinStr_RSA_R_KEY_SIZE_TOO_SMALL = `enum RSA_R_KEY_SIZE_TOO_SMALL = 120;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_KEY_SIZE_TOO_SMALL); }))) {
            mixin(enumMixinStr_RSA_R_KEY_SIZE_TOO_SMALL);
        }
    }




    static if(!is(typeof(RSA_R_LAST_OCTET_INVALID))) {
        private enum enumMixinStr_RSA_R_LAST_OCTET_INVALID = `enum RSA_R_LAST_OCTET_INVALID = 134;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_LAST_OCTET_INVALID); }))) {
            mixin(enumMixinStr_RSA_R_LAST_OCTET_INVALID);
        }
    }




    static if(!is(typeof(RSA_R_MISSING_PRIVATE_KEY))) {
        private enum enumMixinStr_RSA_R_MISSING_PRIVATE_KEY = `enum RSA_R_MISSING_PRIVATE_KEY = 179;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_MISSING_PRIVATE_KEY); }))) {
            mixin(enumMixinStr_RSA_R_MISSING_PRIVATE_KEY);
        }
    }




    static if(!is(typeof(RSA_R_MGF1_DIGEST_NOT_ALLOWED))) {
        private enum enumMixinStr_RSA_R_MGF1_DIGEST_NOT_ALLOWED = `enum RSA_R_MGF1_DIGEST_NOT_ALLOWED = 152;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_MGF1_DIGEST_NOT_ALLOWED); }))) {
            mixin(enumMixinStr_RSA_R_MGF1_DIGEST_NOT_ALLOWED);
        }
    }




    static if(!is(typeof(RSA_R_MODULUS_TOO_LARGE))) {
        private enum enumMixinStr_RSA_R_MODULUS_TOO_LARGE = `enum RSA_R_MODULUS_TOO_LARGE = 105;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_MODULUS_TOO_LARGE); }))) {
            mixin(enumMixinStr_RSA_R_MODULUS_TOO_LARGE);
        }
    }




    static if(!is(typeof(RSA_R_MP_COEFFICIENT_NOT_INVERSE_OF_R))) {
        private enum enumMixinStr_RSA_R_MP_COEFFICIENT_NOT_INVERSE_OF_R = `enum RSA_R_MP_COEFFICIENT_NOT_INVERSE_OF_R = 168;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_MP_COEFFICIENT_NOT_INVERSE_OF_R); }))) {
            mixin(enumMixinStr_RSA_R_MP_COEFFICIENT_NOT_INVERSE_OF_R);
        }
    }




    static if(!is(typeof(RSA_R_MP_EXPONENT_NOT_CONGRUENT_TO_D))) {
        private enum enumMixinStr_RSA_R_MP_EXPONENT_NOT_CONGRUENT_TO_D = `enum RSA_R_MP_EXPONENT_NOT_CONGRUENT_TO_D = 169;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_MP_EXPONENT_NOT_CONGRUENT_TO_D); }))) {
            mixin(enumMixinStr_RSA_R_MP_EXPONENT_NOT_CONGRUENT_TO_D);
        }
    }




    static if(!is(typeof(RSA_R_MP_R_NOT_PRIME))) {
        private enum enumMixinStr_RSA_R_MP_R_NOT_PRIME = `enum RSA_R_MP_R_NOT_PRIME = 170;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_MP_R_NOT_PRIME); }))) {
            mixin(enumMixinStr_RSA_R_MP_R_NOT_PRIME);
        }
    }




    static if(!is(typeof(RSA_R_NO_PUBLIC_EXPONENT))) {
        private enum enumMixinStr_RSA_R_NO_PUBLIC_EXPONENT = `enum RSA_R_NO_PUBLIC_EXPONENT = 140;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_NO_PUBLIC_EXPONENT); }))) {
            mixin(enumMixinStr_RSA_R_NO_PUBLIC_EXPONENT);
        }
    }




    static if(!is(typeof(RSA_R_NULL_BEFORE_BLOCK_MISSING))) {
        private enum enumMixinStr_RSA_R_NULL_BEFORE_BLOCK_MISSING = `enum RSA_R_NULL_BEFORE_BLOCK_MISSING = 113;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_NULL_BEFORE_BLOCK_MISSING); }))) {
            mixin(enumMixinStr_RSA_R_NULL_BEFORE_BLOCK_MISSING);
        }
    }




    static if(!is(typeof(RSA_R_N_DOES_NOT_EQUAL_PRODUCT_OF_PRIMES))) {
        private enum enumMixinStr_RSA_R_N_DOES_NOT_EQUAL_PRODUCT_OF_PRIMES = `enum RSA_R_N_DOES_NOT_EQUAL_PRODUCT_OF_PRIMES = 172;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_N_DOES_NOT_EQUAL_PRODUCT_OF_PRIMES); }))) {
            mixin(enumMixinStr_RSA_R_N_DOES_NOT_EQUAL_PRODUCT_OF_PRIMES);
        }
    }




    static if(!is(typeof(RSA_R_N_DOES_NOT_EQUAL_P_Q))) {
        private enum enumMixinStr_RSA_R_N_DOES_NOT_EQUAL_P_Q = `enum RSA_R_N_DOES_NOT_EQUAL_P_Q = 127;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_N_DOES_NOT_EQUAL_P_Q); }))) {
            mixin(enumMixinStr_RSA_R_N_DOES_NOT_EQUAL_P_Q);
        }
    }




    static if(!is(typeof(RSA_R_OAEP_DECODING_ERROR))) {
        private enum enumMixinStr_RSA_R_OAEP_DECODING_ERROR = `enum RSA_R_OAEP_DECODING_ERROR = 121;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_OAEP_DECODING_ERROR); }))) {
            mixin(enumMixinStr_RSA_R_OAEP_DECODING_ERROR);
        }
    }




    static if(!is(typeof(RSA_R_OPERATION_NOT_SUPPORTED_FOR_THIS_KEYTYPE))) {
        private enum enumMixinStr_RSA_R_OPERATION_NOT_SUPPORTED_FOR_THIS_KEYTYPE = `enum RSA_R_OPERATION_NOT_SUPPORTED_FOR_THIS_KEYTYPE = 148;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_OPERATION_NOT_SUPPORTED_FOR_THIS_KEYTYPE); }))) {
            mixin(enumMixinStr_RSA_R_OPERATION_NOT_SUPPORTED_FOR_THIS_KEYTYPE);
        }
    }




    static if(!is(typeof(RSA_R_PADDING_CHECK_FAILED))) {
        private enum enumMixinStr_RSA_R_PADDING_CHECK_FAILED = `enum RSA_R_PADDING_CHECK_FAILED = 114;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_PADDING_CHECK_FAILED); }))) {
            mixin(enumMixinStr_RSA_R_PADDING_CHECK_FAILED);
        }
    }




    static if(!is(typeof(RSA_R_PKCS_DECODING_ERROR))) {
        private enum enumMixinStr_RSA_R_PKCS_DECODING_ERROR = `enum RSA_R_PKCS_DECODING_ERROR = 159;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_PKCS_DECODING_ERROR); }))) {
            mixin(enumMixinStr_RSA_R_PKCS_DECODING_ERROR);
        }
    }




    static if(!is(typeof(RSA_R_PSS_SALTLEN_TOO_SMALL))) {
        private enum enumMixinStr_RSA_R_PSS_SALTLEN_TOO_SMALL = `enum RSA_R_PSS_SALTLEN_TOO_SMALL = 164;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_PSS_SALTLEN_TOO_SMALL); }))) {
            mixin(enumMixinStr_RSA_R_PSS_SALTLEN_TOO_SMALL);
        }
    }




    static if(!is(typeof(RSA_R_P_NOT_PRIME))) {
        private enum enumMixinStr_RSA_R_P_NOT_PRIME = `enum RSA_R_P_NOT_PRIME = 128;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_P_NOT_PRIME); }))) {
            mixin(enumMixinStr_RSA_R_P_NOT_PRIME);
        }
    }




    static if(!is(typeof(RSA_R_Q_NOT_PRIME))) {
        private enum enumMixinStr_RSA_R_Q_NOT_PRIME = `enum RSA_R_Q_NOT_PRIME = 129;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_Q_NOT_PRIME); }))) {
            mixin(enumMixinStr_RSA_R_Q_NOT_PRIME);
        }
    }




    static if(!is(typeof(RSA_R_RSA_OPERATIONS_NOT_SUPPORTED))) {
        private enum enumMixinStr_RSA_R_RSA_OPERATIONS_NOT_SUPPORTED = `enum RSA_R_RSA_OPERATIONS_NOT_SUPPORTED = 130;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_RSA_OPERATIONS_NOT_SUPPORTED); }))) {
            mixin(enumMixinStr_RSA_R_RSA_OPERATIONS_NOT_SUPPORTED);
        }
    }




    static if(!is(typeof(RSA_R_SLEN_CHECK_FAILED))) {
        private enum enumMixinStr_RSA_R_SLEN_CHECK_FAILED = `enum RSA_R_SLEN_CHECK_FAILED = 136;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_SLEN_CHECK_FAILED); }))) {
            mixin(enumMixinStr_RSA_R_SLEN_CHECK_FAILED);
        }
    }




    static if(!is(typeof(RSA_R_SLEN_RECOVERY_FAILED))) {
        private enum enumMixinStr_RSA_R_SLEN_RECOVERY_FAILED = `enum RSA_R_SLEN_RECOVERY_FAILED = 135;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_SLEN_RECOVERY_FAILED); }))) {
            mixin(enumMixinStr_RSA_R_SLEN_RECOVERY_FAILED);
        }
    }




    static if(!is(typeof(RSA_R_SSLV3_ROLLBACK_ATTACK))) {
        private enum enumMixinStr_RSA_R_SSLV3_ROLLBACK_ATTACK = `enum RSA_R_SSLV3_ROLLBACK_ATTACK = 115;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_SSLV3_ROLLBACK_ATTACK); }))) {
            mixin(enumMixinStr_RSA_R_SSLV3_ROLLBACK_ATTACK);
        }
    }




    static if(!is(typeof(RSA_R_THE_ASN1_OBJECT_IDENTIFIER_IS_NOT_KNOWN_FOR_THIS_MD))) {
        private enum enumMixinStr_RSA_R_THE_ASN1_OBJECT_IDENTIFIER_IS_NOT_KNOWN_FOR_THIS_MD = `enum RSA_R_THE_ASN1_OBJECT_IDENTIFIER_IS_NOT_KNOWN_FOR_THIS_MD = 116;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_THE_ASN1_OBJECT_IDENTIFIER_IS_NOT_KNOWN_FOR_THIS_MD); }))) {
            mixin(enumMixinStr_RSA_R_THE_ASN1_OBJECT_IDENTIFIER_IS_NOT_KNOWN_FOR_THIS_MD);
        }
    }




    static if(!is(typeof(RSA_R_UNKNOWN_ALGORITHM_TYPE))) {
        private enum enumMixinStr_RSA_R_UNKNOWN_ALGORITHM_TYPE = `enum RSA_R_UNKNOWN_ALGORITHM_TYPE = 117;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_UNKNOWN_ALGORITHM_TYPE); }))) {
            mixin(enumMixinStr_RSA_R_UNKNOWN_ALGORITHM_TYPE);
        }
    }




    static if(!is(typeof(RSA_R_UNKNOWN_DIGEST))) {
        private enum enumMixinStr_RSA_R_UNKNOWN_DIGEST = `enum RSA_R_UNKNOWN_DIGEST = 166;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_UNKNOWN_DIGEST); }))) {
            mixin(enumMixinStr_RSA_R_UNKNOWN_DIGEST);
        }
    }




    static if(!is(typeof(RSA_R_UNKNOWN_MASK_DIGEST))) {
        private enum enumMixinStr_RSA_R_UNKNOWN_MASK_DIGEST = `enum RSA_R_UNKNOWN_MASK_DIGEST = 151;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_UNKNOWN_MASK_DIGEST); }))) {
            mixin(enumMixinStr_RSA_R_UNKNOWN_MASK_DIGEST);
        }
    }




    static if(!is(typeof(RSA_R_UNKNOWN_PADDING_TYPE))) {
        private enum enumMixinStr_RSA_R_UNKNOWN_PADDING_TYPE = `enum RSA_R_UNKNOWN_PADDING_TYPE = 118;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_UNKNOWN_PADDING_TYPE); }))) {
            mixin(enumMixinStr_RSA_R_UNKNOWN_PADDING_TYPE);
        }
    }




    static if(!is(typeof(RSA_R_UNSUPPORTED_ENCRYPTION_TYPE))) {
        private enum enumMixinStr_RSA_R_UNSUPPORTED_ENCRYPTION_TYPE = `enum RSA_R_UNSUPPORTED_ENCRYPTION_TYPE = 162;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_UNSUPPORTED_ENCRYPTION_TYPE); }))) {
            mixin(enumMixinStr_RSA_R_UNSUPPORTED_ENCRYPTION_TYPE);
        }
    }




    static if(!is(typeof(RSA_R_UNSUPPORTED_LABEL_SOURCE))) {
        private enum enumMixinStr_RSA_R_UNSUPPORTED_LABEL_SOURCE = `enum RSA_R_UNSUPPORTED_LABEL_SOURCE = 163;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_UNSUPPORTED_LABEL_SOURCE); }))) {
            mixin(enumMixinStr_RSA_R_UNSUPPORTED_LABEL_SOURCE);
        }
    }




    static if(!is(typeof(RSA_R_UNSUPPORTED_MASK_ALGORITHM))) {
        private enum enumMixinStr_RSA_R_UNSUPPORTED_MASK_ALGORITHM = `enum RSA_R_UNSUPPORTED_MASK_ALGORITHM = 153;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_UNSUPPORTED_MASK_ALGORITHM); }))) {
            mixin(enumMixinStr_RSA_R_UNSUPPORTED_MASK_ALGORITHM);
        }
    }




    static if(!is(typeof(RSA_R_UNSUPPORTED_MASK_PARAMETER))) {
        private enum enumMixinStr_RSA_R_UNSUPPORTED_MASK_PARAMETER = `enum RSA_R_UNSUPPORTED_MASK_PARAMETER = 154;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_UNSUPPORTED_MASK_PARAMETER); }))) {
            mixin(enumMixinStr_RSA_R_UNSUPPORTED_MASK_PARAMETER);
        }
    }




    static if(!is(typeof(RSA_R_UNSUPPORTED_SIGNATURE_TYPE))) {
        private enum enumMixinStr_RSA_R_UNSUPPORTED_SIGNATURE_TYPE = `enum RSA_R_UNSUPPORTED_SIGNATURE_TYPE = 155;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_UNSUPPORTED_SIGNATURE_TYPE); }))) {
            mixin(enumMixinStr_RSA_R_UNSUPPORTED_SIGNATURE_TYPE);
        }
    }




    static if(!is(typeof(RSA_R_VALUE_MISSING))) {
        private enum enumMixinStr_RSA_R_VALUE_MISSING = `enum RSA_R_VALUE_MISSING = 147;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_VALUE_MISSING); }))) {
            mixin(enumMixinStr_RSA_R_VALUE_MISSING);
        }
    }




    static if(!is(typeof(RSA_R_WRONG_SIGNATURE_LENGTH))) {
        private enum enumMixinStr_RSA_R_WRONG_SIGNATURE_LENGTH = `enum RSA_R_WRONG_SIGNATURE_LENGTH = 119;`;
        static if(is(typeof({ mixin(enumMixinStr_RSA_R_WRONG_SIGNATURE_LENGTH); }))) {
            mixin(enumMixinStr_RSA_R_WRONG_SIGNATURE_LENGTH);
        }
    }






    static if(!is(typeof(NID_id_smime_ct_authEnvelopedData))) {
        private enum enumMixinStr_NID_id_smime_ct_authEnvelopedData = `enum NID_id_smime_ct_authEnvelopedData = 1059;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_ct_authEnvelopedData); }))) {
            mixin(enumMixinStr_NID_id_smime_ct_authEnvelopedData);
        }
    }




    static if(!is(typeof(SN_id_smime_ct_authEnvelopedData))) {
        private enum enumMixinStr_SN_id_smime_ct_authEnvelopedData = `enum SN_id_smime_ct_authEnvelopedData = "id-smime-ct-authEnvelopedData";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_ct_authEnvelopedData); }))) {
            mixin(enumMixinStr_SN_id_smime_ct_authEnvelopedData);
        }
    }
    static if(!is(typeof(OBJ_id_smime_ct_contentCollection))) {
        private enum enumMixinStr_OBJ_id_smime_ct_contentCollection = `enum OBJ_id_smime_ct_contentCollection = OBJ_id_smime_ct , 19L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_ct_contentCollection); }))) {
            mixin(enumMixinStr_OBJ_id_smime_ct_contentCollection);
        }
    }




    static if(!is(typeof(NID_id_smime_ct_contentCollection))) {
        private enum enumMixinStr_NID_id_smime_ct_contentCollection = `enum NID_id_smime_ct_contentCollection = 1058;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_ct_contentCollection); }))) {
            mixin(enumMixinStr_NID_id_smime_ct_contentCollection);
        }
    }




    static if(!is(typeof(SN_id_smime_ct_contentCollection))) {
        private enum enumMixinStr_SN_id_smime_ct_contentCollection = `enum SN_id_smime_ct_contentCollection = "id-smime-ct-contentCollection";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_ct_contentCollection); }))) {
            mixin(enumMixinStr_SN_id_smime_ct_contentCollection);
        }
    }




    static if(!is(typeof(OBJ_id_smime_ct_compressedData))) {
        private enum enumMixinStr_OBJ_id_smime_ct_compressedData = `enum OBJ_id_smime_ct_compressedData = OBJ_id_smime_ct , 9L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_ct_compressedData); }))) {
            mixin(enumMixinStr_OBJ_id_smime_ct_compressedData);
        }
    }




    static if(!is(typeof(NID_id_smime_ct_compressedData))) {
        private enum enumMixinStr_NID_id_smime_ct_compressedData = `enum NID_id_smime_ct_compressedData = 786;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_ct_compressedData); }))) {
            mixin(enumMixinStr_NID_id_smime_ct_compressedData);
        }
    }




    static if(!is(typeof(SN_id_smime_ct_compressedData))) {
        private enum enumMixinStr_SN_id_smime_ct_compressedData = `enum SN_id_smime_ct_compressedData = "id-smime-ct-compressedData";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_ct_compressedData); }))) {
            mixin(enumMixinStr_SN_id_smime_ct_compressedData);
        }
    }




    static if(!is(typeof(OBJ_id_smime_ct_DVCSResponseData))) {
        private enum enumMixinStr_OBJ_id_smime_ct_DVCSResponseData = `enum OBJ_id_smime_ct_DVCSResponseData = OBJ_id_smime_ct , 8L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_ct_DVCSResponseData); }))) {
            mixin(enumMixinStr_OBJ_id_smime_ct_DVCSResponseData);
        }
    }




    static if(!is(typeof(NID_id_smime_ct_DVCSResponseData))) {
        private enum enumMixinStr_NID_id_smime_ct_DVCSResponseData = `enum NID_id_smime_ct_DVCSResponseData = 211;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_ct_DVCSResponseData); }))) {
            mixin(enumMixinStr_NID_id_smime_ct_DVCSResponseData);
        }
    }




    static if(!is(typeof(SN_id_smime_ct_DVCSResponseData))) {
        private enum enumMixinStr_SN_id_smime_ct_DVCSResponseData = `enum SN_id_smime_ct_DVCSResponseData = "id-smime-ct-DVCSResponseData";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_ct_DVCSResponseData); }))) {
            mixin(enumMixinStr_SN_id_smime_ct_DVCSResponseData);
        }
    }




    static if(!is(typeof(OBJ_id_smime_ct_DVCSRequestData))) {
        private enum enumMixinStr_OBJ_id_smime_ct_DVCSRequestData = `enum OBJ_id_smime_ct_DVCSRequestData = OBJ_id_smime_ct , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_ct_DVCSRequestData); }))) {
            mixin(enumMixinStr_OBJ_id_smime_ct_DVCSRequestData);
        }
    }




    static if(!is(typeof(NID_id_smime_ct_DVCSRequestData))) {
        private enum enumMixinStr_NID_id_smime_ct_DVCSRequestData = `enum NID_id_smime_ct_DVCSRequestData = 210;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_ct_DVCSRequestData); }))) {
            mixin(enumMixinStr_NID_id_smime_ct_DVCSRequestData);
        }
    }




    static if(!is(typeof(SN_id_smime_ct_DVCSRequestData))) {
        private enum enumMixinStr_SN_id_smime_ct_DVCSRequestData = `enum SN_id_smime_ct_DVCSRequestData = "id-smime-ct-DVCSRequestData";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_ct_DVCSRequestData); }))) {
            mixin(enumMixinStr_SN_id_smime_ct_DVCSRequestData);
        }
    }




    static if(!is(typeof(OBJ_id_smime_ct_contentInfo))) {
        private enum enumMixinStr_OBJ_id_smime_ct_contentInfo = `enum OBJ_id_smime_ct_contentInfo = OBJ_id_smime_ct , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_ct_contentInfo); }))) {
            mixin(enumMixinStr_OBJ_id_smime_ct_contentInfo);
        }
    }




    static if(!is(typeof(NID_id_smime_ct_contentInfo))) {
        private enum enumMixinStr_NID_id_smime_ct_contentInfo = `enum NID_id_smime_ct_contentInfo = 209;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_ct_contentInfo); }))) {
            mixin(enumMixinStr_NID_id_smime_ct_contentInfo);
        }
    }




    static if(!is(typeof(SN_id_smime_ct_contentInfo))) {
        private enum enumMixinStr_SN_id_smime_ct_contentInfo = `enum SN_id_smime_ct_contentInfo = "id-smime-ct-contentInfo";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_ct_contentInfo); }))) {
            mixin(enumMixinStr_SN_id_smime_ct_contentInfo);
        }
    }




    static if(!is(typeof(OBJ_id_smime_ct_TDTInfo))) {
        private enum enumMixinStr_OBJ_id_smime_ct_TDTInfo = `enum OBJ_id_smime_ct_TDTInfo = OBJ_id_smime_ct , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_ct_TDTInfo); }))) {
            mixin(enumMixinStr_OBJ_id_smime_ct_TDTInfo);
        }
    }




    static if(!is(typeof(NID_id_smime_ct_TDTInfo))) {
        private enum enumMixinStr_NID_id_smime_ct_TDTInfo = `enum NID_id_smime_ct_TDTInfo = 208;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_ct_TDTInfo); }))) {
            mixin(enumMixinStr_NID_id_smime_ct_TDTInfo);
        }
    }




    static if(!is(typeof(SN_id_smime_ct_TDTInfo))) {
        private enum enumMixinStr_SN_id_smime_ct_TDTInfo = `enum SN_id_smime_ct_TDTInfo = "id-smime-ct-TDTInfo";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_ct_TDTInfo); }))) {
            mixin(enumMixinStr_SN_id_smime_ct_TDTInfo);
        }
    }




    static if(!is(typeof(OBJ_id_smime_ct_TSTInfo))) {
        private enum enumMixinStr_OBJ_id_smime_ct_TSTInfo = `enum OBJ_id_smime_ct_TSTInfo = OBJ_id_smime_ct , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_ct_TSTInfo); }))) {
            mixin(enumMixinStr_OBJ_id_smime_ct_TSTInfo);
        }
    }




    static if(!is(typeof(NID_id_smime_ct_TSTInfo))) {
        private enum enumMixinStr_NID_id_smime_ct_TSTInfo = `enum NID_id_smime_ct_TSTInfo = 207;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_ct_TSTInfo); }))) {
            mixin(enumMixinStr_NID_id_smime_ct_TSTInfo);
        }
    }




    static if(!is(typeof(SN_id_smime_ct_TSTInfo))) {
        private enum enumMixinStr_SN_id_smime_ct_TSTInfo = `enum SN_id_smime_ct_TSTInfo = "id-smime-ct-TSTInfo";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_ct_TSTInfo); }))) {
            mixin(enumMixinStr_SN_id_smime_ct_TSTInfo);
        }
    }




    static if(!is(typeof(OBJ_id_smime_ct_publishCert))) {
        private enum enumMixinStr_OBJ_id_smime_ct_publishCert = `enum OBJ_id_smime_ct_publishCert = OBJ_id_smime_ct , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_ct_publishCert); }))) {
            mixin(enumMixinStr_OBJ_id_smime_ct_publishCert);
        }
    }




    static if(!is(typeof(NID_id_smime_ct_publishCert))) {
        private enum enumMixinStr_NID_id_smime_ct_publishCert = `enum NID_id_smime_ct_publishCert = 206;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_ct_publishCert); }))) {
            mixin(enumMixinStr_NID_id_smime_ct_publishCert);
        }
    }




    static if(!is(typeof(SN_id_smime_ct_publishCert))) {
        private enum enumMixinStr_SN_id_smime_ct_publishCert = `enum SN_id_smime_ct_publishCert = "id-smime-ct-publishCert";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_ct_publishCert); }))) {
            mixin(enumMixinStr_SN_id_smime_ct_publishCert);
        }
    }




    static if(!is(typeof(OBJ_id_smime_ct_authData))) {
        private enum enumMixinStr_OBJ_id_smime_ct_authData = `enum OBJ_id_smime_ct_authData = OBJ_id_smime_ct , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_ct_authData); }))) {
            mixin(enumMixinStr_OBJ_id_smime_ct_authData);
        }
    }




    static if(!is(typeof(NID_id_smime_ct_authData))) {
        private enum enumMixinStr_NID_id_smime_ct_authData = `enum NID_id_smime_ct_authData = 205;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_ct_authData); }))) {
            mixin(enumMixinStr_NID_id_smime_ct_authData);
        }
    }




    static if(!is(typeof(SN_id_smime_ct_authData))) {
        private enum enumMixinStr_SN_id_smime_ct_authData = `enum SN_id_smime_ct_authData = "id-smime-ct-authData";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_ct_authData); }))) {
            mixin(enumMixinStr_SN_id_smime_ct_authData);
        }
    }




    static if(!is(typeof(OBJ_id_smime_ct_receipt))) {
        private enum enumMixinStr_OBJ_id_smime_ct_receipt = `enum OBJ_id_smime_ct_receipt = OBJ_id_smime_ct , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_ct_receipt); }))) {
            mixin(enumMixinStr_OBJ_id_smime_ct_receipt);
        }
    }




    static if(!is(typeof(NID_id_smime_ct_receipt))) {
        private enum enumMixinStr_NID_id_smime_ct_receipt = `enum NID_id_smime_ct_receipt = 204;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_ct_receipt); }))) {
            mixin(enumMixinStr_NID_id_smime_ct_receipt);
        }
    }




    static if(!is(typeof(SN_id_smime_ct_receipt))) {
        private enum enumMixinStr_SN_id_smime_ct_receipt = `enum SN_id_smime_ct_receipt = "id-smime-ct-receipt";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_ct_receipt); }))) {
            mixin(enumMixinStr_SN_id_smime_ct_receipt);
        }
    }




    static if(!is(typeof(OBJ_id_smime_mod_ets_eSigPolicy_97))) {
        private enum enumMixinStr_OBJ_id_smime_mod_ets_eSigPolicy_97 = `enum OBJ_id_smime_mod_ets_eSigPolicy_97 = OBJ_id_smime_mod , 8L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_mod_ets_eSigPolicy_97); }))) {
            mixin(enumMixinStr_OBJ_id_smime_mod_ets_eSigPolicy_97);
        }
    }




    static if(!is(typeof(NID_id_smime_mod_ets_eSigPolicy_97))) {
        private enum enumMixinStr_NID_id_smime_mod_ets_eSigPolicy_97 = `enum NID_id_smime_mod_ets_eSigPolicy_97 = 203;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_mod_ets_eSigPolicy_97); }))) {
            mixin(enumMixinStr_NID_id_smime_mod_ets_eSigPolicy_97);
        }
    }




    static if(!is(typeof(SN_id_smime_mod_ets_eSigPolicy_97))) {
        private enum enumMixinStr_SN_id_smime_mod_ets_eSigPolicy_97 = `enum SN_id_smime_mod_ets_eSigPolicy_97 = "id-smime-mod-ets-eSigPolicy-97";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_mod_ets_eSigPolicy_97); }))) {
            mixin(enumMixinStr_SN_id_smime_mod_ets_eSigPolicy_97);
        }
    }




    static if(!is(typeof(OBJ_id_smime_mod_ets_eSigPolicy_88))) {
        private enum enumMixinStr_OBJ_id_smime_mod_ets_eSigPolicy_88 = `enum OBJ_id_smime_mod_ets_eSigPolicy_88 = OBJ_id_smime_mod , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_mod_ets_eSigPolicy_88); }))) {
            mixin(enumMixinStr_OBJ_id_smime_mod_ets_eSigPolicy_88);
        }
    }




    static if(!is(typeof(NID_id_smime_mod_ets_eSigPolicy_88))) {
        private enum enumMixinStr_NID_id_smime_mod_ets_eSigPolicy_88 = `enum NID_id_smime_mod_ets_eSigPolicy_88 = 202;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_mod_ets_eSigPolicy_88); }))) {
            mixin(enumMixinStr_NID_id_smime_mod_ets_eSigPolicy_88);
        }
    }




    static if(!is(typeof(SN_id_smime_mod_ets_eSigPolicy_88))) {
        private enum enumMixinStr_SN_id_smime_mod_ets_eSigPolicy_88 = `enum SN_id_smime_mod_ets_eSigPolicy_88 = "id-smime-mod-ets-eSigPolicy-88";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_mod_ets_eSigPolicy_88); }))) {
            mixin(enumMixinStr_SN_id_smime_mod_ets_eSigPolicy_88);
        }
    }




    static if(!is(typeof(OBJ_id_smime_mod_ets_eSignature_97))) {
        private enum enumMixinStr_OBJ_id_smime_mod_ets_eSignature_97 = `enum OBJ_id_smime_mod_ets_eSignature_97 = OBJ_id_smime_mod , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_mod_ets_eSignature_97); }))) {
            mixin(enumMixinStr_OBJ_id_smime_mod_ets_eSignature_97);
        }
    }




    static if(!is(typeof(NID_id_smime_mod_ets_eSignature_97))) {
        private enum enumMixinStr_NID_id_smime_mod_ets_eSignature_97 = `enum NID_id_smime_mod_ets_eSignature_97 = 201;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_mod_ets_eSignature_97); }))) {
            mixin(enumMixinStr_NID_id_smime_mod_ets_eSignature_97);
        }
    }




    static if(!is(typeof(SN_id_smime_mod_ets_eSignature_97))) {
        private enum enumMixinStr_SN_id_smime_mod_ets_eSignature_97 = `enum SN_id_smime_mod_ets_eSignature_97 = "id-smime-mod-ets-eSignature-97";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_mod_ets_eSignature_97); }))) {
            mixin(enumMixinStr_SN_id_smime_mod_ets_eSignature_97);
        }
    }




    static if(!is(typeof(OBJ_id_smime_mod_ets_eSignature_88))) {
        private enum enumMixinStr_OBJ_id_smime_mod_ets_eSignature_88 = `enum OBJ_id_smime_mod_ets_eSignature_88 = OBJ_id_smime_mod , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_mod_ets_eSignature_88); }))) {
            mixin(enumMixinStr_OBJ_id_smime_mod_ets_eSignature_88);
        }
    }




    static if(!is(typeof(NID_id_smime_mod_ets_eSignature_88))) {
        private enum enumMixinStr_NID_id_smime_mod_ets_eSignature_88 = `enum NID_id_smime_mod_ets_eSignature_88 = 200;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_mod_ets_eSignature_88); }))) {
            mixin(enumMixinStr_NID_id_smime_mod_ets_eSignature_88);
        }
    }




    static if(!is(typeof(SN_id_smime_mod_ets_eSignature_88))) {
        private enum enumMixinStr_SN_id_smime_mod_ets_eSignature_88 = `enum SN_id_smime_mod_ets_eSignature_88 = "id-smime-mod-ets-eSignature-88";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_mod_ets_eSignature_88); }))) {
            mixin(enumMixinStr_SN_id_smime_mod_ets_eSignature_88);
        }
    }




    static if(!is(typeof(OBJ_id_smime_mod_msg_v3))) {
        private enum enumMixinStr_OBJ_id_smime_mod_msg_v3 = `enum OBJ_id_smime_mod_msg_v3 = OBJ_id_smime_mod , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_mod_msg_v3); }))) {
            mixin(enumMixinStr_OBJ_id_smime_mod_msg_v3);
        }
    }




    static if(!is(typeof(NID_id_smime_mod_msg_v3))) {
        private enum enumMixinStr_NID_id_smime_mod_msg_v3 = `enum NID_id_smime_mod_msg_v3 = 199;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_mod_msg_v3); }))) {
            mixin(enumMixinStr_NID_id_smime_mod_msg_v3);
        }
    }




    static if(!is(typeof(SN_id_smime_mod_msg_v3))) {
        private enum enumMixinStr_SN_id_smime_mod_msg_v3 = `enum SN_id_smime_mod_msg_v3 = "id-smime-mod-msg-v3";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_mod_msg_v3); }))) {
            mixin(enumMixinStr_SN_id_smime_mod_msg_v3);
        }
    }




    static if(!is(typeof(OBJ_id_smime_mod_oid))) {
        private enum enumMixinStr_OBJ_id_smime_mod_oid = `enum OBJ_id_smime_mod_oid = OBJ_id_smime_mod , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_mod_oid); }))) {
            mixin(enumMixinStr_OBJ_id_smime_mod_oid);
        }
    }




    static if(!is(typeof(NID_id_smime_mod_oid))) {
        private enum enumMixinStr_NID_id_smime_mod_oid = `enum NID_id_smime_mod_oid = 198;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_mod_oid); }))) {
            mixin(enumMixinStr_NID_id_smime_mod_oid);
        }
    }




    static if(!is(typeof(SN_id_smime_mod_oid))) {
        private enum enumMixinStr_SN_id_smime_mod_oid = `enum SN_id_smime_mod_oid = "id-smime-mod-oid";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_mod_oid); }))) {
            mixin(enumMixinStr_SN_id_smime_mod_oid);
        }
    }




    static if(!is(typeof(OBJ_id_smime_mod_ess))) {
        private enum enumMixinStr_OBJ_id_smime_mod_ess = `enum OBJ_id_smime_mod_ess = OBJ_id_smime_mod , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_mod_ess); }))) {
            mixin(enumMixinStr_OBJ_id_smime_mod_ess);
        }
    }




    static if(!is(typeof(NID_id_smime_mod_ess))) {
        private enum enumMixinStr_NID_id_smime_mod_ess = `enum NID_id_smime_mod_ess = 197;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_mod_ess); }))) {
            mixin(enumMixinStr_NID_id_smime_mod_ess);
        }
    }




    static if(!is(typeof(SN_id_smime_mod_ess))) {
        private enum enumMixinStr_SN_id_smime_mod_ess = `enum SN_id_smime_mod_ess = "id-smime-mod-ess";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_mod_ess); }))) {
            mixin(enumMixinStr_SN_id_smime_mod_ess);
        }
    }




    static if(!is(typeof(OBJ_id_smime_mod_cms))) {
        private enum enumMixinStr_OBJ_id_smime_mod_cms = `enum OBJ_id_smime_mod_cms = OBJ_id_smime_mod , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_mod_cms); }))) {
            mixin(enumMixinStr_OBJ_id_smime_mod_cms);
        }
    }




    static if(!is(typeof(NID_id_smime_mod_cms))) {
        private enum enumMixinStr_NID_id_smime_mod_cms = `enum NID_id_smime_mod_cms = 196;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_mod_cms); }))) {
            mixin(enumMixinStr_NID_id_smime_mod_cms);
        }
    }




    static if(!is(typeof(SN_id_smime_mod_cms))) {
        private enum enumMixinStr_SN_id_smime_mod_cms = `enum SN_id_smime_mod_cms = "id-smime-mod-cms";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_mod_cms); }))) {
            mixin(enumMixinStr_SN_id_smime_mod_cms);
        }
    }




    static if(!is(typeof(OBJ_id_smime_cti))) {
        private enum enumMixinStr_OBJ_id_smime_cti = `enum OBJ_id_smime_cti = OBJ_SMIME , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_cti); }))) {
            mixin(enumMixinStr_OBJ_id_smime_cti);
        }
    }




    static if(!is(typeof(NID_id_smime_cti))) {
        private enum enumMixinStr_NID_id_smime_cti = `enum NID_id_smime_cti = 195;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_cti); }))) {
            mixin(enumMixinStr_NID_id_smime_cti);
        }
    }




    static if(!is(typeof(SN_id_smime_cti))) {
        private enum enumMixinStr_SN_id_smime_cti = `enum SN_id_smime_cti = "id-smime-cti";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_cti); }))) {
            mixin(enumMixinStr_SN_id_smime_cti);
        }
    }




    static if(!is(typeof(OBJ_id_smime_spq))) {
        private enum enumMixinStr_OBJ_id_smime_spq = `enum OBJ_id_smime_spq = OBJ_SMIME , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_spq); }))) {
            mixin(enumMixinStr_OBJ_id_smime_spq);
        }
    }




    static if(!is(typeof(NID_id_smime_spq))) {
        private enum enumMixinStr_NID_id_smime_spq = `enum NID_id_smime_spq = 194;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_spq); }))) {
            mixin(enumMixinStr_NID_id_smime_spq);
        }
    }




    static if(!is(typeof(SN_id_smime_spq))) {
        private enum enumMixinStr_SN_id_smime_spq = `enum SN_id_smime_spq = "id-smime-spq";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_spq); }))) {
            mixin(enumMixinStr_SN_id_smime_spq);
        }
    }




    static if(!is(typeof(OBJ_id_smime_cd))) {
        private enum enumMixinStr_OBJ_id_smime_cd = `enum OBJ_id_smime_cd = OBJ_SMIME , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_cd); }))) {
            mixin(enumMixinStr_OBJ_id_smime_cd);
        }
    }




    static if(!is(typeof(NID_id_smime_cd))) {
        private enum enumMixinStr_NID_id_smime_cd = `enum NID_id_smime_cd = 193;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_cd); }))) {
            mixin(enumMixinStr_NID_id_smime_cd);
        }
    }




    static if(!is(typeof(SN_id_smime_cd))) {
        private enum enumMixinStr_SN_id_smime_cd = `enum SN_id_smime_cd = "id-smime-cd";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_cd); }))) {
            mixin(enumMixinStr_SN_id_smime_cd);
        }
    }




    static if(!is(typeof(OBJ_id_smime_alg))) {
        private enum enumMixinStr_OBJ_id_smime_alg = `enum OBJ_id_smime_alg = OBJ_SMIME , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_alg); }))) {
            mixin(enumMixinStr_OBJ_id_smime_alg);
        }
    }




    static if(!is(typeof(NID_id_smime_alg))) {
        private enum enumMixinStr_NID_id_smime_alg = `enum NID_id_smime_alg = 192;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_alg); }))) {
            mixin(enumMixinStr_NID_id_smime_alg);
        }
    }




    static if(!is(typeof(SN_id_smime_alg))) {
        private enum enumMixinStr_SN_id_smime_alg = `enum SN_id_smime_alg = "id-smime-alg";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_alg); }))) {
            mixin(enumMixinStr_SN_id_smime_alg);
        }
    }




    static if(!is(typeof(OBJ_id_smime_aa))) {
        private enum enumMixinStr_OBJ_id_smime_aa = `enum OBJ_id_smime_aa = OBJ_SMIME , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_aa); }))) {
            mixin(enumMixinStr_OBJ_id_smime_aa);
        }
    }




    static if(!is(typeof(NID_id_smime_aa))) {
        private enum enumMixinStr_NID_id_smime_aa = `enum NID_id_smime_aa = 191;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_aa); }))) {
            mixin(enumMixinStr_NID_id_smime_aa);
        }
    }




    static if(!is(typeof(SN_id_smime_aa))) {
        private enum enumMixinStr_SN_id_smime_aa = `enum SN_id_smime_aa = "id-smime-aa";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_aa); }))) {
            mixin(enumMixinStr_SN_id_smime_aa);
        }
    }




    static if(!is(typeof(OBJ_id_smime_ct))) {
        private enum enumMixinStr_OBJ_id_smime_ct = `enum OBJ_id_smime_ct = OBJ_SMIME , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_ct); }))) {
            mixin(enumMixinStr_OBJ_id_smime_ct);
        }
    }




    static if(!is(typeof(NID_id_smime_ct))) {
        private enum enumMixinStr_NID_id_smime_ct = `enum NID_id_smime_ct = 190;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_ct); }))) {
            mixin(enumMixinStr_NID_id_smime_ct);
        }
    }




    static if(!is(typeof(SN_id_smime_ct))) {
        private enum enumMixinStr_SN_id_smime_ct = `enum SN_id_smime_ct = "id-smime-ct";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_ct); }))) {
            mixin(enumMixinStr_SN_id_smime_ct);
        }
    }




    static if(!is(typeof(OBJ_id_smime_mod))) {
        private enum enumMixinStr_OBJ_id_smime_mod = `enum OBJ_id_smime_mod = OBJ_SMIME , 0L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_smime_mod); }))) {
            mixin(enumMixinStr_OBJ_id_smime_mod);
        }
    }




    static if(!is(typeof(NID_id_smime_mod))) {
        private enum enumMixinStr_NID_id_smime_mod = `enum NID_id_smime_mod = 189;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_smime_mod); }))) {
            mixin(enumMixinStr_NID_id_smime_mod);
        }
    }




    static if(!is(typeof(SN_id_smime_mod))) {
        private enum enumMixinStr_SN_id_smime_mod = `enum SN_id_smime_mod = "id-smime-mod";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_smime_mod); }))) {
            mixin(enumMixinStr_SN_id_smime_mod);
        }
    }




    static if(!is(typeof(OBJ_SMIME))) {
        private enum enumMixinStr_OBJ_SMIME = `enum OBJ_SMIME = OBJ_pkcs9 , 16L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_SMIME); }))) {
            mixin(enumMixinStr_OBJ_SMIME);
        }
    }




    static if(!is(typeof(NID_SMIME))) {
        private enum enumMixinStr_NID_SMIME = `enum NID_SMIME = 188;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_SMIME); }))) {
            mixin(enumMixinStr_NID_SMIME);
        }
    }




    static if(!is(typeof(LN_SMIME))) {
        private enum enumMixinStr_LN_SMIME = `enum LN_SMIME = "S/MIME";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_SMIME); }))) {
            mixin(enumMixinStr_LN_SMIME);
        }
    }




    static if(!is(typeof(SN_SMIME))) {
        private enum enumMixinStr_SN_SMIME = `enum SN_SMIME = "SMIME";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_SMIME); }))) {
            mixin(enumMixinStr_SN_SMIME);
        }
    }




    static if(!is(typeof(OBJ_SMIMECapabilities))) {
        private enum enumMixinStr_OBJ_SMIMECapabilities = `enum OBJ_SMIMECapabilities = OBJ_pkcs9 , 15L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_SMIMECapabilities); }))) {
            mixin(enumMixinStr_OBJ_SMIMECapabilities);
        }
    }




    static if(!is(typeof(NID_SMIMECapabilities))) {
        private enum enumMixinStr_NID_SMIMECapabilities = `enum NID_SMIMECapabilities = 167;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_SMIMECapabilities); }))) {
            mixin(enumMixinStr_NID_SMIMECapabilities);
        }
    }




    static if(!is(typeof(LN_SMIMECapabilities))) {
        private enum enumMixinStr_LN_SMIMECapabilities = `enum LN_SMIMECapabilities = "S/MIME Capabilities";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_SMIMECapabilities); }))) {
            mixin(enumMixinStr_LN_SMIMECapabilities);
        }
    }




    static if(!is(typeof(SN_SMIMECapabilities))) {
        private enum enumMixinStr_SN_SMIMECapabilities = `enum SN_SMIMECapabilities = "SMIME-CAPS";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_SMIMECapabilities); }))) {
            mixin(enumMixinStr_SN_SMIMECapabilities);
        }
    }




    static if(!is(typeof(OBJ_ext_req))) {
        private enum enumMixinStr_OBJ_ext_req = `enum OBJ_ext_req = OBJ_pkcs9 , 14L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ext_req); }))) {
            mixin(enumMixinStr_OBJ_ext_req);
        }
    }




    static if(!is(typeof(NID_ext_req))) {
        private enum enumMixinStr_NID_ext_req = `enum NID_ext_req = 172;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ext_req); }))) {
            mixin(enumMixinStr_NID_ext_req);
        }
    }




    static if(!is(typeof(LN_ext_req))) {
        private enum enumMixinStr_LN_ext_req = `enum LN_ext_req = "Extension Request";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ext_req); }))) {
            mixin(enumMixinStr_LN_ext_req);
        }
    }




    static if(!is(typeof(SN_ext_req))) {
        private enum enumMixinStr_SN_ext_req = `enum SN_ext_req = "extReq";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ext_req); }))) {
            mixin(enumMixinStr_SN_ext_req);
        }
    }




    static if(!is(typeof(OBJ_pkcs9_extCertAttributes))) {
        private enum enumMixinStr_OBJ_pkcs9_extCertAttributes = `enum OBJ_pkcs9_extCertAttributes = OBJ_pkcs9 , 9L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pkcs9_extCertAttributes); }))) {
            mixin(enumMixinStr_OBJ_pkcs9_extCertAttributes);
        }
    }




    static if(!is(typeof(NID_pkcs9_extCertAttributes))) {
        private enum enumMixinStr_NID_pkcs9_extCertAttributes = `enum NID_pkcs9_extCertAttributes = 56;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pkcs9_extCertAttributes); }))) {
            mixin(enumMixinStr_NID_pkcs9_extCertAttributes);
        }
    }




    static if(!is(typeof(LN_pkcs9_extCertAttributes))) {
        private enum enumMixinStr_LN_pkcs9_extCertAttributes = `enum LN_pkcs9_extCertAttributes = "extendedCertificateAttributes";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pkcs9_extCertAttributes); }))) {
            mixin(enumMixinStr_LN_pkcs9_extCertAttributes);
        }
    }






    static if(!is(typeof(OBJ_pkcs9_unstructuredAddress))) {
        private enum enumMixinStr_OBJ_pkcs9_unstructuredAddress = `enum OBJ_pkcs9_unstructuredAddress = OBJ_pkcs9 , 8L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pkcs9_unstructuredAddress); }))) {
            mixin(enumMixinStr_OBJ_pkcs9_unstructuredAddress);
        }
    }




    static if(!is(typeof(NID_pkcs9_unstructuredAddress))) {
        private enum enumMixinStr_NID_pkcs9_unstructuredAddress = `enum NID_pkcs9_unstructuredAddress = 55;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pkcs9_unstructuredAddress); }))) {
            mixin(enumMixinStr_NID_pkcs9_unstructuredAddress);
        }
    }




    static if(!is(typeof(SHA_LONG))) {
        private enum enumMixinStr_SHA_LONG = `enum SHA_LONG = unsigned int;`;
        static if(is(typeof({ mixin(enumMixinStr_SHA_LONG); }))) {
            mixin(enumMixinStr_SHA_LONG);
        }
    }




    static if(!is(typeof(SHA_LBLOCK))) {
        private enum enumMixinStr_SHA_LBLOCK = `enum SHA_LBLOCK = 16;`;
        static if(is(typeof({ mixin(enumMixinStr_SHA_LBLOCK); }))) {
            mixin(enumMixinStr_SHA_LBLOCK);
        }
    }




    static if(!is(typeof(SHA_CBLOCK))) {
        private enum enumMixinStr_SHA_CBLOCK = `enum SHA_CBLOCK = ( 16 * 4 );`;
        static if(is(typeof({ mixin(enumMixinStr_SHA_CBLOCK); }))) {
            mixin(enumMixinStr_SHA_CBLOCK);
        }
    }




    static if(!is(typeof(SHA_LAST_BLOCK))) {
        private enum enumMixinStr_SHA_LAST_BLOCK = `enum SHA_LAST_BLOCK = ( ( 16 * 4 ) - 8 );`;
        static if(is(typeof({ mixin(enumMixinStr_SHA_LAST_BLOCK); }))) {
            mixin(enumMixinStr_SHA_LAST_BLOCK);
        }
    }




    static if(!is(typeof(SHA_DIGEST_LENGTH))) {
        private enum enumMixinStr_SHA_DIGEST_LENGTH = `enum SHA_DIGEST_LENGTH = 20;`;
        static if(is(typeof({ mixin(enumMixinStr_SHA_DIGEST_LENGTH); }))) {
            mixin(enumMixinStr_SHA_DIGEST_LENGTH);
        }
    }




    static if(!is(typeof(LN_pkcs9_unstructuredAddress))) {
        private enum enumMixinStr_LN_pkcs9_unstructuredAddress = `enum LN_pkcs9_unstructuredAddress = "unstructuredAddress";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pkcs9_unstructuredAddress); }))) {
            mixin(enumMixinStr_LN_pkcs9_unstructuredAddress);
        }
    }




    static if(!is(typeof(OBJ_pkcs9_challengePassword))) {
        private enum enumMixinStr_OBJ_pkcs9_challengePassword = `enum OBJ_pkcs9_challengePassword = OBJ_pkcs9 , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pkcs9_challengePassword); }))) {
            mixin(enumMixinStr_OBJ_pkcs9_challengePassword);
        }
    }




    static if(!is(typeof(NID_pkcs9_challengePassword))) {
        private enum enumMixinStr_NID_pkcs9_challengePassword = `enum NID_pkcs9_challengePassword = 54;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pkcs9_challengePassword); }))) {
            mixin(enumMixinStr_NID_pkcs9_challengePassword);
        }
    }




    static if(!is(typeof(LN_pkcs9_challengePassword))) {
        private enum enumMixinStr_LN_pkcs9_challengePassword = `enum LN_pkcs9_challengePassword = "challengePassword";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pkcs9_challengePassword); }))) {
            mixin(enumMixinStr_LN_pkcs9_challengePassword);
        }
    }




    static if(!is(typeof(OBJ_pkcs9_countersignature))) {
        private enum enumMixinStr_OBJ_pkcs9_countersignature = `enum OBJ_pkcs9_countersignature = OBJ_pkcs9 , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pkcs9_countersignature); }))) {
            mixin(enumMixinStr_OBJ_pkcs9_countersignature);
        }
    }




    static if(!is(typeof(NID_pkcs9_countersignature))) {
        private enum enumMixinStr_NID_pkcs9_countersignature = `enum NID_pkcs9_countersignature = 53;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pkcs9_countersignature); }))) {
            mixin(enumMixinStr_NID_pkcs9_countersignature);
        }
    }




    static if(!is(typeof(LN_pkcs9_countersignature))) {
        private enum enumMixinStr_LN_pkcs9_countersignature = `enum LN_pkcs9_countersignature = "countersignature";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pkcs9_countersignature); }))) {
            mixin(enumMixinStr_LN_pkcs9_countersignature);
        }
    }




    static if(!is(typeof(OBJ_pkcs9_signingTime))) {
        private enum enumMixinStr_OBJ_pkcs9_signingTime = `enum OBJ_pkcs9_signingTime = OBJ_pkcs9 , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pkcs9_signingTime); }))) {
            mixin(enumMixinStr_OBJ_pkcs9_signingTime);
        }
    }




    static if(!is(typeof(NID_pkcs9_signingTime))) {
        private enum enumMixinStr_NID_pkcs9_signingTime = `enum NID_pkcs9_signingTime = 52;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pkcs9_signingTime); }))) {
            mixin(enumMixinStr_NID_pkcs9_signingTime);
        }
    }




    static if(!is(typeof(LN_pkcs9_signingTime))) {
        private enum enumMixinStr_LN_pkcs9_signingTime = `enum LN_pkcs9_signingTime = "signingTime";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pkcs9_signingTime); }))) {
            mixin(enumMixinStr_LN_pkcs9_signingTime);
        }
    }




    static if(!is(typeof(OBJ_pkcs9_messageDigest))) {
        private enum enumMixinStr_OBJ_pkcs9_messageDigest = `enum OBJ_pkcs9_messageDigest = OBJ_pkcs9 , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pkcs9_messageDigest); }))) {
            mixin(enumMixinStr_OBJ_pkcs9_messageDigest);
        }
    }




    static if(!is(typeof(SHA256_CBLOCK))) {
        private enum enumMixinStr_SHA256_CBLOCK = `enum SHA256_CBLOCK = ( 16 * 4 );`;
        static if(is(typeof({ mixin(enumMixinStr_SHA256_CBLOCK); }))) {
            mixin(enumMixinStr_SHA256_CBLOCK);
        }
    }




    static if(!is(typeof(NID_pkcs9_messageDigest))) {
        private enum enumMixinStr_NID_pkcs9_messageDigest = `enum NID_pkcs9_messageDigest = 51;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pkcs9_messageDigest); }))) {
            mixin(enumMixinStr_NID_pkcs9_messageDigest);
        }
    }




    static if(!is(typeof(LN_pkcs9_messageDigest))) {
        private enum enumMixinStr_LN_pkcs9_messageDigest = `enum LN_pkcs9_messageDigest = "messageDigest";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pkcs9_messageDigest); }))) {
            mixin(enumMixinStr_LN_pkcs9_messageDigest);
        }
    }




    static if(!is(typeof(OBJ_pkcs9_contentType))) {
        private enum enumMixinStr_OBJ_pkcs9_contentType = `enum OBJ_pkcs9_contentType = OBJ_pkcs9 , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pkcs9_contentType); }))) {
            mixin(enumMixinStr_OBJ_pkcs9_contentType);
        }
    }




    static if(!is(typeof(NID_pkcs9_contentType))) {
        private enum enumMixinStr_NID_pkcs9_contentType = `enum NID_pkcs9_contentType = 50;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pkcs9_contentType); }))) {
            mixin(enumMixinStr_NID_pkcs9_contentType);
        }
    }




    static if(!is(typeof(LN_pkcs9_contentType))) {
        private enum enumMixinStr_LN_pkcs9_contentType = `enum LN_pkcs9_contentType = "contentType";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pkcs9_contentType); }))) {
            mixin(enumMixinStr_LN_pkcs9_contentType);
        }
    }




    static if(!is(typeof(OBJ_pkcs9_unstructuredName))) {
        private enum enumMixinStr_OBJ_pkcs9_unstructuredName = `enum OBJ_pkcs9_unstructuredName = OBJ_pkcs9 , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pkcs9_unstructuredName); }))) {
            mixin(enumMixinStr_OBJ_pkcs9_unstructuredName);
        }
    }




    static if(!is(typeof(NID_pkcs9_unstructuredName))) {
        private enum enumMixinStr_NID_pkcs9_unstructuredName = `enum NID_pkcs9_unstructuredName = 49;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pkcs9_unstructuredName); }))) {
            mixin(enumMixinStr_NID_pkcs9_unstructuredName);
        }
    }




    static if(!is(typeof(LN_pkcs9_unstructuredName))) {
        private enum enumMixinStr_LN_pkcs9_unstructuredName = `enum LN_pkcs9_unstructuredName = "unstructuredName";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pkcs9_unstructuredName); }))) {
            mixin(enumMixinStr_LN_pkcs9_unstructuredName);
        }
    }




    static if(!is(typeof(OBJ_pkcs9_emailAddress))) {
        private enum enumMixinStr_OBJ_pkcs9_emailAddress = `enum OBJ_pkcs9_emailAddress = OBJ_pkcs9 , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pkcs9_emailAddress); }))) {
            mixin(enumMixinStr_OBJ_pkcs9_emailAddress);
        }
    }




    static if(!is(typeof(NID_pkcs9_emailAddress))) {
        private enum enumMixinStr_NID_pkcs9_emailAddress = `enum NID_pkcs9_emailAddress = 48;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pkcs9_emailAddress); }))) {
            mixin(enumMixinStr_NID_pkcs9_emailAddress);
        }
    }




    static if(!is(typeof(LN_pkcs9_emailAddress))) {
        private enum enumMixinStr_LN_pkcs9_emailAddress = `enum LN_pkcs9_emailAddress = "emailAddress";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pkcs9_emailAddress); }))) {
            mixin(enumMixinStr_LN_pkcs9_emailAddress);
        }
    }




    static if(!is(typeof(OBJ_pkcs9))) {
        private enum enumMixinStr_OBJ_pkcs9 = `enum OBJ_pkcs9 = OBJ_pkcs , 9L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pkcs9); }))) {
            mixin(enumMixinStr_OBJ_pkcs9);
        }
    }




    static if(!is(typeof(NID_pkcs9))) {
        private enum enumMixinStr_NID_pkcs9 = `enum NID_pkcs9 = 47;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pkcs9); }))) {
            mixin(enumMixinStr_NID_pkcs9);
        }
    }




    static if(!is(typeof(SN_pkcs9))) {
        private enum enumMixinStr_SN_pkcs9 = `enum SN_pkcs9 = "pkcs9";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_pkcs9); }))) {
            mixin(enumMixinStr_SN_pkcs9);
        }
    }




    static if(!is(typeof(OBJ_pkcs7_encrypted))) {
        private enum enumMixinStr_OBJ_pkcs7_encrypted = `enum OBJ_pkcs7_encrypted = OBJ_pkcs7 , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pkcs7_encrypted); }))) {
            mixin(enumMixinStr_OBJ_pkcs7_encrypted);
        }
    }




    static if(!is(typeof(SHA224_DIGEST_LENGTH))) {
        private enum enumMixinStr_SHA224_DIGEST_LENGTH = `enum SHA224_DIGEST_LENGTH = 28;`;
        static if(is(typeof({ mixin(enumMixinStr_SHA224_DIGEST_LENGTH); }))) {
            mixin(enumMixinStr_SHA224_DIGEST_LENGTH);
        }
    }




    static if(!is(typeof(SHA256_DIGEST_LENGTH))) {
        private enum enumMixinStr_SHA256_DIGEST_LENGTH = `enum SHA256_DIGEST_LENGTH = 32;`;
        static if(is(typeof({ mixin(enumMixinStr_SHA256_DIGEST_LENGTH); }))) {
            mixin(enumMixinStr_SHA256_DIGEST_LENGTH);
        }
    }




    static if(!is(typeof(SHA384_DIGEST_LENGTH))) {
        private enum enumMixinStr_SHA384_DIGEST_LENGTH = `enum SHA384_DIGEST_LENGTH = 48;`;
        static if(is(typeof({ mixin(enumMixinStr_SHA384_DIGEST_LENGTH); }))) {
            mixin(enumMixinStr_SHA384_DIGEST_LENGTH);
        }
    }




    static if(!is(typeof(SHA512_DIGEST_LENGTH))) {
        private enum enumMixinStr_SHA512_DIGEST_LENGTH = `enum SHA512_DIGEST_LENGTH = 64;`;
        static if(is(typeof({ mixin(enumMixinStr_SHA512_DIGEST_LENGTH); }))) {
            mixin(enumMixinStr_SHA512_DIGEST_LENGTH);
        }
    }




    static if(!is(typeof(SHA512_CBLOCK))) {
        private enum enumMixinStr_SHA512_CBLOCK = `enum SHA512_CBLOCK = ( 16 * 8 );`;
        static if(is(typeof({ mixin(enumMixinStr_SHA512_CBLOCK); }))) {
            mixin(enumMixinStr_SHA512_CBLOCK);
        }
    }




    static if(!is(typeof(SHA_LONG64))) {
        private enum enumMixinStr_SHA_LONG64 = `enum SHA_LONG64 = unsigned long long;`;
        static if(is(typeof({ mixin(enumMixinStr_SHA_LONG64); }))) {
            mixin(enumMixinStr_SHA_LONG64);
        }
    }






    static if(!is(typeof(NID_pkcs7_encrypted))) {
        private enum enumMixinStr_NID_pkcs7_encrypted = `enum NID_pkcs7_encrypted = 26;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pkcs7_encrypted); }))) {
            mixin(enumMixinStr_NID_pkcs7_encrypted);
        }
    }




    static if(!is(typeof(LN_pkcs7_encrypted))) {
        private enum enumMixinStr_LN_pkcs7_encrypted = `enum LN_pkcs7_encrypted = "pkcs7-encryptedData";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pkcs7_encrypted); }))) {
            mixin(enumMixinStr_LN_pkcs7_encrypted);
        }
    }




    static if(!is(typeof(OBJ_pkcs7_digest))) {
        private enum enumMixinStr_OBJ_pkcs7_digest = `enum OBJ_pkcs7_digest = OBJ_pkcs7 , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pkcs7_digest); }))) {
            mixin(enumMixinStr_OBJ_pkcs7_digest);
        }
    }




    static if(!is(typeof(NID_pkcs7_digest))) {
        private enum enumMixinStr_NID_pkcs7_digest = `enum NID_pkcs7_digest = 25;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pkcs7_digest); }))) {
            mixin(enumMixinStr_NID_pkcs7_digest);
        }
    }




    static if(!is(typeof(LN_pkcs7_digest))) {
        private enum enumMixinStr_LN_pkcs7_digest = `enum LN_pkcs7_digest = "pkcs7-digestData";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pkcs7_digest); }))) {
            mixin(enumMixinStr_LN_pkcs7_digest);
        }
    }




    static if(!is(typeof(OBJ_pkcs7_signedAndEnveloped))) {
        private enum enumMixinStr_OBJ_pkcs7_signedAndEnveloped = `enum OBJ_pkcs7_signedAndEnveloped = OBJ_pkcs7 , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pkcs7_signedAndEnveloped); }))) {
            mixin(enumMixinStr_OBJ_pkcs7_signedAndEnveloped);
        }
    }




    static if(!is(typeof(NID_pkcs7_signedAndEnveloped))) {
        private enum enumMixinStr_NID_pkcs7_signedAndEnveloped = `enum NID_pkcs7_signedAndEnveloped = 24;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pkcs7_signedAndEnveloped); }))) {
            mixin(enumMixinStr_NID_pkcs7_signedAndEnveloped);
        }
    }




    static if(!is(typeof(LN_pkcs7_signedAndEnveloped))) {
        private enum enumMixinStr_LN_pkcs7_signedAndEnveloped = `enum LN_pkcs7_signedAndEnveloped = "pkcs7-signedAndEnvelopedData";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pkcs7_signedAndEnveloped); }))) {
            mixin(enumMixinStr_LN_pkcs7_signedAndEnveloped);
        }
    }




    static if(!is(typeof(OBJ_pkcs7_enveloped))) {
        private enum enumMixinStr_OBJ_pkcs7_enveloped = `enum OBJ_pkcs7_enveloped = OBJ_pkcs7 , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pkcs7_enveloped); }))) {
            mixin(enumMixinStr_OBJ_pkcs7_enveloped);
        }
    }




    static if(!is(typeof(NID_pkcs7_enveloped))) {
        private enum enumMixinStr_NID_pkcs7_enveloped = `enum NID_pkcs7_enveloped = 23;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pkcs7_enveloped); }))) {
            mixin(enumMixinStr_NID_pkcs7_enveloped);
        }
    }




    static if(!is(typeof(LN_pkcs7_enveloped))) {
        private enum enumMixinStr_LN_pkcs7_enveloped = `enum LN_pkcs7_enveloped = "pkcs7-envelopedData";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pkcs7_enveloped); }))) {
            mixin(enumMixinStr_LN_pkcs7_enveloped);
        }
    }




    static if(!is(typeof(OBJ_pkcs7_signed))) {
        private enum enumMixinStr_OBJ_pkcs7_signed = `enum OBJ_pkcs7_signed = OBJ_pkcs7 , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pkcs7_signed); }))) {
            mixin(enumMixinStr_OBJ_pkcs7_signed);
        }
    }




    static if(!is(typeof(NID_pkcs7_signed))) {
        private enum enumMixinStr_NID_pkcs7_signed = `enum NID_pkcs7_signed = 22;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pkcs7_signed); }))) {
            mixin(enumMixinStr_NID_pkcs7_signed);
        }
    }




    static if(!is(typeof(LN_pkcs7_signed))) {
        private enum enumMixinStr_LN_pkcs7_signed = `enum LN_pkcs7_signed = "pkcs7-signedData";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pkcs7_signed); }))) {
            mixin(enumMixinStr_LN_pkcs7_signed);
        }
    }




    static if(!is(typeof(OBJ_pkcs7_data))) {
        private enum enumMixinStr_OBJ_pkcs7_data = `enum OBJ_pkcs7_data = OBJ_pkcs7 , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pkcs7_data); }))) {
            mixin(enumMixinStr_OBJ_pkcs7_data);
        }
    }




    static if(!is(typeof(NID_pkcs7_data))) {
        private enum enumMixinStr_NID_pkcs7_data = `enum NID_pkcs7_data = 21;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pkcs7_data); }))) {
            mixin(enumMixinStr_NID_pkcs7_data);
        }
    }






    static if(!is(typeof(LN_pkcs7_data))) {
        private enum enumMixinStr_LN_pkcs7_data = `enum LN_pkcs7_data = "pkcs7-data";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pkcs7_data); }))) {
            mixin(enumMixinStr_LN_pkcs7_data);
        }
    }




    static if(!is(typeof(OBJ_pkcs7))) {
        private enum enumMixinStr_OBJ_pkcs7 = `enum OBJ_pkcs7 = OBJ_pkcs , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pkcs7); }))) {
            mixin(enumMixinStr_OBJ_pkcs7);
        }
    }




    static if(!is(typeof(NID_pkcs7))) {
        private enum enumMixinStr_NID_pkcs7 = `enum NID_pkcs7 = 20;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pkcs7); }))) {
            mixin(enumMixinStr_NID_pkcs7);
        }
    }




    static if(!is(typeof(SN_pkcs7))) {
        private enum enumMixinStr_SN_pkcs7 = `enum SN_pkcs7 = "pkcs7";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_pkcs7); }))) {
            mixin(enumMixinStr_SN_pkcs7);
        }
    }




    static if(!is(typeof(OBJ_pbmac1))) {
        private enum enumMixinStr_OBJ_pbmac1 = `enum OBJ_pbmac1 = OBJ_pkcs5 , 14L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pbmac1); }))) {
            mixin(enumMixinStr_OBJ_pbmac1);
        }
    }




    static if(!is(typeof(NID_pbmac1))) {
        private enum enumMixinStr_NID_pbmac1 = `enum NID_pbmac1 = 162;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pbmac1); }))) {
            mixin(enumMixinStr_NID_pbmac1);
        }
    }




    static if(!is(typeof(LN_pbmac1))) {
        private enum enumMixinStr_LN_pbmac1 = `enum LN_pbmac1 = "PBMAC1";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pbmac1); }))) {
            mixin(enumMixinStr_LN_pbmac1);
        }
    }




    static if(!is(typeof(OBJ_pbes2))) {
        private enum enumMixinStr_OBJ_pbes2 = `enum OBJ_pbes2 = OBJ_pkcs5 , 13L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pbes2); }))) {
            mixin(enumMixinStr_OBJ_pbes2);
        }
    }




    static if(!is(typeof(NID_pbes2))) {
        private enum enumMixinStr_NID_pbes2 = `enum NID_pbes2 = 161;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pbes2); }))) {
            mixin(enumMixinStr_NID_pbes2);
        }
    }




    static if(!is(typeof(LN_pbes2))) {
        private enum enumMixinStr_LN_pbes2 = `enum LN_pbes2 = "PBES2";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pbes2); }))) {
            mixin(enumMixinStr_LN_pbes2);
        }
    }




    static if(!is(typeof(OBJ_id_pbkdf2))) {
        private enum enumMixinStr_OBJ_id_pbkdf2 = `enum OBJ_id_pbkdf2 = OBJ_pkcs5 , 12L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_pbkdf2); }))) {
            mixin(enumMixinStr_OBJ_id_pbkdf2);
        }
    }




    static if(!is(typeof(NID_id_pbkdf2))) {
        private enum enumMixinStr_NID_id_pbkdf2 = `enum NID_id_pbkdf2 = 69;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_pbkdf2); }))) {
            mixin(enumMixinStr_NID_id_pbkdf2);
        }
    }




    static if(!is(typeof(LN_id_pbkdf2))) {
        private enum enumMixinStr_LN_id_pbkdf2 = `enum LN_id_pbkdf2 = "PBKDF2";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_pbkdf2); }))) {
            mixin(enumMixinStr_LN_id_pbkdf2);
        }
    }




    static if(!is(typeof(OBJ_pbeWithSHA1AndRC2_CBC))) {
        private enum enumMixinStr_OBJ_pbeWithSHA1AndRC2_CBC = `enum OBJ_pbeWithSHA1AndRC2_CBC = OBJ_pkcs5 , 11L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pbeWithSHA1AndRC2_CBC); }))) {
            mixin(enumMixinStr_OBJ_pbeWithSHA1AndRC2_CBC);
        }
    }




    static if(!is(typeof(NID_pbeWithSHA1AndRC2_CBC))) {
        private enum enumMixinStr_NID_pbeWithSHA1AndRC2_CBC = `enum NID_pbeWithSHA1AndRC2_CBC = 68;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pbeWithSHA1AndRC2_CBC); }))) {
            mixin(enumMixinStr_NID_pbeWithSHA1AndRC2_CBC);
        }
    }




    static if(!is(typeof(LN_pbeWithSHA1AndRC2_CBC))) {
        private enum enumMixinStr_LN_pbeWithSHA1AndRC2_CBC = `enum LN_pbeWithSHA1AndRC2_CBC = "pbeWithSHA1AndRC2-CBC";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pbeWithSHA1AndRC2_CBC); }))) {
            mixin(enumMixinStr_LN_pbeWithSHA1AndRC2_CBC);
        }
    }




    static if(!is(typeof(SN_pbeWithSHA1AndRC2_CBC))) {
        private enum enumMixinStr_SN_pbeWithSHA1AndRC2_CBC = `enum SN_pbeWithSHA1AndRC2_CBC = "PBE-SHA1-RC2-64";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_pbeWithSHA1AndRC2_CBC); }))) {
            mixin(enumMixinStr_SN_pbeWithSHA1AndRC2_CBC);
        }
    }




    static if(!is(typeof(OBJ_pbeWithSHA1AndDES_CBC))) {
        private enum enumMixinStr_OBJ_pbeWithSHA1AndDES_CBC = `enum OBJ_pbeWithSHA1AndDES_CBC = OBJ_pkcs5 , 10L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pbeWithSHA1AndDES_CBC); }))) {
            mixin(enumMixinStr_OBJ_pbeWithSHA1AndDES_CBC);
        }
    }




    static if(!is(typeof(NID_pbeWithSHA1AndDES_CBC))) {
        private enum enumMixinStr_NID_pbeWithSHA1AndDES_CBC = `enum NID_pbeWithSHA1AndDES_CBC = 170;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pbeWithSHA1AndDES_CBC); }))) {
            mixin(enumMixinStr_NID_pbeWithSHA1AndDES_CBC);
        }
    }




    static if(!is(typeof(LN_pbeWithSHA1AndDES_CBC))) {
        private enum enumMixinStr_LN_pbeWithSHA1AndDES_CBC = `enum LN_pbeWithSHA1AndDES_CBC = "pbeWithSHA1AndDES-CBC";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pbeWithSHA1AndDES_CBC); }))) {
            mixin(enumMixinStr_LN_pbeWithSHA1AndDES_CBC);
        }
    }




    static if(!is(typeof(SN_pbeWithSHA1AndDES_CBC))) {
        private enum enumMixinStr_SN_pbeWithSHA1AndDES_CBC = `enum SN_pbeWithSHA1AndDES_CBC = "PBE-SHA1-DES";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_pbeWithSHA1AndDES_CBC); }))) {
            mixin(enumMixinStr_SN_pbeWithSHA1AndDES_CBC);
        }
    }




    static if(!is(typeof(OBJ_pbeWithMD5AndRC2_CBC))) {
        private enum enumMixinStr_OBJ_pbeWithMD5AndRC2_CBC = `enum OBJ_pbeWithMD5AndRC2_CBC = OBJ_pkcs5 , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pbeWithMD5AndRC2_CBC); }))) {
            mixin(enumMixinStr_OBJ_pbeWithMD5AndRC2_CBC);
        }
    }




    static if(!is(typeof(NID_pbeWithMD5AndRC2_CBC))) {
        private enum enumMixinStr_NID_pbeWithMD5AndRC2_CBC = `enum NID_pbeWithMD5AndRC2_CBC = 169;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pbeWithMD5AndRC2_CBC); }))) {
            mixin(enumMixinStr_NID_pbeWithMD5AndRC2_CBC);
        }
    }




    static if(!is(typeof(LN_pbeWithMD5AndRC2_CBC))) {
        private enum enumMixinStr_LN_pbeWithMD5AndRC2_CBC = `enum LN_pbeWithMD5AndRC2_CBC = "pbeWithMD5AndRC2-CBC";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pbeWithMD5AndRC2_CBC); }))) {
            mixin(enumMixinStr_LN_pbeWithMD5AndRC2_CBC);
        }
    }




    static if(!is(typeof(SN_pbeWithMD5AndRC2_CBC))) {
        private enum enumMixinStr_SN_pbeWithMD5AndRC2_CBC = `enum SN_pbeWithMD5AndRC2_CBC = "PBE-MD5-RC2-64";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_pbeWithMD5AndRC2_CBC); }))) {
            mixin(enumMixinStr_SN_pbeWithMD5AndRC2_CBC);
        }
    }




    static if(!is(typeof(OBJ_pbeWithMD2AndRC2_CBC))) {
        private enum enumMixinStr_OBJ_pbeWithMD2AndRC2_CBC = `enum OBJ_pbeWithMD2AndRC2_CBC = OBJ_pkcs5 , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pbeWithMD2AndRC2_CBC); }))) {
            mixin(enumMixinStr_OBJ_pbeWithMD2AndRC2_CBC);
        }
    }




    static if(!is(typeof(NID_pbeWithMD2AndRC2_CBC))) {
        private enum enumMixinStr_NID_pbeWithMD2AndRC2_CBC = `enum NID_pbeWithMD2AndRC2_CBC = 168;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pbeWithMD2AndRC2_CBC); }))) {
            mixin(enumMixinStr_NID_pbeWithMD2AndRC2_CBC);
        }
    }




    static if(!is(typeof(LN_pbeWithMD2AndRC2_CBC))) {
        private enum enumMixinStr_LN_pbeWithMD2AndRC2_CBC = `enum LN_pbeWithMD2AndRC2_CBC = "pbeWithMD2AndRC2-CBC";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pbeWithMD2AndRC2_CBC); }))) {
            mixin(enumMixinStr_LN_pbeWithMD2AndRC2_CBC);
        }
    }




    static if(!is(typeof(SN_pbeWithMD2AndRC2_CBC))) {
        private enum enumMixinStr_SN_pbeWithMD2AndRC2_CBC = `enum SN_pbeWithMD2AndRC2_CBC = "PBE-MD2-RC2-64";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_pbeWithMD2AndRC2_CBC); }))) {
            mixin(enumMixinStr_SN_pbeWithMD2AndRC2_CBC);
        }
    }




    static if(!is(typeof(OBJ_pbeWithMD5AndDES_CBC))) {
        private enum enumMixinStr_OBJ_pbeWithMD5AndDES_CBC = `enum OBJ_pbeWithMD5AndDES_CBC = OBJ_pkcs5 , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pbeWithMD5AndDES_CBC); }))) {
            mixin(enumMixinStr_OBJ_pbeWithMD5AndDES_CBC);
        }
    }




    static if(!is(typeof(_STACK))) {
        private enum enumMixinStr__STACK = `enum _STACK = OPENSSL_STACK;`;
        static if(is(typeof({ mixin(enumMixinStr__STACK); }))) {
            mixin(enumMixinStr__STACK);
        }
    }




    static if(!is(typeof(sk_num))) {
        private enum enumMixinStr_sk_num = `enum sk_num = OPENSSL_sk_num;`;
        static if(is(typeof({ mixin(enumMixinStr_sk_num); }))) {
            mixin(enumMixinStr_sk_num);
        }
    }




    static if(!is(typeof(sk_value))) {
        private enum enumMixinStr_sk_value = `enum sk_value = OPENSSL_sk_value;`;
        static if(is(typeof({ mixin(enumMixinStr_sk_value); }))) {
            mixin(enumMixinStr_sk_value);
        }
    }




    static if(!is(typeof(sk_set))) {
        private enum enumMixinStr_sk_set = `enum sk_set = OPENSSL_sk_set;`;
        static if(is(typeof({ mixin(enumMixinStr_sk_set); }))) {
            mixin(enumMixinStr_sk_set);
        }
    }




    static if(!is(typeof(sk_new))) {
        private enum enumMixinStr_sk_new = `enum sk_new = OPENSSL_sk_new;`;
        static if(is(typeof({ mixin(enumMixinStr_sk_new); }))) {
            mixin(enumMixinStr_sk_new);
        }
    }




    static if(!is(typeof(sk_new_null))) {
        private enum enumMixinStr_sk_new_null = `enum sk_new_null = OPENSSL_sk_new_null;`;
        static if(is(typeof({ mixin(enumMixinStr_sk_new_null); }))) {
            mixin(enumMixinStr_sk_new_null);
        }
    }




    static if(!is(typeof(sk_free))) {
        private enum enumMixinStr_sk_free = `enum sk_free = OPENSSL_sk_free;`;
        static if(is(typeof({ mixin(enumMixinStr_sk_free); }))) {
            mixin(enumMixinStr_sk_free);
        }
    }




    static if(!is(typeof(sk_pop_free))) {
        private enum enumMixinStr_sk_pop_free = `enum sk_pop_free = OPENSSL_sk_pop_free;`;
        static if(is(typeof({ mixin(enumMixinStr_sk_pop_free); }))) {
            mixin(enumMixinStr_sk_pop_free);
        }
    }




    static if(!is(typeof(sk_deep_copy))) {
        private enum enumMixinStr_sk_deep_copy = `enum sk_deep_copy = OPENSSL_sk_deep_copy;`;
        static if(is(typeof({ mixin(enumMixinStr_sk_deep_copy); }))) {
            mixin(enumMixinStr_sk_deep_copy);
        }
    }




    static if(!is(typeof(sk_insert))) {
        private enum enumMixinStr_sk_insert = `enum sk_insert = OPENSSL_sk_insert;`;
        static if(is(typeof({ mixin(enumMixinStr_sk_insert); }))) {
            mixin(enumMixinStr_sk_insert);
        }
    }




    static if(!is(typeof(sk_delete))) {
        private enum enumMixinStr_sk_delete = `enum sk_delete = OPENSSL_sk_delete;`;
        static if(is(typeof({ mixin(enumMixinStr_sk_delete); }))) {
            mixin(enumMixinStr_sk_delete);
        }
    }




    static if(!is(typeof(sk_delete_ptr))) {
        private enum enumMixinStr_sk_delete_ptr = `enum sk_delete_ptr = OPENSSL_sk_delete_ptr;`;
        static if(is(typeof({ mixin(enumMixinStr_sk_delete_ptr); }))) {
            mixin(enumMixinStr_sk_delete_ptr);
        }
    }




    static if(!is(typeof(sk_find))) {
        private enum enumMixinStr_sk_find = `enum sk_find = OPENSSL_sk_find;`;
        static if(is(typeof({ mixin(enumMixinStr_sk_find); }))) {
            mixin(enumMixinStr_sk_find);
        }
    }




    static if(!is(typeof(sk_find_ex))) {
        private enum enumMixinStr_sk_find_ex = `enum sk_find_ex = OPENSSL_sk_find_ex;`;
        static if(is(typeof({ mixin(enumMixinStr_sk_find_ex); }))) {
            mixin(enumMixinStr_sk_find_ex);
        }
    }




    static if(!is(typeof(sk_push))) {
        private enum enumMixinStr_sk_push = `enum sk_push = OPENSSL_sk_push;`;
        static if(is(typeof({ mixin(enumMixinStr_sk_push); }))) {
            mixin(enumMixinStr_sk_push);
        }
    }




    static if(!is(typeof(sk_unshift))) {
        private enum enumMixinStr_sk_unshift = `enum sk_unshift = OPENSSL_sk_unshift;`;
        static if(is(typeof({ mixin(enumMixinStr_sk_unshift); }))) {
            mixin(enumMixinStr_sk_unshift);
        }
    }




    static if(!is(typeof(sk_shift))) {
        private enum enumMixinStr_sk_shift = `enum sk_shift = OPENSSL_sk_shift;`;
        static if(is(typeof({ mixin(enumMixinStr_sk_shift); }))) {
            mixin(enumMixinStr_sk_shift);
        }
    }




    static if(!is(typeof(sk_pop))) {
        private enum enumMixinStr_sk_pop = `enum sk_pop = OPENSSL_sk_pop;`;
        static if(is(typeof({ mixin(enumMixinStr_sk_pop); }))) {
            mixin(enumMixinStr_sk_pop);
        }
    }




    static if(!is(typeof(sk_zero))) {
        private enum enumMixinStr_sk_zero = `enum sk_zero = OPENSSL_sk_zero;`;
        static if(is(typeof({ mixin(enumMixinStr_sk_zero); }))) {
            mixin(enumMixinStr_sk_zero);
        }
    }




    static if(!is(typeof(sk_set_cmp_func))) {
        private enum enumMixinStr_sk_set_cmp_func = `enum sk_set_cmp_func = OPENSSL_sk_set_cmp_func;`;
        static if(is(typeof({ mixin(enumMixinStr_sk_set_cmp_func); }))) {
            mixin(enumMixinStr_sk_set_cmp_func);
        }
    }




    static if(!is(typeof(sk_dup))) {
        private enum enumMixinStr_sk_dup = `enum sk_dup = OPENSSL_sk_dup;`;
        static if(is(typeof({ mixin(enumMixinStr_sk_dup); }))) {
            mixin(enumMixinStr_sk_dup);
        }
    }




    static if(!is(typeof(sk_sort))) {
        private enum enumMixinStr_sk_sort = `enum sk_sort = OPENSSL_sk_sort;`;
        static if(is(typeof({ mixin(enumMixinStr_sk_sort); }))) {
            mixin(enumMixinStr_sk_sort);
        }
    }




    static if(!is(typeof(sk_is_sorted))) {
        private enum enumMixinStr_sk_is_sorted = `enum sk_is_sorted = OPENSSL_sk_is_sorted;`;
        static if(is(typeof({ mixin(enumMixinStr_sk_is_sorted); }))) {
            mixin(enumMixinStr_sk_is_sorted);
        }
    }






    static if(!is(typeof(NID_pbeWithMD5AndDES_CBC))) {
        private enum enumMixinStr_NID_pbeWithMD5AndDES_CBC = `enum NID_pbeWithMD5AndDES_CBC = 10;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pbeWithMD5AndDES_CBC); }))) {
            mixin(enumMixinStr_NID_pbeWithMD5AndDES_CBC);
        }
    }






    static if(!is(typeof(LN_pbeWithMD5AndDES_CBC))) {
        private enum enumMixinStr_LN_pbeWithMD5AndDES_CBC = `enum LN_pbeWithMD5AndDES_CBC = "pbeWithMD5AndDES-CBC";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pbeWithMD5AndDES_CBC); }))) {
            mixin(enumMixinStr_LN_pbeWithMD5AndDES_CBC);
        }
    }




    static if(!is(typeof(SN_pbeWithMD5AndDES_CBC))) {
        private enum enumMixinStr_SN_pbeWithMD5AndDES_CBC = `enum SN_pbeWithMD5AndDES_CBC = "PBE-MD5-DES";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_pbeWithMD5AndDES_CBC); }))) {
            mixin(enumMixinStr_SN_pbeWithMD5AndDES_CBC);
        }
    }




    static if(!is(typeof(OBJ_pbeWithMD2AndDES_CBC))) {
        private enum enumMixinStr_OBJ_pbeWithMD2AndDES_CBC = `enum OBJ_pbeWithMD2AndDES_CBC = OBJ_pkcs5 , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pbeWithMD2AndDES_CBC); }))) {
            mixin(enumMixinStr_OBJ_pbeWithMD2AndDES_CBC);
        }
    }




    static if(!is(typeof(NID_pbeWithMD2AndDES_CBC))) {
        private enum enumMixinStr_NID_pbeWithMD2AndDES_CBC = `enum NID_pbeWithMD2AndDES_CBC = 9;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pbeWithMD2AndDES_CBC); }))) {
            mixin(enumMixinStr_NID_pbeWithMD2AndDES_CBC);
        }
    }




    static if(!is(typeof(LN_pbeWithMD2AndDES_CBC))) {
        private enum enumMixinStr_LN_pbeWithMD2AndDES_CBC = `enum LN_pbeWithMD2AndDES_CBC = "pbeWithMD2AndDES-CBC";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pbeWithMD2AndDES_CBC); }))) {
            mixin(enumMixinStr_LN_pbeWithMD2AndDES_CBC);
        }
    }




    static if(!is(typeof(SN_pbeWithMD2AndDES_CBC))) {
        private enum enumMixinStr_SN_pbeWithMD2AndDES_CBC = `enum SN_pbeWithMD2AndDES_CBC = "PBE-MD2-DES";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_pbeWithMD2AndDES_CBC); }))) {
            mixin(enumMixinStr_SN_pbeWithMD2AndDES_CBC);
        }
    }




    static if(!is(typeof(OBJ_pkcs5))) {
        private enum enumMixinStr_OBJ_pkcs5 = `enum OBJ_pkcs5 = OBJ_pkcs , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pkcs5); }))) {
            mixin(enumMixinStr_OBJ_pkcs5);
        }
    }




    static if(!is(typeof(NID_pkcs5))) {
        private enum enumMixinStr_NID_pkcs5 = `enum NID_pkcs5 = 187;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pkcs5); }))) {
            mixin(enumMixinStr_NID_pkcs5);
        }
    }




    static if(!is(typeof(SN_pkcs5))) {
        private enum enumMixinStr_SN_pkcs5 = `enum SN_pkcs5 = "pkcs5";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_pkcs5); }))) {
            mixin(enumMixinStr_SN_pkcs5);
        }
    }




    static if(!is(typeof(OBJ_dhKeyAgreement))) {
        private enum enumMixinStr_OBJ_dhKeyAgreement = `enum OBJ_dhKeyAgreement = OBJ_pkcs3 , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dhKeyAgreement); }))) {
            mixin(enumMixinStr_OBJ_dhKeyAgreement);
        }
    }




    static if(!is(typeof(NID_dhKeyAgreement))) {
        private enum enumMixinStr_NID_dhKeyAgreement = `enum NID_dhKeyAgreement = 28;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dhKeyAgreement); }))) {
            mixin(enumMixinStr_NID_dhKeyAgreement);
        }
    }




    static if(!is(typeof(LN_dhKeyAgreement))) {
        private enum enumMixinStr_LN_dhKeyAgreement = `enum LN_dhKeyAgreement = "dhKeyAgreement";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_dhKeyAgreement); }))) {
            mixin(enumMixinStr_LN_dhKeyAgreement);
        }
    }




    static if(!is(typeof(OBJ_pkcs3))) {
        private enum enumMixinStr_OBJ_pkcs3 = `enum OBJ_pkcs3 = OBJ_pkcs , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pkcs3); }))) {
            mixin(enumMixinStr_OBJ_pkcs3);
        }
    }




    static if(!is(typeof(NID_pkcs3))) {
        private enum enumMixinStr_NID_pkcs3 = `enum NID_pkcs3 = 27;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pkcs3); }))) {
            mixin(enumMixinStr_NID_pkcs3);
        }
    }




    static if(!is(typeof(SN_pkcs3))) {
        private enum enumMixinStr_SN_pkcs3 = `enum SN_pkcs3 = "pkcs3";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_pkcs3); }))) {
            mixin(enumMixinStr_SN_pkcs3);
        }
    }




    static if(!is(typeof(X509_SIG_INFO_VALID))) {
        private enum enumMixinStr_X509_SIG_INFO_VALID = `enum X509_SIG_INFO_VALID = 0x1;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_SIG_INFO_VALID); }))) {
            mixin(enumMixinStr_X509_SIG_INFO_VALID);
        }
    }




    static if(!is(typeof(X509_SIG_INFO_TLS))) {
        private enum enumMixinStr_X509_SIG_INFO_TLS = `enum X509_SIG_INFO_TLS = 0x2;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_SIG_INFO_TLS); }))) {
            mixin(enumMixinStr_X509_SIG_INFO_TLS);
        }
    }




    static if(!is(typeof(X509_FILETYPE_PEM))) {
        private enum enumMixinStr_X509_FILETYPE_PEM = `enum X509_FILETYPE_PEM = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_FILETYPE_PEM); }))) {
            mixin(enumMixinStr_X509_FILETYPE_PEM);
        }
    }




    static if(!is(typeof(X509_FILETYPE_ASN1))) {
        private enum enumMixinStr_X509_FILETYPE_ASN1 = `enum X509_FILETYPE_ASN1 = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_FILETYPE_ASN1); }))) {
            mixin(enumMixinStr_X509_FILETYPE_ASN1);
        }
    }




    static if(!is(typeof(X509_FILETYPE_DEFAULT))) {
        private enum enumMixinStr_X509_FILETYPE_DEFAULT = `enum X509_FILETYPE_DEFAULT = 3;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_FILETYPE_DEFAULT); }))) {
            mixin(enumMixinStr_X509_FILETYPE_DEFAULT);
        }
    }




    static if(!is(typeof(X509v3_KU_DIGITAL_SIGNATURE))) {
        private enum enumMixinStr_X509v3_KU_DIGITAL_SIGNATURE = `enum X509v3_KU_DIGITAL_SIGNATURE = 0x0080;`;
        static if(is(typeof({ mixin(enumMixinStr_X509v3_KU_DIGITAL_SIGNATURE); }))) {
            mixin(enumMixinStr_X509v3_KU_DIGITAL_SIGNATURE);
        }
    }




    static if(!is(typeof(X509v3_KU_NON_REPUDIATION))) {
        private enum enumMixinStr_X509v3_KU_NON_REPUDIATION = `enum X509v3_KU_NON_REPUDIATION = 0x0040;`;
        static if(is(typeof({ mixin(enumMixinStr_X509v3_KU_NON_REPUDIATION); }))) {
            mixin(enumMixinStr_X509v3_KU_NON_REPUDIATION);
        }
    }




    static if(!is(typeof(X509v3_KU_KEY_ENCIPHERMENT))) {
        private enum enumMixinStr_X509v3_KU_KEY_ENCIPHERMENT = `enum X509v3_KU_KEY_ENCIPHERMENT = 0x0020;`;
        static if(is(typeof({ mixin(enumMixinStr_X509v3_KU_KEY_ENCIPHERMENT); }))) {
            mixin(enumMixinStr_X509v3_KU_KEY_ENCIPHERMENT);
        }
    }




    static if(!is(typeof(X509v3_KU_DATA_ENCIPHERMENT))) {
        private enum enumMixinStr_X509v3_KU_DATA_ENCIPHERMENT = `enum X509v3_KU_DATA_ENCIPHERMENT = 0x0010;`;
        static if(is(typeof({ mixin(enumMixinStr_X509v3_KU_DATA_ENCIPHERMENT); }))) {
            mixin(enumMixinStr_X509v3_KU_DATA_ENCIPHERMENT);
        }
    }




    static if(!is(typeof(X509v3_KU_KEY_AGREEMENT))) {
        private enum enumMixinStr_X509v3_KU_KEY_AGREEMENT = `enum X509v3_KU_KEY_AGREEMENT = 0x0008;`;
        static if(is(typeof({ mixin(enumMixinStr_X509v3_KU_KEY_AGREEMENT); }))) {
            mixin(enumMixinStr_X509v3_KU_KEY_AGREEMENT);
        }
    }




    static if(!is(typeof(X509v3_KU_KEY_CERT_SIGN))) {
        private enum enumMixinStr_X509v3_KU_KEY_CERT_SIGN = `enum X509v3_KU_KEY_CERT_SIGN = 0x0004;`;
        static if(is(typeof({ mixin(enumMixinStr_X509v3_KU_KEY_CERT_SIGN); }))) {
            mixin(enumMixinStr_X509v3_KU_KEY_CERT_SIGN);
        }
    }




    static if(!is(typeof(X509v3_KU_CRL_SIGN))) {
        private enum enumMixinStr_X509v3_KU_CRL_SIGN = `enum X509v3_KU_CRL_SIGN = 0x0002;`;
        static if(is(typeof({ mixin(enumMixinStr_X509v3_KU_CRL_SIGN); }))) {
            mixin(enumMixinStr_X509v3_KU_CRL_SIGN);
        }
    }




    static if(!is(typeof(X509v3_KU_ENCIPHER_ONLY))) {
        private enum enumMixinStr_X509v3_KU_ENCIPHER_ONLY = `enum X509v3_KU_ENCIPHER_ONLY = 0x0001;`;
        static if(is(typeof({ mixin(enumMixinStr_X509v3_KU_ENCIPHER_ONLY); }))) {
            mixin(enumMixinStr_X509v3_KU_ENCIPHER_ONLY);
        }
    }




    static if(!is(typeof(X509v3_KU_DECIPHER_ONLY))) {
        private enum enumMixinStr_X509v3_KU_DECIPHER_ONLY = `enum X509v3_KU_DECIPHER_ONLY = 0x8000;`;
        static if(is(typeof({ mixin(enumMixinStr_X509v3_KU_DECIPHER_ONLY); }))) {
            mixin(enumMixinStr_X509v3_KU_DECIPHER_ONLY);
        }
    }




    static if(!is(typeof(X509v3_KU_UNDEF))) {
        private enum enumMixinStr_X509v3_KU_UNDEF = `enum X509v3_KU_UNDEF = 0xffff;`;
        static if(is(typeof({ mixin(enumMixinStr_X509v3_KU_UNDEF); }))) {
            mixin(enumMixinStr_X509v3_KU_UNDEF);
        }
    }




    static if(!is(typeof(OBJ_sha512_256WithRSAEncryption))) {
        private enum enumMixinStr_OBJ_sha512_256WithRSAEncryption = `enum OBJ_sha512_256WithRSAEncryption = OBJ_pkcs1 , 16L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sha512_256WithRSAEncryption); }))) {
            mixin(enumMixinStr_OBJ_sha512_256WithRSAEncryption);
        }
    }




    static if(!is(typeof(NID_sha512_256WithRSAEncryption))) {
        private enum enumMixinStr_NID_sha512_256WithRSAEncryption = `enum NID_sha512_256WithRSAEncryption = 1146;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sha512_256WithRSAEncryption); }))) {
            mixin(enumMixinStr_NID_sha512_256WithRSAEncryption);
        }
    }




    static if(!is(typeof(LN_sha512_256WithRSAEncryption))) {
        private enum enumMixinStr_LN_sha512_256WithRSAEncryption = `enum LN_sha512_256WithRSAEncryption = "sha512-256WithRSAEncryption";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sha512_256WithRSAEncryption); }))) {
            mixin(enumMixinStr_LN_sha512_256WithRSAEncryption);
        }
    }




    static if(!is(typeof(SN_sha512_256WithRSAEncryption))) {
        private enum enumMixinStr_SN_sha512_256WithRSAEncryption = `enum SN_sha512_256WithRSAEncryption = "RSA-SHA512/256";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sha512_256WithRSAEncryption); }))) {
            mixin(enumMixinStr_SN_sha512_256WithRSAEncryption);
        }
    }




    static if(!is(typeof(OBJ_sha512_224WithRSAEncryption))) {
        private enum enumMixinStr_OBJ_sha512_224WithRSAEncryption = `enum OBJ_sha512_224WithRSAEncryption = OBJ_pkcs1 , 15L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sha512_224WithRSAEncryption); }))) {
            mixin(enumMixinStr_OBJ_sha512_224WithRSAEncryption);
        }
    }




    static if(!is(typeof(NID_sha512_224WithRSAEncryption))) {
        private enum enumMixinStr_NID_sha512_224WithRSAEncryption = `enum NID_sha512_224WithRSAEncryption = 1145;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sha512_224WithRSAEncryption); }))) {
            mixin(enumMixinStr_NID_sha512_224WithRSAEncryption);
        }
    }




    static if(!is(typeof(LN_sha512_224WithRSAEncryption))) {
        private enum enumMixinStr_LN_sha512_224WithRSAEncryption = `enum LN_sha512_224WithRSAEncryption = "sha512-224WithRSAEncryption";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sha512_224WithRSAEncryption); }))) {
            mixin(enumMixinStr_LN_sha512_224WithRSAEncryption);
        }
    }




    static if(!is(typeof(SN_sha512_224WithRSAEncryption))) {
        private enum enumMixinStr_SN_sha512_224WithRSAEncryption = `enum SN_sha512_224WithRSAEncryption = "RSA-SHA512/224";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sha512_224WithRSAEncryption); }))) {
            mixin(enumMixinStr_SN_sha512_224WithRSAEncryption);
        }
    }




    static if(!is(typeof(OBJ_sha224WithRSAEncryption))) {
        private enum enumMixinStr_OBJ_sha224WithRSAEncryption = `enum OBJ_sha224WithRSAEncryption = OBJ_pkcs1 , 14L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sha224WithRSAEncryption); }))) {
            mixin(enumMixinStr_OBJ_sha224WithRSAEncryption);
        }
    }




    static if(!is(typeof(NID_sha224WithRSAEncryption))) {
        private enum enumMixinStr_NID_sha224WithRSAEncryption = `enum NID_sha224WithRSAEncryption = 671;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sha224WithRSAEncryption); }))) {
            mixin(enumMixinStr_NID_sha224WithRSAEncryption);
        }
    }




    static if(!is(typeof(LN_sha224WithRSAEncryption))) {
        private enum enumMixinStr_LN_sha224WithRSAEncryption = `enum LN_sha224WithRSAEncryption = "sha224WithRSAEncryption";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sha224WithRSAEncryption); }))) {
            mixin(enumMixinStr_LN_sha224WithRSAEncryption);
        }
    }




    static if(!is(typeof(SN_sha224WithRSAEncryption))) {
        private enum enumMixinStr_SN_sha224WithRSAEncryption = `enum SN_sha224WithRSAEncryption = "RSA-SHA224";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sha224WithRSAEncryption); }))) {
            mixin(enumMixinStr_SN_sha224WithRSAEncryption);
        }
    }




    static if(!is(typeof(OBJ_sha512WithRSAEncryption))) {
        private enum enumMixinStr_OBJ_sha512WithRSAEncryption = `enum OBJ_sha512WithRSAEncryption = OBJ_pkcs1 , 13L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sha512WithRSAEncryption); }))) {
            mixin(enumMixinStr_OBJ_sha512WithRSAEncryption);
        }
    }




    static if(!is(typeof(NID_sha512WithRSAEncryption))) {
        private enum enumMixinStr_NID_sha512WithRSAEncryption = `enum NID_sha512WithRSAEncryption = 670;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sha512WithRSAEncryption); }))) {
            mixin(enumMixinStr_NID_sha512WithRSAEncryption);
        }
    }




    static if(!is(typeof(LN_sha512WithRSAEncryption))) {
        private enum enumMixinStr_LN_sha512WithRSAEncryption = `enum LN_sha512WithRSAEncryption = "sha512WithRSAEncryption";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sha512WithRSAEncryption); }))) {
            mixin(enumMixinStr_LN_sha512WithRSAEncryption);
        }
    }




    static if(!is(typeof(SN_sha512WithRSAEncryption))) {
        private enum enumMixinStr_SN_sha512WithRSAEncryption = `enum SN_sha512WithRSAEncryption = "RSA-SHA512";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sha512WithRSAEncryption); }))) {
            mixin(enumMixinStr_SN_sha512WithRSAEncryption);
        }
    }




    static if(!is(typeof(OBJ_sha384WithRSAEncryption))) {
        private enum enumMixinStr_OBJ_sha384WithRSAEncryption = `enum OBJ_sha384WithRSAEncryption = OBJ_pkcs1 , 12L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sha384WithRSAEncryption); }))) {
            mixin(enumMixinStr_OBJ_sha384WithRSAEncryption);
        }
    }




    static if(!is(typeof(NID_sha384WithRSAEncryption))) {
        private enum enumMixinStr_NID_sha384WithRSAEncryption = `enum NID_sha384WithRSAEncryption = 669;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sha384WithRSAEncryption); }))) {
            mixin(enumMixinStr_NID_sha384WithRSAEncryption);
        }
    }




    static if(!is(typeof(LN_sha384WithRSAEncryption))) {
        private enum enumMixinStr_LN_sha384WithRSAEncryption = `enum LN_sha384WithRSAEncryption = "sha384WithRSAEncryption";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sha384WithRSAEncryption); }))) {
            mixin(enumMixinStr_LN_sha384WithRSAEncryption);
        }
    }




    static if(!is(typeof(SN_sha384WithRSAEncryption))) {
        private enum enumMixinStr_SN_sha384WithRSAEncryption = `enum SN_sha384WithRSAEncryption = "RSA-SHA384";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sha384WithRSAEncryption); }))) {
            mixin(enumMixinStr_SN_sha384WithRSAEncryption);
        }
    }




    static if(!is(typeof(OBJ_sha256WithRSAEncryption))) {
        private enum enumMixinStr_OBJ_sha256WithRSAEncryption = `enum OBJ_sha256WithRSAEncryption = OBJ_pkcs1 , 11L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sha256WithRSAEncryption); }))) {
            mixin(enumMixinStr_OBJ_sha256WithRSAEncryption);
        }
    }




    static if(!is(typeof(NID_sha256WithRSAEncryption))) {
        private enum enumMixinStr_NID_sha256WithRSAEncryption = `enum NID_sha256WithRSAEncryption = 668;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sha256WithRSAEncryption); }))) {
            mixin(enumMixinStr_NID_sha256WithRSAEncryption);
        }
    }




    static if(!is(typeof(LN_sha256WithRSAEncryption))) {
        private enum enumMixinStr_LN_sha256WithRSAEncryption = `enum LN_sha256WithRSAEncryption = "sha256WithRSAEncryption";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sha256WithRSAEncryption); }))) {
            mixin(enumMixinStr_LN_sha256WithRSAEncryption);
        }
    }




    static if(!is(typeof(SN_sha256WithRSAEncryption))) {
        private enum enumMixinStr_SN_sha256WithRSAEncryption = `enum SN_sha256WithRSAEncryption = "RSA-SHA256";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sha256WithRSAEncryption); }))) {
            mixin(enumMixinStr_SN_sha256WithRSAEncryption);
        }
    }




    static if(!is(typeof(OBJ_rsassaPss))) {
        private enum enumMixinStr_OBJ_rsassaPss = `enum OBJ_rsassaPss = OBJ_pkcs1 , 10L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_rsassaPss); }))) {
            mixin(enumMixinStr_OBJ_rsassaPss);
        }
    }




    static if(!is(typeof(NID_rsassaPss))) {
        private enum enumMixinStr_NID_rsassaPss = `enum NID_rsassaPss = 912;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_rsassaPss); }))) {
            mixin(enumMixinStr_NID_rsassaPss);
        }
    }




    static if(!is(typeof(LN_rsassaPss))) {
        private enum enumMixinStr_LN_rsassaPss = `enum LN_rsassaPss = "rsassaPss";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_rsassaPss); }))) {
            mixin(enumMixinStr_LN_rsassaPss);
        }
    }




    static if(!is(typeof(SN_rsassaPss))) {
        private enum enumMixinStr_SN_rsassaPss = `enum SN_rsassaPss = "RSASSA-PSS";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_rsassaPss); }))) {
            mixin(enumMixinStr_SN_rsassaPss);
        }
    }




    static if(!is(typeof(OBJ_pSpecified))) {
        private enum enumMixinStr_OBJ_pSpecified = `enum OBJ_pSpecified = OBJ_pkcs1 , 9L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pSpecified); }))) {
            mixin(enumMixinStr_OBJ_pSpecified);
        }
    }




    static if(!is(typeof(NID_pSpecified))) {
        private enum enumMixinStr_NID_pSpecified = `enum NID_pSpecified = 935;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pSpecified); }))) {
            mixin(enumMixinStr_NID_pSpecified);
        }
    }




    static if(!is(typeof(LN_pSpecified))) {
        private enum enumMixinStr_LN_pSpecified = `enum LN_pSpecified = "pSpecified";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pSpecified); }))) {
            mixin(enumMixinStr_LN_pSpecified);
        }
    }




    static if(!is(typeof(SN_pSpecified))) {
        private enum enumMixinStr_SN_pSpecified = `enum SN_pSpecified = "PSPECIFIED";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_pSpecified); }))) {
            mixin(enumMixinStr_SN_pSpecified);
        }
    }




    static if(!is(typeof(OBJ_mgf1))) {
        private enum enumMixinStr_OBJ_mgf1 = `enum OBJ_mgf1 = OBJ_pkcs1 , 8L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_mgf1); }))) {
            mixin(enumMixinStr_OBJ_mgf1);
        }
    }




    static if(!is(typeof(NID_mgf1))) {
        private enum enumMixinStr_NID_mgf1 = `enum NID_mgf1 = 911;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_mgf1); }))) {
            mixin(enumMixinStr_NID_mgf1);
        }
    }




    static if(!is(typeof(LN_mgf1))) {
        private enum enumMixinStr_LN_mgf1 = `enum LN_mgf1 = "mgf1";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_mgf1); }))) {
            mixin(enumMixinStr_LN_mgf1);
        }
    }




    static if(!is(typeof(SN_mgf1))) {
        private enum enumMixinStr_SN_mgf1 = `enum SN_mgf1 = "MGF1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_mgf1); }))) {
            mixin(enumMixinStr_SN_mgf1);
        }
    }




    static if(!is(typeof(OBJ_rsaesOaep))) {
        private enum enumMixinStr_OBJ_rsaesOaep = `enum OBJ_rsaesOaep = OBJ_pkcs1 , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_rsaesOaep); }))) {
            mixin(enumMixinStr_OBJ_rsaesOaep);
        }
    }




    static if(!is(typeof(NID_rsaesOaep))) {
        private enum enumMixinStr_NID_rsaesOaep = `enum NID_rsaesOaep = 919;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_rsaesOaep); }))) {
            mixin(enumMixinStr_NID_rsaesOaep);
        }
    }




    static if(!is(typeof(LN_rsaesOaep))) {
        private enum enumMixinStr_LN_rsaesOaep = `enum LN_rsaesOaep = "rsaesOaep";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_rsaesOaep); }))) {
            mixin(enumMixinStr_LN_rsaesOaep);
        }
    }




    static if(!is(typeof(SN_rsaesOaep))) {
        private enum enumMixinStr_SN_rsaesOaep = `enum SN_rsaesOaep = "RSAES-OAEP";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_rsaesOaep); }))) {
            mixin(enumMixinStr_SN_rsaesOaep);
        }
    }




    static if(!is(typeof(OBJ_sha1WithRSAEncryption))) {
        private enum enumMixinStr_OBJ_sha1WithRSAEncryption = `enum OBJ_sha1WithRSAEncryption = OBJ_pkcs1 , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sha1WithRSAEncryption); }))) {
            mixin(enumMixinStr_OBJ_sha1WithRSAEncryption);
        }
    }




    static if(!is(typeof(NID_sha1WithRSAEncryption))) {
        private enum enumMixinStr_NID_sha1WithRSAEncryption = `enum NID_sha1WithRSAEncryption = 65;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sha1WithRSAEncryption); }))) {
            mixin(enumMixinStr_NID_sha1WithRSAEncryption);
        }
    }




    static if(!is(typeof(LN_sha1WithRSAEncryption))) {
        private enum enumMixinStr_LN_sha1WithRSAEncryption = `enum LN_sha1WithRSAEncryption = "sha1WithRSAEncryption";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_sha1WithRSAEncryption); }))) {
            mixin(enumMixinStr_LN_sha1WithRSAEncryption);
        }
    }




    static if(!is(typeof(SN_sha1WithRSAEncryption))) {
        private enum enumMixinStr_SN_sha1WithRSAEncryption = `enum SN_sha1WithRSAEncryption = "RSA-SHA1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sha1WithRSAEncryption); }))) {
            mixin(enumMixinStr_SN_sha1WithRSAEncryption);
        }
    }




    static if(!is(typeof(OBJ_md5WithRSAEncryption))) {
        private enum enumMixinStr_OBJ_md5WithRSAEncryption = `enum OBJ_md5WithRSAEncryption = OBJ_pkcs1 , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_md5WithRSAEncryption); }))) {
            mixin(enumMixinStr_OBJ_md5WithRSAEncryption);
        }
    }




    static if(!is(typeof(NID_md5WithRSAEncryption))) {
        private enum enumMixinStr_NID_md5WithRSAEncryption = `enum NID_md5WithRSAEncryption = 8;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_md5WithRSAEncryption); }))) {
            mixin(enumMixinStr_NID_md5WithRSAEncryption);
        }
    }




    static if(!is(typeof(LN_md5WithRSAEncryption))) {
        private enum enumMixinStr_LN_md5WithRSAEncryption = `enum LN_md5WithRSAEncryption = "md5WithRSAEncryption";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_md5WithRSAEncryption); }))) {
            mixin(enumMixinStr_LN_md5WithRSAEncryption);
        }
    }




    static if(!is(typeof(SN_md5WithRSAEncryption))) {
        private enum enumMixinStr_SN_md5WithRSAEncryption = `enum SN_md5WithRSAEncryption = "RSA-MD5";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_md5WithRSAEncryption); }))) {
            mixin(enumMixinStr_SN_md5WithRSAEncryption);
        }
    }




    static if(!is(typeof(OBJ_md4WithRSAEncryption))) {
        private enum enumMixinStr_OBJ_md4WithRSAEncryption = `enum OBJ_md4WithRSAEncryption = OBJ_pkcs1 , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_md4WithRSAEncryption); }))) {
            mixin(enumMixinStr_OBJ_md4WithRSAEncryption);
        }
    }




    static if(!is(typeof(NID_md4WithRSAEncryption))) {
        private enum enumMixinStr_NID_md4WithRSAEncryption = `enum NID_md4WithRSAEncryption = 396;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_md4WithRSAEncryption); }))) {
            mixin(enumMixinStr_NID_md4WithRSAEncryption);
        }
    }




    static if(!is(typeof(LN_md4WithRSAEncryption))) {
        private enum enumMixinStr_LN_md4WithRSAEncryption = `enum LN_md4WithRSAEncryption = "md4WithRSAEncryption";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_md4WithRSAEncryption); }))) {
            mixin(enumMixinStr_LN_md4WithRSAEncryption);
        }
    }




    static if(!is(typeof(SN_md4WithRSAEncryption))) {
        private enum enumMixinStr_SN_md4WithRSAEncryption = `enum SN_md4WithRSAEncryption = "RSA-MD4";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_md4WithRSAEncryption); }))) {
            mixin(enumMixinStr_SN_md4WithRSAEncryption);
        }
    }




    static if(!is(typeof(OBJ_md2WithRSAEncryption))) {
        private enum enumMixinStr_OBJ_md2WithRSAEncryption = `enum OBJ_md2WithRSAEncryption = OBJ_pkcs1 , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_md2WithRSAEncryption); }))) {
            mixin(enumMixinStr_OBJ_md2WithRSAEncryption);
        }
    }




    static if(!is(typeof(NID_md2WithRSAEncryption))) {
        private enum enumMixinStr_NID_md2WithRSAEncryption = `enum NID_md2WithRSAEncryption = 7;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_md2WithRSAEncryption); }))) {
            mixin(enumMixinStr_NID_md2WithRSAEncryption);
        }
    }




    static if(!is(typeof(LN_md2WithRSAEncryption))) {
        private enum enumMixinStr_LN_md2WithRSAEncryption = `enum LN_md2WithRSAEncryption = "md2WithRSAEncryption";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_md2WithRSAEncryption); }))) {
            mixin(enumMixinStr_LN_md2WithRSAEncryption);
        }
    }




    static if(!is(typeof(SN_md2WithRSAEncryption))) {
        private enum enumMixinStr_SN_md2WithRSAEncryption = `enum SN_md2WithRSAEncryption = "RSA-MD2";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_md2WithRSAEncryption); }))) {
            mixin(enumMixinStr_SN_md2WithRSAEncryption);
        }
    }




    static if(!is(typeof(OBJ_rsaEncryption))) {
        private enum enumMixinStr_OBJ_rsaEncryption = `enum OBJ_rsaEncryption = OBJ_pkcs1 , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_rsaEncryption); }))) {
            mixin(enumMixinStr_OBJ_rsaEncryption);
        }
    }




    static if(!is(typeof(NID_rsaEncryption))) {
        private enum enumMixinStr_NID_rsaEncryption = `enum NID_rsaEncryption = 6;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_rsaEncryption); }))) {
            mixin(enumMixinStr_NID_rsaEncryption);
        }
    }




    static if(!is(typeof(LN_rsaEncryption))) {
        private enum enumMixinStr_LN_rsaEncryption = `enum LN_rsaEncryption = "rsaEncryption";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_rsaEncryption); }))) {
            mixin(enumMixinStr_LN_rsaEncryption);
        }
    }




    static if(!is(typeof(OBJ_pkcs1))) {
        private enum enumMixinStr_OBJ_pkcs1 = `enum OBJ_pkcs1 = OBJ_pkcs , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pkcs1); }))) {
            mixin(enumMixinStr_OBJ_pkcs1);
        }
    }




    static if(!is(typeof(NID_pkcs1))) {
        private enum enumMixinStr_NID_pkcs1 = `enum NID_pkcs1 = 186;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pkcs1); }))) {
            mixin(enumMixinStr_NID_pkcs1);
        }
    }




    static if(!is(typeof(SN_pkcs1))) {
        private enum enumMixinStr_SN_pkcs1 = `enum SN_pkcs1 = "pkcs1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_pkcs1); }))) {
            mixin(enumMixinStr_SN_pkcs1);
        }
    }




    static if(!is(typeof(OBJ_pkcs))) {
        private enum enumMixinStr_OBJ_pkcs = `enum OBJ_pkcs = OBJ_rsadsi , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pkcs); }))) {
            mixin(enumMixinStr_OBJ_pkcs);
        }
    }




    static if(!is(typeof(NID_pkcs))) {
        private enum enumMixinStr_NID_pkcs = `enum NID_pkcs = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pkcs); }))) {
            mixin(enumMixinStr_NID_pkcs);
        }
    }




    static if(!is(typeof(LN_pkcs))) {
        private enum enumMixinStr_LN_pkcs = `enum LN_pkcs = "RSA Data Security, Inc. PKCS";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pkcs); }))) {
            mixin(enumMixinStr_LN_pkcs);
        }
    }




    static if(!is(typeof(SN_pkcs))) {
        private enum enumMixinStr_SN_pkcs = `enum SN_pkcs = "pkcs";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_pkcs); }))) {
            mixin(enumMixinStr_SN_pkcs);
        }
    }




    static if(!is(typeof(X509_EX_V_NETSCAPE_HACK))) {
        private enum enumMixinStr_X509_EX_V_NETSCAPE_HACK = `enum X509_EX_V_NETSCAPE_HACK = 0x8000;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_EX_V_NETSCAPE_HACK); }))) {
            mixin(enumMixinStr_X509_EX_V_NETSCAPE_HACK);
        }
    }




    static if(!is(typeof(X509_EX_V_INIT))) {
        private enum enumMixinStr_X509_EX_V_INIT = `enum X509_EX_V_INIT = 0x0001;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_EX_V_INIT); }))) {
            mixin(enumMixinStr_X509_EX_V_INIT);
        }
    }




    static if(!is(typeof(OBJ_rsadsi))) {
        private enum enumMixinStr_OBJ_rsadsi = `enum OBJ_rsadsi = OBJ_ISO_US , 113549L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_rsadsi); }))) {
            mixin(enumMixinStr_OBJ_rsadsi);
        }
    }




    static if(!is(typeof(NID_rsadsi))) {
        private enum enumMixinStr_NID_rsadsi = `enum NID_rsadsi = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_rsadsi); }))) {
            mixin(enumMixinStr_NID_rsadsi);
        }
    }




    static if(!is(typeof(LN_rsadsi))) {
        private enum enumMixinStr_LN_rsadsi = `enum LN_rsadsi = "RSA Data Security, Inc.";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_rsadsi); }))) {
            mixin(enumMixinStr_LN_rsadsi);
        }
    }




    static if(!is(typeof(SN_rsadsi))) {
        private enum enumMixinStr_SN_rsadsi = `enum SN_rsadsi = "rsadsi";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_rsadsi); }))) {
            mixin(enumMixinStr_SN_rsadsi);
        }
    }




    static if(!is(typeof(OBJ_id_DHBasedMac))) {
        private enum enumMixinStr_OBJ_id_DHBasedMac = `enum OBJ_id_DHBasedMac = OBJ_ISO_US , 113533L , 7L , 66L , 30L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_DHBasedMac); }))) {
            mixin(enumMixinStr_OBJ_id_DHBasedMac);
        }
    }




    static if(!is(typeof(NID_id_DHBasedMac))) {
        private enum enumMixinStr_NID_id_DHBasedMac = `enum NID_id_DHBasedMac = 783;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_DHBasedMac); }))) {
            mixin(enumMixinStr_NID_id_DHBasedMac);
        }
    }




    static if(!is(typeof(LN_id_DHBasedMac))) {
        private enum enumMixinStr_LN_id_DHBasedMac = `enum LN_id_DHBasedMac = "Diffie-Hellman based MAC";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_DHBasedMac); }))) {
            mixin(enumMixinStr_LN_id_DHBasedMac);
        }
    }




    static if(!is(typeof(SN_id_DHBasedMac))) {
        private enum enumMixinStr_SN_id_DHBasedMac = `enum SN_id_DHBasedMac = "id-DHBasedMac";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_DHBasedMac); }))) {
            mixin(enumMixinStr_SN_id_DHBasedMac);
        }
    }




    static if(!is(typeof(OBJ_id_PasswordBasedMAC))) {
        private enum enumMixinStr_OBJ_id_PasswordBasedMAC = `enum OBJ_id_PasswordBasedMAC = OBJ_ISO_US , 113533L , 7L , 66L , 13L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_id_PasswordBasedMAC); }))) {
            mixin(enumMixinStr_OBJ_id_PasswordBasedMAC);
        }
    }




    static if(!is(typeof(NID_id_PasswordBasedMAC))) {
        private enum enumMixinStr_NID_id_PasswordBasedMAC = `enum NID_id_PasswordBasedMAC = 782;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_id_PasswordBasedMAC); }))) {
            mixin(enumMixinStr_NID_id_PasswordBasedMAC);
        }
    }




    static if(!is(typeof(LN_id_PasswordBasedMAC))) {
        private enum enumMixinStr_LN_id_PasswordBasedMAC = `enum LN_id_PasswordBasedMAC = "password based MAC";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_id_PasswordBasedMAC); }))) {
            mixin(enumMixinStr_LN_id_PasswordBasedMAC);
        }
    }




    static if(!is(typeof(SN_id_PasswordBasedMAC))) {
        private enum enumMixinStr_SN_id_PasswordBasedMAC = `enum SN_id_PasswordBasedMAC = "id-PasswordBasedMAC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_id_PasswordBasedMAC); }))) {
            mixin(enumMixinStr_SN_id_PasswordBasedMAC);
        }
    }




    static if(!is(typeof(OBJ_pbeWithMD5AndCast5_CBC))) {
        private enum enumMixinStr_OBJ_pbeWithMD5AndCast5_CBC = `enum OBJ_pbeWithMD5AndCast5_CBC = OBJ_ISO_US , 113533L , 7L , 66L , 12L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_pbeWithMD5AndCast5_CBC); }))) {
            mixin(enumMixinStr_OBJ_pbeWithMD5AndCast5_CBC);
        }
    }




    static if(!is(typeof(NID_pbeWithMD5AndCast5_CBC))) {
        private enum enumMixinStr_NID_pbeWithMD5AndCast5_CBC = `enum NID_pbeWithMD5AndCast5_CBC = 112;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_pbeWithMD5AndCast5_CBC); }))) {
            mixin(enumMixinStr_NID_pbeWithMD5AndCast5_CBC);
        }
    }




    static if(!is(typeof(LN_pbeWithMD5AndCast5_CBC))) {
        private enum enumMixinStr_LN_pbeWithMD5AndCast5_CBC = `enum LN_pbeWithMD5AndCast5_CBC = "pbeWithMD5AndCast5CBC";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_pbeWithMD5AndCast5_CBC); }))) {
            mixin(enumMixinStr_LN_pbeWithMD5AndCast5_CBC);
        }
    }




    static if(!is(typeof(NID_cast5_ofb64))) {
        private enum enumMixinStr_NID_cast5_ofb64 = `enum NID_cast5_ofb64 = 111;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_cast5_ofb64); }))) {
            mixin(enumMixinStr_NID_cast5_ofb64);
        }
    }




    static if(!is(typeof(LN_cast5_ofb64))) {
        private enum enumMixinStr_LN_cast5_ofb64 = `enum LN_cast5_ofb64 = "cast5-ofb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_cast5_ofb64); }))) {
            mixin(enumMixinStr_LN_cast5_ofb64);
        }
    }




    static if(!is(typeof(SN_cast5_ofb64))) {
        private enum enumMixinStr_SN_cast5_ofb64 = `enum SN_cast5_ofb64 = "CAST5-OFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_cast5_ofb64); }))) {
            mixin(enumMixinStr_SN_cast5_ofb64);
        }
    }




    static if(!is(typeof(NID_cast5_cfb64))) {
        private enum enumMixinStr_NID_cast5_cfb64 = `enum NID_cast5_cfb64 = 110;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_cast5_cfb64); }))) {
            mixin(enumMixinStr_NID_cast5_cfb64);
        }
    }




    static if(!is(typeof(LN_cast5_cfb64))) {
        private enum enumMixinStr_LN_cast5_cfb64 = `enum LN_cast5_cfb64 = "cast5-cfb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_cast5_cfb64); }))) {
            mixin(enumMixinStr_LN_cast5_cfb64);
        }
    }




    static if(!is(typeof(SN_cast5_cfb64))) {
        private enum enumMixinStr_SN_cast5_cfb64 = `enum SN_cast5_cfb64 = "CAST5-CFB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_cast5_cfb64); }))) {
            mixin(enumMixinStr_SN_cast5_cfb64);
        }
    }




    static if(!is(typeof(NID_cast5_ecb))) {
        private enum enumMixinStr_NID_cast5_ecb = `enum NID_cast5_ecb = 109;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_cast5_ecb); }))) {
            mixin(enumMixinStr_NID_cast5_ecb);
        }
    }




    static if(!is(typeof(LN_cast5_ecb))) {
        private enum enumMixinStr_LN_cast5_ecb = `enum LN_cast5_ecb = "cast5-ecb";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_cast5_ecb); }))) {
            mixin(enumMixinStr_LN_cast5_ecb);
        }
    }




    static if(!is(typeof(SN_cast5_ecb))) {
        private enum enumMixinStr_SN_cast5_ecb = `enum SN_cast5_ecb = "CAST5-ECB";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_cast5_ecb); }))) {
            mixin(enumMixinStr_SN_cast5_ecb);
        }
    }




    static if(!is(typeof(OBJ_cast5_cbc))) {
        private enum enumMixinStr_OBJ_cast5_cbc = `enum OBJ_cast5_cbc = OBJ_ISO_US , 113533L , 7L , 66L , 10L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_cast5_cbc); }))) {
            mixin(enumMixinStr_OBJ_cast5_cbc);
        }
    }




    static if(!is(typeof(NID_cast5_cbc))) {
        private enum enumMixinStr_NID_cast5_cbc = `enum NID_cast5_cbc = 108;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_cast5_cbc); }))) {
            mixin(enumMixinStr_NID_cast5_cbc);
        }
    }




    static if(!is(typeof(LN_cast5_cbc))) {
        private enum enumMixinStr_LN_cast5_cbc = `enum LN_cast5_cbc = "cast5-cbc";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_cast5_cbc); }))) {
            mixin(enumMixinStr_LN_cast5_cbc);
        }
    }




    static if(!is(typeof(SN_cast5_cbc))) {
        private enum enumMixinStr_SN_cast5_cbc = `enum SN_cast5_cbc = "CAST5-CBC";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_cast5_cbc); }))) {
            mixin(enumMixinStr_SN_cast5_cbc);
        }
    }




    static if(!is(typeof(OBJ_wap_wsg_idm_ecid_wtls12))) {
        private enum enumMixinStr_OBJ_wap_wsg_idm_ecid_wtls12 = `enum OBJ_wap_wsg_idm_ecid_wtls12 = OBJ_wap_wsg_idm_ecid , 12L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_wap_wsg_idm_ecid_wtls12); }))) {
            mixin(enumMixinStr_OBJ_wap_wsg_idm_ecid_wtls12);
        }
    }




    static if(!is(typeof(NID_wap_wsg_idm_ecid_wtls12))) {
        private enum enumMixinStr_NID_wap_wsg_idm_ecid_wtls12 = `enum NID_wap_wsg_idm_ecid_wtls12 = 745;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_wap_wsg_idm_ecid_wtls12); }))) {
            mixin(enumMixinStr_NID_wap_wsg_idm_ecid_wtls12);
        }
    }




    static if(!is(typeof(SN_wap_wsg_idm_ecid_wtls12))) {
        private enum enumMixinStr_SN_wap_wsg_idm_ecid_wtls12 = `enum SN_wap_wsg_idm_ecid_wtls12 = "wap-wsg-idm-ecid-wtls12";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_wap_wsg_idm_ecid_wtls12); }))) {
            mixin(enumMixinStr_SN_wap_wsg_idm_ecid_wtls12);
        }
    }




    static if(!is(typeof(OBJ_wap_wsg_idm_ecid_wtls11))) {
        private enum enumMixinStr_OBJ_wap_wsg_idm_ecid_wtls11 = `enum OBJ_wap_wsg_idm_ecid_wtls11 = OBJ_wap_wsg_idm_ecid , 11L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_wap_wsg_idm_ecid_wtls11); }))) {
            mixin(enumMixinStr_OBJ_wap_wsg_idm_ecid_wtls11);
        }
    }




    static if(!is(typeof(NID_wap_wsg_idm_ecid_wtls11))) {
        private enum enumMixinStr_NID_wap_wsg_idm_ecid_wtls11 = `enum NID_wap_wsg_idm_ecid_wtls11 = 744;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_wap_wsg_idm_ecid_wtls11); }))) {
            mixin(enumMixinStr_NID_wap_wsg_idm_ecid_wtls11);
        }
    }




    static if(!is(typeof(SN_wap_wsg_idm_ecid_wtls11))) {
        private enum enumMixinStr_SN_wap_wsg_idm_ecid_wtls11 = `enum SN_wap_wsg_idm_ecid_wtls11 = "wap-wsg-idm-ecid-wtls11";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_wap_wsg_idm_ecid_wtls11); }))) {
            mixin(enumMixinStr_SN_wap_wsg_idm_ecid_wtls11);
        }
    }




    static if(!is(typeof(OBJ_wap_wsg_idm_ecid_wtls10))) {
        private enum enumMixinStr_OBJ_wap_wsg_idm_ecid_wtls10 = `enum OBJ_wap_wsg_idm_ecid_wtls10 = OBJ_wap_wsg_idm_ecid , 10L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_wap_wsg_idm_ecid_wtls10); }))) {
            mixin(enumMixinStr_OBJ_wap_wsg_idm_ecid_wtls10);
        }
    }




    static if(!is(typeof(NID_wap_wsg_idm_ecid_wtls10))) {
        private enum enumMixinStr_NID_wap_wsg_idm_ecid_wtls10 = `enum NID_wap_wsg_idm_ecid_wtls10 = 743;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_wap_wsg_idm_ecid_wtls10); }))) {
            mixin(enumMixinStr_NID_wap_wsg_idm_ecid_wtls10);
        }
    }




    static if(!is(typeof(SN_wap_wsg_idm_ecid_wtls10))) {
        private enum enumMixinStr_SN_wap_wsg_idm_ecid_wtls10 = `enum SN_wap_wsg_idm_ecid_wtls10 = "wap-wsg-idm-ecid-wtls10";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_wap_wsg_idm_ecid_wtls10); }))) {
            mixin(enumMixinStr_SN_wap_wsg_idm_ecid_wtls10);
        }
    }




    static if(!is(typeof(OBJ_wap_wsg_idm_ecid_wtls9))) {
        private enum enumMixinStr_OBJ_wap_wsg_idm_ecid_wtls9 = `enum OBJ_wap_wsg_idm_ecid_wtls9 = OBJ_wap_wsg_idm_ecid , 9L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_wap_wsg_idm_ecid_wtls9); }))) {
            mixin(enumMixinStr_OBJ_wap_wsg_idm_ecid_wtls9);
        }
    }




    static if(!is(typeof(NID_wap_wsg_idm_ecid_wtls9))) {
        private enum enumMixinStr_NID_wap_wsg_idm_ecid_wtls9 = `enum NID_wap_wsg_idm_ecid_wtls9 = 742;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_wap_wsg_idm_ecid_wtls9); }))) {
            mixin(enumMixinStr_NID_wap_wsg_idm_ecid_wtls9);
        }
    }




    static if(!is(typeof(SN_wap_wsg_idm_ecid_wtls9))) {
        private enum enumMixinStr_SN_wap_wsg_idm_ecid_wtls9 = `enum SN_wap_wsg_idm_ecid_wtls9 = "wap-wsg-idm-ecid-wtls9";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_wap_wsg_idm_ecid_wtls9); }))) {
            mixin(enumMixinStr_SN_wap_wsg_idm_ecid_wtls9);
        }
    }




    static if(!is(typeof(OBJ_wap_wsg_idm_ecid_wtls8))) {
        private enum enumMixinStr_OBJ_wap_wsg_idm_ecid_wtls8 = `enum OBJ_wap_wsg_idm_ecid_wtls8 = OBJ_wap_wsg_idm_ecid , 8L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_wap_wsg_idm_ecid_wtls8); }))) {
            mixin(enumMixinStr_OBJ_wap_wsg_idm_ecid_wtls8);
        }
    }




    static if(!is(typeof(NID_wap_wsg_idm_ecid_wtls8))) {
        private enum enumMixinStr_NID_wap_wsg_idm_ecid_wtls8 = `enum NID_wap_wsg_idm_ecid_wtls8 = 741;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_wap_wsg_idm_ecid_wtls8); }))) {
            mixin(enumMixinStr_NID_wap_wsg_idm_ecid_wtls8);
        }
    }




    static if(!is(typeof(SN_wap_wsg_idm_ecid_wtls8))) {
        private enum enumMixinStr_SN_wap_wsg_idm_ecid_wtls8 = `enum SN_wap_wsg_idm_ecid_wtls8 = "wap-wsg-idm-ecid-wtls8";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_wap_wsg_idm_ecid_wtls8); }))) {
            mixin(enumMixinStr_SN_wap_wsg_idm_ecid_wtls8);
        }
    }




    static if(!is(typeof(OBJ_wap_wsg_idm_ecid_wtls7))) {
        private enum enumMixinStr_OBJ_wap_wsg_idm_ecid_wtls7 = `enum OBJ_wap_wsg_idm_ecid_wtls7 = OBJ_wap_wsg_idm_ecid , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_wap_wsg_idm_ecid_wtls7); }))) {
            mixin(enumMixinStr_OBJ_wap_wsg_idm_ecid_wtls7);
        }
    }




    static if(!is(typeof(NID_wap_wsg_idm_ecid_wtls7))) {
        private enum enumMixinStr_NID_wap_wsg_idm_ecid_wtls7 = `enum NID_wap_wsg_idm_ecid_wtls7 = 740;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_wap_wsg_idm_ecid_wtls7); }))) {
            mixin(enumMixinStr_NID_wap_wsg_idm_ecid_wtls7);
        }
    }




    static if(!is(typeof(SN_wap_wsg_idm_ecid_wtls7))) {
        private enum enumMixinStr_SN_wap_wsg_idm_ecid_wtls7 = `enum SN_wap_wsg_idm_ecid_wtls7 = "wap-wsg-idm-ecid-wtls7";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_wap_wsg_idm_ecid_wtls7); }))) {
            mixin(enumMixinStr_SN_wap_wsg_idm_ecid_wtls7);
        }
    }




    static if(!is(typeof(OBJ_wap_wsg_idm_ecid_wtls6))) {
        private enum enumMixinStr_OBJ_wap_wsg_idm_ecid_wtls6 = `enum OBJ_wap_wsg_idm_ecid_wtls6 = OBJ_wap_wsg_idm_ecid , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_wap_wsg_idm_ecid_wtls6); }))) {
            mixin(enumMixinStr_OBJ_wap_wsg_idm_ecid_wtls6);
        }
    }




    static if(!is(typeof(NID_wap_wsg_idm_ecid_wtls6))) {
        private enum enumMixinStr_NID_wap_wsg_idm_ecid_wtls6 = `enum NID_wap_wsg_idm_ecid_wtls6 = 739;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_wap_wsg_idm_ecid_wtls6); }))) {
            mixin(enumMixinStr_NID_wap_wsg_idm_ecid_wtls6);
        }
    }




    static if(!is(typeof(SN_wap_wsg_idm_ecid_wtls6))) {
        private enum enumMixinStr_SN_wap_wsg_idm_ecid_wtls6 = `enum SN_wap_wsg_idm_ecid_wtls6 = "wap-wsg-idm-ecid-wtls6";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_wap_wsg_idm_ecid_wtls6); }))) {
            mixin(enumMixinStr_SN_wap_wsg_idm_ecid_wtls6);
        }
    }




    static if(!is(typeof(OBJ_wap_wsg_idm_ecid_wtls5))) {
        private enum enumMixinStr_OBJ_wap_wsg_idm_ecid_wtls5 = `enum OBJ_wap_wsg_idm_ecid_wtls5 = OBJ_wap_wsg_idm_ecid , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_wap_wsg_idm_ecid_wtls5); }))) {
            mixin(enumMixinStr_OBJ_wap_wsg_idm_ecid_wtls5);
        }
    }




    static if(!is(typeof(NID_wap_wsg_idm_ecid_wtls5))) {
        private enum enumMixinStr_NID_wap_wsg_idm_ecid_wtls5 = `enum NID_wap_wsg_idm_ecid_wtls5 = 738;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_wap_wsg_idm_ecid_wtls5); }))) {
            mixin(enumMixinStr_NID_wap_wsg_idm_ecid_wtls5);
        }
    }




    static if(!is(typeof(SN_wap_wsg_idm_ecid_wtls5))) {
        private enum enumMixinStr_SN_wap_wsg_idm_ecid_wtls5 = `enum SN_wap_wsg_idm_ecid_wtls5 = "wap-wsg-idm-ecid-wtls5";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_wap_wsg_idm_ecid_wtls5); }))) {
            mixin(enumMixinStr_SN_wap_wsg_idm_ecid_wtls5);
        }
    }




    static if(!is(typeof(OBJ_wap_wsg_idm_ecid_wtls4))) {
        private enum enumMixinStr_OBJ_wap_wsg_idm_ecid_wtls4 = `enum OBJ_wap_wsg_idm_ecid_wtls4 = OBJ_wap_wsg_idm_ecid , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_wap_wsg_idm_ecid_wtls4); }))) {
            mixin(enumMixinStr_OBJ_wap_wsg_idm_ecid_wtls4);
        }
    }




    static if(!is(typeof(NID_wap_wsg_idm_ecid_wtls4))) {
        private enum enumMixinStr_NID_wap_wsg_idm_ecid_wtls4 = `enum NID_wap_wsg_idm_ecid_wtls4 = 737;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_wap_wsg_idm_ecid_wtls4); }))) {
            mixin(enumMixinStr_NID_wap_wsg_idm_ecid_wtls4);
        }
    }




    static if(!is(typeof(SN_wap_wsg_idm_ecid_wtls4))) {
        private enum enumMixinStr_SN_wap_wsg_idm_ecid_wtls4 = `enum SN_wap_wsg_idm_ecid_wtls4 = "wap-wsg-idm-ecid-wtls4";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_wap_wsg_idm_ecid_wtls4); }))) {
            mixin(enumMixinStr_SN_wap_wsg_idm_ecid_wtls4);
        }
    }




    static if(!is(typeof(OBJ_wap_wsg_idm_ecid_wtls3))) {
        private enum enumMixinStr_OBJ_wap_wsg_idm_ecid_wtls3 = `enum OBJ_wap_wsg_idm_ecid_wtls3 = OBJ_wap_wsg_idm_ecid , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_wap_wsg_idm_ecid_wtls3); }))) {
            mixin(enumMixinStr_OBJ_wap_wsg_idm_ecid_wtls3);
        }
    }




    static if(!is(typeof(NID_wap_wsg_idm_ecid_wtls3))) {
        private enum enumMixinStr_NID_wap_wsg_idm_ecid_wtls3 = `enum NID_wap_wsg_idm_ecid_wtls3 = 736;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_wap_wsg_idm_ecid_wtls3); }))) {
            mixin(enumMixinStr_NID_wap_wsg_idm_ecid_wtls3);
        }
    }




    static if(!is(typeof(SN_wap_wsg_idm_ecid_wtls3))) {
        private enum enumMixinStr_SN_wap_wsg_idm_ecid_wtls3 = `enum SN_wap_wsg_idm_ecid_wtls3 = "wap-wsg-idm-ecid-wtls3";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_wap_wsg_idm_ecid_wtls3); }))) {
            mixin(enumMixinStr_SN_wap_wsg_idm_ecid_wtls3);
        }
    }




    static if(!is(typeof(OBJ_wap_wsg_idm_ecid_wtls1))) {
        private enum enumMixinStr_OBJ_wap_wsg_idm_ecid_wtls1 = `enum OBJ_wap_wsg_idm_ecid_wtls1 = OBJ_wap_wsg_idm_ecid , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_wap_wsg_idm_ecid_wtls1); }))) {
            mixin(enumMixinStr_OBJ_wap_wsg_idm_ecid_wtls1);
        }
    }




    static if(!is(typeof(NID_wap_wsg_idm_ecid_wtls1))) {
        private enum enumMixinStr_NID_wap_wsg_idm_ecid_wtls1 = `enum NID_wap_wsg_idm_ecid_wtls1 = 735;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_wap_wsg_idm_ecid_wtls1); }))) {
            mixin(enumMixinStr_NID_wap_wsg_idm_ecid_wtls1);
        }
    }




    static if(!is(typeof(SN_wap_wsg_idm_ecid_wtls1))) {
        private enum enumMixinStr_SN_wap_wsg_idm_ecid_wtls1 = `enum SN_wap_wsg_idm_ecid_wtls1 = "wap-wsg-idm-ecid-wtls1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_wap_wsg_idm_ecid_wtls1); }))) {
            mixin(enumMixinStr_SN_wap_wsg_idm_ecid_wtls1);
        }
    }




    static if(!is(typeof(OBJ_wap_wsg_idm_ecid))) {
        private enum enumMixinStr_OBJ_wap_wsg_idm_ecid = `enum OBJ_wap_wsg_idm_ecid = OBJ_wap_wsg , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_wap_wsg_idm_ecid); }))) {
            mixin(enumMixinStr_OBJ_wap_wsg_idm_ecid);
        }
    }




    static if(!is(typeof(OBJ_sect571r1))) {
        private enum enumMixinStr_OBJ_sect571r1 = `enum OBJ_sect571r1 = OBJ_secg_ellipticCurve , 39L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sect571r1); }))) {
            mixin(enumMixinStr_OBJ_sect571r1);
        }
    }




    static if(!is(typeof(NID_sect571r1))) {
        private enum enumMixinStr_NID_sect571r1 = `enum NID_sect571r1 = 734;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sect571r1); }))) {
            mixin(enumMixinStr_NID_sect571r1);
        }
    }




    static if(!is(typeof(SN_sect571r1))) {
        private enum enumMixinStr_SN_sect571r1 = `enum SN_sect571r1 = "sect571r1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sect571r1); }))) {
            mixin(enumMixinStr_SN_sect571r1);
        }
    }




    static if(!is(typeof(OBJ_sect571k1))) {
        private enum enumMixinStr_OBJ_sect571k1 = `enum OBJ_sect571k1 = OBJ_secg_ellipticCurve , 38L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sect571k1); }))) {
            mixin(enumMixinStr_OBJ_sect571k1);
        }
    }




    static if(!is(typeof(NID_sect571k1))) {
        private enum enumMixinStr_NID_sect571k1 = `enum NID_sect571k1 = 733;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sect571k1); }))) {
            mixin(enumMixinStr_NID_sect571k1);
        }
    }




    static if(!is(typeof(SN_sect571k1))) {
        private enum enumMixinStr_SN_sect571k1 = `enum SN_sect571k1 = "sect571k1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sect571k1); }))) {
            mixin(enumMixinStr_SN_sect571k1);
        }
    }




    static if(!is(typeof(OBJ_sect409r1))) {
        private enum enumMixinStr_OBJ_sect409r1 = `enum OBJ_sect409r1 = OBJ_secg_ellipticCurve , 37L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sect409r1); }))) {
            mixin(enumMixinStr_OBJ_sect409r1);
        }
    }




    static if(!is(typeof(NID_sect409r1))) {
        private enum enumMixinStr_NID_sect409r1 = `enum NID_sect409r1 = 732;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sect409r1); }))) {
            mixin(enumMixinStr_NID_sect409r1);
        }
    }




    static if(!is(typeof(SN_sect409r1))) {
        private enum enumMixinStr_SN_sect409r1 = `enum SN_sect409r1 = "sect409r1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sect409r1); }))) {
            mixin(enumMixinStr_SN_sect409r1);
        }
    }




    static if(!is(typeof(OBJ_sect409k1))) {
        private enum enumMixinStr_OBJ_sect409k1 = `enum OBJ_sect409k1 = OBJ_secg_ellipticCurve , 36L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sect409k1); }))) {
            mixin(enumMixinStr_OBJ_sect409k1);
        }
    }




    static if(!is(typeof(NID_sect409k1))) {
        private enum enumMixinStr_NID_sect409k1 = `enum NID_sect409k1 = 731;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sect409k1); }))) {
            mixin(enumMixinStr_NID_sect409k1);
        }
    }




    static if(!is(typeof(SN_sect409k1))) {
        private enum enumMixinStr_SN_sect409k1 = `enum SN_sect409k1 = "sect409k1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sect409k1); }))) {
            mixin(enumMixinStr_SN_sect409k1);
        }
    }




    static if(!is(typeof(OBJ_sect283r1))) {
        private enum enumMixinStr_OBJ_sect283r1 = `enum OBJ_sect283r1 = OBJ_secg_ellipticCurve , 17L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sect283r1); }))) {
            mixin(enumMixinStr_OBJ_sect283r1);
        }
    }




    static if(!is(typeof(NID_sect283r1))) {
        private enum enumMixinStr_NID_sect283r1 = `enum NID_sect283r1 = 730;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sect283r1); }))) {
            mixin(enumMixinStr_NID_sect283r1);
        }
    }




    static if(!is(typeof(SN_sect283r1))) {
        private enum enumMixinStr_SN_sect283r1 = `enum SN_sect283r1 = "sect283r1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sect283r1); }))) {
            mixin(enumMixinStr_SN_sect283r1);
        }
    }




    static if(!is(typeof(OBJ_sect283k1))) {
        private enum enumMixinStr_OBJ_sect283k1 = `enum OBJ_sect283k1 = OBJ_secg_ellipticCurve , 16L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sect283k1); }))) {
            mixin(enumMixinStr_OBJ_sect283k1);
        }
    }




    static if(!is(typeof(NID_sect283k1))) {
        private enum enumMixinStr_NID_sect283k1 = `enum NID_sect283k1 = 729;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sect283k1); }))) {
            mixin(enumMixinStr_NID_sect283k1);
        }
    }




    static if(!is(typeof(SN_sect283k1))) {
        private enum enumMixinStr_SN_sect283k1 = `enum SN_sect283k1 = "sect283k1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sect283k1); }))) {
            mixin(enumMixinStr_SN_sect283k1);
        }
    }




    static if(!is(typeof(OBJ_sect239k1))) {
        private enum enumMixinStr_OBJ_sect239k1 = `enum OBJ_sect239k1 = OBJ_secg_ellipticCurve , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sect239k1); }))) {
            mixin(enumMixinStr_OBJ_sect239k1);
        }
    }




    static if(!is(typeof(NID_sect239k1))) {
        private enum enumMixinStr_NID_sect239k1 = `enum NID_sect239k1 = 728;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sect239k1); }))) {
            mixin(enumMixinStr_NID_sect239k1);
        }
    }




    static if(!is(typeof(SN_sect239k1))) {
        private enum enumMixinStr_SN_sect239k1 = `enum SN_sect239k1 = "sect239k1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sect239k1); }))) {
            mixin(enumMixinStr_SN_sect239k1);
        }
    }




    static if(!is(typeof(OBJ_sect233r1))) {
        private enum enumMixinStr_OBJ_sect233r1 = `enum OBJ_sect233r1 = OBJ_secg_ellipticCurve , 27L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sect233r1); }))) {
            mixin(enumMixinStr_OBJ_sect233r1);
        }
    }




    static if(!is(typeof(NID_sect233r1))) {
        private enum enumMixinStr_NID_sect233r1 = `enum NID_sect233r1 = 727;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sect233r1); }))) {
            mixin(enumMixinStr_NID_sect233r1);
        }
    }




    static if(!is(typeof(SN_sect233r1))) {
        private enum enumMixinStr_SN_sect233r1 = `enum SN_sect233r1 = "sect233r1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sect233r1); }))) {
            mixin(enumMixinStr_SN_sect233r1);
        }
    }




    static if(!is(typeof(OBJ_sect233k1))) {
        private enum enumMixinStr_OBJ_sect233k1 = `enum OBJ_sect233k1 = OBJ_secg_ellipticCurve , 26L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sect233k1); }))) {
            mixin(enumMixinStr_OBJ_sect233k1);
        }
    }




    static if(!is(typeof(NID_sect233k1))) {
        private enum enumMixinStr_NID_sect233k1 = `enum NID_sect233k1 = 726;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sect233k1); }))) {
            mixin(enumMixinStr_NID_sect233k1);
        }
    }




    static if(!is(typeof(SN_sect233k1))) {
        private enum enumMixinStr_SN_sect233k1 = `enum SN_sect233k1 = "sect233k1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sect233k1); }))) {
            mixin(enumMixinStr_SN_sect233k1);
        }
    }




    static if(!is(typeof(OBJ_sect193r2))) {
        private enum enumMixinStr_OBJ_sect193r2 = `enum OBJ_sect193r2 = OBJ_secg_ellipticCurve , 25L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sect193r2); }))) {
            mixin(enumMixinStr_OBJ_sect193r2);
        }
    }




    static if(!is(typeof(NID_sect193r2))) {
        private enum enumMixinStr_NID_sect193r2 = `enum NID_sect193r2 = 725;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sect193r2); }))) {
            mixin(enumMixinStr_NID_sect193r2);
        }
    }




    static if(!is(typeof(SN_sect193r2))) {
        private enum enumMixinStr_SN_sect193r2 = `enum SN_sect193r2 = "sect193r2";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sect193r2); }))) {
            mixin(enumMixinStr_SN_sect193r2);
        }
    }




    static if(!is(typeof(OBJ_sect193r1))) {
        private enum enumMixinStr_OBJ_sect193r1 = `enum OBJ_sect193r1 = OBJ_secg_ellipticCurve , 24L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sect193r1); }))) {
            mixin(enumMixinStr_OBJ_sect193r1);
        }
    }




    static if(!is(typeof(NID_sect193r1))) {
        private enum enumMixinStr_NID_sect193r1 = `enum NID_sect193r1 = 724;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sect193r1); }))) {
            mixin(enumMixinStr_NID_sect193r1);
        }
    }




    static if(!is(typeof(SN_sect193r1))) {
        private enum enumMixinStr_SN_sect193r1 = `enum SN_sect193r1 = "sect193r1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sect193r1); }))) {
            mixin(enumMixinStr_SN_sect193r1);
        }
    }




    static if(!is(typeof(OBJ_sect163r2))) {
        private enum enumMixinStr_OBJ_sect163r2 = `enum OBJ_sect163r2 = OBJ_secg_ellipticCurve , 15L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sect163r2); }))) {
            mixin(enumMixinStr_OBJ_sect163r2);
        }
    }




    static if(!is(typeof(NID_sect163r2))) {
        private enum enumMixinStr_NID_sect163r2 = `enum NID_sect163r2 = 723;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sect163r2); }))) {
            mixin(enumMixinStr_NID_sect163r2);
        }
    }




    static if(!is(typeof(SN_sect163r2))) {
        private enum enumMixinStr_SN_sect163r2 = `enum SN_sect163r2 = "sect163r2";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sect163r2); }))) {
            mixin(enumMixinStr_SN_sect163r2);
        }
    }




    static if(!is(typeof(OBJ_sect163r1))) {
        private enum enumMixinStr_OBJ_sect163r1 = `enum OBJ_sect163r1 = OBJ_secg_ellipticCurve , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sect163r1); }))) {
            mixin(enumMixinStr_OBJ_sect163r1);
        }
    }




    static if(!is(typeof(NID_sect163r1))) {
        private enum enumMixinStr_NID_sect163r1 = `enum NID_sect163r1 = 722;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sect163r1); }))) {
            mixin(enumMixinStr_NID_sect163r1);
        }
    }




    static if(!is(typeof(SN_sect163r1))) {
        private enum enumMixinStr_SN_sect163r1 = `enum SN_sect163r1 = "sect163r1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sect163r1); }))) {
            mixin(enumMixinStr_SN_sect163r1);
        }
    }




    static if(!is(typeof(OBJ_sect163k1))) {
        private enum enumMixinStr_OBJ_sect163k1 = `enum OBJ_sect163k1 = OBJ_secg_ellipticCurve , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sect163k1); }))) {
            mixin(enumMixinStr_OBJ_sect163k1);
        }
    }




    static if(!is(typeof(NID_sect163k1))) {
        private enum enumMixinStr_NID_sect163k1 = `enum NID_sect163k1 = 721;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sect163k1); }))) {
            mixin(enumMixinStr_NID_sect163k1);
        }
    }




    static if(!is(typeof(SN_sect163k1))) {
        private enum enumMixinStr_SN_sect163k1 = `enum SN_sect163k1 = "sect163k1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sect163k1); }))) {
            mixin(enumMixinStr_SN_sect163k1);
        }
    }




    static if(!is(typeof(OBJ_sect131r2))) {
        private enum enumMixinStr_OBJ_sect131r2 = `enum OBJ_sect131r2 = OBJ_secg_ellipticCurve , 23L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sect131r2); }))) {
            mixin(enumMixinStr_OBJ_sect131r2);
        }
    }




    static if(!is(typeof(NID_sect131r2))) {
        private enum enumMixinStr_NID_sect131r2 = `enum NID_sect131r2 = 720;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sect131r2); }))) {
            mixin(enumMixinStr_NID_sect131r2);
        }
    }




    static if(!is(typeof(SN_sect131r2))) {
        private enum enumMixinStr_SN_sect131r2 = `enum SN_sect131r2 = "sect131r2";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sect131r2); }))) {
            mixin(enumMixinStr_SN_sect131r2);
        }
    }




    static if(!is(typeof(OBJ_sect131r1))) {
        private enum enumMixinStr_OBJ_sect131r1 = `enum OBJ_sect131r1 = OBJ_secg_ellipticCurve , 22L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sect131r1); }))) {
            mixin(enumMixinStr_OBJ_sect131r1);
        }
    }




    static if(!is(typeof(NID_sect131r1))) {
        private enum enumMixinStr_NID_sect131r1 = `enum NID_sect131r1 = 719;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sect131r1); }))) {
            mixin(enumMixinStr_NID_sect131r1);
        }
    }




    static if(!is(typeof(SN_sect131r1))) {
        private enum enumMixinStr_SN_sect131r1 = `enum SN_sect131r1 = "sect131r1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sect131r1); }))) {
            mixin(enumMixinStr_SN_sect131r1);
        }
    }




    static if(!is(typeof(OBJ_sect113r2))) {
        private enum enumMixinStr_OBJ_sect113r2 = `enum OBJ_sect113r2 = OBJ_secg_ellipticCurve , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sect113r2); }))) {
            mixin(enumMixinStr_OBJ_sect113r2);
        }
    }




    static if(!is(typeof(NID_sect113r2))) {
        private enum enumMixinStr_NID_sect113r2 = `enum NID_sect113r2 = 718;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sect113r2); }))) {
            mixin(enumMixinStr_NID_sect113r2);
        }
    }




    static if(!is(typeof(SN_sect113r2))) {
        private enum enumMixinStr_SN_sect113r2 = `enum SN_sect113r2 = "sect113r2";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sect113r2); }))) {
            mixin(enumMixinStr_SN_sect113r2);
        }
    }




    static if(!is(typeof(OBJ_sect113r1))) {
        private enum enumMixinStr_OBJ_sect113r1 = `enum OBJ_sect113r1 = OBJ_secg_ellipticCurve , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sect113r1); }))) {
            mixin(enumMixinStr_OBJ_sect113r1);
        }
    }




    static if(!is(typeof(NID_sect113r1))) {
        private enum enumMixinStr_NID_sect113r1 = `enum NID_sect113r1 = 717;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sect113r1); }))) {
            mixin(enumMixinStr_NID_sect113r1);
        }
    }




    static if(!is(typeof(SN_sect113r1))) {
        private enum enumMixinStr_SN_sect113r1 = `enum SN_sect113r1 = "sect113r1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sect113r1); }))) {
            mixin(enumMixinStr_SN_sect113r1);
        }
    }




    static if(!is(typeof(OBJ_secp521r1))) {
        private enum enumMixinStr_OBJ_secp521r1 = `enum OBJ_secp521r1 = OBJ_secg_ellipticCurve , 35L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_secp521r1); }))) {
            mixin(enumMixinStr_OBJ_secp521r1);
        }
    }




    static if(!is(typeof(NID_secp521r1))) {
        private enum enumMixinStr_NID_secp521r1 = `enum NID_secp521r1 = 716;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_secp521r1); }))) {
            mixin(enumMixinStr_NID_secp521r1);
        }
    }




    static if(!is(typeof(SN_secp521r1))) {
        private enum enumMixinStr_SN_secp521r1 = `enum SN_secp521r1 = "secp521r1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_secp521r1); }))) {
            mixin(enumMixinStr_SN_secp521r1);
        }
    }




    static if(!is(typeof(OBJ_secp384r1))) {
        private enum enumMixinStr_OBJ_secp384r1 = `enum OBJ_secp384r1 = OBJ_secg_ellipticCurve , 34L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_secp384r1); }))) {
            mixin(enumMixinStr_OBJ_secp384r1);
        }
    }




    static if(!is(typeof(NID_secp384r1))) {
        private enum enumMixinStr_NID_secp384r1 = `enum NID_secp384r1 = 715;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_secp384r1); }))) {
            mixin(enumMixinStr_NID_secp384r1);
        }
    }




    static if(!is(typeof(SN_secp384r1))) {
        private enum enumMixinStr_SN_secp384r1 = `enum SN_secp384r1 = "secp384r1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_secp384r1); }))) {
            mixin(enumMixinStr_SN_secp384r1);
        }
    }




    static if(!is(typeof(OBJ_secp256k1))) {
        private enum enumMixinStr_OBJ_secp256k1 = `enum OBJ_secp256k1 = OBJ_secg_ellipticCurve , 10L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_secp256k1); }))) {
            mixin(enumMixinStr_OBJ_secp256k1);
        }
    }




    static if(!is(typeof(NID_secp256k1))) {
        private enum enumMixinStr_NID_secp256k1 = `enum NID_secp256k1 = 714;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_secp256k1); }))) {
            mixin(enumMixinStr_NID_secp256k1);
        }
    }




    static if(!is(typeof(SN_secp256k1))) {
        private enum enumMixinStr_SN_secp256k1 = `enum SN_secp256k1 = "secp256k1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_secp256k1); }))) {
            mixin(enumMixinStr_SN_secp256k1);
        }
    }




    static if(!is(typeof(OBJ_secp224r1))) {
        private enum enumMixinStr_OBJ_secp224r1 = `enum OBJ_secp224r1 = OBJ_secg_ellipticCurve , 33L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_secp224r1); }))) {
            mixin(enumMixinStr_OBJ_secp224r1);
        }
    }




    static if(!is(typeof(NID_secp224r1))) {
        private enum enumMixinStr_NID_secp224r1 = `enum NID_secp224r1 = 713;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_secp224r1); }))) {
            mixin(enumMixinStr_NID_secp224r1);
        }
    }




    static if(!is(typeof(SN_secp224r1))) {
        private enum enumMixinStr_SN_secp224r1 = `enum SN_secp224r1 = "secp224r1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_secp224r1); }))) {
            mixin(enumMixinStr_SN_secp224r1);
        }
    }




    static if(!is(typeof(OBJ_secp224k1))) {
        private enum enumMixinStr_OBJ_secp224k1 = `enum OBJ_secp224k1 = OBJ_secg_ellipticCurve , 32L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_secp224k1); }))) {
            mixin(enumMixinStr_OBJ_secp224k1);
        }
    }




    static if(!is(typeof(NID_secp224k1))) {
        private enum enumMixinStr_NID_secp224k1 = `enum NID_secp224k1 = 712;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_secp224k1); }))) {
            mixin(enumMixinStr_NID_secp224k1);
        }
    }




    static if(!is(typeof(SN_secp224k1))) {
        private enum enumMixinStr_SN_secp224k1 = `enum SN_secp224k1 = "secp224k1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_secp224k1); }))) {
            mixin(enumMixinStr_SN_secp224k1);
        }
    }




    static if(!is(typeof(OBJ_secp192k1))) {
        private enum enumMixinStr_OBJ_secp192k1 = `enum OBJ_secp192k1 = OBJ_secg_ellipticCurve , 31L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_secp192k1); }))) {
            mixin(enumMixinStr_OBJ_secp192k1);
        }
    }




    static if(!is(typeof(X509_TRUST_DEFAULT))) {
        private enum enumMixinStr_X509_TRUST_DEFAULT = `enum X509_TRUST_DEFAULT = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_TRUST_DEFAULT); }))) {
            mixin(enumMixinStr_X509_TRUST_DEFAULT);
        }
    }




    static if(!is(typeof(X509_TRUST_COMPAT))) {
        private enum enumMixinStr_X509_TRUST_COMPAT = `enum X509_TRUST_COMPAT = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_TRUST_COMPAT); }))) {
            mixin(enumMixinStr_X509_TRUST_COMPAT);
        }
    }




    static if(!is(typeof(X509_TRUST_SSL_CLIENT))) {
        private enum enumMixinStr_X509_TRUST_SSL_CLIENT = `enum X509_TRUST_SSL_CLIENT = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_TRUST_SSL_CLIENT); }))) {
            mixin(enumMixinStr_X509_TRUST_SSL_CLIENT);
        }
    }




    static if(!is(typeof(X509_TRUST_SSL_SERVER))) {
        private enum enumMixinStr_X509_TRUST_SSL_SERVER = `enum X509_TRUST_SSL_SERVER = 3;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_TRUST_SSL_SERVER); }))) {
            mixin(enumMixinStr_X509_TRUST_SSL_SERVER);
        }
    }




    static if(!is(typeof(X509_TRUST_EMAIL))) {
        private enum enumMixinStr_X509_TRUST_EMAIL = `enum X509_TRUST_EMAIL = 4;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_TRUST_EMAIL); }))) {
            mixin(enumMixinStr_X509_TRUST_EMAIL);
        }
    }




    static if(!is(typeof(X509_TRUST_OBJECT_SIGN))) {
        private enum enumMixinStr_X509_TRUST_OBJECT_SIGN = `enum X509_TRUST_OBJECT_SIGN = 5;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_TRUST_OBJECT_SIGN); }))) {
            mixin(enumMixinStr_X509_TRUST_OBJECT_SIGN);
        }
    }




    static if(!is(typeof(X509_TRUST_OCSP_SIGN))) {
        private enum enumMixinStr_X509_TRUST_OCSP_SIGN = `enum X509_TRUST_OCSP_SIGN = 6;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_TRUST_OCSP_SIGN); }))) {
            mixin(enumMixinStr_X509_TRUST_OCSP_SIGN);
        }
    }




    static if(!is(typeof(X509_TRUST_OCSP_REQUEST))) {
        private enum enumMixinStr_X509_TRUST_OCSP_REQUEST = `enum X509_TRUST_OCSP_REQUEST = 7;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_TRUST_OCSP_REQUEST); }))) {
            mixin(enumMixinStr_X509_TRUST_OCSP_REQUEST);
        }
    }




    static if(!is(typeof(X509_TRUST_TSA))) {
        private enum enumMixinStr_X509_TRUST_TSA = `enum X509_TRUST_TSA = 8;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_TRUST_TSA); }))) {
            mixin(enumMixinStr_X509_TRUST_TSA);
        }
    }




    static if(!is(typeof(X509_TRUST_MIN))) {
        private enum enumMixinStr_X509_TRUST_MIN = `enum X509_TRUST_MIN = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_TRUST_MIN); }))) {
            mixin(enumMixinStr_X509_TRUST_MIN);
        }
    }




    static if(!is(typeof(X509_TRUST_MAX))) {
        private enum enumMixinStr_X509_TRUST_MAX = `enum X509_TRUST_MAX = 8;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_TRUST_MAX); }))) {
            mixin(enumMixinStr_X509_TRUST_MAX);
        }
    }




    static if(!is(typeof(X509_TRUST_DYNAMIC))) {
        private enum enumMixinStr_X509_TRUST_DYNAMIC = `enum X509_TRUST_DYNAMIC = ( 1U << 0 );`;
        static if(is(typeof({ mixin(enumMixinStr_X509_TRUST_DYNAMIC); }))) {
            mixin(enumMixinStr_X509_TRUST_DYNAMIC);
        }
    }




    static if(!is(typeof(X509_TRUST_DYNAMIC_NAME))) {
        private enum enumMixinStr_X509_TRUST_DYNAMIC_NAME = `enum X509_TRUST_DYNAMIC_NAME = ( 1U << 1 );`;
        static if(is(typeof({ mixin(enumMixinStr_X509_TRUST_DYNAMIC_NAME); }))) {
            mixin(enumMixinStr_X509_TRUST_DYNAMIC_NAME);
        }
    }




    static if(!is(typeof(X509_TRUST_NO_SS_COMPAT))) {
        private enum enumMixinStr_X509_TRUST_NO_SS_COMPAT = `enum X509_TRUST_NO_SS_COMPAT = ( 1U << 2 );`;
        static if(is(typeof({ mixin(enumMixinStr_X509_TRUST_NO_SS_COMPAT); }))) {
            mixin(enumMixinStr_X509_TRUST_NO_SS_COMPAT);
        }
    }




    static if(!is(typeof(X509_TRUST_DO_SS_COMPAT))) {
        private enum enumMixinStr_X509_TRUST_DO_SS_COMPAT = `enum X509_TRUST_DO_SS_COMPAT = ( 1U << 3 );`;
        static if(is(typeof({ mixin(enumMixinStr_X509_TRUST_DO_SS_COMPAT); }))) {
            mixin(enumMixinStr_X509_TRUST_DO_SS_COMPAT);
        }
    }




    static if(!is(typeof(X509_TRUST_OK_ANY_EKU))) {
        private enum enumMixinStr_X509_TRUST_OK_ANY_EKU = `enum X509_TRUST_OK_ANY_EKU = ( 1U << 4 );`;
        static if(is(typeof({ mixin(enumMixinStr_X509_TRUST_OK_ANY_EKU); }))) {
            mixin(enumMixinStr_X509_TRUST_OK_ANY_EKU);
        }
    }




    static if(!is(typeof(X509_TRUST_TRUSTED))) {
        private enum enumMixinStr_X509_TRUST_TRUSTED = `enum X509_TRUST_TRUSTED = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_TRUST_TRUSTED); }))) {
            mixin(enumMixinStr_X509_TRUST_TRUSTED);
        }
    }




    static if(!is(typeof(X509_TRUST_REJECTED))) {
        private enum enumMixinStr_X509_TRUST_REJECTED = `enum X509_TRUST_REJECTED = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_TRUST_REJECTED); }))) {
            mixin(enumMixinStr_X509_TRUST_REJECTED);
        }
    }




    static if(!is(typeof(X509_TRUST_UNTRUSTED))) {
        private enum enumMixinStr_X509_TRUST_UNTRUSTED = `enum X509_TRUST_UNTRUSTED = 3;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_TRUST_UNTRUSTED); }))) {
            mixin(enumMixinStr_X509_TRUST_UNTRUSTED);
        }
    }




    static if(!is(typeof(X509_FLAG_COMPAT))) {
        private enum enumMixinStr_X509_FLAG_COMPAT = `enum X509_FLAG_COMPAT = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_FLAG_COMPAT); }))) {
            mixin(enumMixinStr_X509_FLAG_COMPAT);
        }
    }




    static if(!is(typeof(X509_FLAG_NO_HEADER))) {
        private enum enumMixinStr_X509_FLAG_NO_HEADER = `enum X509_FLAG_NO_HEADER = 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_FLAG_NO_HEADER); }))) {
            mixin(enumMixinStr_X509_FLAG_NO_HEADER);
        }
    }




    static if(!is(typeof(X509_FLAG_NO_VERSION))) {
        private enum enumMixinStr_X509_FLAG_NO_VERSION = `enum X509_FLAG_NO_VERSION = ( 1L << 1 );`;
        static if(is(typeof({ mixin(enumMixinStr_X509_FLAG_NO_VERSION); }))) {
            mixin(enumMixinStr_X509_FLAG_NO_VERSION);
        }
    }




    static if(!is(typeof(X509_FLAG_NO_SERIAL))) {
        private enum enumMixinStr_X509_FLAG_NO_SERIAL = `enum X509_FLAG_NO_SERIAL = ( 1L << 2 );`;
        static if(is(typeof({ mixin(enumMixinStr_X509_FLAG_NO_SERIAL); }))) {
            mixin(enumMixinStr_X509_FLAG_NO_SERIAL);
        }
    }




    static if(!is(typeof(X509_FLAG_NO_SIGNAME))) {
        private enum enumMixinStr_X509_FLAG_NO_SIGNAME = `enum X509_FLAG_NO_SIGNAME = ( 1L << 3 );`;
        static if(is(typeof({ mixin(enumMixinStr_X509_FLAG_NO_SIGNAME); }))) {
            mixin(enumMixinStr_X509_FLAG_NO_SIGNAME);
        }
    }




    static if(!is(typeof(X509_FLAG_NO_ISSUER))) {
        private enum enumMixinStr_X509_FLAG_NO_ISSUER = `enum X509_FLAG_NO_ISSUER = ( 1L << 4 );`;
        static if(is(typeof({ mixin(enumMixinStr_X509_FLAG_NO_ISSUER); }))) {
            mixin(enumMixinStr_X509_FLAG_NO_ISSUER);
        }
    }




    static if(!is(typeof(X509_FLAG_NO_VALIDITY))) {
        private enum enumMixinStr_X509_FLAG_NO_VALIDITY = `enum X509_FLAG_NO_VALIDITY = ( 1L << 5 );`;
        static if(is(typeof({ mixin(enumMixinStr_X509_FLAG_NO_VALIDITY); }))) {
            mixin(enumMixinStr_X509_FLAG_NO_VALIDITY);
        }
    }




    static if(!is(typeof(X509_FLAG_NO_SUBJECT))) {
        private enum enumMixinStr_X509_FLAG_NO_SUBJECT = `enum X509_FLAG_NO_SUBJECT = ( 1L << 6 );`;
        static if(is(typeof({ mixin(enumMixinStr_X509_FLAG_NO_SUBJECT); }))) {
            mixin(enumMixinStr_X509_FLAG_NO_SUBJECT);
        }
    }




    static if(!is(typeof(X509_FLAG_NO_PUBKEY))) {
        private enum enumMixinStr_X509_FLAG_NO_PUBKEY = `enum X509_FLAG_NO_PUBKEY = ( 1L << 7 );`;
        static if(is(typeof({ mixin(enumMixinStr_X509_FLAG_NO_PUBKEY); }))) {
            mixin(enumMixinStr_X509_FLAG_NO_PUBKEY);
        }
    }




    static if(!is(typeof(X509_FLAG_NO_EXTENSIONS))) {
        private enum enumMixinStr_X509_FLAG_NO_EXTENSIONS = `enum X509_FLAG_NO_EXTENSIONS = ( 1L << 8 );`;
        static if(is(typeof({ mixin(enumMixinStr_X509_FLAG_NO_EXTENSIONS); }))) {
            mixin(enumMixinStr_X509_FLAG_NO_EXTENSIONS);
        }
    }




    static if(!is(typeof(X509_FLAG_NO_SIGDUMP))) {
        private enum enumMixinStr_X509_FLAG_NO_SIGDUMP = `enum X509_FLAG_NO_SIGDUMP = ( 1L << 9 );`;
        static if(is(typeof({ mixin(enumMixinStr_X509_FLAG_NO_SIGDUMP); }))) {
            mixin(enumMixinStr_X509_FLAG_NO_SIGDUMP);
        }
    }




    static if(!is(typeof(X509_FLAG_NO_AUX))) {
        private enum enumMixinStr_X509_FLAG_NO_AUX = `enum X509_FLAG_NO_AUX = ( 1L << 10 );`;
        static if(is(typeof({ mixin(enumMixinStr_X509_FLAG_NO_AUX); }))) {
            mixin(enumMixinStr_X509_FLAG_NO_AUX);
        }
    }




    static if(!is(typeof(X509_FLAG_NO_ATTRIBUTES))) {
        private enum enumMixinStr_X509_FLAG_NO_ATTRIBUTES = `enum X509_FLAG_NO_ATTRIBUTES = ( 1L << 11 );`;
        static if(is(typeof({ mixin(enumMixinStr_X509_FLAG_NO_ATTRIBUTES); }))) {
            mixin(enumMixinStr_X509_FLAG_NO_ATTRIBUTES);
        }
    }




    static if(!is(typeof(X509_FLAG_NO_IDS))) {
        private enum enumMixinStr_X509_FLAG_NO_IDS = `enum X509_FLAG_NO_IDS = ( 1L << 12 );`;
        static if(is(typeof({ mixin(enumMixinStr_X509_FLAG_NO_IDS); }))) {
            mixin(enumMixinStr_X509_FLAG_NO_IDS);
        }
    }




    static if(!is(typeof(XN_FLAG_SEP_MASK))) {
        private enum enumMixinStr_XN_FLAG_SEP_MASK = `enum XN_FLAG_SEP_MASK = ( 0xf << 16 );`;
        static if(is(typeof({ mixin(enumMixinStr_XN_FLAG_SEP_MASK); }))) {
            mixin(enumMixinStr_XN_FLAG_SEP_MASK);
        }
    }




    static if(!is(typeof(XN_FLAG_COMPAT))) {
        private enum enumMixinStr_XN_FLAG_COMPAT = `enum XN_FLAG_COMPAT = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_XN_FLAG_COMPAT); }))) {
            mixin(enumMixinStr_XN_FLAG_COMPAT);
        }
    }




    static if(!is(typeof(XN_FLAG_SEP_COMMA_PLUS))) {
        private enum enumMixinStr_XN_FLAG_SEP_COMMA_PLUS = `enum XN_FLAG_SEP_COMMA_PLUS = ( 1 << 16 );`;
        static if(is(typeof({ mixin(enumMixinStr_XN_FLAG_SEP_COMMA_PLUS); }))) {
            mixin(enumMixinStr_XN_FLAG_SEP_COMMA_PLUS);
        }
    }




    static if(!is(typeof(XN_FLAG_SEP_CPLUS_SPC))) {
        private enum enumMixinStr_XN_FLAG_SEP_CPLUS_SPC = `enum XN_FLAG_SEP_CPLUS_SPC = ( 2 << 16 );`;
        static if(is(typeof({ mixin(enumMixinStr_XN_FLAG_SEP_CPLUS_SPC); }))) {
            mixin(enumMixinStr_XN_FLAG_SEP_CPLUS_SPC);
        }
    }




    static if(!is(typeof(XN_FLAG_SEP_SPLUS_SPC))) {
        private enum enumMixinStr_XN_FLAG_SEP_SPLUS_SPC = `enum XN_FLAG_SEP_SPLUS_SPC = ( 3 << 16 );`;
        static if(is(typeof({ mixin(enumMixinStr_XN_FLAG_SEP_SPLUS_SPC); }))) {
            mixin(enumMixinStr_XN_FLAG_SEP_SPLUS_SPC);
        }
    }




    static if(!is(typeof(XN_FLAG_SEP_MULTILINE))) {
        private enum enumMixinStr_XN_FLAG_SEP_MULTILINE = `enum XN_FLAG_SEP_MULTILINE = ( 4 << 16 );`;
        static if(is(typeof({ mixin(enumMixinStr_XN_FLAG_SEP_MULTILINE); }))) {
            mixin(enumMixinStr_XN_FLAG_SEP_MULTILINE);
        }
    }




    static if(!is(typeof(XN_FLAG_DN_REV))) {
        private enum enumMixinStr_XN_FLAG_DN_REV = `enum XN_FLAG_DN_REV = ( 1 << 20 );`;
        static if(is(typeof({ mixin(enumMixinStr_XN_FLAG_DN_REV); }))) {
            mixin(enumMixinStr_XN_FLAG_DN_REV);
        }
    }




    static if(!is(typeof(XN_FLAG_FN_MASK))) {
        private enum enumMixinStr_XN_FLAG_FN_MASK = `enum XN_FLAG_FN_MASK = ( 0x3 << 21 );`;
        static if(is(typeof({ mixin(enumMixinStr_XN_FLAG_FN_MASK); }))) {
            mixin(enumMixinStr_XN_FLAG_FN_MASK);
        }
    }




    static if(!is(typeof(XN_FLAG_FN_SN))) {
        private enum enumMixinStr_XN_FLAG_FN_SN = `enum XN_FLAG_FN_SN = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_XN_FLAG_FN_SN); }))) {
            mixin(enumMixinStr_XN_FLAG_FN_SN);
        }
    }




    static if(!is(typeof(XN_FLAG_FN_LN))) {
        private enum enumMixinStr_XN_FLAG_FN_LN = `enum XN_FLAG_FN_LN = ( 1 << 21 );`;
        static if(is(typeof({ mixin(enumMixinStr_XN_FLAG_FN_LN); }))) {
            mixin(enumMixinStr_XN_FLAG_FN_LN);
        }
    }




    static if(!is(typeof(XN_FLAG_FN_OID))) {
        private enum enumMixinStr_XN_FLAG_FN_OID = `enum XN_FLAG_FN_OID = ( 2 << 21 );`;
        static if(is(typeof({ mixin(enumMixinStr_XN_FLAG_FN_OID); }))) {
            mixin(enumMixinStr_XN_FLAG_FN_OID);
        }
    }




    static if(!is(typeof(XN_FLAG_FN_NONE))) {
        private enum enumMixinStr_XN_FLAG_FN_NONE = `enum XN_FLAG_FN_NONE = ( 3 << 21 );`;
        static if(is(typeof({ mixin(enumMixinStr_XN_FLAG_FN_NONE); }))) {
            mixin(enumMixinStr_XN_FLAG_FN_NONE);
        }
    }




    static if(!is(typeof(XN_FLAG_SPC_EQ))) {
        private enum enumMixinStr_XN_FLAG_SPC_EQ = `enum XN_FLAG_SPC_EQ = ( 1 << 23 );`;
        static if(is(typeof({ mixin(enumMixinStr_XN_FLAG_SPC_EQ); }))) {
            mixin(enumMixinStr_XN_FLAG_SPC_EQ);
        }
    }




    static if(!is(typeof(XN_FLAG_DUMP_UNKNOWN_FIELDS))) {
        private enum enumMixinStr_XN_FLAG_DUMP_UNKNOWN_FIELDS = `enum XN_FLAG_DUMP_UNKNOWN_FIELDS = ( 1 << 24 );`;
        static if(is(typeof({ mixin(enumMixinStr_XN_FLAG_DUMP_UNKNOWN_FIELDS); }))) {
            mixin(enumMixinStr_XN_FLAG_DUMP_UNKNOWN_FIELDS);
        }
    }




    static if(!is(typeof(XN_FLAG_FN_ALIGN))) {
        private enum enumMixinStr_XN_FLAG_FN_ALIGN = `enum XN_FLAG_FN_ALIGN = ( 1 << 25 );`;
        static if(is(typeof({ mixin(enumMixinStr_XN_FLAG_FN_ALIGN); }))) {
            mixin(enumMixinStr_XN_FLAG_FN_ALIGN);
        }
    }




    static if(!is(typeof(XN_FLAG_RFC2253))) {
        private enum enumMixinStr_XN_FLAG_RFC2253 = `enum XN_FLAG_RFC2253 = ( ASN1_STRFLGS_RFC2253 | ( 1 << 16 ) | ( 1 << 20 ) | 0 | ( 1 << 24 ) );`;
        static if(is(typeof({ mixin(enumMixinStr_XN_FLAG_RFC2253); }))) {
            mixin(enumMixinStr_XN_FLAG_RFC2253);
        }
    }




    static if(!is(typeof(XN_FLAG_ONELINE))) {
        private enum enumMixinStr_XN_FLAG_ONELINE = `enum XN_FLAG_ONELINE = ( ASN1_STRFLGS_RFC2253 | ASN1_STRFLGS_ESC_QUOTE | ( 2 << 16 ) | ( 1 << 23 ) | 0 );`;
        static if(is(typeof({ mixin(enumMixinStr_XN_FLAG_ONELINE); }))) {
            mixin(enumMixinStr_XN_FLAG_ONELINE);
        }
    }




    static if(!is(typeof(XN_FLAG_MULTILINE))) {
        private enum enumMixinStr_XN_FLAG_MULTILINE = `enum XN_FLAG_MULTILINE = ( ASN1_STRFLGS_ESC_CTRL | ASN1_STRFLGS_ESC_MSB | ( 4 << 16 ) | ( 1 << 23 ) | ( 1 << 21 ) | ( 1 << 25 ) );`;
        static if(is(typeof({ mixin(enumMixinStr_XN_FLAG_MULTILINE); }))) {
            mixin(enumMixinStr_XN_FLAG_MULTILINE);
        }
    }




    static if(!is(typeof(NID_secp192k1))) {
        private enum enumMixinStr_NID_secp192k1 = `enum NID_secp192k1 = 711;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_secp192k1); }))) {
            mixin(enumMixinStr_NID_secp192k1);
        }
    }




    static if(!is(typeof(SN_secp192k1))) {
        private enum enumMixinStr_SN_secp192k1 = `enum SN_secp192k1 = "secp192k1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_secp192k1); }))) {
            mixin(enumMixinStr_SN_secp192k1);
        }
    }




    static if(!is(typeof(OBJ_secp160r2))) {
        private enum enumMixinStr_OBJ_secp160r2 = `enum OBJ_secp160r2 = OBJ_secg_ellipticCurve , 30L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_secp160r2); }))) {
            mixin(enumMixinStr_OBJ_secp160r2);
        }
    }




    static if(!is(typeof(NID_secp160r2))) {
        private enum enumMixinStr_NID_secp160r2 = `enum NID_secp160r2 = 710;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_secp160r2); }))) {
            mixin(enumMixinStr_NID_secp160r2);
        }
    }




    static if(!is(typeof(SN_secp160r2))) {
        private enum enumMixinStr_SN_secp160r2 = `enum SN_secp160r2 = "secp160r2";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_secp160r2); }))) {
            mixin(enumMixinStr_SN_secp160r2);
        }
    }




    static if(!is(typeof(OBJ_secp160r1))) {
        private enum enumMixinStr_OBJ_secp160r1 = `enum OBJ_secp160r1 = OBJ_secg_ellipticCurve , 8L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_secp160r1); }))) {
            mixin(enumMixinStr_OBJ_secp160r1);
        }
    }




    static if(!is(typeof(NID_secp160r1))) {
        private enum enumMixinStr_NID_secp160r1 = `enum NID_secp160r1 = 709;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_secp160r1); }))) {
            mixin(enumMixinStr_NID_secp160r1);
        }
    }




    static if(!is(typeof(SN_secp160r1))) {
        private enum enumMixinStr_SN_secp160r1 = `enum SN_secp160r1 = "secp160r1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_secp160r1); }))) {
            mixin(enumMixinStr_SN_secp160r1);
        }
    }




    static if(!is(typeof(OBJ_secp160k1))) {
        private enum enumMixinStr_OBJ_secp160k1 = `enum OBJ_secp160k1 = OBJ_secg_ellipticCurve , 9L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_secp160k1); }))) {
            mixin(enumMixinStr_OBJ_secp160k1);
        }
    }




    static if(!is(typeof(NID_secp160k1))) {
        private enum enumMixinStr_NID_secp160k1 = `enum NID_secp160k1 = 708;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_secp160k1); }))) {
            mixin(enumMixinStr_NID_secp160k1);
        }
    }




    static if(!is(typeof(SN_secp160k1))) {
        private enum enumMixinStr_SN_secp160k1 = `enum SN_secp160k1 = "secp160k1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_secp160k1); }))) {
            mixin(enumMixinStr_SN_secp160k1);
        }
    }




    static if(!is(typeof(OBJ_secp128r2))) {
        private enum enumMixinStr_OBJ_secp128r2 = `enum OBJ_secp128r2 = OBJ_secg_ellipticCurve , 29L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_secp128r2); }))) {
            mixin(enumMixinStr_OBJ_secp128r2);
        }
    }




    static if(!is(typeof(NID_secp128r2))) {
        private enum enumMixinStr_NID_secp128r2 = `enum NID_secp128r2 = 707;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_secp128r2); }))) {
            mixin(enumMixinStr_NID_secp128r2);
        }
    }




    static if(!is(typeof(SN_secp128r2))) {
        private enum enumMixinStr_SN_secp128r2 = `enum SN_secp128r2 = "secp128r2";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_secp128r2); }))) {
            mixin(enumMixinStr_SN_secp128r2);
        }
    }




    static if(!is(typeof(OBJ_secp128r1))) {
        private enum enumMixinStr_OBJ_secp128r1 = `enum OBJ_secp128r1 = OBJ_secg_ellipticCurve , 28L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_secp128r1); }))) {
            mixin(enumMixinStr_OBJ_secp128r1);
        }
    }




    static if(!is(typeof(NID_secp128r1))) {
        private enum enumMixinStr_NID_secp128r1 = `enum NID_secp128r1 = 706;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_secp128r1); }))) {
            mixin(enumMixinStr_NID_secp128r1);
        }
    }




    static if(!is(typeof(SN_secp128r1))) {
        private enum enumMixinStr_SN_secp128r1 = `enum SN_secp128r1 = "secp128r1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_secp128r1); }))) {
            mixin(enumMixinStr_SN_secp128r1);
        }
    }




    static if(!is(typeof(OBJ_secp112r2))) {
        private enum enumMixinStr_OBJ_secp112r2 = `enum OBJ_secp112r2 = OBJ_secg_ellipticCurve , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_secp112r2); }))) {
            mixin(enumMixinStr_OBJ_secp112r2);
        }
    }




    static if(!is(typeof(NID_secp112r2))) {
        private enum enumMixinStr_NID_secp112r2 = `enum NID_secp112r2 = 705;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_secp112r2); }))) {
            mixin(enumMixinStr_NID_secp112r2);
        }
    }




    static if(!is(typeof(SN_secp112r2))) {
        private enum enumMixinStr_SN_secp112r2 = `enum SN_secp112r2 = "secp112r2";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_secp112r2); }))) {
            mixin(enumMixinStr_SN_secp112r2);
        }
    }




    static if(!is(typeof(OBJ_secp112r1))) {
        private enum enumMixinStr_OBJ_secp112r1 = `enum OBJ_secp112r1 = OBJ_secg_ellipticCurve , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_secp112r1); }))) {
            mixin(enumMixinStr_OBJ_secp112r1);
        }
    }




    static if(!is(typeof(NID_secp112r1))) {
        private enum enumMixinStr_NID_secp112r1 = `enum NID_secp112r1 = 704;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_secp112r1); }))) {
            mixin(enumMixinStr_NID_secp112r1);
        }
    }




    static if(!is(typeof(SN_secp112r1))) {
        private enum enumMixinStr_SN_secp112r1 = `enum SN_secp112r1 = "secp112r1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_secp112r1); }))) {
            mixin(enumMixinStr_SN_secp112r1);
        }
    }




    static if(!is(typeof(OBJ_secg_ellipticCurve))) {
        private enum enumMixinStr_OBJ_secg_ellipticCurve = `enum OBJ_secg_ellipticCurve = OBJ_certicom_arc , 0L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_secg_ellipticCurve); }))) {
            mixin(enumMixinStr_OBJ_secg_ellipticCurve);
        }
    }




    static if(!is(typeof(OBJ_ecdsa_with_SHA512))) {
        private enum enumMixinStr_OBJ_ecdsa_with_SHA512 = `enum OBJ_ecdsa_with_SHA512 = OBJ_ecdsa_with_Specified , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ecdsa_with_SHA512); }))) {
            mixin(enumMixinStr_OBJ_ecdsa_with_SHA512);
        }
    }




    static if(!is(typeof(NID_ecdsa_with_SHA512))) {
        private enum enumMixinStr_NID_ecdsa_with_SHA512 = `enum NID_ecdsa_with_SHA512 = 796;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ecdsa_with_SHA512); }))) {
            mixin(enumMixinStr_NID_ecdsa_with_SHA512);
        }
    }




    static if(!is(typeof(SN_ecdsa_with_SHA512))) {
        private enum enumMixinStr_SN_ecdsa_with_SHA512 = `enum SN_ecdsa_with_SHA512 = "ecdsa-with-SHA512";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ecdsa_with_SHA512); }))) {
            mixin(enumMixinStr_SN_ecdsa_with_SHA512);
        }
    }




    static if(!is(typeof(OBJ_ecdsa_with_SHA384))) {
        private enum enumMixinStr_OBJ_ecdsa_with_SHA384 = `enum OBJ_ecdsa_with_SHA384 = OBJ_ecdsa_with_Specified , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ecdsa_with_SHA384); }))) {
            mixin(enumMixinStr_OBJ_ecdsa_with_SHA384);
        }
    }




    static if(!is(typeof(NID_ecdsa_with_SHA384))) {
        private enum enumMixinStr_NID_ecdsa_with_SHA384 = `enum NID_ecdsa_with_SHA384 = 795;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ecdsa_with_SHA384); }))) {
            mixin(enumMixinStr_NID_ecdsa_with_SHA384);
        }
    }




    static if(!is(typeof(SN_ecdsa_with_SHA384))) {
        private enum enumMixinStr_SN_ecdsa_with_SHA384 = `enum SN_ecdsa_with_SHA384 = "ecdsa-with-SHA384";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ecdsa_with_SHA384); }))) {
            mixin(enumMixinStr_SN_ecdsa_with_SHA384);
        }
    }




    static if(!is(typeof(OBJ_ecdsa_with_SHA256))) {
        private enum enumMixinStr_OBJ_ecdsa_with_SHA256 = `enum OBJ_ecdsa_with_SHA256 = OBJ_ecdsa_with_Specified , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ecdsa_with_SHA256); }))) {
            mixin(enumMixinStr_OBJ_ecdsa_with_SHA256);
        }
    }




    static if(!is(typeof(NID_ecdsa_with_SHA256))) {
        private enum enumMixinStr_NID_ecdsa_with_SHA256 = `enum NID_ecdsa_with_SHA256 = 794;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ecdsa_with_SHA256); }))) {
            mixin(enumMixinStr_NID_ecdsa_with_SHA256);
        }
    }




    static if(!is(typeof(SN_ecdsa_with_SHA256))) {
        private enum enumMixinStr_SN_ecdsa_with_SHA256 = `enum SN_ecdsa_with_SHA256 = "ecdsa-with-SHA256";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ecdsa_with_SHA256); }))) {
            mixin(enumMixinStr_SN_ecdsa_with_SHA256);
        }
    }




    static if(!is(typeof(OBJ_ecdsa_with_SHA224))) {
        private enum enumMixinStr_OBJ_ecdsa_with_SHA224 = `enum OBJ_ecdsa_with_SHA224 = OBJ_ecdsa_with_Specified , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ecdsa_with_SHA224); }))) {
            mixin(enumMixinStr_OBJ_ecdsa_with_SHA224);
        }
    }




    static if(!is(typeof(NID_ecdsa_with_SHA224))) {
        private enum enumMixinStr_NID_ecdsa_with_SHA224 = `enum NID_ecdsa_with_SHA224 = 793;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ecdsa_with_SHA224); }))) {
            mixin(enumMixinStr_NID_ecdsa_with_SHA224);
        }
    }




    static if(!is(typeof(SN_ecdsa_with_SHA224))) {
        private enum enumMixinStr_SN_ecdsa_with_SHA224 = `enum SN_ecdsa_with_SHA224 = "ecdsa-with-SHA224";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ecdsa_with_SHA224); }))) {
            mixin(enumMixinStr_SN_ecdsa_with_SHA224);
        }
    }




    static if(!is(typeof(OBJ_ecdsa_with_Specified))) {
        private enum enumMixinStr_OBJ_ecdsa_with_Specified = `enum OBJ_ecdsa_with_Specified = OBJ_X9_62_id_ecSigType , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ecdsa_with_Specified); }))) {
            mixin(enumMixinStr_OBJ_ecdsa_with_Specified);
        }
    }




    static if(!is(typeof(NID_ecdsa_with_Specified))) {
        private enum enumMixinStr_NID_ecdsa_with_Specified = `enum NID_ecdsa_with_Specified = 792;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ecdsa_with_Specified); }))) {
            mixin(enumMixinStr_NID_ecdsa_with_Specified);
        }
    }




    static if(!is(typeof(SN_ecdsa_with_Specified))) {
        private enum enumMixinStr_SN_ecdsa_with_Specified = `enum SN_ecdsa_with_Specified = "ecdsa-with-Specified";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ecdsa_with_Specified); }))) {
            mixin(enumMixinStr_SN_ecdsa_with_Specified);
        }
    }




    static if(!is(typeof(OBJ_ecdsa_with_Recommended))) {
        private enum enumMixinStr_OBJ_ecdsa_with_Recommended = `enum OBJ_ecdsa_with_Recommended = OBJ_X9_62_id_ecSigType , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ecdsa_with_Recommended); }))) {
            mixin(enumMixinStr_OBJ_ecdsa_with_Recommended);
        }
    }




    static if(!is(typeof(NID_ecdsa_with_Recommended))) {
        private enum enumMixinStr_NID_ecdsa_with_Recommended = `enum NID_ecdsa_with_Recommended = 791;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ecdsa_with_Recommended); }))) {
            mixin(enumMixinStr_NID_ecdsa_with_Recommended);
        }
    }




    static if(!is(typeof(SN_ecdsa_with_Recommended))) {
        private enum enumMixinStr_SN_ecdsa_with_Recommended = `enum SN_ecdsa_with_Recommended = "ecdsa-with-Recommended";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ecdsa_with_Recommended); }))) {
            mixin(enumMixinStr_SN_ecdsa_with_Recommended);
        }
    }




    static if(!is(typeof(OBJ_ecdsa_with_SHA1))) {
        private enum enumMixinStr_OBJ_ecdsa_with_SHA1 = `enum OBJ_ecdsa_with_SHA1 = OBJ_X9_62_id_ecSigType , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ecdsa_with_SHA1); }))) {
            mixin(enumMixinStr_OBJ_ecdsa_with_SHA1);
        }
    }




    static if(!is(typeof(NID_ecdsa_with_SHA1))) {
        private enum enumMixinStr_NID_ecdsa_with_SHA1 = `enum NID_ecdsa_with_SHA1 = 416;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ecdsa_with_SHA1); }))) {
            mixin(enumMixinStr_NID_ecdsa_with_SHA1);
        }
    }




    static if(!is(typeof(SN_ecdsa_with_SHA1))) {
        private enum enumMixinStr_SN_ecdsa_with_SHA1 = `enum SN_ecdsa_with_SHA1 = "ecdsa-with-SHA1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ecdsa_with_SHA1); }))) {
            mixin(enumMixinStr_SN_ecdsa_with_SHA1);
        }
    }




    static if(!is(typeof(OBJ_X9_62_id_ecSigType))) {
        private enum enumMixinStr_OBJ_X9_62_id_ecSigType = `enum OBJ_X9_62_id_ecSigType = OBJ_ansi_X9_62 , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_id_ecSigType); }))) {
            mixin(enumMixinStr_OBJ_X9_62_id_ecSigType);
        }
    }




    static if(!is(typeof(OBJ_X9_62_prime256v1))) {
        private enum enumMixinStr_OBJ_X9_62_prime256v1 = `enum OBJ_X9_62_prime256v1 = OBJ_X9_62_primeCurve , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_prime256v1); }))) {
            mixin(enumMixinStr_OBJ_X9_62_prime256v1);
        }
    }




    static if(!is(typeof(NID_X9_62_prime256v1))) {
        private enum enumMixinStr_NID_X9_62_prime256v1 = `enum NID_X9_62_prime256v1 = 415;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9_62_prime256v1); }))) {
            mixin(enumMixinStr_NID_X9_62_prime256v1);
        }
    }




    static if(!is(typeof(SN_X9_62_prime256v1))) {
        private enum enumMixinStr_SN_X9_62_prime256v1 = `enum SN_X9_62_prime256v1 = "prime256v1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9_62_prime256v1); }))) {
            mixin(enumMixinStr_SN_X9_62_prime256v1);
        }
    }




    static if(!is(typeof(OBJ_X9_62_prime239v3))) {
        private enum enumMixinStr_OBJ_X9_62_prime239v3 = `enum OBJ_X9_62_prime239v3 = OBJ_X9_62_primeCurve , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_prime239v3); }))) {
            mixin(enumMixinStr_OBJ_X9_62_prime239v3);
        }
    }




    static if(!is(typeof(NID_X9_62_prime239v3))) {
        private enum enumMixinStr_NID_X9_62_prime239v3 = `enum NID_X9_62_prime239v3 = 414;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9_62_prime239v3); }))) {
            mixin(enumMixinStr_NID_X9_62_prime239v3);
        }
    }




    static if(!is(typeof(SN_X9_62_prime239v3))) {
        private enum enumMixinStr_SN_X9_62_prime239v3 = `enum SN_X9_62_prime239v3 = "prime239v3";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9_62_prime239v3); }))) {
            mixin(enumMixinStr_SN_X9_62_prime239v3);
        }
    }




    static if(!is(typeof(OBJ_X9_62_prime239v2))) {
        private enum enumMixinStr_OBJ_X9_62_prime239v2 = `enum OBJ_X9_62_prime239v2 = OBJ_X9_62_primeCurve , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_prime239v2); }))) {
            mixin(enumMixinStr_OBJ_X9_62_prime239v2);
        }
    }




    static if(!is(typeof(NID_X9_62_prime239v2))) {
        private enum enumMixinStr_NID_X9_62_prime239v2 = `enum NID_X9_62_prime239v2 = 413;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9_62_prime239v2); }))) {
            mixin(enumMixinStr_NID_X9_62_prime239v2);
        }
    }




    static if(!is(typeof(SN_X9_62_prime239v2))) {
        private enum enumMixinStr_SN_X9_62_prime239v2 = `enum SN_X9_62_prime239v2 = "prime239v2";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9_62_prime239v2); }))) {
            mixin(enumMixinStr_SN_X9_62_prime239v2);
        }
    }




    static if(!is(typeof(OBJ_X9_62_prime239v1))) {
        private enum enumMixinStr_OBJ_X9_62_prime239v1 = `enum OBJ_X9_62_prime239v1 = OBJ_X9_62_primeCurve , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_prime239v1); }))) {
            mixin(enumMixinStr_OBJ_X9_62_prime239v1);
        }
    }




    static if(!is(typeof(NID_X9_62_prime239v1))) {
        private enum enumMixinStr_NID_X9_62_prime239v1 = `enum NID_X9_62_prime239v1 = 412;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9_62_prime239v1); }))) {
            mixin(enumMixinStr_NID_X9_62_prime239v1);
        }
    }




    static if(!is(typeof(SN_X9_62_prime239v1))) {
        private enum enumMixinStr_SN_X9_62_prime239v1 = `enum SN_X9_62_prime239v1 = "prime239v1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9_62_prime239v1); }))) {
            mixin(enumMixinStr_SN_X9_62_prime239v1);
        }
    }




    static if(!is(typeof(OBJ_X9_62_prime192v3))) {
        private enum enumMixinStr_OBJ_X9_62_prime192v3 = `enum OBJ_X9_62_prime192v3 = OBJ_X9_62_primeCurve , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_prime192v3); }))) {
            mixin(enumMixinStr_OBJ_X9_62_prime192v3);
        }
    }




    static if(!is(typeof(NID_X9_62_prime192v3))) {
        private enum enumMixinStr_NID_X9_62_prime192v3 = `enum NID_X9_62_prime192v3 = 411;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9_62_prime192v3); }))) {
            mixin(enumMixinStr_NID_X9_62_prime192v3);
        }
    }




    static if(!is(typeof(SN_X9_62_prime192v3))) {
        private enum enumMixinStr_SN_X9_62_prime192v3 = `enum SN_X9_62_prime192v3 = "prime192v3";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9_62_prime192v3); }))) {
            mixin(enumMixinStr_SN_X9_62_prime192v3);
        }
    }




    static if(!is(typeof(OBJ_X9_62_prime192v2))) {
        private enum enumMixinStr_OBJ_X9_62_prime192v2 = `enum OBJ_X9_62_prime192v2 = OBJ_X9_62_primeCurve , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_prime192v2); }))) {
            mixin(enumMixinStr_OBJ_X9_62_prime192v2);
        }
    }




    static if(!is(typeof(NID_X9_62_prime192v2))) {
        private enum enumMixinStr_NID_X9_62_prime192v2 = `enum NID_X9_62_prime192v2 = 410;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9_62_prime192v2); }))) {
            mixin(enumMixinStr_NID_X9_62_prime192v2);
        }
    }




    static if(!is(typeof(SN_X9_62_prime192v2))) {
        private enum enumMixinStr_SN_X9_62_prime192v2 = `enum SN_X9_62_prime192v2 = "prime192v2";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9_62_prime192v2); }))) {
            mixin(enumMixinStr_SN_X9_62_prime192v2);
        }
    }




    static if(!is(typeof(OBJ_X9_62_prime192v1))) {
        private enum enumMixinStr_OBJ_X9_62_prime192v1 = `enum OBJ_X9_62_prime192v1 = OBJ_X9_62_primeCurve , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_prime192v1); }))) {
            mixin(enumMixinStr_OBJ_X9_62_prime192v1);
        }
    }




    static if(!is(typeof(NID_X9_62_prime192v1))) {
        private enum enumMixinStr_NID_X9_62_prime192v1 = `enum NID_X9_62_prime192v1 = 409;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9_62_prime192v1); }))) {
            mixin(enumMixinStr_NID_X9_62_prime192v1);
        }
    }




    static if(!is(typeof(SN_X9_62_prime192v1))) {
        private enum enumMixinStr_SN_X9_62_prime192v1 = `enum SN_X9_62_prime192v1 = "prime192v1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9_62_prime192v1); }))) {
            mixin(enumMixinStr_SN_X9_62_prime192v1);
        }
    }




    static if(!is(typeof(OBJ_X9_62_primeCurve))) {
        private enum enumMixinStr_OBJ_X9_62_primeCurve = `enum OBJ_X9_62_primeCurve = OBJ_X9_62_ellipticCurve , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_primeCurve); }))) {
            mixin(enumMixinStr_OBJ_X9_62_primeCurve);
        }
    }




    static if(!is(typeof(OBJ_X9_62_c2tnb431r1))) {
        private enum enumMixinStr_OBJ_X9_62_c2tnb431r1 = `enum OBJ_X9_62_c2tnb431r1 = OBJ_X9_62_c_TwoCurve , 20L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_c2tnb431r1); }))) {
            mixin(enumMixinStr_OBJ_X9_62_c2tnb431r1);
        }
    }




    static if(!is(typeof(NID_X9_62_c2tnb431r1))) {
        private enum enumMixinStr_NID_X9_62_c2tnb431r1 = `enum NID_X9_62_c2tnb431r1 = 703;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9_62_c2tnb431r1); }))) {
            mixin(enumMixinStr_NID_X9_62_c2tnb431r1);
        }
    }




    static if(!is(typeof(SN_X9_62_c2tnb431r1))) {
        private enum enumMixinStr_SN_X9_62_c2tnb431r1 = `enum SN_X9_62_c2tnb431r1 = "c2tnb431r1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9_62_c2tnb431r1); }))) {
            mixin(enumMixinStr_SN_X9_62_c2tnb431r1);
        }
    }




    static if(!is(typeof(OBJ_X9_62_c2pnb368w1))) {
        private enum enumMixinStr_OBJ_X9_62_c2pnb368w1 = `enum OBJ_X9_62_c2pnb368w1 = OBJ_X9_62_c_TwoCurve , 19L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_c2pnb368w1); }))) {
            mixin(enumMixinStr_OBJ_X9_62_c2pnb368w1);
        }
    }




    static if(!is(typeof(NID_X9_62_c2pnb368w1))) {
        private enum enumMixinStr_NID_X9_62_c2pnb368w1 = `enum NID_X9_62_c2pnb368w1 = 702;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9_62_c2pnb368w1); }))) {
            mixin(enumMixinStr_NID_X9_62_c2pnb368w1);
        }
    }




    static if(!is(typeof(SN_X9_62_c2pnb368w1))) {
        private enum enumMixinStr_SN_X9_62_c2pnb368w1 = `enum SN_X9_62_c2pnb368w1 = "c2pnb368w1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9_62_c2pnb368w1); }))) {
            mixin(enumMixinStr_SN_X9_62_c2pnb368w1);
        }
    }




    static if(!is(typeof(OBJ_X9_62_c2tnb359v1))) {
        private enum enumMixinStr_OBJ_X9_62_c2tnb359v1 = `enum OBJ_X9_62_c2tnb359v1 = OBJ_X9_62_c_TwoCurve , 18L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_c2tnb359v1); }))) {
            mixin(enumMixinStr_OBJ_X9_62_c2tnb359v1);
        }
    }




    static if(!is(typeof(NID_X9_62_c2tnb359v1))) {
        private enum enumMixinStr_NID_X9_62_c2tnb359v1 = `enum NID_X9_62_c2tnb359v1 = 701;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9_62_c2tnb359v1); }))) {
            mixin(enumMixinStr_NID_X9_62_c2tnb359v1);
        }
    }




    static if(!is(typeof(SN_X9_62_c2tnb359v1))) {
        private enum enumMixinStr_SN_X9_62_c2tnb359v1 = `enum SN_X9_62_c2tnb359v1 = "c2tnb359v1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9_62_c2tnb359v1); }))) {
            mixin(enumMixinStr_SN_X9_62_c2tnb359v1);
        }
    }




    static if(!is(typeof(OBJ_X9_62_c2pnb304w1))) {
        private enum enumMixinStr_OBJ_X9_62_c2pnb304w1 = `enum OBJ_X9_62_c2pnb304w1 = OBJ_X9_62_c_TwoCurve , 17L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_c2pnb304w1); }))) {
            mixin(enumMixinStr_OBJ_X9_62_c2pnb304w1);
        }
    }




    static if(!is(typeof(NID_X9_62_c2pnb304w1))) {
        private enum enumMixinStr_NID_X9_62_c2pnb304w1 = `enum NID_X9_62_c2pnb304w1 = 700;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9_62_c2pnb304w1); }))) {
            mixin(enumMixinStr_NID_X9_62_c2pnb304w1);
        }
    }




    static if(!is(typeof(SN_X9_62_c2pnb304w1))) {
        private enum enumMixinStr_SN_X9_62_c2pnb304w1 = `enum SN_X9_62_c2pnb304w1 = "c2pnb304w1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9_62_c2pnb304w1); }))) {
            mixin(enumMixinStr_SN_X9_62_c2pnb304w1);
        }
    }




    static if(!is(typeof(OBJ_X9_62_c2pnb272w1))) {
        private enum enumMixinStr_OBJ_X9_62_c2pnb272w1 = `enum OBJ_X9_62_c2pnb272w1 = OBJ_X9_62_c_TwoCurve , 16L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_c2pnb272w1); }))) {
            mixin(enumMixinStr_OBJ_X9_62_c2pnb272w1);
        }
    }




    static if(!is(typeof(NID_X9_62_c2pnb272w1))) {
        private enum enumMixinStr_NID_X9_62_c2pnb272w1 = `enum NID_X9_62_c2pnb272w1 = 699;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9_62_c2pnb272w1); }))) {
            mixin(enumMixinStr_NID_X9_62_c2pnb272w1);
        }
    }




    static if(!is(typeof(SN_X9_62_c2pnb272w1))) {
        private enum enumMixinStr_SN_X9_62_c2pnb272w1 = `enum SN_X9_62_c2pnb272w1 = "c2pnb272w1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9_62_c2pnb272w1); }))) {
            mixin(enumMixinStr_SN_X9_62_c2pnb272w1);
        }
    }




    static if(!is(typeof(OBJ_X9_62_c2onb239v5))) {
        private enum enumMixinStr_OBJ_X9_62_c2onb239v5 = `enum OBJ_X9_62_c2onb239v5 = OBJ_X9_62_c_TwoCurve , 15L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_c2onb239v5); }))) {
            mixin(enumMixinStr_OBJ_X9_62_c2onb239v5);
        }
    }




    static if(!is(typeof(NID_X9_62_c2onb239v5))) {
        private enum enumMixinStr_NID_X9_62_c2onb239v5 = `enum NID_X9_62_c2onb239v5 = 698;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9_62_c2onb239v5); }))) {
            mixin(enumMixinStr_NID_X9_62_c2onb239v5);
        }
    }




    static if(!is(typeof(SN_X9_62_c2onb239v5))) {
        private enum enumMixinStr_SN_X9_62_c2onb239v5 = `enum SN_X9_62_c2onb239v5 = "c2onb239v5";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9_62_c2onb239v5); }))) {
            mixin(enumMixinStr_SN_X9_62_c2onb239v5);
        }
    }




    static if(!is(typeof(OBJ_X9_62_c2onb239v4))) {
        private enum enumMixinStr_OBJ_X9_62_c2onb239v4 = `enum OBJ_X9_62_c2onb239v4 = OBJ_X9_62_c_TwoCurve , 14L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_c2onb239v4); }))) {
            mixin(enumMixinStr_OBJ_X9_62_c2onb239v4);
        }
    }




    static if(!is(typeof(NID_X9_62_c2onb239v4))) {
        private enum enumMixinStr_NID_X9_62_c2onb239v4 = `enum NID_X9_62_c2onb239v4 = 697;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9_62_c2onb239v4); }))) {
            mixin(enumMixinStr_NID_X9_62_c2onb239v4);
        }
    }




    static if(!is(typeof(SN_X9_62_c2onb239v4))) {
        private enum enumMixinStr_SN_X9_62_c2onb239v4 = `enum SN_X9_62_c2onb239v4 = "c2onb239v4";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9_62_c2onb239v4); }))) {
            mixin(enumMixinStr_SN_X9_62_c2onb239v4);
        }
    }




    static if(!is(typeof(OBJ_X9_62_c2tnb239v3))) {
        private enum enumMixinStr_OBJ_X9_62_c2tnb239v3 = `enum OBJ_X9_62_c2tnb239v3 = OBJ_X9_62_c_TwoCurve , 13L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_c2tnb239v3); }))) {
            mixin(enumMixinStr_OBJ_X9_62_c2tnb239v3);
        }
    }




    static if(!is(typeof(NID_X9_62_c2tnb239v3))) {
        private enum enumMixinStr_NID_X9_62_c2tnb239v3 = `enum NID_X9_62_c2tnb239v3 = 696;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9_62_c2tnb239v3); }))) {
            mixin(enumMixinStr_NID_X9_62_c2tnb239v3);
        }
    }




    static if(!is(typeof(SN_X9_62_c2tnb239v3))) {
        private enum enumMixinStr_SN_X9_62_c2tnb239v3 = `enum SN_X9_62_c2tnb239v3 = "c2tnb239v3";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9_62_c2tnb239v3); }))) {
            mixin(enumMixinStr_SN_X9_62_c2tnb239v3);
        }
    }




    static if(!is(typeof(OBJ_X9_62_c2tnb239v2))) {
        private enum enumMixinStr_OBJ_X9_62_c2tnb239v2 = `enum OBJ_X9_62_c2tnb239v2 = OBJ_X9_62_c_TwoCurve , 12L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_c2tnb239v2); }))) {
            mixin(enumMixinStr_OBJ_X9_62_c2tnb239v2);
        }
    }




    static if(!is(typeof(NID_X9_62_c2tnb239v2))) {
        private enum enumMixinStr_NID_X9_62_c2tnb239v2 = `enum NID_X9_62_c2tnb239v2 = 695;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9_62_c2tnb239v2); }))) {
            mixin(enumMixinStr_NID_X9_62_c2tnb239v2);
        }
    }




    static if(!is(typeof(SN_X9_62_c2tnb239v2))) {
        private enum enumMixinStr_SN_X9_62_c2tnb239v2 = `enum SN_X9_62_c2tnb239v2 = "c2tnb239v2";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9_62_c2tnb239v2); }))) {
            mixin(enumMixinStr_SN_X9_62_c2tnb239v2);
        }
    }




    static if(!is(typeof(OBJ_X9_62_c2tnb239v1))) {
        private enum enumMixinStr_OBJ_X9_62_c2tnb239v1 = `enum OBJ_X9_62_c2tnb239v1 = OBJ_X9_62_c_TwoCurve , 11L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_c2tnb239v1); }))) {
            mixin(enumMixinStr_OBJ_X9_62_c2tnb239v1);
        }
    }




    static if(!is(typeof(NID_X9_62_c2tnb239v1))) {
        private enum enumMixinStr_NID_X9_62_c2tnb239v1 = `enum NID_X9_62_c2tnb239v1 = 694;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9_62_c2tnb239v1); }))) {
            mixin(enumMixinStr_NID_X9_62_c2tnb239v1);
        }
    }




    static if(!is(typeof(SN_X9_62_c2tnb239v1))) {
        private enum enumMixinStr_SN_X9_62_c2tnb239v1 = `enum SN_X9_62_c2tnb239v1 = "c2tnb239v1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9_62_c2tnb239v1); }))) {
            mixin(enumMixinStr_SN_X9_62_c2tnb239v1);
        }
    }




    static if(!is(typeof(OBJ_X9_62_c2pnb208w1))) {
        private enum enumMixinStr_OBJ_X9_62_c2pnb208w1 = `enum OBJ_X9_62_c2pnb208w1 = OBJ_X9_62_c_TwoCurve , 10L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_c2pnb208w1); }))) {
            mixin(enumMixinStr_OBJ_X9_62_c2pnb208w1);
        }
    }




    static if(!is(typeof(NID_X9_62_c2pnb208w1))) {
        private enum enumMixinStr_NID_X9_62_c2pnb208w1 = `enum NID_X9_62_c2pnb208w1 = 693;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9_62_c2pnb208w1); }))) {
            mixin(enumMixinStr_NID_X9_62_c2pnb208w1);
        }
    }




    static if(!is(typeof(SN_X9_62_c2pnb208w1))) {
        private enum enumMixinStr_SN_X9_62_c2pnb208w1 = `enum SN_X9_62_c2pnb208w1 = "c2pnb208w1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9_62_c2pnb208w1); }))) {
            mixin(enumMixinStr_SN_X9_62_c2pnb208w1);
        }
    }




    static if(!is(typeof(OBJ_X9_62_c2onb191v5))) {
        private enum enumMixinStr_OBJ_X9_62_c2onb191v5 = `enum OBJ_X9_62_c2onb191v5 = OBJ_X9_62_c_TwoCurve , 9L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_c2onb191v5); }))) {
            mixin(enumMixinStr_OBJ_X9_62_c2onb191v5);
        }
    }




    static if(!is(typeof(NID_X9_62_c2onb191v5))) {
        private enum enumMixinStr_NID_X9_62_c2onb191v5 = `enum NID_X9_62_c2onb191v5 = 692;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9_62_c2onb191v5); }))) {
            mixin(enumMixinStr_NID_X9_62_c2onb191v5);
        }
    }




    static if(!is(typeof(SN_X9_62_c2onb191v5))) {
        private enum enumMixinStr_SN_X9_62_c2onb191v5 = `enum SN_X9_62_c2onb191v5 = "c2onb191v5";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9_62_c2onb191v5); }))) {
            mixin(enumMixinStr_SN_X9_62_c2onb191v5);
        }
    }




    static if(!is(typeof(OBJ_X9_62_c2onb191v4))) {
        private enum enumMixinStr_OBJ_X9_62_c2onb191v4 = `enum OBJ_X9_62_c2onb191v4 = OBJ_X9_62_c_TwoCurve , 8L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_c2onb191v4); }))) {
            mixin(enumMixinStr_OBJ_X9_62_c2onb191v4);
        }
    }




    static if(!is(typeof(NID_X9_62_c2onb191v4))) {
        private enum enumMixinStr_NID_X9_62_c2onb191v4 = `enum NID_X9_62_c2onb191v4 = 691;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9_62_c2onb191v4); }))) {
            mixin(enumMixinStr_NID_X9_62_c2onb191v4);
        }
    }




    static if(!is(typeof(SN_X9_62_c2onb191v4))) {
        private enum enumMixinStr_SN_X9_62_c2onb191v4 = `enum SN_X9_62_c2onb191v4 = "c2onb191v4";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9_62_c2onb191v4); }))) {
            mixin(enumMixinStr_SN_X9_62_c2onb191v4);
        }
    }




    static if(!is(typeof(OBJ_X9_62_c2tnb191v3))) {
        private enum enumMixinStr_OBJ_X9_62_c2tnb191v3 = `enum OBJ_X9_62_c2tnb191v3 = OBJ_X9_62_c_TwoCurve , 7L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_c2tnb191v3); }))) {
            mixin(enumMixinStr_OBJ_X9_62_c2tnb191v3);
        }
    }




    static if(!is(typeof(NID_X9_62_c2tnb191v3))) {
        private enum enumMixinStr_NID_X9_62_c2tnb191v3 = `enum NID_X9_62_c2tnb191v3 = 690;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9_62_c2tnb191v3); }))) {
            mixin(enumMixinStr_NID_X9_62_c2tnb191v3);
        }
    }




    static if(!is(typeof(SN_X9_62_c2tnb191v3))) {
        private enum enumMixinStr_SN_X9_62_c2tnb191v3 = `enum SN_X9_62_c2tnb191v3 = "c2tnb191v3";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9_62_c2tnb191v3); }))) {
            mixin(enumMixinStr_SN_X9_62_c2tnb191v3);
        }
    }




    static if(!is(typeof(X509_EXT_PACK_UNKNOWN))) {
        private enum enumMixinStr_X509_EXT_PACK_UNKNOWN = `enum X509_EXT_PACK_UNKNOWN = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_EXT_PACK_UNKNOWN); }))) {
            mixin(enumMixinStr_X509_EXT_PACK_UNKNOWN);
        }
    }




    static if(!is(typeof(X509_EXT_PACK_STRING))) {
        private enum enumMixinStr_X509_EXT_PACK_STRING = `enum X509_EXT_PACK_STRING = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_EXT_PACK_STRING); }))) {
            mixin(enumMixinStr_X509_EXT_PACK_STRING);
        }
    }
    static if(!is(typeof(OBJ_X9_62_c2tnb191v2))) {
        private enum enumMixinStr_OBJ_X9_62_c2tnb191v2 = `enum OBJ_X9_62_c2tnb191v2 = OBJ_X9_62_c_TwoCurve , 6L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_c2tnb191v2); }))) {
            mixin(enumMixinStr_OBJ_X9_62_c2tnb191v2);
        }
    }




    static if(!is(typeof(NID_X9_62_c2tnb191v2))) {
        private enum enumMixinStr_NID_X9_62_c2tnb191v2 = `enum NID_X9_62_c2tnb191v2 = 689;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9_62_c2tnb191v2); }))) {
            mixin(enumMixinStr_NID_X9_62_c2tnb191v2);
        }
    }




    static if(!is(typeof(SN_X9_62_c2tnb191v2))) {
        private enum enumMixinStr_SN_X9_62_c2tnb191v2 = `enum SN_X9_62_c2tnb191v2 = "c2tnb191v2";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9_62_c2tnb191v2); }))) {
            mixin(enumMixinStr_SN_X9_62_c2tnb191v2);
        }
    }




    static if(!is(typeof(OBJ_X9_62_c2tnb191v1))) {
        private enum enumMixinStr_OBJ_X9_62_c2tnb191v1 = `enum OBJ_X9_62_c2tnb191v1 = OBJ_X9_62_c_TwoCurve , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_c2tnb191v1); }))) {
            mixin(enumMixinStr_OBJ_X9_62_c2tnb191v1);
        }
    }




    static if(!is(typeof(NID_X9_62_c2tnb191v1))) {
        private enum enumMixinStr_NID_X9_62_c2tnb191v1 = `enum NID_X9_62_c2tnb191v1 = 688;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9_62_c2tnb191v1); }))) {
            mixin(enumMixinStr_NID_X9_62_c2tnb191v1);
        }
    }




    static if(!is(typeof(SN_X9_62_c2tnb191v1))) {
        private enum enumMixinStr_SN_X9_62_c2tnb191v1 = `enum SN_X9_62_c2tnb191v1 = "c2tnb191v1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9_62_c2tnb191v1); }))) {
            mixin(enumMixinStr_SN_X9_62_c2tnb191v1);
        }
    }




    static if(!is(typeof(OBJ_X9_62_c2pnb176v1))) {
        private enum enumMixinStr_OBJ_X9_62_c2pnb176v1 = `enum OBJ_X9_62_c2pnb176v1 = OBJ_X9_62_c_TwoCurve , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_c2pnb176v1); }))) {
            mixin(enumMixinStr_OBJ_X9_62_c2pnb176v1);
        }
    }




    static if(!is(typeof(NID_X9_62_c2pnb176v1))) {
        private enum enumMixinStr_NID_X9_62_c2pnb176v1 = `enum NID_X9_62_c2pnb176v1 = 687;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9_62_c2pnb176v1); }))) {
            mixin(enumMixinStr_NID_X9_62_c2pnb176v1);
        }
    }




    static if(!is(typeof(SN_X9_62_c2pnb176v1))) {
        private enum enumMixinStr_SN_X9_62_c2pnb176v1 = `enum SN_X9_62_c2pnb176v1 = "c2pnb176v1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9_62_c2pnb176v1); }))) {
            mixin(enumMixinStr_SN_X9_62_c2pnb176v1);
        }
    }




    static if(!is(typeof(OBJ_X9_62_c2pnb163v3))) {
        private enum enumMixinStr_OBJ_X9_62_c2pnb163v3 = `enum OBJ_X9_62_c2pnb163v3 = OBJ_X9_62_c_TwoCurve , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_c2pnb163v3); }))) {
            mixin(enumMixinStr_OBJ_X9_62_c2pnb163v3);
        }
    }




    static if(!is(typeof(NID_X9_62_c2pnb163v3))) {
        private enum enumMixinStr_NID_X9_62_c2pnb163v3 = `enum NID_X9_62_c2pnb163v3 = 686;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9_62_c2pnb163v3); }))) {
            mixin(enumMixinStr_NID_X9_62_c2pnb163v3);
        }
    }




    static if(!is(typeof(SN_X9_62_c2pnb163v3))) {
        private enum enumMixinStr_SN_X9_62_c2pnb163v3 = `enum SN_X9_62_c2pnb163v3 = "c2pnb163v3";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9_62_c2pnb163v3); }))) {
            mixin(enumMixinStr_SN_X9_62_c2pnb163v3);
        }
    }




    static if(!is(typeof(OBJ_X9_62_c2pnb163v2))) {
        private enum enumMixinStr_OBJ_X9_62_c2pnb163v2 = `enum OBJ_X9_62_c2pnb163v2 = OBJ_X9_62_c_TwoCurve , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_c2pnb163v2); }))) {
            mixin(enumMixinStr_OBJ_X9_62_c2pnb163v2);
        }
    }




    static if(!is(typeof(NID_X9_62_c2pnb163v2))) {
        private enum enumMixinStr_NID_X9_62_c2pnb163v2 = `enum NID_X9_62_c2pnb163v2 = 685;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9_62_c2pnb163v2); }))) {
            mixin(enumMixinStr_NID_X9_62_c2pnb163v2);
        }
    }




    static if(!is(typeof(SN_X9_62_c2pnb163v2))) {
        private enum enumMixinStr_SN_X9_62_c2pnb163v2 = `enum SN_X9_62_c2pnb163v2 = "c2pnb163v2";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9_62_c2pnb163v2); }))) {
            mixin(enumMixinStr_SN_X9_62_c2pnb163v2);
        }
    }




    static if(!is(typeof(OBJ_X9_62_c2pnb163v1))) {
        private enum enumMixinStr_OBJ_X9_62_c2pnb163v1 = `enum OBJ_X9_62_c2pnb163v1 = OBJ_X9_62_c_TwoCurve , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_c2pnb163v1); }))) {
            mixin(enumMixinStr_OBJ_X9_62_c2pnb163v1);
        }
    }




    static if(!is(typeof(NID_X9_62_c2pnb163v1))) {
        private enum enumMixinStr_NID_X9_62_c2pnb163v1 = `enum NID_X9_62_c2pnb163v1 = 684;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9_62_c2pnb163v1); }))) {
            mixin(enumMixinStr_NID_X9_62_c2pnb163v1);
        }
    }




    static if(!is(typeof(SN_X9_62_c2pnb163v1))) {
        private enum enumMixinStr_SN_X9_62_c2pnb163v1 = `enum SN_X9_62_c2pnb163v1 = "c2pnb163v1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9_62_c2pnb163v1); }))) {
            mixin(enumMixinStr_SN_X9_62_c2pnb163v1);
        }
    }




    static if(!is(typeof(OBJ_X9_62_c_TwoCurve))) {
        private enum enumMixinStr_OBJ_X9_62_c_TwoCurve = `enum OBJ_X9_62_c_TwoCurve = OBJ_X9_62_ellipticCurve , 0L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_c_TwoCurve); }))) {
            mixin(enumMixinStr_OBJ_X9_62_c_TwoCurve);
        }
    }




    static if(!is(typeof(OBJ_X9_62_ellipticCurve))) {
        private enum enumMixinStr_OBJ_X9_62_ellipticCurve = `enum OBJ_X9_62_ellipticCurve = OBJ_ansi_X9_62 , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_ellipticCurve); }))) {
            mixin(enumMixinStr_OBJ_X9_62_ellipticCurve);
        }
    }




    static if(!is(typeof(OBJ_X9_62_id_ecPublicKey))) {
        private enum enumMixinStr_OBJ_X9_62_id_ecPublicKey = `enum OBJ_X9_62_id_ecPublicKey = OBJ_X9_62_id_publicKeyType , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_id_ecPublicKey); }))) {
            mixin(enumMixinStr_OBJ_X9_62_id_ecPublicKey);
        }
    }




    static if(!is(typeof(NID_X9_62_id_ecPublicKey))) {
        private enum enumMixinStr_NID_X9_62_id_ecPublicKey = `enum NID_X9_62_id_ecPublicKey = 408;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9_62_id_ecPublicKey); }))) {
            mixin(enumMixinStr_NID_X9_62_id_ecPublicKey);
        }
    }




    static if(!is(typeof(SN_X9_62_id_ecPublicKey))) {
        private enum enumMixinStr_SN_X9_62_id_ecPublicKey = `enum SN_X9_62_id_ecPublicKey = "id-ecPublicKey";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9_62_id_ecPublicKey); }))) {
            mixin(enumMixinStr_SN_X9_62_id_ecPublicKey);
        }
    }




    static if(!is(typeof(OBJ_X9_62_id_publicKeyType))) {
        private enum enumMixinStr_OBJ_X9_62_id_publicKeyType = `enum OBJ_X9_62_id_publicKeyType = OBJ_ansi_X9_62 , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_id_publicKeyType); }))) {
            mixin(enumMixinStr_OBJ_X9_62_id_publicKeyType);
        }
    }




    static if(!is(typeof(OBJ_X9_62_ppBasis))) {
        private enum enumMixinStr_OBJ_X9_62_ppBasis = `enum OBJ_X9_62_ppBasis = OBJ_X9_62_id_characteristic_two_basis , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_ppBasis); }))) {
            mixin(enumMixinStr_OBJ_X9_62_ppBasis);
        }
    }




    static if(!is(typeof(NID_X9_62_ppBasis))) {
        private enum enumMixinStr_NID_X9_62_ppBasis = `enum NID_X9_62_ppBasis = 683;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9_62_ppBasis); }))) {
            mixin(enumMixinStr_NID_X9_62_ppBasis);
        }
    }




    static if(!is(typeof(SN_X9_62_ppBasis))) {
        private enum enumMixinStr_SN_X9_62_ppBasis = `enum SN_X9_62_ppBasis = "ppBasis";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9_62_ppBasis); }))) {
            mixin(enumMixinStr_SN_X9_62_ppBasis);
        }
    }




    static if(!is(typeof(OBJ_X9_62_tpBasis))) {
        private enum enumMixinStr_OBJ_X9_62_tpBasis = `enum OBJ_X9_62_tpBasis = OBJ_X9_62_id_characteristic_two_basis , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_tpBasis); }))) {
            mixin(enumMixinStr_OBJ_X9_62_tpBasis);
        }
    }




    static if(!is(typeof(NID_X9_62_tpBasis))) {
        private enum enumMixinStr_NID_X9_62_tpBasis = `enum NID_X9_62_tpBasis = 682;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9_62_tpBasis); }))) {
            mixin(enumMixinStr_NID_X9_62_tpBasis);
        }
    }




    static if(!is(typeof(SN_X9_62_tpBasis))) {
        private enum enumMixinStr_SN_X9_62_tpBasis = `enum SN_X9_62_tpBasis = "tpBasis";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9_62_tpBasis); }))) {
            mixin(enumMixinStr_SN_X9_62_tpBasis);
        }
    }




    static if(!is(typeof(OBJ_X9_62_onBasis))) {
        private enum enumMixinStr_OBJ_X9_62_onBasis = `enum OBJ_X9_62_onBasis = OBJ_X9_62_id_characteristic_two_basis , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_onBasis); }))) {
            mixin(enumMixinStr_OBJ_X9_62_onBasis);
        }
    }




    static if(!is(typeof(NID_X9_62_onBasis))) {
        private enum enumMixinStr_NID_X9_62_onBasis = `enum NID_X9_62_onBasis = 681;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9_62_onBasis); }))) {
            mixin(enumMixinStr_NID_X9_62_onBasis);
        }
    }




    static if(!is(typeof(SN_X9_62_onBasis))) {
        private enum enumMixinStr_SN_X9_62_onBasis = `enum SN_X9_62_onBasis = "onBasis";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9_62_onBasis); }))) {
            mixin(enumMixinStr_SN_X9_62_onBasis);
        }
    }




    static if(!is(typeof(OBJ_X9_62_id_characteristic_two_basis))) {
        private enum enumMixinStr_OBJ_X9_62_id_characteristic_two_basis = `enum OBJ_X9_62_id_characteristic_two_basis = OBJ_X9_62_characteristic_two_field , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_id_characteristic_two_basis); }))) {
            mixin(enumMixinStr_OBJ_X9_62_id_characteristic_two_basis);
        }
    }




    static if(!is(typeof(NID_X9_62_id_characteristic_two_basis))) {
        private enum enumMixinStr_NID_X9_62_id_characteristic_two_basis = `enum NID_X9_62_id_characteristic_two_basis = 680;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9_62_id_characteristic_two_basis); }))) {
            mixin(enumMixinStr_NID_X9_62_id_characteristic_two_basis);
        }
    }




    static if(!is(typeof(SN_X9_62_id_characteristic_two_basis))) {
        private enum enumMixinStr_SN_X9_62_id_characteristic_two_basis = `enum SN_X9_62_id_characteristic_two_basis = "id-characteristic-two-basis";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9_62_id_characteristic_two_basis); }))) {
            mixin(enumMixinStr_SN_X9_62_id_characteristic_two_basis);
        }
    }




    static if(!is(typeof(OBJ_X9_62_characteristic_two_field))) {
        private enum enumMixinStr_OBJ_X9_62_characteristic_two_field = `enum OBJ_X9_62_characteristic_two_field = OBJ_X9_62_id_fieldType , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_characteristic_two_field); }))) {
            mixin(enumMixinStr_OBJ_X9_62_characteristic_two_field);
        }
    }




    static if(!is(typeof(NID_X9_62_characteristic_two_field))) {
        private enum enumMixinStr_NID_X9_62_characteristic_two_field = `enum NID_X9_62_characteristic_two_field = 407;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9_62_characteristic_two_field); }))) {
            mixin(enumMixinStr_NID_X9_62_characteristic_two_field);
        }
    }




    static if(!is(typeof(SN_X9_62_characteristic_two_field))) {
        private enum enumMixinStr_SN_X9_62_characteristic_two_field = `enum SN_X9_62_characteristic_two_field = "characteristic-two-field";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9_62_characteristic_two_field); }))) {
            mixin(enumMixinStr_SN_X9_62_characteristic_two_field);
        }
    }




    static if(!is(typeof(OBJ_X9_62_prime_field))) {
        private enum enumMixinStr_OBJ_X9_62_prime_field = `enum OBJ_X9_62_prime_field = OBJ_X9_62_id_fieldType , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_prime_field); }))) {
            mixin(enumMixinStr_OBJ_X9_62_prime_field);
        }
    }




    static if(!is(typeof(NID_X9_62_prime_field))) {
        private enum enumMixinStr_NID_X9_62_prime_field = `enum NID_X9_62_prime_field = 406;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9_62_prime_field); }))) {
            mixin(enumMixinStr_NID_X9_62_prime_field);
        }
    }




    static if(!is(typeof(SN_X9_62_prime_field))) {
        private enum enumMixinStr_SN_X9_62_prime_field = `enum SN_X9_62_prime_field = "prime-field";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9_62_prime_field); }))) {
            mixin(enumMixinStr_SN_X9_62_prime_field);
        }
    }




    static if(!is(typeof(OBJ_X9_62_id_fieldType))) {
        private enum enumMixinStr_OBJ_X9_62_id_fieldType = `enum OBJ_X9_62_id_fieldType = OBJ_ansi_X9_62 , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_62_id_fieldType); }))) {
            mixin(enumMixinStr_OBJ_X9_62_id_fieldType);
        }
    }




    static if(!is(typeof(OBJ_ansi_X9_62))) {
        private enum enumMixinStr_OBJ_ansi_X9_62 = `enum OBJ_ansi_X9_62 = OBJ_ISO_US , 10045L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ansi_X9_62); }))) {
            mixin(enumMixinStr_OBJ_ansi_X9_62);
        }
    }




    static if(!is(typeof(NID_ansi_X9_62))) {
        private enum enumMixinStr_NID_ansi_X9_62 = `enum NID_ansi_X9_62 = 405;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ansi_X9_62); }))) {
            mixin(enumMixinStr_NID_ansi_X9_62);
        }
    }




    static if(!is(typeof(LN_ansi_X9_62))) {
        private enum enumMixinStr_LN_ansi_X9_62 = `enum LN_ansi_X9_62 = "ANSI X9.62";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ansi_X9_62); }))) {
            mixin(enumMixinStr_LN_ansi_X9_62);
        }
    }




    static if(!is(typeof(SN_ansi_X9_62))) {
        private enum enumMixinStr_SN_ansi_X9_62 = `enum SN_ansi_X9_62 = "ansi-X9-62";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ansi_X9_62); }))) {
            mixin(enumMixinStr_SN_ansi_X9_62);
        }
    }




    static if(!is(typeof(OBJ_dsaWithSHA1))) {
        private enum enumMixinStr_OBJ_dsaWithSHA1 = `enum OBJ_dsaWithSHA1 = OBJ_X9cm , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dsaWithSHA1); }))) {
            mixin(enumMixinStr_OBJ_dsaWithSHA1);
        }
    }




    static if(!is(typeof(NID_dsaWithSHA1))) {
        private enum enumMixinStr_NID_dsaWithSHA1 = `enum NID_dsaWithSHA1 = 113;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dsaWithSHA1); }))) {
            mixin(enumMixinStr_NID_dsaWithSHA1);
        }
    }




    static if(!is(typeof(LN_dsaWithSHA1))) {
        private enum enumMixinStr_LN_dsaWithSHA1 = `enum LN_dsaWithSHA1 = "dsaWithSHA1";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_dsaWithSHA1); }))) {
            mixin(enumMixinStr_LN_dsaWithSHA1);
        }
    }




    static if(!is(typeof(SN_dsaWithSHA1))) {
        private enum enumMixinStr_SN_dsaWithSHA1 = `enum SN_dsaWithSHA1 = "DSA-SHA1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dsaWithSHA1); }))) {
            mixin(enumMixinStr_SN_dsaWithSHA1);
        }
    }




    static if(!is(typeof(OBJ_dsa))) {
        private enum enumMixinStr_OBJ_dsa = `enum OBJ_dsa = OBJ_X9cm , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_dsa); }))) {
            mixin(enumMixinStr_OBJ_dsa);
        }
    }




    static if(!is(typeof(NID_dsa))) {
        private enum enumMixinStr_NID_dsa = `enum NID_dsa = 116;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_dsa); }))) {
            mixin(enumMixinStr_NID_dsa);
        }
    }




    static if(!is(typeof(LN_dsa))) {
        private enum enumMixinStr_LN_dsa = `enum LN_dsa = "dsaEncryption";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_dsa); }))) {
            mixin(enumMixinStr_LN_dsa);
        }
    }




    static if(!is(typeof(SN_dsa))) {
        private enum enumMixinStr_SN_dsa = `enum SN_dsa = "DSA";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_dsa); }))) {
            mixin(enumMixinStr_SN_dsa);
        }
    }




    static if(!is(typeof(OBJ_sm_scheme))) {
        private enum enumMixinStr_OBJ_sm_scheme = `enum OBJ_sm_scheme = OBJ_oscca , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_sm_scheme); }))) {
            mixin(enumMixinStr_OBJ_sm_scheme);
        }
    }




    static if(!is(typeof(NID_sm_scheme))) {
        private enum enumMixinStr_NID_sm_scheme = `enum NID_sm_scheme = 1142;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_sm_scheme); }))) {
            mixin(enumMixinStr_NID_sm_scheme);
        }
    }




    static if(!is(typeof(SN_sm_scheme))) {
        private enum enumMixinStr_SN_sm_scheme = `enum SN_sm_scheme = "sm-scheme";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_sm_scheme); }))) {
            mixin(enumMixinStr_SN_sm_scheme);
        }
    }




    static if(!is(typeof(OBJ_oscca))) {
        private enum enumMixinStr_OBJ_oscca = `enum OBJ_oscca = OBJ_ISO_CN , 10197L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_oscca); }))) {
            mixin(enumMixinStr_OBJ_oscca);
        }
    }




    static if(!is(typeof(NID_oscca))) {
        private enum enumMixinStr_NID_oscca = `enum NID_oscca = 1141;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_oscca); }))) {
            mixin(enumMixinStr_NID_oscca);
        }
    }




    static if(!is(typeof(SN_oscca))) {
        private enum enumMixinStr_SN_oscca = `enum SN_oscca = "oscca";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_oscca); }))) {
            mixin(enumMixinStr_SN_oscca);
        }
    }




    static if(!is(typeof(OBJ_ISO_CN))) {
        private enum enumMixinStr_OBJ_ISO_CN = `enum OBJ_ISO_CN = OBJ_member_body , 156L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ISO_CN); }))) {
            mixin(enumMixinStr_OBJ_ISO_CN);
        }
    }




    static if(!is(typeof(NID_ISO_CN))) {
        private enum enumMixinStr_NID_ISO_CN = `enum NID_ISO_CN = 1140;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ISO_CN); }))) {
            mixin(enumMixinStr_NID_ISO_CN);
        }
    }




    static if(!is(typeof(LN_ISO_CN))) {
        private enum enumMixinStr_LN_ISO_CN = `enum LN_ISO_CN = "ISO CN Member Body";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ISO_CN); }))) {
            mixin(enumMixinStr_LN_ISO_CN);
        }
    }




    static if(!is(typeof(SN_ISO_CN))) {
        private enum enumMixinStr_SN_ISO_CN = `enum SN_ISO_CN = "ISO-CN";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ISO_CN); }))) {
            mixin(enumMixinStr_SN_ISO_CN);
        }
    }




    static if(!is(typeof(OBJ_X9cm))) {
        private enum enumMixinStr_OBJ_X9cm = `enum OBJ_X9cm = OBJ_X9_57 , 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9cm); }))) {
            mixin(enumMixinStr_OBJ_X9cm);
        }
    }




    static if(!is(typeof(NID_X9cm))) {
        private enum enumMixinStr_NID_X9cm = `enum NID_X9cm = 185;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9cm); }))) {
            mixin(enumMixinStr_NID_X9cm);
        }
    }




    static if(!is(typeof(LN_X9cm))) {
        private enum enumMixinStr_LN_X9cm = `enum LN_X9cm = "X9.57 CM ?";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_X9cm); }))) {
            mixin(enumMixinStr_LN_X9cm);
        }
    }




    static if(!is(typeof(SN_X9cm))) {
        private enum enumMixinStr_SN_X9cm = `enum SN_X9cm = "X9cm";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9cm); }))) {
            mixin(enumMixinStr_SN_X9cm);
        }
    }




    static if(!is(typeof(OBJ_X9_57))) {
        private enum enumMixinStr_OBJ_X9_57 = `enum OBJ_X9_57 = OBJ_ISO_US , 10040L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_X9_57); }))) {
            mixin(enumMixinStr_OBJ_X9_57);
        }
    }




    static if(!is(typeof(NID_X9_57))) {
        private enum enumMixinStr_NID_X9_57 = `enum NID_X9_57 = 184;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_X9_57); }))) {
            mixin(enumMixinStr_NID_X9_57);
        }
    }




    static if(!is(typeof(LN_X9_57))) {
        private enum enumMixinStr_LN_X9_57 = `enum LN_X9_57 = "X9.57";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_X9_57); }))) {
            mixin(enumMixinStr_LN_X9_57);
        }
    }




    static if(!is(typeof(SN_X9_57))) {
        private enum enumMixinStr_SN_X9_57 = `enum SN_X9_57 = "X9-57";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_X9_57); }))) {
            mixin(enumMixinStr_SN_X9_57);
        }
    }




    static if(!is(typeof(OBJ_ISO_US))) {
        private enum enumMixinStr_OBJ_ISO_US = `enum OBJ_ISO_US = OBJ_member_body , 840L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ISO_US); }))) {
            mixin(enumMixinStr_OBJ_ISO_US);
        }
    }




    static if(!is(typeof(NID_ISO_US))) {
        private enum enumMixinStr_NID_ISO_US = `enum NID_ISO_US = 183;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ISO_US); }))) {
            mixin(enumMixinStr_NID_ISO_US);
        }
    }




    static if(!is(typeof(LN_ISO_US))) {
        private enum enumMixinStr_LN_ISO_US = `enum LN_ISO_US = "ISO US Member Body";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ISO_US); }))) {
            mixin(enumMixinStr_LN_ISO_US);
        }
    }




    static if(!is(typeof(SN_ISO_US))) {
        private enum enumMixinStr_SN_ISO_US = `enum SN_ISO_US = "ISO-US";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ISO_US); }))) {
            mixin(enumMixinStr_SN_ISO_US);
        }
    }




    static if(!is(typeof(OBJ_clearance))) {
        private enum enumMixinStr_OBJ_clearance = `enum OBJ_clearance = OBJ_selected_attribute_types , 55L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_clearance); }))) {
            mixin(enumMixinStr_OBJ_clearance);
        }
    }




    static if(!is(typeof(NID_clearance))) {
        private enum enumMixinStr_NID_clearance = `enum NID_clearance = 395;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_clearance); }))) {
            mixin(enumMixinStr_NID_clearance);
        }
    }




    static if(!is(typeof(SN_clearance))) {
        private enum enumMixinStr_SN_clearance = `enum SN_clearance = "clearance";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_clearance); }))) {
            mixin(enumMixinStr_SN_clearance);
        }
    }




    static if(!is(typeof(OBJ_selected_attribute_types))) {
        private enum enumMixinStr_OBJ_selected_attribute_types = `enum OBJ_selected_attribute_types = OBJ_joint_iso_itu_t , 5L , 1L , 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_selected_attribute_types); }))) {
            mixin(enumMixinStr_OBJ_selected_attribute_types);
        }
    }




    static if(!is(typeof(NID_selected_attribute_types))) {
        private enum enumMixinStr_NID_selected_attribute_types = `enum NID_selected_attribute_types = 394;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_selected_attribute_types); }))) {
            mixin(enumMixinStr_NID_selected_attribute_types);
        }
    }




    static if(!is(typeof(LN_selected_attribute_types))) {
        private enum enumMixinStr_LN_selected_attribute_types = `enum LN_selected_attribute_types = "Selected Attribute Types";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_selected_attribute_types); }))) {
            mixin(enumMixinStr_LN_selected_attribute_types);
        }
    }




    static if(!is(typeof(SN_selected_attribute_types))) {
        private enum enumMixinStr_SN_selected_attribute_types = `enum SN_selected_attribute_types = "selected-attribute-types";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_selected_attribute_types); }))) {
            mixin(enumMixinStr_SN_selected_attribute_types);
        }
    }




    static if(!is(typeof(OBJ_wap_wsg))) {
        private enum enumMixinStr_OBJ_wap_wsg = `enum OBJ_wap_wsg = OBJ_wap , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_wap_wsg); }))) {
            mixin(enumMixinStr_OBJ_wap_wsg);
        }
    }




    static if(!is(typeof(NID_wap_wsg))) {
        private enum enumMixinStr_NID_wap_wsg = `enum NID_wap_wsg = 679;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_wap_wsg); }))) {
            mixin(enumMixinStr_NID_wap_wsg);
        }
    }




    static if(!is(typeof(SN_wap_wsg))) {
        private enum enumMixinStr_SN_wap_wsg = `enum SN_wap_wsg = "wap-wsg";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_wap_wsg); }))) {
            mixin(enumMixinStr_SN_wap_wsg);
        }
    }




    static if(!is(typeof(OBJ_wap))) {
        private enum enumMixinStr_OBJ_wap = `enum OBJ_wap = OBJ_international_organizations , 43L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_wap); }))) {
            mixin(enumMixinStr_OBJ_wap);
        }
    }




    static if(!is(typeof(NID_wap))) {
        private enum enumMixinStr_NID_wap = `enum NID_wap = 678;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_wap); }))) {
            mixin(enumMixinStr_NID_wap);
        }
    }




    static if(!is(typeof(SN_wap))) {
        private enum enumMixinStr_SN_wap = `enum SN_wap = "wap";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_wap); }))) {
            mixin(enumMixinStr_SN_wap);
        }
    }




    static if(!is(typeof(OBJ_international_organizations))) {
        private enum enumMixinStr_OBJ_international_organizations = `enum OBJ_international_organizations = OBJ_joint_iso_itu_t , 23L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_international_organizations); }))) {
            mixin(enumMixinStr_OBJ_international_organizations);
        }
    }




    static if(!is(typeof(NID_international_organizations))) {
        private enum enumMixinStr_NID_international_organizations = `enum NID_international_organizations = 647;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_international_organizations); }))) {
            mixin(enumMixinStr_NID_international_organizations);
        }
    }




    static if(!is(typeof(LN_international_organizations))) {
        private enum enumMixinStr_LN_international_organizations = `enum LN_international_organizations = "International Organizations";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_international_organizations); }))) {
            mixin(enumMixinStr_LN_international_organizations);
        }
    }




    static if(!is(typeof(SN_international_organizations))) {
        private enum enumMixinStr_SN_international_organizations = `enum SN_international_organizations = "international-organizations";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_international_organizations); }))) {
            mixin(enumMixinStr_SN_international_organizations);
        }
    }




    static if(!is(typeof(OBJ_ieee_siswg))) {
        private enum enumMixinStr_OBJ_ieee_siswg = `enum OBJ_ieee_siswg = OBJ_ieee , 2L , 1619L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ieee_siswg); }))) {
            mixin(enumMixinStr_OBJ_ieee_siswg);
        }
    }




    static if(!is(typeof(NID_ieee_siswg))) {
        private enum enumMixinStr_NID_ieee_siswg = `enum NID_ieee_siswg = 1171;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ieee_siswg); }))) {
            mixin(enumMixinStr_NID_ieee_siswg);
        }
    }




    static if(!is(typeof(LN_ieee_siswg))) {
        private enum enumMixinStr_LN_ieee_siswg = `enum LN_ieee_siswg = "IEEE Security in Storage Working Group";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_ieee_siswg); }))) {
            mixin(enumMixinStr_LN_ieee_siswg);
        }
    }




    static if(!is(typeof(SN_ieee_siswg))) {
        private enum enumMixinStr_SN_ieee_siswg = `enum SN_ieee_siswg = "ieee-siswg";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ieee_siswg); }))) {
            mixin(enumMixinStr_SN_ieee_siswg);
        }
    }




    static if(!is(typeof(OBJ_ieee))) {
        private enum enumMixinStr_OBJ_ieee = `enum OBJ_ieee = OBJ_identified_organization , 111L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ieee); }))) {
            mixin(enumMixinStr_OBJ_ieee);
        }
    }




    static if(!is(typeof(NID_ieee))) {
        private enum enumMixinStr_NID_ieee = `enum NID_ieee = 1170;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ieee); }))) {
            mixin(enumMixinStr_NID_ieee);
        }
    }




    static if(!is(typeof(SN_ieee))) {
        private enum enumMixinStr_SN_ieee = `enum SN_ieee = "ieee";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_ieee); }))) {
            mixin(enumMixinStr_SN_ieee);
        }
    }




    static if(!is(typeof(OBJ_certicom_arc))) {
        private enum enumMixinStr_OBJ_certicom_arc = `enum OBJ_certicom_arc = OBJ_identified_organization , 132L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_certicom_arc); }))) {
            mixin(enumMixinStr_OBJ_certicom_arc);
        }
    }




    static if(!is(typeof(NID_certicom_arc))) {
        private enum enumMixinStr_NID_certicom_arc = `enum NID_certicom_arc = 677;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_certicom_arc); }))) {
            mixin(enumMixinStr_NID_certicom_arc);
        }
    }




    static if(!is(typeof(SN_certicom_arc))) {
        private enum enumMixinStr_SN_certicom_arc = `enum SN_certicom_arc = "certicom-arc";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_certicom_arc); }))) {
            mixin(enumMixinStr_SN_certicom_arc);
        }
    }




    static if(!is(typeof(OBJ_x509ExtAdmission))) {
        private enum enumMixinStr_OBJ_x509ExtAdmission = `enum OBJ_x509ExtAdmission = OBJ_identified_organization , 36L , 8L , 3L , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_x509ExtAdmission); }))) {
            mixin(enumMixinStr_OBJ_x509ExtAdmission);
        }
    }




    static if(!is(typeof(NID_x509ExtAdmission))) {
        private enum enumMixinStr_NID_x509ExtAdmission = `enum NID_x509ExtAdmission = 1093;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_x509ExtAdmission); }))) {
            mixin(enumMixinStr_NID_x509ExtAdmission);
        }
    }




    static if(!is(typeof(LN_x509ExtAdmission))) {
        private enum enumMixinStr_LN_x509ExtAdmission = `enum LN_x509ExtAdmission = "Professional Information or basis for Admission";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_x509ExtAdmission); }))) {
            mixin(enumMixinStr_LN_x509ExtAdmission);
        }
    }




    static if(!is(typeof(SN_x509ExtAdmission))) {
        private enum enumMixinStr_SN_x509ExtAdmission = `enum SN_x509ExtAdmission = "x509ExtAdmission";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_x509ExtAdmission); }))) {
            mixin(enumMixinStr_SN_x509ExtAdmission);
        }
    }




    static if(!is(typeof(OBJ_hmac_sha1))) {
        private enum enumMixinStr_OBJ_hmac_sha1 = `enum OBJ_hmac_sha1 = OBJ_identified_organization , 6L , 1L , 5L , 5L , 8L , 1L , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_hmac_sha1); }))) {
            mixin(enumMixinStr_OBJ_hmac_sha1);
        }
    }




    static if(!is(typeof(NID_hmac_sha1))) {
        private enum enumMixinStr_NID_hmac_sha1 = `enum NID_hmac_sha1 = 781;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_hmac_sha1); }))) {
            mixin(enumMixinStr_NID_hmac_sha1);
        }
    }




    static if(!is(typeof(LN_hmac_sha1))) {
        private enum enumMixinStr_LN_hmac_sha1 = `enum LN_hmac_sha1 = "hmac-sha1";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_hmac_sha1); }))) {
            mixin(enumMixinStr_LN_hmac_sha1);
        }
    }




    static if(!is(typeof(SN_hmac_sha1))) {
        private enum enumMixinStr_SN_hmac_sha1 = `enum SN_hmac_sha1 = "HMAC-SHA1";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_hmac_sha1); }))) {
            mixin(enumMixinStr_SN_hmac_sha1);
        }
    }




    static if(!is(typeof(OBJ_hmac_md5))) {
        private enum enumMixinStr_OBJ_hmac_md5 = `enum OBJ_hmac_md5 = OBJ_identified_organization , 6L , 1L , 5L , 5L , 8L , 1L , 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_hmac_md5); }))) {
            mixin(enumMixinStr_OBJ_hmac_md5);
        }
    }




    static if(!is(typeof(NID_hmac_md5))) {
        private enum enumMixinStr_NID_hmac_md5 = `enum NID_hmac_md5 = 780;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_hmac_md5); }))) {
            mixin(enumMixinStr_NID_hmac_md5);
        }
    }




    static if(!is(typeof(LN_hmac_md5))) {
        private enum enumMixinStr_LN_hmac_md5 = `enum LN_hmac_md5 = "hmac-md5";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_hmac_md5); }))) {
            mixin(enumMixinStr_LN_hmac_md5);
        }
    }




    static if(!is(typeof(SN_hmac_md5))) {
        private enum enumMixinStr_SN_hmac_md5 = `enum SN_hmac_md5 = "HMAC-MD5";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_hmac_md5); }))) {
            mixin(enumMixinStr_SN_hmac_md5);
        }
    }




    static if(!is(typeof(OBJ_identified_organization))) {
        private enum enumMixinStr_OBJ_identified_organization = `enum OBJ_identified_organization = OBJ_iso , 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_identified_organization); }))) {
            mixin(enumMixinStr_OBJ_identified_organization);
        }
    }




    static if(!is(typeof(NID_identified_organization))) {
        private enum enumMixinStr_NID_identified_organization = `enum NID_identified_organization = 676;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_identified_organization); }))) {
            mixin(enumMixinStr_NID_identified_organization);
        }
    }




    static if(!is(typeof(SN_identified_organization))) {
        private enum enumMixinStr_SN_identified_organization = `enum SN_identified_organization = "identified-organization";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_identified_organization); }))) {
            mixin(enumMixinStr_SN_identified_organization);
        }
    }




    static if(!is(typeof(OBJ_member_body))) {
        private enum enumMixinStr_OBJ_member_body = `enum OBJ_member_body = OBJ_iso , 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_member_body); }))) {
            mixin(enumMixinStr_OBJ_member_body);
        }
    }




    static if(!is(typeof(NID_member_body))) {
        private enum enumMixinStr_NID_member_body = `enum NID_member_body = 182;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_member_body); }))) {
            mixin(enumMixinStr_NID_member_body);
        }
    }




    static if(!is(typeof(LN_member_body))) {
        private enum enumMixinStr_LN_member_body = `enum LN_member_body = "ISO Member Body";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_member_body); }))) {
            mixin(enumMixinStr_LN_member_body);
        }
    }




    static if(!is(typeof(SN_member_body))) {
        private enum enumMixinStr_SN_member_body = `enum SN_member_body = "member-body";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_member_body); }))) {
            mixin(enumMixinStr_SN_member_body);
        }
    }




    static if(!is(typeof(OBJ_joint_iso_ccitt))) {
        private enum enumMixinStr_OBJ_joint_iso_ccitt = `enum OBJ_joint_iso_ccitt = OBJ_joint_iso_itu_t;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_joint_iso_ccitt); }))) {
            mixin(enumMixinStr_OBJ_joint_iso_ccitt);
        }
    }




    static if(!is(typeof(NID_joint_iso_ccitt))) {
        private enum enumMixinStr_NID_joint_iso_ccitt = `enum NID_joint_iso_ccitt = 393;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_joint_iso_ccitt); }))) {
            mixin(enumMixinStr_NID_joint_iso_ccitt);
        }
    }




    static if(!is(typeof(OBJ_joint_iso_itu_t))) {
        private enum enumMixinStr_OBJ_joint_iso_itu_t = `enum OBJ_joint_iso_itu_t = 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_joint_iso_itu_t); }))) {
            mixin(enumMixinStr_OBJ_joint_iso_itu_t);
        }
    }




    static if(!is(typeof(NID_joint_iso_itu_t))) {
        private enum enumMixinStr_NID_joint_iso_itu_t = `enum NID_joint_iso_itu_t = 646;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_joint_iso_itu_t); }))) {
            mixin(enumMixinStr_NID_joint_iso_itu_t);
        }
    }




    static if(!is(typeof(LN_joint_iso_itu_t))) {
        private enum enumMixinStr_LN_joint_iso_itu_t = `enum LN_joint_iso_itu_t = "joint-iso-itu-t";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_joint_iso_itu_t); }))) {
            mixin(enumMixinStr_LN_joint_iso_itu_t);
        }
    }




    static if(!is(typeof(SN_joint_iso_itu_t))) {
        private enum enumMixinStr_SN_joint_iso_itu_t = `enum SN_joint_iso_itu_t = "JOINT-ISO-ITU-T";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_joint_iso_itu_t); }))) {
            mixin(enumMixinStr_SN_joint_iso_itu_t);
        }
    }




    static if(!is(typeof(OBJ_iso))) {
        private enum enumMixinStr_OBJ_iso = `enum OBJ_iso = 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_iso); }))) {
            mixin(enumMixinStr_OBJ_iso);
        }
    }




    static if(!is(typeof(NID_iso))) {
        private enum enumMixinStr_NID_iso = `enum NID_iso = 181;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_iso); }))) {
            mixin(enumMixinStr_NID_iso);
        }
    }




    static if(!is(typeof(LN_iso))) {
        private enum enumMixinStr_LN_iso = `enum LN_iso = "iso";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_iso); }))) {
            mixin(enumMixinStr_LN_iso);
        }
    }




    static if(!is(typeof(SN_iso))) {
        private enum enumMixinStr_SN_iso = `enum SN_iso = "ISO";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_iso); }))) {
            mixin(enumMixinStr_SN_iso);
        }
    }




    static if(!is(typeof(OBJ_ccitt))) {
        private enum enumMixinStr_OBJ_ccitt = `enum OBJ_ccitt = OBJ_itu_t;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_ccitt); }))) {
            mixin(enumMixinStr_OBJ_ccitt);
        }
    }




    static if(!is(typeof(NID_ccitt))) {
        private enum enumMixinStr_NID_ccitt = `enum NID_ccitt = 404;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_ccitt); }))) {
            mixin(enumMixinStr_NID_ccitt);
        }
    }




    static if(!is(typeof(OBJ_itu_t))) {
        private enum enumMixinStr_OBJ_itu_t = `enum OBJ_itu_t = 0L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_itu_t); }))) {
            mixin(enumMixinStr_OBJ_itu_t);
        }
    }




    static if(!is(typeof(NID_itu_t))) {
        private enum enumMixinStr_NID_itu_t = `enum NID_itu_t = 645;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_itu_t); }))) {
            mixin(enumMixinStr_NID_itu_t);
        }
    }




    static if(!is(typeof(LN_itu_t))) {
        private enum enumMixinStr_LN_itu_t = `enum LN_itu_t = "itu-t";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_itu_t); }))) {
            mixin(enumMixinStr_LN_itu_t);
        }
    }




    static if(!is(typeof(SN_itu_t))) {
        private enum enumMixinStr_SN_itu_t = `enum SN_itu_t = "ITU-T";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_itu_t); }))) {
            mixin(enumMixinStr_SN_itu_t);
        }
    }




    static if(!is(typeof(OBJ_undef))) {
        private enum enumMixinStr_OBJ_undef = `enum OBJ_undef = 0L;`;
        static if(is(typeof({ mixin(enumMixinStr_OBJ_undef); }))) {
            mixin(enumMixinStr_OBJ_undef);
        }
    }




    static if(!is(typeof(NID_undef))) {
        private enum enumMixinStr_NID_undef = `enum NID_undef = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_NID_undef); }))) {
            mixin(enumMixinStr_NID_undef);
        }
    }




    static if(!is(typeof(LN_undef))) {
        private enum enumMixinStr_LN_undef = `enum LN_undef = "undefined";`;
        static if(is(typeof({ mixin(enumMixinStr_LN_undef); }))) {
            mixin(enumMixinStr_LN_undef);
        }
    }




    static if(!is(typeof(SN_undef))) {
        private enum enumMixinStr_SN_undef = `enum SN_undef = "UNDEF";`;
        static if(is(typeof({ mixin(enumMixinStr_SN_undef); }))) {
            mixin(enumMixinStr_SN_undef);
        }
    }
    static if(!is(typeof(lh_node_usage_stats_bio))) {
        private enum enumMixinStr_lh_node_usage_stats_bio = `enum lh_node_usage_stats_bio = OPENSSL_LH_node_usage_stats_bio;`;
        static if(is(typeof({ mixin(enumMixinStr_lh_node_usage_stats_bio); }))) {
            mixin(enumMixinStr_lh_node_usage_stats_bio);
        }
    }




    static if(!is(typeof(lh_node_stats_bio))) {
        private enum enumMixinStr_lh_node_stats_bio = `enum lh_node_stats_bio = OPENSSL_LH_node_stats_bio;`;
        static if(is(typeof({ mixin(enumMixinStr_lh_node_stats_bio); }))) {
            mixin(enumMixinStr_lh_node_stats_bio);
        }
    }




    static if(!is(typeof(lh_stats_bio))) {
        private enum enumMixinStr_lh_stats_bio = `enum lh_stats_bio = OPENSSL_LH_stats_bio;`;
        static if(is(typeof({ mixin(enumMixinStr_lh_stats_bio); }))) {
            mixin(enumMixinStr_lh_stats_bio);
        }
    }




    static if(!is(typeof(lh_node_usage_stats))) {
        private enum enumMixinStr_lh_node_usage_stats = `enum lh_node_usage_stats = OPENSSL_LH_node_usage_stats;`;
        static if(is(typeof({ mixin(enumMixinStr_lh_node_usage_stats); }))) {
            mixin(enumMixinStr_lh_node_usage_stats);
        }
    }




    static if(!is(typeof(lh_node_stats))) {
        private enum enumMixinStr_lh_node_stats = `enum lh_node_stats = OPENSSL_LH_node_stats;`;
        static if(is(typeof({ mixin(enumMixinStr_lh_node_stats); }))) {
            mixin(enumMixinStr_lh_node_stats);
        }
    }




    static if(!is(typeof(lh_stats))) {
        private enum enumMixinStr_lh_stats = `enum lh_stats = OPENSSL_LH_stats;`;
        static if(is(typeof({ mixin(enumMixinStr_lh_stats); }))) {
            mixin(enumMixinStr_lh_stats);
        }
    }




    static if(!is(typeof(lh_num_items))) {
        private enum enumMixinStr_lh_num_items = `enum lh_num_items = OPENSSL_LH_num_items;`;
        static if(is(typeof({ mixin(enumMixinStr_lh_num_items); }))) {
            mixin(enumMixinStr_lh_num_items);
        }
    }




    static if(!is(typeof(lh_strhash))) {
        private enum enumMixinStr_lh_strhash = `enum lh_strhash = OPENSSL_LH_strhash;`;
        static if(is(typeof({ mixin(enumMixinStr_lh_strhash); }))) {
            mixin(enumMixinStr_lh_strhash);
        }
    }




    static if(!is(typeof(lh_doall_arg))) {
        private enum enumMixinStr_lh_doall_arg = `enum lh_doall_arg = OPENSSL_LH_doall_arg;`;
        static if(is(typeof({ mixin(enumMixinStr_lh_doall_arg); }))) {
            mixin(enumMixinStr_lh_doall_arg);
        }
    }




    static if(!is(typeof(lh_doall))) {
        private enum enumMixinStr_lh_doall = `enum lh_doall = OPENSSL_LH_doall;`;
        static if(is(typeof({ mixin(enumMixinStr_lh_doall); }))) {
            mixin(enumMixinStr_lh_doall);
        }
    }




    static if(!is(typeof(lh_retrieve))) {
        private enum enumMixinStr_lh_retrieve = `enum lh_retrieve = OPENSSL_LH_retrieve;`;
        static if(is(typeof({ mixin(enumMixinStr_lh_retrieve); }))) {
            mixin(enumMixinStr_lh_retrieve);
        }
    }




    static if(!is(typeof(lh_delete))) {
        private enum enumMixinStr_lh_delete = `enum lh_delete = OPENSSL_LH_delete;`;
        static if(is(typeof({ mixin(enumMixinStr_lh_delete); }))) {
            mixin(enumMixinStr_lh_delete);
        }
    }




    static if(!is(typeof(lh_insert))) {
        private enum enumMixinStr_lh_insert = `enum lh_insert = OPENSSL_LH_insert;`;
        static if(is(typeof({ mixin(enumMixinStr_lh_insert); }))) {
            mixin(enumMixinStr_lh_insert);
        }
    }




    static if(!is(typeof(lh_free))) {
        private enum enumMixinStr_lh_free = `enum lh_free = OPENSSL_LH_free;`;
        static if(is(typeof({ mixin(enumMixinStr_lh_free); }))) {
            mixin(enumMixinStr_lh_free);
        }
    }




    static if(!is(typeof(lh_new))) {
        private enum enumMixinStr_lh_new = `enum lh_new = OPENSSL_LH_new;`;
        static if(is(typeof({ mixin(enumMixinStr_lh_new); }))) {
            mixin(enumMixinStr_lh_new);
        }
    }




    static if(!is(typeof(lh_error))) {
        private enum enumMixinStr_lh_error = `enum lh_error = OPENSSL_LH_error;`;
        static if(is(typeof({ mixin(enumMixinStr_lh_error); }))) {
            mixin(enumMixinStr_lh_error);
        }
    }




    static if(!is(typeof(LHASH_NODE))) {
        private enum enumMixinStr_LHASH_NODE = `enum LHASH_NODE = OPENSSL_LH_NODE;`;
        static if(is(typeof({ mixin(enumMixinStr_LHASH_NODE); }))) {
            mixin(enumMixinStr_LHASH_NODE);
        }
    }




    static if(!is(typeof(_LHASH))) {
        private enum enumMixinStr__LHASH = `enum _LHASH = OPENSSL_LHASH;`;
        static if(is(typeof({ mixin(enumMixinStr__LHASH); }))) {
            mixin(enumMixinStr__LHASH);
        }
    }




    static if(!is(typeof(LH_LOAD_MULT))) {
        private enum enumMixinStr_LH_LOAD_MULT = `enum LH_LOAD_MULT = 256;`;
        static if(is(typeof({ mixin(enumMixinStr_LH_LOAD_MULT); }))) {
            mixin(enumMixinStr_LH_LOAD_MULT);
        }
    }
    static if(!is(typeof(EVP_R_XTS_DUPLICATED_KEYS))) {
        private enum enumMixinStr_EVP_R_XTS_DUPLICATED_KEYS = `enum EVP_R_XTS_DUPLICATED_KEYS = 183;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_XTS_DUPLICATED_KEYS); }))) {
            mixin(enumMixinStr_EVP_R_XTS_DUPLICATED_KEYS);
        }
    }




    static if(!is(typeof(EVP_R_WRONG_FINAL_BLOCK_LENGTH))) {
        private enum enumMixinStr_EVP_R_WRONG_FINAL_BLOCK_LENGTH = `enum EVP_R_WRONG_FINAL_BLOCK_LENGTH = 109;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_WRONG_FINAL_BLOCK_LENGTH); }))) {
            mixin(enumMixinStr_EVP_R_WRONG_FINAL_BLOCK_LENGTH);
        }
    }




    static if(!is(typeof(EVP_R_WRAP_MODE_NOT_ALLOWED))) {
        private enum enumMixinStr_EVP_R_WRAP_MODE_NOT_ALLOWED = `enum EVP_R_WRAP_MODE_NOT_ALLOWED = 170;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_WRAP_MODE_NOT_ALLOWED); }))) {
            mixin(enumMixinStr_EVP_R_WRAP_MODE_NOT_ALLOWED);
        }
    }




    static if(!is(typeof(EVP_R_UNSUPPORTED_SALT_TYPE))) {
        private enum enumMixinStr_EVP_R_UNSUPPORTED_SALT_TYPE = `enum EVP_R_UNSUPPORTED_SALT_TYPE = 126;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_UNSUPPORTED_SALT_TYPE); }))) {
            mixin(enumMixinStr_EVP_R_UNSUPPORTED_SALT_TYPE);
        }
    }




    static if(!is(typeof(EVP_R_UNSUPPORTED_PRIVATE_KEY_ALGORITHM))) {
        private enum enumMixinStr_EVP_R_UNSUPPORTED_PRIVATE_KEY_ALGORITHM = `enum EVP_R_UNSUPPORTED_PRIVATE_KEY_ALGORITHM = 118;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_UNSUPPORTED_PRIVATE_KEY_ALGORITHM); }))) {
            mixin(enumMixinStr_EVP_R_UNSUPPORTED_PRIVATE_KEY_ALGORITHM);
        }
    }




    static if(!is(typeof(EVP_R_UNSUPPORTED_PRF))) {
        private enum enumMixinStr_EVP_R_UNSUPPORTED_PRF = `enum EVP_R_UNSUPPORTED_PRF = 125;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_UNSUPPORTED_PRF); }))) {
            mixin(enumMixinStr_EVP_R_UNSUPPORTED_PRF);
        }
    }




    static if(!is(typeof(EVP_R_UNSUPPORTED_NUMBER_OF_ROUNDS))) {
        private enum enumMixinStr_EVP_R_UNSUPPORTED_NUMBER_OF_ROUNDS = `enum EVP_R_UNSUPPORTED_NUMBER_OF_ROUNDS = 135;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_UNSUPPORTED_NUMBER_OF_ROUNDS); }))) {
            mixin(enumMixinStr_EVP_R_UNSUPPORTED_NUMBER_OF_ROUNDS);
        }
    }




    static if(!is(typeof(EVP_R_UNSUPPORTED_KEY_SIZE))) {
        private enum enumMixinStr_EVP_R_UNSUPPORTED_KEY_SIZE = `enum EVP_R_UNSUPPORTED_KEY_SIZE = 108;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_UNSUPPORTED_KEY_SIZE); }))) {
            mixin(enumMixinStr_EVP_R_UNSUPPORTED_KEY_SIZE);
        }
    }




    static if(!is(typeof(EVP_R_UNSUPPORTED_KEY_DERIVATION_FUNCTION))) {
        private enum enumMixinStr_EVP_R_UNSUPPORTED_KEY_DERIVATION_FUNCTION = `enum EVP_R_UNSUPPORTED_KEY_DERIVATION_FUNCTION = 124;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_UNSUPPORTED_KEY_DERIVATION_FUNCTION); }))) {
            mixin(enumMixinStr_EVP_R_UNSUPPORTED_KEY_DERIVATION_FUNCTION);
        }
    }




    static if(!is(typeof(EVP_R_UNSUPPORTED_KEYLENGTH))) {
        private enum enumMixinStr_EVP_R_UNSUPPORTED_KEYLENGTH = `enum EVP_R_UNSUPPORTED_KEYLENGTH = 123;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_UNSUPPORTED_KEYLENGTH); }))) {
            mixin(enumMixinStr_EVP_R_UNSUPPORTED_KEYLENGTH);
        }
    }




    static if(!is(typeof(EVP_R_UNSUPPORTED_CIPHER))) {
        private enum enumMixinStr_EVP_R_UNSUPPORTED_CIPHER = `enum EVP_R_UNSUPPORTED_CIPHER = 107;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_UNSUPPORTED_CIPHER); }))) {
            mixin(enumMixinStr_EVP_R_UNSUPPORTED_CIPHER);
        }
    }




    static if(!is(typeof(EVP_R_UNSUPPORTED_ALGORITHM))) {
        private enum enumMixinStr_EVP_R_UNSUPPORTED_ALGORITHM = `enum EVP_R_UNSUPPORTED_ALGORITHM = 156;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_UNSUPPORTED_ALGORITHM); }))) {
            mixin(enumMixinStr_EVP_R_UNSUPPORTED_ALGORITHM);
        }
    }




    static if(!is(typeof(EVP_R_UNKNOWN_PBE_ALGORITHM))) {
        private enum enumMixinStr_EVP_R_UNKNOWN_PBE_ALGORITHM = `enum EVP_R_UNKNOWN_PBE_ALGORITHM = 121;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_UNKNOWN_PBE_ALGORITHM); }))) {
            mixin(enumMixinStr_EVP_R_UNKNOWN_PBE_ALGORITHM);
        }
    }




    static if(!is(typeof(EVP_R_UNKNOWN_OPTION))) {
        private enum enumMixinStr_EVP_R_UNKNOWN_OPTION = `enum EVP_R_UNKNOWN_OPTION = 169;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_UNKNOWN_OPTION); }))) {
            mixin(enumMixinStr_EVP_R_UNKNOWN_OPTION);
        }
    }




    static if(!is(typeof(EVP_R_UNKNOWN_DIGEST))) {
        private enum enumMixinStr_EVP_R_UNKNOWN_DIGEST = `enum EVP_R_UNKNOWN_DIGEST = 161;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_UNKNOWN_DIGEST); }))) {
            mixin(enumMixinStr_EVP_R_UNKNOWN_DIGEST);
        }
    }




    static if(!is(typeof(EVP_R_UNKNOWN_CIPHER))) {
        private enum enumMixinStr_EVP_R_UNKNOWN_CIPHER = `enum EVP_R_UNKNOWN_CIPHER = 160;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_UNKNOWN_CIPHER); }))) {
            mixin(enumMixinStr_EVP_R_UNKNOWN_CIPHER);
        }
    }




    static if(!is(typeof(EVP_R_PUBLIC_KEY_NOT_RSA))) {
        private enum enumMixinStr_EVP_R_PUBLIC_KEY_NOT_RSA = `enum EVP_R_PUBLIC_KEY_NOT_RSA = 106;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_PUBLIC_KEY_NOT_RSA); }))) {
            mixin(enumMixinStr_EVP_R_PUBLIC_KEY_NOT_RSA);
        }
    }




    static if(!is(typeof(EVP_R_PRIVATE_KEY_ENCODE_ERROR))) {
        private enum enumMixinStr_EVP_R_PRIVATE_KEY_ENCODE_ERROR = `enum EVP_R_PRIVATE_KEY_ENCODE_ERROR = 146;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_PRIVATE_KEY_ENCODE_ERROR); }))) {
            mixin(enumMixinStr_EVP_R_PRIVATE_KEY_ENCODE_ERROR);
        }
    }




    static if(!is(typeof(EVP_R_PRIVATE_KEY_DECODE_ERROR))) {
        private enum enumMixinStr_EVP_R_PRIVATE_KEY_DECODE_ERROR = `enum EVP_R_PRIVATE_KEY_DECODE_ERROR = 145;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_PRIVATE_KEY_DECODE_ERROR); }))) {
            mixin(enumMixinStr_EVP_R_PRIVATE_KEY_DECODE_ERROR);
        }
    }




    static if(!is(typeof(EVP_R_PKEY_APPLICATION_ASN1_METHOD_ALREADY_REGISTERED))) {
        private enum enumMixinStr_EVP_R_PKEY_APPLICATION_ASN1_METHOD_ALREADY_REGISTERED = `enum EVP_R_PKEY_APPLICATION_ASN1_METHOD_ALREADY_REGISTERED = 179;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_PKEY_APPLICATION_ASN1_METHOD_ALREADY_REGISTERED); }))) {
            mixin(enumMixinStr_EVP_R_PKEY_APPLICATION_ASN1_METHOD_ALREADY_REGISTERED);
        }
    }




    static if(!is(typeof(EVP_R_PBKDF2_ERROR))) {
        private enum enumMixinStr_EVP_R_PBKDF2_ERROR = `enum EVP_R_PBKDF2_ERROR = 181;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_PBKDF2_ERROR); }))) {
            mixin(enumMixinStr_EVP_R_PBKDF2_ERROR);
        }
    }




    static if(!is(typeof(EVP_R_PARTIALLY_OVERLAPPING))) {
        private enum enumMixinStr_EVP_R_PARTIALLY_OVERLAPPING = `enum EVP_R_PARTIALLY_OVERLAPPING = 162;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_PARTIALLY_OVERLAPPING); }))) {
            mixin(enumMixinStr_EVP_R_PARTIALLY_OVERLAPPING);
        }
    }




    static if(!is(typeof(EVP_R_OUTPUT_WOULD_OVERFLOW))) {
        private enum enumMixinStr_EVP_R_OUTPUT_WOULD_OVERFLOW = `enum EVP_R_OUTPUT_WOULD_OVERFLOW = 184;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_OUTPUT_WOULD_OVERFLOW); }))) {
            mixin(enumMixinStr_EVP_R_OUTPUT_WOULD_OVERFLOW);
        }
    }




    static if(!is(typeof(EVP_R_OPERATON_NOT_INITIALIZED))) {
        private enum enumMixinStr_EVP_R_OPERATON_NOT_INITIALIZED = `enum EVP_R_OPERATON_NOT_INITIALIZED = 151;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_OPERATON_NOT_INITIALIZED); }))) {
            mixin(enumMixinStr_EVP_R_OPERATON_NOT_INITIALIZED);
        }
    }




    static if(!is(typeof(EVP_R_OPERATION_NOT_SUPPORTED_FOR_THIS_KEYTYPE))) {
        private enum enumMixinStr_EVP_R_OPERATION_NOT_SUPPORTED_FOR_THIS_KEYTYPE = `enum EVP_R_OPERATION_NOT_SUPPORTED_FOR_THIS_KEYTYPE = 150;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_OPERATION_NOT_SUPPORTED_FOR_THIS_KEYTYPE); }))) {
            mixin(enumMixinStr_EVP_R_OPERATION_NOT_SUPPORTED_FOR_THIS_KEYTYPE);
        }
    }




    static if(!is(typeof(EVP_R_ONLY_ONESHOT_SUPPORTED))) {
        private enum enumMixinStr_EVP_R_ONLY_ONESHOT_SUPPORTED = `enum EVP_R_ONLY_ONESHOT_SUPPORTED = 177;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_ONLY_ONESHOT_SUPPORTED); }))) {
            mixin(enumMixinStr_EVP_R_ONLY_ONESHOT_SUPPORTED);
        }
    }




    static if(!is(typeof(EVP_R_NO_OPERATION_SET))) {
        private enum enumMixinStr_EVP_R_NO_OPERATION_SET = `enum EVP_R_NO_OPERATION_SET = 149;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_NO_OPERATION_SET); }))) {
            mixin(enumMixinStr_EVP_R_NO_OPERATION_SET);
        }
    }




    static if(!is(typeof(EVP_R_NO_KEY_SET))) {
        private enum enumMixinStr_EVP_R_NO_KEY_SET = `enum EVP_R_NO_KEY_SET = 154;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_NO_KEY_SET); }))) {
            mixin(enumMixinStr_EVP_R_NO_KEY_SET);
        }
    }




    static if(!is(typeof(EVP_R_NO_DIGEST_SET))) {
        private enum enumMixinStr_EVP_R_NO_DIGEST_SET = `enum EVP_R_NO_DIGEST_SET = 139;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_NO_DIGEST_SET); }))) {
            mixin(enumMixinStr_EVP_R_NO_DIGEST_SET);
        }
    }




    static if(!is(typeof(EVP_R_NO_DEFAULT_DIGEST))) {
        private enum enumMixinStr_EVP_R_NO_DEFAULT_DIGEST = `enum EVP_R_NO_DEFAULT_DIGEST = 158;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_NO_DEFAULT_DIGEST); }))) {
            mixin(enumMixinStr_EVP_R_NO_DEFAULT_DIGEST);
        }
    }




    static if(!is(typeof(EVP_R_NO_CIPHER_SET))) {
        private enum enumMixinStr_EVP_R_NO_CIPHER_SET = `enum EVP_R_NO_CIPHER_SET = 131;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_NO_CIPHER_SET); }))) {
            mixin(enumMixinStr_EVP_R_NO_CIPHER_SET);
        }
    }




    static if(!is(typeof(EVP_R_NOT_XOF_OR_INVALID_LENGTH))) {
        private enum enumMixinStr_EVP_R_NOT_XOF_OR_INVALID_LENGTH = `enum EVP_R_NOT_XOF_OR_INVALID_LENGTH = 178;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_NOT_XOF_OR_INVALID_LENGTH); }))) {
            mixin(enumMixinStr_EVP_R_NOT_XOF_OR_INVALID_LENGTH);
        }
    }




    static if(!is(typeof(EVP_R_MISSING_PARAMETERS))) {
        private enum enumMixinStr_EVP_R_MISSING_PARAMETERS = `enum EVP_R_MISSING_PARAMETERS = 103;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_MISSING_PARAMETERS); }))) {
            mixin(enumMixinStr_EVP_R_MISSING_PARAMETERS);
        }
    }




    static if(!is(typeof(EVP_R_METHOD_NOT_SUPPORTED))) {
        private enum enumMixinStr_EVP_R_METHOD_NOT_SUPPORTED = `enum EVP_R_METHOD_NOT_SUPPORTED = 144;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_METHOD_NOT_SUPPORTED); }))) {
            mixin(enumMixinStr_EVP_R_METHOD_NOT_SUPPORTED);
        }
    }




    static if(!is(typeof(EVP_R_MESSAGE_DIGEST_IS_NULL))) {
        private enum enumMixinStr_EVP_R_MESSAGE_DIGEST_IS_NULL = `enum EVP_R_MESSAGE_DIGEST_IS_NULL = 159;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_MESSAGE_DIGEST_IS_NULL); }))) {
            mixin(enumMixinStr_EVP_R_MESSAGE_DIGEST_IS_NULL);
        }
    }




    static if(!is(typeof(EVP_R_MEMORY_LIMIT_EXCEEDED))) {
        private enum enumMixinStr_EVP_R_MEMORY_LIMIT_EXCEEDED = `enum EVP_R_MEMORY_LIMIT_EXCEEDED = 172;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_MEMORY_LIMIT_EXCEEDED); }))) {
            mixin(enumMixinStr_EVP_R_MEMORY_LIMIT_EXCEEDED);
        }
    }




    static if(!is(typeof(EVP_R_KEY_SETUP_FAILED))) {
        private enum enumMixinStr_EVP_R_KEY_SETUP_FAILED = `enum EVP_R_KEY_SETUP_FAILED = 180;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_KEY_SETUP_FAILED); }))) {
            mixin(enumMixinStr_EVP_R_KEY_SETUP_FAILED);
        }
    }




    static if(!is(typeof(EVP_R_KEYGEN_FAILURE))) {
        private enum enumMixinStr_EVP_R_KEYGEN_FAILURE = `enum EVP_R_KEYGEN_FAILURE = 120;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_KEYGEN_FAILURE); }))) {
            mixin(enumMixinStr_EVP_R_KEYGEN_FAILURE);
        }
    }




    static if(!is(typeof(EVP_R_INVALID_OPERATION))) {
        private enum enumMixinStr_EVP_R_INVALID_OPERATION = `enum EVP_R_INVALID_OPERATION = 148;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_INVALID_OPERATION); }))) {
            mixin(enumMixinStr_EVP_R_INVALID_OPERATION);
        }
    }




    static if(!is(typeof(EVP_R_INVALID_KEY_LENGTH))) {
        private enum enumMixinStr_EVP_R_INVALID_KEY_LENGTH = `enum EVP_R_INVALID_KEY_LENGTH = 130;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_INVALID_KEY_LENGTH); }))) {
            mixin(enumMixinStr_EVP_R_INVALID_KEY_LENGTH);
        }
    }




    static if(!is(typeof(EVP_R_INVALID_KEY))) {
        private enum enumMixinStr_EVP_R_INVALID_KEY = `enum EVP_R_INVALID_KEY = 163;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_INVALID_KEY); }))) {
            mixin(enumMixinStr_EVP_R_INVALID_KEY);
        }
    }




    static if(!is(typeof(EVP_R_INVALID_IV_LENGTH))) {
        private enum enumMixinStr_EVP_R_INVALID_IV_LENGTH = `enum EVP_R_INVALID_IV_LENGTH = 194;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_INVALID_IV_LENGTH); }))) {
            mixin(enumMixinStr_EVP_R_INVALID_IV_LENGTH);
        }
    }




    static if(!is(typeof(EVP_R_INVALID_FIPS_MODE))) {
        private enum enumMixinStr_EVP_R_INVALID_FIPS_MODE = `enum EVP_R_INVALID_FIPS_MODE = 168;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_INVALID_FIPS_MODE); }))) {
            mixin(enumMixinStr_EVP_R_INVALID_FIPS_MODE);
        }
    }






    static if(!is(typeof(EVP_R_INVALID_DIGEST))) {
        private enum enumMixinStr_EVP_R_INVALID_DIGEST = `enum EVP_R_INVALID_DIGEST = 152;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_INVALID_DIGEST); }))) {
            mixin(enumMixinStr_EVP_R_INVALID_DIGEST);
        }
    }




    static if(!is(typeof(EVP_R_INPUT_NOT_INITIALIZED))) {
        private enum enumMixinStr_EVP_R_INPUT_NOT_INITIALIZED = `enum EVP_R_INPUT_NOT_INITIALIZED = 111;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_INPUT_NOT_INITIALIZED); }))) {
            mixin(enumMixinStr_EVP_R_INPUT_NOT_INITIALIZED);
        }
    }




    static if(!is(typeof(EVP_R_INITIALIZATION_ERROR))) {
        private enum enumMixinStr_EVP_R_INITIALIZATION_ERROR = `enum EVP_R_INITIALIZATION_ERROR = 134;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_INITIALIZATION_ERROR); }))) {
            mixin(enumMixinStr_EVP_R_INITIALIZATION_ERROR);
        }
    }




    static if(!is(typeof(EVP_R_ILLEGAL_SCRYPT_PARAMETERS))) {
        private enum enumMixinStr_EVP_R_ILLEGAL_SCRYPT_PARAMETERS = `enum EVP_R_ILLEGAL_SCRYPT_PARAMETERS = 171;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_ILLEGAL_SCRYPT_PARAMETERS); }))) {
            mixin(enumMixinStr_EVP_R_ILLEGAL_SCRYPT_PARAMETERS);
        }
    }




    static if(!is(typeof(EVP_R_GET_RAW_KEY_FAILED))) {
        private enum enumMixinStr_EVP_R_GET_RAW_KEY_FAILED = `enum EVP_R_GET_RAW_KEY_FAILED = 182;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_GET_RAW_KEY_FAILED); }))) {
            mixin(enumMixinStr_EVP_R_GET_RAW_KEY_FAILED);
        }
    }




    static if(!is(typeof(EVP_R_FIPS_MODE_NOT_SUPPORTED))) {
        private enum enumMixinStr_EVP_R_FIPS_MODE_NOT_SUPPORTED = `enum EVP_R_FIPS_MODE_NOT_SUPPORTED = 167;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_FIPS_MODE_NOT_SUPPORTED); }))) {
            mixin(enumMixinStr_EVP_R_FIPS_MODE_NOT_SUPPORTED);
        }
    }




    static if(!is(typeof(EVP_R_EXPECTING_A_SIPHASH_KEY))) {
        private enum enumMixinStr_EVP_R_EXPECTING_A_SIPHASH_KEY = `enum EVP_R_EXPECTING_A_SIPHASH_KEY = 175;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_EXPECTING_A_SIPHASH_KEY); }))) {
            mixin(enumMixinStr_EVP_R_EXPECTING_A_SIPHASH_KEY);
        }
    }




    static if(!is(typeof(EVP_R_EXPECTING_A_POLY1305_KEY))) {
        private enum enumMixinStr_EVP_R_EXPECTING_A_POLY1305_KEY = `enum EVP_R_EXPECTING_A_POLY1305_KEY = 164;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_EXPECTING_A_POLY1305_KEY); }))) {
            mixin(enumMixinStr_EVP_R_EXPECTING_A_POLY1305_KEY);
        }
    }




    static if(!is(typeof(EVP_R_EXPECTING_A_EC_KEY))) {
        private enum enumMixinStr_EVP_R_EXPECTING_A_EC_KEY = `enum EVP_R_EXPECTING_A_EC_KEY = 142;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_EXPECTING_A_EC_KEY); }))) {
            mixin(enumMixinStr_EVP_R_EXPECTING_A_EC_KEY);
        }
    }




    static if(!is(typeof(EVP_R_EXPECTING_A_DSA_KEY))) {
        private enum enumMixinStr_EVP_R_EXPECTING_A_DSA_KEY = `enum EVP_R_EXPECTING_A_DSA_KEY = 129;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_EXPECTING_A_DSA_KEY); }))) {
            mixin(enumMixinStr_EVP_R_EXPECTING_A_DSA_KEY);
        }
    }




    static if(!is(typeof(EVP_R_EXPECTING_A_DH_KEY))) {
        private enum enumMixinStr_EVP_R_EXPECTING_A_DH_KEY = `enum EVP_R_EXPECTING_A_DH_KEY = 128;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_EXPECTING_A_DH_KEY); }))) {
            mixin(enumMixinStr_EVP_R_EXPECTING_A_DH_KEY);
        }
    }




    static if(!is(typeof(EVP_R_EXPECTING_AN_RSA_KEY))) {
        private enum enumMixinStr_EVP_R_EXPECTING_AN_RSA_KEY = `enum EVP_R_EXPECTING_AN_RSA_KEY = 127;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_EXPECTING_AN_RSA_KEY); }))) {
            mixin(enumMixinStr_EVP_R_EXPECTING_AN_RSA_KEY);
        }
    }




    static if(!is(typeof(EVP_R_EXPECTING_AN_HMAC_KEY))) {
        private enum enumMixinStr_EVP_R_EXPECTING_AN_HMAC_KEY = `enum EVP_R_EXPECTING_AN_HMAC_KEY = 174;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_EXPECTING_AN_HMAC_KEY); }))) {
            mixin(enumMixinStr_EVP_R_EXPECTING_AN_HMAC_KEY);
        }
    }




    static if(!is(typeof(EVP_R_ERROR_SETTING_FIPS_MODE))) {
        private enum enumMixinStr_EVP_R_ERROR_SETTING_FIPS_MODE = `enum EVP_R_ERROR_SETTING_FIPS_MODE = 166;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_ERROR_SETTING_FIPS_MODE); }))) {
            mixin(enumMixinStr_EVP_R_ERROR_SETTING_FIPS_MODE);
        }
    }




    static if(!is(typeof(EVP_R_ERROR_LOADING_SECTION))) {
        private enum enumMixinStr_EVP_R_ERROR_LOADING_SECTION = `enum EVP_R_ERROR_LOADING_SECTION = 165;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_ERROR_LOADING_SECTION); }))) {
            mixin(enumMixinStr_EVP_R_ERROR_LOADING_SECTION);
        }
    }




    static if(!is(typeof(EVP_R_DIFFERENT_PARAMETERS))) {
        private enum enumMixinStr_EVP_R_DIFFERENT_PARAMETERS = `enum EVP_R_DIFFERENT_PARAMETERS = 153;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_DIFFERENT_PARAMETERS); }))) {
            mixin(enumMixinStr_EVP_R_DIFFERENT_PARAMETERS);
        }
    }




    static if(!is(typeof(EVP_R_DIFFERENT_KEY_TYPES))) {
        private enum enumMixinStr_EVP_R_DIFFERENT_KEY_TYPES = `enum EVP_R_DIFFERENT_KEY_TYPES = 101;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_DIFFERENT_KEY_TYPES); }))) {
            mixin(enumMixinStr_EVP_R_DIFFERENT_KEY_TYPES);
        }
    }




    static if(!is(typeof(EVP_R_DECODE_ERROR))) {
        private enum enumMixinStr_EVP_R_DECODE_ERROR = `enum EVP_R_DECODE_ERROR = 114;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_DECODE_ERROR); }))) {
            mixin(enumMixinStr_EVP_R_DECODE_ERROR);
        }
    }




    static if(!is(typeof(EVP_R_DATA_NOT_MULTIPLE_OF_BLOCK_LENGTH))) {
        private enum enumMixinStr_EVP_R_DATA_NOT_MULTIPLE_OF_BLOCK_LENGTH = `enum EVP_R_DATA_NOT_MULTIPLE_OF_BLOCK_LENGTH = 138;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_DATA_NOT_MULTIPLE_OF_BLOCK_LENGTH); }))) {
            mixin(enumMixinStr_EVP_R_DATA_NOT_MULTIPLE_OF_BLOCK_LENGTH);
        }
    }




    static if(!is(typeof(EVP_R_CTRL_OPERATION_NOT_IMPLEMENTED))) {
        private enum enumMixinStr_EVP_R_CTRL_OPERATION_NOT_IMPLEMENTED = `enum EVP_R_CTRL_OPERATION_NOT_IMPLEMENTED = 133;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_CTRL_OPERATION_NOT_IMPLEMENTED); }))) {
            mixin(enumMixinStr_EVP_R_CTRL_OPERATION_NOT_IMPLEMENTED);
        }
    }




    static if(!is(typeof(EVP_R_CTRL_NOT_IMPLEMENTED))) {
        private enum enumMixinStr_EVP_R_CTRL_NOT_IMPLEMENTED = `enum EVP_R_CTRL_NOT_IMPLEMENTED = 132;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_CTRL_NOT_IMPLEMENTED); }))) {
            mixin(enumMixinStr_EVP_R_CTRL_NOT_IMPLEMENTED);
        }
    }




    static if(!is(typeof(EVP_R_COPY_ERROR))) {
        private enum enumMixinStr_EVP_R_COPY_ERROR = `enum EVP_R_COPY_ERROR = 173;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_COPY_ERROR); }))) {
            mixin(enumMixinStr_EVP_R_COPY_ERROR);
        }
    }




    static if(!is(typeof(EVP_R_COMMAND_NOT_SUPPORTED))) {
        private enum enumMixinStr_EVP_R_COMMAND_NOT_SUPPORTED = `enum EVP_R_COMMAND_NOT_SUPPORTED = 147;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_COMMAND_NOT_SUPPORTED); }))) {
            mixin(enumMixinStr_EVP_R_COMMAND_NOT_SUPPORTED);
        }
    }




    static if(!is(typeof(EVP_R_CIPHER_PARAMETER_ERROR))) {
        private enum enumMixinStr_EVP_R_CIPHER_PARAMETER_ERROR = `enum EVP_R_CIPHER_PARAMETER_ERROR = 122;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_CIPHER_PARAMETER_ERROR); }))) {
            mixin(enumMixinStr_EVP_R_CIPHER_PARAMETER_ERROR);
        }
    }




    static if(!is(typeof(EVP_R_CAMELLIA_KEY_SETUP_FAILED))) {
        private enum enumMixinStr_EVP_R_CAMELLIA_KEY_SETUP_FAILED = `enum EVP_R_CAMELLIA_KEY_SETUP_FAILED = 157;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_CAMELLIA_KEY_SETUP_FAILED); }))) {
            mixin(enumMixinStr_EVP_R_CAMELLIA_KEY_SETUP_FAILED);
        }
    }




    static if(!is(typeof(EVP_R_BUFFER_TOO_SMALL))) {
        private enum enumMixinStr_EVP_R_BUFFER_TOO_SMALL = `enum EVP_R_BUFFER_TOO_SMALL = 155;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_BUFFER_TOO_SMALL); }))) {
            mixin(enumMixinStr_EVP_R_BUFFER_TOO_SMALL);
        }
    }




    static if(!is(typeof(EVP_R_BAD_KEY_LENGTH))) {
        private enum enumMixinStr_EVP_R_BAD_KEY_LENGTH = `enum EVP_R_BAD_KEY_LENGTH = 195;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_BAD_KEY_LENGTH); }))) {
            mixin(enumMixinStr_EVP_R_BAD_KEY_LENGTH);
        }
    }




    static if(!is(typeof(EVP_R_BAD_DECRYPT))) {
        private enum enumMixinStr_EVP_R_BAD_DECRYPT = `enum EVP_R_BAD_DECRYPT = 100;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_BAD_DECRYPT); }))) {
            mixin(enumMixinStr_EVP_R_BAD_DECRYPT);
        }
    }




    static if(!is(typeof(EVP_R_ARIA_KEY_SETUP_FAILED))) {
        private enum enumMixinStr_EVP_R_ARIA_KEY_SETUP_FAILED = `enum EVP_R_ARIA_KEY_SETUP_FAILED = 176;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_ARIA_KEY_SETUP_FAILED); }))) {
            mixin(enumMixinStr_EVP_R_ARIA_KEY_SETUP_FAILED);
        }
    }




    static if(!is(typeof(EVP_R_AES_KEY_SETUP_FAILED))) {
        private enum enumMixinStr_EVP_R_AES_KEY_SETUP_FAILED = `enum EVP_R_AES_KEY_SETUP_FAILED = 143;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_R_AES_KEY_SETUP_FAILED); }))) {
            mixin(enumMixinStr_EVP_R_AES_KEY_SETUP_FAILED);
        }
    }




    static if(!is(typeof(EVP_F_UPDATE))) {
        private enum enumMixinStr_EVP_F_UPDATE = `enum EVP_F_UPDATE = 173;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_UPDATE); }))) {
            mixin(enumMixinStr_EVP_F_UPDATE);
        }
    }




    static if(!is(typeof(EVP_F_S390X_AES_GCM_CTRL))) {
        private enum enumMixinStr_EVP_F_S390X_AES_GCM_CTRL = `enum EVP_F_S390X_AES_GCM_CTRL = 201;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_S390X_AES_GCM_CTRL); }))) {
            mixin(enumMixinStr_EVP_F_S390X_AES_GCM_CTRL);
        }
    }




    static if(!is(typeof(EVP_F_R_32_12_16_INIT_KEY))) {
        private enum enumMixinStr_EVP_F_R_32_12_16_INIT_KEY = `enum EVP_F_R_32_12_16_INIT_KEY = 242;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_R_32_12_16_INIT_KEY); }))) {
            mixin(enumMixinStr_EVP_F_R_32_12_16_INIT_KEY);
        }
    }




    static if(!is(typeof(EVP_F_RC5_CTRL))) {
        private enum enumMixinStr_EVP_F_RC5_CTRL = `enum EVP_F_RC5_CTRL = 125;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_RC5_CTRL); }))) {
            mixin(enumMixinStr_EVP_F_RC5_CTRL);
        }
    }




    static if(!is(typeof(EVP_F_RC2_MAGIC_TO_METH))) {
        private enum enumMixinStr_EVP_F_RC2_MAGIC_TO_METH = `enum EVP_F_RC2_MAGIC_TO_METH = 109;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_RC2_MAGIC_TO_METH); }))) {
            mixin(enumMixinStr_EVP_F_RC2_MAGIC_TO_METH);
        }
    }




    static if(!is(typeof(EVP_F_PKEY_SET_TYPE))) {
        private enum enumMixinStr_EVP_F_PKEY_SET_TYPE = `enum EVP_F_PKEY_SET_TYPE = 158;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_PKEY_SET_TYPE); }))) {
            mixin(enumMixinStr_EVP_F_PKEY_SET_TYPE);
        }
    }




    static if(!is(typeof(EVP_F_PKCS5_V2_SCRYPT_KEYIVGEN))) {
        private enum enumMixinStr_EVP_F_PKCS5_V2_SCRYPT_KEYIVGEN = `enum EVP_F_PKCS5_V2_SCRYPT_KEYIVGEN = 180;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_PKCS5_V2_SCRYPT_KEYIVGEN); }))) {
            mixin(enumMixinStr_EVP_F_PKCS5_V2_SCRYPT_KEYIVGEN);
        }
    }




    static if(!is(typeof(EVP_F_PKCS5_V2_PBKDF2_KEYIVGEN))) {
        private enum enumMixinStr_EVP_F_PKCS5_V2_PBKDF2_KEYIVGEN = `enum EVP_F_PKCS5_V2_PBKDF2_KEYIVGEN = 164;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_PKCS5_V2_PBKDF2_KEYIVGEN); }))) {
            mixin(enumMixinStr_EVP_F_PKCS5_V2_PBKDF2_KEYIVGEN);
        }
    }




    static if(!is(typeof(EVP_F_PKCS5_V2_PBE_KEYIVGEN))) {
        private enum enumMixinStr_EVP_F_PKCS5_V2_PBE_KEYIVGEN = `enum EVP_F_PKCS5_V2_PBE_KEYIVGEN = 118;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_PKCS5_V2_PBE_KEYIVGEN); }))) {
            mixin(enumMixinStr_EVP_F_PKCS5_V2_PBE_KEYIVGEN);
        }
    }




    static if(!is(typeof(EVP_F_PKCS5_PBE_KEYIVGEN))) {
        private enum enumMixinStr_EVP_F_PKCS5_PBE_KEYIVGEN = `enum EVP_F_PKCS5_PBE_KEYIVGEN = 117;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_PKCS5_PBE_KEYIVGEN); }))) {
            mixin(enumMixinStr_EVP_F_PKCS5_PBE_KEYIVGEN);
        }
    }




    static if(!is(typeof(EVP_F_OK_NEW))) {
        private enum enumMixinStr_EVP_F_OK_NEW = `enum EVP_F_OK_NEW = 200;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_OK_NEW); }))) {
            mixin(enumMixinStr_EVP_F_OK_NEW);
        }
    }




    static if(!is(typeof(EVP_F_INT_CTX_NEW))) {
        private enum enumMixinStr_EVP_F_INT_CTX_NEW = `enum EVP_F_INT_CTX_NEW = 157;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_INT_CTX_NEW); }))) {
            mixin(enumMixinStr_EVP_F_INT_CTX_NEW);
        }
    }




    static if(!is(typeof(EVP_F_EVP_VERIFYFINAL))) {
        private enum enumMixinStr_EVP_F_EVP_VERIFYFINAL = `enum EVP_F_EVP_VERIFYFINAL = 108;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_VERIFYFINAL); }))) {
            mixin(enumMixinStr_EVP_F_EVP_VERIFYFINAL);
        }
    }




    static if(!is(typeof(EVP_F_EVP_SIGNFINAL))) {
        private enum enumMixinStr_EVP_F_EVP_SIGNFINAL = `enum EVP_F_EVP_SIGNFINAL = 107;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_SIGNFINAL); }))) {
            mixin(enumMixinStr_EVP_F_EVP_SIGNFINAL);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_VERIFY_RECOVER_INIT))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_VERIFY_RECOVER_INIT = `enum EVP_F_EVP_PKEY_VERIFY_RECOVER_INIT = 145;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_VERIFY_RECOVER_INIT); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_VERIFY_RECOVER_INIT);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_VERIFY_RECOVER))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_VERIFY_RECOVER = `enum EVP_F_EVP_PKEY_VERIFY_RECOVER = 144;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_VERIFY_RECOVER); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_VERIFY_RECOVER);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_VERIFY_INIT))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_VERIFY_INIT = `enum EVP_F_EVP_PKEY_VERIFY_INIT = 143;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_VERIFY_INIT); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_VERIFY_INIT);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_VERIFY))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_VERIFY = `enum EVP_F_EVP_PKEY_VERIFY = 142;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_VERIFY); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_VERIFY);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_SIGN_INIT))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_SIGN_INIT = `enum EVP_F_EVP_PKEY_SIGN_INIT = 141;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_SIGN_INIT); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_SIGN_INIT);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_SIGN))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_SIGN = `enum EVP_F_EVP_PKEY_SIGN = 140;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_SIGN); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_SIGN);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_SET_ALIAS_TYPE))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_SET_ALIAS_TYPE = `enum EVP_F_EVP_PKEY_SET_ALIAS_TYPE = 206;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_SET_ALIAS_TYPE); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_SET_ALIAS_TYPE);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_SET1_ENGINE))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_SET1_ENGINE = `enum EVP_F_EVP_PKEY_SET1_ENGINE = 187;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_SET1_ENGINE); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_SET1_ENGINE);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_PUBLIC_CHECK))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_PUBLIC_CHECK = `enum EVP_F_EVP_PKEY_PUBLIC_CHECK = 190;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_PUBLIC_CHECK); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_PUBLIC_CHECK);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_PARAM_CHECK))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_PARAM_CHECK = `enum EVP_F_EVP_PKEY_PARAM_CHECK = 189;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_PARAM_CHECK); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_PARAM_CHECK);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_PARAMGEN_INIT))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_PARAMGEN_INIT = `enum EVP_F_EVP_PKEY_PARAMGEN_INIT = 149;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_PARAMGEN_INIT); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_PARAMGEN_INIT);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_PARAMGEN))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_PARAMGEN = `enum EVP_F_EVP_PKEY_PARAMGEN = 148;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_PARAMGEN); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_PARAMGEN);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_NEW_RAW_PUBLIC_KEY))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_NEW_RAW_PUBLIC_KEY = `enum EVP_F_EVP_PKEY_NEW_RAW_PUBLIC_KEY = 192;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_NEW_RAW_PUBLIC_KEY); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_NEW_RAW_PUBLIC_KEY);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_NEW_RAW_PRIVATE_KEY))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_NEW_RAW_PRIVATE_KEY = `enum EVP_F_EVP_PKEY_NEW_RAW_PRIVATE_KEY = 191;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_NEW_RAW_PRIVATE_KEY); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_NEW_RAW_PRIVATE_KEY);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_NEW_CMAC_KEY))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_NEW_CMAC_KEY = `enum EVP_F_EVP_PKEY_NEW_CMAC_KEY = 193;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_NEW_CMAC_KEY); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_NEW_CMAC_KEY);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_NEW))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_NEW = `enum EVP_F_EVP_PKEY_NEW = 106;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_NEW); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_NEW);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_METH_NEW))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_METH_NEW = `enum EVP_F_EVP_PKEY_METH_NEW = 195;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_METH_NEW); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_METH_NEW);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_METH_ADD0))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_METH_ADD0 = `enum EVP_F_EVP_PKEY_METH_ADD0 = 194;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_METH_ADD0); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_METH_ADD0);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_KEYGEN_INIT))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_KEYGEN_INIT = `enum EVP_F_EVP_PKEY_KEYGEN_INIT = 147;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_KEYGEN_INIT); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_KEYGEN_INIT);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_KEYGEN))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_KEYGEN = `enum EVP_F_EVP_PKEY_KEYGEN = 146;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_KEYGEN); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_KEYGEN);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_GET_RAW_PUBLIC_KEY))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_GET_RAW_PUBLIC_KEY = `enum EVP_F_EVP_PKEY_GET_RAW_PUBLIC_KEY = 203;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_GET_RAW_PUBLIC_KEY); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_GET_RAW_PUBLIC_KEY);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_GET_RAW_PRIVATE_KEY))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_GET_RAW_PRIVATE_KEY = `enum EVP_F_EVP_PKEY_GET_RAW_PRIVATE_KEY = 202;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_GET_RAW_PRIVATE_KEY); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_GET_RAW_PRIVATE_KEY);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_GET0_SIPHASH))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_GET0_SIPHASH = `enum EVP_F_EVP_PKEY_GET0_SIPHASH = 172;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_GET0_SIPHASH); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_GET0_SIPHASH);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_GET0_RSA))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_GET0_RSA = `enum EVP_F_EVP_PKEY_GET0_RSA = 121;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_GET0_RSA); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_GET0_RSA);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_GET0_POLY1305))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_GET0_POLY1305 = `enum EVP_F_EVP_PKEY_GET0_POLY1305 = 184;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_GET0_POLY1305); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_GET0_POLY1305);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_GET0_HMAC))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_GET0_HMAC = `enum EVP_F_EVP_PKEY_GET0_HMAC = 183;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_GET0_HMAC); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_GET0_HMAC);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_GET0_EC_KEY))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_GET0_EC_KEY = `enum EVP_F_EVP_PKEY_GET0_EC_KEY = 131;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_GET0_EC_KEY); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_GET0_EC_KEY);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_GET0_DSA))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_GET0_DSA = `enum EVP_F_EVP_PKEY_GET0_DSA = 120;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_GET0_DSA); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_GET0_DSA);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_GET0_DH))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_GET0_DH = `enum EVP_F_EVP_PKEY_GET0_DH = 119;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_GET0_DH); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_GET0_DH);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_ENCRYPT_OLD))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_ENCRYPT_OLD = `enum EVP_F_EVP_PKEY_ENCRYPT_OLD = 152;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_ENCRYPT_OLD); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_ENCRYPT_OLD);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_ENCRYPT_INIT))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_ENCRYPT_INIT = `enum EVP_F_EVP_PKEY_ENCRYPT_INIT = 139;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_ENCRYPT_INIT); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_ENCRYPT_INIT);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_ENCRYPT))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_ENCRYPT = `enum EVP_F_EVP_PKEY_ENCRYPT = 105;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_ENCRYPT); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_ENCRYPT);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_DERIVE_SET_PEER))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_DERIVE_SET_PEER = `enum EVP_F_EVP_PKEY_DERIVE_SET_PEER = 155;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_DERIVE_SET_PEER); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_DERIVE_SET_PEER);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_DERIVE_INIT))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_DERIVE_INIT = `enum EVP_F_EVP_PKEY_DERIVE_INIT = 154;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_DERIVE_INIT); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_DERIVE_INIT);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_DERIVE))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_DERIVE = `enum EVP_F_EVP_PKEY_DERIVE = 153;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_DERIVE); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_DERIVE);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_DECRYPT_OLD))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_DECRYPT_OLD = `enum EVP_F_EVP_PKEY_DECRYPT_OLD = 151;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_DECRYPT_OLD); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_DECRYPT_OLD);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_DECRYPT_INIT))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_DECRYPT_INIT = `enum EVP_F_EVP_PKEY_DECRYPT_INIT = 138;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_DECRYPT_INIT); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_DECRYPT_INIT);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_DECRYPT))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_DECRYPT = `enum EVP_F_EVP_PKEY_DECRYPT = 104;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_DECRYPT); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_DECRYPT);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_CTX_MD))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_CTX_MD = `enum EVP_F_EVP_PKEY_CTX_MD = 168;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_CTX_MD); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_CTX_MD);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_CTX_DUP))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_CTX_DUP = `enum EVP_F_EVP_PKEY_CTX_DUP = 156;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_CTX_DUP); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_CTX_DUP);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_CTX_CTRL_STR))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_CTX_CTRL_STR = `enum EVP_F_EVP_PKEY_CTX_CTRL_STR = 150;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_CTX_CTRL_STR); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_CTX_CTRL_STR);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_CTX_CTRL))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_CTX_CTRL = `enum EVP_F_EVP_PKEY_CTX_CTRL = 137;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_CTX_CTRL); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_CTX_CTRL);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_COPY_PARAMETERS))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_COPY_PARAMETERS = `enum EVP_F_EVP_PKEY_COPY_PARAMETERS = 103;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_COPY_PARAMETERS); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_COPY_PARAMETERS);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_CHECK))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_CHECK = `enum EVP_F_EVP_PKEY_CHECK = 186;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_CHECK); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_CHECK);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY_ASN1_ADD0))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY_ASN1_ADD0 = `enum EVP_F_EVP_PKEY_ASN1_ADD0 = 188;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY_ASN1_ADD0); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY_ASN1_ADD0);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKEY2PKCS8))) {
        private enum enumMixinStr_EVP_F_EVP_PKEY2PKCS8 = `enum EVP_F_EVP_PKEY2PKCS8 = 113;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKEY2PKCS8); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKEY2PKCS8);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PKCS82PKEY))) {
        private enum enumMixinStr_EVP_F_EVP_PKCS82PKEY = `enum EVP_F_EVP_PKCS82PKEY = 111;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PKCS82PKEY); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PKCS82PKEY);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PBE_SCRYPT))) {
        private enum enumMixinStr_EVP_F_EVP_PBE_SCRYPT = `enum EVP_F_EVP_PBE_SCRYPT = 181;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PBE_SCRYPT); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PBE_SCRYPT);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PBE_CIPHERINIT))) {
        private enum enumMixinStr_EVP_F_EVP_PBE_CIPHERINIT = `enum EVP_F_EVP_PBE_CIPHERINIT = 116;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PBE_CIPHERINIT); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PBE_CIPHERINIT);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PBE_ALG_ADD_TYPE))) {
        private enum enumMixinStr_EVP_F_EVP_PBE_ALG_ADD_TYPE = `enum EVP_F_EVP_PBE_ALG_ADD_TYPE = 160;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PBE_ALG_ADD_TYPE); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PBE_ALG_ADD_TYPE);
        }
    }




    static if(!is(typeof(EVP_F_EVP_PBE_ALG_ADD))) {
        private enum enumMixinStr_EVP_F_EVP_PBE_ALG_ADD = `enum EVP_F_EVP_PBE_ALG_ADD = 115;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_PBE_ALG_ADD); }))) {
            mixin(enumMixinStr_EVP_F_EVP_PBE_ALG_ADD);
        }
    }




    static if(!is(typeof(X509_get_notBefore))) {
        private enum enumMixinStr_X509_get_notBefore = `enum X509_get_notBefore = X509_getm_notBefore;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_get_notBefore); }))) {
            mixin(enumMixinStr_X509_get_notBefore);
        }
    }




    static if(!is(typeof(X509_get_notAfter))) {
        private enum enumMixinStr_X509_get_notAfter = `enum X509_get_notAfter = X509_getm_notAfter;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_get_notAfter); }))) {
            mixin(enumMixinStr_X509_get_notAfter);
        }
    }




    static if(!is(typeof(X509_set_notBefore))) {
        private enum enumMixinStr_X509_set_notBefore = `enum X509_set_notBefore = X509_set1_notBefore;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_set_notBefore); }))) {
            mixin(enumMixinStr_X509_set_notBefore);
        }
    }




    static if(!is(typeof(X509_set_notAfter))) {
        private enum enumMixinStr_X509_set_notAfter = `enum X509_set_notAfter = X509_set1_notAfter;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_set_notAfter); }))) {
            mixin(enumMixinStr_X509_set_notAfter);
        }
    }




    static if(!is(typeof(EVP_F_EVP_OPENINIT))) {
        private enum enumMixinStr_EVP_F_EVP_OPENINIT = `enum EVP_F_EVP_OPENINIT = 102;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_OPENINIT); }))) {
            mixin(enumMixinStr_EVP_F_EVP_OPENINIT);
        }
    }




    static if(!is(typeof(EVP_F_EVP_MD_SIZE))) {
        private enum enumMixinStr_EVP_F_EVP_MD_SIZE = `enum EVP_F_EVP_MD_SIZE = 162;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_MD_SIZE); }))) {
            mixin(enumMixinStr_EVP_F_EVP_MD_SIZE);
        }
    }




    static if(!is(typeof(EVP_F_EVP_MD_CTX_COPY_EX))) {
        private enum enumMixinStr_EVP_F_EVP_MD_CTX_COPY_EX = `enum EVP_F_EVP_MD_CTX_COPY_EX = 110;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_MD_CTX_COPY_EX); }))) {
            mixin(enumMixinStr_EVP_F_EVP_MD_CTX_COPY_EX);
        }
    }




    static if(!is(typeof(EVP_F_EVP_ENCRYPTUPDATE))) {
        private enum enumMixinStr_EVP_F_EVP_ENCRYPTUPDATE = `enum EVP_F_EVP_ENCRYPTUPDATE = 167;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_ENCRYPTUPDATE); }))) {
            mixin(enumMixinStr_EVP_F_EVP_ENCRYPTUPDATE);
        }
    }




    static if(!is(typeof(EVP_F_EVP_ENCRYPTFINAL_EX))) {
        private enum enumMixinStr_EVP_F_EVP_ENCRYPTFINAL_EX = `enum EVP_F_EVP_ENCRYPTFINAL_EX = 127;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_ENCRYPTFINAL_EX); }))) {
            mixin(enumMixinStr_EVP_F_EVP_ENCRYPTFINAL_EX);
        }
    }




    static if(!is(typeof(EVP_F_EVP_ENCRYPTDECRYPTUPDATE))) {
        private enum enumMixinStr_EVP_F_EVP_ENCRYPTDECRYPTUPDATE = `enum EVP_F_EVP_ENCRYPTDECRYPTUPDATE = 219;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_ENCRYPTDECRYPTUPDATE); }))) {
            mixin(enumMixinStr_EVP_F_EVP_ENCRYPTDECRYPTUPDATE);
        }
    }




    static if(!is(typeof(EVP_F_EVP_DIGESTINIT_EX))) {
        private enum enumMixinStr_EVP_F_EVP_DIGESTINIT_EX = `enum EVP_F_EVP_DIGESTINIT_EX = 128;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_DIGESTINIT_EX); }))) {
            mixin(enumMixinStr_EVP_F_EVP_DIGESTINIT_EX);
        }
    }




    static if(!is(typeof(EVP_F_EVP_DIGESTFINALXOF))) {
        private enum enumMixinStr_EVP_F_EVP_DIGESTFINALXOF = `enum EVP_F_EVP_DIGESTFINALXOF = 174;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_DIGESTFINALXOF); }))) {
            mixin(enumMixinStr_EVP_F_EVP_DIGESTFINALXOF);
        }
    }




    static if(!is(typeof(EVP_F_EVP_DECRYPTUPDATE))) {
        private enum enumMixinStr_EVP_F_EVP_DECRYPTUPDATE = `enum EVP_F_EVP_DECRYPTUPDATE = 166;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_DECRYPTUPDATE); }))) {
            mixin(enumMixinStr_EVP_F_EVP_DECRYPTUPDATE);
        }
    }




    static if(!is(typeof(EVP_F_EVP_DECRYPTFINAL_EX))) {
        private enum enumMixinStr_EVP_F_EVP_DECRYPTFINAL_EX = `enum EVP_F_EVP_DECRYPTFINAL_EX = 101;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_DECRYPTFINAL_EX); }))) {
            mixin(enumMixinStr_EVP_F_EVP_DECRYPTFINAL_EX);
        }
    }




    static if(!is(typeof(EVP_F_EVP_CIPHER_PARAM_TO_ASN1))) {
        private enum enumMixinStr_EVP_F_EVP_CIPHER_PARAM_TO_ASN1 = `enum EVP_F_EVP_CIPHER_PARAM_TO_ASN1 = 205;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_CIPHER_PARAM_TO_ASN1); }))) {
            mixin(enumMixinStr_EVP_F_EVP_CIPHER_PARAM_TO_ASN1);
        }
    }




    static if(!is(typeof(EVP_F_EVP_CIPHER_CTX_SET_KEY_LENGTH))) {
        private enum enumMixinStr_EVP_F_EVP_CIPHER_CTX_SET_KEY_LENGTH = `enum EVP_F_EVP_CIPHER_CTX_SET_KEY_LENGTH = 122;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_CIPHER_CTX_SET_KEY_LENGTH); }))) {
            mixin(enumMixinStr_EVP_F_EVP_CIPHER_CTX_SET_KEY_LENGTH);
        }
    }




    static if(!is(typeof(EVP_F_EVP_CIPHER_CTX_CTRL))) {
        private enum enumMixinStr_EVP_F_EVP_CIPHER_CTX_CTRL = `enum EVP_F_EVP_CIPHER_CTX_CTRL = 124;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_CIPHER_CTX_CTRL); }))) {
            mixin(enumMixinStr_EVP_F_EVP_CIPHER_CTX_CTRL);
        }
    }




    static if(!is(typeof(EVP_F_EVP_CIPHER_CTX_COPY))) {
        private enum enumMixinStr_EVP_F_EVP_CIPHER_CTX_COPY = `enum EVP_F_EVP_CIPHER_CTX_COPY = 163;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_CIPHER_CTX_COPY); }))) {
            mixin(enumMixinStr_EVP_F_EVP_CIPHER_CTX_COPY);
        }
    }




    static if(!is(typeof(EVP_F_EVP_CIPHER_ASN1_TO_PARAM))) {
        private enum enumMixinStr_EVP_F_EVP_CIPHER_ASN1_TO_PARAM = `enum EVP_F_EVP_CIPHER_ASN1_TO_PARAM = 204;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_CIPHER_ASN1_TO_PARAM); }))) {
            mixin(enumMixinStr_EVP_F_EVP_CIPHER_ASN1_TO_PARAM);
        }
    }




    static if(!is(typeof(EVP_F_EVP_CIPHERINIT_EX))) {
        private enum enumMixinStr_EVP_F_EVP_CIPHERINIT_EX = `enum EVP_F_EVP_CIPHERINIT_EX = 123;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_EVP_CIPHERINIT_EX); }))) {
            mixin(enumMixinStr_EVP_F_EVP_CIPHERINIT_EX);
        }
    }




    static if(!is(typeof(EVP_F_ENC_NEW))) {
        private enum enumMixinStr_EVP_F_ENC_NEW = `enum EVP_F_ENC_NEW = 199;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_ENC_NEW); }))) {
            mixin(enumMixinStr_EVP_F_ENC_NEW);
        }
    }




    static if(!is(typeof(EVP_F_DO_SIGVER_INIT))) {
        private enum enumMixinStr_EVP_F_DO_SIGVER_INIT = `enum EVP_F_DO_SIGVER_INIT = 161;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_DO_SIGVER_INIT); }))) {
            mixin(enumMixinStr_EVP_F_DO_SIGVER_INIT);
        }
    }




    static if(!is(typeof(EVP_F_DES_EDE3_WRAP_CIPHER))) {
        private enum enumMixinStr_EVP_F_DES_EDE3_WRAP_CIPHER = `enum EVP_F_DES_EDE3_WRAP_CIPHER = 171;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_DES_EDE3_WRAP_CIPHER); }))) {
            mixin(enumMixinStr_EVP_F_DES_EDE3_WRAP_CIPHER);
        }
    }




    static if(!is(typeof(EVP_F_CMLL_T4_INIT_KEY))) {
        private enum enumMixinStr_EVP_F_CMLL_T4_INIT_KEY = `enum EVP_F_CMLL_T4_INIT_KEY = 179;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_CMLL_T4_INIT_KEY); }))) {
            mixin(enumMixinStr_EVP_F_CMLL_T4_INIT_KEY);
        }
    }




    static if(!is(typeof(EVP_F_CHACHA20_POLY1305_CTRL))) {
        private enum enumMixinStr_EVP_F_CHACHA20_POLY1305_CTRL = `enum EVP_F_CHACHA20_POLY1305_CTRL = 182;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_CHACHA20_POLY1305_CTRL); }))) {
            mixin(enumMixinStr_EVP_F_CHACHA20_POLY1305_CTRL);
        }
    }




    static if(!is(typeof(EVP_F_CAMELLIA_INIT_KEY))) {
        private enum enumMixinStr_EVP_F_CAMELLIA_INIT_KEY = `enum EVP_F_CAMELLIA_INIT_KEY = 159;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_CAMELLIA_INIT_KEY); }))) {
            mixin(enumMixinStr_EVP_F_CAMELLIA_INIT_KEY);
        }
    }




    static if(!is(typeof(EVP_F_B64_NEW))) {
        private enum enumMixinStr_EVP_F_B64_NEW = `enum EVP_F_B64_NEW = 198;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_B64_NEW); }))) {
            mixin(enumMixinStr_EVP_F_B64_NEW);
        }
    }




    static if(!is(typeof(EVP_F_ARIA_INIT_KEY))) {
        private enum enumMixinStr_EVP_F_ARIA_INIT_KEY = `enum EVP_F_ARIA_INIT_KEY = 185;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_ARIA_INIT_KEY); }))) {
            mixin(enumMixinStr_EVP_F_ARIA_INIT_KEY);
        }
    }




    static if(!is(typeof(EVP_F_ARIA_GCM_INIT_KEY))) {
        private enum enumMixinStr_EVP_F_ARIA_GCM_INIT_KEY = `enum EVP_F_ARIA_GCM_INIT_KEY = 176;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_ARIA_GCM_INIT_KEY); }))) {
            mixin(enumMixinStr_EVP_F_ARIA_GCM_INIT_KEY);
        }
    }




    static if(!is(typeof(EVP_F_ARIA_GCM_CTRL))) {
        private enum enumMixinStr_EVP_F_ARIA_GCM_CTRL = `enum EVP_F_ARIA_GCM_CTRL = 197;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_ARIA_GCM_CTRL); }))) {
            mixin(enumMixinStr_EVP_F_ARIA_GCM_CTRL);
        }
    }




    static if(!is(typeof(EVP_F_ARIA_CCM_INIT_KEY))) {
        private enum enumMixinStr_EVP_F_ARIA_CCM_INIT_KEY = `enum EVP_F_ARIA_CCM_INIT_KEY = 175;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_ARIA_CCM_INIT_KEY); }))) {
            mixin(enumMixinStr_EVP_F_ARIA_CCM_INIT_KEY);
        }
    }




    static if(!is(typeof(EVP_F_ALG_MODULE_INIT))) {
        private enum enumMixinStr_EVP_F_ALG_MODULE_INIT = `enum EVP_F_ALG_MODULE_INIT = 177;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_ALG_MODULE_INIT); }))) {
            mixin(enumMixinStr_EVP_F_ALG_MODULE_INIT);
        }
    }




    static if(!is(typeof(EVP_F_AES_XTS_INIT_KEY))) {
        private enum enumMixinStr_EVP_F_AES_XTS_INIT_KEY = `enum EVP_F_AES_XTS_INIT_KEY = 209;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_AES_XTS_INIT_KEY); }))) {
            mixin(enumMixinStr_EVP_F_AES_XTS_INIT_KEY);
        }
    }




    static if(!is(typeof(EVP_F_AES_WRAP_CIPHER))) {
        private enum enumMixinStr_EVP_F_AES_WRAP_CIPHER = `enum EVP_F_AES_WRAP_CIPHER = 170;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_AES_WRAP_CIPHER); }))) {
            mixin(enumMixinStr_EVP_F_AES_WRAP_CIPHER);
        }
    }




    static if(!is(typeof(EVP_F_AES_T4_XTS_INIT_KEY))) {
        private enum enumMixinStr_EVP_F_AES_T4_XTS_INIT_KEY = `enum EVP_F_AES_T4_XTS_INIT_KEY = 208;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_AES_T4_XTS_INIT_KEY); }))) {
            mixin(enumMixinStr_EVP_F_AES_T4_XTS_INIT_KEY);
        }
    }




    static if(!is(typeof(EVP_F_AES_T4_INIT_KEY))) {
        private enum enumMixinStr_EVP_F_AES_T4_INIT_KEY = `enum EVP_F_AES_T4_INIT_KEY = 178;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_AES_T4_INIT_KEY); }))) {
            mixin(enumMixinStr_EVP_F_AES_T4_INIT_KEY);
        }
    }




    static if(!is(typeof(EVP_F_AES_OCB_CIPHER))) {
        private enum enumMixinStr_EVP_F_AES_OCB_CIPHER = `enum EVP_F_AES_OCB_CIPHER = 169;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_AES_OCB_CIPHER); }))) {
            mixin(enumMixinStr_EVP_F_AES_OCB_CIPHER);
        }
    }




    static if(!is(typeof(EVP_F_AES_INIT_KEY))) {
        private enum enumMixinStr_EVP_F_AES_INIT_KEY = `enum EVP_F_AES_INIT_KEY = 133;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_AES_INIT_KEY); }))) {
            mixin(enumMixinStr_EVP_F_AES_INIT_KEY);
        }
    }




    static if(!is(typeof(EVP_F_AES_GCM_CTRL))) {
        private enum enumMixinStr_EVP_F_AES_GCM_CTRL = `enum EVP_F_AES_GCM_CTRL = 196;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_AES_GCM_CTRL); }))) {
            mixin(enumMixinStr_EVP_F_AES_GCM_CTRL);
        }
    }




    static if(!is(typeof(EVP_F_AESNI_XTS_INIT_KEY))) {
        private enum enumMixinStr_EVP_F_AESNI_XTS_INIT_KEY = `enum EVP_F_AESNI_XTS_INIT_KEY = 207;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_AESNI_XTS_INIT_KEY); }))) {
            mixin(enumMixinStr_EVP_F_AESNI_XTS_INIT_KEY);
        }
    }




    static if(!is(typeof(EVP_F_AESNI_INIT_KEY))) {
        private enum enumMixinStr_EVP_F_AESNI_INIT_KEY = `enum EVP_F_AESNI_INIT_KEY = 165;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_F_AESNI_INIT_KEY); }))) {
            mixin(enumMixinStr_EVP_F_AESNI_INIT_KEY);
        }
    }






    static if(!is(typeof(EVP_PKEY_FLAG_SIGCTX_CUSTOM))) {
        private enum enumMixinStr_EVP_PKEY_FLAG_SIGCTX_CUSTOM = `enum EVP_PKEY_FLAG_SIGCTX_CUSTOM = 4;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_FLAG_SIGCTX_CUSTOM); }))) {
            mixin(enumMixinStr_EVP_PKEY_FLAG_SIGCTX_CUSTOM);
        }
    }




    static if(!is(typeof(EVP_PKEY_FLAG_AUTOARGLEN))) {
        private enum enumMixinStr_EVP_PKEY_FLAG_AUTOARGLEN = `enum EVP_PKEY_FLAG_AUTOARGLEN = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_FLAG_AUTOARGLEN); }))) {
            mixin(enumMixinStr_EVP_PKEY_FLAG_AUTOARGLEN);
        }
    }




    static if(!is(typeof(EVP_PKEY_ALG_CTRL))) {
        private enum enumMixinStr_EVP_PKEY_ALG_CTRL = `enum EVP_PKEY_ALG_CTRL = 0x1000;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_ALG_CTRL); }))) {
            mixin(enumMixinStr_EVP_PKEY_ALG_CTRL);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_SET_DIGEST_SIZE))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_SET_DIGEST_SIZE = `enum EVP_PKEY_CTRL_SET_DIGEST_SIZE = 14;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_SET_DIGEST_SIZE); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_SET_DIGEST_SIZE);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_GET_MD))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_GET_MD = `enum EVP_PKEY_CTRL_GET_MD = 13;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_GET_MD); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_GET_MD);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_CIPHER))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_CIPHER = `enum EVP_PKEY_CTRL_CIPHER = 12;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_CIPHER); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_CIPHER);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_CMS_SIGN))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_CMS_SIGN = `enum EVP_PKEY_CTRL_CMS_SIGN = 11;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_CMS_SIGN); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_CMS_SIGN);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_CMS_DECRYPT))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_CMS_DECRYPT = `enum EVP_PKEY_CTRL_CMS_DECRYPT = 10;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_CMS_DECRYPT); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_CMS_DECRYPT);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_CMS_ENCRYPT))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_CMS_ENCRYPT = `enum EVP_PKEY_CTRL_CMS_ENCRYPT = 9;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_CMS_ENCRYPT); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_CMS_ENCRYPT);
        }
    }




    static if(!is(typeof(X509_CRL_set_lastUpdate))) {
        private enum enumMixinStr_X509_CRL_set_lastUpdate = `enum X509_CRL_set_lastUpdate = X509_CRL_set1_lastUpdate;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_CRL_set_lastUpdate); }))) {
            mixin(enumMixinStr_X509_CRL_set_lastUpdate);
        }
    }




    static if(!is(typeof(X509_CRL_set_nextUpdate))) {
        private enum enumMixinStr_X509_CRL_set_nextUpdate = `enum X509_CRL_set_nextUpdate = X509_CRL_set1_nextUpdate;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_CRL_set_nextUpdate); }))) {
            mixin(enumMixinStr_X509_CRL_set_nextUpdate);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_SET_IV))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_SET_IV = `enum EVP_PKEY_CTRL_SET_IV = 8;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_SET_IV); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_SET_IV);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_DIGESTINIT))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_DIGESTINIT = `enum EVP_PKEY_CTRL_DIGESTINIT = 7;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_DIGESTINIT); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_DIGESTINIT);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_SET_MAC_KEY))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_SET_MAC_KEY = `enum EVP_PKEY_CTRL_SET_MAC_KEY = 6;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_SET_MAC_KEY); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_SET_MAC_KEY);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_PKCS7_SIGN))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_PKCS7_SIGN = `enum EVP_PKEY_CTRL_PKCS7_SIGN = 5;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_PKCS7_SIGN); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_PKCS7_SIGN);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_PKCS7_DECRYPT))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_PKCS7_DECRYPT = `enum EVP_PKEY_CTRL_PKCS7_DECRYPT = 4;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_PKCS7_DECRYPT); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_PKCS7_DECRYPT);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_PKCS7_ENCRYPT))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_PKCS7_ENCRYPT = `enum EVP_PKEY_CTRL_PKCS7_ENCRYPT = 3;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_PKCS7_ENCRYPT); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_PKCS7_ENCRYPT);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_PEER_KEY))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_PEER_KEY = `enum EVP_PKEY_CTRL_PEER_KEY = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_PEER_KEY); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_PEER_KEY);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_MD))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_MD = `enum EVP_PKEY_CTRL_MD = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_MD); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_MD);
        }
    }
    static if(!is(typeof(EVP_PKEY_OP_TYPE_GEN))) {
        private enum enumMixinStr_EVP_PKEY_OP_TYPE_GEN = `enum EVP_PKEY_OP_TYPE_GEN = ( EVP_PKEY_OP_PARAMGEN | EVP_PKEY_OP_KEYGEN );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_OP_TYPE_GEN); }))) {
            mixin(enumMixinStr_EVP_PKEY_OP_TYPE_GEN);
        }
    }




    static if(!is(typeof(EVP_PKEY_OP_TYPE_NOGEN))) {
        private enum enumMixinStr_EVP_PKEY_OP_TYPE_NOGEN = `enum EVP_PKEY_OP_TYPE_NOGEN = ( EVP_PKEY_OP_TYPE_SIG | EVP_PKEY_OP_TYPE_CRYPT | EVP_PKEY_OP_DERIVE );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_OP_TYPE_NOGEN); }))) {
            mixin(enumMixinStr_EVP_PKEY_OP_TYPE_NOGEN);
        }
    }




    static if(!is(typeof(EVP_PKEY_OP_TYPE_CRYPT))) {
        private enum enumMixinStr_EVP_PKEY_OP_TYPE_CRYPT = `enum EVP_PKEY_OP_TYPE_CRYPT = ( EVP_PKEY_OP_ENCRYPT | EVP_PKEY_OP_DECRYPT );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_OP_TYPE_CRYPT); }))) {
            mixin(enumMixinStr_EVP_PKEY_OP_TYPE_CRYPT);
        }
    }




    static if(!is(typeof(EVP_PKEY_OP_TYPE_SIG))) {
        private enum enumMixinStr_EVP_PKEY_OP_TYPE_SIG = `enum EVP_PKEY_OP_TYPE_SIG = ( EVP_PKEY_OP_SIGN | EVP_PKEY_OP_VERIFY | EVP_PKEY_OP_VERIFYRECOVER | EVP_PKEY_OP_SIGNCTX | EVP_PKEY_OP_VERIFYCTX );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_OP_TYPE_SIG); }))) {
            mixin(enumMixinStr_EVP_PKEY_OP_TYPE_SIG);
        }
    }




    static if(!is(typeof(EVP_PKEY_OP_DERIVE))) {
        private enum enumMixinStr_EVP_PKEY_OP_DERIVE = `enum EVP_PKEY_OP_DERIVE = ( 1 << 10 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_OP_DERIVE); }))) {
            mixin(enumMixinStr_EVP_PKEY_OP_DERIVE);
        }
    }




    static if(!is(typeof(EVP_PKEY_OP_DECRYPT))) {
        private enum enumMixinStr_EVP_PKEY_OP_DECRYPT = `enum EVP_PKEY_OP_DECRYPT = ( 1 << 9 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_OP_DECRYPT); }))) {
            mixin(enumMixinStr_EVP_PKEY_OP_DECRYPT);
        }
    }




    static if(!is(typeof(EVP_PKEY_OP_ENCRYPT))) {
        private enum enumMixinStr_EVP_PKEY_OP_ENCRYPT = `enum EVP_PKEY_OP_ENCRYPT = ( 1 << 8 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_OP_ENCRYPT); }))) {
            mixin(enumMixinStr_EVP_PKEY_OP_ENCRYPT);
        }
    }




    static if(!is(typeof(EVP_PKEY_OP_VERIFYCTX))) {
        private enum enumMixinStr_EVP_PKEY_OP_VERIFYCTX = `enum EVP_PKEY_OP_VERIFYCTX = ( 1 << 7 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_OP_VERIFYCTX); }))) {
            mixin(enumMixinStr_EVP_PKEY_OP_VERIFYCTX);
        }
    }




    static if(!is(typeof(EVP_PKEY_OP_SIGNCTX))) {
        private enum enumMixinStr_EVP_PKEY_OP_SIGNCTX = `enum EVP_PKEY_OP_SIGNCTX = ( 1 << 6 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_OP_SIGNCTX); }))) {
            mixin(enumMixinStr_EVP_PKEY_OP_SIGNCTX);
        }
    }




    static if(!is(typeof(EVP_PKEY_OP_VERIFYRECOVER))) {
        private enum enumMixinStr_EVP_PKEY_OP_VERIFYRECOVER = `enum EVP_PKEY_OP_VERIFYRECOVER = ( 1 << 5 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_OP_VERIFYRECOVER); }))) {
            mixin(enumMixinStr_EVP_PKEY_OP_VERIFYRECOVER);
        }
    }




    static if(!is(typeof(EVP_PKEY_OP_VERIFY))) {
        private enum enumMixinStr_EVP_PKEY_OP_VERIFY = `enum EVP_PKEY_OP_VERIFY = ( 1 << 4 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_OP_VERIFY); }))) {
            mixin(enumMixinStr_EVP_PKEY_OP_VERIFY);
        }
    }




    static if(!is(typeof(EVP_PKEY_OP_SIGN))) {
        private enum enumMixinStr_EVP_PKEY_OP_SIGN = `enum EVP_PKEY_OP_SIGN = ( 1 << 3 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_OP_SIGN); }))) {
            mixin(enumMixinStr_EVP_PKEY_OP_SIGN);
        }
    }




    static if(!is(typeof(EVP_PKEY_OP_KEYGEN))) {
        private enum enumMixinStr_EVP_PKEY_OP_KEYGEN = `enum EVP_PKEY_OP_KEYGEN = ( 1 << 2 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_OP_KEYGEN); }))) {
            mixin(enumMixinStr_EVP_PKEY_OP_KEYGEN);
        }
    }




    static if(!is(typeof(EVP_PKEY_OP_PARAMGEN))) {
        private enum enumMixinStr_EVP_PKEY_OP_PARAMGEN = `enum EVP_PKEY_OP_PARAMGEN = ( 1 << 1 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_OP_PARAMGEN); }))) {
            mixin(enumMixinStr_EVP_PKEY_OP_PARAMGEN);
        }
    }




    static if(!is(typeof(EVP_PKEY_OP_UNDEFINED))) {
        private enum enumMixinStr_EVP_PKEY_OP_UNDEFINED = `enum EVP_PKEY_OP_UNDEFINED = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_OP_UNDEFINED); }))) {
            mixin(enumMixinStr_EVP_PKEY_OP_UNDEFINED);
        }
    }




    static if(!is(typeof(ASN1_PKEY_CTRL_GET1_TLS_ENCPT))) {
        private enum enumMixinStr_ASN1_PKEY_CTRL_GET1_TLS_ENCPT = `enum ASN1_PKEY_CTRL_GET1_TLS_ENCPT = 0xa;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_PKEY_CTRL_GET1_TLS_ENCPT); }))) {
            mixin(enumMixinStr_ASN1_PKEY_CTRL_GET1_TLS_ENCPT);
        }
    }




    static if(!is(typeof(ASN1_PKEY_CTRL_SET1_TLS_ENCPT))) {
        private enum enumMixinStr_ASN1_PKEY_CTRL_SET1_TLS_ENCPT = `enum ASN1_PKEY_CTRL_SET1_TLS_ENCPT = 0x9;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_PKEY_CTRL_SET1_TLS_ENCPT); }))) {
            mixin(enumMixinStr_ASN1_PKEY_CTRL_SET1_TLS_ENCPT);
        }
    }




    static if(!is(typeof(ASN1_PKEY_CTRL_CMS_RI_TYPE))) {
        private enum enumMixinStr_ASN1_PKEY_CTRL_CMS_RI_TYPE = `enum ASN1_PKEY_CTRL_CMS_RI_TYPE = 0x8;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_PKEY_CTRL_CMS_RI_TYPE); }))) {
            mixin(enumMixinStr_ASN1_PKEY_CTRL_CMS_RI_TYPE);
        }
    }




    static if(!is(typeof(ASN1_PKEY_CTRL_CMS_ENVELOPE))) {
        private enum enumMixinStr_ASN1_PKEY_CTRL_CMS_ENVELOPE = `enum ASN1_PKEY_CTRL_CMS_ENVELOPE = 0x7;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_PKEY_CTRL_CMS_ENVELOPE); }))) {
            mixin(enumMixinStr_ASN1_PKEY_CTRL_CMS_ENVELOPE);
        }
    }




    static if(!is(typeof(ASN1_PKEY_CTRL_CMS_SIGN))) {
        private enum enumMixinStr_ASN1_PKEY_CTRL_CMS_SIGN = `enum ASN1_PKEY_CTRL_CMS_SIGN = 0x5;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_PKEY_CTRL_CMS_SIGN); }))) {
            mixin(enumMixinStr_ASN1_PKEY_CTRL_CMS_SIGN);
        }
    }




    static if(!is(typeof(ASN1_PKEY_CTRL_DEFAULT_MD_NID))) {
        private enum enumMixinStr_ASN1_PKEY_CTRL_DEFAULT_MD_NID = `enum ASN1_PKEY_CTRL_DEFAULT_MD_NID = 0x3;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_PKEY_CTRL_DEFAULT_MD_NID); }))) {
            mixin(enumMixinStr_ASN1_PKEY_CTRL_DEFAULT_MD_NID);
        }
    }




    static if(!is(typeof(ASN1_PKEY_CTRL_PKCS7_ENCRYPT))) {
        private enum enumMixinStr_ASN1_PKEY_CTRL_PKCS7_ENCRYPT = `enum ASN1_PKEY_CTRL_PKCS7_ENCRYPT = 0x2;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_PKEY_CTRL_PKCS7_ENCRYPT); }))) {
            mixin(enumMixinStr_ASN1_PKEY_CTRL_PKCS7_ENCRYPT);
        }
    }




    static if(!is(typeof(ASN1_PKEY_CTRL_PKCS7_SIGN))) {
        private enum enumMixinStr_ASN1_PKEY_CTRL_PKCS7_SIGN = `enum ASN1_PKEY_CTRL_PKCS7_SIGN = 0x1;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_PKEY_CTRL_PKCS7_SIGN); }))) {
            mixin(enumMixinStr_ASN1_PKEY_CTRL_PKCS7_SIGN);
        }
    }




    static if(!is(typeof(ASN1_PKEY_SIGPARAM_NULL))) {
        private enum enumMixinStr_ASN1_PKEY_SIGPARAM_NULL = `enum ASN1_PKEY_SIGPARAM_NULL = 0x4;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_PKEY_SIGPARAM_NULL); }))) {
            mixin(enumMixinStr_ASN1_PKEY_SIGPARAM_NULL);
        }
    }




    static if(!is(typeof(ASN1_PKEY_DYNAMIC))) {
        private enum enumMixinStr_ASN1_PKEY_DYNAMIC = `enum ASN1_PKEY_DYNAMIC = 0x2;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_PKEY_DYNAMIC); }))) {
            mixin(enumMixinStr_ASN1_PKEY_DYNAMIC);
        }
    }




    static if(!is(typeof(ASN1_PKEY_ALIAS))) {
        private enum enumMixinStr_ASN1_PKEY_ALIAS = `enum ASN1_PKEY_ALIAS = 0x1;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_PKEY_ALIAS); }))) {
            mixin(enumMixinStr_ASN1_PKEY_ALIAS);
        }
    }




    static if(!is(typeof(EVP_PBE_TYPE_KDF))) {
        private enum enumMixinStr_EVP_PBE_TYPE_KDF = `enum EVP_PBE_TYPE_KDF = 0x2;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PBE_TYPE_KDF); }))) {
            mixin(enumMixinStr_EVP_PBE_TYPE_KDF);
        }
    }




    static if(!is(typeof(EVP_PBE_TYPE_PRF))) {
        private enum enumMixinStr_EVP_PBE_TYPE_PRF = `enum EVP_PBE_TYPE_PRF = 0x1;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PBE_TYPE_PRF); }))) {
            mixin(enumMixinStr_EVP_PBE_TYPE_PRF);
        }
    }




    static if(!is(typeof(EVP_PBE_TYPE_OUTER))) {
        private enum enumMixinStr_EVP_PBE_TYPE_OUTER = `enum EVP_PBE_TYPE_OUTER = 0x0;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PBE_TYPE_OUTER); }))) {
            mixin(enumMixinStr_EVP_PBE_TYPE_OUTER);
        }
    }
    static if(!is(typeof(EVP_sm4_cfb))) {
        private enum enumMixinStr_EVP_sm4_cfb = `enum EVP_sm4_cfb = EVP_sm4_cfb128;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_sm4_cfb); }))) {
            mixin(enumMixinStr_EVP_sm4_cfb);
        }
    }




    static if(!is(typeof(EVP_seed_cfb))) {
        private enum enumMixinStr_EVP_seed_cfb = `enum EVP_seed_cfb = EVP_seed_cfb128;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_seed_cfb); }))) {
            mixin(enumMixinStr_EVP_seed_cfb);
        }
    }




    static if(!is(typeof(EVP_camellia_256_cfb))) {
        private enum enumMixinStr_EVP_camellia_256_cfb = `enum EVP_camellia_256_cfb = EVP_camellia_256_cfb128;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_camellia_256_cfb); }))) {
            mixin(enumMixinStr_EVP_camellia_256_cfb);
        }
    }




    static if(!is(typeof(EVP_camellia_192_cfb))) {
        private enum enumMixinStr_EVP_camellia_192_cfb = `enum EVP_camellia_192_cfb = EVP_camellia_192_cfb128;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_camellia_192_cfb); }))) {
            mixin(enumMixinStr_EVP_camellia_192_cfb);
        }
    }




    static if(!is(typeof(EVP_camellia_128_cfb))) {
        private enum enumMixinStr_EVP_camellia_128_cfb = `enum EVP_camellia_128_cfb = EVP_camellia_128_cfb128;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_camellia_128_cfb); }))) {
            mixin(enumMixinStr_EVP_camellia_128_cfb);
        }
    }




    static if(!is(typeof(EVP_aria_256_cfb))) {
        private enum enumMixinStr_EVP_aria_256_cfb = `enum EVP_aria_256_cfb = EVP_aria_256_cfb128;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_aria_256_cfb); }))) {
            mixin(enumMixinStr_EVP_aria_256_cfb);
        }
    }




    static if(!is(typeof(EVP_aria_192_cfb))) {
        private enum enumMixinStr_EVP_aria_192_cfb = `enum EVP_aria_192_cfb = EVP_aria_192_cfb128;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_aria_192_cfb); }))) {
            mixin(enumMixinStr_EVP_aria_192_cfb);
        }
    }




    static if(!is(typeof(EVP_aria_128_cfb))) {
        private enum enumMixinStr_EVP_aria_128_cfb = `enum EVP_aria_128_cfb = EVP_aria_128_cfb128;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_aria_128_cfb); }))) {
            mixin(enumMixinStr_EVP_aria_128_cfb);
        }
    }




    static if(!is(typeof(EVP_aes_256_cfb))) {
        private enum enumMixinStr_EVP_aes_256_cfb = `enum EVP_aes_256_cfb = EVP_aes_256_cfb128;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_aes_256_cfb); }))) {
            mixin(enumMixinStr_EVP_aes_256_cfb);
        }
    }




    static if(!is(typeof(EVP_aes_192_cfb))) {
        private enum enumMixinStr_EVP_aes_192_cfb = `enum EVP_aes_192_cfb = EVP_aes_192_cfb128;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_aes_192_cfb); }))) {
            mixin(enumMixinStr_EVP_aes_192_cfb);
        }
    }




    static if(!is(typeof(EVP_aes_128_cfb))) {
        private enum enumMixinStr_EVP_aes_128_cfb = `enum EVP_aes_128_cfb = EVP_aes_128_cfb128;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_aes_128_cfb); }))) {
            mixin(enumMixinStr_EVP_aes_128_cfb);
        }
    }




    static if(!is(typeof(EVP_cast5_cfb))) {
        private enum enumMixinStr_EVP_cast5_cfb = `enum EVP_cast5_cfb = EVP_cast5_cfb64;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_cast5_cfb); }))) {
            mixin(enumMixinStr_EVP_cast5_cfb);
        }
    }




    static if(!is(typeof(EVP_bf_cfb))) {
        private enum enumMixinStr_EVP_bf_cfb = `enum EVP_bf_cfb = EVP_bf_cfb64;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_bf_cfb); }))) {
            mixin(enumMixinStr_EVP_bf_cfb);
        }
    }




    static if(!is(typeof(EVP_rc2_cfb))) {
        private enum enumMixinStr_EVP_rc2_cfb = `enum EVP_rc2_cfb = EVP_rc2_cfb64;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_rc2_cfb); }))) {
            mixin(enumMixinStr_EVP_rc2_cfb);
        }
    }




    static if(!is(typeof(EVP_idea_cfb))) {
        private enum enumMixinStr_EVP_idea_cfb = `enum EVP_idea_cfb = EVP_idea_cfb64;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_idea_cfb); }))) {
            mixin(enumMixinStr_EVP_idea_cfb);
        }
    }




    static if(!is(typeof(EVP_des_ede3_cfb))) {
        private enum enumMixinStr_EVP_des_ede3_cfb = `enum EVP_des_ede3_cfb = EVP_des_ede3_cfb64;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_des_ede3_cfb); }))) {
            mixin(enumMixinStr_EVP_des_ede3_cfb);
        }
    }




    static if(!is(typeof(EVP_des_ede_cfb))) {
        private enum enumMixinStr_EVP_des_ede_cfb = `enum EVP_des_ede_cfb = EVP_des_ede_cfb64;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_des_ede_cfb); }))) {
            mixin(enumMixinStr_EVP_des_ede_cfb);
        }
    }




    static if(!is(typeof(EVP_des_cfb))) {
        private enum enumMixinStr_EVP_des_cfb = `enum EVP_des_cfb = EVP_des_cfb64;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_des_cfb); }))) {
            mixin(enumMixinStr_EVP_des_cfb);
        }
    }
    static if(!is(typeof(EVP_CHACHAPOLY_TLS_TAG_LEN))) {
        private enum enumMixinStr_EVP_CHACHAPOLY_TLS_TAG_LEN = `enum EVP_CHACHAPOLY_TLS_TAG_LEN = 16;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CHACHAPOLY_TLS_TAG_LEN); }))) {
            mixin(enumMixinStr_EVP_CHACHAPOLY_TLS_TAG_LEN);
        }
    }




    static if(!is(typeof(EVP_CCM8_TLS_TAG_LEN))) {
        private enum enumMixinStr_EVP_CCM8_TLS_TAG_LEN = `enum EVP_CCM8_TLS_TAG_LEN = 8;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CCM8_TLS_TAG_LEN); }))) {
            mixin(enumMixinStr_EVP_CCM8_TLS_TAG_LEN);
        }
    }




    static if(!is(typeof(EVP_CCM_TLS_TAG_LEN))) {
        private enum enumMixinStr_EVP_CCM_TLS_TAG_LEN = `enum EVP_CCM_TLS_TAG_LEN = 16;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CCM_TLS_TAG_LEN); }))) {
            mixin(enumMixinStr_EVP_CCM_TLS_TAG_LEN);
        }
    }




    static if(!is(typeof(EVP_CCM_TLS_IV_LEN))) {
        private enum enumMixinStr_EVP_CCM_TLS_IV_LEN = `enum EVP_CCM_TLS_IV_LEN = 12;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CCM_TLS_IV_LEN); }))) {
            mixin(enumMixinStr_EVP_CCM_TLS_IV_LEN);
        }
    }




    static if(!is(typeof(EVP_CCM_TLS_EXPLICIT_IV_LEN))) {
        private enum enumMixinStr_EVP_CCM_TLS_EXPLICIT_IV_LEN = `enum EVP_CCM_TLS_EXPLICIT_IV_LEN = 8;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CCM_TLS_EXPLICIT_IV_LEN); }))) {
            mixin(enumMixinStr_EVP_CCM_TLS_EXPLICIT_IV_LEN);
        }
    }




    static if(!is(typeof(EVP_CCM_TLS_FIXED_IV_LEN))) {
        private enum enumMixinStr_EVP_CCM_TLS_FIXED_IV_LEN = `enum EVP_CCM_TLS_FIXED_IV_LEN = 4;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CCM_TLS_FIXED_IV_LEN); }))) {
            mixin(enumMixinStr_EVP_CCM_TLS_FIXED_IV_LEN);
        }
    }




    static if(!is(typeof(EVP_GCM_TLS_TAG_LEN))) {
        private enum enumMixinStr_EVP_GCM_TLS_TAG_LEN = `enum EVP_GCM_TLS_TAG_LEN = 16;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_GCM_TLS_TAG_LEN); }))) {
            mixin(enumMixinStr_EVP_GCM_TLS_TAG_LEN);
        }
    }




    static if(!is(typeof(EVP_GCM_TLS_EXPLICIT_IV_LEN))) {
        private enum enumMixinStr_EVP_GCM_TLS_EXPLICIT_IV_LEN = `enum EVP_GCM_TLS_EXPLICIT_IV_LEN = 8;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_GCM_TLS_EXPLICIT_IV_LEN); }))) {
            mixin(enumMixinStr_EVP_GCM_TLS_EXPLICIT_IV_LEN);
        }
    }




    static if(!is(typeof(EVP_GCM_TLS_FIXED_IV_LEN))) {
        private enum enumMixinStr_EVP_GCM_TLS_FIXED_IV_LEN = `enum EVP_GCM_TLS_FIXED_IV_LEN = 4;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_GCM_TLS_FIXED_IV_LEN); }))) {
            mixin(enumMixinStr_EVP_GCM_TLS_FIXED_IV_LEN);
        }
    }




    static if(!is(typeof(EVP_AEAD_TLS1_AAD_LEN))) {
        private enum enumMixinStr_EVP_AEAD_TLS1_AAD_LEN = `enum EVP_AEAD_TLS1_AAD_LEN = 13;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_AEAD_TLS1_AAD_LEN); }))) {
            mixin(enumMixinStr_EVP_AEAD_TLS1_AAD_LEN);
        }
    }




    static if(!is(typeof(EVP_PADDING_ZERO))) {
        private enum enumMixinStr_EVP_PADDING_ZERO = `enum EVP_PADDING_ZERO = 5;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PADDING_ZERO); }))) {
            mixin(enumMixinStr_EVP_PADDING_ZERO);
        }
    }




    static if(!is(typeof(EVP_PADDING_ISO10126))) {
        private enum enumMixinStr_EVP_PADDING_ISO10126 = `enum EVP_PADDING_ISO10126 = 4;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PADDING_ISO10126); }))) {
            mixin(enumMixinStr_EVP_PADDING_ISO10126);
        }
    }




    static if(!is(typeof(EVP_PADDING_ANSI923))) {
        private enum enumMixinStr_EVP_PADDING_ANSI923 = `enum EVP_PADDING_ANSI923 = 3;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PADDING_ANSI923); }))) {
            mixin(enumMixinStr_EVP_PADDING_ANSI923);
        }
    }




    static if(!is(typeof(EVP_PADDING_ISO7816_4))) {
        private enum enumMixinStr_EVP_PADDING_ISO7816_4 = `enum EVP_PADDING_ISO7816_4 = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PADDING_ISO7816_4); }))) {
            mixin(enumMixinStr_EVP_PADDING_ISO7816_4);
        }
    }




    static if(!is(typeof(EVP_PADDING_PKCS7))) {
        private enum enumMixinStr_EVP_PADDING_PKCS7 = `enum EVP_PADDING_PKCS7 = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PADDING_PKCS7); }))) {
            mixin(enumMixinStr_EVP_PADDING_PKCS7);
        }
    }




    static if(!is(typeof(EVP_CTRL_GET_IVLEN))) {
        private enum enumMixinStr_EVP_CTRL_GET_IVLEN = `enum EVP_CTRL_GET_IVLEN = 0x25;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_GET_IVLEN); }))) {
            mixin(enumMixinStr_EVP_CTRL_GET_IVLEN);
        }
    }




    static if(!is(typeof(EVP_CTRL_SET_PIPELINE_INPUT_LENS))) {
        private enum enumMixinStr_EVP_CTRL_SET_PIPELINE_INPUT_LENS = `enum EVP_CTRL_SET_PIPELINE_INPUT_LENS = 0x24;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_SET_PIPELINE_INPUT_LENS); }))) {
            mixin(enumMixinStr_EVP_CTRL_SET_PIPELINE_INPUT_LENS);
        }
    }




    static if(!is(typeof(EVP_CTRL_SET_PIPELINE_INPUT_BUFS))) {
        private enum enumMixinStr_EVP_CTRL_SET_PIPELINE_INPUT_BUFS = `enum EVP_CTRL_SET_PIPELINE_INPUT_BUFS = 0x23;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_SET_PIPELINE_INPUT_BUFS); }))) {
            mixin(enumMixinStr_EVP_CTRL_SET_PIPELINE_INPUT_BUFS);
        }
    }




    static if(!is(typeof(EVP_CTRL_SET_PIPELINE_OUTPUT_BUFS))) {
        private enum enumMixinStr_EVP_CTRL_SET_PIPELINE_OUTPUT_BUFS = `enum EVP_CTRL_SET_PIPELINE_OUTPUT_BUFS = 0x22;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_SET_PIPELINE_OUTPUT_BUFS); }))) {
            mixin(enumMixinStr_EVP_CTRL_SET_PIPELINE_OUTPUT_BUFS);
        }
    }




    static if(!is(typeof(EVP_CTRL_BLOCK_PADDING_MODE))) {
        private enum enumMixinStr_EVP_CTRL_BLOCK_PADDING_MODE = `enum EVP_CTRL_BLOCK_PADDING_MODE = 0x21;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_BLOCK_PADDING_MODE); }))) {
            mixin(enumMixinStr_EVP_CTRL_BLOCK_PADDING_MODE);
        }
    }




    static if(!is(typeof(EVP_CTRL_KEY_MESH))) {
        private enum enumMixinStr_EVP_CTRL_KEY_MESH = `enum EVP_CTRL_KEY_MESH = 0x20;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_KEY_MESH); }))) {
            mixin(enumMixinStr_EVP_CTRL_KEY_MESH);
        }
    }




    static if(!is(typeof(EVP_CTRL_SBOX_USED))) {
        private enum enumMixinStr_EVP_CTRL_SBOX_USED = `enum EVP_CTRL_SBOX_USED = 0x1f;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_SBOX_USED); }))) {
            mixin(enumMixinStr_EVP_CTRL_SBOX_USED);
        }
    }




    static if(!is(typeof(EVP_CTRL_SET_SBOX))) {
        private enum enumMixinStr_EVP_CTRL_SET_SBOX = `enum EVP_CTRL_SET_SBOX = 0x1e;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_SET_SBOX); }))) {
            mixin(enumMixinStr_EVP_CTRL_SET_SBOX);
        }
    }




    static if(!is(typeof(EVP_CTRL_SSL3_MASTER_SECRET))) {
        private enum enumMixinStr_EVP_CTRL_SSL3_MASTER_SECRET = `enum EVP_CTRL_SSL3_MASTER_SECRET = 0x1d;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_SSL3_MASTER_SECRET); }))) {
            mixin(enumMixinStr_EVP_CTRL_SSL3_MASTER_SECRET);
        }
    }




    static if(!is(typeof(EVP_CTRL_TLS1_1_MULTIBLOCK_MAX_BUFSIZE))) {
        private enum enumMixinStr_EVP_CTRL_TLS1_1_MULTIBLOCK_MAX_BUFSIZE = `enum EVP_CTRL_TLS1_1_MULTIBLOCK_MAX_BUFSIZE = 0x1c;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_TLS1_1_MULTIBLOCK_MAX_BUFSIZE); }))) {
            mixin(enumMixinStr_EVP_CTRL_TLS1_1_MULTIBLOCK_MAX_BUFSIZE);
        }
    }




    static if(!is(typeof(EVP_CTRL_TLS1_1_MULTIBLOCK_DECRYPT))) {
        private enum enumMixinStr_EVP_CTRL_TLS1_1_MULTIBLOCK_DECRYPT = `enum EVP_CTRL_TLS1_1_MULTIBLOCK_DECRYPT = 0x1b;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_TLS1_1_MULTIBLOCK_DECRYPT); }))) {
            mixin(enumMixinStr_EVP_CTRL_TLS1_1_MULTIBLOCK_DECRYPT);
        }
    }




    static if(!is(typeof(EVP_CTRL_TLS1_1_MULTIBLOCK_ENCRYPT))) {
        private enum enumMixinStr_EVP_CTRL_TLS1_1_MULTIBLOCK_ENCRYPT = `enum EVP_CTRL_TLS1_1_MULTIBLOCK_ENCRYPT = 0x1a;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_TLS1_1_MULTIBLOCK_ENCRYPT); }))) {
            mixin(enumMixinStr_EVP_CTRL_TLS1_1_MULTIBLOCK_ENCRYPT);
        }
    }




    static if(!is(typeof(EVP_CTRL_TLS1_1_MULTIBLOCK_AAD))) {
        private enum enumMixinStr_EVP_CTRL_TLS1_1_MULTIBLOCK_AAD = `enum EVP_CTRL_TLS1_1_MULTIBLOCK_AAD = 0x19;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_TLS1_1_MULTIBLOCK_AAD); }))) {
            mixin(enumMixinStr_EVP_CTRL_TLS1_1_MULTIBLOCK_AAD);
        }
    }




    static if(!is(typeof(EVP_CTRL_GCM_SET_IV_INV))) {
        private enum enumMixinStr_EVP_CTRL_GCM_SET_IV_INV = `enum EVP_CTRL_GCM_SET_IV_INV = 0x18;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_GCM_SET_IV_INV); }))) {
            mixin(enumMixinStr_EVP_CTRL_GCM_SET_IV_INV);
        }
    }




    static if(!is(typeof(EVP_CTRL_AEAD_SET_MAC_KEY))) {
        private enum enumMixinStr_EVP_CTRL_AEAD_SET_MAC_KEY = `enum EVP_CTRL_AEAD_SET_MAC_KEY = 0x17;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_AEAD_SET_MAC_KEY); }))) {
            mixin(enumMixinStr_EVP_CTRL_AEAD_SET_MAC_KEY);
        }
    }




    static if(!is(typeof(EVP_CTRL_AEAD_TLS1_AAD))) {
        private enum enumMixinStr_EVP_CTRL_AEAD_TLS1_AAD = `enum EVP_CTRL_AEAD_TLS1_AAD = 0x16;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_AEAD_TLS1_AAD); }))) {
            mixin(enumMixinStr_EVP_CTRL_AEAD_TLS1_AAD);
        }
    }




    static if(!is(typeof(EVP_CTRL_CCM_SET_MSGLEN))) {
        private enum enumMixinStr_EVP_CTRL_CCM_SET_MSGLEN = `enum EVP_CTRL_CCM_SET_MSGLEN = 0x15;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_CCM_SET_MSGLEN); }))) {
            mixin(enumMixinStr_EVP_CTRL_CCM_SET_MSGLEN);
        }
    }




    static if(!is(typeof(EVP_CTRL_CCM_SET_L))) {
        private enum enumMixinStr_EVP_CTRL_CCM_SET_L = `enum EVP_CTRL_CCM_SET_L = 0x14;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_CCM_SET_L); }))) {
            mixin(enumMixinStr_EVP_CTRL_CCM_SET_L);
        }
    }




    static if(!is(typeof(EVP_CTRL_CCM_SET_IV_FIXED))) {
        private enum enumMixinStr_EVP_CTRL_CCM_SET_IV_FIXED = `enum EVP_CTRL_CCM_SET_IV_FIXED = EVP_CTRL_AEAD_SET_IV_FIXED;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_CCM_SET_IV_FIXED); }))) {
            mixin(enumMixinStr_EVP_CTRL_CCM_SET_IV_FIXED);
        }
    }




    static if(!is(typeof(EVP_CTRL_CCM_SET_TAG))) {
        private enum enumMixinStr_EVP_CTRL_CCM_SET_TAG = `enum EVP_CTRL_CCM_SET_TAG = EVP_CTRL_AEAD_SET_TAG;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_CCM_SET_TAG); }))) {
            mixin(enumMixinStr_EVP_CTRL_CCM_SET_TAG);
        }
    }




    static if(!is(typeof(EVP_CTRL_CCM_GET_TAG))) {
        private enum enumMixinStr_EVP_CTRL_CCM_GET_TAG = `enum EVP_CTRL_CCM_GET_TAG = EVP_CTRL_AEAD_GET_TAG;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_CCM_GET_TAG); }))) {
            mixin(enumMixinStr_EVP_CTRL_CCM_GET_TAG);
        }
    }




    static if(!is(typeof(EVP_CTRL_CCM_SET_IVLEN))) {
        private enum enumMixinStr_EVP_CTRL_CCM_SET_IVLEN = `enum EVP_CTRL_CCM_SET_IVLEN = EVP_CTRL_AEAD_SET_IVLEN;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_CCM_SET_IVLEN); }))) {
            mixin(enumMixinStr_EVP_CTRL_CCM_SET_IVLEN);
        }
    }




    static if(!is(typeof(EVP_CTRL_GCM_IV_GEN))) {
        private enum enumMixinStr_EVP_CTRL_GCM_IV_GEN = `enum EVP_CTRL_GCM_IV_GEN = 0x13;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_GCM_IV_GEN); }))) {
            mixin(enumMixinStr_EVP_CTRL_GCM_IV_GEN);
        }
    }




    static if(!is(typeof(EVP_CTRL_GCM_SET_IV_FIXED))) {
        private enum enumMixinStr_EVP_CTRL_GCM_SET_IV_FIXED = `enum EVP_CTRL_GCM_SET_IV_FIXED = EVP_CTRL_AEAD_SET_IV_FIXED;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_GCM_SET_IV_FIXED); }))) {
            mixin(enumMixinStr_EVP_CTRL_GCM_SET_IV_FIXED);
        }
    }




    static if(!is(typeof(EVP_CTRL_GCM_SET_TAG))) {
        private enum enumMixinStr_EVP_CTRL_GCM_SET_TAG = `enum EVP_CTRL_GCM_SET_TAG = EVP_CTRL_AEAD_SET_TAG;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_GCM_SET_TAG); }))) {
            mixin(enumMixinStr_EVP_CTRL_GCM_SET_TAG);
        }
    }




    static if(!is(typeof(EVP_CTRL_GCM_GET_TAG))) {
        private enum enumMixinStr_EVP_CTRL_GCM_GET_TAG = `enum EVP_CTRL_GCM_GET_TAG = EVP_CTRL_AEAD_GET_TAG;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_GCM_GET_TAG); }))) {
            mixin(enumMixinStr_EVP_CTRL_GCM_GET_TAG);
        }
    }




    static if(!is(typeof(EVP_CTRL_GCM_SET_IVLEN))) {
        private enum enumMixinStr_EVP_CTRL_GCM_SET_IVLEN = `enum EVP_CTRL_GCM_SET_IVLEN = EVP_CTRL_AEAD_SET_IVLEN;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_GCM_SET_IVLEN); }))) {
            mixin(enumMixinStr_EVP_CTRL_GCM_SET_IVLEN);
        }
    }




    static if(!is(typeof(EVP_CTRL_AEAD_SET_IV_FIXED))) {
        private enum enumMixinStr_EVP_CTRL_AEAD_SET_IV_FIXED = `enum EVP_CTRL_AEAD_SET_IV_FIXED = 0x12;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_AEAD_SET_IV_FIXED); }))) {
            mixin(enumMixinStr_EVP_CTRL_AEAD_SET_IV_FIXED);
        }
    }




    static if(!is(typeof(EVP_CTRL_AEAD_SET_TAG))) {
        private enum enumMixinStr_EVP_CTRL_AEAD_SET_TAG = `enum EVP_CTRL_AEAD_SET_TAG = 0x11;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_AEAD_SET_TAG); }))) {
            mixin(enumMixinStr_EVP_CTRL_AEAD_SET_TAG);
        }
    }




    static if(!is(typeof(EVP_CTRL_AEAD_GET_TAG))) {
        private enum enumMixinStr_EVP_CTRL_AEAD_GET_TAG = `enum EVP_CTRL_AEAD_GET_TAG = 0x10;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_AEAD_GET_TAG); }))) {
            mixin(enumMixinStr_EVP_CTRL_AEAD_GET_TAG);
        }
    }




    static if(!is(typeof(EVP_CTRL_AEAD_SET_IVLEN))) {
        private enum enumMixinStr_EVP_CTRL_AEAD_SET_IVLEN = `enum EVP_CTRL_AEAD_SET_IVLEN = 0x9;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_AEAD_SET_IVLEN); }))) {
            mixin(enumMixinStr_EVP_CTRL_AEAD_SET_IVLEN);
        }
    }




    static if(!is(typeof(EVP_CTRL_COPY))) {
        private enum enumMixinStr_EVP_CTRL_COPY = `enum EVP_CTRL_COPY = 0x8;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_COPY); }))) {
            mixin(enumMixinStr_EVP_CTRL_COPY);
        }
    }




    static if(!is(typeof(EVP_CTRL_PBE_PRF_NID))) {
        private enum enumMixinStr_EVP_CTRL_PBE_PRF_NID = `enum EVP_CTRL_PBE_PRF_NID = 0x7;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_PBE_PRF_NID); }))) {
            mixin(enumMixinStr_EVP_CTRL_PBE_PRF_NID);
        }
    }




    static if(!is(typeof(EVP_CTRL_RAND_KEY))) {
        private enum enumMixinStr_EVP_CTRL_RAND_KEY = `enum EVP_CTRL_RAND_KEY = 0x6;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_RAND_KEY); }))) {
            mixin(enumMixinStr_EVP_CTRL_RAND_KEY);
        }
    }




    static if(!is(typeof(EVP_CTRL_SET_RC5_ROUNDS))) {
        private enum enumMixinStr_EVP_CTRL_SET_RC5_ROUNDS = `enum EVP_CTRL_SET_RC5_ROUNDS = 0x5;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_SET_RC5_ROUNDS); }))) {
            mixin(enumMixinStr_EVP_CTRL_SET_RC5_ROUNDS);
        }
    }




    static if(!is(typeof(EVP_CTRL_GET_RC5_ROUNDS))) {
        private enum enumMixinStr_EVP_CTRL_GET_RC5_ROUNDS = `enum EVP_CTRL_GET_RC5_ROUNDS = 0x4;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_GET_RC5_ROUNDS); }))) {
            mixin(enumMixinStr_EVP_CTRL_GET_RC5_ROUNDS);
        }
    }




    static if(!is(typeof(EVP_CTRL_SET_RC2_KEY_BITS))) {
        private enum enumMixinStr_EVP_CTRL_SET_RC2_KEY_BITS = `enum EVP_CTRL_SET_RC2_KEY_BITS = 0x3;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_SET_RC2_KEY_BITS); }))) {
            mixin(enumMixinStr_EVP_CTRL_SET_RC2_KEY_BITS);
        }
    }




    static if(!is(typeof(EVP_CTRL_GET_RC2_KEY_BITS))) {
        private enum enumMixinStr_EVP_CTRL_GET_RC2_KEY_BITS = `enum EVP_CTRL_GET_RC2_KEY_BITS = 0x2;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_GET_RC2_KEY_BITS); }))) {
            mixin(enumMixinStr_EVP_CTRL_GET_RC2_KEY_BITS);
        }
    }




    static if(!is(typeof(EVP_CTRL_SET_KEY_LENGTH))) {
        private enum enumMixinStr_EVP_CTRL_SET_KEY_LENGTH = `enum EVP_CTRL_SET_KEY_LENGTH = 0x1;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_SET_KEY_LENGTH); }))) {
            mixin(enumMixinStr_EVP_CTRL_SET_KEY_LENGTH);
        }
    }




    static if(!is(typeof(EVP_CTRL_INIT))) {
        private enum enumMixinStr_EVP_CTRL_INIT = `enum EVP_CTRL_INIT = 0x0;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CTRL_INIT); }))) {
            mixin(enumMixinStr_EVP_CTRL_INIT);
        }
    }




    static if(!is(typeof(EVP_CIPHER_CTX_FLAG_WRAP_ALLOW))) {
        private enum enumMixinStr_EVP_CIPHER_CTX_FLAG_WRAP_ALLOW = `enum EVP_CIPHER_CTX_FLAG_WRAP_ALLOW = 0x1;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CIPHER_CTX_FLAG_WRAP_ALLOW); }))) {
            mixin(enumMixinStr_EVP_CIPHER_CTX_FLAG_WRAP_ALLOW);
        }
    }




    static if(!is(typeof(EVP_CIPH_FLAG_PIPELINE))) {
        private enum enumMixinStr_EVP_CIPH_FLAG_PIPELINE = `enum EVP_CIPH_FLAG_PIPELINE = 0X800000;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CIPH_FLAG_PIPELINE); }))) {
            mixin(enumMixinStr_EVP_CIPH_FLAG_PIPELINE);
        }
    }




    static if(!is(typeof(EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK))) {
        private enum enumMixinStr_EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK = `enum EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK = 0x400000;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK); }))) {
            mixin(enumMixinStr_EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK);
        }
    }




    static if(!is(typeof(EVP_CIPH_FLAG_AEAD_CIPHER))) {
        private enum enumMixinStr_EVP_CIPH_FLAG_AEAD_CIPHER = `enum EVP_CIPH_FLAG_AEAD_CIPHER = 0x200000;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CIPH_FLAG_AEAD_CIPHER); }))) {
            mixin(enumMixinStr_EVP_CIPH_FLAG_AEAD_CIPHER);
        }
    }




    static if(!is(typeof(EVP_CIPH_FLAG_CUSTOM_CIPHER))) {
        private enum enumMixinStr_EVP_CIPH_FLAG_CUSTOM_CIPHER = `enum EVP_CIPH_FLAG_CUSTOM_CIPHER = 0x100000;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CIPH_FLAG_CUSTOM_CIPHER); }))) {
            mixin(enumMixinStr_EVP_CIPH_FLAG_CUSTOM_CIPHER);
        }
    }




    static if(!is(typeof(EVP_CIPH_FLAG_NON_FIPS_ALLOW))) {
        private enum enumMixinStr_EVP_CIPH_FLAG_NON_FIPS_ALLOW = `enum EVP_CIPH_FLAG_NON_FIPS_ALLOW = 0x8000;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CIPH_FLAG_NON_FIPS_ALLOW); }))) {
            mixin(enumMixinStr_EVP_CIPH_FLAG_NON_FIPS_ALLOW);
        }
    }




    static if(!is(typeof(EVP_CIPH_FLAG_FIPS))) {
        private enum enumMixinStr_EVP_CIPH_FLAG_FIPS = `enum EVP_CIPH_FLAG_FIPS = 0x4000;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CIPH_FLAG_FIPS); }))) {
            mixin(enumMixinStr_EVP_CIPH_FLAG_FIPS);
        }
    }




    static if(!is(typeof(EVP_CIPH_FLAG_LENGTH_BITS))) {
        private enum enumMixinStr_EVP_CIPH_FLAG_LENGTH_BITS = `enum EVP_CIPH_FLAG_LENGTH_BITS = 0x2000;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CIPH_FLAG_LENGTH_BITS); }))) {
            mixin(enumMixinStr_EVP_CIPH_FLAG_LENGTH_BITS);
        }
    }




    static if(!is(typeof(EVP_CIPH_FLAG_DEFAULT_ASN1))) {
        private enum enumMixinStr_EVP_CIPH_FLAG_DEFAULT_ASN1 = `enum EVP_CIPH_FLAG_DEFAULT_ASN1 = 0x1000;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CIPH_FLAG_DEFAULT_ASN1); }))) {
            mixin(enumMixinStr_EVP_CIPH_FLAG_DEFAULT_ASN1);
        }
    }




    static if(!is(typeof(EVP_CIPH_CUSTOM_IV_LENGTH))) {
        private enum enumMixinStr_EVP_CIPH_CUSTOM_IV_LENGTH = `enum EVP_CIPH_CUSTOM_IV_LENGTH = 0x800;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CIPH_CUSTOM_IV_LENGTH); }))) {
            mixin(enumMixinStr_EVP_CIPH_CUSTOM_IV_LENGTH);
        }
    }




    static if(!is(typeof(EVP_CIPH_CUSTOM_COPY))) {
        private enum enumMixinStr_EVP_CIPH_CUSTOM_COPY = `enum EVP_CIPH_CUSTOM_COPY = 0x400;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CIPH_CUSTOM_COPY); }))) {
            mixin(enumMixinStr_EVP_CIPH_CUSTOM_COPY);
        }
    }




    static if(!is(typeof(EVP_CIPH_RAND_KEY))) {
        private enum enumMixinStr_EVP_CIPH_RAND_KEY = `enum EVP_CIPH_RAND_KEY = 0x200;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CIPH_RAND_KEY); }))) {
            mixin(enumMixinStr_EVP_CIPH_RAND_KEY);
        }
    }




    static if(!is(typeof(EVP_CIPH_NO_PADDING))) {
        private enum enumMixinStr_EVP_CIPH_NO_PADDING = `enum EVP_CIPH_NO_PADDING = 0x100;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CIPH_NO_PADDING); }))) {
            mixin(enumMixinStr_EVP_CIPH_NO_PADDING);
        }
    }




    static if(!is(typeof(EVP_CIPH_CUSTOM_KEY_LENGTH))) {
        private enum enumMixinStr_EVP_CIPH_CUSTOM_KEY_LENGTH = `enum EVP_CIPH_CUSTOM_KEY_LENGTH = 0x80;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CIPH_CUSTOM_KEY_LENGTH); }))) {
            mixin(enumMixinStr_EVP_CIPH_CUSTOM_KEY_LENGTH);
        }
    }




    static if(!is(typeof(EVP_CIPH_CTRL_INIT))) {
        private enum enumMixinStr_EVP_CIPH_CTRL_INIT = `enum EVP_CIPH_CTRL_INIT = 0x40;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CIPH_CTRL_INIT); }))) {
            mixin(enumMixinStr_EVP_CIPH_CTRL_INIT);
        }
    }




    static if(!is(typeof(EVP_CIPH_ALWAYS_CALL_INIT))) {
        private enum enumMixinStr_EVP_CIPH_ALWAYS_CALL_INIT = `enum EVP_CIPH_ALWAYS_CALL_INIT = 0x20;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CIPH_ALWAYS_CALL_INIT); }))) {
            mixin(enumMixinStr_EVP_CIPH_ALWAYS_CALL_INIT);
        }
    }




    static if(!is(typeof(EVP_CIPH_CUSTOM_IV))) {
        private enum enumMixinStr_EVP_CIPH_CUSTOM_IV = `enum EVP_CIPH_CUSTOM_IV = 0x10;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CIPH_CUSTOM_IV); }))) {
            mixin(enumMixinStr_EVP_CIPH_CUSTOM_IV);
        }
    }




    static if(!is(typeof(EVP_CIPH_VARIABLE_LENGTH))) {
        private enum enumMixinStr_EVP_CIPH_VARIABLE_LENGTH = `enum EVP_CIPH_VARIABLE_LENGTH = 0x8;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CIPH_VARIABLE_LENGTH); }))) {
            mixin(enumMixinStr_EVP_CIPH_VARIABLE_LENGTH);
        }
    }




    static if(!is(typeof(EVP_CIPH_MODE))) {
        private enum enumMixinStr_EVP_CIPH_MODE = `enum EVP_CIPH_MODE = 0xF0007;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CIPH_MODE); }))) {
            mixin(enumMixinStr_EVP_CIPH_MODE);
        }
    }




    static if(!is(typeof(EVP_CIPH_OCB_MODE))) {
        private enum enumMixinStr_EVP_CIPH_OCB_MODE = `enum EVP_CIPH_OCB_MODE = 0x10003;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CIPH_OCB_MODE); }))) {
            mixin(enumMixinStr_EVP_CIPH_OCB_MODE);
        }
    }




    static if(!is(typeof(EVP_CIPH_WRAP_MODE))) {
        private enum enumMixinStr_EVP_CIPH_WRAP_MODE = `enum EVP_CIPH_WRAP_MODE = 0x10002;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CIPH_WRAP_MODE); }))) {
            mixin(enumMixinStr_EVP_CIPH_WRAP_MODE);
        }
    }




    static if(!is(typeof(EVP_CIPH_XTS_MODE))) {
        private enum enumMixinStr_EVP_CIPH_XTS_MODE = `enum EVP_CIPH_XTS_MODE = 0x10001;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CIPH_XTS_MODE); }))) {
            mixin(enumMixinStr_EVP_CIPH_XTS_MODE);
        }
    }




    static if(!is(typeof(EVP_CIPH_CCM_MODE))) {
        private enum enumMixinStr_EVP_CIPH_CCM_MODE = `enum EVP_CIPH_CCM_MODE = 0x7;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CIPH_CCM_MODE); }))) {
            mixin(enumMixinStr_EVP_CIPH_CCM_MODE);
        }
    }




    static if(!is(typeof(EVP_CIPH_GCM_MODE))) {
        private enum enumMixinStr_EVP_CIPH_GCM_MODE = `enum EVP_CIPH_GCM_MODE = 0x6;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CIPH_GCM_MODE); }))) {
            mixin(enumMixinStr_EVP_CIPH_GCM_MODE);
        }
    }




    static if(!is(typeof(EVP_CIPH_CTR_MODE))) {
        private enum enumMixinStr_EVP_CIPH_CTR_MODE = `enum EVP_CIPH_CTR_MODE = 0x5;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CIPH_CTR_MODE); }))) {
            mixin(enumMixinStr_EVP_CIPH_CTR_MODE);
        }
    }




    static if(!is(typeof(EVP_CIPH_OFB_MODE))) {
        private enum enumMixinStr_EVP_CIPH_OFB_MODE = `enum EVP_CIPH_OFB_MODE = 0x4;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CIPH_OFB_MODE); }))) {
            mixin(enumMixinStr_EVP_CIPH_OFB_MODE);
        }
    }




    static if(!is(typeof(EVP_CIPH_CFB_MODE))) {
        private enum enumMixinStr_EVP_CIPH_CFB_MODE = `enum EVP_CIPH_CFB_MODE = 0x3;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CIPH_CFB_MODE); }))) {
            mixin(enumMixinStr_EVP_CIPH_CFB_MODE);
        }
    }




    static if(!is(typeof(EVP_CIPH_CBC_MODE))) {
        private enum enumMixinStr_EVP_CIPH_CBC_MODE = `enum EVP_CIPH_CBC_MODE = 0x2;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CIPH_CBC_MODE); }))) {
            mixin(enumMixinStr_EVP_CIPH_CBC_MODE);
        }
    }




    static if(!is(typeof(EVP_CIPH_ECB_MODE))) {
        private enum enumMixinStr_EVP_CIPH_ECB_MODE = `enum EVP_CIPH_ECB_MODE = 0x1;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CIPH_ECB_MODE); }))) {
            mixin(enumMixinStr_EVP_CIPH_ECB_MODE);
        }
    }




    static if(!is(typeof(EVP_CIPH_STREAM_CIPHER))) {
        private enum enumMixinStr_EVP_CIPH_STREAM_CIPHER = `enum EVP_CIPH_STREAM_CIPHER = 0x0;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_CIPH_STREAM_CIPHER); }))) {
            mixin(enumMixinStr_EVP_CIPH_STREAM_CIPHER);
        }
    }




    static if(!is(typeof(EVP_MD_CTX_FLAG_FINALISE))) {
        private enum enumMixinStr_EVP_MD_CTX_FLAG_FINALISE = `enum EVP_MD_CTX_FLAG_FINALISE = 0x0200;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_MD_CTX_FLAG_FINALISE); }))) {
            mixin(enumMixinStr_EVP_MD_CTX_FLAG_FINALISE);
        }
    }




    static if(!is(typeof(EVP_MD_CTX_FLAG_NO_INIT))) {
        private enum enumMixinStr_EVP_MD_CTX_FLAG_NO_INIT = `enum EVP_MD_CTX_FLAG_NO_INIT = 0x0100;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_MD_CTX_FLAG_NO_INIT); }))) {
            mixin(enumMixinStr_EVP_MD_CTX_FLAG_NO_INIT);
        }
    }




    static if(!is(typeof(EVP_MD_CTX_FLAG_PAD_PSS))) {
        private enum enumMixinStr_EVP_MD_CTX_FLAG_PAD_PSS = `enum EVP_MD_CTX_FLAG_PAD_PSS = 0x20;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_MD_CTX_FLAG_PAD_PSS); }))) {
            mixin(enumMixinStr_EVP_MD_CTX_FLAG_PAD_PSS);
        }
    }




    static if(!is(typeof(EVP_MD_CTX_FLAG_PAD_X931))) {
        private enum enumMixinStr_EVP_MD_CTX_FLAG_PAD_X931 = `enum EVP_MD_CTX_FLAG_PAD_X931 = 0x10;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_MD_CTX_FLAG_PAD_X931); }))) {
            mixin(enumMixinStr_EVP_MD_CTX_FLAG_PAD_X931);
        }
    }




    static if(!is(typeof(EVP_MD_CTX_FLAG_PAD_PKCS1))) {
        private enum enumMixinStr_EVP_MD_CTX_FLAG_PAD_PKCS1 = `enum EVP_MD_CTX_FLAG_PAD_PKCS1 = 0x00;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_MD_CTX_FLAG_PAD_PKCS1); }))) {
            mixin(enumMixinStr_EVP_MD_CTX_FLAG_PAD_PKCS1);
        }
    }




    static if(!is(typeof(EVP_MD_CTX_FLAG_PAD_MASK))) {
        private enum enumMixinStr_EVP_MD_CTX_FLAG_PAD_MASK = `enum EVP_MD_CTX_FLAG_PAD_MASK = 0xF0;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_MD_CTX_FLAG_PAD_MASK); }))) {
            mixin(enumMixinStr_EVP_MD_CTX_FLAG_PAD_MASK);
        }
    }




    static if(!is(typeof(EVP_MD_CTX_FLAG_NON_FIPS_ALLOW))) {
        private enum enumMixinStr_EVP_MD_CTX_FLAG_NON_FIPS_ALLOW = `enum EVP_MD_CTX_FLAG_NON_FIPS_ALLOW = 0x0008;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_MD_CTX_FLAG_NON_FIPS_ALLOW); }))) {
            mixin(enumMixinStr_EVP_MD_CTX_FLAG_NON_FIPS_ALLOW);
        }
    }




    static if(!is(typeof(EVP_MD_CTX_FLAG_REUSE))) {
        private enum enumMixinStr_EVP_MD_CTX_FLAG_REUSE = `enum EVP_MD_CTX_FLAG_REUSE = 0x0004;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_MD_CTX_FLAG_REUSE); }))) {
            mixin(enumMixinStr_EVP_MD_CTX_FLAG_REUSE);
        }
    }




    static if(!is(typeof(EVP_MD_CTX_FLAG_CLEANED))) {
        private enum enumMixinStr_EVP_MD_CTX_FLAG_CLEANED = `enum EVP_MD_CTX_FLAG_CLEANED = 0x0002;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_MD_CTX_FLAG_CLEANED); }))) {
            mixin(enumMixinStr_EVP_MD_CTX_FLAG_CLEANED);
        }
    }




    static if(!is(typeof(EVP_MD_CTX_FLAG_ONESHOT))) {
        private enum enumMixinStr_EVP_MD_CTX_FLAG_ONESHOT = `enum EVP_MD_CTX_FLAG_ONESHOT = 0x0001;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_MD_CTX_FLAG_ONESHOT); }))) {
            mixin(enumMixinStr_EVP_MD_CTX_FLAG_ONESHOT);
        }
    }




    static if(!is(typeof(EVP_MD_CTRL_ALG_CTRL))) {
        private enum enumMixinStr_EVP_MD_CTRL_ALG_CTRL = `enum EVP_MD_CTRL_ALG_CTRL = 0x1000;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_MD_CTRL_ALG_CTRL); }))) {
            mixin(enumMixinStr_EVP_MD_CTRL_ALG_CTRL);
        }
    }




    static if(!is(typeof(EVP_MD_CTRL_XOF_LEN))) {
        private enum enumMixinStr_EVP_MD_CTRL_XOF_LEN = `enum EVP_MD_CTRL_XOF_LEN = 0x3;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_MD_CTRL_XOF_LEN); }))) {
            mixin(enumMixinStr_EVP_MD_CTRL_XOF_LEN);
        }
    }




    static if(!is(typeof(EVP_MD_CTRL_MICALG))) {
        private enum enumMixinStr_EVP_MD_CTRL_MICALG = `enum EVP_MD_CTRL_MICALG = 0x2;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_MD_CTRL_MICALG); }))) {
            mixin(enumMixinStr_EVP_MD_CTRL_MICALG);
        }
    }




    static if(!is(typeof(EVP_MD_CTRL_DIGALGID))) {
        private enum enumMixinStr_EVP_MD_CTRL_DIGALGID = `enum EVP_MD_CTRL_DIGALGID = 0x1;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_MD_CTRL_DIGALGID); }))) {
            mixin(enumMixinStr_EVP_MD_CTRL_DIGALGID);
        }
    }




    static if(!is(typeof(EVP_MD_FLAG_FIPS))) {
        private enum enumMixinStr_EVP_MD_FLAG_FIPS = `enum EVP_MD_FLAG_FIPS = 0x0400;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_MD_FLAG_FIPS); }))) {
            mixin(enumMixinStr_EVP_MD_FLAG_FIPS);
        }
    }




    static if(!is(typeof(EVP_MD_FLAG_DIGALGID_CUSTOM))) {
        private enum enumMixinStr_EVP_MD_FLAG_DIGALGID_CUSTOM = `enum EVP_MD_FLAG_DIGALGID_CUSTOM = 0x0018;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_MD_FLAG_DIGALGID_CUSTOM); }))) {
            mixin(enumMixinStr_EVP_MD_FLAG_DIGALGID_CUSTOM);
        }
    }




    static if(!is(typeof(EVP_MD_FLAG_DIGALGID_ABSENT))) {
        private enum enumMixinStr_EVP_MD_FLAG_DIGALGID_ABSENT = `enum EVP_MD_FLAG_DIGALGID_ABSENT = 0x0008;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_MD_FLAG_DIGALGID_ABSENT); }))) {
            mixin(enumMixinStr_EVP_MD_FLAG_DIGALGID_ABSENT);
        }
    }




    static if(!is(typeof(EVP_MD_FLAG_DIGALGID_NULL))) {
        private enum enumMixinStr_EVP_MD_FLAG_DIGALGID_NULL = `enum EVP_MD_FLAG_DIGALGID_NULL = 0x0000;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_MD_FLAG_DIGALGID_NULL); }))) {
            mixin(enumMixinStr_EVP_MD_FLAG_DIGALGID_NULL);
        }
    }




    static if(!is(typeof(EVP_MD_FLAG_DIGALGID_MASK))) {
        private enum enumMixinStr_EVP_MD_FLAG_DIGALGID_MASK = `enum EVP_MD_FLAG_DIGALGID_MASK = 0x0018;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_MD_FLAG_DIGALGID_MASK); }))) {
            mixin(enumMixinStr_EVP_MD_FLAG_DIGALGID_MASK);
        }
    }




    static if(!is(typeof(EVP_MD_FLAG_XOF))) {
        private enum enumMixinStr_EVP_MD_FLAG_XOF = `enum EVP_MD_FLAG_XOF = 0x0002;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_MD_FLAG_XOF); }))) {
            mixin(enumMixinStr_EVP_MD_FLAG_XOF);
        }
    }




    static if(!is(typeof(EVP_MD_FLAG_ONESHOT))) {
        private enum enumMixinStr_EVP_MD_FLAG_ONESHOT = `enum EVP_MD_FLAG_ONESHOT = 0x0001;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_MD_FLAG_ONESHOT); }))) {
            mixin(enumMixinStr_EVP_MD_FLAG_ONESHOT);
        }
    }




    static if(!is(typeof(EVP_PKEY_MO_DECRYPT))) {
        private enum enumMixinStr_EVP_PKEY_MO_DECRYPT = `enum EVP_PKEY_MO_DECRYPT = 0x0008;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_MO_DECRYPT); }))) {
            mixin(enumMixinStr_EVP_PKEY_MO_DECRYPT);
        }
    }




    static if(!is(typeof(EVP_PKEY_MO_ENCRYPT))) {
        private enum enumMixinStr_EVP_PKEY_MO_ENCRYPT = `enum EVP_PKEY_MO_ENCRYPT = 0x0004;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_MO_ENCRYPT); }))) {
            mixin(enumMixinStr_EVP_PKEY_MO_ENCRYPT);
        }
    }




    static if(!is(typeof(EVP_PKEY_MO_VERIFY))) {
        private enum enumMixinStr_EVP_PKEY_MO_VERIFY = `enum EVP_PKEY_MO_VERIFY = 0x0002;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_MO_VERIFY); }))) {
            mixin(enumMixinStr_EVP_PKEY_MO_VERIFY);
        }
    }




    static if(!is(typeof(EVP_PKEY_MO_SIGN))) {
        private enum enumMixinStr_EVP_PKEY_MO_SIGN = `enum EVP_PKEY_MO_SIGN = 0x0001;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_MO_SIGN); }))) {
            mixin(enumMixinStr_EVP_PKEY_MO_SIGN);
        }
    }




    static if(!is(typeof(EVP_PKEY_ED448))) {
        private enum enumMixinStr_EVP_PKEY_ED448 = `enum EVP_PKEY_ED448 = 1088;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_ED448); }))) {
            mixin(enumMixinStr_EVP_PKEY_ED448);
        }
    }




    static if(!is(typeof(EVP_PKEY_X448))) {
        private enum enumMixinStr_EVP_PKEY_X448 = `enum EVP_PKEY_X448 = 1035;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_X448); }))) {
            mixin(enumMixinStr_EVP_PKEY_X448);
        }
    }




    static if(!is(typeof(EVP_PKEY_ED25519))) {
        private enum enumMixinStr_EVP_PKEY_ED25519 = `enum EVP_PKEY_ED25519 = 1087;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_ED25519); }))) {
            mixin(enumMixinStr_EVP_PKEY_ED25519);
        }
    }




    static if(!is(typeof(EVP_PKEY_X25519))) {
        private enum enumMixinStr_EVP_PKEY_X25519 = `enum EVP_PKEY_X25519 = 1034;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_X25519); }))) {
            mixin(enumMixinStr_EVP_PKEY_X25519);
        }
    }




    static if(!is(typeof(EVP_PKEY_SIPHASH))) {
        private enum enumMixinStr_EVP_PKEY_SIPHASH = `enum EVP_PKEY_SIPHASH = 1062;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_SIPHASH); }))) {
            mixin(enumMixinStr_EVP_PKEY_SIPHASH);
        }
    }




    static if(!is(typeof(EVP_PKEY_POLY1305))) {
        private enum enumMixinStr_EVP_PKEY_POLY1305 = `enum EVP_PKEY_POLY1305 = 1061;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_POLY1305); }))) {
            mixin(enumMixinStr_EVP_PKEY_POLY1305);
        }
    }




    static if(!is(typeof(EVP_PKEY_HKDF))) {
        private enum enumMixinStr_EVP_PKEY_HKDF = `enum EVP_PKEY_HKDF = 1036;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_HKDF); }))) {
            mixin(enumMixinStr_EVP_PKEY_HKDF);
        }
    }




    static if(!is(typeof(EVP_PKEY_TLS1_PRF))) {
        private enum enumMixinStr_EVP_PKEY_TLS1_PRF = `enum EVP_PKEY_TLS1_PRF = 1021;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_TLS1_PRF); }))) {
            mixin(enumMixinStr_EVP_PKEY_TLS1_PRF);
        }
    }




    static if(!is(typeof(EVP_PKEY_SCRYPT))) {
        private enum enumMixinStr_EVP_PKEY_SCRYPT = `enum EVP_PKEY_SCRYPT = 973;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_SCRYPT); }))) {
            mixin(enumMixinStr_EVP_PKEY_SCRYPT);
        }
    }






    static if(!is(typeof(EVP_PKEY_CMAC))) {
        private enum enumMixinStr_EVP_PKEY_CMAC = `enum EVP_PKEY_CMAC = 894;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CMAC); }))) {
            mixin(enumMixinStr_EVP_PKEY_CMAC);
        }
    }




    static if(!is(typeof(EVP_PKEY_HMAC))) {
        private enum enumMixinStr_EVP_PKEY_HMAC = `enum EVP_PKEY_HMAC = 855;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_HMAC); }))) {
            mixin(enumMixinStr_EVP_PKEY_HMAC);
        }
    }




    static if(!is(typeof(EVP_PKEY_SM2))) {
        private enum enumMixinStr_EVP_PKEY_SM2 = `enum EVP_PKEY_SM2 = 1172;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_SM2); }))) {
            mixin(enumMixinStr_EVP_PKEY_SM2);
        }
    }




    static if(!is(typeof(EVP_PKEY_EC))) {
        private enum enumMixinStr_EVP_PKEY_EC = `enum EVP_PKEY_EC = 408;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_EC); }))) {
            mixin(enumMixinStr_EVP_PKEY_EC);
        }
    }




    static if(!is(typeof(EVP_PKEY_DHX))) {
        private enum enumMixinStr_EVP_PKEY_DHX = `enum EVP_PKEY_DHX = 920;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_DHX); }))) {
            mixin(enumMixinStr_EVP_PKEY_DHX);
        }
    }




    static if(!is(typeof(EVP_PKEY_DH))) {
        private enum enumMixinStr_EVP_PKEY_DH = `enum EVP_PKEY_DH = 28;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_DH); }))) {
            mixin(enumMixinStr_EVP_PKEY_DH);
        }
    }




    static if(!is(typeof(EVP_PKEY_DSA4))) {
        private enum enumMixinStr_EVP_PKEY_DSA4 = `enum EVP_PKEY_DSA4 = 70;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_DSA4); }))) {
            mixin(enumMixinStr_EVP_PKEY_DSA4);
        }
    }




    static if(!is(typeof(EVP_PKEY_DSA3))) {
        private enum enumMixinStr_EVP_PKEY_DSA3 = `enum EVP_PKEY_DSA3 = 113;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_DSA3); }))) {
            mixin(enumMixinStr_EVP_PKEY_DSA3);
        }
    }




    static if(!is(typeof(EVP_PKEY_DSA2))) {
        private enum enumMixinStr_EVP_PKEY_DSA2 = `enum EVP_PKEY_DSA2 = 66;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_DSA2); }))) {
            mixin(enumMixinStr_EVP_PKEY_DSA2);
        }
    }




    static if(!is(typeof(X509_LU_RETRY))) {
        private enum enumMixinStr_X509_LU_RETRY = `enum X509_LU_RETRY = - 1;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_LU_RETRY); }))) {
            mixin(enumMixinStr_X509_LU_RETRY);
        }
    }




    static if(!is(typeof(X509_LU_FAIL))) {
        private enum enumMixinStr_X509_LU_FAIL = `enum X509_LU_FAIL = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_LU_FAIL); }))) {
            mixin(enumMixinStr_X509_LU_FAIL);
        }
    }




    static if(!is(typeof(EVP_PKEY_DSA1))) {
        private enum enumMixinStr_EVP_PKEY_DSA1 = `enum EVP_PKEY_DSA1 = 67;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_DSA1); }))) {
            mixin(enumMixinStr_EVP_PKEY_DSA1);
        }
    }




    static if(!is(typeof(EVP_PKEY_DSA))) {
        private enum enumMixinStr_EVP_PKEY_DSA = `enum EVP_PKEY_DSA = 116;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_DSA); }))) {
            mixin(enumMixinStr_EVP_PKEY_DSA);
        }
    }




    static if(!is(typeof(EVP_PKEY_RSA_PSS))) {
        private enum enumMixinStr_EVP_PKEY_RSA_PSS = `enum EVP_PKEY_RSA_PSS = 912;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_RSA_PSS); }))) {
            mixin(enumMixinStr_EVP_PKEY_RSA_PSS);
        }
    }




    static if(!is(typeof(EVP_PKEY_RSA2))) {
        private enum enumMixinStr_EVP_PKEY_RSA2 = `enum EVP_PKEY_RSA2 = 19;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_RSA2); }))) {
            mixin(enumMixinStr_EVP_PKEY_RSA2);
        }
    }




    static if(!is(typeof(EVP_PKEY_RSA))) {
        private enum enumMixinStr_EVP_PKEY_RSA = `enum EVP_PKEY_RSA = 6;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_RSA); }))) {
            mixin(enumMixinStr_EVP_PKEY_RSA);
        }
    }




    static if(!is(typeof(EVP_PKEY_NONE))) {
        private enum enumMixinStr_EVP_PKEY_NONE = `enum EVP_PKEY_NONE = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_NONE); }))) {
            mixin(enumMixinStr_EVP_PKEY_NONE);
        }
    }




    static if(!is(typeof(EVP_PKS_EC))) {
        private enum enumMixinStr_EVP_PKS_EC = `enum EVP_PKS_EC = 0x0400;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKS_EC); }))) {
            mixin(enumMixinStr_EVP_PKS_EC);
        }
    }




    static if(!is(typeof(EVP_PKS_DSA))) {
        private enum enumMixinStr_EVP_PKS_DSA = `enum EVP_PKS_DSA = 0x0200;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKS_DSA); }))) {
            mixin(enumMixinStr_EVP_PKS_DSA);
        }
    }




    static if(!is(typeof(EVP_PKS_RSA))) {
        private enum enumMixinStr_EVP_PKS_RSA = `enum EVP_PKS_RSA = 0x0100;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKS_RSA); }))) {
            mixin(enumMixinStr_EVP_PKS_RSA);
        }
    }




    static if(!is(typeof(EVP_PKT_EXCH))) {
        private enum enumMixinStr_EVP_PKT_EXCH = `enum EVP_PKT_EXCH = 0x0040;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKT_EXCH); }))) {
            mixin(enumMixinStr_EVP_PKT_EXCH);
        }
    }




    static if(!is(typeof(EVP_PKT_ENC))) {
        private enum enumMixinStr_EVP_PKT_ENC = `enum EVP_PKT_ENC = 0x0020;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKT_ENC); }))) {
            mixin(enumMixinStr_EVP_PKT_ENC);
        }
    }




    static if(!is(typeof(EVP_PKT_SIGN))) {
        private enum enumMixinStr_EVP_PKT_SIGN = `enum EVP_PKT_SIGN = 0x0010;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKT_SIGN); }))) {
            mixin(enumMixinStr_EVP_PKT_SIGN);
        }
    }




    static if(!is(typeof(EVP_PK_EC))) {
        private enum enumMixinStr_EVP_PK_EC = `enum EVP_PK_EC = 0x0008;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PK_EC); }))) {
            mixin(enumMixinStr_EVP_PK_EC);
        }
    }




    static if(!is(typeof(EVP_PK_DH))) {
        private enum enumMixinStr_EVP_PK_DH = `enum EVP_PK_DH = 0x0004;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PK_DH); }))) {
            mixin(enumMixinStr_EVP_PK_DH);
        }
    }




    static if(!is(typeof(EVP_PK_DSA))) {
        private enum enumMixinStr_EVP_PK_DSA = `enum EVP_PK_DSA = 0x0002;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PK_DSA); }))) {
            mixin(enumMixinStr_EVP_PK_DSA);
        }
    }




    static if(!is(typeof(EVP_PK_RSA))) {
        private enum enumMixinStr_EVP_PK_RSA = `enum EVP_PK_RSA = 0x0001;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PK_RSA); }))) {
            mixin(enumMixinStr_EVP_PK_RSA);
        }
    }




    static if(!is(typeof(PKCS5_DEFAULT_ITER))) {
        private enum enumMixinStr_PKCS5_DEFAULT_ITER = `enum PKCS5_DEFAULT_ITER = 2048;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS5_DEFAULT_ITER); }))) {
            mixin(enumMixinStr_PKCS5_DEFAULT_ITER);
        }
    }




    static if(!is(typeof(PKCS5_SALT_LEN))) {
        private enum enumMixinStr_PKCS5_SALT_LEN = `enum PKCS5_SALT_LEN = 8;`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS5_SALT_LEN); }))) {
            mixin(enumMixinStr_PKCS5_SALT_LEN);
        }
    }




    static if(!is(typeof(EVP_MAX_BLOCK_LENGTH))) {
        private enum enumMixinStr_EVP_MAX_BLOCK_LENGTH = `enum EVP_MAX_BLOCK_LENGTH = 32;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_MAX_BLOCK_LENGTH); }))) {
            mixin(enumMixinStr_EVP_MAX_BLOCK_LENGTH);
        }
    }




    static if(!is(typeof(EVP_MAX_IV_LENGTH))) {
        private enum enumMixinStr_EVP_MAX_IV_LENGTH = `enum EVP_MAX_IV_LENGTH = 16;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_MAX_IV_LENGTH); }))) {
            mixin(enumMixinStr_EVP_MAX_IV_LENGTH);
        }
    }




    static if(!is(typeof(EVP_MAX_KEY_LENGTH))) {
        private enum enumMixinStr_EVP_MAX_KEY_LENGTH = `enum EVP_MAX_KEY_LENGTH = 64;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_MAX_KEY_LENGTH); }))) {
            mixin(enumMixinStr_EVP_MAX_KEY_LENGTH);
        }
    }




    static if(!is(typeof(EVP_MAX_MD_SIZE))) {
        private enum enumMixinStr_EVP_MAX_MD_SIZE = `enum EVP_MAX_MD_SIZE = 64;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_MAX_MD_SIZE); }))) {
            mixin(enumMixinStr_EVP_MAX_MD_SIZE);
        }
    }
    static if(!is(typeof(ERR_R_OPERATION_FAIL))) {
        private enum enumMixinStr_ERR_R_OPERATION_FAIL = `enum ERR_R_OPERATION_FAIL = ( 8 | ERR_R_FATAL );`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_R_OPERATION_FAIL); }))) {
            mixin(enumMixinStr_ERR_R_OPERATION_FAIL);
        }
    }




    static if(!is(typeof(ERR_R_PASSED_INVALID_ARGUMENT))) {
        private enum enumMixinStr_ERR_R_PASSED_INVALID_ARGUMENT = `enum ERR_R_PASSED_INVALID_ARGUMENT = ( 7 );`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_R_PASSED_INVALID_ARGUMENT); }))) {
            mixin(enumMixinStr_ERR_R_PASSED_INVALID_ARGUMENT);
        }
    }




    static if(!is(typeof(ERR_R_INIT_FAIL))) {
        private enum enumMixinStr_ERR_R_INIT_FAIL = `enum ERR_R_INIT_FAIL = ( 6 | ERR_R_FATAL );`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_R_INIT_FAIL); }))) {
            mixin(enumMixinStr_ERR_R_INIT_FAIL);
        }
    }




    static if(!is(typeof(ERR_R_DISABLED))) {
        private enum enumMixinStr_ERR_R_DISABLED = `enum ERR_R_DISABLED = ( 5 | ERR_R_FATAL );`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_R_DISABLED); }))) {
            mixin(enumMixinStr_ERR_R_DISABLED);
        }
    }




    static if(!is(typeof(ERR_R_INTERNAL_ERROR))) {
        private enum enumMixinStr_ERR_R_INTERNAL_ERROR = `enum ERR_R_INTERNAL_ERROR = ( 4 | ERR_R_FATAL );`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_R_INTERNAL_ERROR); }))) {
            mixin(enumMixinStr_ERR_R_INTERNAL_ERROR);
        }
    }




    static if(!is(typeof(ERR_R_PASSED_NULL_PARAMETER))) {
        private enum enumMixinStr_ERR_R_PASSED_NULL_PARAMETER = `enum ERR_R_PASSED_NULL_PARAMETER = ( 3 | ERR_R_FATAL );`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_R_PASSED_NULL_PARAMETER); }))) {
            mixin(enumMixinStr_ERR_R_PASSED_NULL_PARAMETER);
        }
    }




    static if(!is(typeof(ERR_R_SHOULD_NOT_HAVE_BEEN_CALLED))) {
        private enum enumMixinStr_ERR_R_SHOULD_NOT_HAVE_BEEN_CALLED = `enum ERR_R_SHOULD_NOT_HAVE_BEEN_CALLED = ( 2 | ERR_R_FATAL );`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_R_SHOULD_NOT_HAVE_BEEN_CALLED); }))) {
            mixin(enumMixinStr_ERR_R_SHOULD_NOT_HAVE_BEEN_CALLED);
        }
    }




    static if(!is(typeof(ERR_R_MALLOC_FAILURE))) {
        private enum enumMixinStr_ERR_R_MALLOC_FAILURE = `enum ERR_R_MALLOC_FAILURE = ( 1 | ERR_R_FATAL );`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_R_MALLOC_FAILURE); }))) {
            mixin(enumMixinStr_ERR_R_MALLOC_FAILURE);
        }
    }




    static if(!is(typeof(ERR_R_FATAL))) {
        private enum enumMixinStr_ERR_R_FATAL = `enum ERR_R_FATAL = 64;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_R_FATAL); }))) {
            mixin(enumMixinStr_ERR_R_FATAL);
        }
    }




    static if(!is(typeof(ERR_R_MISSING_ASN1_EOS))) {
        private enum enumMixinStr_ERR_R_MISSING_ASN1_EOS = `enum ERR_R_MISSING_ASN1_EOS = 63;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_R_MISSING_ASN1_EOS); }))) {
            mixin(enumMixinStr_ERR_R_MISSING_ASN1_EOS);
        }
    }




    static if(!is(typeof(ERR_R_NESTED_ASN1_ERROR))) {
        private enum enumMixinStr_ERR_R_NESTED_ASN1_ERROR = `enum ERR_R_NESTED_ASN1_ERROR = 58;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_R_NESTED_ASN1_ERROR); }))) {
            mixin(enumMixinStr_ERR_R_NESTED_ASN1_ERROR);
        }
    }




    static if(!is(typeof(ERR_R_OSSL_STORE_LIB))) {
        private enum enumMixinStr_ERR_R_OSSL_STORE_LIB = `enum ERR_R_OSSL_STORE_LIB = ERR_LIB_OSSL_STORE;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_R_OSSL_STORE_LIB); }))) {
            mixin(enumMixinStr_ERR_R_OSSL_STORE_LIB);
        }
    }




    static if(!is(typeof(ERR_R_ECDSA_LIB))) {
        private enum enumMixinStr_ERR_R_ECDSA_LIB = `enum ERR_R_ECDSA_LIB = ERR_LIB_ECDSA;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_R_ECDSA_LIB); }))) {
            mixin(enumMixinStr_ERR_R_ECDSA_LIB);
        }
    }




    static if(!is(typeof(ERR_R_UI_LIB))) {
        private enum enumMixinStr_ERR_R_UI_LIB = `enum ERR_R_UI_LIB = ERR_LIB_UI;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_R_UI_LIB); }))) {
            mixin(enumMixinStr_ERR_R_UI_LIB);
        }
    }




    static if(!is(typeof(ERR_R_ENGINE_LIB))) {
        private enum enumMixinStr_ERR_R_ENGINE_LIB = `enum ERR_R_ENGINE_LIB = ERR_LIB_ENGINE;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_R_ENGINE_LIB); }))) {
            mixin(enumMixinStr_ERR_R_ENGINE_LIB);
        }
    }




    static if(!is(typeof(ERR_R_X509V3_LIB))) {
        private enum enumMixinStr_ERR_R_X509V3_LIB = `enum ERR_R_X509V3_LIB = ERR_LIB_X509V3;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_R_X509V3_LIB); }))) {
            mixin(enumMixinStr_ERR_R_X509V3_LIB);
        }
    }




    static if(!is(typeof(ERR_R_PKCS7_LIB))) {
        private enum enumMixinStr_ERR_R_PKCS7_LIB = `enum ERR_R_PKCS7_LIB = ERR_LIB_PKCS7;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_R_PKCS7_LIB); }))) {
            mixin(enumMixinStr_ERR_R_PKCS7_LIB);
        }
    }




    static if(!is(typeof(ERR_R_BIO_LIB))) {
        private enum enumMixinStr_ERR_R_BIO_LIB = `enum ERR_R_BIO_LIB = ERR_LIB_BIO;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_R_BIO_LIB); }))) {
            mixin(enumMixinStr_ERR_R_BIO_LIB);
        }
    }




    static if(!is(typeof(ERR_R_EC_LIB))) {
        private enum enumMixinStr_ERR_R_EC_LIB = `enum ERR_R_EC_LIB = ERR_LIB_EC;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_R_EC_LIB); }))) {
            mixin(enumMixinStr_ERR_R_EC_LIB);
        }
    }




    static if(!is(typeof(ERR_R_ASN1_LIB))) {
        private enum enumMixinStr_ERR_R_ASN1_LIB = `enum ERR_R_ASN1_LIB = ERR_LIB_ASN1;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_R_ASN1_LIB); }))) {
            mixin(enumMixinStr_ERR_R_ASN1_LIB);
        }
    }




    static if(!is(typeof(ERR_R_X509_LIB))) {
        private enum enumMixinStr_ERR_R_X509_LIB = `enum ERR_R_X509_LIB = ERR_LIB_X509;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_R_X509_LIB); }))) {
            mixin(enumMixinStr_ERR_R_X509_LIB);
        }
    }




    static if(!is(typeof(ERR_R_DSA_LIB))) {
        private enum enumMixinStr_ERR_R_DSA_LIB = `enum ERR_R_DSA_LIB = ERR_LIB_DSA;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_R_DSA_LIB); }))) {
            mixin(enumMixinStr_ERR_R_DSA_LIB);
        }
    }




    static if(!is(typeof(ERR_R_PEM_LIB))) {
        private enum enumMixinStr_ERR_R_PEM_LIB = `enum ERR_R_PEM_LIB = ERR_LIB_PEM;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_R_PEM_LIB); }))) {
            mixin(enumMixinStr_ERR_R_PEM_LIB);
        }
    }




    static if(!is(typeof(ERR_R_OBJ_LIB))) {
        private enum enumMixinStr_ERR_R_OBJ_LIB = `enum ERR_R_OBJ_LIB = ERR_LIB_OBJ;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_R_OBJ_LIB); }))) {
            mixin(enumMixinStr_ERR_R_OBJ_LIB);
        }
    }




    static if(!is(typeof(ERR_R_BUF_LIB))) {
        private enum enumMixinStr_ERR_R_BUF_LIB = `enum ERR_R_BUF_LIB = ERR_LIB_BUF;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_R_BUF_LIB); }))) {
            mixin(enumMixinStr_ERR_R_BUF_LIB);
        }
    }




    static if(!is(typeof(ERR_R_EVP_LIB))) {
        private enum enumMixinStr_ERR_R_EVP_LIB = `enum ERR_R_EVP_LIB = ERR_LIB_EVP;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_R_EVP_LIB); }))) {
            mixin(enumMixinStr_ERR_R_EVP_LIB);
        }
    }




    static if(!is(typeof(ERR_R_DH_LIB))) {
        private enum enumMixinStr_ERR_R_DH_LIB = `enum ERR_R_DH_LIB = ERR_LIB_DH;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_R_DH_LIB); }))) {
            mixin(enumMixinStr_ERR_R_DH_LIB);
        }
    }




    static if(!is(typeof(ERR_R_RSA_LIB))) {
        private enum enumMixinStr_ERR_R_RSA_LIB = `enum ERR_R_RSA_LIB = ERR_LIB_RSA;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_R_RSA_LIB); }))) {
            mixin(enumMixinStr_ERR_R_RSA_LIB);
        }
    }




    static if(!is(typeof(ERR_R_BN_LIB))) {
        private enum enumMixinStr_ERR_R_BN_LIB = `enum ERR_R_BN_LIB = ERR_LIB_BN;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_R_BN_LIB); }))) {
            mixin(enumMixinStr_ERR_R_BN_LIB);
        }
    }




    static if(!is(typeof(ERR_R_SYS_LIB))) {
        private enum enumMixinStr_ERR_R_SYS_LIB = `enum ERR_R_SYS_LIB = ERR_LIB_SYS;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_R_SYS_LIB); }))) {
            mixin(enumMixinStr_ERR_R_SYS_LIB);
        }
    }




    static if(!is(typeof(SYS_F_FSTAT))) {
        private enum enumMixinStr_SYS_F_FSTAT = `enum SYS_F_FSTAT = 24;`;
        static if(is(typeof({ mixin(enumMixinStr_SYS_F_FSTAT); }))) {
            mixin(enumMixinStr_SYS_F_FSTAT);
        }
    }




    static if(!is(typeof(SYS_F_FCNTL))) {
        private enum enumMixinStr_SYS_F_FCNTL = `enum SYS_F_FCNTL = 23;`;
        static if(is(typeof({ mixin(enumMixinStr_SYS_F_FCNTL); }))) {
            mixin(enumMixinStr_SYS_F_FCNTL);
        }
    }




    static if(!is(typeof(SYS_F_STAT))) {
        private enum enumMixinStr_SYS_F_STAT = `enum SYS_F_STAT = 22;`;
        static if(is(typeof({ mixin(enumMixinStr_SYS_F_STAT); }))) {
            mixin(enumMixinStr_SYS_F_STAT);
        }
    }




    static if(!is(typeof(SYS_F_IOCTL))) {
        private enum enumMixinStr_SYS_F_IOCTL = `enum SYS_F_IOCTL = 21;`;
        static if(is(typeof({ mixin(enumMixinStr_SYS_F_IOCTL); }))) {
            mixin(enumMixinStr_SYS_F_IOCTL);
        }
    }




    static if(!is(typeof(SYS_F_CLOSE))) {
        private enum enumMixinStr_SYS_F_CLOSE = `enum SYS_F_CLOSE = 20;`;
        static if(is(typeof({ mixin(enumMixinStr_SYS_F_CLOSE); }))) {
            mixin(enumMixinStr_SYS_F_CLOSE);
        }
    }




    static if(!is(typeof(SYS_F_OPEN))) {
        private enum enumMixinStr_SYS_F_OPEN = `enum SYS_F_OPEN = 19;`;
        static if(is(typeof({ mixin(enumMixinStr_SYS_F_OPEN); }))) {
            mixin(enumMixinStr_SYS_F_OPEN);
        }
    }




    static if(!is(typeof(SYS_F_FFLUSH))) {
        private enum enumMixinStr_SYS_F_FFLUSH = `enum SYS_F_FFLUSH = 18;`;
        static if(is(typeof({ mixin(enumMixinStr_SYS_F_FFLUSH); }))) {
            mixin(enumMixinStr_SYS_F_FFLUSH);
        }
    }




    static if(!is(typeof(SYS_F_GETHOSTBYNAME))) {
        private enum enumMixinStr_SYS_F_GETHOSTBYNAME = `enum SYS_F_GETHOSTBYNAME = 17;`;
        static if(is(typeof({ mixin(enumMixinStr_SYS_F_GETHOSTBYNAME); }))) {
            mixin(enumMixinStr_SYS_F_GETHOSTBYNAME);
        }
    }




    static if(!is(typeof(SYS_F_GETSOCKNAME))) {
        private enum enumMixinStr_SYS_F_GETSOCKNAME = `enum SYS_F_GETSOCKNAME = 16;`;
        static if(is(typeof({ mixin(enumMixinStr_SYS_F_GETSOCKNAME); }))) {
            mixin(enumMixinStr_SYS_F_GETSOCKNAME);
        }
    }




    static if(!is(typeof(SYS_F_GETSOCKOPT))) {
        private enum enumMixinStr_SYS_F_GETSOCKOPT = `enum SYS_F_GETSOCKOPT = 15;`;
        static if(is(typeof({ mixin(enumMixinStr_SYS_F_GETSOCKOPT); }))) {
            mixin(enumMixinStr_SYS_F_GETSOCKOPT);
        }
    }




    static if(!is(typeof(SYS_F_SETSOCKOPT))) {
        private enum enumMixinStr_SYS_F_SETSOCKOPT = `enum SYS_F_SETSOCKOPT = 14;`;
        static if(is(typeof({ mixin(enumMixinStr_SYS_F_SETSOCKOPT); }))) {
            mixin(enumMixinStr_SYS_F_SETSOCKOPT);
        }
    }




    static if(!is(typeof(SYS_F_GETNAMEINFO))) {
        private enum enumMixinStr_SYS_F_GETNAMEINFO = `enum SYS_F_GETNAMEINFO = 13;`;
        static if(is(typeof({ mixin(enumMixinStr_SYS_F_GETNAMEINFO); }))) {
            mixin(enumMixinStr_SYS_F_GETNAMEINFO);
        }
    }




    static if(!is(typeof(SYS_F_GETADDRINFO))) {
        private enum enumMixinStr_SYS_F_GETADDRINFO = `enum SYS_F_GETADDRINFO = 12;`;
        static if(is(typeof({ mixin(enumMixinStr_SYS_F_GETADDRINFO); }))) {
            mixin(enumMixinStr_SYS_F_GETADDRINFO);
        }
    }




    static if(!is(typeof(SYS_F_FREAD))) {
        private enum enumMixinStr_SYS_F_FREAD = `enum SYS_F_FREAD = 11;`;
        static if(is(typeof({ mixin(enumMixinStr_SYS_F_FREAD); }))) {
            mixin(enumMixinStr_SYS_F_FREAD);
        }
    }




    static if(!is(typeof(SYS_F_OPENDIR))) {
        private enum enumMixinStr_SYS_F_OPENDIR = `enum SYS_F_OPENDIR = 10;`;
        static if(is(typeof({ mixin(enumMixinStr_SYS_F_OPENDIR); }))) {
            mixin(enumMixinStr_SYS_F_OPENDIR);
        }
    }




    static if(!is(typeof(SYS_F_WSASTARTUP))) {
        private enum enumMixinStr_SYS_F_WSASTARTUP = `enum SYS_F_WSASTARTUP = 9;`;
        static if(is(typeof({ mixin(enumMixinStr_SYS_F_WSASTARTUP); }))) {
            mixin(enumMixinStr_SYS_F_WSASTARTUP);
        }
    }




    static if(!is(typeof(SYS_F_ACCEPT))) {
        private enum enumMixinStr_SYS_F_ACCEPT = `enum SYS_F_ACCEPT = 8;`;
        static if(is(typeof({ mixin(enumMixinStr_SYS_F_ACCEPT); }))) {
            mixin(enumMixinStr_SYS_F_ACCEPT);
        }
    }




    static if(!is(typeof(SYS_F_LISTEN))) {
        private enum enumMixinStr_SYS_F_LISTEN = `enum SYS_F_LISTEN = 7;`;
        static if(is(typeof({ mixin(enumMixinStr_SYS_F_LISTEN); }))) {
            mixin(enumMixinStr_SYS_F_LISTEN);
        }
    }




    static if(!is(typeof(SYS_F_BIND))) {
        private enum enumMixinStr_SYS_F_BIND = `enum SYS_F_BIND = 6;`;
        static if(is(typeof({ mixin(enumMixinStr_SYS_F_BIND); }))) {
            mixin(enumMixinStr_SYS_F_BIND);
        }
    }




    static if(!is(typeof(SYS_F_IOCTLSOCKET))) {
        private enum enumMixinStr_SYS_F_IOCTLSOCKET = `enum SYS_F_IOCTLSOCKET = 5;`;
        static if(is(typeof({ mixin(enumMixinStr_SYS_F_IOCTLSOCKET); }))) {
            mixin(enumMixinStr_SYS_F_IOCTLSOCKET);
        }
    }




    static if(!is(typeof(SYS_F_SOCKET))) {
        private enum enumMixinStr_SYS_F_SOCKET = `enum SYS_F_SOCKET = 4;`;
        static if(is(typeof({ mixin(enumMixinStr_SYS_F_SOCKET); }))) {
            mixin(enumMixinStr_SYS_F_SOCKET);
        }
    }




    static if(!is(typeof(SYS_F_GETSERVBYNAME))) {
        private enum enumMixinStr_SYS_F_GETSERVBYNAME = `enum SYS_F_GETSERVBYNAME = 3;`;
        static if(is(typeof({ mixin(enumMixinStr_SYS_F_GETSERVBYNAME); }))) {
            mixin(enumMixinStr_SYS_F_GETSERVBYNAME);
        }
    }




    static if(!is(typeof(SYS_F_CONNECT))) {
        private enum enumMixinStr_SYS_F_CONNECT = `enum SYS_F_CONNECT = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_SYS_F_CONNECT); }))) {
            mixin(enumMixinStr_SYS_F_CONNECT);
        }
    }




    static if(!is(typeof(SYS_F_FOPEN))) {
        private enum enumMixinStr_SYS_F_FOPEN = `enum SYS_F_FOPEN = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_SYS_F_FOPEN); }))) {
            mixin(enumMixinStr_SYS_F_FOPEN);
        }
    }
    static if(!is(typeof(X509_L_FILE_LOAD))) {
        private enum enumMixinStr_X509_L_FILE_LOAD = `enum X509_L_FILE_LOAD = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_L_FILE_LOAD); }))) {
            mixin(enumMixinStr_X509_L_FILE_LOAD);
        }
    }




    static if(!is(typeof(X509_L_ADD_DIR))) {
        private enum enumMixinStr_X509_L_ADD_DIR = `enum X509_L_ADD_DIR = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_L_ADD_DIR); }))) {
            mixin(enumMixinStr_X509_L_ADD_DIR);
        }
    }
    static if(!is(typeof(X509_V_OK))) {
        private enum enumMixinStr_X509_V_OK = `enum X509_V_OK = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_OK); }))) {
            mixin(enumMixinStr_X509_V_OK);
        }
    }




    static if(!is(typeof(X509_V_ERR_UNSPECIFIED))) {
        private enum enumMixinStr_X509_V_ERR_UNSPECIFIED = `enum X509_V_ERR_UNSPECIFIED = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_UNSPECIFIED); }))) {
            mixin(enumMixinStr_X509_V_ERR_UNSPECIFIED);
        }
    }




    static if(!is(typeof(X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT))) {
        private enum enumMixinStr_X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT = `enum X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT); }))) {
            mixin(enumMixinStr_X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT);
        }
    }




    static if(!is(typeof(X509_V_ERR_UNABLE_TO_GET_CRL))) {
        private enum enumMixinStr_X509_V_ERR_UNABLE_TO_GET_CRL = `enum X509_V_ERR_UNABLE_TO_GET_CRL = 3;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_UNABLE_TO_GET_CRL); }))) {
            mixin(enumMixinStr_X509_V_ERR_UNABLE_TO_GET_CRL);
        }
    }




    static if(!is(typeof(X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE))) {
        private enum enumMixinStr_X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE = `enum X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE = 4;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE); }))) {
            mixin(enumMixinStr_X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE);
        }
    }




    static if(!is(typeof(X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE))) {
        private enum enumMixinStr_X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE = `enum X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE = 5;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE); }))) {
            mixin(enumMixinStr_X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE);
        }
    }




    static if(!is(typeof(X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY))) {
        private enum enumMixinStr_X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY = `enum X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY = 6;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY); }))) {
            mixin(enumMixinStr_X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY);
        }
    }




    static if(!is(typeof(X509_V_ERR_CERT_SIGNATURE_FAILURE))) {
        private enum enumMixinStr_X509_V_ERR_CERT_SIGNATURE_FAILURE = `enum X509_V_ERR_CERT_SIGNATURE_FAILURE = 7;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_CERT_SIGNATURE_FAILURE); }))) {
            mixin(enumMixinStr_X509_V_ERR_CERT_SIGNATURE_FAILURE);
        }
    }




    static if(!is(typeof(X509_V_ERR_CRL_SIGNATURE_FAILURE))) {
        private enum enumMixinStr_X509_V_ERR_CRL_SIGNATURE_FAILURE = `enum X509_V_ERR_CRL_SIGNATURE_FAILURE = 8;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_CRL_SIGNATURE_FAILURE); }))) {
            mixin(enumMixinStr_X509_V_ERR_CRL_SIGNATURE_FAILURE);
        }
    }




    static if(!is(typeof(X509_V_ERR_CERT_NOT_YET_VALID))) {
        private enum enumMixinStr_X509_V_ERR_CERT_NOT_YET_VALID = `enum X509_V_ERR_CERT_NOT_YET_VALID = 9;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_CERT_NOT_YET_VALID); }))) {
            mixin(enumMixinStr_X509_V_ERR_CERT_NOT_YET_VALID);
        }
    }




    static if(!is(typeof(X509_V_ERR_CERT_HAS_EXPIRED))) {
        private enum enumMixinStr_X509_V_ERR_CERT_HAS_EXPIRED = `enum X509_V_ERR_CERT_HAS_EXPIRED = 10;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_CERT_HAS_EXPIRED); }))) {
            mixin(enumMixinStr_X509_V_ERR_CERT_HAS_EXPIRED);
        }
    }




    static if(!is(typeof(X509_V_ERR_CRL_NOT_YET_VALID))) {
        private enum enumMixinStr_X509_V_ERR_CRL_NOT_YET_VALID = `enum X509_V_ERR_CRL_NOT_YET_VALID = 11;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_CRL_NOT_YET_VALID); }))) {
            mixin(enumMixinStr_X509_V_ERR_CRL_NOT_YET_VALID);
        }
    }




    static if(!is(typeof(X509_V_ERR_CRL_HAS_EXPIRED))) {
        private enum enumMixinStr_X509_V_ERR_CRL_HAS_EXPIRED = `enum X509_V_ERR_CRL_HAS_EXPIRED = 12;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_CRL_HAS_EXPIRED); }))) {
            mixin(enumMixinStr_X509_V_ERR_CRL_HAS_EXPIRED);
        }
    }




    static if(!is(typeof(X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD))) {
        private enum enumMixinStr_X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD = `enum X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD = 13;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD); }))) {
            mixin(enumMixinStr_X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD);
        }
    }




    static if(!is(typeof(X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD))) {
        private enum enumMixinStr_X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD = `enum X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD = 14;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD); }))) {
            mixin(enumMixinStr_X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD);
        }
    }




    static if(!is(typeof(X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD))) {
        private enum enumMixinStr_X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD = `enum X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD = 15;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD); }))) {
            mixin(enumMixinStr_X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD);
        }
    }




    static if(!is(typeof(X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD))) {
        private enum enumMixinStr_X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD = `enum X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD = 16;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD); }))) {
            mixin(enumMixinStr_X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD);
        }
    }




    static if(!is(typeof(X509_V_ERR_OUT_OF_MEM))) {
        private enum enumMixinStr_X509_V_ERR_OUT_OF_MEM = `enum X509_V_ERR_OUT_OF_MEM = 17;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_OUT_OF_MEM); }))) {
            mixin(enumMixinStr_X509_V_ERR_OUT_OF_MEM);
        }
    }




    static if(!is(typeof(X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT))) {
        private enum enumMixinStr_X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT = `enum X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT = 18;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT); }))) {
            mixin(enumMixinStr_X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT);
        }
    }




    static if(!is(typeof(X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN))) {
        private enum enumMixinStr_X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN = `enum X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN = 19;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN); }))) {
            mixin(enumMixinStr_X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN);
        }
    }




    static if(!is(typeof(X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY))) {
        private enum enumMixinStr_X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY = `enum X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY = 20;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY); }))) {
            mixin(enumMixinStr_X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY);
        }
    }




    static if(!is(typeof(X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE))) {
        private enum enumMixinStr_X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE = `enum X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE = 21;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE); }))) {
            mixin(enumMixinStr_X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE);
        }
    }




    static if(!is(typeof(X509_V_ERR_CERT_CHAIN_TOO_LONG))) {
        private enum enumMixinStr_X509_V_ERR_CERT_CHAIN_TOO_LONG = `enum X509_V_ERR_CERT_CHAIN_TOO_LONG = 22;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_CERT_CHAIN_TOO_LONG); }))) {
            mixin(enumMixinStr_X509_V_ERR_CERT_CHAIN_TOO_LONG);
        }
    }




    static if(!is(typeof(X509_V_ERR_CERT_REVOKED))) {
        private enum enumMixinStr_X509_V_ERR_CERT_REVOKED = `enum X509_V_ERR_CERT_REVOKED = 23;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_CERT_REVOKED); }))) {
            mixin(enumMixinStr_X509_V_ERR_CERT_REVOKED);
        }
    }




    static if(!is(typeof(X509_V_ERR_INVALID_CA))) {
        private enum enumMixinStr_X509_V_ERR_INVALID_CA = `enum X509_V_ERR_INVALID_CA = 24;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_INVALID_CA); }))) {
            mixin(enumMixinStr_X509_V_ERR_INVALID_CA);
        }
    }




    static if(!is(typeof(X509_V_ERR_PATH_LENGTH_EXCEEDED))) {
        private enum enumMixinStr_X509_V_ERR_PATH_LENGTH_EXCEEDED = `enum X509_V_ERR_PATH_LENGTH_EXCEEDED = 25;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_PATH_LENGTH_EXCEEDED); }))) {
            mixin(enumMixinStr_X509_V_ERR_PATH_LENGTH_EXCEEDED);
        }
    }




    static if(!is(typeof(X509_V_ERR_INVALID_PURPOSE))) {
        private enum enumMixinStr_X509_V_ERR_INVALID_PURPOSE = `enum X509_V_ERR_INVALID_PURPOSE = 26;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_INVALID_PURPOSE); }))) {
            mixin(enumMixinStr_X509_V_ERR_INVALID_PURPOSE);
        }
    }




    static if(!is(typeof(X509_V_ERR_CERT_UNTRUSTED))) {
        private enum enumMixinStr_X509_V_ERR_CERT_UNTRUSTED = `enum X509_V_ERR_CERT_UNTRUSTED = 27;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_CERT_UNTRUSTED); }))) {
            mixin(enumMixinStr_X509_V_ERR_CERT_UNTRUSTED);
        }
    }




    static if(!is(typeof(X509_V_ERR_CERT_REJECTED))) {
        private enum enumMixinStr_X509_V_ERR_CERT_REJECTED = `enum X509_V_ERR_CERT_REJECTED = 28;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_CERT_REJECTED); }))) {
            mixin(enumMixinStr_X509_V_ERR_CERT_REJECTED);
        }
    }




    static if(!is(typeof(X509_V_ERR_SUBJECT_ISSUER_MISMATCH))) {
        private enum enumMixinStr_X509_V_ERR_SUBJECT_ISSUER_MISMATCH = `enum X509_V_ERR_SUBJECT_ISSUER_MISMATCH = 29;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_SUBJECT_ISSUER_MISMATCH); }))) {
            mixin(enumMixinStr_X509_V_ERR_SUBJECT_ISSUER_MISMATCH);
        }
    }




    static if(!is(typeof(X509_V_ERR_AKID_SKID_MISMATCH))) {
        private enum enumMixinStr_X509_V_ERR_AKID_SKID_MISMATCH = `enum X509_V_ERR_AKID_SKID_MISMATCH = 30;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_AKID_SKID_MISMATCH); }))) {
            mixin(enumMixinStr_X509_V_ERR_AKID_SKID_MISMATCH);
        }
    }




    static if(!is(typeof(X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH))) {
        private enum enumMixinStr_X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH = `enum X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH = 31;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH); }))) {
            mixin(enumMixinStr_X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH);
        }
    }




    static if(!is(typeof(X509_V_ERR_KEYUSAGE_NO_CERTSIGN))) {
        private enum enumMixinStr_X509_V_ERR_KEYUSAGE_NO_CERTSIGN = `enum X509_V_ERR_KEYUSAGE_NO_CERTSIGN = 32;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_KEYUSAGE_NO_CERTSIGN); }))) {
            mixin(enumMixinStr_X509_V_ERR_KEYUSAGE_NO_CERTSIGN);
        }
    }




    static if(!is(typeof(X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER))) {
        private enum enumMixinStr_X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER = `enum X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER = 33;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER); }))) {
            mixin(enumMixinStr_X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER);
        }
    }




    static if(!is(typeof(X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION))) {
        private enum enumMixinStr_X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION = `enum X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION = 34;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION); }))) {
            mixin(enumMixinStr_X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION);
        }
    }




    static if(!is(typeof(X509_V_ERR_KEYUSAGE_NO_CRL_SIGN))) {
        private enum enumMixinStr_X509_V_ERR_KEYUSAGE_NO_CRL_SIGN = `enum X509_V_ERR_KEYUSAGE_NO_CRL_SIGN = 35;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_KEYUSAGE_NO_CRL_SIGN); }))) {
            mixin(enumMixinStr_X509_V_ERR_KEYUSAGE_NO_CRL_SIGN);
        }
    }




    static if(!is(typeof(X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION))) {
        private enum enumMixinStr_X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION = `enum X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION = 36;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION); }))) {
            mixin(enumMixinStr_X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION);
        }
    }




    static if(!is(typeof(X509_V_ERR_INVALID_NON_CA))) {
        private enum enumMixinStr_X509_V_ERR_INVALID_NON_CA = `enum X509_V_ERR_INVALID_NON_CA = 37;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_INVALID_NON_CA); }))) {
            mixin(enumMixinStr_X509_V_ERR_INVALID_NON_CA);
        }
    }




    static if(!is(typeof(X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED))) {
        private enum enumMixinStr_X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED = `enum X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED = 38;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED); }))) {
            mixin(enumMixinStr_X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED);
        }
    }




    static if(!is(typeof(X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE))) {
        private enum enumMixinStr_X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE = `enum X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE = 39;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE); }))) {
            mixin(enumMixinStr_X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE);
        }
    }




    static if(!is(typeof(X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED))) {
        private enum enumMixinStr_X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED = `enum X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED = 40;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED); }))) {
            mixin(enumMixinStr_X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED);
        }
    }




    static if(!is(typeof(X509_V_ERR_INVALID_EXTENSION))) {
        private enum enumMixinStr_X509_V_ERR_INVALID_EXTENSION = `enum X509_V_ERR_INVALID_EXTENSION = 41;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_INVALID_EXTENSION); }))) {
            mixin(enumMixinStr_X509_V_ERR_INVALID_EXTENSION);
        }
    }




    static if(!is(typeof(X509_V_ERR_INVALID_POLICY_EXTENSION))) {
        private enum enumMixinStr_X509_V_ERR_INVALID_POLICY_EXTENSION = `enum X509_V_ERR_INVALID_POLICY_EXTENSION = 42;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_INVALID_POLICY_EXTENSION); }))) {
            mixin(enumMixinStr_X509_V_ERR_INVALID_POLICY_EXTENSION);
        }
    }




    static if(!is(typeof(X509_V_ERR_NO_EXPLICIT_POLICY))) {
        private enum enumMixinStr_X509_V_ERR_NO_EXPLICIT_POLICY = `enum X509_V_ERR_NO_EXPLICIT_POLICY = 43;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_NO_EXPLICIT_POLICY); }))) {
            mixin(enumMixinStr_X509_V_ERR_NO_EXPLICIT_POLICY);
        }
    }




    static if(!is(typeof(X509_V_ERR_DIFFERENT_CRL_SCOPE))) {
        private enum enumMixinStr_X509_V_ERR_DIFFERENT_CRL_SCOPE = `enum X509_V_ERR_DIFFERENT_CRL_SCOPE = 44;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_DIFFERENT_CRL_SCOPE); }))) {
            mixin(enumMixinStr_X509_V_ERR_DIFFERENT_CRL_SCOPE);
        }
    }




    static if(!is(typeof(X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE))) {
        private enum enumMixinStr_X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE = `enum X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE = 45;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE); }))) {
            mixin(enumMixinStr_X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE);
        }
    }




    static if(!is(typeof(X509_V_ERR_UNNESTED_RESOURCE))) {
        private enum enumMixinStr_X509_V_ERR_UNNESTED_RESOURCE = `enum X509_V_ERR_UNNESTED_RESOURCE = 46;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_UNNESTED_RESOURCE); }))) {
            mixin(enumMixinStr_X509_V_ERR_UNNESTED_RESOURCE);
        }
    }




    static if(!is(typeof(X509_V_ERR_PERMITTED_VIOLATION))) {
        private enum enumMixinStr_X509_V_ERR_PERMITTED_VIOLATION = `enum X509_V_ERR_PERMITTED_VIOLATION = 47;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_PERMITTED_VIOLATION); }))) {
            mixin(enumMixinStr_X509_V_ERR_PERMITTED_VIOLATION);
        }
    }




    static if(!is(typeof(X509_V_ERR_EXCLUDED_VIOLATION))) {
        private enum enumMixinStr_X509_V_ERR_EXCLUDED_VIOLATION = `enum X509_V_ERR_EXCLUDED_VIOLATION = 48;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_EXCLUDED_VIOLATION); }))) {
            mixin(enumMixinStr_X509_V_ERR_EXCLUDED_VIOLATION);
        }
    }




    static if(!is(typeof(X509_V_ERR_SUBTREE_MINMAX))) {
        private enum enumMixinStr_X509_V_ERR_SUBTREE_MINMAX = `enum X509_V_ERR_SUBTREE_MINMAX = 49;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_SUBTREE_MINMAX); }))) {
            mixin(enumMixinStr_X509_V_ERR_SUBTREE_MINMAX);
        }
    }




    static if(!is(typeof(X509_V_ERR_APPLICATION_VERIFICATION))) {
        private enum enumMixinStr_X509_V_ERR_APPLICATION_VERIFICATION = `enum X509_V_ERR_APPLICATION_VERIFICATION = 50;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_APPLICATION_VERIFICATION); }))) {
            mixin(enumMixinStr_X509_V_ERR_APPLICATION_VERIFICATION);
        }
    }




    static if(!is(typeof(X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE))) {
        private enum enumMixinStr_X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE = `enum X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE = 51;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE); }))) {
            mixin(enumMixinStr_X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE);
        }
    }




    static if(!is(typeof(X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX))) {
        private enum enumMixinStr_X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX = `enum X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX = 52;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX); }))) {
            mixin(enumMixinStr_X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX);
        }
    }




    static if(!is(typeof(X509_V_ERR_UNSUPPORTED_NAME_SYNTAX))) {
        private enum enumMixinStr_X509_V_ERR_UNSUPPORTED_NAME_SYNTAX = `enum X509_V_ERR_UNSUPPORTED_NAME_SYNTAX = 53;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_UNSUPPORTED_NAME_SYNTAX); }))) {
            mixin(enumMixinStr_X509_V_ERR_UNSUPPORTED_NAME_SYNTAX);
        }
    }




    static if(!is(typeof(X509_V_ERR_CRL_PATH_VALIDATION_ERROR))) {
        private enum enumMixinStr_X509_V_ERR_CRL_PATH_VALIDATION_ERROR = `enum X509_V_ERR_CRL_PATH_VALIDATION_ERROR = 54;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_CRL_PATH_VALIDATION_ERROR); }))) {
            mixin(enumMixinStr_X509_V_ERR_CRL_PATH_VALIDATION_ERROR);
        }
    }




    static if(!is(typeof(X509_V_ERR_PATH_LOOP))) {
        private enum enumMixinStr_X509_V_ERR_PATH_LOOP = `enum X509_V_ERR_PATH_LOOP = 55;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_PATH_LOOP); }))) {
            mixin(enumMixinStr_X509_V_ERR_PATH_LOOP);
        }
    }




    static if(!is(typeof(X509_V_ERR_SUITE_B_INVALID_VERSION))) {
        private enum enumMixinStr_X509_V_ERR_SUITE_B_INVALID_VERSION = `enum X509_V_ERR_SUITE_B_INVALID_VERSION = 56;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_SUITE_B_INVALID_VERSION); }))) {
            mixin(enumMixinStr_X509_V_ERR_SUITE_B_INVALID_VERSION);
        }
    }




    static if(!is(typeof(X509_V_ERR_SUITE_B_INVALID_ALGORITHM))) {
        private enum enumMixinStr_X509_V_ERR_SUITE_B_INVALID_ALGORITHM = `enum X509_V_ERR_SUITE_B_INVALID_ALGORITHM = 57;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_SUITE_B_INVALID_ALGORITHM); }))) {
            mixin(enumMixinStr_X509_V_ERR_SUITE_B_INVALID_ALGORITHM);
        }
    }




    static if(!is(typeof(X509_V_ERR_SUITE_B_INVALID_CURVE))) {
        private enum enumMixinStr_X509_V_ERR_SUITE_B_INVALID_CURVE = `enum X509_V_ERR_SUITE_B_INVALID_CURVE = 58;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_SUITE_B_INVALID_CURVE); }))) {
            mixin(enumMixinStr_X509_V_ERR_SUITE_B_INVALID_CURVE);
        }
    }




    static if(!is(typeof(X509_V_ERR_SUITE_B_INVALID_SIGNATURE_ALGORITHM))) {
        private enum enumMixinStr_X509_V_ERR_SUITE_B_INVALID_SIGNATURE_ALGORITHM = `enum X509_V_ERR_SUITE_B_INVALID_SIGNATURE_ALGORITHM = 59;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_SUITE_B_INVALID_SIGNATURE_ALGORITHM); }))) {
            mixin(enumMixinStr_X509_V_ERR_SUITE_B_INVALID_SIGNATURE_ALGORITHM);
        }
    }




    static if(!is(typeof(X509_V_ERR_SUITE_B_LOS_NOT_ALLOWED))) {
        private enum enumMixinStr_X509_V_ERR_SUITE_B_LOS_NOT_ALLOWED = `enum X509_V_ERR_SUITE_B_LOS_NOT_ALLOWED = 60;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_SUITE_B_LOS_NOT_ALLOWED); }))) {
            mixin(enumMixinStr_X509_V_ERR_SUITE_B_LOS_NOT_ALLOWED);
        }
    }




    static if(!is(typeof(X509_V_ERR_SUITE_B_CANNOT_SIGN_P_384_WITH_P_256))) {
        private enum enumMixinStr_X509_V_ERR_SUITE_B_CANNOT_SIGN_P_384_WITH_P_256 = `enum X509_V_ERR_SUITE_B_CANNOT_SIGN_P_384_WITH_P_256 = 61;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_SUITE_B_CANNOT_SIGN_P_384_WITH_P_256); }))) {
            mixin(enumMixinStr_X509_V_ERR_SUITE_B_CANNOT_SIGN_P_384_WITH_P_256);
        }
    }




    static if(!is(typeof(X509_V_ERR_HOSTNAME_MISMATCH))) {
        private enum enumMixinStr_X509_V_ERR_HOSTNAME_MISMATCH = `enum X509_V_ERR_HOSTNAME_MISMATCH = 62;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_HOSTNAME_MISMATCH); }))) {
            mixin(enumMixinStr_X509_V_ERR_HOSTNAME_MISMATCH);
        }
    }




    static if(!is(typeof(X509_V_ERR_EMAIL_MISMATCH))) {
        private enum enumMixinStr_X509_V_ERR_EMAIL_MISMATCH = `enum X509_V_ERR_EMAIL_MISMATCH = 63;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_EMAIL_MISMATCH); }))) {
            mixin(enumMixinStr_X509_V_ERR_EMAIL_MISMATCH);
        }
    }




    static if(!is(typeof(X509_V_ERR_IP_ADDRESS_MISMATCH))) {
        private enum enumMixinStr_X509_V_ERR_IP_ADDRESS_MISMATCH = `enum X509_V_ERR_IP_ADDRESS_MISMATCH = 64;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_IP_ADDRESS_MISMATCH); }))) {
            mixin(enumMixinStr_X509_V_ERR_IP_ADDRESS_MISMATCH);
        }
    }




    static if(!is(typeof(X509_V_ERR_DANE_NO_MATCH))) {
        private enum enumMixinStr_X509_V_ERR_DANE_NO_MATCH = `enum X509_V_ERR_DANE_NO_MATCH = 65;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_DANE_NO_MATCH); }))) {
            mixin(enumMixinStr_X509_V_ERR_DANE_NO_MATCH);
        }
    }




    static if(!is(typeof(X509_V_ERR_EE_KEY_TOO_SMALL))) {
        private enum enumMixinStr_X509_V_ERR_EE_KEY_TOO_SMALL = `enum X509_V_ERR_EE_KEY_TOO_SMALL = 66;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_EE_KEY_TOO_SMALL); }))) {
            mixin(enumMixinStr_X509_V_ERR_EE_KEY_TOO_SMALL);
        }
    }




    static if(!is(typeof(X509_V_ERR_CA_KEY_TOO_SMALL))) {
        private enum enumMixinStr_X509_V_ERR_CA_KEY_TOO_SMALL = `enum X509_V_ERR_CA_KEY_TOO_SMALL = 67;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_CA_KEY_TOO_SMALL); }))) {
            mixin(enumMixinStr_X509_V_ERR_CA_KEY_TOO_SMALL);
        }
    }




    static if(!is(typeof(X509_V_ERR_CA_MD_TOO_WEAK))) {
        private enum enumMixinStr_X509_V_ERR_CA_MD_TOO_WEAK = `enum X509_V_ERR_CA_MD_TOO_WEAK = 68;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_CA_MD_TOO_WEAK); }))) {
            mixin(enumMixinStr_X509_V_ERR_CA_MD_TOO_WEAK);
        }
    }




    static if(!is(typeof(X509_V_ERR_INVALID_CALL))) {
        private enum enumMixinStr_X509_V_ERR_INVALID_CALL = `enum X509_V_ERR_INVALID_CALL = 69;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_INVALID_CALL); }))) {
            mixin(enumMixinStr_X509_V_ERR_INVALID_CALL);
        }
    }




    static if(!is(typeof(X509_V_ERR_STORE_LOOKUP))) {
        private enum enumMixinStr_X509_V_ERR_STORE_LOOKUP = `enum X509_V_ERR_STORE_LOOKUP = 70;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_STORE_LOOKUP); }))) {
            mixin(enumMixinStr_X509_V_ERR_STORE_LOOKUP);
        }
    }




    static if(!is(typeof(X509_V_ERR_NO_VALID_SCTS))) {
        private enum enumMixinStr_X509_V_ERR_NO_VALID_SCTS = `enum X509_V_ERR_NO_VALID_SCTS = 71;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_NO_VALID_SCTS); }))) {
            mixin(enumMixinStr_X509_V_ERR_NO_VALID_SCTS);
        }
    }




    static if(!is(typeof(X509_V_ERR_PROXY_SUBJECT_NAME_VIOLATION))) {
        private enum enumMixinStr_X509_V_ERR_PROXY_SUBJECT_NAME_VIOLATION = `enum X509_V_ERR_PROXY_SUBJECT_NAME_VIOLATION = 72;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_PROXY_SUBJECT_NAME_VIOLATION); }))) {
            mixin(enumMixinStr_X509_V_ERR_PROXY_SUBJECT_NAME_VIOLATION);
        }
    }




    static if(!is(typeof(X509_V_ERR_OCSP_VERIFY_NEEDED))) {
        private enum enumMixinStr_X509_V_ERR_OCSP_VERIFY_NEEDED = `enum X509_V_ERR_OCSP_VERIFY_NEEDED = 73;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_OCSP_VERIFY_NEEDED); }))) {
            mixin(enumMixinStr_X509_V_ERR_OCSP_VERIFY_NEEDED);
        }
    }




    static if(!is(typeof(X509_V_ERR_OCSP_VERIFY_FAILED))) {
        private enum enumMixinStr_X509_V_ERR_OCSP_VERIFY_FAILED = `enum X509_V_ERR_OCSP_VERIFY_FAILED = 74;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_OCSP_VERIFY_FAILED); }))) {
            mixin(enumMixinStr_X509_V_ERR_OCSP_VERIFY_FAILED);
        }
    }




    static if(!is(typeof(X509_V_ERR_OCSP_CERT_UNKNOWN))) {
        private enum enumMixinStr_X509_V_ERR_OCSP_CERT_UNKNOWN = `enum X509_V_ERR_OCSP_CERT_UNKNOWN = 75;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_OCSP_CERT_UNKNOWN); }))) {
            mixin(enumMixinStr_X509_V_ERR_OCSP_CERT_UNKNOWN);
        }
    }




    static if(!is(typeof(X509_V_ERR_SIGNATURE_ALGORITHM_MISMATCH))) {
        private enum enumMixinStr_X509_V_ERR_SIGNATURE_ALGORITHM_MISMATCH = `enum X509_V_ERR_SIGNATURE_ALGORITHM_MISMATCH = 76;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_SIGNATURE_ALGORITHM_MISMATCH); }))) {
            mixin(enumMixinStr_X509_V_ERR_SIGNATURE_ALGORITHM_MISMATCH);
        }
    }




    static if(!is(typeof(X509_V_ERR_NO_ISSUER_PUBLIC_KEY))) {
        private enum enumMixinStr_X509_V_ERR_NO_ISSUER_PUBLIC_KEY = `enum X509_V_ERR_NO_ISSUER_PUBLIC_KEY = 77;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_NO_ISSUER_PUBLIC_KEY); }))) {
            mixin(enumMixinStr_X509_V_ERR_NO_ISSUER_PUBLIC_KEY);
        }
    }




    static if(!is(typeof(X509_V_ERR_UNSUPPORTED_SIGNATURE_ALGORITHM))) {
        private enum enumMixinStr_X509_V_ERR_UNSUPPORTED_SIGNATURE_ALGORITHM = `enum X509_V_ERR_UNSUPPORTED_SIGNATURE_ALGORITHM = 78;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_UNSUPPORTED_SIGNATURE_ALGORITHM); }))) {
            mixin(enumMixinStr_X509_V_ERR_UNSUPPORTED_SIGNATURE_ALGORITHM);
        }
    }




    static if(!is(typeof(X509_V_ERR_EC_KEY_EXPLICIT_PARAMS))) {
        private enum enumMixinStr_X509_V_ERR_EC_KEY_EXPLICIT_PARAMS = `enum X509_V_ERR_EC_KEY_EXPLICIT_PARAMS = 79;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_ERR_EC_KEY_EXPLICIT_PARAMS); }))) {
            mixin(enumMixinStr_X509_V_ERR_EC_KEY_EXPLICIT_PARAMS);
        }
    }






    static if(!is(typeof(X509_V_FLAG_CB_ISSUER_CHECK))) {
        private enum enumMixinStr_X509_V_FLAG_CB_ISSUER_CHECK = `enum X509_V_FLAG_CB_ISSUER_CHECK = 0x0;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_FLAG_CB_ISSUER_CHECK); }))) {
            mixin(enumMixinStr_X509_V_FLAG_CB_ISSUER_CHECK);
        }
    }




    static if(!is(typeof(X509_V_FLAG_USE_CHECK_TIME))) {
        private enum enumMixinStr_X509_V_FLAG_USE_CHECK_TIME = `enum X509_V_FLAG_USE_CHECK_TIME = 0x2;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_FLAG_USE_CHECK_TIME); }))) {
            mixin(enumMixinStr_X509_V_FLAG_USE_CHECK_TIME);
        }
    }




    static if(!is(typeof(X509_V_FLAG_CRL_CHECK))) {
        private enum enumMixinStr_X509_V_FLAG_CRL_CHECK = `enum X509_V_FLAG_CRL_CHECK = 0x4;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_FLAG_CRL_CHECK); }))) {
            mixin(enumMixinStr_X509_V_FLAG_CRL_CHECK);
        }
    }




    static if(!is(typeof(X509_V_FLAG_CRL_CHECK_ALL))) {
        private enum enumMixinStr_X509_V_FLAG_CRL_CHECK_ALL = `enum X509_V_FLAG_CRL_CHECK_ALL = 0x8;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_FLAG_CRL_CHECK_ALL); }))) {
            mixin(enumMixinStr_X509_V_FLAG_CRL_CHECK_ALL);
        }
    }




    static if(!is(typeof(X509_V_FLAG_IGNORE_CRITICAL))) {
        private enum enumMixinStr_X509_V_FLAG_IGNORE_CRITICAL = `enum X509_V_FLAG_IGNORE_CRITICAL = 0x10;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_FLAG_IGNORE_CRITICAL); }))) {
            mixin(enumMixinStr_X509_V_FLAG_IGNORE_CRITICAL);
        }
    }




    static if(!is(typeof(X509_V_FLAG_X509_STRICT))) {
        private enum enumMixinStr_X509_V_FLAG_X509_STRICT = `enum X509_V_FLAG_X509_STRICT = 0x20;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_FLAG_X509_STRICT); }))) {
            mixin(enumMixinStr_X509_V_FLAG_X509_STRICT);
        }
    }




    static if(!is(typeof(X509_V_FLAG_ALLOW_PROXY_CERTS))) {
        private enum enumMixinStr_X509_V_FLAG_ALLOW_PROXY_CERTS = `enum X509_V_FLAG_ALLOW_PROXY_CERTS = 0x40;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_FLAG_ALLOW_PROXY_CERTS); }))) {
            mixin(enumMixinStr_X509_V_FLAG_ALLOW_PROXY_CERTS);
        }
    }




    static if(!is(typeof(X509_V_FLAG_POLICY_CHECK))) {
        private enum enumMixinStr_X509_V_FLAG_POLICY_CHECK = `enum X509_V_FLAG_POLICY_CHECK = 0x80;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_FLAG_POLICY_CHECK); }))) {
            mixin(enumMixinStr_X509_V_FLAG_POLICY_CHECK);
        }
    }




    static if(!is(typeof(X509_V_FLAG_EXPLICIT_POLICY))) {
        private enum enumMixinStr_X509_V_FLAG_EXPLICIT_POLICY = `enum X509_V_FLAG_EXPLICIT_POLICY = 0x100;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_FLAG_EXPLICIT_POLICY); }))) {
            mixin(enumMixinStr_X509_V_FLAG_EXPLICIT_POLICY);
        }
    }




    static if(!is(typeof(X509_V_FLAG_INHIBIT_ANY))) {
        private enum enumMixinStr_X509_V_FLAG_INHIBIT_ANY = `enum X509_V_FLAG_INHIBIT_ANY = 0x200;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_FLAG_INHIBIT_ANY); }))) {
            mixin(enumMixinStr_X509_V_FLAG_INHIBIT_ANY);
        }
    }




    static if(!is(typeof(X509_V_FLAG_INHIBIT_MAP))) {
        private enum enumMixinStr_X509_V_FLAG_INHIBIT_MAP = `enum X509_V_FLAG_INHIBIT_MAP = 0x400;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_FLAG_INHIBIT_MAP); }))) {
            mixin(enumMixinStr_X509_V_FLAG_INHIBIT_MAP);
        }
    }




    static if(!is(typeof(X509_V_FLAG_NOTIFY_POLICY))) {
        private enum enumMixinStr_X509_V_FLAG_NOTIFY_POLICY = `enum X509_V_FLAG_NOTIFY_POLICY = 0x800;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_FLAG_NOTIFY_POLICY); }))) {
            mixin(enumMixinStr_X509_V_FLAG_NOTIFY_POLICY);
        }
    }




    static if(!is(typeof(X509_V_FLAG_EXTENDED_CRL_SUPPORT))) {
        private enum enumMixinStr_X509_V_FLAG_EXTENDED_CRL_SUPPORT = `enum X509_V_FLAG_EXTENDED_CRL_SUPPORT = 0x1000;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_FLAG_EXTENDED_CRL_SUPPORT); }))) {
            mixin(enumMixinStr_X509_V_FLAG_EXTENDED_CRL_SUPPORT);
        }
    }




    static if(!is(typeof(X509_V_FLAG_USE_DELTAS))) {
        private enum enumMixinStr_X509_V_FLAG_USE_DELTAS = `enum X509_V_FLAG_USE_DELTAS = 0x2000;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_FLAG_USE_DELTAS); }))) {
            mixin(enumMixinStr_X509_V_FLAG_USE_DELTAS);
        }
    }




    static if(!is(typeof(X509_V_FLAG_CHECK_SS_SIGNATURE))) {
        private enum enumMixinStr_X509_V_FLAG_CHECK_SS_SIGNATURE = `enum X509_V_FLAG_CHECK_SS_SIGNATURE = 0x4000;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_FLAG_CHECK_SS_SIGNATURE); }))) {
            mixin(enumMixinStr_X509_V_FLAG_CHECK_SS_SIGNATURE);
        }
    }




    static if(!is(typeof(X509_V_FLAG_TRUSTED_FIRST))) {
        private enum enumMixinStr_X509_V_FLAG_TRUSTED_FIRST = `enum X509_V_FLAG_TRUSTED_FIRST = 0x8000;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_FLAG_TRUSTED_FIRST); }))) {
            mixin(enumMixinStr_X509_V_FLAG_TRUSTED_FIRST);
        }
    }




    static if(!is(typeof(X509_V_FLAG_SUITEB_128_LOS_ONLY))) {
        private enum enumMixinStr_X509_V_FLAG_SUITEB_128_LOS_ONLY = `enum X509_V_FLAG_SUITEB_128_LOS_ONLY = 0x10000;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_FLAG_SUITEB_128_LOS_ONLY); }))) {
            mixin(enumMixinStr_X509_V_FLAG_SUITEB_128_LOS_ONLY);
        }
    }




    static if(!is(typeof(X509_V_FLAG_SUITEB_192_LOS))) {
        private enum enumMixinStr_X509_V_FLAG_SUITEB_192_LOS = `enum X509_V_FLAG_SUITEB_192_LOS = 0x20000;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_FLAG_SUITEB_192_LOS); }))) {
            mixin(enumMixinStr_X509_V_FLAG_SUITEB_192_LOS);
        }
    }




    static if(!is(typeof(X509_V_FLAG_SUITEB_128_LOS))) {
        private enum enumMixinStr_X509_V_FLAG_SUITEB_128_LOS = `enum X509_V_FLAG_SUITEB_128_LOS = 0x30000;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_FLAG_SUITEB_128_LOS); }))) {
            mixin(enumMixinStr_X509_V_FLAG_SUITEB_128_LOS);
        }
    }




    static if(!is(typeof(X509_V_FLAG_PARTIAL_CHAIN))) {
        private enum enumMixinStr_X509_V_FLAG_PARTIAL_CHAIN = `enum X509_V_FLAG_PARTIAL_CHAIN = 0x80000;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_FLAG_PARTIAL_CHAIN); }))) {
            mixin(enumMixinStr_X509_V_FLAG_PARTIAL_CHAIN);
        }
    }




    static if(!is(typeof(X509_V_FLAG_NO_ALT_CHAINS))) {
        private enum enumMixinStr_X509_V_FLAG_NO_ALT_CHAINS = `enum X509_V_FLAG_NO_ALT_CHAINS = 0x100000;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_FLAG_NO_ALT_CHAINS); }))) {
            mixin(enumMixinStr_X509_V_FLAG_NO_ALT_CHAINS);
        }
    }




    static if(!is(typeof(X509_V_FLAG_NO_CHECK_TIME))) {
        private enum enumMixinStr_X509_V_FLAG_NO_CHECK_TIME = `enum X509_V_FLAG_NO_CHECK_TIME = 0x200000;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_FLAG_NO_CHECK_TIME); }))) {
            mixin(enumMixinStr_X509_V_FLAG_NO_CHECK_TIME);
        }
    }




    static if(!is(typeof(X509_VP_FLAG_DEFAULT))) {
        private enum enumMixinStr_X509_VP_FLAG_DEFAULT = `enum X509_VP_FLAG_DEFAULT = 0x1;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_VP_FLAG_DEFAULT); }))) {
            mixin(enumMixinStr_X509_VP_FLAG_DEFAULT);
        }
    }




    static if(!is(typeof(X509_VP_FLAG_OVERWRITE))) {
        private enum enumMixinStr_X509_VP_FLAG_OVERWRITE = `enum X509_VP_FLAG_OVERWRITE = 0x2;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_VP_FLAG_OVERWRITE); }))) {
            mixin(enumMixinStr_X509_VP_FLAG_OVERWRITE);
        }
    }




    static if(!is(typeof(X509_VP_FLAG_RESET_FLAGS))) {
        private enum enumMixinStr_X509_VP_FLAG_RESET_FLAGS = `enum X509_VP_FLAG_RESET_FLAGS = 0x4;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_VP_FLAG_RESET_FLAGS); }))) {
            mixin(enumMixinStr_X509_VP_FLAG_RESET_FLAGS);
        }
    }




    static if(!is(typeof(X509_VP_FLAG_LOCKED))) {
        private enum enumMixinStr_X509_VP_FLAG_LOCKED = `enum X509_VP_FLAG_LOCKED = 0x8;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_VP_FLAG_LOCKED); }))) {
            mixin(enumMixinStr_X509_VP_FLAG_LOCKED);
        }
    }




    static if(!is(typeof(X509_VP_FLAG_ONCE))) {
        private enum enumMixinStr_X509_VP_FLAG_ONCE = `enum X509_VP_FLAG_ONCE = 0x10;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_VP_FLAG_ONCE); }))) {
            mixin(enumMixinStr_X509_VP_FLAG_ONCE);
        }
    }




    static if(!is(typeof(X509_V_FLAG_POLICY_MASK))) {
        private enum enumMixinStr_X509_V_FLAG_POLICY_MASK = `enum X509_V_FLAG_POLICY_MASK = ( 0x80 | 0x100 | 0x200 | 0x400 );`;
        static if(is(typeof({ mixin(enumMixinStr_X509_V_FLAG_POLICY_MASK); }))) {
            mixin(enumMixinStr_X509_V_FLAG_POLICY_MASK);
        }
    }
    static if(!is(typeof(ERR_LIB_USER))) {
        private enum enumMixinStr_ERR_LIB_USER = `enum ERR_LIB_USER = 128;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_USER); }))) {
            mixin(enumMixinStr_ERR_LIB_USER);
        }
    }




    static if(!is(typeof(ERR_LIB_SM2))) {
        private enum enumMixinStr_ERR_LIB_SM2 = `enum ERR_LIB_SM2 = 53;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_SM2); }))) {
            mixin(enumMixinStr_ERR_LIB_SM2);
        }
    }




    static if(!is(typeof(ERR_LIB_KDF))) {
        private enum enumMixinStr_ERR_LIB_KDF = `enum ERR_LIB_KDF = 52;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_KDF); }))) {
            mixin(enumMixinStr_ERR_LIB_KDF);
        }
    }




    static if(!is(typeof(ERR_LIB_ASYNC))) {
        private enum enumMixinStr_ERR_LIB_ASYNC = `enum ERR_LIB_ASYNC = 51;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_ASYNC); }))) {
            mixin(enumMixinStr_ERR_LIB_ASYNC);
        }
    }




    static if(!is(typeof(ERR_LIB_CT))) {
        private enum enumMixinStr_ERR_LIB_CT = `enum ERR_LIB_CT = 50;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_CT); }))) {
            mixin(enumMixinStr_ERR_LIB_CT);
        }
    }




    static if(!is(typeof(ERR_LIB_HMAC))) {
        private enum enumMixinStr_ERR_LIB_HMAC = `enum ERR_LIB_HMAC = 48;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_HMAC); }))) {
            mixin(enumMixinStr_ERR_LIB_HMAC);
        }
    }




    static if(!is(typeof(ERR_LIB_TS))) {
        private enum enumMixinStr_ERR_LIB_TS = `enum ERR_LIB_TS = 47;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_TS); }))) {
            mixin(enumMixinStr_ERR_LIB_TS);
        }
    }




    static if(!is(typeof(ERR_LIB_CMS))) {
        private enum enumMixinStr_ERR_LIB_CMS = `enum ERR_LIB_CMS = 46;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_CMS); }))) {
            mixin(enumMixinStr_ERR_LIB_CMS);
        }
    }




    static if(!is(typeof(ERR_LIB_FIPS))) {
        private enum enumMixinStr_ERR_LIB_FIPS = `enum ERR_LIB_FIPS = 45;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_FIPS); }))) {
            mixin(enumMixinStr_ERR_LIB_FIPS);
        }
    }




    static if(!is(typeof(ERR_LIB_OSSL_STORE))) {
        private enum enumMixinStr_ERR_LIB_OSSL_STORE = `enum ERR_LIB_OSSL_STORE = 44;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_OSSL_STORE); }))) {
            mixin(enumMixinStr_ERR_LIB_OSSL_STORE);
        }
    }




    static if(!is(typeof(ERR_LIB_ECDH))) {
        private enum enumMixinStr_ERR_LIB_ECDH = `enum ERR_LIB_ECDH = 43;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_ECDH); }))) {
            mixin(enumMixinStr_ERR_LIB_ECDH);
        }
    }




    static if(!is(typeof(ERR_LIB_ECDSA))) {
        private enum enumMixinStr_ERR_LIB_ECDSA = `enum ERR_LIB_ECDSA = 42;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_ECDSA); }))) {
            mixin(enumMixinStr_ERR_LIB_ECDSA);
        }
    }




    static if(!is(typeof(ERR_LIB_COMP))) {
        private enum enumMixinStr_ERR_LIB_COMP = `enum ERR_LIB_COMP = 41;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_COMP); }))) {
            mixin(enumMixinStr_ERR_LIB_COMP);
        }
    }




    static if(!is(typeof(ERR_LIB_UI))) {
        private enum enumMixinStr_ERR_LIB_UI = `enum ERR_LIB_UI = 40;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_UI); }))) {
            mixin(enumMixinStr_ERR_LIB_UI);
        }
    }




    static if(!is(typeof(ERR_LIB_OCSP))) {
        private enum enumMixinStr_ERR_LIB_OCSP = `enum ERR_LIB_OCSP = 39;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_OCSP); }))) {
            mixin(enumMixinStr_ERR_LIB_OCSP);
        }
    }






    static if(!is(typeof(ERR_LIB_ENGINE))) {
        private enum enumMixinStr_ERR_LIB_ENGINE = `enum ERR_LIB_ENGINE = 38;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_ENGINE); }))) {
            mixin(enumMixinStr_ERR_LIB_ENGINE);
        }
    }




    static if(!is(typeof(ERR_LIB_DSO))) {
        private enum enumMixinStr_ERR_LIB_DSO = `enum ERR_LIB_DSO = 37;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_DSO); }))) {
            mixin(enumMixinStr_ERR_LIB_DSO);
        }
    }




    static if(!is(typeof(ERR_LIB_RAND))) {
        private enum enumMixinStr_ERR_LIB_RAND = `enum ERR_LIB_RAND = 36;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_RAND); }))) {
            mixin(enumMixinStr_ERR_LIB_RAND);
        }
    }






    static if(!is(typeof(ERR_LIB_PKCS12))) {
        private enum enumMixinStr_ERR_LIB_PKCS12 = `enum ERR_LIB_PKCS12 = 35;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_PKCS12); }))) {
            mixin(enumMixinStr_ERR_LIB_PKCS12);
        }
    }




    static if(!is(typeof(ERR_LIB_X509V3))) {
        private enum enumMixinStr_ERR_LIB_X509V3 = `enum ERR_LIB_X509V3 = 34;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_X509V3); }))) {
            mixin(enumMixinStr_ERR_LIB_X509V3);
        }
    }




    static if(!is(typeof(ERR_LIB_PKCS7))) {
        private enum enumMixinStr_ERR_LIB_PKCS7 = `enum ERR_LIB_PKCS7 = 33;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_PKCS7); }))) {
            mixin(enumMixinStr_ERR_LIB_PKCS7);
        }
    }




    static if(!is(typeof(ERR_LIB_BIO))) {
        private enum enumMixinStr_ERR_LIB_BIO = `enum ERR_LIB_BIO = 32;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_BIO); }))) {
            mixin(enumMixinStr_ERR_LIB_BIO);
        }
    }




    static if(!is(typeof(ERR_LIB_SSL))) {
        private enum enumMixinStr_ERR_LIB_SSL = `enum ERR_LIB_SSL = 20;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_SSL); }))) {
            mixin(enumMixinStr_ERR_LIB_SSL);
        }
    }




    static if(!is(typeof(ERR_LIB_EC))) {
        private enum enumMixinStr_ERR_LIB_EC = `enum ERR_LIB_EC = 16;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_EC); }))) {
            mixin(enumMixinStr_ERR_LIB_EC);
        }
    }




    static if(!is(typeof(ERR_LIB_CRYPTO))) {
        private enum enumMixinStr_ERR_LIB_CRYPTO = `enum ERR_LIB_CRYPTO = 15;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_CRYPTO); }))) {
            mixin(enumMixinStr_ERR_LIB_CRYPTO);
        }
    }




    static if(!is(typeof(ERR_LIB_CONF))) {
        private enum enumMixinStr_ERR_LIB_CONF = `enum ERR_LIB_CONF = 14;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_CONF); }))) {
            mixin(enumMixinStr_ERR_LIB_CONF);
        }
    }




    static if(!is(typeof(ERR_LIB_ASN1))) {
        private enum enumMixinStr_ERR_LIB_ASN1 = `enum ERR_LIB_ASN1 = 13;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_ASN1); }))) {
            mixin(enumMixinStr_ERR_LIB_ASN1);
        }
    }




    static if(!is(typeof(ERR_LIB_X509))) {
        private enum enumMixinStr_ERR_LIB_X509 = `enum ERR_LIB_X509 = 11;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_X509); }))) {
            mixin(enumMixinStr_ERR_LIB_X509);
        }
    }




    static if(!is(typeof(ERR_LIB_DSA))) {
        private enum enumMixinStr_ERR_LIB_DSA = `enum ERR_LIB_DSA = 10;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_DSA); }))) {
            mixin(enumMixinStr_ERR_LIB_DSA);
        }
    }




    static if(!is(typeof(ERR_LIB_PEM))) {
        private enum enumMixinStr_ERR_LIB_PEM = `enum ERR_LIB_PEM = 9;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_PEM); }))) {
            mixin(enumMixinStr_ERR_LIB_PEM);
        }
    }




    static if(!is(typeof(ERR_LIB_OBJ))) {
        private enum enumMixinStr_ERR_LIB_OBJ = `enum ERR_LIB_OBJ = 8;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_OBJ); }))) {
            mixin(enumMixinStr_ERR_LIB_OBJ);
        }
    }




    static if(!is(typeof(ERR_LIB_BUF))) {
        private enum enumMixinStr_ERR_LIB_BUF = `enum ERR_LIB_BUF = 7;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_BUF); }))) {
            mixin(enumMixinStr_ERR_LIB_BUF);
        }
    }




    static if(!is(typeof(ERR_LIB_EVP))) {
        private enum enumMixinStr_ERR_LIB_EVP = `enum ERR_LIB_EVP = 6;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_EVP); }))) {
            mixin(enumMixinStr_ERR_LIB_EVP);
        }
    }




    static if(!is(typeof(ERR_LIB_DH))) {
        private enum enumMixinStr_ERR_LIB_DH = `enum ERR_LIB_DH = 5;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_DH); }))) {
            mixin(enumMixinStr_ERR_LIB_DH);
        }
    }




    static if(!is(typeof(ERR_LIB_RSA))) {
        private enum enumMixinStr_ERR_LIB_RSA = `enum ERR_LIB_RSA = 4;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_RSA); }))) {
            mixin(enumMixinStr_ERR_LIB_RSA);
        }
    }




    static if(!is(typeof(ERR_LIB_BN))) {
        private enum enumMixinStr_ERR_LIB_BN = `enum ERR_LIB_BN = 3;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_BN); }))) {
            mixin(enumMixinStr_ERR_LIB_BN);
        }
    }






    static if(!is(typeof(ERR_LIB_SYS))) {
        private enum enumMixinStr_ERR_LIB_SYS = `enum ERR_LIB_SYS = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_SYS); }))) {
            mixin(enumMixinStr_ERR_LIB_SYS);
        }
    }




    static if(!is(typeof(ERR_LIB_NONE))) {
        private enum enumMixinStr_ERR_LIB_NONE = `enum ERR_LIB_NONE = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_LIB_NONE); }))) {
            mixin(enumMixinStr_ERR_LIB_NONE);
        }
    }




    static if(!is(typeof(ERR_NUM_ERRORS))) {
        private enum enumMixinStr_ERR_NUM_ERRORS = `enum ERR_NUM_ERRORS = 16;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_NUM_ERRORS); }))) {
            mixin(enumMixinStr_ERR_NUM_ERRORS);
        }
    }






    static if(!is(typeof(ERR_FLAG_CLEAR))) {
        private enum enumMixinStr_ERR_FLAG_CLEAR = `enum ERR_FLAG_CLEAR = 0x02;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_FLAG_CLEAR); }))) {
            mixin(enumMixinStr_ERR_FLAG_CLEAR);
        }
    }




    static if(!is(typeof(ERR_FLAG_MARK))) {
        private enum enumMixinStr_ERR_FLAG_MARK = `enum ERR_FLAG_MARK = 0x01;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_FLAG_MARK); }))) {
            mixin(enumMixinStr_ERR_FLAG_MARK);
        }
    }




    static if(!is(typeof(ERR_TXT_STRING))) {
        private enum enumMixinStr_ERR_TXT_STRING = `enum ERR_TXT_STRING = 0x02;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_TXT_STRING); }))) {
            mixin(enumMixinStr_ERR_TXT_STRING);
        }
    }




    static if(!is(typeof(ERR_TXT_MALLOCED))) {
        private enum enumMixinStr_ERR_TXT_MALLOCED = `enum ERR_TXT_MALLOCED = 0x01;`;
        static if(is(typeof({ mixin(enumMixinStr_ERR_TXT_MALLOCED); }))) {
            mixin(enumMixinStr_ERR_TXT_MALLOCED);
        }
    }
    static if(!is(typeof(EC_R_WRONG_ORDER))) {
        private enum enumMixinStr_EC_R_WRONG_ORDER = `enum EC_R_WRONG_ORDER = 130;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_WRONG_ORDER); }))) {
            mixin(enumMixinStr_EC_R_WRONG_ORDER);
        }
    }




    static if(!is(typeof(EC_R_WRONG_CURVE_PARAMETERS))) {
        private enum enumMixinStr_EC_R_WRONG_CURVE_PARAMETERS = `enum EC_R_WRONG_CURVE_PARAMETERS = 145;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_WRONG_CURVE_PARAMETERS); }))) {
            mixin(enumMixinStr_EC_R_WRONG_CURVE_PARAMETERS);
        }
    }




    static if(!is(typeof(EC_R_UNSUPPORTED_FIELD))) {
        private enum enumMixinStr_EC_R_UNSUPPORTED_FIELD = `enum EC_R_UNSUPPORTED_FIELD = 131;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_UNSUPPORTED_FIELD); }))) {
            mixin(enumMixinStr_EC_R_UNSUPPORTED_FIELD);
        }
    }




    static if(!is(typeof(EC_R_UNKNOWN_ORDER))) {
        private enum enumMixinStr_EC_R_UNKNOWN_ORDER = `enum EC_R_UNKNOWN_ORDER = 114;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_UNKNOWN_ORDER); }))) {
            mixin(enumMixinStr_EC_R_UNKNOWN_ORDER);
        }
    }




    static if(!is(typeof(EC_R_UNKNOWN_GROUP))) {
        private enum enumMixinStr_EC_R_UNKNOWN_GROUP = `enum EC_R_UNKNOWN_GROUP = 129;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_UNKNOWN_GROUP); }))) {
            mixin(enumMixinStr_EC_R_UNKNOWN_GROUP);
        }
    }




    static if(!is(typeof(EC_R_UNKNOWN_COFACTOR))) {
        private enum enumMixinStr_EC_R_UNKNOWN_COFACTOR = `enum EC_R_UNKNOWN_COFACTOR = 164;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_UNKNOWN_COFACTOR); }))) {
            mixin(enumMixinStr_EC_R_UNKNOWN_COFACTOR);
        }
    }




    static if(!is(typeof(EC_R_UNDEFINED_ORDER))) {
        private enum enumMixinStr_EC_R_UNDEFINED_ORDER = `enum EC_R_UNDEFINED_ORDER = 128;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_UNDEFINED_ORDER); }))) {
            mixin(enumMixinStr_EC_R_UNDEFINED_ORDER);
        }
    }




    static if(!is(typeof(EC_R_UNDEFINED_GENERATOR))) {
        private enum enumMixinStr_EC_R_UNDEFINED_GENERATOR = `enum EC_R_UNDEFINED_GENERATOR = 113;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_UNDEFINED_GENERATOR); }))) {
            mixin(enumMixinStr_EC_R_UNDEFINED_GENERATOR);
        }
    }




    static if(!is(typeof(EC_R_SLOT_FULL))) {
        private enum enumMixinStr_EC_R_SLOT_FULL = `enum EC_R_SLOT_FULL = 108;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_SLOT_FULL); }))) {
            mixin(enumMixinStr_EC_R_SLOT_FULL);
        }
    }




    static if(!is(typeof(EC_R_SHARED_INFO_ERROR))) {
        private enum enumMixinStr_EC_R_SHARED_INFO_ERROR = `enum EC_R_SHARED_INFO_ERROR = 150;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_SHARED_INFO_ERROR); }))) {
            mixin(enumMixinStr_EC_R_SHARED_INFO_ERROR);
        }
    }




    static if(!is(typeof(EC_R_RANDOM_NUMBER_GENERATION_FAILED))) {
        private enum enumMixinStr_EC_R_RANDOM_NUMBER_GENERATION_FAILED = `enum EC_R_RANDOM_NUMBER_GENERATION_FAILED = 158;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_RANDOM_NUMBER_GENERATION_FAILED); }))) {
            mixin(enumMixinStr_EC_R_RANDOM_NUMBER_GENERATION_FAILED);
        }
    }




    static if(!is(typeof(EC_R_POINT_IS_NOT_ON_CURVE))) {
        private enum enumMixinStr_EC_R_POINT_IS_NOT_ON_CURVE = `enum EC_R_POINT_IS_NOT_ON_CURVE = 107;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_POINT_IS_NOT_ON_CURVE); }))) {
            mixin(enumMixinStr_EC_R_POINT_IS_NOT_ON_CURVE);
        }
    }




    static if(!is(typeof(EC_R_POINT_COORDINATES_BLIND_FAILURE))) {
        private enum enumMixinStr_EC_R_POINT_COORDINATES_BLIND_FAILURE = `enum EC_R_POINT_COORDINATES_BLIND_FAILURE = 163;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_POINT_COORDINATES_BLIND_FAILURE); }))) {
            mixin(enumMixinStr_EC_R_POINT_COORDINATES_BLIND_FAILURE);
        }
    }




    static if(!is(typeof(EC_R_POINT_AT_INFINITY))) {
        private enum enumMixinStr_EC_R_POINT_AT_INFINITY = `enum EC_R_POINT_AT_INFINITY = 106;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_POINT_AT_INFINITY); }))) {
            mixin(enumMixinStr_EC_R_POINT_AT_INFINITY);
        }
    }




    static if(!is(typeof(EC_R_POINT_ARITHMETIC_FAILURE))) {
        private enum enumMixinStr_EC_R_POINT_ARITHMETIC_FAILURE = `enum EC_R_POINT_ARITHMETIC_FAILURE = 155;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_POINT_ARITHMETIC_FAILURE); }))) {
            mixin(enumMixinStr_EC_R_POINT_ARITHMETIC_FAILURE);
        }
    }




    static if(!is(typeof(EC_R_PKPARAMETERS2GROUP_FAILURE))) {
        private enum enumMixinStr_EC_R_PKPARAMETERS2GROUP_FAILURE = `enum EC_R_PKPARAMETERS2GROUP_FAILURE = 127;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_PKPARAMETERS2GROUP_FAILURE); }))) {
            mixin(enumMixinStr_EC_R_PKPARAMETERS2GROUP_FAILURE);
        }
    }




    static if(!is(typeof(EC_R_PEER_KEY_ERROR))) {
        private enum enumMixinStr_EC_R_PEER_KEY_ERROR = `enum EC_R_PEER_KEY_ERROR = 149;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_PEER_KEY_ERROR); }))) {
            mixin(enumMixinStr_EC_R_PEER_KEY_ERROR);
        }
    }




    static if(!is(typeof(EC_R_PASSED_NULL_PARAMETER))) {
        private enum enumMixinStr_EC_R_PASSED_NULL_PARAMETER = `enum EC_R_PASSED_NULL_PARAMETER = 134;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_PASSED_NULL_PARAMETER); }))) {
            mixin(enumMixinStr_EC_R_PASSED_NULL_PARAMETER);
        }
    }




    static if(!is(typeof(EC_R_OPERATION_NOT_SUPPORTED))) {
        private enum enumMixinStr_EC_R_OPERATION_NOT_SUPPORTED = `enum EC_R_OPERATION_NOT_SUPPORTED = 152;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_OPERATION_NOT_SUPPORTED); }))) {
            mixin(enumMixinStr_EC_R_OPERATION_NOT_SUPPORTED);
        }
    }




    static if(!is(typeof(EC_R_NO_PRIVATE_VALUE))) {
        private enum enumMixinStr_EC_R_NO_PRIVATE_VALUE = `enum EC_R_NO_PRIVATE_VALUE = 154;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_NO_PRIVATE_VALUE); }))) {
            mixin(enumMixinStr_EC_R_NO_PRIVATE_VALUE);
        }
    }




    static if(!is(typeof(EC_R_NO_PARAMETERS_SET))) {
        private enum enumMixinStr_EC_R_NO_PARAMETERS_SET = `enum EC_R_NO_PARAMETERS_SET = 139;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_NO_PARAMETERS_SET); }))) {
            mixin(enumMixinStr_EC_R_NO_PARAMETERS_SET);
        }
    }




    static if(!is(typeof(EC_R_NOT_INITIALIZED))) {
        private enum enumMixinStr_EC_R_NOT_INITIALIZED = `enum EC_R_NOT_INITIALIZED = 111;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_NOT_INITIALIZED); }))) {
            mixin(enumMixinStr_EC_R_NOT_INITIALIZED);
        }
    }




    static if(!is(typeof(EC_R_NOT_IMPLEMENTED))) {
        private enum enumMixinStr_EC_R_NOT_IMPLEMENTED = `enum EC_R_NOT_IMPLEMENTED = 126;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_NOT_IMPLEMENTED); }))) {
            mixin(enumMixinStr_EC_R_NOT_IMPLEMENTED);
        }
    }




    static if(!is(typeof(EC_R_NOT_A_NIST_PRIME))) {
        private enum enumMixinStr_EC_R_NOT_A_NIST_PRIME = `enum EC_R_NOT_A_NIST_PRIME = 135;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_NOT_A_NIST_PRIME); }))) {
            mixin(enumMixinStr_EC_R_NOT_A_NIST_PRIME);
        }
    }




    static if(!is(typeof(X509_STORE_CTX_get_chain))) {
        private enum enumMixinStr_X509_STORE_CTX_get_chain = `enum X509_STORE_CTX_get_chain = X509_STORE_CTX_get0_chain;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_STORE_CTX_get_chain); }))) {
            mixin(enumMixinStr_X509_STORE_CTX_get_chain);
        }
    }




    static if(!is(typeof(X509_STORE_CTX_set_chain))) {
        private enum enumMixinStr_X509_STORE_CTX_set_chain = `enum X509_STORE_CTX_set_chain = X509_STORE_CTX_set0_untrusted;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_STORE_CTX_set_chain); }))) {
            mixin(enumMixinStr_X509_STORE_CTX_set_chain);
        }
    }




    static if(!is(typeof(X509_STORE_CTX_trusted_stack))) {
        private enum enumMixinStr_X509_STORE_CTX_trusted_stack = `enum X509_STORE_CTX_trusted_stack = X509_STORE_CTX_set0_trusted_stack;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_STORE_CTX_trusted_stack); }))) {
            mixin(enumMixinStr_X509_STORE_CTX_trusted_stack);
        }
    }




    static if(!is(typeof(X509_STORE_get_by_subject))) {
        private enum enumMixinStr_X509_STORE_get_by_subject = `enum X509_STORE_get_by_subject = X509_STORE_CTX_get_by_subject;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_STORE_get_by_subject); }))) {
            mixin(enumMixinStr_X509_STORE_get_by_subject);
        }
    }




    static if(!is(typeof(X509_STORE_get1_certs))) {
        private enum enumMixinStr_X509_STORE_get1_certs = `enum X509_STORE_get1_certs = X509_STORE_CTX_get1_certs;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_STORE_get1_certs); }))) {
            mixin(enumMixinStr_X509_STORE_get1_certs);
        }
    }




    static if(!is(typeof(X509_STORE_get1_crls))) {
        private enum enumMixinStr_X509_STORE_get1_crls = `enum X509_STORE_get1_crls = X509_STORE_CTX_get1_crls;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_STORE_get1_crls); }))) {
            mixin(enumMixinStr_X509_STORE_get1_crls);
        }
    }




    static if(!is(typeof(X509_STORE_get1_cert))) {
        private enum enumMixinStr_X509_STORE_get1_cert = `enum X509_STORE_get1_cert = X509_STORE_CTX_get1_certs;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_STORE_get1_cert); }))) {
            mixin(enumMixinStr_X509_STORE_get1_cert);
        }
    }




    static if(!is(typeof(X509_STORE_get1_crl))) {
        private enum enumMixinStr_X509_STORE_get1_crl = `enum X509_STORE_get1_crl = X509_STORE_CTX_get1_crls;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_STORE_get1_crl); }))) {
            mixin(enumMixinStr_X509_STORE_get1_crl);
        }
    }




    static if(!is(typeof(EC_R_NEED_NEW_SETUP_VALUES))) {
        private enum enumMixinStr_EC_R_NEED_NEW_SETUP_VALUES = `enum EC_R_NEED_NEW_SETUP_VALUES = 157;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_NEED_NEW_SETUP_VALUES); }))) {
            mixin(enumMixinStr_EC_R_NEED_NEW_SETUP_VALUES);
        }
    }




    static if(!is(typeof(EC_R_MISSING_PRIVATE_KEY))) {
        private enum enumMixinStr_EC_R_MISSING_PRIVATE_KEY = `enum EC_R_MISSING_PRIVATE_KEY = 125;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_MISSING_PRIVATE_KEY); }))) {
            mixin(enumMixinStr_EC_R_MISSING_PRIVATE_KEY);
        }
    }




    static if(!is(typeof(EC_R_MISSING_PARAMETERS))) {
        private enum enumMixinStr_EC_R_MISSING_PARAMETERS = `enum EC_R_MISSING_PARAMETERS = 124;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_MISSING_PARAMETERS); }))) {
            mixin(enumMixinStr_EC_R_MISSING_PARAMETERS);
        }
    }




    static if(!is(typeof(EC_R_MISSING_OID))) {
        private enum enumMixinStr_EC_R_MISSING_OID = `enum EC_R_MISSING_OID = 167;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_MISSING_OID); }))) {
            mixin(enumMixinStr_EC_R_MISSING_OID);
        }
    }




    static if(!is(typeof(EC_R_LADDER_STEP_FAILURE))) {
        private enum enumMixinStr_EC_R_LADDER_STEP_FAILURE = `enum EC_R_LADDER_STEP_FAILURE = 162;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_LADDER_STEP_FAILURE); }))) {
            mixin(enumMixinStr_EC_R_LADDER_STEP_FAILURE);
        }
    }




    static if(!is(typeof(EC_R_LADDER_PRE_FAILURE))) {
        private enum enumMixinStr_EC_R_LADDER_PRE_FAILURE = `enum EC_R_LADDER_PRE_FAILURE = 153;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_LADDER_PRE_FAILURE); }))) {
            mixin(enumMixinStr_EC_R_LADDER_PRE_FAILURE);
        }
    }




    static if(!is(typeof(EC_R_LADDER_POST_FAILURE))) {
        private enum enumMixinStr_EC_R_LADDER_POST_FAILURE = `enum EC_R_LADDER_POST_FAILURE = 136;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_LADDER_POST_FAILURE); }))) {
            mixin(enumMixinStr_EC_R_LADDER_POST_FAILURE);
        }
    }




    static if(!is(typeof(EC_R_KEYS_NOT_SET))) {
        private enum enumMixinStr_EC_R_KEYS_NOT_SET = `enum EC_R_KEYS_NOT_SET = 140;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_KEYS_NOT_SET); }))) {
            mixin(enumMixinStr_EC_R_KEYS_NOT_SET);
        }
    }




    static if(!is(typeof(EC_R_KDF_PARAMETER_ERROR))) {
        private enum enumMixinStr_EC_R_KDF_PARAMETER_ERROR = `enum EC_R_KDF_PARAMETER_ERROR = 148;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_KDF_PARAMETER_ERROR); }))) {
            mixin(enumMixinStr_EC_R_KDF_PARAMETER_ERROR);
        }
    }




    static if(!is(typeof(EC_R_INVALID_TRINOMIAL_BASIS))) {
        private enum enumMixinStr_EC_R_INVALID_TRINOMIAL_BASIS = `enum EC_R_INVALID_TRINOMIAL_BASIS = 137;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_INVALID_TRINOMIAL_BASIS); }))) {
            mixin(enumMixinStr_EC_R_INVALID_TRINOMIAL_BASIS);
        }
    }




    static if(!is(typeof(EC_R_INVALID_PRIVATE_KEY))) {
        private enum enumMixinStr_EC_R_INVALID_PRIVATE_KEY = `enum EC_R_INVALID_PRIVATE_KEY = 123;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_INVALID_PRIVATE_KEY); }))) {
            mixin(enumMixinStr_EC_R_INVALID_PRIVATE_KEY);
        }
    }




    static if(!is(typeof(EC_R_INVALID_PENTANOMIAL_BASIS))) {
        private enum enumMixinStr_EC_R_INVALID_PENTANOMIAL_BASIS = `enum EC_R_INVALID_PENTANOMIAL_BASIS = 132;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_INVALID_PENTANOMIAL_BASIS); }))) {
            mixin(enumMixinStr_EC_R_INVALID_PENTANOMIAL_BASIS);
        }
    }




    static if(!is(typeof(EC_R_INVALID_PEER_KEY))) {
        private enum enumMixinStr_EC_R_INVALID_PEER_KEY = `enum EC_R_INVALID_PEER_KEY = 133;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_INVALID_PEER_KEY); }))) {
            mixin(enumMixinStr_EC_R_INVALID_PEER_KEY);
        }
    }




    static if(!is(typeof(EC_R_INVALID_OUTPUT_LENGTH))) {
        private enum enumMixinStr_EC_R_INVALID_OUTPUT_LENGTH = `enum EC_R_INVALID_OUTPUT_LENGTH = 161;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_INVALID_OUTPUT_LENGTH); }))) {
            mixin(enumMixinStr_EC_R_INVALID_OUTPUT_LENGTH);
        }
    }




    static if(!is(typeof(EC_R_INVALID_KEY))) {
        private enum enumMixinStr_EC_R_INVALID_KEY = `enum EC_R_INVALID_KEY = 116;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_INVALID_KEY); }))) {
            mixin(enumMixinStr_EC_R_INVALID_KEY);
        }
    }




    static if(!is(typeof(EC_R_INVALID_GROUP_ORDER))) {
        private enum enumMixinStr_EC_R_INVALID_GROUP_ORDER = `enum EC_R_INVALID_GROUP_ORDER = 122;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_INVALID_GROUP_ORDER); }))) {
            mixin(enumMixinStr_EC_R_INVALID_GROUP_ORDER);
        }
    }




    static if(!is(typeof(EC_R_INVALID_FORM))) {
        private enum enumMixinStr_EC_R_INVALID_FORM = `enum EC_R_INVALID_FORM = 104;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_INVALID_FORM); }))) {
            mixin(enumMixinStr_EC_R_INVALID_FORM);
        }
    }




    static if(!is(typeof(EC_R_INVALID_FIELD))) {
        private enum enumMixinStr_EC_R_INVALID_FIELD = `enum EC_R_INVALID_FIELD = 103;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_INVALID_FIELD); }))) {
            mixin(enumMixinStr_EC_R_INVALID_FIELD);
        }
    }




    static if(!is(typeof(EC_R_INVALID_ENCODING))) {
        private enum enumMixinStr_EC_R_INVALID_ENCODING = `enum EC_R_INVALID_ENCODING = 102;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_INVALID_ENCODING); }))) {
            mixin(enumMixinStr_EC_R_INVALID_ENCODING);
        }
    }




    static if(!is(typeof(EC_R_INVALID_DIGEST_TYPE))) {
        private enum enumMixinStr_EC_R_INVALID_DIGEST_TYPE = `enum EC_R_INVALID_DIGEST_TYPE = 138;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_INVALID_DIGEST_TYPE); }))) {
            mixin(enumMixinStr_EC_R_INVALID_DIGEST_TYPE);
        }
    }




    static if(!is(typeof(EC_R_INVALID_DIGEST))) {
        private enum enumMixinStr_EC_R_INVALID_DIGEST = `enum EC_R_INVALID_DIGEST = 151;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_INVALID_DIGEST); }))) {
            mixin(enumMixinStr_EC_R_INVALID_DIGEST);
        }
    }




    static if(!is(typeof(EC_R_INVALID_CURVE))) {
        private enum enumMixinStr_EC_R_INVALID_CURVE = `enum EC_R_INVALID_CURVE = 141;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_INVALID_CURVE); }))) {
            mixin(enumMixinStr_EC_R_INVALID_CURVE);
        }
    }




    static if(!is(typeof(EC_R_INVALID_COMPRESSION_BIT))) {
        private enum enumMixinStr_EC_R_INVALID_COMPRESSION_BIT = `enum EC_R_INVALID_COMPRESSION_BIT = 109;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_INVALID_COMPRESSION_BIT); }))) {
            mixin(enumMixinStr_EC_R_INVALID_COMPRESSION_BIT);
        }
    }




    static if(!is(typeof(EC_R_INVALID_COMPRESSED_POINT))) {
        private enum enumMixinStr_EC_R_INVALID_COMPRESSED_POINT = `enum EC_R_INVALID_COMPRESSED_POINT = 110;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_INVALID_COMPRESSED_POINT); }))) {
            mixin(enumMixinStr_EC_R_INVALID_COMPRESSED_POINT);
        }
    }




    static if(!is(typeof(EC_R_INVALID_ARGUMENT))) {
        private enum enumMixinStr_EC_R_INVALID_ARGUMENT = `enum EC_R_INVALID_ARGUMENT = 112;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_INVALID_ARGUMENT); }))) {
            mixin(enumMixinStr_EC_R_INVALID_ARGUMENT);
        }
    }




    static if(!is(typeof(EC_R_INCOMPATIBLE_OBJECTS))) {
        private enum enumMixinStr_EC_R_INCOMPATIBLE_OBJECTS = `enum EC_R_INCOMPATIBLE_OBJECTS = 101;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_INCOMPATIBLE_OBJECTS); }))) {
            mixin(enumMixinStr_EC_R_INCOMPATIBLE_OBJECTS);
        }
    }




    static if(!is(typeof(EC_R_I2D_ECPKPARAMETERS_FAILURE))) {
        private enum enumMixinStr_EC_R_I2D_ECPKPARAMETERS_FAILURE = `enum EC_R_I2D_ECPKPARAMETERS_FAILURE = 121;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_I2D_ECPKPARAMETERS_FAILURE); }))) {
            mixin(enumMixinStr_EC_R_I2D_ECPKPARAMETERS_FAILURE);
        }
    }




    static if(!is(typeof(EC_R_GROUP2PKPARAMETERS_FAILURE))) {
        private enum enumMixinStr_EC_R_GROUP2PKPARAMETERS_FAILURE = `enum EC_R_GROUP2PKPARAMETERS_FAILURE = 120;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_GROUP2PKPARAMETERS_FAILURE); }))) {
            mixin(enumMixinStr_EC_R_GROUP2PKPARAMETERS_FAILURE);
        }
    }




    static if(!is(typeof(EC_R_GF2M_NOT_SUPPORTED))) {
        private enum enumMixinStr_EC_R_GF2M_NOT_SUPPORTED = `enum EC_R_GF2M_NOT_SUPPORTED = 147;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_GF2M_NOT_SUPPORTED); }))) {
            mixin(enumMixinStr_EC_R_GF2M_NOT_SUPPORTED);
        }
    }




    static if(!is(typeof(EC_R_FIELD_TOO_LARGE))) {
        private enum enumMixinStr_EC_R_FIELD_TOO_LARGE = `enum EC_R_FIELD_TOO_LARGE = 143;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_FIELD_TOO_LARGE); }))) {
            mixin(enumMixinStr_EC_R_FIELD_TOO_LARGE);
        }
    }




    static if(!is(typeof(EC_R_EC_GROUP_NEW_BY_NAME_FAILURE))) {
        private enum enumMixinStr_EC_R_EC_GROUP_NEW_BY_NAME_FAILURE = `enum EC_R_EC_GROUP_NEW_BY_NAME_FAILURE = 119;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_EC_GROUP_NEW_BY_NAME_FAILURE); }))) {
            mixin(enumMixinStr_EC_R_EC_GROUP_NEW_BY_NAME_FAILURE);
        }
    }




    static if(!is(typeof(EC_R_DISCRIMINANT_IS_ZERO))) {
        private enum enumMixinStr_EC_R_DISCRIMINANT_IS_ZERO = `enum EC_R_DISCRIMINANT_IS_ZERO = 118;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_DISCRIMINANT_IS_ZERO); }))) {
            mixin(enumMixinStr_EC_R_DISCRIMINANT_IS_ZERO);
        }
    }




    static if(!is(typeof(EC_R_DECODE_ERROR))) {
        private enum enumMixinStr_EC_R_DECODE_ERROR = `enum EC_R_DECODE_ERROR = 142;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_DECODE_ERROR); }))) {
            mixin(enumMixinStr_EC_R_DECODE_ERROR);
        }
    }




    static if(!is(typeof(EC_R_D2I_ECPKPARAMETERS_FAILURE))) {
        private enum enumMixinStr_EC_R_D2I_ECPKPARAMETERS_FAILURE = `enum EC_R_D2I_ECPKPARAMETERS_FAILURE = 117;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_D2I_ECPKPARAMETERS_FAILURE); }))) {
            mixin(enumMixinStr_EC_R_D2I_ECPKPARAMETERS_FAILURE);
        }
    }




    static if(!is(typeof(EC_R_CURVE_DOES_NOT_SUPPORT_SIGNING))) {
        private enum enumMixinStr_EC_R_CURVE_DOES_NOT_SUPPORT_SIGNING = `enum EC_R_CURVE_DOES_NOT_SUPPORT_SIGNING = 159;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_CURVE_DOES_NOT_SUPPORT_SIGNING); }))) {
            mixin(enumMixinStr_EC_R_CURVE_DOES_NOT_SUPPORT_SIGNING);
        }
    }




    static if(!is(typeof(EC_R_CURVE_DOES_NOT_SUPPORT_ECDH))) {
        private enum enumMixinStr_EC_R_CURVE_DOES_NOT_SUPPORT_ECDH = `enum EC_R_CURVE_DOES_NOT_SUPPORT_ECDH = 160;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_CURVE_DOES_NOT_SUPPORT_ECDH); }))) {
            mixin(enumMixinStr_EC_R_CURVE_DOES_NOT_SUPPORT_ECDH);
        }
    }




    static if(!is(typeof(EC_R_COORDINATES_OUT_OF_RANGE))) {
        private enum enumMixinStr_EC_R_COORDINATES_OUT_OF_RANGE = `enum EC_R_COORDINATES_OUT_OF_RANGE = 146;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_COORDINATES_OUT_OF_RANGE); }))) {
            mixin(enumMixinStr_EC_R_COORDINATES_OUT_OF_RANGE);
        }
    }




    static if(!is(typeof(EC_R_CANNOT_INVERT))) {
        private enum enumMixinStr_EC_R_CANNOT_INVERT = `enum EC_R_CANNOT_INVERT = 165;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_CANNOT_INVERT); }))) {
            mixin(enumMixinStr_EC_R_CANNOT_INVERT);
        }
    }




    static if(!is(typeof(EC_R_BUFFER_TOO_SMALL))) {
        private enum enumMixinStr_EC_R_BUFFER_TOO_SMALL = `enum EC_R_BUFFER_TOO_SMALL = 100;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_BUFFER_TOO_SMALL); }))) {
            mixin(enumMixinStr_EC_R_BUFFER_TOO_SMALL);
        }
    }




    static if(!is(typeof(EC_R_BIGNUM_OUT_OF_RANGE))) {
        private enum enumMixinStr_EC_R_BIGNUM_OUT_OF_RANGE = `enum EC_R_BIGNUM_OUT_OF_RANGE = 144;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_BIGNUM_OUT_OF_RANGE); }))) {
            mixin(enumMixinStr_EC_R_BIGNUM_OUT_OF_RANGE);
        }
    }




    static if(!is(typeof(EC_R_BAD_SIGNATURE))) {
        private enum enumMixinStr_EC_R_BAD_SIGNATURE = `enum EC_R_BAD_SIGNATURE = 156;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_BAD_SIGNATURE); }))) {
            mixin(enumMixinStr_EC_R_BAD_SIGNATURE);
        }
    }




    static if(!is(typeof(EC_R_ASN1_ERROR))) {
        private enum enumMixinStr_EC_R_ASN1_ERROR = `enum EC_R_ASN1_ERROR = 115;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_R_ASN1_ERROR); }))) {
            mixin(enumMixinStr_EC_R_ASN1_ERROR);
        }
    }




    static if(!is(typeof(EC_F_VALIDATE_ECX_DERIVE))) {
        private enum enumMixinStr_EC_F_VALIDATE_ECX_DERIVE = `enum EC_F_VALIDATE_ECX_DERIVE = 278;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_VALIDATE_ECX_DERIVE); }))) {
            mixin(enumMixinStr_EC_F_VALIDATE_ECX_DERIVE);
        }
    }




    static if(!is(typeof(EC_F_PKEY_EC_SIGN))) {
        private enum enumMixinStr_EC_F_PKEY_EC_SIGN = `enum EC_F_PKEY_EC_SIGN = 218;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_PKEY_EC_SIGN); }))) {
            mixin(enumMixinStr_EC_F_PKEY_EC_SIGN);
        }
    }




    static if(!is(typeof(EC_F_PKEY_EC_PARAMGEN))) {
        private enum enumMixinStr_EC_F_PKEY_EC_PARAMGEN = `enum EC_F_PKEY_EC_PARAMGEN = 219;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_PKEY_EC_PARAMGEN); }))) {
            mixin(enumMixinStr_EC_F_PKEY_EC_PARAMGEN);
        }
    }




    static if(!is(typeof(EC_F_PKEY_EC_KEYGEN))) {
        private enum enumMixinStr_EC_F_PKEY_EC_KEYGEN = `enum EC_F_PKEY_EC_KEYGEN = 199;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_PKEY_EC_KEYGEN); }))) {
            mixin(enumMixinStr_EC_F_PKEY_EC_KEYGEN);
        }
    }




    static if(!is(typeof(EC_F_PKEY_EC_KDF_DERIVE))) {
        private enum enumMixinStr_EC_F_PKEY_EC_KDF_DERIVE = `enum EC_F_PKEY_EC_KDF_DERIVE = 283;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_PKEY_EC_KDF_DERIVE); }))) {
            mixin(enumMixinStr_EC_F_PKEY_EC_KDF_DERIVE);
        }
    }




    static if(!is(typeof(EC_F_PKEY_EC_INIT))) {
        private enum enumMixinStr_EC_F_PKEY_EC_INIT = `enum EC_F_PKEY_EC_INIT = 282;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_PKEY_EC_INIT); }))) {
            mixin(enumMixinStr_EC_F_PKEY_EC_INIT);
        }
    }




    static if(!is(typeof(EC_F_PKEY_EC_DERIVE))) {
        private enum enumMixinStr_EC_F_PKEY_EC_DERIVE = `enum EC_F_PKEY_EC_DERIVE = 217;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_PKEY_EC_DERIVE); }))) {
            mixin(enumMixinStr_EC_F_PKEY_EC_DERIVE);
        }
    }






    static if(!is(typeof(EC_F_PKEY_EC_CTRL_STR))) {
        private enum enumMixinStr_EC_F_PKEY_EC_CTRL_STR = `enum EC_F_PKEY_EC_CTRL_STR = 198;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_PKEY_EC_CTRL_STR); }))) {
            mixin(enumMixinStr_EC_F_PKEY_EC_CTRL_STR);
        }
    }




    static if(!is(typeof(EC_F_PKEY_EC_CTRL))) {
        private enum enumMixinStr_EC_F_PKEY_EC_CTRL = `enum EC_F_PKEY_EC_CTRL = 197;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_PKEY_EC_CTRL); }))) {
            mixin(enumMixinStr_EC_F_PKEY_EC_CTRL);
        }
    }




    static if(!is(typeof(EC_F_PKEY_ECX_DERIVE))) {
        private enum enumMixinStr_EC_F_PKEY_ECX_DERIVE = `enum EC_F_PKEY_ECX_DERIVE = 269;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_PKEY_ECX_DERIVE); }))) {
            mixin(enumMixinStr_EC_F_PKEY_ECX_DERIVE);
        }
    }




    static if(!is(typeof(EC_F_PKEY_ECD_DIGESTSIGN448))) {
        private enum enumMixinStr_EC_F_PKEY_ECD_DIGESTSIGN448 = `enum EC_F_PKEY_ECD_DIGESTSIGN448 = 277;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_PKEY_ECD_DIGESTSIGN448); }))) {
            mixin(enumMixinStr_EC_F_PKEY_ECD_DIGESTSIGN448);
        }
    }




    static if(!is(typeof(EC_F_PKEY_ECD_DIGESTSIGN25519))) {
        private enum enumMixinStr_EC_F_PKEY_ECD_DIGESTSIGN25519 = `enum EC_F_PKEY_ECD_DIGESTSIGN25519 = 276;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_PKEY_ECD_DIGESTSIGN25519); }))) {
            mixin(enumMixinStr_EC_F_PKEY_ECD_DIGESTSIGN25519);
        }
    }




    static if(!is(typeof(EC_F_PKEY_ECD_DIGESTSIGN))) {
        private enum enumMixinStr_EC_F_PKEY_ECD_DIGESTSIGN = `enum EC_F_PKEY_ECD_DIGESTSIGN = 272;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_PKEY_ECD_DIGESTSIGN); }))) {
            mixin(enumMixinStr_EC_F_PKEY_ECD_DIGESTSIGN);
        }
    }




    static if(!is(typeof(EC_F_PKEY_ECD_CTRL))) {
        private enum enumMixinStr_EC_F_PKEY_ECD_CTRL = `enum EC_F_PKEY_ECD_CTRL = 271;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_PKEY_ECD_CTRL); }))) {
            mixin(enumMixinStr_EC_F_PKEY_ECD_CTRL);
        }
    }




    static if(!is(typeof(EC_F_OSSL_ECDSA_VERIFY_SIG))) {
        private enum enumMixinStr_EC_F_OSSL_ECDSA_VERIFY_SIG = `enum EC_F_OSSL_ECDSA_VERIFY_SIG = 250;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_OSSL_ECDSA_VERIFY_SIG); }))) {
            mixin(enumMixinStr_EC_F_OSSL_ECDSA_VERIFY_SIG);
        }
    }




    static if(!is(typeof(EC_F_OSSL_ECDSA_SIGN_SIG))) {
        private enum enumMixinStr_EC_F_OSSL_ECDSA_SIGN_SIG = `enum EC_F_OSSL_ECDSA_SIGN_SIG = 249;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_OSSL_ECDSA_SIGN_SIG); }))) {
            mixin(enumMixinStr_EC_F_OSSL_ECDSA_SIGN_SIG);
        }
    }




    static if(!is(typeof(EC_F_OSSL_ECDH_COMPUTE_KEY))) {
        private enum enumMixinStr_EC_F_OSSL_ECDH_COMPUTE_KEY = `enum EC_F_OSSL_ECDH_COMPUTE_KEY = 247;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_OSSL_ECDH_COMPUTE_KEY); }))) {
            mixin(enumMixinStr_EC_F_OSSL_ECDH_COMPUTE_KEY);
        }
    }




    static if(!is(typeof(EC_F_OLD_EC_PRIV_DECODE))) {
        private enum enumMixinStr_EC_F_OLD_EC_PRIV_DECODE = `enum EC_F_OLD_EC_PRIV_DECODE = 222;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_OLD_EC_PRIV_DECODE); }))) {
            mixin(enumMixinStr_EC_F_OLD_EC_PRIV_DECODE);
        }
    }




    static if(!is(typeof(EC_F_O2I_ECPUBLICKEY))) {
        private enum enumMixinStr_EC_F_O2I_ECPUBLICKEY = `enum EC_F_O2I_ECPUBLICKEY = 152;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_O2I_ECPUBLICKEY); }))) {
            mixin(enumMixinStr_EC_F_O2I_ECPUBLICKEY);
        }
    }




    static if(!is(typeof(EC_F_NISTP521_PRE_COMP_NEW))) {
        private enum enumMixinStr_EC_F_NISTP521_PRE_COMP_NEW = `enum EC_F_NISTP521_PRE_COMP_NEW = 237;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_NISTP521_PRE_COMP_NEW); }))) {
            mixin(enumMixinStr_EC_F_NISTP521_PRE_COMP_NEW);
        }
    }




    static if(!is(typeof(EC_F_NISTP256_PRE_COMP_NEW))) {
        private enum enumMixinStr_EC_F_NISTP256_PRE_COMP_NEW = `enum EC_F_NISTP256_PRE_COMP_NEW = 236;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_NISTP256_PRE_COMP_NEW); }))) {
            mixin(enumMixinStr_EC_F_NISTP256_PRE_COMP_NEW);
        }
    }




    static if(!is(typeof(EC_F_NISTP224_PRE_COMP_NEW))) {
        private enum enumMixinStr_EC_F_NISTP224_PRE_COMP_NEW = `enum EC_F_NISTP224_PRE_COMP_NEW = 227;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_NISTP224_PRE_COMP_NEW); }))) {
            mixin(enumMixinStr_EC_F_NISTP224_PRE_COMP_NEW);
        }
    }




    static if(!is(typeof(EC_F_I2O_ECPUBLICKEY))) {
        private enum enumMixinStr_EC_F_I2O_ECPUBLICKEY = `enum EC_F_I2O_ECPUBLICKEY = 151;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_I2O_ECPUBLICKEY); }))) {
            mixin(enumMixinStr_EC_F_I2O_ECPUBLICKEY);
        }
    }




    static if(!is(typeof(EC_F_I2D_ECPRIVATEKEY))) {
        private enum enumMixinStr_EC_F_I2D_ECPRIVATEKEY = `enum EC_F_I2D_ECPRIVATEKEY = 192;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_I2D_ECPRIVATEKEY); }))) {
            mixin(enumMixinStr_EC_F_I2D_ECPRIVATEKEY);
        }
    }




    static if(!is(typeof(EC_F_I2D_ECPKPARAMETERS))) {
        private enum enumMixinStr_EC_F_I2D_ECPKPARAMETERS = `enum EC_F_I2D_ECPKPARAMETERS = 191;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_I2D_ECPKPARAMETERS); }))) {
            mixin(enumMixinStr_EC_F_I2D_ECPKPARAMETERS);
        }
    }




    static if(!is(typeof(EC_F_I2D_ECPARAMETERS))) {
        private enum enumMixinStr_EC_F_I2D_ECPARAMETERS = `enum EC_F_I2D_ECPARAMETERS = 190;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_I2D_ECPARAMETERS); }))) {
            mixin(enumMixinStr_EC_F_I2D_ECPARAMETERS);
        }
    }




    static if(!is(typeof(EC_F_EC_WNAF_PRECOMPUTE_MULT))) {
        private enum enumMixinStr_EC_F_EC_WNAF_PRECOMPUTE_MULT = `enum EC_F_EC_WNAF_PRECOMPUTE_MULT = 188;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_WNAF_PRECOMPUTE_MULT); }))) {
            mixin(enumMixinStr_EC_F_EC_WNAF_PRECOMPUTE_MULT);
        }
    }




    static if(!is(typeof(EC_F_EC_WNAF_MUL))) {
        private enum enumMixinStr_EC_F_EC_WNAF_MUL = `enum EC_F_EC_WNAF_MUL = 187;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_WNAF_MUL); }))) {
            mixin(enumMixinStr_EC_F_EC_WNAF_MUL);
        }
    }




    static if(!is(typeof(EC_F_EC_SCALAR_MUL_LADDER))) {
        private enum enumMixinStr_EC_F_EC_SCALAR_MUL_LADDER = `enum EC_F_EC_SCALAR_MUL_LADDER = 284;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_SCALAR_MUL_LADDER); }))) {
            mixin(enumMixinStr_EC_F_EC_SCALAR_MUL_LADDER);
        }
    }




    static if(!is(typeof(EC_F_EC_PRE_COMP_NEW))) {
        private enum enumMixinStr_EC_F_EC_PRE_COMP_NEW = `enum EC_F_EC_PRE_COMP_NEW = 196;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_PRE_COMP_NEW); }))) {
            mixin(enumMixinStr_EC_F_EC_PRE_COMP_NEW);
        }
    }




    static if(!is(typeof(EC_F_EC_POINT_SET_TO_INFINITY))) {
        private enum enumMixinStr_EC_F_EC_POINT_SET_TO_INFINITY = `enum EC_F_EC_POINT_SET_TO_INFINITY = 127;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_POINT_SET_TO_INFINITY); }))) {
            mixin(enumMixinStr_EC_F_EC_POINT_SET_TO_INFINITY);
        }
    }




    static if(!is(typeof(EC_F_EC_POINT_SET_JPROJECTIVE_COORDINATES_GFP))) {
        private enum enumMixinStr_EC_F_EC_POINT_SET_JPROJECTIVE_COORDINATES_GFP = `enum EC_F_EC_POINT_SET_JPROJECTIVE_COORDINATES_GFP = 126;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_POINT_SET_JPROJECTIVE_COORDINATES_GFP); }))) {
            mixin(enumMixinStr_EC_F_EC_POINT_SET_JPROJECTIVE_COORDINATES_GFP);
        }
    }




    static if(!is(typeof(EC_F_EC_POINT_SET_COMPRESSED_COORDINATES_GFP))) {
        private enum enumMixinStr_EC_F_EC_POINT_SET_COMPRESSED_COORDINATES_GFP = `enum EC_F_EC_POINT_SET_COMPRESSED_COORDINATES_GFP = 125;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_POINT_SET_COMPRESSED_COORDINATES_GFP); }))) {
            mixin(enumMixinStr_EC_F_EC_POINT_SET_COMPRESSED_COORDINATES_GFP);
        }
    }




    static if(!is(typeof(EC_F_EC_POINT_SET_COMPRESSED_COORDINATES_GF2M))) {
        private enum enumMixinStr_EC_F_EC_POINT_SET_COMPRESSED_COORDINATES_GF2M = `enum EC_F_EC_POINT_SET_COMPRESSED_COORDINATES_GF2M = 186;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_POINT_SET_COMPRESSED_COORDINATES_GF2M); }))) {
            mixin(enumMixinStr_EC_F_EC_POINT_SET_COMPRESSED_COORDINATES_GF2M);
        }
    }




    static if(!is(typeof(EC_F_EC_POINT_SET_COMPRESSED_COORDINATES))) {
        private enum enumMixinStr_EC_F_EC_POINT_SET_COMPRESSED_COORDINATES = `enum EC_F_EC_POINT_SET_COMPRESSED_COORDINATES = 295;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_POINT_SET_COMPRESSED_COORDINATES); }))) {
            mixin(enumMixinStr_EC_F_EC_POINT_SET_COMPRESSED_COORDINATES);
        }
    }




    static if(!is(typeof(EC_F_EC_POINT_SET_AFFINE_COORDINATES_GFP))) {
        private enum enumMixinStr_EC_F_EC_POINT_SET_AFFINE_COORDINATES_GFP = `enum EC_F_EC_POINT_SET_AFFINE_COORDINATES_GFP = 124;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_POINT_SET_AFFINE_COORDINATES_GFP); }))) {
            mixin(enumMixinStr_EC_F_EC_POINT_SET_AFFINE_COORDINATES_GFP);
        }
    }




    static if(!is(typeof(EC_F_EC_POINT_SET_AFFINE_COORDINATES_GF2M))) {
        private enum enumMixinStr_EC_F_EC_POINT_SET_AFFINE_COORDINATES_GF2M = `enum EC_F_EC_POINT_SET_AFFINE_COORDINATES_GF2M = 185;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_POINT_SET_AFFINE_COORDINATES_GF2M); }))) {
            mixin(enumMixinStr_EC_F_EC_POINT_SET_AFFINE_COORDINATES_GF2M);
        }
    }




    static if(!is(typeof(EC_F_EC_POINT_SET_AFFINE_COORDINATES))) {
        private enum enumMixinStr_EC_F_EC_POINT_SET_AFFINE_COORDINATES = `enum EC_F_EC_POINT_SET_AFFINE_COORDINATES = 294;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_POINT_SET_AFFINE_COORDINATES); }))) {
            mixin(enumMixinStr_EC_F_EC_POINT_SET_AFFINE_COORDINATES);
        }
    }




    static if(!is(typeof(EC_F_EC_POINT_POINT2OCT))) {
        private enum enumMixinStr_EC_F_EC_POINT_POINT2OCT = `enum EC_F_EC_POINT_POINT2OCT = 123;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_POINT_POINT2OCT); }))) {
            mixin(enumMixinStr_EC_F_EC_POINT_POINT2OCT);
        }
    }




    static if(!is(typeof(DANE_FLAG_NO_DANE_EE_NAMECHECKS))) {
        private enum enumMixinStr_DANE_FLAG_NO_DANE_EE_NAMECHECKS = `enum DANE_FLAG_NO_DANE_EE_NAMECHECKS = ( 1L << 0 );`;
        static if(is(typeof({ mixin(enumMixinStr_DANE_FLAG_NO_DANE_EE_NAMECHECKS); }))) {
            mixin(enumMixinStr_DANE_FLAG_NO_DANE_EE_NAMECHECKS);
        }
    }




    static if(!is(typeof(EC_F_EC_POINT_POINT2BUF))) {
        private enum enumMixinStr_EC_F_EC_POINT_POINT2BUF = `enum EC_F_EC_POINT_POINT2BUF = 281;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_POINT_POINT2BUF); }))) {
            mixin(enumMixinStr_EC_F_EC_POINT_POINT2BUF);
        }
    }




    static if(!is(typeof(EC_F_EC_POINT_OCT2POINT))) {
        private enum enumMixinStr_EC_F_EC_POINT_OCT2POINT = `enum EC_F_EC_POINT_OCT2POINT = 122;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_POINT_OCT2POINT); }))) {
            mixin(enumMixinStr_EC_F_EC_POINT_OCT2POINT);
        }
    }




    static if(!is(typeof(EC_F_EC_POINT_NEW))) {
        private enum enumMixinStr_EC_F_EC_POINT_NEW = `enum EC_F_EC_POINT_NEW = 121;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_POINT_NEW); }))) {
            mixin(enumMixinStr_EC_F_EC_POINT_NEW);
        }
    }




    static if(!is(typeof(EC_F_EC_POINT_MAKE_AFFINE))) {
        private enum enumMixinStr_EC_F_EC_POINT_MAKE_AFFINE = `enum EC_F_EC_POINT_MAKE_AFFINE = 120;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_POINT_MAKE_AFFINE); }))) {
            mixin(enumMixinStr_EC_F_EC_POINT_MAKE_AFFINE);
        }
    }




    static if(!is(typeof(EC_F_EC_POINT_IS_ON_CURVE))) {
        private enum enumMixinStr_EC_F_EC_POINT_IS_ON_CURVE = `enum EC_F_EC_POINT_IS_ON_CURVE = 119;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_POINT_IS_ON_CURVE); }))) {
            mixin(enumMixinStr_EC_F_EC_POINT_IS_ON_CURVE);
        }
    }




    static if(!is(typeof(EC_F_EC_POINT_IS_AT_INFINITY))) {
        private enum enumMixinStr_EC_F_EC_POINT_IS_AT_INFINITY = `enum EC_F_EC_POINT_IS_AT_INFINITY = 118;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_POINT_IS_AT_INFINITY); }))) {
            mixin(enumMixinStr_EC_F_EC_POINT_IS_AT_INFINITY);
        }
    }




    static if(!is(typeof(EC_F_EC_POINT_INVERT))) {
        private enum enumMixinStr_EC_F_EC_POINT_INVERT = `enum EC_F_EC_POINT_INVERT = 210;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_POINT_INVERT); }))) {
            mixin(enumMixinStr_EC_F_EC_POINT_INVERT);
        }
    }




    static if(!is(typeof(EC_F_EC_POINT_GET_JPROJECTIVE_COORDINATES_GFP))) {
        private enum enumMixinStr_EC_F_EC_POINT_GET_JPROJECTIVE_COORDINATES_GFP = `enum EC_F_EC_POINT_GET_JPROJECTIVE_COORDINATES_GFP = 117;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_POINT_GET_JPROJECTIVE_COORDINATES_GFP); }))) {
            mixin(enumMixinStr_EC_F_EC_POINT_GET_JPROJECTIVE_COORDINATES_GFP);
        }
    }




    static if(!is(typeof(EC_F_EC_POINT_GET_AFFINE_COORDINATES_GFP))) {
        private enum enumMixinStr_EC_F_EC_POINT_GET_AFFINE_COORDINATES_GFP = `enum EC_F_EC_POINT_GET_AFFINE_COORDINATES_GFP = 116;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_POINT_GET_AFFINE_COORDINATES_GFP); }))) {
            mixin(enumMixinStr_EC_F_EC_POINT_GET_AFFINE_COORDINATES_GFP);
        }
    }




    static if(!is(typeof(EC_F_EC_POINT_GET_AFFINE_COORDINATES_GF2M))) {
        private enum enumMixinStr_EC_F_EC_POINT_GET_AFFINE_COORDINATES_GF2M = `enum EC_F_EC_POINT_GET_AFFINE_COORDINATES_GF2M = 183;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_POINT_GET_AFFINE_COORDINATES_GF2M); }))) {
            mixin(enumMixinStr_EC_F_EC_POINT_GET_AFFINE_COORDINATES_GF2M);
        }
    }




    static if(!is(typeof(EC_F_EC_POINT_GET_AFFINE_COORDINATES))) {
        private enum enumMixinStr_EC_F_EC_POINT_GET_AFFINE_COORDINATES = `enum EC_F_EC_POINT_GET_AFFINE_COORDINATES = 293;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_POINT_GET_AFFINE_COORDINATES); }))) {
            mixin(enumMixinStr_EC_F_EC_POINT_GET_AFFINE_COORDINATES);
        }
    }




    static if(!is(typeof(EC_F_EC_POINT_DBL))) {
        private enum enumMixinStr_EC_F_EC_POINT_DBL = `enum EC_F_EC_POINT_DBL = 115;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_POINT_DBL); }))) {
            mixin(enumMixinStr_EC_F_EC_POINT_DBL);
        }
    }




    static if(!is(typeof(EC_F_EC_POINT_COPY))) {
        private enum enumMixinStr_EC_F_EC_POINT_COPY = `enum EC_F_EC_POINT_COPY = 114;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_POINT_COPY); }))) {
            mixin(enumMixinStr_EC_F_EC_POINT_COPY);
        }
    }




    static if(!is(typeof(EC_F_EC_POINT_CMP))) {
        private enum enumMixinStr_EC_F_EC_POINT_CMP = `enum EC_F_EC_POINT_CMP = 113;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_POINT_CMP); }))) {
            mixin(enumMixinStr_EC_F_EC_POINT_CMP);
        }
    }




    static if(!is(typeof(EC_F_EC_POINT_BN2POINT))) {
        private enum enumMixinStr_EC_F_EC_POINT_BN2POINT = `enum EC_F_EC_POINT_BN2POINT = 280;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_POINT_BN2POINT); }))) {
            mixin(enumMixinStr_EC_F_EC_POINT_BN2POINT);
        }
    }




    static if(!is(typeof(EC_F_EC_POINT_ADD))) {
        private enum enumMixinStr_EC_F_EC_POINT_ADD = `enum EC_F_EC_POINT_ADD = 112;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_POINT_ADD); }))) {
            mixin(enumMixinStr_EC_F_EC_POINT_ADD);
        }
    }




    static if(!is(typeof(EC_F_EC_POINTS_MUL))) {
        private enum enumMixinStr_EC_F_EC_POINTS_MUL = `enum EC_F_EC_POINTS_MUL = 290;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_POINTS_MUL); }))) {
            mixin(enumMixinStr_EC_F_EC_POINTS_MUL);
        }
    }




    static if(!is(typeof(EC_F_EC_POINTS_MAKE_AFFINE))) {
        private enum enumMixinStr_EC_F_EC_POINTS_MAKE_AFFINE = `enum EC_F_EC_POINTS_MAKE_AFFINE = 136;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_POINTS_MAKE_AFFINE); }))) {
            mixin(enumMixinStr_EC_F_EC_POINTS_MAKE_AFFINE);
        }
    }




    static if(!is(typeof(EC_F_EC_PKEY_PARAM_CHECK))) {
        private enum enumMixinStr_EC_F_EC_PKEY_PARAM_CHECK = `enum EC_F_EC_PKEY_PARAM_CHECK = 274;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_PKEY_PARAM_CHECK); }))) {
            mixin(enumMixinStr_EC_F_EC_PKEY_PARAM_CHECK);
        }
    }




    static if(!is(typeof(EC_F_EC_PKEY_CHECK))) {
        private enum enumMixinStr_EC_F_EC_PKEY_CHECK = `enum EC_F_EC_PKEY_CHECK = 273;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_PKEY_CHECK); }))) {
            mixin(enumMixinStr_EC_F_EC_PKEY_CHECK);
        }
    }




    static if(!is(typeof(EC_F_EC_KEY_SIMPLE_PRIV2OCT))) {
        private enum enumMixinStr_EC_F_EC_KEY_SIMPLE_PRIV2OCT = `enum EC_F_EC_KEY_SIMPLE_PRIV2OCT = 260;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_KEY_SIMPLE_PRIV2OCT); }))) {
            mixin(enumMixinStr_EC_F_EC_KEY_SIMPLE_PRIV2OCT);
        }
    }




    static if(!is(typeof(EC_F_EC_KEY_SIMPLE_OCT2PRIV))) {
        private enum enumMixinStr_EC_F_EC_KEY_SIMPLE_OCT2PRIV = `enum EC_F_EC_KEY_SIMPLE_OCT2PRIV = 259;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_KEY_SIMPLE_OCT2PRIV); }))) {
            mixin(enumMixinStr_EC_F_EC_KEY_SIMPLE_OCT2PRIV);
        }
    }




    static if(!is(typeof(EC_F_EC_KEY_SIMPLE_CHECK_KEY))) {
        private enum enumMixinStr_EC_F_EC_KEY_SIMPLE_CHECK_KEY = `enum EC_F_EC_KEY_SIMPLE_CHECK_KEY = 258;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_KEY_SIMPLE_CHECK_KEY); }))) {
            mixin(enumMixinStr_EC_F_EC_KEY_SIMPLE_CHECK_KEY);
        }
    }




    static if(!is(typeof(EC_F_EC_KEY_SET_PUBLIC_KEY_AFFINE_COORDINATES))) {
        private enum enumMixinStr_EC_F_EC_KEY_SET_PUBLIC_KEY_AFFINE_COORDINATES = `enum EC_F_EC_KEY_SET_PUBLIC_KEY_AFFINE_COORDINATES = 229;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_KEY_SET_PUBLIC_KEY_AFFINE_COORDINATES); }))) {
            mixin(enumMixinStr_EC_F_EC_KEY_SET_PUBLIC_KEY_AFFINE_COORDINATES);
        }
    }




    static if(!is(typeof(EC_F_EC_KEY_PRIV2OCT))) {
        private enum enumMixinStr_EC_F_EC_KEY_PRIV2OCT = `enum EC_F_EC_KEY_PRIV2OCT = 256;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_KEY_PRIV2OCT); }))) {
            mixin(enumMixinStr_EC_F_EC_KEY_PRIV2OCT);
        }
    }




    static if(!is(typeof(EC_F_EC_KEY_PRIV2BUF))) {
        private enum enumMixinStr_EC_F_EC_KEY_PRIV2BUF = `enum EC_F_EC_KEY_PRIV2BUF = 279;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_KEY_PRIV2BUF); }))) {
            mixin(enumMixinStr_EC_F_EC_KEY_PRIV2BUF);
        }
    }




    static if(!is(typeof(EC_F_EC_KEY_PRINT_FP))) {
        private enum enumMixinStr_EC_F_EC_KEY_PRINT_FP = `enum EC_F_EC_KEY_PRINT_FP = 181;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_KEY_PRINT_FP); }))) {
            mixin(enumMixinStr_EC_F_EC_KEY_PRINT_FP);
        }
    }




    static if(!is(typeof(EC_F_EC_KEY_PRINT))) {
        private enum enumMixinStr_EC_F_EC_KEY_PRINT = `enum EC_F_EC_KEY_PRINT = 180;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_KEY_PRINT); }))) {
            mixin(enumMixinStr_EC_F_EC_KEY_PRINT);
        }
    }




    static if(!is(typeof(EC_F_EC_KEY_OCT2PRIV))) {
        private enum enumMixinStr_EC_F_EC_KEY_OCT2PRIV = `enum EC_F_EC_KEY_OCT2PRIV = 255;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_KEY_OCT2PRIV); }))) {
            mixin(enumMixinStr_EC_F_EC_KEY_OCT2PRIV);
        }
    }




    static if(!is(typeof(EC_F_EC_KEY_NEW_METHOD))) {
        private enum enumMixinStr_EC_F_EC_KEY_NEW_METHOD = `enum EC_F_EC_KEY_NEW_METHOD = 245;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_KEY_NEW_METHOD); }))) {
            mixin(enumMixinStr_EC_F_EC_KEY_NEW_METHOD);
        }
    }




    static if(!is(typeof(EC_F_EC_KEY_NEW))) {
        private enum enumMixinStr_EC_F_EC_KEY_NEW = `enum EC_F_EC_KEY_NEW = 182;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_KEY_NEW); }))) {
            mixin(enumMixinStr_EC_F_EC_KEY_NEW);
        }
    }




    static if(!is(typeof(EC_F_EC_KEY_GENERATE_KEY))) {
        private enum enumMixinStr_EC_F_EC_KEY_GENERATE_KEY = `enum EC_F_EC_KEY_GENERATE_KEY = 179;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_KEY_GENERATE_KEY); }))) {
            mixin(enumMixinStr_EC_F_EC_KEY_GENERATE_KEY);
        }
    }




    static if(!is(typeof(EC_F_EC_KEY_COPY))) {
        private enum enumMixinStr_EC_F_EC_KEY_COPY = `enum EC_F_EC_KEY_COPY = 178;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_KEY_COPY); }))) {
            mixin(enumMixinStr_EC_F_EC_KEY_COPY);
        }
    }




    static if(!is(typeof(EC_F_EC_KEY_CHECK_KEY))) {
        private enum enumMixinStr_EC_F_EC_KEY_CHECK_KEY = `enum EC_F_EC_KEY_CHECK_KEY = 177;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_KEY_CHECK_KEY); }))) {
            mixin(enumMixinStr_EC_F_EC_KEY_CHECK_KEY);
        }
    }




    static if(!is(typeof(EC_F_EC_GROUP_SET_SEED))) {
        private enum enumMixinStr_EC_F_EC_GROUP_SET_SEED = `enum EC_F_EC_GROUP_SET_SEED = 286;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GROUP_SET_SEED); }))) {
            mixin(enumMixinStr_EC_F_EC_GROUP_SET_SEED);
        }
    }




    static if(!is(typeof(EC_F_EC_GROUP_SET_GENERATOR))) {
        private enum enumMixinStr_EC_F_EC_GROUP_SET_GENERATOR = `enum EC_F_EC_GROUP_SET_GENERATOR = 111;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GROUP_SET_GENERATOR); }))) {
            mixin(enumMixinStr_EC_F_EC_GROUP_SET_GENERATOR);
        }
    }




    static if(!is(typeof(X509_PCY_TREE_FAILURE))) {
        private enum enumMixinStr_X509_PCY_TREE_FAILURE = `enum X509_PCY_TREE_FAILURE = - 2;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_PCY_TREE_FAILURE); }))) {
            mixin(enumMixinStr_X509_PCY_TREE_FAILURE);
        }
    }




    static if(!is(typeof(X509_PCY_TREE_INVALID))) {
        private enum enumMixinStr_X509_PCY_TREE_INVALID = `enum X509_PCY_TREE_INVALID = - 1;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_PCY_TREE_INVALID); }))) {
            mixin(enumMixinStr_X509_PCY_TREE_INVALID);
        }
    }




    static if(!is(typeof(X509_PCY_TREE_INTERNAL))) {
        private enum enumMixinStr_X509_PCY_TREE_INTERNAL = `enum X509_PCY_TREE_INTERNAL = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_PCY_TREE_INTERNAL); }))) {
            mixin(enumMixinStr_X509_PCY_TREE_INTERNAL);
        }
    }




    static if(!is(typeof(X509_PCY_TREE_VALID))) {
        private enum enumMixinStr_X509_PCY_TREE_VALID = `enum X509_PCY_TREE_VALID = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_PCY_TREE_VALID); }))) {
            mixin(enumMixinStr_X509_PCY_TREE_VALID);
        }
    }




    static if(!is(typeof(X509_PCY_TREE_EMPTY))) {
        private enum enumMixinStr_X509_PCY_TREE_EMPTY = `enum X509_PCY_TREE_EMPTY = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_PCY_TREE_EMPTY); }))) {
            mixin(enumMixinStr_X509_PCY_TREE_EMPTY);
        }
    }




    static if(!is(typeof(X509_PCY_TREE_EXPLICIT))) {
        private enum enumMixinStr_X509_PCY_TREE_EXPLICIT = `enum X509_PCY_TREE_EXPLICIT = 4;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_PCY_TREE_EXPLICIT); }))) {
            mixin(enumMixinStr_X509_PCY_TREE_EXPLICIT);
        }
    }




    static if(!is(typeof(EC_F_EC_GROUP_SET_CURVE_GFP))) {
        private enum enumMixinStr_EC_F_EC_GROUP_SET_CURVE_GFP = `enum EC_F_EC_GROUP_SET_CURVE_GFP = 109;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GROUP_SET_CURVE_GFP); }))) {
            mixin(enumMixinStr_EC_F_EC_GROUP_SET_CURVE_GFP);
        }
    }




    static if(!is(typeof(EC_F_EC_GROUP_SET_CURVE_GF2M))) {
        private enum enumMixinStr_EC_F_EC_GROUP_SET_CURVE_GF2M = `enum EC_F_EC_GROUP_SET_CURVE_GF2M = 176;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GROUP_SET_CURVE_GF2M); }))) {
            mixin(enumMixinStr_EC_F_EC_GROUP_SET_CURVE_GF2M);
        }
    }




    static if(!is(typeof(EC_F_EC_GROUP_SET_CURVE))) {
        private enum enumMixinStr_EC_F_EC_GROUP_SET_CURVE = `enum EC_F_EC_GROUP_SET_CURVE = 292;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GROUP_SET_CURVE); }))) {
            mixin(enumMixinStr_EC_F_EC_GROUP_SET_CURVE);
        }
    }




    static if(!is(typeof(EC_F_EC_GROUP_NEW_FROM_ECPKPARAMETERS))) {
        private enum enumMixinStr_EC_F_EC_GROUP_NEW_FROM_ECPKPARAMETERS = `enum EC_F_EC_GROUP_NEW_FROM_ECPKPARAMETERS = 264;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GROUP_NEW_FROM_ECPKPARAMETERS); }))) {
            mixin(enumMixinStr_EC_F_EC_GROUP_NEW_FROM_ECPKPARAMETERS);
        }
    }




    static if(!is(typeof(EC_F_EC_GROUP_NEW_FROM_ECPARAMETERS))) {
        private enum enumMixinStr_EC_F_EC_GROUP_NEW_FROM_ECPARAMETERS = `enum EC_F_EC_GROUP_NEW_FROM_ECPARAMETERS = 263;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GROUP_NEW_FROM_ECPARAMETERS); }))) {
            mixin(enumMixinStr_EC_F_EC_GROUP_NEW_FROM_ECPARAMETERS);
        }
    }




    static if(!is(typeof(EC_F_EC_GROUP_NEW_FROM_DATA))) {
        private enum enumMixinStr_EC_F_EC_GROUP_NEW_FROM_DATA = `enum EC_F_EC_GROUP_NEW_FROM_DATA = 175;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GROUP_NEW_FROM_DATA); }))) {
            mixin(enumMixinStr_EC_F_EC_GROUP_NEW_FROM_DATA);
        }
    }




    static if(!is(typeof(EC_F_EC_GROUP_NEW_BY_CURVE_NAME))) {
        private enum enumMixinStr_EC_F_EC_GROUP_NEW_BY_CURVE_NAME = `enum EC_F_EC_GROUP_NEW_BY_CURVE_NAME = 174;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GROUP_NEW_BY_CURVE_NAME); }))) {
            mixin(enumMixinStr_EC_F_EC_GROUP_NEW_BY_CURVE_NAME);
        }
    }




    static if(!is(typeof(EC_F_EC_GROUP_NEW))) {
        private enum enumMixinStr_EC_F_EC_GROUP_NEW = `enum EC_F_EC_GROUP_NEW = 108;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GROUP_NEW); }))) {
            mixin(enumMixinStr_EC_F_EC_GROUP_NEW);
        }
    }




    static if(!is(typeof(EC_F_EC_GROUP_GET_TRINOMIAL_BASIS))) {
        private enum enumMixinStr_EC_F_EC_GROUP_GET_TRINOMIAL_BASIS = `enum EC_F_EC_GROUP_GET_TRINOMIAL_BASIS = 194;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GROUP_GET_TRINOMIAL_BASIS); }))) {
            mixin(enumMixinStr_EC_F_EC_GROUP_GET_TRINOMIAL_BASIS);
        }
    }




    static if(!is(typeof(EC_F_EC_GROUP_GET_PENTANOMIAL_BASIS))) {
        private enum enumMixinStr_EC_F_EC_GROUP_GET_PENTANOMIAL_BASIS = `enum EC_F_EC_GROUP_GET_PENTANOMIAL_BASIS = 193;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GROUP_GET_PENTANOMIAL_BASIS); }))) {
            mixin(enumMixinStr_EC_F_EC_GROUP_GET_PENTANOMIAL_BASIS);
        }
    }




    static if(!is(typeof(EC_F_EC_GROUP_GET_ECPKPARAMETERS))) {
        private enum enumMixinStr_EC_F_EC_GROUP_GET_ECPKPARAMETERS = `enum EC_F_EC_GROUP_GET_ECPKPARAMETERS = 262;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GROUP_GET_ECPKPARAMETERS); }))) {
            mixin(enumMixinStr_EC_F_EC_GROUP_GET_ECPKPARAMETERS);
        }
    }




    static if(!is(typeof(EC_F_EC_GROUP_GET_ECPARAMETERS))) {
        private enum enumMixinStr_EC_F_EC_GROUP_GET_ECPARAMETERS = `enum EC_F_EC_GROUP_GET_ECPARAMETERS = 261;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GROUP_GET_ECPARAMETERS); }))) {
            mixin(enumMixinStr_EC_F_EC_GROUP_GET_ECPARAMETERS);
        }
    }




    static if(!is(typeof(EC_F_EC_GROUP_GET_DEGREE))) {
        private enum enumMixinStr_EC_F_EC_GROUP_GET_DEGREE = `enum EC_F_EC_GROUP_GET_DEGREE = 173;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GROUP_GET_DEGREE); }))) {
            mixin(enumMixinStr_EC_F_EC_GROUP_GET_DEGREE);
        }
    }




    static if(!is(typeof(EC_F_EC_GROUP_GET_CURVE_GFP))) {
        private enum enumMixinStr_EC_F_EC_GROUP_GET_CURVE_GFP = `enum EC_F_EC_GROUP_GET_CURVE_GFP = 130;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GROUP_GET_CURVE_GFP); }))) {
            mixin(enumMixinStr_EC_F_EC_GROUP_GET_CURVE_GFP);
        }
    }




    static if(!is(typeof(EC_F_EC_GROUP_GET_CURVE_GF2M))) {
        private enum enumMixinStr_EC_F_EC_GROUP_GET_CURVE_GF2M = `enum EC_F_EC_GROUP_GET_CURVE_GF2M = 172;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GROUP_GET_CURVE_GF2M); }))) {
            mixin(enumMixinStr_EC_F_EC_GROUP_GET_CURVE_GF2M);
        }
    }




    static if(!is(typeof(EC_F_EC_GROUP_GET_CURVE))) {
        private enum enumMixinStr_EC_F_EC_GROUP_GET_CURVE = `enum EC_F_EC_GROUP_GET_CURVE = 291;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GROUP_GET_CURVE); }))) {
            mixin(enumMixinStr_EC_F_EC_GROUP_GET_CURVE);
        }
    }




    static if(!is(typeof(EC_F_EC_GROUP_COPY))) {
        private enum enumMixinStr_EC_F_EC_GROUP_COPY = `enum EC_F_EC_GROUP_COPY = 106;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GROUP_COPY); }))) {
            mixin(enumMixinStr_EC_F_EC_GROUP_COPY);
        }
    }




    static if(!is(typeof(EC_F_EC_GROUP_CHECK_DISCRIMINANT))) {
        private enum enumMixinStr_EC_F_EC_GROUP_CHECK_DISCRIMINANT = `enum EC_F_EC_GROUP_CHECK_DISCRIMINANT = 171;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GROUP_CHECK_DISCRIMINANT); }))) {
            mixin(enumMixinStr_EC_F_EC_GROUP_CHECK_DISCRIMINANT);
        }
    }




    static if(!is(typeof(EC_F_EC_GROUP_CHECK))) {
        private enum enumMixinStr_EC_F_EC_GROUP_CHECK = `enum EC_F_EC_GROUP_CHECK = 170;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GROUP_CHECK); }))) {
            mixin(enumMixinStr_EC_F_EC_GROUP_CHECK);
        }
    }






    static if(!is(typeof(EC_F_EC_GFP_SIMPLE_SET_COMPRESSED_COORDINATES))) {
        private enum enumMixinStr_EC_F_EC_GFP_SIMPLE_SET_COMPRESSED_COORDINATES = `enum EC_F_EC_GFP_SIMPLE_SET_COMPRESSED_COORDINATES = 169;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GFP_SIMPLE_SET_COMPRESSED_COORDINATES); }))) {
            mixin(enumMixinStr_EC_F_EC_GFP_SIMPLE_SET_COMPRESSED_COORDINATES);
        }
    }




    static if(!is(typeof(EC_F_EC_GFP_SIMPLE_POINT_SET_AFFINE_COORDINATES))) {
        private enum enumMixinStr_EC_F_EC_GFP_SIMPLE_POINT_SET_AFFINE_COORDINATES = `enum EC_F_EC_GFP_SIMPLE_POINT_SET_AFFINE_COORDINATES = 168;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GFP_SIMPLE_POINT_SET_AFFINE_COORDINATES); }))) {
            mixin(enumMixinStr_EC_F_EC_GFP_SIMPLE_POINT_SET_AFFINE_COORDINATES);
        }
    }




    static if(!is(typeof(X509_F_ADD_CERT_DIR))) {
        private enum enumMixinStr_X509_F_ADD_CERT_DIR = `enum X509_F_ADD_CERT_DIR = 100;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_ADD_CERT_DIR); }))) {
            mixin(enumMixinStr_X509_F_ADD_CERT_DIR);
        }
    }




    static if(!is(typeof(X509_F_BUILD_CHAIN))) {
        private enum enumMixinStr_X509_F_BUILD_CHAIN = `enum X509_F_BUILD_CHAIN = 106;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_BUILD_CHAIN); }))) {
            mixin(enumMixinStr_X509_F_BUILD_CHAIN);
        }
    }




    static if(!is(typeof(X509_F_BY_FILE_CTRL))) {
        private enum enumMixinStr_X509_F_BY_FILE_CTRL = `enum X509_F_BY_FILE_CTRL = 101;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_BY_FILE_CTRL); }))) {
            mixin(enumMixinStr_X509_F_BY_FILE_CTRL);
        }
    }




    static if(!is(typeof(X509_F_CHECK_NAME_CONSTRAINTS))) {
        private enum enumMixinStr_X509_F_CHECK_NAME_CONSTRAINTS = `enum X509_F_CHECK_NAME_CONSTRAINTS = 149;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_CHECK_NAME_CONSTRAINTS); }))) {
            mixin(enumMixinStr_X509_F_CHECK_NAME_CONSTRAINTS);
        }
    }




    static if(!is(typeof(X509_F_CHECK_POLICY))) {
        private enum enumMixinStr_X509_F_CHECK_POLICY = `enum X509_F_CHECK_POLICY = 145;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_CHECK_POLICY); }))) {
            mixin(enumMixinStr_X509_F_CHECK_POLICY);
        }
    }




    static if(!is(typeof(X509_F_DANE_I2D))) {
        private enum enumMixinStr_X509_F_DANE_I2D = `enum X509_F_DANE_I2D = 107;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_DANE_I2D); }))) {
            mixin(enumMixinStr_X509_F_DANE_I2D);
        }
    }




    static if(!is(typeof(X509_F_DIR_CTRL))) {
        private enum enumMixinStr_X509_F_DIR_CTRL = `enum X509_F_DIR_CTRL = 102;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_DIR_CTRL); }))) {
            mixin(enumMixinStr_X509_F_DIR_CTRL);
        }
    }




    static if(!is(typeof(X509_F_GET_CERT_BY_SUBJECT))) {
        private enum enumMixinStr_X509_F_GET_CERT_BY_SUBJECT = `enum X509_F_GET_CERT_BY_SUBJECT = 103;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_GET_CERT_BY_SUBJECT); }))) {
            mixin(enumMixinStr_X509_F_GET_CERT_BY_SUBJECT);
        }
    }




    static if(!is(typeof(X509_F_I2D_X509_AUX))) {
        private enum enumMixinStr_X509_F_I2D_X509_AUX = `enum X509_F_I2D_X509_AUX = 151;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_I2D_X509_AUX); }))) {
            mixin(enumMixinStr_X509_F_I2D_X509_AUX);
        }
    }




    static if(!is(typeof(X509_F_LOOKUP_CERTS_SK))) {
        private enum enumMixinStr_X509_F_LOOKUP_CERTS_SK = `enum X509_F_LOOKUP_CERTS_SK = 152;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_LOOKUP_CERTS_SK); }))) {
            mixin(enumMixinStr_X509_F_LOOKUP_CERTS_SK);
        }
    }




    static if(!is(typeof(X509_F_NETSCAPE_SPKI_B64_DECODE))) {
        private enum enumMixinStr_X509_F_NETSCAPE_SPKI_B64_DECODE = `enum X509_F_NETSCAPE_SPKI_B64_DECODE = 129;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_NETSCAPE_SPKI_B64_DECODE); }))) {
            mixin(enumMixinStr_X509_F_NETSCAPE_SPKI_B64_DECODE);
        }
    }




    static if(!is(typeof(X509_F_NETSCAPE_SPKI_B64_ENCODE))) {
        private enum enumMixinStr_X509_F_NETSCAPE_SPKI_B64_ENCODE = `enum X509_F_NETSCAPE_SPKI_B64_ENCODE = 130;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_NETSCAPE_SPKI_B64_ENCODE); }))) {
            mixin(enumMixinStr_X509_F_NETSCAPE_SPKI_B64_ENCODE);
        }
    }




    static if(!is(typeof(X509_F_NEW_DIR))) {
        private enum enumMixinStr_X509_F_NEW_DIR = `enum X509_F_NEW_DIR = 153;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_NEW_DIR); }))) {
            mixin(enumMixinStr_X509_F_NEW_DIR);
        }
    }




    static if(!is(typeof(X509_F_X509AT_ADD1_ATTR))) {
        private enum enumMixinStr_X509_F_X509AT_ADD1_ATTR = `enum X509_F_X509AT_ADD1_ATTR = 135;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509AT_ADD1_ATTR); }))) {
            mixin(enumMixinStr_X509_F_X509AT_ADD1_ATTR);
        }
    }




    static if(!is(typeof(X509_F_X509V3_ADD_EXT))) {
        private enum enumMixinStr_X509_F_X509V3_ADD_EXT = `enum X509_F_X509V3_ADD_EXT = 104;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509V3_ADD_EXT); }))) {
            mixin(enumMixinStr_X509_F_X509V3_ADD_EXT);
        }
    }




    static if(!is(typeof(X509_F_X509_ATTRIBUTE_CREATE_BY_NID))) {
        private enum enumMixinStr_X509_F_X509_ATTRIBUTE_CREATE_BY_NID = `enum X509_F_X509_ATTRIBUTE_CREATE_BY_NID = 136;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_ATTRIBUTE_CREATE_BY_NID); }))) {
            mixin(enumMixinStr_X509_F_X509_ATTRIBUTE_CREATE_BY_NID);
        }
    }




    static if(!is(typeof(X509_F_X509_ATTRIBUTE_CREATE_BY_OBJ))) {
        private enum enumMixinStr_X509_F_X509_ATTRIBUTE_CREATE_BY_OBJ = `enum X509_F_X509_ATTRIBUTE_CREATE_BY_OBJ = 137;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_ATTRIBUTE_CREATE_BY_OBJ); }))) {
            mixin(enumMixinStr_X509_F_X509_ATTRIBUTE_CREATE_BY_OBJ);
        }
    }




    static if(!is(typeof(X509_F_X509_ATTRIBUTE_CREATE_BY_TXT))) {
        private enum enumMixinStr_X509_F_X509_ATTRIBUTE_CREATE_BY_TXT = `enum X509_F_X509_ATTRIBUTE_CREATE_BY_TXT = 140;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_ATTRIBUTE_CREATE_BY_TXT); }))) {
            mixin(enumMixinStr_X509_F_X509_ATTRIBUTE_CREATE_BY_TXT);
        }
    }




    static if(!is(typeof(X509_F_X509_ATTRIBUTE_GET0_DATA))) {
        private enum enumMixinStr_X509_F_X509_ATTRIBUTE_GET0_DATA = `enum X509_F_X509_ATTRIBUTE_GET0_DATA = 139;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_ATTRIBUTE_GET0_DATA); }))) {
            mixin(enumMixinStr_X509_F_X509_ATTRIBUTE_GET0_DATA);
        }
    }




    static if(!is(typeof(X509_F_X509_ATTRIBUTE_SET1_DATA))) {
        private enum enumMixinStr_X509_F_X509_ATTRIBUTE_SET1_DATA = `enum X509_F_X509_ATTRIBUTE_SET1_DATA = 138;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_ATTRIBUTE_SET1_DATA); }))) {
            mixin(enumMixinStr_X509_F_X509_ATTRIBUTE_SET1_DATA);
        }
    }




    static if(!is(typeof(X509_F_X509_CHECK_PRIVATE_KEY))) {
        private enum enumMixinStr_X509_F_X509_CHECK_PRIVATE_KEY = `enum X509_F_X509_CHECK_PRIVATE_KEY = 128;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_CHECK_PRIVATE_KEY); }))) {
            mixin(enumMixinStr_X509_F_X509_CHECK_PRIVATE_KEY);
        }
    }




    static if(!is(typeof(X509_F_X509_CRL_DIFF))) {
        private enum enumMixinStr_X509_F_X509_CRL_DIFF = `enum X509_F_X509_CRL_DIFF = 105;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_CRL_DIFF); }))) {
            mixin(enumMixinStr_X509_F_X509_CRL_DIFF);
        }
    }




    static if(!is(typeof(X509_F_X509_CRL_METHOD_NEW))) {
        private enum enumMixinStr_X509_F_X509_CRL_METHOD_NEW = `enum X509_F_X509_CRL_METHOD_NEW = 154;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_CRL_METHOD_NEW); }))) {
            mixin(enumMixinStr_X509_F_X509_CRL_METHOD_NEW);
        }
    }




    static if(!is(typeof(X509_F_X509_CRL_PRINT_FP))) {
        private enum enumMixinStr_X509_F_X509_CRL_PRINT_FP = `enum X509_F_X509_CRL_PRINT_FP = 147;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_CRL_PRINT_FP); }))) {
            mixin(enumMixinStr_X509_F_X509_CRL_PRINT_FP);
        }
    }




    static if(!is(typeof(X509_F_X509_EXTENSION_CREATE_BY_NID))) {
        private enum enumMixinStr_X509_F_X509_EXTENSION_CREATE_BY_NID = `enum X509_F_X509_EXTENSION_CREATE_BY_NID = 108;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_EXTENSION_CREATE_BY_NID); }))) {
            mixin(enumMixinStr_X509_F_X509_EXTENSION_CREATE_BY_NID);
        }
    }




    static if(!is(typeof(X509_F_X509_EXTENSION_CREATE_BY_OBJ))) {
        private enum enumMixinStr_X509_F_X509_EXTENSION_CREATE_BY_OBJ = `enum X509_F_X509_EXTENSION_CREATE_BY_OBJ = 109;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_EXTENSION_CREATE_BY_OBJ); }))) {
            mixin(enumMixinStr_X509_F_X509_EXTENSION_CREATE_BY_OBJ);
        }
    }




    static if(!is(typeof(X509_F_X509_GET_PUBKEY_PARAMETERS))) {
        private enum enumMixinStr_X509_F_X509_GET_PUBKEY_PARAMETERS = `enum X509_F_X509_GET_PUBKEY_PARAMETERS = 110;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_GET_PUBKEY_PARAMETERS); }))) {
            mixin(enumMixinStr_X509_F_X509_GET_PUBKEY_PARAMETERS);
        }
    }




    static if(!is(typeof(X509_F_X509_LOAD_CERT_CRL_FILE))) {
        private enum enumMixinStr_X509_F_X509_LOAD_CERT_CRL_FILE = `enum X509_F_X509_LOAD_CERT_CRL_FILE = 132;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_LOAD_CERT_CRL_FILE); }))) {
            mixin(enumMixinStr_X509_F_X509_LOAD_CERT_CRL_FILE);
        }
    }




    static if(!is(typeof(X509_F_X509_LOAD_CERT_FILE))) {
        private enum enumMixinStr_X509_F_X509_LOAD_CERT_FILE = `enum X509_F_X509_LOAD_CERT_FILE = 111;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_LOAD_CERT_FILE); }))) {
            mixin(enumMixinStr_X509_F_X509_LOAD_CERT_FILE);
        }
    }




    static if(!is(typeof(X509_F_X509_LOAD_CRL_FILE))) {
        private enum enumMixinStr_X509_F_X509_LOAD_CRL_FILE = `enum X509_F_X509_LOAD_CRL_FILE = 112;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_LOAD_CRL_FILE); }))) {
            mixin(enumMixinStr_X509_F_X509_LOAD_CRL_FILE);
        }
    }




    static if(!is(typeof(X509_F_X509_LOOKUP_METH_NEW))) {
        private enum enumMixinStr_X509_F_X509_LOOKUP_METH_NEW = `enum X509_F_X509_LOOKUP_METH_NEW = 160;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_LOOKUP_METH_NEW); }))) {
            mixin(enumMixinStr_X509_F_X509_LOOKUP_METH_NEW);
        }
    }




    static if(!is(typeof(X509_F_X509_LOOKUP_NEW))) {
        private enum enumMixinStr_X509_F_X509_LOOKUP_NEW = `enum X509_F_X509_LOOKUP_NEW = 155;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_LOOKUP_NEW); }))) {
            mixin(enumMixinStr_X509_F_X509_LOOKUP_NEW);
        }
    }




    static if(!is(typeof(X509_F_X509_NAME_ADD_ENTRY))) {
        private enum enumMixinStr_X509_F_X509_NAME_ADD_ENTRY = `enum X509_F_X509_NAME_ADD_ENTRY = 113;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_NAME_ADD_ENTRY); }))) {
            mixin(enumMixinStr_X509_F_X509_NAME_ADD_ENTRY);
        }
    }




    static if(!is(typeof(X509_F_X509_NAME_CANON))) {
        private enum enumMixinStr_X509_F_X509_NAME_CANON = `enum X509_F_X509_NAME_CANON = 156;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_NAME_CANON); }))) {
            mixin(enumMixinStr_X509_F_X509_NAME_CANON);
        }
    }




    static if(!is(typeof(X509_F_X509_NAME_ENTRY_CREATE_BY_NID))) {
        private enum enumMixinStr_X509_F_X509_NAME_ENTRY_CREATE_BY_NID = `enum X509_F_X509_NAME_ENTRY_CREATE_BY_NID = 114;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_NAME_ENTRY_CREATE_BY_NID); }))) {
            mixin(enumMixinStr_X509_F_X509_NAME_ENTRY_CREATE_BY_NID);
        }
    }




    static if(!is(typeof(X509_F_X509_NAME_ENTRY_CREATE_BY_TXT))) {
        private enum enumMixinStr_X509_F_X509_NAME_ENTRY_CREATE_BY_TXT = `enum X509_F_X509_NAME_ENTRY_CREATE_BY_TXT = 131;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_NAME_ENTRY_CREATE_BY_TXT); }))) {
            mixin(enumMixinStr_X509_F_X509_NAME_ENTRY_CREATE_BY_TXT);
        }
    }




    static if(!is(typeof(X509_F_X509_NAME_ENTRY_SET_OBJECT))) {
        private enum enumMixinStr_X509_F_X509_NAME_ENTRY_SET_OBJECT = `enum X509_F_X509_NAME_ENTRY_SET_OBJECT = 115;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_NAME_ENTRY_SET_OBJECT); }))) {
            mixin(enumMixinStr_X509_F_X509_NAME_ENTRY_SET_OBJECT);
        }
    }




    static if(!is(typeof(X509_F_X509_NAME_ONELINE))) {
        private enum enumMixinStr_X509_F_X509_NAME_ONELINE = `enum X509_F_X509_NAME_ONELINE = 116;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_NAME_ONELINE); }))) {
            mixin(enumMixinStr_X509_F_X509_NAME_ONELINE);
        }
    }




    static if(!is(typeof(X509_F_X509_NAME_PRINT))) {
        private enum enumMixinStr_X509_F_X509_NAME_PRINT = `enum X509_F_X509_NAME_PRINT = 117;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_NAME_PRINT); }))) {
            mixin(enumMixinStr_X509_F_X509_NAME_PRINT);
        }
    }




    static if(!is(typeof(X509_F_X509_OBJECT_NEW))) {
        private enum enumMixinStr_X509_F_X509_OBJECT_NEW = `enum X509_F_X509_OBJECT_NEW = 150;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_OBJECT_NEW); }))) {
            mixin(enumMixinStr_X509_F_X509_OBJECT_NEW);
        }
    }




    static if(!is(typeof(X509_F_X509_PRINT_EX_FP))) {
        private enum enumMixinStr_X509_F_X509_PRINT_EX_FP = `enum X509_F_X509_PRINT_EX_FP = 118;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_PRINT_EX_FP); }))) {
            mixin(enumMixinStr_X509_F_X509_PRINT_EX_FP);
        }
    }




    static if(!is(typeof(X509_F_X509_PUBKEY_DECODE))) {
        private enum enumMixinStr_X509_F_X509_PUBKEY_DECODE = `enum X509_F_X509_PUBKEY_DECODE = 148;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_PUBKEY_DECODE); }))) {
            mixin(enumMixinStr_X509_F_X509_PUBKEY_DECODE);
        }
    }




    static if(!is(typeof(X509_F_X509_PUBKEY_GET))) {
        private enum enumMixinStr_X509_F_X509_PUBKEY_GET = `enum X509_F_X509_PUBKEY_GET = 161;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_PUBKEY_GET); }))) {
            mixin(enumMixinStr_X509_F_X509_PUBKEY_GET);
        }
    }




    static if(!is(typeof(X509_F_X509_PUBKEY_GET0))) {
        private enum enumMixinStr_X509_F_X509_PUBKEY_GET0 = `enum X509_F_X509_PUBKEY_GET0 = 119;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_PUBKEY_GET0); }))) {
            mixin(enumMixinStr_X509_F_X509_PUBKEY_GET0);
        }
    }




    static if(!is(typeof(X509_F_X509_PUBKEY_SET))) {
        private enum enumMixinStr_X509_F_X509_PUBKEY_SET = `enum X509_F_X509_PUBKEY_SET = 120;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_PUBKEY_SET); }))) {
            mixin(enumMixinStr_X509_F_X509_PUBKEY_SET);
        }
    }




    static if(!is(typeof(X509_F_X509_REQ_CHECK_PRIVATE_KEY))) {
        private enum enumMixinStr_X509_F_X509_REQ_CHECK_PRIVATE_KEY = `enum X509_F_X509_REQ_CHECK_PRIVATE_KEY = 144;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_REQ_CHECK_PRIVATE_KEY); }))) {
            mixin(enumMixinStr_X509_F_X509_REQ_CHECK_PRIVATE_KEY);
        }
    }




    static if(!is(typeof(X509_F_X509_REQ_PRINT_EX))) {
        private enum enumMixinStr_X509_F_X509_REQ_PRINT_EX = `enum X509_F_X509_REQ_PRINT_EX = 121;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_REQ_PRINT_EX); }))) {
            mixin(enumMixinStr_X509_F_X509_REQ_PRINT_EX);
        }
    }




    static if(!is(typeof(X509_F_X509_REQ_PRINT_FP))) {
        private enum enumMixinStr_X509_F_X509_REQ_PRINT_FP = `enum X509_F_X509_REQ_PRINT_FP = 122;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_REQ_PRINT_FP); }))) {
            mixin(enumMixinStr_X509_F_X509_REQ_PRINT_FP);
        }
    }




    static if(!is(typeof(X509_F_X509_REQ_TO_X509))) {
        private enum enumMixinStr_X509_F_X509_REQ_TO_X509 = `enum X509_F_X509_REQ_TO_X509 = 123;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_REQ_TO_X509); }))) {
            mixin(enumMixinStr_X509_F_X509_REQ_TO_X509);
        }
    }




    static if(!is(typeof(X509_F_X509_STORE_ADD_CERT))) {
        private enum enumMixinStr_X509_F_X509_STORE_ADD_CERT = `enum X509_F_X509_STORE_ADD_CERT = 124;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_STORE_ADD_CERT); }))) {
            mixin(enumMixinStr_X509_F_X509_STORE_ADD_CERT);
        }
    }




    static if(!is(typeof(X509_F_X509_STORE_ADD_CRL))) {
        private enum enumMixinStr_X509_F_X509_STORE_ADD_CRL = `enum X509_F_X509_STORE_ADD_CRL = 125;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_STORE_ADD_CRL); }))) {
            mixin(enumMixinStr_X509_F_X509_STORE_ADD_CRL);
        }
    }




    static if(!is(typeof(X509_F_X509_STORE_ADD_LOOKUP))) {
        private enum enumMixinStr_X509_F_X509_STORE_ADD_LOOKUP = `enum X509_F_X509_STORE_ADD_LOOKUP = 157;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_STORE_ADD_LOOKUP); }))) {
            mixin(enumMixinStr_X509_F_X509_STORE_ADD_LOOKUP);
        }
    }




    static if(!is(typeof(X509_F_X509_STORE_CTX_GET1_ISSUER))) {
        private enum enumMixinStr_X509_F_X509_STORE_CTX_GET1_ISSUER = `enum X509_F_X509_STORE_CTX_GET1_ISSUER = 146;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_STORE_CTX_GET1_ISSUER); }))) {
            mixin(enumMixinStr_X509_F_X509_STORE_CTX_GET1_ISSUER);
        }
    }




    static if(!is(typeof(X509_F_X509_STORE_CTX_INIT))) {
        private enum enumMixinStr_X509_F_X509_STORE_CTX_INIT = `enum X509_F_X509_STORE_CTX_INIT = 143;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_STORE_CTX_INIT); }))) {
            mixin(enumMixinStr_X509_F_X509_STORE_CTX_INIT);
        }
    }




    static if(!is(typeof(X509_F_X509_STORE_CTX_NEW))) {
        private enum enumMixinStr_X509_F_X509_STORE_CTX_NEW = `enum X509_F_X509_STORE_CTX_NEW = 142;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_STORE_CTX_NEW); }))) {
            mixin(enumMixinStr_X509_F_X509_STORE_CTX_NEW);
        }
    }




    static if(!is(typeof(X509_F_X509_STORE_CTX_PURPOSE_INHERIT))) {
        private enum enumMixinStr_X509_F_X509_STORE_CTX_PURPOSE_INHERIT = `enum X509_F_X509_STORE_CTX_PURPOSE_INHERIT = 134;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_STORE_CTX_PURPOSE_INHERIT); }))) {
            mixin(enumMixinStr_X509_F_X509_STORE_CTX_PURPOSE_INHERIT);
        }
    }




    static if(!is(typeof(X509_F_X509_STORE_NEW))) {
        private enum enumMixinStr_X509_F_X509_STORE_NEW = `enum X509_F_X509_STORE_NEW = 158;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_STORE_NEW); }))) {
            mixin(enumMixinStr_X509_F_X509_STORE_NEW);
        }
    }




    static if(!is(typeof(X509_F_X509_TO_X509_REQ))) {
        private enum enumMixinStr_X509_F_X509_TO_X509_REQ = `enum X509_F_X509_TO_X509_REQ = 126;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_TO_X509_REQ); }))) {
            mixin(enumMixinStr_X509_F_X509_TO_X509_REQ);
        }
    }




    static if(!is(typeof(X509_F_X509_TRUST_ADD))) {
        private enum enumMixinStr_X509_F_X509_TRUST_ADD = `enum X509_F_X509_TRUST_ADD = 133;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_TRUST_ADD); }))) {
            mixin(enumMixinStr_X509_F_X509_TRUST_ADD);
        }
    }




    static if(!is(typeof(X509_F_X509_TRUST_SET))) {
        private enum enumMixinStr_X509_F_X509_TRUST_SET = `enum X509_F_X509_TRUST_SET = 141;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_TRUST_SET); }))) {
            mixin(enumMixinStr_X509_F_X509_TRUST_SET);
        }
    }




    static if(!is(typeof(X509_F_X509_VERIFY_CERT))) {
        private enum enumMixinStr_X509_F_X509_VERIFY_CERT = `enum X509_F_X509_VERIFY_CERT = 127;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_VERIFY_CERT); }))) {
            mixin(enumMixinStr_X509_F_X509_VERIFY_CERT);
        }
    }




    static if(!is(typeof(X509_F_X509_VERIFY_PARAM_NEW))) {
        private enum enumMixinStr_X509_F_X509_VERIFY_PARAM_NEW = `enum X509_F_X509_VERIFY_PARAM_NEW = 159;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_F_X509_VERIFY_PARAM_NEW); }))) {
            mixin(enumMixinStr_X509_F_X509_VERIFY_PARAM_NEW);
        }
    }




    static if(!is(typeof(X509_R_AKID_MISMATCH))) {
        private enum enumMixinStr_X509_R_AKID_MISMATCH = `enum X509_R_AKID_MISMATCH = 110;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_AKID_MISMATCH); }))) {
            mixin(enumMixinStr_X509_R_AKID_MISMATCH);
        }
    }




    static if(!is(typeof(X509_R_BAD_SELECTOR))) {
        private enum enumMixinStr_X509_R_BAD_SELECTOR = `enum X509_R_BAD_SELECTOR = 133;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_BAD_SELECTOR); }))) {
            mixin(enumMixinStr_X509_R_BAD_SELECTOR);
        }
    }




    static if(!is(typeof(X509_R_BAD_X509_FILETYPE))) {
        private enum enumMixinStr_X509_R_BAD_X509_FILETYPE = `enum X509_R_BAD_X509_FILETYPE = 100;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_BAD_X509_FILETYPE); }))) {
            mixin(enumMixinStr_X509_R_BAD_X509_FILETYPE);
        }
    }




    static if(!is(typeof(X509_R_BASE64_DECODE_ERROR))) {
        private enum enumMixinStr_X509_R_BASE64_DECODE_ERROR = `enum X509_R_BASE64_DECODE_ERROR = 118;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_BASE64_DECODE_ERROR); }))) {
            mixin(enumMixinStr_X509_R_BASE64_DECODE_ERROR);
        }
    }




    static if(!is(typeof(X509_R_CANT_CHECK_DH_KEY))) {
        private enum enumMixinStr_X509_R_CANT_CHECK_DH_KEY = `enum X509_R_CANT_CHECK_DH_KEY = 114;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_CANT_CHECK_DH_KEY); }))) {
            mixin(enumMixinStr_X509_R_CANT_CHECK_DH_KEY);
        }
    }




    static if(!is(typeof(X509_R_CERT_ALREADY_IN_HASH_TABLE))) {
        private enum enumMixinStr_X509_R_CERT_ALREADY_IN_HASH_TABLE = `enum X509_R_CERT_ALREADY_IN_HASH_TABLE = 101;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_CERT_ALREADY_IN_HASH_TABLE); }))) {
            mixin(enumMixinStr_X509_R_CERT_ALREADY_IN_HASH_TABLE);
        }
    }




    static if(!is(typeof(X509_R_CRL_ALREADY_DELTA))) {
        private enum enumMixinStr_X509_R_CRL_ALREADY_DELTA = `enum X509_R_CRL_ALREADY_DELTA = 127;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_CRL_ALREADY_DELTA); }))) {
            mixin(enumMixinStr_X509_R_CRL_ALREADY_DELTA);
        }
    }




    static if(!is(typeof(X509_R_CRL_VERIFY_FAILURE))) {
        private enum enumMixinStr_X509_R_CRL_VERIFY_FAILURE = `enum X509_R_CRL_VERIFY_FAILURE = 131;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_CRL_VERIFY_FAILURE); }))) {
            mixin(enumMixinStr_X509_R_CRL_VERIFY_FAILURE);
        }
    }




    static if(!is(typeof(X509_R_IDP_MISMATCH))) {
        private enum enumMixinStr_X509_R_IDP_MISMATCH = `enum X509_R_IDP_MISMATCH = 128;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_IDP_MISMATCH); }))) {
            mixin(enumMixinStr_X509_R_IDP_MISMATCH);
        }
    }




    static if(!is(typeof(X509_R_INVALID_ATTRIBUTES))) {
        private enum enumMixinStr_X509_R_INVALID_ATTRIBUTES = `enum X509_R_INVALID_ATTRIBUTES = 138;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_INVALID_ATTRIBUTES); }))) {
            mixin(enumMixinStr_X509_R_INVALID_ATTRIBUTES);
        }
    }




    static if(!is(typeof(X509_R_INVALID_DIRECTORY))) {
        private enum enumMixinStr_X509_R_INVALID_DIRECTORY = `enum X509_R_INVALID_DIRECTORY = 113;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_INVALID_DIRECTORY); }))) {
            mixin(enumMixinStr_X509_R_INVALID_DIRECTORY);
        }
    }




    static if(!is(typeof(X509_R_INVALID_FIELD_NAME))) {
        private enum enumMixinStr_X509_R_INVALID_FIELD_NAME = `enum X509_R_INVALID_FIELD_NAME = 119;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_INVALID_FIELD_NAME); }))) {
            mixin(enumMixinStr_X509_R_INVALID_FIELD_NAME);
        }
    }




    static if(!is(typeof(X509_R_INVALID_TRUST))) {
        private enum enumMixinStr_X509_R_INVALID_TRUST = `enum X509_R_INVALID_TRUST = 123;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_INVALID_TRUST); }))) {
            mixin(enumMixinStr_X509_R_INVALID_TRUST);
        }
    }




    static if(!is(typeof(X509_R_ISSUER_MISMATCH))) {
        private enum enumMixinStr_X509_R_ISSUER_MISMATCH = `enum X509_R_ISSUER_MISMATCH = 129;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_ISSUER_MISMATCH); }))) {
            mixin(enumMixinStr_X509_R_ISSUER_MISMATCH);
        }
    }




    static if(!is(typeof(X509_R_KEY_TYPE_MISMATCH))) {
        private enum enumMixinStr_X509_R_KEY_TYPE_MISMATCH = `enum X509_R_KEY_TYPE_MISMATCH = 115;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_KEY_TYPE_MISMATCH); }))) {
            mixin(enumMixinStr_X509_R_KEY_TYPE_MISMATCH);
        }
    }




    static if(!is(typeof(X509_R_KEY_VALUES_MISMATCH))) {
        private enum enumMixinStr_X509_R_KEY_VALUES_MISMATCH = `enum X509_R_KEY_VALUES_MISMATCH = 116;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_KEY_VALUES_MISMATCH); }))) {
            mixin(enumMixinStr_X509_R_KEY_VALUES_MISMATCH);
        }
    }




    static if(!is(typeof(X509_R_LOADING_CERT_DIR))) {
        private enum enumMixinStr_X509_R_LOADING_CERT_DIR = `enum X509_R_LOADING_CERT_DIR = 103;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_LOADING_CERT_DIR); }))) {
            mixin(enumMixinStr_X509_R_LOADING_CERT_DIR);
        }
    }




    static if(!is(typeof(X509_R_LOADING_DEFAULTS))) {
        private enum enumMixinStr_X509_R_LOADING_DEFAULTS = `enum X509_R_LOADING_DEFAULTS = 104;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_LOADING_DEFAULTS); }))) {
            mixin(enumMixinStr_X509_R_LOADING_DEFAULTS);
        }
    }




    static if(!is(typeof(X509_R_METHOD_NOT_SUPPORTED))) {
        private enum enumMixinStr_X509_R_METHOD_NOT_SUPPORTED = `enum X509_R_METHOD_NOT_SUPPORTED = 124;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_METHOD_NOT_SUPPORTED); }))) {
            mixin(enumMixinStr_X509_R_METHOD_NOT_SUPPORTED);
        }
    }




    static if(!is(typeof(X509_R_NAME_TOO_LONG))) {
        private enum enumMixinStr_X509_R_NAME_TOO_LONG = `enum X509_R_NAME_TOO_LONG = 134;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_NAME_TOO_LONG); }))) {
            mixin(enumMixinStr_X509_R_NAME_TOO_LONG);
        }
    }




    static if(!is(typeof(X509_R_NEWER_CRL_NOT_NEWER))) {
        private enum enumMixinStr_X509_R_NEWER_CRL_NOT_NEWER = `enum X509_R_NEWER_CRL_NOT_NEWER = 132;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_NEWER_CRL_NOT_NEWER); }))) {
            mixin(enumMixinStr_X509_R_NEWER_CRL_NOT_NEWER);
        }
    }




    static if(!is(typeof(X509_R_NO_CERTIFICATE_FOUND))) {
        private enum enumMixinStr_X509_R_NO_CERTIFICATE_FOUND = `enum X509_R_NO_CERTIFICATE_FOUND = 135;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_NO_CERTIFICATE_FOUND); }))) {
            mixin(enumMixinStr_X509_R_NO_CERTIFICATE_FOUND);
        }
    }




    static if(!is(typeof(X509_R_NO_CERTIFICATE_OR_CRL_FOUND))) {
        private enum enumMixinStr_X509_R_NO_CERTIFICATE_OR_CRL_FOUND = `enum X509_R_NO_CERTIFICATE_OR_CRL_FOUND = 136;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_NO_CERTIFICATE_OR_CRL_FOUND); }))) {
            mixin(enumMixinStr_X509_R_NO_CERTIFICATE_OR_CRL_FOUND);
        }
    }




    static if(!is(typeof(X509_R_NO_CERT_SET_FOR_US_TO_VERIFY))) {
        private enum enumMixinStr_X509_R_NO_CERT_SET_FOR_US_TO_VERIFY = `enum X509_R_NO_CERT_SET_FOR_US_TO_VERIFY = 105;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_NO_CERT_SET_FOR_US_TO_VERIFY); }))) {
            mixin(enumMixinStr_X509_R_NO_CERT_SET_FOR_US_TO_VERIFY);
        }
    }




    static if(!is(typeof(X509_R_NO_CRL_FOUND))) {
        private enum enumMixinStr_X509_R_NO_CRL_FOUND = `enum X509_R_NO_CRL_FOUND = 137;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_NO_CRL_FOUND); }))) {
            mixin(enumMixinStr_X509_R_NO_CRL_FOUND);
        }
    }




    static if(!is(typeof(X509_R_NO_CRL_NUMBER))) {
        private enum enumMixinStr_X509_R_NO_CRL_NUMBER = `enum X509_R_NO_CRL_NUMBER = 130;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_NO_CRL_NUMBER); }))) {
            mixin(enumMixinStr_X509_R_NO_CRL_NUMBER);
        }
    }




    static if(!is(typeof(X509_R_PUBLIC_KEY_DECODE_ERROR))) {
        private enum enumMixinStr_X509_R_PUBLIC_KEY_DECODE_ERROR = `enum X509_R_PUBLIC_KEY_DECODE_ERROR = 125;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_PUBLIC_KEY_DECODE_ERROR); }))) {
            mixin(enumMixinStr_X509_R_PUBLIC_KEY_DECODE_ERROR);
        }
    }




    static if(!is(typeof(X509_R_PUBLIC_KEY_ENCODE_ERROR))) {
        private enum enumMixinStr_X509_R_PUBLIC_KEY_ENCODE_ERROR = `enum X509_R_PUBLIC_KEY_ENCODE_ERROR = 126;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_PUBLIC_KEY_ENCODE_ERROR); }))) {
            mixin(enumMixinStr_X509_R_PUBLIC_KEY_ENCODE_ERROR);
        }
    }




    static if(!is(typeof(X509_R_SHOULD_RETRY))) {
        private enum enumMixinStr_X509_R_SHOULD_RETRY = `enum X509_R_SHOULD_RETRY = 106;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_SHOULD_RETRY); }))) {
            mixin(enumMixinStr_X509_R_SHOULD_RETRY);
        }
    }




    static if(!is(typeof(X509_R_UNABLE_TO_FIND_PARAMETERS_IN_CHAIN))) {
        private enum enumMixinStr_X509_R_UNABLE_TO_FIND_PARAMETERS_IN_CHAIN = `enum X509_R_UNABLE_TO_FIND_PARAMETERS_IN_CHAIN = 107;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_UNABLE_TO_FIND_PARAMETERS_IN_CHAIN); }))) {
            mixin(enumMixinStr_X509_R_UNABLE_TO_FIND_PARAMETERS_IN_CHAIN);
        }
    }




    static if(!is(typeof(X509_R_UNABLE_TO_GET_CERTS_PUBLIC_KEY))) {
        private enum enumMixinStr_X509_R_UNABLE_TO_GET_CERTS_PUBLIC_KEY = `enum X509_R_UNABLE_TO_GET_CERTS_PUBLIC_KEY = 108;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_UNABLE_TO_GET_CERTS_PUBLIC_KEY); }))) {
            mixin(enumMixinStr_X509_R_UNABLE_TO_GET_CERTS_PUBLIC_KEY);
        }
    }




    static if(!is(typeof(X509_R_UNKNOWN_KEY_TYPE))) {
        private enum enumMixinStr_X509_R_UNKNOWN_KEY_TYPE = `enum X509_R_UNKNOWN_KEY_TYPE = 117;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_UNKNOWN_KEY_TYPE); }))) {
            mixin(enumMixinStr_X509_R_UNKNOWN_KEY_TYPE);
        }
    }




    static if(!is(typeof(X509_R_UNKNOWN_NID))) {
        private enum enumMixinStr_X509_R_UNKNOWN_NID = `enum X509_R_UNKNOWN_NID = 109;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_UNKNOWN_NID); }))) {
            mixin(enumMixinStr_X509_R_UNKNOWN_NID);
        }
    }




    static if(!is(typeof(X509_R_UNKNOWN_PURPOSE_ID))) {
        private enum enumMixinStr_X509_R_UNKNOWN_PURPOSE_ID = `enum X509_R_UNKNOWN_PURPOSE_ID = 121;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_UNKNOWN_PURPOSE_ID); }))) {
            mixin(enumMixinStr_X509_R_UNKNOWN_PURPOSE_ID);
        }
    }




    static if(!is(typeof(X509_R_UNKNOWN_TRUST_ID))) {
        private enum enumMixinStr_X509_R_UNKNOWN_TRUST_ID = `enum X509_R_UNKNOWN_TRUST_ID = 120;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_UNKNOWN_TRUST_ID); }))) {
            mixin(enumMixinStr_X509_R_UNKNOWN_TRUST_ID);
        }
    }




    static if(!is(typeof(X509_R_UNSUPPORTED_ALGORITHM))) {
        private enum enumMixinStr_X509_R_UNSUPPORTED_ALGORITHM = `enum X509_R_UNSUPPORTED_ALGORITHM = 111;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_UNSUPPORTED_ALGORITHM); }))) {
            mixin(enumMixinStr_X509_R_UNSUPPORTED_ALGORITHM);
        }
    }




    static if(!is(typeof(X509_R_WRONG_LOOKUP_TYPE))) {
        private enum enumMixinStr_X509_R_WRONG_LOOKUP_TYPE = `enum X509_R_WRONG_LOOKUP_TYPE = 112;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_WRONG_LOOKUP_TYPE); }))) {
            mixin(enumMixinStr_X509_R_WRONG_LOOKUP_TYPE);
        }
    }




    static if(!is(typeof(X509_R_WRONG_TYPE))) {
        private enum enumMixinStr_X509_R_WRONG_TYPE = `enum X509_R_WRONG_TYPE = 122;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_R_WRONG_TYPE); }))) {
            mixin(enumMixinStr_X509_R_WRONG_TYPE);
        }
    }






    static if(!is(typeof(EC_F_EC_GFP_SIMPLE_POINT_GET_AFFINE_COORDINATES))) {
        private enum enumMixinStr_EC_F_EC_GFP_SIMPLE_POINT_GET_AFFINE_COORDINATES = `enum EC_F_EC_GFP_SIMPLE_POINT_GET_AFFINE_COORDINATES = 167;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GFP_SIMPLE_POINT_GET_AFFINE_COORDINATES); }))) {
            mixin(enumMixinStr_EC_F_EC_GFP_SIMPLE_POINT_GET_AFFINE_COORDINATES);
        }
    }




    static if(!is(typeof(EC_F_EC_GFP_SIMPLE_POINTS_MAKE_AFFINE))) {
        private enum enumMixinStr_EC_F_EC_GFP_SIMPLE_POINTS_MAKE_AFFINE = `enum EC_F_EC_GFP_SIMPLE_POINTS_MAKE_AFFINE = 137;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GFP_SIMPLE_POINTS_MAKE_AFFINE); }))) {
            mixin(enumMixinStr_EC_F_EC_GFP_SIMPLE_POINTS_MAKE_AFFINE);
        }
    }




    static if(!is(typeof(EC_F_EC_GFP_SIMPLE_POINT2OCT))) {
        private enum enumMixinStr_EC_F_EC_GFP_SIMPLE_POINT2OCT = `enum EC_F_EC_GFP_SIMPLE_POINT2OCT = 104;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GFP_SIMPLE_POINT2OCT); }))) {
            mixin(enumMixinStr_EC_F_EC_GFP_SIMPLE_POINT2OCT);
        }
    }




    static if(!is(typeof(EC_F_EC_GFP_SIMPLE_OCT2POINT))) {
        private enum enumMixinStr_EC_F_EC_GFP_SIMPLE_OCT2POINT = `enum EC_F_EC_GFP_SIMPLE_OCT2POINT = 103;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GFP_SIMPLE_OCT2POINT); }))) {
            mixin(enumMixinStr_EC_F_EC_GFP_SIMPLE_OCT2POINT);
        }
    }




    static if(!is(typeof(EC_F_EC_GFP_SIMPLE_MAKE_AFFINE))) {
        private enum enumMixinStr_EC_F_EC_GFP_SIMPLE_MAKE_AFFINE = `enum EC_F_EC_GFP_SIMPLE_MAKE_AFFINE = 102;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GFP_SIMPLE_MAKE_AFFINE); }))) {
            mixin(enumMixinStr_EC_F_EC_GFP_SIMPLE_MAKE_AFFINE);
        }
    }




    static if(!is(typeof(EC_F_EC_GFP_SIMPLE_GROUP_SET_CURVE))) {
        private enum enumMixinStr_EC_F_EC_GFP_SIMPLE_GROUP_SET_CURVE = `enum EC_F_EC_GFP_SIMPLE_GROUP_SET_CURVE = 166;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GFP_SIMPLE_GROUP_SET_CURVE); }))) {
            mixin(enumMixinStr_EC_F_EC_GFP_SIMPLE_GROUP_SET_CURVE);
        }
    }




    static if(!is(typeof(EC_F_EC_GFP_SIMPLE_GROUP_CHECK_DISCRIMINANT))) {
        private enum enumMixinStr_EC_F_EC_GFP_SIMPLE_GROUP_CHECK_DISCRIMINANT = `enum EC_F_EC_GFP_SIMPLE_GROUP_CHECK_DISCRIMINANT = 165;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GFP_SIMPLE_GROUP_CHECK_DISCRIMINANT); }))) {
            mixin(enumMixinStr_EC_F_EC_GFP_SIMPLE_GROUP_CHECK_DISCRIMINANT);
        }
    }




    static if(!is(typeof(EC_F_EC_GFP_SIMPLE_FIELD_INV))) {
        private enum enumMixinStr_EC_F_EC_GFP_SIMPLE_FIELD_INV = `enum EC_F_EC_GFP_SIMPLE_FIELD_INV = 298;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GFP_SIMPLE_FIELD_INV); }))) {
            mixin(enumMixinStr_EC_F_EC_GFP_SIMPLE_FIELD_INV);
        }
    }




    static if(!is(typeof(EC_F_EC_GFP_SIMPLE_BLIND_COORDINATES))) {
        private enum enumMixinStr_EC_F_EC_GFP_SIMPLE_BLIND_COORDINATES = `enum EC_F_EC_GFP_SIMPLE_BLIND_COORDINATES = 287;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GFP_SIMPLE_BLIND_COORDINATES); }))) {
            mixin(enumMixinStr_EC_F_EC_GFP_SIMPLE_BLIND_COORDINATES);
        }
    }




    static if(!is(typeof(EC_F_EC_GFP_NIST_GROUP_SET_CURVE))) {
        private enum enumMixinStr_EC_F_EC_GFP_NIST_GROUP_SET_CURVE = `enum EC_F_EC_GFP_NIST_GROUP_SET_CURVE = 202;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GFP_NIST_GROUP_SET_CURVE); }))) {
            mixin(enumMixinStr_EC_F_EC_GFP_NIST_GROUP_SET_CURVE);
        }
    }




    static if(!is(typeof(EC_F_EC_GFP_NIST_FIELD_SQR))) {
        private enum enumMixinStr_EC_F_EC_GFP_NIST_FIELD_SQR = `enum EC_F_EC_GFP_NIST_FIELD_SQR = 201;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GFP_NIST_FIELD_SQR); }))) {
            mixin(enumMixinStr_EC_F_EC_GFP_NIST_FIELD_SQR);
        }
    }




    static if(!is(typeof(EC_F_EC_GFP_NIST_FIELD_MUL))) {
        private enum enumMixinStr_EC_F_EC_GFP_NIST_FIELD_MUL = `enum EC_F_EC_GFP_NIST_FIELD_MUL = 200;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GFP_NIST_FIELD_MUL); }))) {
            mixin(enumMixinStr_EC_F_EC_GFP_NIST_FIELD_MUL);
        }
    }




    static if(!is(typeof(EC_F_EC_GFP_NISTP521_POINT_GET_AFFINE_COORDINATES))) {
        private enum enumMixinStr_EC_F_EC_GFP_NISTP521_POINT_GET_AFFINE_COORDINATES = `enum EC_F_EC_GFP_NISTP521_POINT_GET_AFFINE_COORDINATES = 235;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GFP_NISTP521_POINT_GET_AFFINE_COORDINATES); }))) {
            mixin(enumMixinStr_EC_F_EC_GFP_NISTP521_POINT_GET_AFFINE_COORDINATES);
        }
    }




    static if(!is(typeof(EC_F_EC_GFP_NISTP521_POINTS_MUL))) {
        private enum enumMixinStr_EC_F_EC_GFP_NISTP521_POINTS_MUL = `enum EC_F_EC_GFP_NISTP521_POINTS_MUL = 234;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GFP_NISTP521_POINTS_MUL); }))) {
            mixin(enumMixinStr_EC_F_EC_GFP_NISTP521_POINTS_MUL);
        }
    }




    static if(!is(typeof(EC_F_EC_GFP_NISTP521_GROUP_SET_CURVE))) {
        private enum enumMixinStr_EC_F_EC_GFP_NISTP521_GROUP_SET_CURVE = `enum EC_F_EC_GFP_NISTP521_GROUP_SET_CURVE = 233;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GFP_NISTP521_GROUP_SET_CURVE); }))) {
            mixin(enumMixinStr_EC_F_EC_GFP_NISTP521_GROUP_SET_CURVE);
        }
    }




    static if(!is(typeof(EC_F_EC_GFP_NISTP256_POINT_GET_AFFINE_COORDINATES))) {
        private enum enumMixinStr_EC_F_EC_GFP_NISTP256_POINT_GET_AFFINE_COORDINATES = `enum EC_F_EC_GFP_NISTP256_POINT_GET_AFFINE_COORDINATES = 232;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GFP_NISTP256_POINT_GET_AFFINE_COORDINATES); }))) {
            mixin(enumMixinStr_EC_F_EC_GFP_NISTP256_POINT_GET_AFFINE_COORDINATES);
        }
    }




    static if(!is(typeof(EC_F_EC_GFP_NISTP256_POINTS_MUL))) {
        private enum enumMixinStr_EC_F_EC_GFP_NISTP256_POINTS_MUL = `enum EC_F_EC_GFP_NISTP256_POINTS_MUL = 231;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GFP_NISTP256_POINTS_MUL); }))) {
            mixin(enumMixinStr_EC_F_EC_GFP_NISTP256_POINTS_MUL);
        }
    }




    static if(!is(typeof(EC_F_EC_GFP_NISTP256_GROUP_SET_CURVE))) {
        private enum enumMixinStr_EC_F_EC_GFP_NISTP256_GROUP_SET_CURVE = `enum EC_F_EC_GFP_NISTP256_GROUP_SET_CURVE = 230;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GFP_NISTP256_GROUP_SET_CURVE); }))) {
            mixin(enumMixinStr_EC_F_EC_GFP_NISTP256_GROUP_SET_CURVE);
        }
    }




    static if(!is(typeof(EC_F_EC_GFP_NISTP224_POINT_GET_AFFINE_COORDINATES))) {
        private enum enumMixinStr_EC_F_EC_GFP_NISTP224_POINT_GET_AFFINE_COORDINATES = `enum EC_F_EC_GFP_NISTP224_POINT_GET_AFFINE_COORDINATES = 226;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GFP_NISTP224_POINT_GET_AFFINE_COORDINATES); }))) {
            mixin(enumMixinStr_EC_F_EC_GFP_NISTP224_POINT_GET_AFFINE_COORDINATES);
        }
    }




    static if(!is(typeof(EC_F_EC_GFP_NISTP224_POINTS_MUL))) {
        private enum enumMixinStr_EC_F_EC_GFP_NISTP224_POINTS_MUL = `enum EC_F_EC_GFP_NISTP224_POINTS_MUL = 228;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GFP_NISTP224_POINTS_MUL); }))) {
            mixin(enumMixinStr_EC_F_EC_GFP_NISTP224_POINTS_MUL);
        }
    }




    static if(!is(typeof(EC_F_EC_GFP_NISTP224_GROUP_SET_CURVE))) {
        private enum enumMixinStr_EC_F_EC_GFP_NISTP224_GROUP_SET_CURVE = `enum EC_F_EC_GFP_NISTP224_GROUP_SET_CURVE = 225;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GFP_NISTP224_GROUP_SET_CURVE); }))) {
            mixin(enumMixinStr_EC_F_EC_GFP_NISTP224_GROUP_SET_CURVE);
        }
    }




    static if(!is(typeof(EC_F_EC_GFP_MONT_GROUP_SET_CURVE))) {
        private enum enumMixinStr_EC_F_EC_GFP_MONT_GROUP_SET_CURVE = `enum EC_F_EC_GFP_MONT_GROUP_SET_CURVE = 189;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GFP_MONT_GROUP_SET_CURVE); }))) {
            mixin(enumMixinStr_EC_F_EC_GFP_MONT_GROUP_SET_CURVE);
        }
    }




    static if(!is(typeof(CTX_TEST))) {
        private enum enumMixinStr_CTX_TEST = `enum CTX_TEST = 0x1;`;
        static if(is(typeof({ mixin(enumMixinStr_CTX_TEST); }))) {
            mixin(enumMixinStr_CTX_TEST);
        }
    }




    static if(!is(typeof(X509V3_CTX_REPLACE))) {
        private enum enumMixinStr_X509V3_CTX_REPLACE = `enum X509V3_CTX_REPLACE = 0x2;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_CTX_REPLACE); }))) {
            mixin(enumMixinStr_X509V3_CTX_REPLACE);
        }
    }




    static if(!is(typeof(EC_F_EC_GFP_MONT_FIELD_SQR))) {
        private enum enumMixinStr_EC_F_EC_GFP_MONT_FIELD_SQR = `enum EC_F_EC_GFP_MONT_FIELD_SQR = 132;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GFP_MONT_FIELD_SQR); }))) {
            mixin(enumMixinStr_EC_F_EC_GFP_MONT_FIELD_SQR);
        }
    }




    static if(!is(typeof(EC_F_EC_GFP_MONT_FIELD_SET_TO_ONE))) {
        private enum enumMixinStr_EC_F_EC_GFP_MONT_FIELD_SET_TO_ONE = `enum EC_F_EC_GFP_MONT_FIELD_SET_TO_ONE = 209;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GFP_MONT_FIELD_SET_TO_ONE); }))) {
            mixin(enumMixinStr_EC_F_EC_GFP_MONT_FIELD_SET_TO_ONE);
        }
    }




    static if(!is(typeof(EC_F_EC_GFP_MONT_FIELD_MUL))) {
        private enum enumMixinStr_EC_F_EC_GFP_MONT_FIELD_MUL = `enum EC_F_EC_GFP_MONT_FIELD_MUL = 131;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GFP_MONT_FIELD_MUL); }))) {
            mixin(enumMixinStr_EC_F_EC_GFP_MONT_FIELD_MUL);
        }
    }




    static if(!is(typeof(EC_F_EC_GFP_MONT_FIELD_INV))) {
        private enum enumMixinStr_EC_F_EC_GFP_MONT_FIELD_INV = `enum EC_F_EC_GFP_MONT_FIELD_INV = 297;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GFP_MONT_FIELD_INV); }))) {
            mixin(enumMixinStr_EC_F_EC_GFP_MONT_FIELD_INV);
        }
    }




    static if(!is(typeof(EC_F_EC_GFP_MONT_FIELD_ENCODE))) {
        private enum enumMixinStr_EC_F_EC_GFP_MONT_FIELD_ENCODE = `enum EC_F_EC_GFP_MONT_FIELD_ENCODE = 134;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GFP_MONT_FIELD_ENCODE); }))) {
            mixin(enumMixinStr_EC_F_EC_GFP_MONT_FIELD_ENCODE);
        }
    }




    static if(!is(typeof(EC_F_EC_GFP_MONT_FIELD_DECODE))) {
        private enum enumMixinStr_EC_F_EC_GFP_MONT_FIELD_DECODE = `enum EC_F_EC_GFP_MONT_FIELD_DECODE = 133;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GFP_MONT_FIELD_DECODE); }))) {
            mixin(enumMixinStr_EC_F_EC_GFP_MONT_FIELD_DECODE);
        }
    }




    static if(!is(typeof(EC_F_EC_GF2M_SIMPLE_SET_COMPRESSED_COORDINATES))) {
        private enum enumMixinStr_EC_F_EC_GF2M_SIMPLE_SET_COMPRESSED_COORDINATES = `enum EC_F_EC_GF2M_SIMPLE_SET_COMPRESSED_COORDINATES = 164;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GF2M_SIMPLE_SET_COMPRESSED_COORDINATES); }))) {
            mixin(enumMixinStr_EC_F_EC_GF2M_SIMPLE_SET_COMPRESSED_COORDINATES);
        }
    }




    static if(!is(typeof(EC_F_EC_GF2M_SIMPLE_POINT_SET_AFFINE_COORDINATES))) {
        private enum enumMixinStr_EC_F_EC_GF2M_SIMPLE_POINT_SET_AFFINE_COORDINATES = `enum EC_F_EC_GF2M_SIMPLE_POINT_SET_AFFINE_COORDINATES = 163;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GF2M_SIMPLE_POINT_SET_AFFINE_COORDINATES); }))) {
            mixin(enumMixinStr_EC_F_EC_GF2M_SIMPLE_POINT_SET_AFFINE_COORDINATES);
        }
    }




    static if(!is(typeof(EC_F_EC_GF2M_SIMPLE_POINT_GET_AFFINE_COORDINATES))) {
        private enum enumMixinStr_EC_F_EC_GF2M_SIMPLE_POINT_GET_AFFINE_COORDINATES = `enum EC_F_EC_GF2M_SIMPLE_POINT_GET_AFFINE_COORDINATES = 162;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GF2M_SIMPLE_POINT_GET_AFFINE_COORDINATES); }))) {
            mixin(enumMixinStr_EC_F_EC_GF2M_SIMPLE_POINT_GET_AFFINE_COORDINATES);
        }
    }




    static if(!is(typeof(EC_F_EC_GF2M_SIMPLE_POINTS_MUL))) {
        private enum enumMixinStr_EC_F_EC_GF2M_SIMPLE_POINTS_MUL = `enum EC_F_EC_GF2M_SIMPLE_POINTS_MUL = 289;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GF2M_SIMPLE_POINTS_MUL); }))) {
            mixin(enumMixinStr_EC_F_EC_GF2M_SIMPLE_POINTS_MUL);
        }
    }




    static if(!is(typeof(EC_F_EC_GF2M_SIMPLE_POINT2OCT))) {
        private enum enumMixinStr_EC_F_EC_GF2M_SIMPLE_POINT2OCT = `enum EC_F_EC_GF2M_SIMPLE_POINT2OCT = 161;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GF2M_SIMPLE_POINT2OCT); }))) {
            mixin(enumMixinStr_EC_F_EC_GF2M_SIMPLE_POINT2OCT);
        }
    }




    static if(!is(typeof(EC_F_EC_GF2M_SIMPLE_OCT2POINT))) {
        private enum enumMixinStr_EC_F_EC_GF2M_SIMPLE_OCT2POINT = `enum EC_F_EC_GF2M_SIMPLE_OCT2POINT = 160;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GF2M_SIMPLE_OCT2POINT); }))) {
            mixin(enumMixinStr_EC_F_EC_GF2M_SIMPLE_OCT2POINT);
        }
    }




    static if(!is(typeof(EC_F_EC_GF2M_SIMPLE_LADDER_PRE))) {
        private enum enumMixinStr_EC_F_EC_GF2M_SIMPLE_LADDER_PRE = `enum EC_F_EC_GF2M_SIMPLE_LADDER_PRE = 288;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GF2M_SIMPLE_LADDER_PRE); }))) {
            mixin(enumMixinStr_EC_F_EC_GF2M_SIMPLE_LADDER_PRE);
        }
    }




    static if(!is(typeof(EC_F_EC_GF2M_SIMPLE_LADDER_POST))) {
        private enum enumMixinStr_EC_F_EC_GF2M_SIMPLE_LADDER_POST = `enum EC_F_EC_GF2M_SIMPLE_LADDER_POST = 285;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GF2M_SIMPLE_LADDER_POST); }))) {
            mixin(enumMixinStr_EC_F_EC_GF2M_SIMPLE_LADDER_POST);
        }
    }




    static if(!is(typeof(EC_F_EC_GF2M_SIMPLE_GROUP_SET_CURVE))) {
        private enum enumMixinStr_EC_F_EC_GF2M_SIMPLE_GROUP_SET_CURVE = `enum EC_F_EC_GF2M_SIMPLE_GROUP_SET_CURVE = 195;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GF2M_SIMPLE_GROUP_SET_CURVE); }))) {
            mixin(enumMixinStr_EC_F_EC_GF2M_SIMPLE_GROUP_SET_CURVE);
        }
    }




    static if(!is(typeof(EC_F_EC_GF2M_SIMPLE_GROUP_CHECK_DISCRIMINANT))) {
        private enum enumMixinStr_EC_F_EC_GF2M_SIMPLE_GROUP_CHECK_DISCRIMINANT = `enum EC_F_EC_GF2M_SIMPLE_GROUP_CHECK_DISCRIMINANT = 159;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GF2M_SIMPLE_GROUP_CHECK_DISCRIMINANT); }))) {
            mixin(enumMixinStr_EC_F_EC_GF2M_SIMPLE_GROUP_CHECK_DISCRIMINANT);
        }
    }




    static if(!is(typeof(EC_F_EC_GF2M_SIMPLE_FIELD_INV))) {
        private enum enumMixinStr_EC_F_EC_GF2M_SIMPLE_FIELD_INV = `enum EC_F_EC_GF2M_SIMPLE_FIELD_INV = 296;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GF2M_SIMPLE_FIELD_INV); }))) {
            mixin(enumMixinStr_EC_F_EC_GF2M_SIMPLE_FIELD_INV);
        }
    }




    static if(!is(typeof(EC_F_EC_GF2M_MONTGOMERY_POINT_MULTIPLY))) {
        private enum enumMixinStr_EC_F_EC_GF2M_MONTGOMERY_POINT_MULTIPLY = `enum EC_F_EC_GF2M_MONTGOMERY_POINT_MULTIPLY = 208;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_GF2M_MONTGOMERY_POINT_MULTIPLY); }))) {
            mixin(enumMixinStr_EC_F_EC_GF2M_MONTGOMERY_POINT_MULTIPLY);
        }
    }




    static if(!is(typeof(EC_F_EC_ASN1_GROUP2FIELDID))) {
        private enum enumMixinStr_EC_F_EC_ASN1_GROUP2FIELDID = `enum EC_F_EC_ASN1_GROUP2FIELDID = 154;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_ASN1_GROUP2FIELDID); }))) {
            mixin(enumMixinStr_EC_F_EC_ASN1_GROUP2FIELDID);
        }
    }




    static if(!is(typeof(EC_F_EC_ASN1_GROUP2CURVE))) {
        private enum enumMixinStr_EC_F_EC_ASN1_GROUP2CURVE = `enum EC_F_EC_ASN1_GROUP2CURVE = 153;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_EC_ASN1_GROUP2CURVE); }))) {
            mixin(enumMixinStr_EC_F_EC_ASN1_GROUP2CURVE);
        }
    }




    static if(!is(typeof(EC_F_ECX_PUB_ENCODE))) {
        private enum enumMixinStr_EC_F_ECX_PUB_ENCODE = `enum EC_F_ECX_PUB_ENCODE = 268;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_ECX_PUB_ENCODE); }))) {
            mixin(enumMixinStr_EC_F_ECX_PUB_ENCODE);
        }
    }




    static if(!is(typeof(EC_F_ECX_PRIV_ENCODE))) {
        private enum enumMixinStr_EC_F_ECX_PRIV_ENCODE = `enum EC_F_ECX_PRIV_ENCODE = 267;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_ECX_PRIV_ENCODE); }))) {
            mixin(enumMixinStr_EC_F_ECX_PRIV_ENCODE);
        }
    }




    static if(!is(typeof(EC_F_ECX_KEY_OP))) {
        private enum enumMixinStr_EC_F_ECX_KEY_OP = `enum EC_F_ECX_KEY_OP = 266;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_ECX_KEY_OP); }))) {
            mixin(enumMixinStr_EC_F_ECX_KEY_OP);
        }
    }




    static if(!is(typeof(EC_F_ECP_NISTZ256_WINDOWED_MUL))) {
        private enum enumMixinStr_EC_F_ECP_NISTZ256_WINDOWED_MUL = `enum EC_F_ECP_NISTZ256_WINDOWED_MUL = 242;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_ECP_NISTZ256_WINDOWED_MUL); }))) {
            mixin(enumMixinStr_EC_F_ECP_NISTZ256_WINDOWED_MUL);
        }
    }




    static if(!is(typeof(EC_F_ECP_NISTZ256_PRE_COMP_NEW))) {
        private enum enumMixinStr_EC_F_ECP_NISTZ256_PRE_COMP_NEW = `enum EC_F_ECP_NISTZ256_PRE_COMP_NEW = 244;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_ECP_NISTZ256_PRE_COMP_NEW); }))) {
            mixin(enumMixinStr_EC_F_ECP_NISTZ256_PRE_COMP_NEW);
        }
    }




    static if(!is(typeof(EC_F_ECP_NISTZ256_POINTS_MUL))) {
        private enum enumMixinStr_EC_F_ECP_NISTZ256_POINTS_MUL = `enum EC_F_ECP_NISTZ256_POINTS_MUL = 241;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_ECP_NISTZ256_POINTS_MUL); }))) {
            mixin(enumMixinStr_EC_F_ECP_NISTZ256_POINTS_MUL);
        }
    }




    static if(!is(typeof(EC_F_ECP_NISTZ256_MULT_PRECOMPUTE))) {
        private enum enumMixinStr_EC_F_ECP_NISTZ256_MULT_PRECOMPUTE = `enum EC_F_ECP_NISTZ256_MULT_PRECOMPUTE = 243;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_ECP_NISTZ256_MULT_PRECOMPUTE); }))) {
            mixin(enumMixinStr_EC_F_ECP_NISTZ256_MULT_PRECOMPUTE);
        }
    }




    static if(!is(typeof(EC_F_ECP_NISTZ256_INV_MOD_ORD))) {
        private enum enumMixinStr_EC_F_ECP_NISTZ256_INV_MOD_ORD = `enum EC_F_ECP_NISTZ256_INV_MOD_ORD = 275;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_ECP_NISTZ256_INV_MOD_ORD); }))) {
            mixin(enumMixinStr_EC_F_ECP_NISTZ256_INV_MOD_ORD);
        }
    }




    static if(!is(typeof(EC_F_ECP_NISTZ256_GET_AFFINE))) {
        private enum enumMixinStr_EC_F_ECP_NISTZ256_GET_AFFINE = `enum EC_F_ECP_NISTZ256_GET_AFFINE = 240;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_ECP_NISTZ256_GET_AFFINE); }))) {
            mixin(enumMixinStr_EC_F_ECP_NISTZ256_GET_AFFINE);
        }
    }




    static if(!is(typeof(EC_F_ECPKPARAMETERS_PRINT_FP))) {
        private enum enumMixinStr_EC_F_ECPKPARAMETERS_PRINT_FP = `enum EC_F_ECPKPARAMETERS_PRINT_FP = 150;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_ECPKPARAMETERS_PRINT_FP); }))) {
            mixin(enumMixinStr_EC_F_ECPKPARAMETERS_PRINT_FP);
        }
    }




    static if(!is(typeof(X509V3_EXT_DYNAMIC))) {
        private enum enumMixinStr_X509V3_EXT_DYNAMIC = `enum X509V3_EXT_DYNAMIC = 0x1;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_EXT_DYNAMIC); }))) {
            mixin(enumMixinStr_X509V3_EXT_DYNAMIC);
        }
    }




    static if(!is(typeof(X509V3_EXT_CTX_DEP))) {
        private enum enumMixinStr_X509V3_EXT_CTX_DEP = `enum X509V3_EXT_CTX_DEP = 0x2;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_EXT_CTX_DEP); }))) {
            mixin(enumMixinStr_X509V3_EXT_CTX_DEP);
        }
    }




    static if(!is(typeof(X509V3_EXT_MULTILINE))) {
        private enum enumMixinStr_X509V3_EXT_MULTILINE = `enum X509V3_EXT_MULTILINE = 0x4;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_EXT_MULTILINE); }))) {
            mixin(enumMixinStr_X509V3_EXT_MULTILINE);
        }
    }




    static if(!is(typeof(EC_F_ECPKPARAMETERS_PRINT))) {
        private enum enumMixinStr_EC_F_ECPKPARAMETERS_PRINT = `enum EC_F_ECPKPARAMETERS_PRINT = 149;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_ECPKPARAMETERS_PRINT); }))) {
            mixin(enumMixinStr_EC_F_ECPKPARAMETERS_PRINT);
        }
    }




    static if(!is(typeof(EC_F_ECPARAMETERS_PRINT_FP))) {
        private enum enumMixinStr_EC_F_ECPARAMETERS_PRINT_FP = `enum EC_F_ECPARAMETERS_PRINT_FP = 148;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_ECPARAMETERS_PRINT_FP); }))) {
            mixin(enumMixinStr_EC_F_ECPARAMETERS_PRINT_FP);
        }
    }




    static if(!is(typeof(EC_F_ECPARAMETERS_PRINT))) {
        private enum enumMixinStr_EC_F_ECPARAMETERS_PRINT = `enum EC_F_ECPARAMETERS_PRINT = 147;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_ECPARAMETERS_PRINT); }))) {
            mixin(enumMixinStr_EC_F_ECPARAMETERS_PRINT);
        }
    }




    static if(!is(typeof(EC_F_ECKEY_TYPE2PARAM))) {
        private enum enumMixinStr_EC_F_ECKEY_TYPE2PARAM = `enum EC_F_ECKEY_TYPE2PARAM = 220;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_ECKEY_TYPE2PARAM); }))) {
            mixin(enumMixinStr_EC_F_ECKEY_TYPE2PARAM);
        }
    }




    static if(!is(typeof(EC_F_ECKEY_PUB_ENCODE))) {
        private enum enumMixinStr_EC_F_ECKEY_PUB_ENCODE = `enum EC_F_ECKEY_PUB_ENCODE = 216;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_ECKEY_PUB_ENCODE); }))) {
            mixin(enumMixinStr_EC_F_ECKEY_PUB_ENCODE);
        }
    }




    static if(!is(typeof(EC_F_ECKEY_PUB_DECODE))) {
        private enum enumMixinStr_EC_F_ECKEY_PUB_DECODE = `enum EC_F_ECKEY_PUB_DECODE = 215;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_ECKEY_PUB_DECODE); }))) {
            mixin(enumMixinStr_EC_F_ECKEY_PUB_DECODE);
        }
    }




    static if(!is(typeof(EC_F_ECKEY_PRIV_ENCODE))) {
        private enum enumMixinStr_EC_F_ECKEY_PRIV_ENCODE = `enum EC_F_ECKEY_PRIV_ENCODE = 214;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_ECKEY_PRIV_ENCODE); }))) {
            mixin(enumMixinStr_EC_F_ECKEY_PRIV_ENCODE);
        }
    }




    static if(!is(typeof(EC_F_ECKEY_PRIV_DECODE))) {
        private enum enumMixinStr_EC_F_ECKEY_PRIV_DECODE = `enum EC_F_ECKEY_PRIV_DECODE = 213;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_ECKEY_PRIV_DECODE); }))) {
            mixin(enumMixinStr_EC_F_ECKEY_PRIV_DECODE);
        }
    }




    static if(!is(typeof(EC_F_ECKEY_PARAM_DECODE))) {
        private enum enumMixinStr_EC_F_ECKEY_PARAM_DECODE = `enum EC_F_ECKEY_PARAM_DECODE = 212;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_ECKEY_PARAM_DECODE); }))) {
            mixin(enumMixinStr_EC_F_ECKEY_PARAM_DECODE);
        }
    }




    static if(!is(typeof(EC_F_ECKEY_PARAM2TYPE))) {
        private enum enumMixinStr_EC_F_ECKEY_PARAM2TYPE = `enum EC_F_ECKEY_PARAM2TYPE = 223;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_ECKEY_PARAM2TYPE); }))) {
            mixin(enumMixinStr_EC_F_ECKEY_PARAM2TYPE);
        }
    }




    static if(!is(typeof(EC_F_ECD_ITEM_VERIFY))) {
        private enum enumMixinStr_EC_F_ECD_ITEM_VERIFY = `enum EC_F_ECD_ITEM_VERIFY = 270;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_ECD_ITEM_VERIFY); }))) {
            mixin(enumMixinStr_EC_F_ECD_ITEM_VERIFY);
        }
    }




    static if(!is(typeof(GEN_OTHERNAME))) {
        private enum enumMixinStr_GEN_OTHERNAME = `enum GEN_OTHERNAME = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_GEN_OTHERNAME); }))) {
            mixin(enumMixinStr_GEN_OTHERNAME);
        }
    }




    static if(!is(typeof(GEN_EMAIL))) {
        private enum enumMixinStr_GEN_EMAIL = `enum GEN_EMAIL = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_GEN_EMAIL); }))) {
            mixin(enumMixinStr_GEN_EMAIL);
        }
    }




    static if(!is(typeof(GEN_DNS))) {
        private enum enumMixinStr_GEN_DNS = `enum GEN_DNS = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_GEN_DNS); }))) {
            mixin(enumMixinStr_GEN_DNS);
        }
    }




    static if(!is(typeof(GEN_X400))) {
        private enum enumMixinStr_GEN_X400 = `enum GEN_X400 = 3;`;
        static if(is(typeof({ mixin(enumMixinStr_GEN_X400); }))) {
            mixin(enumMixinStr_GEN_X400);
        }
    }




    static if(!is(typeof(GEN_DIRNAME))) {
        private enum enumMixinStr_GEN_DIRNAME = `enum GEN_DIRNAME = 4;`;
        static if(is(typeof({ mixin(enumMixinStr_GEN_DIRNAME); }))) {
            mixin(enumMixinStr_GEN_DIRNAME);
        }
    }




    static if(!is(typeof(GEN_EDIPARTY))) {
        private enum enumMixinStr_GEN_EDIPARTY = `enum GEN_EDIPARTY = 5;`;
        static if(is(typeof({ mixin(enumMixinStr_GEN_EDIPARTY); }))) {
            mixin(enumMixinStr_GEN_EDIPARTY);
        }
    }




    static if(!is(typeof(GEN_URI))) {
        private enum enumMixinStr_GEN_URI = `enum GEN_URI = 6;`;
        static if(is(typeof({ mixin(enumMixinStr_GEN_URI); }))) {
            mixin(enumMixinStr_GEN_URI);
        }
    }




    static if(!is(typeof(GEN_IPADD))) {
        private enum enumMixinStr_GEN_IPADD = `enum GEN_IPADD = 7;`;
        static if(is(typeof({ mixin(enumMixinStr_GEN_IPADD); }))) {
            mixin(enumMixinStr_GEN_IPADD);
        }
    }




    static if(!is(typeof(GEN_RID))) {
        private enum enumMixinStr_GEN_RID = `enum GEN_RID = 8;`;
        static if(is(typeof({ mixin(enumMixinStr_GEN_RID); }))) {
            mixin(enumMixinStr_GEN_RID);
        }
    }




    static if(!is(typeof(EC_F_ECDSA_VERIFY))) {
        private enum enumMixinStr_EC_F_ECDSA_VERIFY = `enum EC_F_ECDSA_VERIFY = 253;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_ECDSA_VERIFY); }))) {
            mixin(enumMixinStr_EC_F_ECDSA_VERIFY);
        }
    }




    static if(!is(typeof(EC_F_ECDSA_SIG_NEW))) {
        private enum enumMixinStr_EC_F_ECDSA_SIG_NEW = `enum EC_F_ECDSA_SIG_NEW = 265;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_ECDSA_SIG_NEW); }))) {
            mixin(enumMixinStr_EC_F_ECDSA_SIG_NEW);
        }
    }




    static if(!is(typeof(EC_F_ECDSA_SIGN_SETUP))) {
        private enum enumMixinStr_EC_F_ECDSA_SIGN_SETUP = `enum EC_F_ECDSA_SIGN_SETUP = 248;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_ECDSA_SIGN_SETUP); }))) {
            mixin(enumMixinStr_EC_F_ECDSA_SIGN_SETUP);
        }
    }




    static if(!is(typeof(EC_F_ECDSA_SIGN_EX))) {
        private enum enumMixinStr_EC_F_ECDSA_SIGN_EX = `enum EC_F_ECDSA_SIGN_EX = 254;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_ECDSA_SIGN_EX); }))) {
            mixin(enumMixinStr_EC_F_ECDSA_SIGN_EX);
        }
    }




    static if(!is(typeof(EC_F_ECDSA_DO_VERIFY))) {
        private enum enumMixinStr_EC_F_ECDSA_DO_VERIFY = `enum EC_F_ECDSA_DO_VERIFY = 252;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_ECDSA_DO_VERIFY); }))) {
            mixin(enumMixinStr_EC_F_ECDSA_DO_VERIFY);
        }
    }




    static if(!is(typeof(EC_F_ECDSA_DO_SIGN_EX))) {
        private enum enumMixinStr_EC_F_ECDSA_DO_SIGN_EX = `enum EC_F_ECDSA_DO_SIGN_EX = 251;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_ECDSA_DO_SIGN_EX); }))) {
            mixin(enumMixinStr_EC_F_ECDSA_DO_SIGN_EX);
        }
    }




    static if(!is(typeof(EC_F_ECDH_SIMPLE_COMPUTE_KEY))) {
        private enum enumMixinStr_EC_F_ECDH_SIMPLE_COMPUTE_KEY = `enum EC_F_ECDH_SIMPLE_COMPUTE_KEY = 257;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_ECDH_SIMPLE_COMPUTE_KEY); }))) {
            mixin(enumMixinStr_EC_F_ECDH_SIMPLE_COMPUTE_KEY);
        }
    }




    static if(!is(typeof(EC_F_ECDH_COMPUTE_KEY))) {
        private enum enumMixinStr_EC_F_ECDH_COMPUTE_KEY = `enum EC_F_ECDH_COMPUTE_KEY = 246;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_ECDH_COMPUTE_KEY); }))) {
            mixin(enumMixinStr_EC_F_ECDH_COMPUTE_KEY);
        }
    }




    static if(!is(typeof(EC_F_ECDH_CMS_SET_SHARED_INFO))) {
        private enum enumMixinStr_EC_F_ECDH_CMS_SET_SHARED_INFO = `enum EC_F_ECDH_CMS_SET_SHARED_INFO = 239;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_ECDH_CMS_SET_SHARED_INFO); }))) {
            mixin(enumMixinStr_EC_F_ECDH_CMS_SET_SHARED_INFO);
        }
    }




    static if(!is(typeof(EC_F_ECDH_CMS_DECRYPT))) {
        private enum enumMixinStr_EC_F_ECDH_CMS_DECRYPT = `enum EC_F_ECDH_CMS_DECRYPT = 238;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_ECDH_CMS_DECRYPT); }))) {
            mixin(enumMixinStr_EC_F_ECDH_CMS_DECRYPT);
        }
    }




    static if(!is(typeof(EC_F_DO_EC_KEY_PRINT))) {
        private enum enumMixinStr_EC_F_DO_EC_KEY_PRINT = `enum EC_F_DO_EC_KEY_PRINT = 221;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_DO_EC_KEY_PRINT); }))) {
            mixin(enumMixinStr_EC_F_DO_EC_KEY_PRINT);
        }
    }




    static if(!is(typeof(EC_F_D2I_ECPRIVATEKEY))) {
        private enum enumMixinStr_EC_F_D2I_ECPRIVATEKEY = `enum EC_F_D2I_ECPRIVATEKEY = 146;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_D2I_ECPRIVATEKEY); }))) {
            mixin(enumMixinStr_EC_F_D2I_ECPRIVATEKEY);
        }
    }




    static if(!is(typeof(EC_F_D2I_ECPKPARAMETERS))) {
        private enum enumMixinStr_EC_F_D2I_ECPKPARAMETERS = `enum EC_F_D2I_ECPKPARAMETERS = 145;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_D2I_ECPKPARAMETERS); }))) {
            mixin(enumMixinStr_EC_F_D2I_ECPKPARAMETERS);
        }
    }




    static if(!is(typeof(EC_F_D2I_ECPARAMETERS))) {
        private enum enumMixinStr_EC_F_D2I_ECPARAMETERS = `enum EC_F_D2I_ECPARAMETERS = 144;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_D2I_ECPARAMETERS); }))) {
            mixin(enumMixinStr_EC_F_D2I_ECPARAMETERS);
        }
    }




    static if(!is(typeof(EC_F_BN_TO_FELEM))) {
        private enum enumMixinStr_EC_F_BN_TO_FELEM = `enum EC_F_BN_TO_FELEM = 224;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_F_BN_TO_FELEM); }))) {
            mixin(enumMixinStr_EC_F_BN_TO_FELEM);
        }
    }






    static if(!is(typeof(EVP_PKEY_ECDH_KDF_X9_62))) {
        private enum enumMixinStr_EVP_PKEY_ECDH_KDF_X9_62 = `enum EVP_PKEY_ECDH_KDF_X9_62 = EVP_PKEY_ECDH_KDF_X9_63;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_ECDH_KDF_X9_62); }))) {
            mixin(enumMixinStr_EVP_PKEY_ECDH_KDF_X9_62);
        }
    }




    static if(!is(typeof(EVP_PKEY_ECDH_KDF_X9_63))) {
        private enum enumMixinStr_EVP_PKEY_ECDH_KDF_X9_63 = `enum EVP_PKEY_ECDH_KDF_X9_63 = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_ECDH_KDF_X9_63); }))) {
            mixin(enumMixinStr_EVP_PKEY_ECDH_KDF_X9_63);
        }
    }




    static if(!is(typeof(EVP_PKEY_ECDH_KDF_NONE))) {
        private enum enumMixinStr_EVP_PKEY_ECDH_KDF_NONE = `enum EVP_PKEY_ECDH_KDF_NONE = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_ECDH_KDF_NONE); }))) {
            mixin(enumMixinStr_EVP_PKEY_ECDH_KDF_NONE);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_GET1_ID_LEN))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_GET1_ID_LEN = `enum EVP_PKEY_CTRL_GET1_ID_LEN = ( 0x1000 + 13 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_GET1_ID_LEN); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_GET1_ID_LEN);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_GET1_ID))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_GET1_ID = `enum EVP_PKEY_CTRL_GET1_ID = ( 0x1000 + 12 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_GET1_ID); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_GET1_ID);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_SET1_ID))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_SET1_ID = `enum EVP_PKEY_CTRL_SET1_ID = ( 0x1000 + 11 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_SET1_ID); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_SET1_ID);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_GET_EC_KDF_UKM))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_GET_EC_KDF_UKM = `enum EVP_PKEY_CTRL_GET_EC_KDF_UKM = ( 0x1000 + 10 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_GET_EC_KDF_UKM); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_GET_EC_KDF_UKM);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_EC_KDF_UKM))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_EC_KDF_UKM = `enum EVP_PKEY_CTRL_EC_KDF_UKM = ( 0x1000 + 9 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_EC_KDF_UKM); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_EC_KDF_UKM);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_GET_EC_KDF_OUTLEN))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_GET_EC_KDF_OUTLEN = `enum EVP_PKEY_CTRL_GET_EC_KDF_OUTLEN = ( 0x1000 + 8 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_GET_EC_KDF_OUTLEN); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_GET_EC_KDF_OUTLEN);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_EC_KDF_OUTLEN))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_EC_KDF_OUTLEN = `enum EVP_PKEY_CTRL_EC_KDF_OUTLEN = ( 0x1000 + 7 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_EC_KDF_OUTLEN); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_EC_KDF_OUTLEN);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_GET_EC_KDF_MD))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_GET_EC_KDF_MD = `enum EVP_PKEY_CTRL_GET_EC_KDF_MD = ( 0x1000 + 6 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_GET_EC_KDF_MD); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_GET_EC_KDF_MD);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_EC_KDF_MD))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_EC_KDF_MD = `enum EVP_PKEY_CTRL_EC_KDF_MD = ( 0x1000 + 5 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_EC_KDF_MD); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_EC_KDF_MD);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_EC_KDF_TYPE))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_EC_KDF_TYPE = `enum EVP_PKEY_CTRL_EC_KDF_TYPE = ( 0x1000 + 4 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_EC_KDF_TYPE); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_EC_KDF_TYPE);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_EC_ECDH_COFACTOR))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_EC_ECDH_COFACTOR = `enum EVP_PKEY_CTRL_EC_ECDH_COFACTOR = ( 0x1000 + 3 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_EC_ECDH_COFACTOR); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_EC_ECDH_COFACTOR);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_EC_PARAM_ENC))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_EC_PARAM_ENC = `enum EVP_PKEY_CTRL_EC_PARAM_ENC = ( 0x1000 + 2 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_EC_PARAM_ENC); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_EC_PARAM_ENC);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_EC_PARAMGEN_CURVE_NID))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_EC_PARAMGEN_CURVE_NID = `enum EVP_PKEY_CTRL_EC_PARAMGEN_CURVE_NID = ( 0x1000 + 1 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_EC_PARAMGEN_CURVE_NID); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_EC_PARAMGEN_CURVE_NID);
        }
    }
    static if(!is(typeof(EC_FLAG_COFACTOR_ECDH))) {
        private enum enumMixinStr_EC_FLAG_COFACTOR_ECDH = `enum EC_FLAG_COFACTOR_ECDH = 0x1000;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_FLAG_COFACTOR_ECDH); }))) {
            mixin(enumMixinStr_EC_FLAG_COFACTOR_ECDH);
        }
    }




    static if(!is(typeof(EC_FLAG_FIPS_CHECKED))) {
        private enum enumMixinStr_EC_FLAG_FIPS_CHECKED = `enum EC_FLAG_FIPS_CHECKED = 0x2;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_FLAG_FIPS_CHECKED); }))) {
            mixin(enumMixinStr_EC_FLAG_FIPS_CHECKED);
        }
    }




    static if(!is(typeof(EC_FLAG_NON_FIPS_ALLOW))) {
        private enum enumMixinStr_EC_FLAG_NON_FIPS_ALLOW = `enum EC_FLAG_NON_FIPS_ALLOW = 0x1;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_FLAG_NON_FIPS_ALLOW); }))) {
            mixin(enumMixinStr_EC_FLAG_NON_FIPS_ALLOW);
        }
    }




    static if(!is(typeof(EC_PKEY_NO_PUBKEY))) {
        private enum enumMixinStr_EC_PKEY_NO_PUBKEY = `enum EC_PKEY_NO_PUBKEY = 0x002;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_PKEY_NO_PUBKEY); }))) {
            mixin(enumMixinStr_EC_PKEY_NO_PUBKEY);
        }
    }




    static if(!is(typeof(EC_PKEY_NO_PARAMETERS))) {
        private enum enumMixinStr_EC_PKEY_NO_PARAMETERS = `enum EC_PKEY_NO_PARAMETERS = 0x001;`;
        static if(is(typeof({ mixin(enumMixinStr_EC_PKEY_NO_PARAMETERS); }))) {
            mixin(enumMixinStr_EC_PKEY_NO_PARAMETERS);
        }
    }
    static if(!is(typeof(OPENSSL_EC_NAMED_CURVE))) {
        private enum enumMixinStr_OPENSSL_EC_NAMED_CURVE = `enum OPENSSL_EC_NAMED_CURVE = 0x001;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_EC_NAMED_CURVE); }))) {
            mixin(enumMixinStr_OPENSSL_EC_NAMED_CURVE);
        }
    }




    static if(!is(typeof(OPENSSL_EC_EXPLICIT_CURVE))) {
        private enum enumMixinStr_OPENSSL_EC_EXPLICIT_CURVE = `enum OPENSSL_EC_EXPLICIT_CURVE = 0x000;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_EC_EXPLICIT_CURVE); }))) {
            mixin(enumMixinStr_OPENSSL_EC_EXPLICIT_CURVE);
        }
    }




    static if(!is(typeof(OPENSSL_ECC_MAX_FIELD_BITS))) {
        private enum enumMixinStr_OPENSSL_ECC_MAX_FIELD_BITS = `enum OPENSSL_ECC_MAX_FIELD_BITS = 661;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_ECC_MAX_FIELD_BITS); }))) {
            mixin(enumMixinStr_OPENSSL_ECC_MAX_FIELD_BITS);
        }
    }






    static if(!is(typeof(ossl_unused))) {
        private enum enumMixinStr_ossl_unused = `enum ossl_unused = __attribute__ ( ( unused ) );`;
        static if(is(typeof({ mixin(enumMixinStr_ossl_unused); }))) {
            mixin(enumMixinStr_ossl_unused);
        }
    }




    static if(!is(typeof(ossl_noreturn))) {
        private enum enumMixinStr_ossl_noreturn = `enum ossl_noreturn = _Noreturn;`;
        static if(is(typeof({ mixin(enumMixinStr_ossl_noreturn); }))) {
            mixin(enumMixinStr_ossl_noreturn);
        }
    }




    static if(!is(typeof(ossl_inline))) {
        private enum enumMixinStr_ossl_inline = `enum ossl_inline = inline;`;
        static if(is(typeof({ mixin(enumMixinStr_ossl_inline); }))) {
            mixin(enumMixinStr_ossl_inline);
        }
    }






    static if(!is(typeof(OSSL_SSIZE_MAX))) {
        private enum enumMixinStr_OSSL_SSIZE_MAX = `enum OSSL_SSIZE_MAX = ( cast( ssize_t ) ( SIZE_MAX >> 1 ) );`;
        static if(is(typeof({ mixin(enumMixinStr_OSSL_SSIZE_MAX); }))) {
            mixin(enumMixinStr_OSSL_SSIZE_MAX);
        }
    }




    static if(!is(typeof(ossl_ssize_t))) {
        private enum enumMixinStr_ossl_ssize_t = `enum ossl_ssize_t = ssize_t;`;
        static if(is(typeof({ mixin(enumMixinStr_ossl_ssize_t); }))) {
            mixin(enumMixinStr_ossl_ssize_t);
        }
    }
    static if(!is(typeof(OPENSSL_EXTERN))) {
        private enum enumMixinStr_OPENSSL_EXTERN = `enum OPENSSL_EXTERN = extern;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_EXTERN); }))) {
            mixin(enumMixinStr_OPENSSL_EXTERN);
        }
    }




    static if(!is(typeof(OPENSSL_EXPORT))) {
        private enum enumMixinStr_OPENSSL_EXPORT = `enum OPENSSL_EXPORT = extern;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_EXPORT); }))) {
            mixin(enumMixinStr_OPENSSL_EXPORT);
        }
    }






    static if(!is(typeof(OPENSSL_UNISTD_IO))) {
        private enum enumMixinStr_OPENSSL_UNISTD_IO = `enum OPENSSL_UNISTD_IO = < unistd . h >;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_UNISTD_IO); }))) {
            mixin(enumMixinStr_OPENSSL_UNISTD_IO);
        }
    }
    static if(!is(typeof(DSA_R_SEED_LEN_SMALL))) {
        private enum enumMixinStr_DSA_R_SEED_LEN_SMALL = `enum DSA_R_SEED_LEN_SMALL = 110;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_R_SEED_LEN_SMALL); }))) {
            mixin(enumMixinStr_DSA_R_SEED_LEN_SMALL);
        }
    }




    static if(!is(typeof(DSA_R_Q_NOT_PRIME))) {
        private enum enumMixinStr_DSA_R_Q_NOT_PRIME = `enum DSA_R_Q_NOT_PRIME = 113;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_R_Q_NOT_PRIME); }))) {
            mixin(enumMixinStr_DSA_R_Q_NOT_PRIME);
        }
    }




    static if(!is(typeof(DSA_R_PARAMETER_ENCODING_ERROR))) {
        private enum enumMixinStr_DSA_R_PARAMETER_ENCODING_ERROR = `enum DSA_R_PARAMETER_ENCODING_ERROR = 105;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_R_PARAMETER_ENCODING_ERROR); }))) {
            mixin(enumMixinStr_DSA_R_PARAMETER_ENCODING_ERROR);
        }
    }




    static if(!is(typeof(DSA_R_NO_PARAMETERS_SET))) {
        private enum enumMixinStr_DSA_R_NO_PARAMETERS_SET = `enum DSA_R_NO_PARAMETERS_SET = 107;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_R_NO_PARAMETERS_SET); }))) {
            mixin(enumMixinStr_DSA_R_NO_PARAMETERS_SET);
        }
    }




    static if(!is(typeof(DSA_R_MODULUS_TOO_LARGE))) {
        private enum enumMixinStr_DSA_R_MODULUS_TOO_LARGE = `enum DSA_R_MODULUS_TOO_LARGE = 103;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_R_MODULUS_TOO_LARGE); }))) {
            mixin(enumMixinStr_DSA_R_MODULUS_TOO_LARGE);
        }
    }




    static if(!is(typeof(DSA_R_MISSING_PRIVATE_KEY))) {
        private enum enumMixinStr_DSA_R_MISSING_PRIVATE_KEY = `enum DSA_R_MISSING_PRIVATE_KEY = 111;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_R_MISSING_PRIVATE_KEY); }))) {
            mixin(enumMixinStr_DSA_R_MISSING_PRIVATE_KEY);
        }
    }




    static if(!is(typeof(DSA_R_MISSING_PARAMETERS))) {
        private enum enumMixinStr_DSA_R_MISSING_PARAMETERS = `enum DSA_R_MISSING_PARAMETERS = 101;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_R_MISSING_PARAMETERS); }))) {
            mixin(enumMixinStr_DSA_R_MISSING_PARAMETERS);
        }
    }




    static if(!is(typeof(DSA_R_INVALID_PARAMETERS))) {
        private enum enumMixinStr_DSA_R_INVALID_PARAMETERS = `enum DSA_R_INVALID_PARAMETERS = 112;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_R_INVALID_PARAMETERS); }))) {
            mixin(enumMixinStr_DSA_R_INVALID_PARAMETERS);
        }
    }




    static if(!is(typeof(DSA_R_INVALID_DIGEST_TYPE))) {
        private enum enumMixinStr_DSA_R_INVALID_DIGEST_TYPE = `enum DSA_R_INVALID_DIGEST_TYPE = 106;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_R_INVALID_DIGEST_TYPE); }))) {
            mixin(enumMixinStr_DSA_R_INVALID_DIGEST_TYPE);
        }
    }




    static if(!is(typeof(DSA_R_DECODE_ERROR))) {
        private enum enumMixinStr_DSA_R_DECODE_ERROR = `enum DSA_R_DECODE_ERROR = 104;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_R_DECODE_ERROR); }))) {
            mixin(enumMixinStr_DSA_R_DECODE_ERROR);
        }
    }




    static if(!is(typeof(DSA_R_BN_ERROR))) {
        private enum enumMixinStr_DSA_R_BN_ERROR = `enum DSA_R_BN_ERROR = 109;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_R_BN_ERROR); }))) {
            mixin(enumMixinStr_DSA_R_BN_ERROR);
        }
    }




    static if(!is(typeof(DSA_R_BN_DECODE_ERROR))) {
        private enum enumMixinStr_DSA_R_BN_DECODE_ERROR = `enum DSA_R_BN_DECODE_ERROR = 108;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_R_BN_DECODE_ERROR); }))) {
            mixin(enumMixinStr_DSA_R_BN_DECODE_ERROR);
        }
    }




    static if(!is(typeof(DSA_R_BAD_Q_VALUE))) {
        private enum enumMixinStr_DSA_R_BAD_Q_VALUE = `enum DSA_R_BAD_Q_VALUE = 102;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_R_BAD_Q_VALUE); }))) {
            mixin(enumMixinStr_DSA_R_BAD_Q_VALUE);
        }
    }




    static if(!is(typeof(DSA_F_PKEY_DSA_KEYGEN))) {
        private enum enumMixinStr_DSA_F_PKEY_DSA_KEYGEN = `enum DSA_F_PKEY_DSA_KEYGEN = 121;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_F_PKEY_DSA_KEYGEN); }))) {
            mixin(enumMixinStr_DSA_F_PKEY_DSA_KEYGEN);
        }
    }




    static if(!is(typeof(DSA_F_PKEY_DSA_CTRL_STR))) {
        private enum enumMixinStr_DSA_F_PKEY_DSA_CTRL_STR = `enum DSA_F_PKEY_DSA_CTRL_STR = 104;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_F_PKEY_DSA_CTRL_STR); }))) {
            mixin(enumMixinStr_DSA_F_PKEY_DSA_CTRL_STR);
        }
    }




    static if(!is(typeof(DSA_F_PKEY_DSA_CTRL))) {
        private enum enumMixinStr_DSA_F_PKEY_DSA_CTRL = `enum DSA_F_PKEY_DSA_CTRL = 120;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_F_PKEY_DSA_CTRL); }))) {
            mixin(enumMixinStr_DSA_F_PKEY_DSA_CTRL);
        }
    }




    static if(!is(typeof(DSA_F_OLD_DSA_PRIV_DECODE))) {
        private enum enumMixinStr_DSA_F_OLD_DSA_PRIV_DECODE = `enum DSA_F_OLD_DSA_PRIV_DECODE = 122;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_F_OLD_DSA_PRIV_DECODE); }))) {
            mixin(enumMixinStr_DSA_F_OLD_DSA_PRIV_DECODE);
        }
    }




    static if(!is(typeof(DSA_F_DSA_SIG_NEW))) {
        private enum enumMixinStr_DSA_F_DSA_SIG_NEW = `enum DSA_F_DSA_SIG_NEW = 102;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_F_DSA_SIG_NEW); }))) {
            mixin(enumMixinStr_DSA_F_DSA_SIG_NEW);
        }
    }




    static if(!is(typeof(DSA_F_DSA_SIGN_SETUP))) {
        private enum enumMixinStr_DSA_F_DSA_SIGN_SETUP = `enum DSA_F_DSA_SIGN_SETUP = 107;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_F_DSA_SIGN_SETUP); }))) {
            mixin(enumMixinStr_DSA_F_DSA_SIGN_SETUP);
        }
    }




    static if(!is(typeof(DSA_F_DSA_SIGN))) {
        private enum enumMixinStr_DSA_F_DSA_SIGN = `enum DSA_F_DSA_SIGN = 106;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_F_DSA_SIGN); }))) {
            mixin(enumMixinStr_DSA_F_DSA_SIGN);
        }
    }




    static if(!is(typeof(DSA_F_DSA_PUB_ENCODE))) {
        private enum enumMixinStr_DSA_F_DSA_PUB_ENCODE = `enum DSA_F_DSA_PUB_ENCODE = 118;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_F_DSA_PUB_ENCODE); }))) {
            mixin(enumMixinStr_DSA_F_DSA_PUB_ENCODE);
        }
    }




    static if(!is(typeof(DSA_F_DSA_PUB_DECODE))) {
        private enum enumMixinStr_DSA_F_DSA_PUB_DECODE = `enum DSA_F_DSA_PUB_DECODE = 117;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_F_DSA_PUB_DECODE); }))) {
            mixin(enumMixinStr_DSA_F_DSA_PUB_DECODE);
        }
    }




    static if(!is(typeof(CRLDP_ALL_REASONS))) {
        private enum enumMixinStr_CRLDP_ALL_REASONS = `enum CRLDP_ALL_REASONS = 0x807f;`;
        static if(is(typeof({ mixin(enumMixinStr_CRLDP_ALL_REASONS); }))) {
            mixin(enumMixinStr_CRLDP_ALL_REASONS);
        }
    }




    static if(!is(typeof(CRL_REASON_NONE))) {
        private enum enumMixinStr_CRL_REASON_NONE = `enum CRL_REASON_NONE = - 1;`;
        static if(is(typeof({ mixin(enumMixinStr_CRL_REASON_NONE); }))) {
            mixin(enumMixinStr_CRL_REASON_NONE);
        }
    }




    static if(!is(typeof(CRL_REASON_UNSPECIFIED))) {
        private enum enumMixinStr_CRL_REASON_UNSPECIFIED = `enum CRL_REASON_UNSPECIFIED = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_CRL_REASON_UNSPECIFIED); }))) {
            mixin(enumMixinStr_CRL_REASON_UNSPECIFIED);
        }
    }




    static if(!is(typeof(CRL_REASON_KEY_COMPROMISE))) {
        private enum enumMixinStr_CRL_REASON_KEY_COMPROMISE = `enum CRL_REASON_KEY_COMPROMISE = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_CRL_REASON_KEY_COMPROMISE); }))) {
            mixin(enumMixinStr_CRL_REASON_KEY_COMPROMISE);
        }
    }




    static if(!is(typeof(CRL_REASON_CA_COMPROMISE))) {
        private enum enumMixinStr_CRL_REASON_CA_COMPROMISE = `enum CRL_REASON_CA_COMPROMISE = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_CRL_REASON_CA_COMPROMISE); }))) {
            mixin(enumMixinStr_CRL_REASON_CA_COMPROMISE);
        }
    }




    static if(!is(typeof(CRL_REASON_AFFILIATION_CHANGED))) {
        private enum enumMixinStr_CRL_REASON_AFFILIATION_CHANGED = `enum CRL_REASON_AFFILIATION_CHANGED = 3;`;
        static if(is(typeof({ mixin(enumMixinStr_CRL_REASON_AFFILIATION_CHANGED); }))) {
            mixin(enumMixinStr_CRL_REASON_AFFILIATION_CHANGED);
        }
    }




    static if(!is(typeof(CRL_REASON_SUPERSEDED))) {
        private enum enumMixinStr_CRL_REASON_SUPERSEDED = `enum CRL_REASON_SUPERSEDED = 4;`;
        static if(is(typeof({ mixin(enumMixinStr_CRL_REASON_SUPERSEDED); }))) {
            mixin(enumMixinStr_CRL_REASON_SUPERSEDED);
        }
    }




    static if(!is(typeof(CRL_REASON_CESSATION_OF_OPERATION))) {
        private enum enumMixinStr_CRL_REASON_CESSATION_OF_OPERATION = `enum CRL_REASON_CESSATION_OF_OPERATION = 5;`;
        static if(is(typeof({ mixin(enumMixinStr_CRL_REASON_CESSATION_OF_OPERATION); }))) {
            mixin(enumMixinStr_CRL_REASON_CESSATION_OF_OPERATION);
        }
    }




    static if(!is(typeof(CRL_REASON_CERTIFICATE_HOLD))) {
        private enum enumMixinStr_CRL_REASON_CERTIFICATE_HOLD = `enum CRL_REASON_CERTIFICATE_HOLD = 6;`;
        static if(is(typeof({ mixin(enumMixinStr_CRL_REASON_CERTIFICATE_HOLD); }))) {
            mixin(enumMixinStr_CRL_REASON_CERTIFICATE_HOLD);
        }
    }




    static if(!is(typeof(CRL_REASON_REMOVE_FROM_CRL))) {
        private enum enumMixinStr_CRL_REASON_REMOVE_FROM_CRL = `enum CRL_REASON_REMOVE_FROM_CRL = 8;`;
        static if(is(typeof({ mixin(enumMixinStr_CRL_REASON_REMOVE_FROM_CRL); }))) {
            mixin(enumMixinStr_CRL_REASON_REMOVE_FROM_CRL);
        }
    }




    static if(!is(typeof(CRL_REASON_PRIVILEGE_WITHDRAWN))) {
        private enum enumMixinStr_CRL_REASON_PRIVILEGE_WITHDRAWN = `enum CRL_REASON_PRIVILEGE_WITHDRAWN = 9;`;
        static if(is(typeof({ mixin(enumMixinStr_CRL_REASON_PRIVILEGE_WITHDRAWN); }))) {
            mixin(enumMixinStr_CRL_REASON_PRIVILEGE_WITHDRAWN);
        }
    }




    static if(!is(typeof(CRL_REASON_AA_COMPROMISE))) {
        private enum enumMixinStr_CRL_REASON_AA_COMPROMISE = `enum CRL_REASON_AA_COMPROMISE = 10;`;
        static if(is(typeof({ mixin(enumMixinStr_CRL_REASON_AA_COMPROMISE); }))) {
            mixin(enumMixinStr_CRL_REASON_AA_COMPROMISE);
        }
    }




    static if(!is(typeof(DSA_F_DSA_PRIV_ENCODE))) {
        private enum enumMixinStr_DSA_F_DSA_PRIV_ENCODE = `enum DSA_F_DSA_PRIV_ENCODE = 116;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_F_DSA_PRIV_ENCODE); }))) {
            mixin(enumMixinStr_DSA_F_DSA_PRIV_ENCODE);
        }
    }




    static if(!is(typeof(DSA_F_DSA_PRIV_DECODE))) {
        private enum enumMixinStr_DSA_F_DSA_PRIV_DECODE = `enum DSA_F_DSA_PRIV_DECODE = 115;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_F_DSA_PRIV_DECODE); }))) {
            mixin(enumMixinStr_DSA_F_DSA_PRIV_DECODE);
        }
    }




    static if(!is(typeof(DSA_F_DSA_PRINT_FP))) {
        private enum enumMixinStr_DSA_F_DSA_PRINT_FP = `enum DSA_F_DSA_PRINT_FP = 105;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_F_DSA_PRINT_FP); }))) {
            mixin(enumMixinStr_DSA_F_DSA_PRINT_FP);
        }
    }




    static if(!is(typeof(DSA_F_DSA_PARAM_DECODE))) {
        private enum enumMixinStr_DSA_F_DSA_PARAM_DECODE = `enum DSA_F_DSA_PARAM_DECODE = 119;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_F_DSA_PARAM_DECODE); }))) {
            mixin(enumMixinStr_DSA_F_DSA_PARAM_DECODE);
        }
    }




    static if(!is(typeof(DSA_F_DSA_NEW_METHOD))) {
        private enum enumMixinStr_DSA_F_DSA_NEW_METHOD = `enum DSA_F_DSA_NEW_METHOD = 103;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_F_DSA_NEW_METHOD); }))) {
            mixin(enumMixinStr_DSA_F_DSA_NEW_METHOD);
        }
    }




    static if(!is(typeof(DSA_F_DSA_METH_SET1_NAME))) {
        private enum enumMixinStr_DSA_F_DSA_METH_SET1_NAME = `enum DSA_F_DSA_METH_SET1_NAME = 129;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_F_DSA_METH_SET1_NAME); }))) {
            mixin(enumMixinStr_DSA_F_DSA_METH_SET1_NAME);
        }
    }




    static if(!is(typeof(DSA_F_DSA_METH_NEW))) {
        private enum enumMixinStr_DSA_F_DSA_METH_NEW = `enum DSA_F_DSA_METH_NEW = 128;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_F_DSA_METH_NEW); }))) {
            mixin(enumMixinStr_DSA_F_DSA_METH_NEW);
        }
    }




    static if(!is(typeof(DSA_F_DSA_METH_DUP))) {
        private enum enumMixinStr_DSA_F_DSA_METH_DUP = `enum DSA_F_DSA_METH_DUP = 127;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_F_DSA_METH_DUP); }))) {
            mixin(enumMixinStr_DSA_F_DSA_METH_DUP);
        }
    }




    static if(!is(typeof(DSA_F_DSA_DO_VERIFY))) {
        private enum enumMixinStr_DSA_F_DSA_DO_VERIFY = `enum DSA_F_DSA_DO_VERIFY = 113;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_F_DSA_DO_VERIFY); }))) {
            mixin(enumMixinStr_DSA_F_DSA_DO_VERIFY);
        }
    }




    static if(!is(typeof(DSA_F_DSA_DO_SIGN))) {
        private enum enumMixinStr_DSA_F_DSA_DO_SIGN = `enum DSA_F_DSA_DO_SIGN = 112;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_F_DSA_DO_SIGN); }))) {
            mixin(enumMixinStr_DSA_F_DSA_DO_SIGN);
        }
    }




    static if(!is(typeof(DSA_F_DSA_BUILTIN_PARAMGEN2))) {
        private enum enumMixinStr_DSA_F_DSA_BUILTIN_PARAMGEN2 = `enum DSA_F_DSA_BUILTIN_PARAMGEN2 = 126;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_F_DSA_BUILTIN_PARAMGEN2); }))) {
            mixin(enumMixinStr_DSA_F_DSA_BUILTIN_PARAMGEN2);
        }
    }




    static if(!is(typeof(DSA_F_DSA_BUILTIN_PARAMGEN))) {
        private enum enumMixinStr_DSA_F_DSA_BUILTIN_PARAMGEN = `enum DSA_F_DSA_BUILTIN_PARAMGEN = 125;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_F_DSA_BUILTIN_PARAMGEN); }))) {
            mixin(enumMixinStr_DSA_F_DSA_BUILTIN_PARAMGEN);
        }
    }




    static if(!is(typeof(DSA_F_DSAPARAMS_PRINT_FP))) {
        private enum enumMixinStr_DSA_F_DSAPARAMS_PRINT_FP = `enum DSA_F_DSAPARAMS_PRINT_FP = 101;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_F_DSAPARAMS_PRINT_FP); }))) {
            mixin(enumMixinStr_DSA_F_DSAPARAMS_PRINT_FP);
        }
    }




    static if(!is(typeof(DSA_F_DSAPARAMS_PRINT))) {
        private enum enumMixinStr_DSA_F_DSAPARAMS_PRINT = `enum DSA_F_DSAPARAMS_PRINT = 100;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_F_DSAPARAMS_PRINT); }))) {
            mixin(enumMixinStr_DSA_F_DSAPARAMS_PRINT);
        }
    }






    static if(!is(typeof(EVP_PKEY_CTRL_DSA_PARAMGEN_MD))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_DSA_PARAMGEN_MD = `enum EVP_PKEY_CTRL_DSA_PARAMGEN_MD = ( 0x1000 + 3 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_DSA_PARAMGEN_MD); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_DSA_PARAMGEN_MD);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_DSA_PARAMGEN_Q_BITS))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_DSA_PARAMGEN_Q_BITS = `enum EVP_PKEY_CTRL_DSA_PARAMGEN_Q_BITS = ( 0x1000 + 2 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_DSA_PARAMGEN_Q_BITS); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_DSA_PARAMGEN_Q_BITS);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_DSA_PARAMGEN_BITS))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_DSA_PARAMGEN_BITS = `enum EVP_PKEY_CTRL_DSA_PARAMGEN_BITS = ( 0x1000 + 1 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_DSA_PARAMGEN_BITS); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_DSA_PARAMGEN_BITS);
        }
    }
    static if(!is(typeof(DSS_prime_checks))) {
        private enum enumMixinStr_DSS_prime_checks = `enum DSS_prime_checks = 64;`;
        static if(is(typeof({ mixin(enumMixinStr_DSS_prime_checks); }))) {
            mixin(enumMixinStr_DSS_prime_checks);
        }
    }
    static if(!is(typeof(DSA_FLAG_FIPS_CHECKED))) {
        private enum enumMixinStr_DSA_FLAG_FIPS_CHECKED = `enum DSA_FLAG_FIPS_CHECKED = 0x0800;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_FLAG_FIPS_CHECKED); }))) {
            mixin(enumMixinStr_DSA_FLAG_FIPS_CHECKED);
        }
    }




    static if(!is(typeof(DSA_FLAG_NON_FIPS_ALLOW))) {
        private enum enumMixinStr_DSA_FLAG_NON_FIPS_ALLOW = `enum DSA_FLAG_NON_FIPS_ALLOW = 0x0400;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_FLAG_NON_FIPS_ALLOW); }))) {
            mixin(enumMixinStr_DSA_FLAG_NON_FIPS_ALLOW);
        }
    }




    static if(!is(typeof(DSA_FLAG_FIPS_METHOD))) {
        private enum enumMixinStr_DSA_FLAG_FIPS_METHOD = `enum DSA_FLAG_FIPS_METHOD = 0x0400;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_FLAG_FIPS_METHOD); }))) {
            mixin(enumMixinStr_DSA_FLAG_FIPS_METHOD);
        }
    }




    static if(!is(typeof(DSA_FLAG_NO_EXP_CONSTTIME))) {
        private enum enumMixinStr_DSA_FLAG_NO_EXP_CONSTTIME = `enum DSA_FLAG_NO_EXP_CONSTTIME = 0x00;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_FLAG_NO_EXP_CONSTTIME); }))) {
            mixin(enumMixinStr_DSA_FLAG_NO_EXP_CONSTTIME);
        }
    }




    static if(!is(typeof(DSA_FLAG_CACHE_MONT_P))) {
        private enum enumMixinStr_DSA_FLAG_CACHE_MONT_P = `enum DSA_FLAG_CACHE_MONT_P = 0x01;`;
        static if(is(typeof({ mixin(enumMixinStr_DSA_FLAG_CACHE_MONT_P); }))) {
            mixin(enumMixinStr_DSA_FLAG_CACHE_MONT_P);
        }
    }




    static if(!is(typeof(OPENSSL_DSA_FIPS_MIN_MODULUS_BITS))) {
        private enum enumMixinStr_OPENSSL_DSA_FIPS_MIN_MODULUS_BITS = `enum OPENSSL_DSA_FIPS_MIN_MODULUS_BITS = 1024;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_DSA_FIPS_MIN_MODULUS_BITS); }))) {
            mixin(enumMixinStr_OPENSSL_DSA_FIPS_MIN_MODULUS_BITS);
        }
    }




    static if(!is(typeof(OPENSSL_DSA_MAX_MODULUS_BITS))) {
        private enum enumMixinStr_OPENSSL_DSA_MAX_MODULUS_BITS = `enum OPENSSL_DSA_MAX_MODULUS_BITS = 10000;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_DSA_MAX_MODULUS_BITS); }))) {
            mixin(enumMixinStr_OPENSSL_DSA_MAX_MODULUS_BITS);
        }
    }






    static if(!is(typeof(DH_R_UNABLE_TO_CHECK_GENERATOR))) {
        private enum enumMixinStr_DH_R_UNABLE_TO_CHECK_GENERATOR = `enum DH_R_UNABLE_TO_CHECK_GENERATOR = 121;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_R_UNABLE_TO_CHECK_GENERATOR); }))) {
            mixin(enumMixinStr_DH_R_UNABLE_TO_CHECK_GENERATOR);
        }
    }




    static if(!is(typeof(DH_R_SHARED_INFO_ERROR))) {
        private enum enumMixinStr_DH_R_SHARED_INFO_ERROR = `enum DH_R_SHARED_INFO_ERROR = 113;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_R_SHARED_INFO_ERROR); }))) {
            mixin(enumMixinStr_DH_R_SHARED_INFO_ERROR);
        }
    }




    static if(!is(typeof(DH_R_PEER_KEY_ERROR))) {
        private enum enumMixinStr_DH_R_PEER_KEY_ERROR = `enum DH_R_PEER_KEY_ERROR = 111;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_R_PEER_KEY_ERROR); }))) {
            mixin(enumMixinStr_DH_R_PEER_KEY_ERROR);
        }
    }




    static if(!is(typeof(DH_R_PARAMETER_ENCODING_ERROR))) {
        private enum enumMixinStr_DH_R_PARAMETER_ENCODING_ERROR = `enum DH_R_PARAMETER_ENCODING_ERROR = 105;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_R_PARAMETER_ENCODING_ERROR); }))) {
            mixin(enumMixinStr_DH_R_PARAMETER_ENCODING_ERROR);
        }
    }




    static if(!is(typeof(DH_R_NO_PRIVATE_VALUE))) {
        private enum enumMixinStr_DH_R_NO_PRIVATE_VALUE = `enum DH_R_NO_PRIVATE_VALUE = 100;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_R_NO_PRIVATE_VALUE); }))) {
            mixin(enumMixinStr_DH_R_NO_PRIVATE_VALUE);
        }
    }




    static if(!is(typeof(DH_R_NO_PARAMETERS_SET))) {
        private enum enumMixinStr_DH_R_NO_PARAMETERS_SET = `enum DH_R_NO_PARAMETERS_SET = 107;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_R_NO_PARAMETERS_SET); }))) {
            mixin(enumMixinStr_DH_R_NO_PARAMETERS_SET);
        }
    }




    static if(!is(typeof(DH_R_NOT_SUITABLE_GENERATOR))) {
        private enum enumMixinStr_DH_R_NOT_SUITABLE_GENERATOR = `enum DH_R_NOT_SUITABLE_GENERATOR = 120;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_R_NOT_SUITABLE_GENERATOR); }))) {
            mixin(enumMixinStr_DH_R_NOT_SUITABLE_GENERATOR);
        }
    }




    static if(!is(typeof(DH_R_MODULUS_TOO_LARGE))) {
        private enum enumMixinStr_DH_R_MODULUS_TOO_LARGE = `enum DH_R_MODULUS_TOO_LARGE = 103;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_R_MODULUS_TOO_LARGE); }))) {
            mixin(enumMixinStr_DH_R_MODULUS_TOO_LARGE);
        }
    }




    static if(!is(typeof(DH_R_MISSING_PUBKEY))) {
        private enum enumMixinStr_DH_R_MISSING_PUBKEY = `enum DH_R_MISSING_PUBKEY = 125;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_R_MISSING_PUBKEY); }))) {
            mixin(enumMixinStr_DH_R_MISSING_PUBKEY);
        }
    }




    static if(!is(typeof(DH_R_KEYS_NOT_SET))) {
        private enum enumMixinStr_DH_R_KEYS_NOT_SET = `enum DH_R_KEYS_NOT_SET = 108;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_R_KEYS_NOT_SET); }))) {
            mixin(enumMixinStr_DH_R_KEYS_NOT_SET);
        }
    }




    static if(!is(typeof(DH_R_KDF_PARAMETER_ERROR))) {
        private enum enumMixinStr_DH_R_KDF_PARAMETER_ERROR = `enum DH_R_KDF_PARAMETER_ERROR = 112;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_R_KDF_PARAMETER_ERROR); }))) {
            mixin(enumMixinStr_DH_R_KDF_PARAMETER_ERROR);
        }
    }




    static if(!is(typeof(DH_R_INVALID_PUBKEY))) {
        private enum enumMixinStr_DH_R_INVALID_PUBKEY = `enum DH_R_INVALID_PUBKEY = 102;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_R_INVALID_PUBKEY); }))) {
            mixin(enumMixinStr_DH_R_INVALID_PUBKEY);
        }
    }




    static if(!is(typeof(DH_R_INVALID_PARAMETER_NID))) {
        private enum enumMixinStr_DH_R_INVALID_PARAMETER_NID = `enum DH_R_INVALID_PARAMETER_NID = 114;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_R_INVALID_PARAMETER_NID); }))) {
            mixin(enumMixinStr_DH_R_INVALID_PARAMETER_NID);
        }
    }




    static if(!is(typeof(DH_R_INVALID_PARAMETER_NAME))) {
        private enum enumMixinStr_DH_R_INVALID_PARAMETER_NAME = `enum DH_R_INVALID_PARAMETER_NAME = 110;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_R_INVALID_PARAMETER_NAME); }))) {
            mixin(enumMixinStr_DH_R_INVALID_PARAMETER_NAME);
        }
    }




    static if(!is(typeof(DH_R_DECODE_ERROR))) {
        private enum enumMixinStr_DH_R_DECODE_ERROR = `enum DH_R_DECODE_ERROR = 104;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_R_DECODE_ERROR); }))) {
            mixin(enumMixinStr_DH_R_DECODE_ERROR);
        }
    }




    static if(!is(typeof(DH_R_CHECK_Q_NOT_PRIME))) {
        private enum enumMixinStr_DH_R_CHECK_Q_NOT_PRIME = `enum DH_R_CHECK_Q_NOT_PRIME = 119;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_R_CHECK_Q_NOT_PRIME); }))) {
            mixin(enumMixinStr_DH_R_CHECK_Q_NOT_PRIME);
        }
    }




    static if(!is(typeof(DH_R_CHECK_P_NOT_SAFE_PRIME))) {
        private enum enumMixinStr_DH_R_CHECK_P_NOT_SAFE_PRIME = `enum DH_R_CHECK_P_NOT_SAFE_PRIME = 118;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_R_CHECK_P_NOT_SAFE_PRIME); }))) {
            mixin(enumMixinStr_DH_R_CHECK_P_NOT_SAFE_PRIME);
        }
    }




    static if(!is(typeof(DH_R_CHECK_P_NOT_PRIME))) {
        private enum enumMixinStr_DH_R_CHECK_P_NOT_PRIME = `enum DH_R_CHECK_P_NOT_PRIME = 117;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_R_CHECK_P_NOT_PRIME); }))) {
            mixin(enumMixinStr_DH_R_CHECK_P_NOT_PRIME);
        }
    }




    static if(!is(typeof(DH_R_CHECK_PUBKEY_TOO_SMALL))) {
        private enum enumMixinStr_DH_R_CHECK_PUBKEY_TOO_SMALL = `enum DH_R_CHECK_PUBKEY_TOO_SMALL = 124;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_R_CHECK_PUBKEY_TOO_SMALL); }))) {
            mixin(enumMixinStr_DH_R_CHECK_PUBKEY_TOO_SMALL);
        }
    }




    static if(!is(typeof(DH_R_CHECK_PUBKEY_TOO_LARGE))) {
        private enum enumMixinStr_DH_R_CHECK_PUBKEY_TOO_LARGE = `enum DH_R_CHECK_PUBKEY_TOO_LARGE = 123;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_R_CHECK_PUBKEY_TOO_LARGE); }))) {
            mixin(enumMixinStr_DH_R_CHECK_PUBKEY_TOO_LARGE);
        }
    }




    static if(!is(typeof(DH_R_CHECK_PUBKEY_INVALID))) {
        private enum enumMixinStr_DH_R_CHECK_PUBKEY_INVALID = `enum DH_R_CHECK_PUBKEY_INVALID = 122;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_R_CHECK_PUBKEY_INVALID); }))) {
            mixin(enumMixinStr_DH_R_CHECK_PUBKEY_INVALID);
        }
    }




    static if(!is(typeof(DH_R_CHECK_INVALID_Q_VALUE))) {
        private enum enumMixinStr_DH_R_CHECK_INVALID_Q_VALUE = `enum DH_R_CHECK_INVALID_Q_VALUE = 116;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_R_CHECK_INVALID_Q_VALUE); }))) {
            mixin(enumMixinStr_DH_R_CHECK_INVALID_Q_VALUE);
        }
    }




    static if(!is(typeof(DH_R_CHECK_INVALID_J_VALUE))) {
        private enum enumMixinStr_DH_R_CHECK_INVALID_J_VALUE = `enum DH_R_CHECK_INVALID_J_VALUE = 115;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_R_CHECK_INVALID_J_VALUE); }))) {
            mixin(enumMixinStr_DH_R_CHECK_INVALID_J_VALUE);
        }
    }




    static if(!is(typeof(DH_R_BN_ERROR))) {
        private enum enumMixinStr_DH_R_BN_ERROR = `enum DH_R_BN_ERROR = 106;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_R_BN_ERROR); }))) {
            mixin(enumMixinStr_DH_R_BN_ERROR);
        }
    }




    static if(!is(typeof(DH_R_BN_DECODE_ERROR))) {
        private enum enumMixinStr_DH_R_BN_DECODE_ERROR = `enum DH_R_BN_DECODE_ERROR = 109;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_R_BN_DECODE_ERROR); }))) {
            mixin(enumMixinStr_DH_R_BN_DECODE_ERROR);
        }
    }




    static if(!is(typeof(DH_R_BAD_GENERATOR))) {
        private enum enumMixinStr_DH_R_BAD_GENERATOR = `enum DH_R_BAD_GENERATOR = 101;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_R_BAD_GENERATOR); }))) {
            mixin(enumMixinStr_DH_R_BAD_GENERATOR);
        }
    }




    static if(!is(typeof(DH_F_PKEY_DH_KEYGEN))) {
        private enum enumMixinStr_DH_F_PKEY_DH_KEYGEN = `enum DH_F_PKEY_DH_KEYGEN = 113;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_F_PKEY_DH_KEYGEN); }))) {
            mixin(enumMixinStr_DH_F_PKEY_DH_KEYGEN);
        }
    }




    static if(!is(typeof(DH_F_PKEY_DH_INIT))) {
        private enum enumMixinStr_DH_F_PKEY_DH_INIT = `enum DH_F_PKEY_DH_INIT = 125;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_F_PKEY_DH_INIT); }))) {
            mixin(enumMixinStr_DH_F_PKEY_DH_INIT);
        }
    }




    static if(!is(typeof(DH_F_PKEY_DH_DERIVE))) {
        private enum enumMixinStr_DH_F_PKEY_DH_DERIVE = `enum DH_F_PKEY_DH_DERIVE = 112;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_F_PKEY_DH_DERIVE); }))) {
            mixin(enumMixinStr_DH_F_PKEY_DH_DERIVE);
        }
    }




    static if(!is(typeof(DH_F_PKEY_DH_CTRL_STR))) {
        private enum enumMixinStr_DH_F_PKEY_DH_CTRL_STR = `enum DH_F_PKEY_DH_CTRL_STR = 120;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_F_PKEY_DH_CTRL_STR); }))) {
            mixin(enumMixinStr_DH_F_PKEY_DH_CTRL_STR);
        }
    }




    static if(!is(typeof(DH_F_GENERATE_KEY))) {
        private enum enumMixinStr_DH_F_GENERATE_KEY = `enum DH_F_GENERATE_KEY = 103;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_F_GENERATE_KEY); }))) {
            mixin(enumMixinStr_DH_F_GENERATE_KEY);
        }
    }




    static if(!is(typeof(DH_F_DO_DH_PRINT))) {
        private enum enumMixinStr_DH_F_DO_DH_PRINT = `enum DH_F_DO_DH_PRINT = 100;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_F_DO_DH_PRINT); }))) {
            mixin(enumMixinStr_DH_F_DO_DH_PRINT);
        }
    }




    static if(!is(typeof(DH_F_DH_PUB_ENCODE))) {
        private enum enumMixinStr_DH_F_DH_PUB_ENCODE = `enum DH_F_DH_PUB_ENCODE = 109;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_F_DH_PUB_ENCODE); }))) {
            mixin(enumMixinStr_DH_F_DH_PUB_ENCODE);
        }
    }




    static if(!is(typeof(DH_F_DH_PUB_DECODE))) {
        private enum enumMixinStr_DH_F_DH_PUB_DECODE = `enum DH_F_DH_PUB_DECODE = 108;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_F_DH_PUB_DECODE); }))) {
            mixin(enumMixinStr_DH_F_DH_PUB_DECODE);
        }
    }




    static if(!is(typeof(DH_F_DH_PRIV_ENCODE))) {
        private enum enumMixinStr_DH_F_DH_PRIV_ENCODE = `enum DH_F_DH_PRIV_ENCODE = 111;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_F_DH_PRIV_ENCODE); }))) {
            mixin(enumMixinStr_DH_F_DH_PRIV_ENCODE);
        }
    }




    static if(!is(typeof(DH_F_DH_PRIV_DECODE))) {
        private enum enumMixinStr_DH_F_DH_PRIV_DECODE = `enum DH_F_DH_PRIV_DECODE = 110;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_F_DH_PRIV_DECODE); }))) {
            mixin(enumMixinStr_DH_F_DH_PRIV_DECODE);
        }
    }




    static if(!is(typeof(DH_F_DH_PKEY_PUBLIC_CHECK))) {
        private enum enumMixinStr_DH_F_DH_PKEY_PUBLIC_CHECK = `enum DH_F_DH_PKEY_PUBLIC_CHECK = 124;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_F_DH_PKEY_PUBLIC_CHECK); }))) {
            mixin(enumMixinStr_DH_F_DH_PKEY_PUBLIC_CHECK);
        }
    }




    static if(!is(typeof(DH_F_DH_PARAM_DECODE))) {
        private enum enumMixinStr_DH_F_DH_PARAM_DECODE = `enum DH_F_DH_PARAM_DECODE = 107;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_F_DH_PARAM_DECODE); }))) {
            mixin(enumMixinStr_DH_F_DH_PARAM_DECODE);
        }
    }




    static if(!is(typeof(DH_F_DH_NEW_METHOD))) {
        private enum enumMixinStr_DH_F_DH_NEW_METHOD = `enum DH_F_DH_NEW_METHOD = 105;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_F_DH_NEW_METHOD); }))) {
            mixin(enumMixinStr_DH_F_DH_NEW_METHOD);
        }
    }




    static if(!is(typeof(DH_F_DH_NEW_BY_NID))) {
        private enum enumMixinStr_DH_F_DH_NEW_BY_NID = `enum DH_F_DH_NEW_BY_NID = 104;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_F_DH_NEW_BY_NID); }))) {
            mixin(enumMixinStr_DH_F_DH_NEW_BY_NID);
        }
    }




    static if(!is(typeof(DH_F_DH_METH_SET1_NAME))) {
        private enum enumMixinStr_DH_F_DH_METH_SET1_NAME = `enum DH_F_DH_METH_SET1_NAME = 119;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_F_DH_METH_SET1_NAME); }))) {
            mixin(enumMixinStr_DH_F_DH_METH_SET1_NAME);
        }
    }




    static if(!is(typeof(DH_F_DH_METH_NEW))) {
        private enum enumMixinStr_DH_F_DH_METH_NEW = `enum DH_F_DH_METH_NEW = 118;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_F_DH_METH_NEW); }))) {
            mixin(enumMixinStr_DH_F_DH_METH_NEW);
        }
    }




    static if(!is(typeof(DH_F_DH_METH_DUP))) {
        private enum enumMixinStr_DH_F_DH_METH_DUP = `enum DH_F_DH_METH_DUP = 117;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_F_DH_METH_DUP); }))) {
            mixin(enumMixinStr_DH_F_DH_METH_DUP);
        }
    }




    static if(!is(typeof(DH_F_DH_CMS_SET_SHARED_INFO))) {
        private enum enumMixinStr_DH_F_DH_CMS_SET_SHARED_INFO = `enum DH_F_DH_CMS_SET_SHARED_INFO = 116;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_F_DH_CMS_SET_SHARED_INFO); }))) {
            mixin(enumMixinStr_DH_F_DH_CMS_SET_SHARED_INFO);
        }
    }




    static if(!is(typeof(DH_F_DH_CMS_SET_PEERKEY))) {
        private enum enumMixinStr_DH_F_DH_CMS_SET_PEERKEY = `enum DH_F_DH_CMS_SET_PEERKEY = 115;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_F_DH_CMS_SET_PEERKEY); }))) {
            mixin(enumMixinStr_DH_F_DH_CMS_SET_PEERKEY);
        }
    }




    static if(!is(typeof(DH_F_DH_CMS_DECRYPT))) {
        private enum enumMixinStr_DH_F_DH_CMS_DECRYPT = `enum DH_F_DH_CMS_DECRYPT = 114;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_F_DH_CMS_DECRYPT); }))) {
            mixin(enumMixinStr_DH_F_DH_CMS_DECRYPT);
        }
    }




    static if(!is(typeof(DH_F_DH_CHECK_PUB_KEY_EX))) {
        private enum enumMixinStr_DH_F_DH_CHECK_PUB_KEY_EX = `enum DH_F_DH_CHECK_PUB_KEY_EX = 123;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_F_DH_CHECK_PUB_KEY_EX); }))) {
            mixin(enumMixinStr_DH_F_DH_CHECK_PUB_KEY_EX);
        }
    }




    static if(!is(typeof(DH_F_DH_CHECK_PARAMS_EX))) {
        private enum enumMixinStr_DH_F_DH_CHECK_PARAMS_EX = `enum DH_F_DH_CHECK_PARAMS_EX = 122;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_F_DH_CHECK_PARAMS_EX); }))) {
            mixin(enumMixinStr_DH_F_DH_CHECK_PARAMS_EX);
        }
    }




    static if(!is(typeof(DH_F_DH_CHECK_EX))) {
        private enum enumMixinStr_DH_F_DH_CHECK_EX = `enum DH_F_DH_CHECK_EX = 121;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_F_DH_CHECK_EX); }))) {
            mixin(enumMixinStr_DH_F_DH_CHECK_EX);
        }
    }




    static if(!is(typeof(DH_F_DH_BUILTIN_GENPARAMS))) {
        private enum enumMixinStr_DH_F_DH_BUILTIN_GENPARAMS = `enum DH_F_DH_BUILTIN_GENPARAMS = 106;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_F_DH_BUILTIN_GENPARAMS); }))) {
            mixin(enumMixinStr_DH_F_DH_BUILTIN_GENPARAMS);
        }
    }




    static if(!is(typeof(DH_F_DHPARAMS_PRINT_FP))) {
        private enum enumMixinStr_DH_F_DHPARAMS_PRINT_FP = `enum DH_F_DHPARAMS_PRINT_FP = 101;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_F_DHPARAMS_PRINT_FP); }))) {
            mixin(enumMixinStr_DH_F_DHPARAMS_PRINT_FP);
        }
    }




    static if(!is(typeof(DH_F_COMPUTE_KEY))) {
        private enum enumMixinStr_DH_F_COMPUTE_KEY = `enum DH_F_COMPUTE_KEY = 102;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_F_COMPUTE_KEY); }))) {
            mixin(enumMixinStr_DH_F_COMPUTE_KEY);
        }
    }






    static if(!is(typeof(EVP_PKEY_DH_KDF_X9_42))) {
        private enum enumMixinStr_EVP_PKEY_DH_KDF_X9_42 = `enum EVP_PKEY_DH_KDF_X9_42 = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_DH_KDF_X9_42); }))) {
            mixin(enumMixinStr_EVP_PKEY_DH_KDF_X9_42);
        }
    }




    static if(!is(typeof(EVP_PKEY_DH_KDF_NONE))) {
        private enum enumMixinStr_EVP_PKEY_DH_KDF_NONE = `enum EVP_PKEY_DH_KDF_NONE = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_DH_KDF_NONE); }))) {
            mixin(enumMixinStr_EVP_PKEY_DH_KDF_NONE);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_DH_PAD))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_DH_PAD = `enum EVP_PKEY_CTRL_DH_PAD = ( 0x1000 + 16 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_DH_PAD); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_DH_PAD);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_DH_NID))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_DH_NID = `enum EVP_PKEY_CTRL_DH_NID = ( 0x1000 + 15 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_DH_NID); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_DH_NID);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_GET_DH_KDF_OID))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_GET_DH_KDF_OID = `enum EVP_PKEY_CTRL_GET_DH_KDF_OID = ( 0x1000 + 14 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_GET_DH_KDF_OID); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_GET_DH_KDF_OID);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_DH_KDF_OID))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_DH_KDF_OID = `enum EVP_PKEY_CTRL_DH_KDF_OID = ( 0x1000 + 13 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_DH_KDF_OID); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_DH_KDF_OID);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_GET_DH_KDF_UKM))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_GET_DH_KDF_UKM = `enum EVP_PKEY_CTRL_GET_DH_KDF_UKM = ( 0x1000 + 12 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_GET_DH_KDF_UKM); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_GET_DH_KDF_UKM);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_DH_KDF_UKM))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_DH_KDF_UKM = `enum EVP_PKEY_CTRL_DH_KDF_UKM = ( 0x1000 + 11 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_DH_KDF_UKM); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_DH_KDF_UKM);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_GET_DH_KDF_OUTLEN))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_GET_DH_KDF_OUTLEN = `enum EVP_PKEY_CTRL_GET_DH_KDF_OUTLEN = ( 0x1000 + 10 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_GET_DH_KDF_OUTLEN); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_GET_DH_KDF_OUTLEN);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_DH_KDF_OUTLEN))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_DH_KDF_OUTLEN = `enum EVP_PKEY_CTRL_DH_KDF_OUTLEN = ( 0x1000 + 9 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_DH_KDF_OUTLEN); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_DH_KDF_OUTLEN);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_GET_DH_KDF_MD))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_GET_DH_KDF_MD = `enum EVP_PKEY_CTRL_GET_DH_KDF_MD = ( 0x1000 + 8 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_GET_DH_KDF_MD); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_GET_DH_KDF_MD);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_DH_KDF_MD))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_DH_KDF_MD = `enum EVP_PKEY_CTRL_DH_KDF_MD = ( 0x1000 + 7 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_DH_KDF_MD); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_DH_KDF_MD);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_DH_KDF_TYPE))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_DH_KDF_TYPE = `enum EVP_PKEY_CTRL_DH_KDF_TYPE = ( 0x1000 + 6 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_DH_KDF_TYPE); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_DH_KDF_TYPE);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_DH_PARAMGEN_TYPE))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_DH_PARAMGEN_TYPE = `enum EVP_PKEY_CTRL_DH_PARAMGEN_TYPE = ( 0x1000 + 5 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_DH_PARAMGEN_TYPE); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_DH_PARAMGEN_TYPE);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_DH_PARAMGEN_SUBPRIME_LEN))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_DH_PARAMGEN_SUBPRIME_LEN = `enum EVP_PKEY_CTRL_DH_PARAMGEN_SUBPRIME_LEN = ( 0x1000 + 4 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_DH_PARAMGEN_SUBPRIME_LEN); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_DH_PARAMGEN_SUBPRIME_LEN);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_DH_RFC5114))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_DH_RFC5114 = `enum EVP_PKEY_CTRL_DH_RFC5114 = ( 0x1000 + 3 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_DH_RFC5114); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_DH_RFC5114);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_DH_PARAMGEN_GENERATOR))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_DH_PARAMGEN_GENERATOR = `enum EVP_PKEY_CTRL_DH_PARAMGEN_GENERATOR = ( 0x1000 + 2 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_DH_PARAMGEN_GENERATOR); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_DH_PARAMGEN_GENERATOR);
        }
    }




    static if(!is(typeof(EVP_PKEY_CTRL_DH_PARAMGEN_PRIME_LEN))) {
        private enum enumMixinStr_EVP_PKEY_CTRL_DH_PARAMGEN_PRIME_LEN = `enum EVP_PKEY_CTRL_DH_PARAMGEN_PRIME_LEN = ( 0x1000 + 1 );`;
        static if(is(typeof({ mixin(enumMixinStr_EVP_PKEY_CTRL_DH_PARAMGEN_PRIME_LEN); }))) {
            mixin(enumMixinStr_EVP_PKEY_CTRL_DH_PARAMGEN_PRIME_LEN);
        }
    }
    static if(!is(typeof(DH_CHECK_P_NOT_STRONG_PRIME))) {
        private enum enumMixinStr_DH_CHECK_P_NOT_STRONG_PRIME = `enum DH_CHECK_P_NOT_STRONG_PRIME = DH_CHECK_P_NOT_SAFE_PRIME;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_CHECK_P_NOT_STRONG_PRIME); }))) {
            mixin(enumMixinStr_DH_CHECK_P_NOT_STRONG_PRIME);
        }
    }




    static if(!is(typeof(DH_CHECK_PUBKEY_INVALID))) {
        private enum enumMixinStr_DH_CHECK_PUBKEY_INVALID = `enum DH_CHECK_PUBKEY_INVALID = 0x04;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_CHECK_PUBKEY_INVALID); }))) {
            mixin(enumMixinStr_DH_CHECK_PUBKEY_INVALID);
        }
    }




    static if(!is(typeof(DH_CHECK_PUBKEY_TOO_LARGE))) {
        private enum enumMixinStr_DH_CHECK_PUBKEY_TOO_LARGE = `enum DH_CHECK_PUBKEY_TOO_LARGE = 0x02;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_CHECK_PUBKEY_TOO_LARGE); }))) {
            mixin(enumMixinStr_DH_CHECK_PUBKEY_TOO_LARGE);
        }
    }




    static if(!is(typeof(DH_CHECK_PUBKEY_TOO_SMALL))) {
        private enum enumMixinStr_DH_CHECK_PUBKEY_TOO_SMALL = `enum DH_CHECK_PUBKEY_TOO_SMALL = 0x01;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_CHECK_PUBKEY_TOO_SMALL); }))) {
            mixin(enumMixinStr_DH_CHECK_PUBKEY_TOO_SMALL);
        }
    }




    static if(!is(typeof(DH_CHECK_INVALID_J_VALUE))) {
        private enum enumMixinStr_DH_CHECK_INVALID_J_VALUE = `enum DH_CHECK_INVALID_J_VALUE = 0x40;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_CHECK_INVALID_J_VALUE); }))) {
            mixin(enumMixinStr_DH_CHECK_INVALID_J_VALUE);
        }
    }




    static if(!is(typeof(DH_CHECK_INVALID_Q_VALUE))) {
        private enum enumMixinStr_DH_CHECK_INVALID_Q_VALUE = `enum DH_CHECK_INVALID_Q_VALUE = 0x20;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_CHECK_INVALID_Q_VALUE); }))) {
            mixin(enumMixinStr_DH_CHECK_INVALID_Q_VALUE);
        }
    }




    static if(!is(typeof(DH_CHECK_Q_NOT_PRIME))) {
        private enum enumMixinStr_DH_CHECK_Q_NOT_PRIME = `enum DH_CHECK_Q_NOT_PRIME = 0x10;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_CHECK_Q_NOT_PRIME); }))) {
            mixin(enumMixinStr_DH_CHECK_Q_NOT_PRIME);
        }
    }




    static if(!is(typeof(DH_NOT_SUITABLE_GENERATOR))) {
        private enum enumMixinStr_DH_NOT_SUITABLE_GENERATOR = `enum DH_NOT_SUITABLE_GENERATOR = 0x08;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_NOT_SUITABLE_GENERATOR); }))) {
            mixin(enumMixinStr_DH_NOT_SUITABLE_GENERATOR);
        }
    }




    static if(!is(typeof(DH_UNABLE_TO_CHECK_GENERATOR))) {
        private enum enumMixinStr_DH_UNABLE_TO_CHECK_GENERATOR = `enum DH_UNABLE_TO_CHECK_GENERATOR = 0x04;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_UNABLE_TO_CHECK_GENERATOR); }))) {
            mixin(enumMixinStr_DH_UNABLE_TO_CHECK_GENERATOR);
        }
    }




    static if(!is(typeof(DH_CHECK_P_NOT_SAFE_PRIME))) {
        private enum enumMixinStr_DH_CHECK_P_NOT_SAFE_PRIME = `enum DH_CHECK_P_NOT_SAFE_PRIME = 0x02;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_CHECK_P_NOT_SAFE_PRIME); }))) {
            mixin(enumMixinStr_DH_CHECK_P_NOT_SAFE_PRIME);
        }
    }




    static if(!is(typeof(DH_CHECK_P_NOT_PRIME))) {
        private enum enumMixinStr_DH_CHECK_P_NOT_PRIME = `enum DH_CHECK_P_NOT_PRIME = 0x01;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_CHECK_P_NOT_PRIME); }))) {
            mixin(enumMixinStr_DH_CHECK_P_NOT_PRIME);
        }
    }




    static if(!is(typeof(DH_GENERATOR_5))) {
        private enum enumMixinStr_DH_GENERATOR_5 = `enum DH_GENERATOR_5 = 5;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_GENERATOR_5); }))) {
            mixin(enumMixinStr_DH_GENERATOR_5);
        }
    }




    static if(!is(typeof(DH_GENERATOR_2))) {
        private enum enumMixinStr_DH_GENERATOR_2 = `enum DH_GENERATOR_2 = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_GENERATOR_2); }))) {
            mixin(enumMixinStr_DH_GENERATOR_2);
        }
    }




    static if(!is(typeof(DH_FLAG_NON_FIPS_ALLOW))) {
        private enum enumMixinStr_DH_FLAG_NON_FIPS_ALLOW = `enum DH_FLAG_NON_FIPS_ALLOW = 0x0400;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_FLAG_NON_FIPS_ALLOW); }))) {
            mixin(enumMixinStr_DH_FLAG_NON_FIPS_ALLOW);
        }
    }




    static if(!is(typeof(DH_FLAG_FIPS_METHOD))) {
        private enum enumMixinStr_DH_FLAG_FIPS_METHOD = `enum DH_FLAG_FIPS_METHOD = 0x0400;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_FLAG_FIPS_METHOD); }))) {
            mixin(enumMixinStr_DH_FLAG_FIPS_METHOD);
        }
    }




    static if(!is(typeof(DH_FLAG_NO_EXP_CONSTTIME))) {
        private enum enumMixinStr_DH_FLAG_NO_EXP_CONSTTIME = `enum DH_FLAG_NO_EXP_CONSTTIME = 0x00;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_FLAG_NO_EXP_CONSTTIME); }))) {
            mixin(enumMixinStr_DH_FLAG_NO_EXP_CONSTTIME);
        }
    }




    static if(!is(typeof(DH_FLAG_CACHE_MONT_P))) {
        private enum enumMixinStr_DH_FLAG_CACHE_MONT_P = `enum DH_FLAG_CACHE_MONT_P = 0x01;`;
        static if(is(typeof({ mixin(enumMixinStr_DH_FLAG_CACHE_MONT_P); }))) {
            mixin(enumMixinStr_DH_FLAG_CACHE_MONT_P);
        }
    }




    static if(!is(typeof(OPENSSL_DH_FIPS_MIN_MODULUS_BITS))) {
        private enum enumMixinStr_OPENSSL_DH_FIPS_MIN_MODULUS_BITS = `enum OPENSSL_DH_FIPS_MIN_MODULUS_BITS = 1024;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_DH_FIPS_MIN_MODULUS_BITS); }))) {
            mixin(enumMixinStr_OPENSSL_DH_FIPS_MIN_MODULUS_BITS);
        }
    }




    static if(!is(typeof(OPENSSL_DH_MAX_MODULUS_BITS))) {
        private enum enumMixinStr_OPENSSL_DH_MAX_MODULUS_BITS = `enum OPENSSL_DH_MAX_MODULUS_BITS = 10000;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_DH_MAX_MODULUS_BITS); }))) {
            mixin(enumMixinStr_OPENSSL_DH_MAX_MODULUS_BITS);
        }
    }






    static if(!is(typeof(CRYPTO_R_ODD_NUMBER_OF_DIGITS))) {
        private enum enumMixinStr_CRYPTO_R_ODD_NUMBER_OF_DIGITS = `enum CRYPTO_R_ODD_NUMBER_OF_DIGITS = 103;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_R_ODD_NUMBER_OF_DIGITS); }))) {
            mixin(enumMixinStr_CRYPTO_R_ODD_NUMBER_OF_DIGITS);
        }
    }




    static if(!is(typeof(CRYPTO_R_ILLEGAL_HEX_DIGIT))) {
        private enum enumMixinStr_CRYPTO_R_ILLEGAL_HEX_DIGIT = `enum CRYPTO_R_ILLEGAL_HEX_DIGIT = 102;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_R_ILLEGAL_HEX_DIGIT); }))) {
            mixin(enumMixinStr_CRYPTO_R_ILLEGAL_HEX_DIGIT);
        }
    }




    static if(!is(typeof(CRYPTO_R_FIPS_MODE_NOT_SUPPORTED))) {
        private enum enumMixinStr_CRYPTO_R_FIPS_MODE_NOT_SUPPORTED = `enum CRYPTO_R_FIPS_MODE_NOT_SUPPORTED = 101;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_R_FIPS_MODE_NOT_SUPPORTED); }))) {
            mixin(enumMixinStr_CRYPTO_R_FIPS_MODE_NOT_SUPPORTED);
        }
    }




    static if(!is(typeof(CRYPTO_F_SK_RESERVE))) {
        private enum enumMixinStr_CRYPTO_F_SK_RESERVE = `enum CRYPTO_F_SK_RESERVE = 129;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_F_SK_RESERVE); }))) {
            mixin(enumMixinStr_CRYPTO_F_SK_RESERVE);
        }
    }




    static if(!is(typeof(CRYPTO_F_PKEY_SIPHASH_INIT))) {
        private enum enumMixinStr_CRYPTO_F_PKEY_SIPHASH_INIT = `enum CRYPTO_F_PKEY_SIPHASH_INIT = 125;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_F_PKEY_SIPHASH_INIT); }))) {
            mixin(enumMixinStr_CRYPTO_F_PKEY_SIPHASH_INIT);
        }
    }




    static if(!is(typeof(CRYPTO_F_PKEY_POLY1305_INIT))) {
        private enum enumMixinStr_CRYPTO_F_PKEY_POLY1305_INIT = `enum CRYPTO_F_PKEY_POLY1305_INIT = 124;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_F_PKEY_POLY1305_INIT); }))) {
            mixin(enumMixinStr_CRYPTO_F_PKEY_POLY1305_INIT);
        }
    }




    static if(!is(typeof(CRYPTO_F_PKEY_HMAC_INIT))) {
        private enum enumMixinStr_CRYPTO_F_PKEY_HMAC_INIT = `enum CRYPTO_F_PKEY_HMAC_INIT = 123;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_F_PKEY_HMAC_INIT); }))) {
            mixin(enumMixinStr_CRYPTO_F_PKEY_HMAC_INIT);
        }
    }




    static if(!is(typeof(CRYPTO_F_OPENSSL_SK_DUP))) {
        private enum enumMixinStr_CRYPTO_F_OPENSSL_SK_DUP = `enum CRYPTO_F_OPENSSL_SK_DUP = 128;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_F_OPENSSL_SK_DUP); }))) {
            mixin(enumMixinStr_CRYPTO_F_OPENSSL_SK_DUP);
        }
    }




    static if(!is(typeof(CRYPTO_F_OPENSSL_SK_DEEP_COPY))) {
        private enum enumMixinStr_CRYPTO_F_OPENSSL_SK_DEEP_COPY = `enum CRYPTO_F_OPENSSL_SK_DEEP_COPY = 127;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_F_OPENSSL_SK_DEEP_COPY); }))) {
            mixin(enumMixinStr_CRYPTO_F_OPENSSL_SK_DEEP_COPY);
        }
    }




    static if(!is(typeof(CRYPTO_F_OPENSSL_LH_NEW))) {
        private enum enumMixinStr_CRYPTO_F_OPENSSL_LH_NEW = `enum CRYPTO_F_OPENSSL_LH_NEW = 126;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_F_OPENSSL_LH_NEW); }))) {
            mixin(enumMixinStr_CRYPTO_F_OPENSSL_LH_NEW);
        }
    }




    static if(!is(typeof(CRYPTO_F_OPENSSL_INIT_CRYPTO))) {
        private enum enumMixinStr_CRYPTO_F_OPENSSL_INIT_CRYPTO = `enum CRYPTO_F_OPENSSL_INIT_CRYPTO = 116;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_F_OPENSSL_INIT_CRYPTO); }))) {
            mixin(enumMixinStr_CRYPTO_F_OPENSSL_INIT_CRYPTO);
        }
    }




    static if(!is(typeof(CRYPTO_F_OPENSSL_HEXSTR2BUF))) {
        private enum enumMixinStr_CRYPTO_F_OPENSSL_HEXSTR2BUF = `enum CRYPTO_F_OPENSSL_HEXSTR2BUF = 118;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_F_OPENSSL_HEXSTR2BUF); }))) {
            mixin(enumMixinStr_CRYPTO_F_OPENSSL_HEXSTR2BUF);
        }
    }




    static if(!is(typeof(CRYPTO_F_OPENSSL_FOPEN))) {
        private enum enumMixinStr_CRYPTO_F_OPENSSL_FOPEN = `enum CRYPTO_F_OPENSSL_FOPEN = 119;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_F_OPENSSL_FOPEN); }))) {
            mixin(enumMixinStr_CRYPTO_F_OPENSSL_FOPEN);
        }
    }




    static if(!is(typeof(CRYPTO_F_OPENSSL_BUF2HEXSTR))) {
        private enum enumMixinStr_CRYPTO_F_OPENSSL_BUF2HEXSTR = `enum CRYPTO_F_OPENSSL_BUF2HEXSTR = 117;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_F_OPENSSL_BUF2HEXSTR); }))) {
            mixin(enumMixinStr_CRYPTO_F_OPENSSL_BUF2HEXSTR);
        }
    }




    static if(!is(typeof(CRYPTO_F_OPENSSL_ATEXIT))) {
        private enum enumMixinStr_CRYPTO_F_OPENSSL_ATEXIT = `enum CRYPTO_F_OPENSSL_ATEXIT = 114;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_F_OPENSSL_ATEXIT); }))) {
            mixin(enumMixinStr_CRYPTO_F_OPENSSL_ATEXIT);
        }
    }




    static if(!is(typeof(CRYPTO_F_GET_AND_LOCK))) {
        private enum enumMixinStr_CRYPTO_F_GET_AND_LOCK = `enum CRYPTO_F_GET_AND_LOCK = 113;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_F_GET_AND_LOCK); }))) {
            mixin(enumMixinStr_CRYPTO_F_GET_AND_LOCK);
        }
    }




    static if(!is(typeof(CRYPTO_F_FIPS_MODE_SET))) {
        private enum enumMixinStr_CRYPTO_F_FIPS_MODE_SET = `enum CRYPTO_F_FIPS_MODE_SET = 109;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_F_FIPS_MODE_SET); }))) {
            mixin(enumMixinStr_CRYPTO_F_FIPS_MODE_SET);
        }
    }




    static if(!is(typeof(CRYPTO_F_CRYPTO_SET_EX_DATA))) {
        private enum enumMixinStr_CRYPTO_F_CRYPTO_SET_EX_DATA = `enum CRYPTO_F_CRYPTO_SET_EX_DATA = 102;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_F_CRYPTO_SET_EX_DATA); }))) {
            mixin(enumMixinStr_CRYPTO_F_CRYPTO_SET_EX_DATA);
        }
    }




    static if(!is(typeof(CRYPTO_F_CRYPTO_OCB128_INIT))) {
        private enum enumMixinStr_CRYPTO_F_CRYPTO_OCB128_INIT = `enum CRYPTO_F_CRYPTO_OCB128_INIT = 122;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_F_CRYPTO_OCB128_INIT); }))) {
            mixin(enumMixinStr_CRYPTO_F_CRYPTO_OCB128_INIT);
        }
    }




    static if(!is(typeof(CRYPTO_F_CRYPTO_OCB128_COPY_CTX))) {
        private enum enumMixinStr_CRYPTO_F_CRYPTO_OCB128_COPY_CTX = `enum CRYPTO_F_CRYPTO_OCB128_COPY_CTX = 121;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_F_CRYPTO_OCB128_COPY_CTX); }))) {
            mixin(enumMixinStr_CRYPTO_F_CRYPTO_OCB128_COPY_CTX);
        }
    }




    static if(!is(typeof(CRYPTO_F_CRYPTO_NEW_EX_DATA))) {
        private enum enumMixinStr_CRYPTO_F_CRYPTO_NEW_EX_DATA = `enum CRYPTO_F_CRYPTO_NEW_EX_DATA = 112;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_F_CRYPTO_NEW_EX_DATA); }))) {
            mixin(enumMixinStr_CRYPTO_F_CRYPTO_NEW_EX_DATA);
        }
    }




    static if(!is(typeof(CRYPTO_F_CRYPTO_MEMDUP))) {
        private enum enumMixinStr_CRYPTO_F_CRYPTO_MEMDUP = `enum CRYPTO_F_CRYPTO_MEMDUP = 115;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_F_CRYPTO_MEMDUP); }))) {
            mixin(enumMixinStr_CRYPTO_F_CRYPTO_MEMDUP);
        }
    }




    static if(!is(typeof(CRYPTO_F_CRYPTO_GET_EX_NEW_INDEX))) {
        private enum enumMixinStr_CRYPTO_F_CRYPTO_GET_EX_NEW_INDEX = `enum CRYPTO_F_CRYPTO_GET_EX_NEW_INDEX = 100;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_F_CRYPTO_GET_EX_NEW_INDEX); }))) {
            mixin(enumMixinStr_CRYPTO_F_CRYPTO_GET_EX_NEW_INDEX);
        }
    }




    static if(!is(typeof(CRYPTO_F_CRYPTO_FREE_EX_DATA))) {
        private enum enumMixinStr_CRYPTO_F_CRYPTO_FREE_EX_DATA = `enum CRYPTO_F_CRYPTO_FREE_EX_DATA = 111;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_F_CRYPTO_FREE_EX_DATA); }))) {
            mixin(enumMixinStr_CRYPTO_F_CRYPTO_FREE_EX_DATA);
        }
    }




    static if(!is(typeof(CRYPTO_F_CRYPTO_DUP_EX_DATA))) {
        private enum enumMixinStr_CRYPTO_F_CRYPTO_DUP_EX_DATA = `enum CRYPTO_F_CRYPTO_DUP_EX_DATA = 110;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_F_CRYPTO_DUP_EX_DATA); }))) {
            mixin(enumMixinStr_CRYPTO_F_CRYPTO_DUP_EX_DATA);
        }
    }




    static if(!is(typeof(CRYPTO_F_CMAC_CTX_NEW))) {
        private enum enumMixinStr_CRYPTO_F_CMAC_CTX_NEW = `enum CRYPTO_F_CMAC_CTX_NEW = 120;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_F_CMAC_CTX_NEW); }))) {
            mixin(enumMixinStr_CRYPTO_F_CMAC_CTX_NEW);
        }
    }






    static if(!is(typeof(CRYPTO_ONCE_STATIC_INIT))) {
        private enum enumMixinStr_CRYPTO_ONCE_STATIC_INIT = `enum CRYPTO_ONCE_STATIC_INIT = PTHREAD_ONCE_INIT;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_ONCE_STATIC_INIT); }))) {
            mixin(enumMixinStr_CRYPTO_ONCE_STATIC_INIT);
        }
    }




    static if(!is(typeof(OPENSSL_INIT_ENGINE_ALL_BUILTIN))) {
        private enum enumMixinStr_OPENSSL_INIT_ENGINE_ALL_BUILTIN = `enum OPENSSL_INIT_ENGINE_ALL_BUILTIN = ( OPENSSL_INIT_ENGINE_RDRAND | OPENSSL_INIT_ENGINE_DYNAMIC | OPENSSL_INIT_ENGINE_CRYPTODEV | OPENSSL_INIT_ENGINE_CAPI | OPENSSL_INIT_ENGINE_PADLOCK );`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_INIT_ENGINE_ALL_BUILTIN); }))) {
            mixin(enumMixinStr_OPENSSL_INIT_ENGINE_ALL_BUILTIN);
        }
    }




    static if(!is(typeof(OPENSSL_INIT_NO_ATEXIT))) {
        private enum enumMixinStr_OPENSSL_INIT_NO_ATEXIT = `enum OPENSSL_INIT_NO_ATEXIT = 0x00080000L;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_INIT_NO_ATEXIT); }))) {
            mixin(enumMixinStr_OPENSSL_INIT_NO_ATEXIT);
        }
    }




    static if(!is(typeof(OPENSSL_INIT_ATFORK))) {
        private enum enumMixinStr_OPENSSL_INIT_ATFORK = `enum OPENSSL_INIT_ATFORK = 0x00020000L;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_INIT_ATFORK); }))) {
            mixin(enumMixinStr_OPENSSL_INIT_ATFORK);
        }
    }




    static if(!is(typeof(OPENSSL_INIT_ENGINE_AFALG))) {
        private enum enumMixinStr_OPENSSL_INIT_ENGINE_AFALG = `enum OPENSSL_INIT_ENGINE_AFALG = 0x00008000L;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_INIT_ENGINE_AFALG); }))) {
            mixin(enumMixinStr_OPENSSL_INIT_ENGINE_AFALG);
        }
    }




    static if(!is(typeof(OPENSSL_INIT_ENGINE_PADLOCK))) {
        private enum enumMixinStr_OPENSSL_INIT_ENGINE_PADLOCK = `enum OPENSSL_INIT_ENGINE_PADLOCK = 0x00004000L;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_INIT_ENGINE_PADLOCK); }))) {
            mixin(enumMixinStr_OPENSSL_INIT_ENGINE_PADLOCK);
        }
    }




    static if(!is(typeof(OPENSSL_INIT_ENGINE_CAPI))) {
        private enum enumMixinStr_OPENSSL_INIT_ENGINE_CAPI = `enum OPENSSL_INIT_ENGINE_CAPI = 0x00002000L;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_INIT_ENGINE_CAPI); }))) {
            mixin(enumMixinStr_OPENSSL_INIT_ENGINE_CAPI);
        }
    }




    static if(!is(typeof(OPENSSL_INIT_ENGINE_CRYPTODEV))) {
        private enum enumMixinStr_OPENSSL_INIT_ENGINE_CRYPTODEV = `enum OPENSSL_INIT_ENGINE_CRYPTODEV = 0x00001000L;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_INIT_ENGINE_CRYPTODEV); }))) {
            mixin(enumMixinStr_OPENSSL_INIT_ENGINE_CRYPTODEV);
        }
    }




    static if(!is(typeof(OPENSSL_INIT_ENGINE_OPENSSL))) {
        private enum enumMixinStr_OPENSSL_INIT_ENGINE_OPENSSL = `enum OPENSSL_INIT_ENGINE_OPENSSL = 0x00000800L;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_INIT_ENGINE_OPENSSL); }))) {
            mixin(enumMixinStr_OPENSSL_INIT_ENGINE_OPENSSL);
        }
    }




    static if(!is(typeof(OPENSSL_INIT_ENGINE_DYNAMIC))) {
        private enum enumMixinStr_OPENSSL_INIT_ENGINE_DYNAMIC = `enum OPENSSL_INIT_ENGINE_DYNAMIC = 0x00000400L;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_INIT_ENGINE_DYNAMIC); }))) {
            mixin(enumMixinStr_OPENSSL_INIT_ENGINE_DYNAMIC);
        }
    }




    static if(!is(typeof(OPENSSL_INIT_ENGINE_RDRAND))) {
        private enum enumMixinStr_OPENSSL_INIT_ENGINE_RDRAND = `enum OPENSSL_INIT_ENGINE_RDRAND = 0x00000200L;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_INIT_ENGINE_RDRAND); }))) {
            mixin(enumMixinStr_OPENSSL_INIT_ENGINE_RDRAND);
        }
    }




    static if(!is(typeof(OPENSSL_INIT_ASYNC))) {
        private enum enumMixinStr_OPENSSL_INIT_ASYNC = `enum OPENSSL_INIT_ASYNC = 0x00000100L;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_INIT_ASYNC); }))) {
            mixin(enumMixinStr_OPENSSL_INIT_ASYNC);
        }
    }




    static if(!is(typeof(OPENSSL_INIT_NO_LOAD_CONFIG))) {
        private enum enumMixinStr_OPENSSL_INIT_NO_LOAD_CONFIG = `enum OPENSSL_INIT_NO_LOAD_CONFIG = 0x00000080L;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_INIT_NO_LOAD_CONFIG); }))) {
            mixin(enumMixinStr_OPENSSL_INIT_NO_LOAD_CONFIG);
        }
    }




    static if(!is(typeof(OPENSSL_INIT_LOAD_CONFIG))) {
        private enum enumMixinStr_OPENSSL_INIT_LOAD_CONFIG = `enum OPENSSL_INIT_LOAD_CONFIG = 0x00000040L;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_INIT_LOAD_CONFIG); }))) {
            mixin(enumMixinStr_OPENSSL_INIT_LOAD_CONFIG);
        }
    }




    static if(!is(typeof(OPENSSL_INIT_NO_ADD_ALL_DIGESTS))) {
        private enum enumMixinStr_OPENSSL_INIT_NO_ADD_ALL_DIGESTS = `enum OPENSSL_INIT_NO_ADD_ALL_DIGESTS = 0x00000020L;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_INIT_NO_ADD_ALL_DIGESTS); }))) {
            mixin(enumMixinStr_OPENSSL_INIT_NO_ADD_ALL_DIGESTS);
        }
    }




    static if(!is(typeof(OPENSSL_INIT_NO_ADD_ALL_CIPHERS))) {
        private enum enumMixinStr_OPENSSL_INIT_NO_ADD_ALL_CIPHERS = `enum OPENSSL_INIT_NO_ADD_ALL_CIPHERS = 0x00000010L;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_INIT_NO_ADD_ALL_CIPHERS); }))) {
            mixin(enumMixinStr_OPENSSL_INIT_NO_ADD_ALL_CIPHERS);
        }
    }




    static if(!is(typeof(OPENSSL_INIT_ADD_ALL_DIGESTS))) {
        private enum enumMixinStr_OPENSSL_INIT_ADD_ALL_DIGESTS = `enum OPENSSL_INIT_ADD_ALL_DIGESTS = 0x00000008L;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_INIT_ADD_ALL_DIGESTS); }))) {
            mixin(enumMixinStr_OPENSSL_INIT_ADD_ALL_DIGESTS);
        }
    }




    static if(!is(typeof(OPENSSL_INIT_ADD_ALL_CIPHERS))) {
        private enum enumMixinStr_OPENSSL_INIT_ADD_ALL_CIPHERS = `enum OPENSSL_INIT_ADD_ALL_CIPHERS = 0x00000004L;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_INIT_ADD_ALL_CIPHERS); }))) {
            mixin(enumMixinStr_OPENSSL_INIT_ADD_ALL_CIPHERS);
        }
    }




    static if(!is(typeof(OPENSSL_INIT_LOAD_CRYPTO_STRINGS))) {
        private enum enumMixinStr_OPENSSL_INIT_LOAD_CRYPTO_STRINGS = `enum OPENSSL_INIT_LOAD_CRYPTO_STRINGS = 0x00000002L;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_INIT_LOAD_CRYPTO_STRINGS); }))) {
            mixin(enumMixinStr_OPENSSL_INIT_LOAD_CRYPTO_STRINGS);
        }
    }




    static if(!is(typeof(OPENSSL_INIT_NO_LOAD_CRYPTO_STRINGS))) {
        private enum enumMixinStr_OPENSSL_INIT_NO_LOAD_CRYPTO_STRINGS = `enum OPENSSL_INIT_NO_LOAD_CRYPTO_STRINGS = 0x00000001L;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_INIT_NO_LOAD_CRYPTO_STRINGS); }))) {
            mixin(enumMixinStr_OPENSSL_INIT_NO_LOAD_CRYPTO_STRINGS);
        }
    }
    static if(!is(typeof(IDP_PRESENT))) {
        private enum enumMixinStr_IDP_PRESENT = `enum IDP_PRESENT = 0x1;`;
        static if(is(typeof({ mixin(enumMixinStr_IDP_PRESENT); }))) {
            mixin(enumMixinStr_IDP_PRESENT);
        }
    }




    static if(!is(typeof(IDP_INVALID))) {
        private enum enumMixinStr_IDP_INVALID = `enum IDP_INVALID = 0x2;`;
        static if(is(typeof({ mixin(enumMixinStr_IDP_INVALID); }))) {
            mixin(enumMixinStr_IDP_INVALID);
        }
    }




    static if(!is(typeof(IDP_ONLYUSER))) {
        private enum enumMixinStr_IDP_ONLYUSER = `enum IDP_ONLYUSER = 0x4;`;
        static if(is(typeof({ mixin(enumMixinStr_IDP_ONLYUSER); }))) {
            mixin(enumMixinStr_IDP_ONLYUSER);
        }
    }




    static if(!is(typeof(IDP_ONLYCA))) {
        private enum enumMixinStr_IDP_ONLYCA = `enum IDP_ONLYCA = 0x8;`;
        static if(is(typeof({ mixin(enumMixinStr_IDP_ONLYCA); }))) {
            mixin(enumMixinStr_IDP_ONLYCA);
        }
    }




    static if(!is(typeof(IDP_ONLYATTR))) {
        private enum enumMixinStr_IDP_ONLYATTR = `enum IDP_ONLYATTR = 0x10;`;
        static if(is(typeof({ mixin(enumMixinStr_IDP_ONLYATTR); }))) {
            mixin(enumMixinStr_IDP_ONLYATTR);
        }
    }




    static if(!is(typeof(IDP_INDIRECT))) {
        private enum enumMixinStr_IDP_INDIRECT = `enum IDP_INDIRECT = 0x20;`;
        static if(is(typeof({ mixin(enumMixinStr_IDP_INDIRECT); }))) {
            mixin(enumMixinStr_IDP_INDIRECT);
        }
    }




    static if(!is(typeof(IDP_REASONS))) {
        private enum enumMixinStr_IDP_REASONS = `enum IDP_REASONS = 0x40;`;
        static if(is(typeof({ mixin(enumMixinStr_IDP_REASONS); }))) {
            mixin(enumMixinStr_IDP_REASONS);
        }
    }
    static if(!is(typeof(EXT_END))) {
        private enum enumMixinStr_EXT_END = `enum EXT_END = { - 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 };`;
        static if(is(typeof({ mixin(enumMixinStr_EXT_END); }))) {
            mixin(enumMixinStr_EXT_END);
        }
    }




    static if(!is(typeof(EXFLAG_BCONS))) {
        private enum enumMixinStr_EXFLAG_BCONS = `enum EXFLAG_BCONS = 0x1;`;
        static if(is(typeof({ mixin(enumMixinStr_EXFLAG_BCONS); }))) {
            mixin(enumMixinStr_EXFLAG_BCONS);
        }
    }




    static if(!is(typeof(EXFLAG_KUSAGE))) {
        private enum enumMixinStr_EXFLAG_KUSAGE = `enum EXFLAG_KUSAGE = 0x2;`;
        static if(is(typeof({ mixin(enumMixinStr_EXFLAG_KUSAGE); }))) {
            mixin(enumMixinStr_EXFLAG_KUSAGE);
        }
    }




    static if(!is(typeof(EXFLAG_XKUSAGE))) {
        private enum enumMixinStr_EXFLAG_XKUSAGE = `enum EXFLAG_XKUSAGE = 0x4;`;
        static if(is(typeof({ mixin(enumMixinStr_EXFLAG_XKUSAGE); }))) {
            mixin(enumMixinStr_EXFLAG_XKUSAGE);
        }
    }




    static if(!is(typeof(EXFLAG_NSCERT))) {
        private enum enumMixinStr_EXFLAG_NSCERT = `enum EXFLAG_NSCERT = 0x8;`;
        static if(is(typeof({ mixin(enumMixinStr_EXFLAG_NSCERT); }))) {
            mixin(enumMixinStr_EXFLAG_NSCERT);
        }
    }




    static if(!is(typeof(EXFLAG_CA))) {
        private enum enumMixinStr_EXFLAG_CA = `enum EXFLAG_CA = 0x10;`;
        static if(is(typeof({ mixin(enumMixinStr_EXFLAG_CA); }))) {
            mixin(enumMixinStr_EXFLAG_CA);
        }
    }




    static if(!is(typeof(EXFLAG_SI))) {
        private enum enumMixinStr_EXFLAG_SI = `enum EXFLAG_SI = 0x20;`;
        static if(is(typeof({ mixin(enumMixinStr_EXFLAG_SI); }))) {
            mixin(enumMixinStr_EXFLAG_SI);
        }
    }




    static if(!is(typeof(EXFLAG_V1))) {
        private enum enumMixinStr_EXFLAG_V1 = `enum EXFLAG_V1 = 0x40;`;
        static if(is(typeof({ mixin(enumMixinStr_EXFLAG_V1); }))) {
            mixin(enumMixinStr_EXFLAG_V1);
        }
    }




    static if(!is(typeof(EXFLAG_INVALID))) {
        private enum enumMixinStr_EXFLAG_INVALID = `enum EXFLAG_INVALID = 0x80;`;
        static if(is(typeof({ mixin(enumMixinStr_EXFLAG_INVALID); }))) {
            mixin(enumMixinStr_EXFLAG_INVALID);
        }
    }




    static if(!is(typeof(EXFLAG_SET))) {
        private enum enumMixinStr_EXFLAG_SET = `enum EXFLAG_SET = 0x100;`;
        static if(is(typeof({ mixin(enumMixinStr_EXFLAG_SET); }))) {
            mixin(enumMixinStr_EXFLAG_SET);
        }
    }




    static if(!is(typeof(EXFLAG_CRITICAL))) {
        private enum enumMixinStr_EXFLAG_CRITICAL = `enum EXFLAG_CRITICAL = 0x200;`;
        static if(is(typeof({ mixin(enumMixinStr_EXFLAG_CRITICAL); }))) {
            mixin(enumMixinStr_EXFLAG_CRITICAL);
        }
    }




    static if(!is(typeof(EXFLAG_PROXY))) {
        private enum enumMixinStr_EXFLAG_PROXY = `enum EXFLAG_PROXY = 0x400;`;
        static if(is(typeof({ mixin(enumMixinStr_EXFLAG_PROXY); }))) {
            mixin(enumMixinStr_EXFLAG_PROXY);
        }
    }




    static if(!is(typeof(EXFLAG_INVALID_POLICY))) {
        private enum enumMixinStr_EXFLAG_INVALID_POLICY = `enum EXFLAG_INVALID_POLICY = 0x800;`;
        static if(is(typeof({ mixin(enumMixinStr_EXFLAG_INVALID_POLICY); }))) {
            mixin(enumMixinStr_EXFLAG_INVALID_POLICY);
        }
    }




    static if(!is(typeof(EXFLAG_FRESHEST))) {
        private enum enumMixinStr_EXFLAG_FRESHEST = `enum EXFLAG_FRESHEST = 0x1000;`;
        static if(is(typeof({ mixin(enumMixinStr_EXFLAG_FRESHEST); }))) {
            mixin(enumMixinStr_EXFLAG_FRESHEST);
        }
    }




    static if(!is(typeof(EXFLAG_SS))) {
        private enum enumMixinStr_EXFLAG_SS = `enum EXFLAG_SS = 0x2000;`;
        static if(is(typeof({ mixin(enumMixinStr_EXFLAG_SS); }))) {
            mixin(enumMixinStr_EXFLAG_SS);
        }
    }




    static if(!is(typeof(EXFLAG_NO_FINGERPRINT))) {
        private enum enumMixinStr_EXFLAG_NO_FINGERPRINT = `enum EXFLAG_NO_FINGERPRINT = 0x100000;`;
        static if(is(typeof({ mixin(enumMixinStr_EXFLAG_NO_FINGERPRINT); }))) {
            mixin(enumMixinStr_EXFLAG_NO_FINGERPRINT);
        }
    }




    static if(!is(typeof(KU_DIGITAL_SIGNATURE))) {
        private enum enumMixinStr_KU_DIGITAL_SIGNATURE = `enum KU_DIGITAL_SIGNATURE = 0x0080;`;
        static if(is(typeof({ mixin(enumMixinStr_KU_DIGITAL_SIGNATURE); }))) {
            mixin(enumMixinStr_KU_DIGITAL_SIGNATURE);
        }
    }




    static if(!is(typeof(KU_NON_REPUDIATION))) {
        private enum enumMixinStr_KU_NON_REPUDIATION = `enum KU_NON_REPUDIATION = 0x0040;`;
        static if(is(typeof({ mixin(enumMixinStr_KU_NON_REPUDIATION); }))) {
            mixin(enumMixinStr_KU_NON_REPUDIATION);
        }
    }




    static if(!is(typeof(KU_KEY_ENCIPHERMENT))) {
        private enum enumMixinStr_KU_KEY_ENCIPHERMENT = `enum KU_KEY_ENCIPHERMENT = 0x0020;`;
        static if(is(typeof({ mixin(enumMixinStr_KU_KEY_ENCIPHERMENT); }))) {
            mixin(enumMixinStr_KU_KEY_ENCIPHERMENT);
        }
    }




    static if(!is(typeof(KU_DATA_ENCIPHERMENT))) {
        private enum enumMixinStr_KU_DATA_ENCIPHERMENT = `enum KU_DATA_ENCIPHERMENT = 0x0010;`;
        static if(is(typeof({ mixin(enumMixinStr_KU_DATA_ENCIPHERMENT); }))) {
            mixin(enumMixinStr_KU_DATA_ENCIPHERMENT);
        }
    }




    static if(!is(typeof(KU_KEY_AGREEMENT))) {
        private enum enumMixinStr_KU_KEY_AGREEMENT = `enum KU_KEY_AGREEMENT = 0x0008;`;
        static if(is(typeof({ mixin(enumMixinStr_KU_KEY_AGREEMENT); }))) {
            mixin(enumMixinStr_KU_KEY_AGREEMENT);
        }
    }




    static if(!is(typeof(KU_KEY_CERT_SIGN))) {
        private enum enumMixinStr_KU_KEY_CERT_SIGN = `enum KU_KEY_CERT_SIGN = 0x0004;`;
        static if(is(typeof({ mixin(enumMixinStr_KU_KEY_CERT_SIGN); }))) {
            mixin(enumMixinStr_KU_KEY_CERT_SIGN);
        }
    }




    static if(!is(typeof(KU_CRL_SIGN))) {
        private enum enumMixinStr_KU_CRL_SIGN = `enum KU_CRL_SIGN = 0x0002;`;
        static if(is(typeof({ mixin(enumMixinStr_KU_CRL_SIGN); }))) {
            mixin(enumMixinStr_KU_CRL_SIGN);
        }
    }




    static if(!is(typeof(KU_ENCIPHER_ONLY))) {
        private enum enumMixinStr_KU_ENCIPHER_ONLY = `enum KU_ENCIPHER_ONLY = 0x0001;`;
        static if(is(typeof({ mixin(enumMixinStr_KU_ENCIPHER_ONLY); }))) {
            mixin(enumMixinStr_KU_ENCIPHER_ONLY);
        }
    }




    static if(!is(typeof(KU_DECIPHER_ONLY))) {
        private enum enumMixinStr_KU_DECIPHER_ONLY = `enum KU_DECIPHER_ONLY = 0x8000;`;
        static if(is(typeof({ mixin(enumMixinStr_KU_DECIPHER_ONLY); }))) {
            mixin(enumMixinStr_KU_DECIPHER_ONLY);
        }
    }




    static if(!is(typeof(NS_SSL_CLIENT))) {
        private enum enumMixinStr_NS_SSL_CLIENT = `enum NS_SSL_CLIENT = 0x80;`;
        static if(is(typeof({ mixin(enumMixinStr_NS_SSL_CLIENT); }))) {
            mixin(enumMixinStr_NS_SSL_CLIENT);
        }
    }




    static if(!is(typeof(NS_SSL_SERVER))) {
        private enum enumMixinStr_NS_SSL_SERVER = `enum NS_SSL_SERVER = 0x40;`;
        static if(is(typeof({ mixin(enumMixinStr_NS_SSL_SERVER); }))) {
            mixin(enumMixinStr_NS_SSL_SERVER);
        }
    }




    static if(!is(typeof(NS_SMIME))) {
        private enum enumMixinStr_NS_SMIME = `enum NS_SMIME = 0x20;`;
        static if(is(typeof({ mixin(enumMixinStr_NS_SMIME); }))) {
            mixin(enumMixinStr_NS_SMIME);
        }
    }




    static if(!is(typeof(NS_OBJSIGN))) {
        private enum enumMixinStr_NS_OBJSIGN = `enum NS_OBJSIGN = 0x10;`;
        static if(is(typeof({ mixin(enumMixinStr_NS_OBJSIGN); }))) {
            mixin(enumMixinStr_NS_OBJSIGN);
        }
    }




    static if(!is(typeof(NS_SSL_CA))) {
        private enum enumMixinStr_NS_SSL_CA = `enum NS_SSL_CA = 0x04;`;
        static if(is(typeof({ mixin(enumMixinStr_NS_SSL_CA); }))) {
            mixin(enumMixinStr_NS_SSL_CA);
        }
    }




    static if(!is(typeof(NS_SMIME_CA))) {
        private enum enumMixinStr_NS_SMIME_CA = `enum NS_SMIME_CA = 0x02;`;
        static if(is(typeof({ mixin(enumMixinStr_NS_SMIME_CA); }))) {
            mixin(enumMixinStr_NS_SMIME_CA);
        }
    }




    static if(!is(typeof(NS_OBJSIGN_CA))) {
        private enum enumMixinStr_NS_OBJSIGN_CA = `enum NS_OBJSIGN_CA = 0x01;`;
        static if(is(typeof({ mixin(enumMixinStr_NS_OBJSIGN_CA); }))) {
            mixin(enumMixinStr_NS_OBJSIGN_CA);
        }
    }




    static if(!is(typeof(NS_ANY_CA))) {
        private enum enumMixinStr_NS_ANY_CA = `enum NS_ANY_CA = ( 0x04 | 0x02 | 0x01 );`;
        static if(is(typeof({ mixin(enumMixinStr_NS_ANY_CA); }))) {
            mixin(enumMixinStr_NS_ANY_CA);
        }
    }




    static if(!is(typeof(XKU_SSL_SERVER))) {
        private enum enumMixinStr_XKU_SSL_SERVER = `enum XKU_SSL_SERVER = 0x1;`;
        static if(is(typeof({ mixin(enumMixinStr_XKU_SSL_SERVER); }))) {
            mixin(enumMixinStr_XKU_SSL_SERVER);
        }
    }




    static if(!is(typeof(XKU_SSL_CLIENT))) {
        private enum enumMixinStr_XKU_SSL_CLIENT = `enum XKU_SSL_CLIENT = 0x2;`;
        static if(is(typeof({ mixin(enumMixinStr_XKU_SSL_CLIENT); }))) {
            mixin(enumMixinStr_XKU_SSL_CLIENT);
        }
    }




    static if(!is(typeof(XKU_SMIME))) {
        private enum enumMixinStr_XKU_SMIME = `enum XKU_SMIME = 0x4;`;
        static if(is(typeof({ mixin(enumMixinStr_XKU_SMIME); }))) {
            mixin(enumMixinStr_XKU_SMIME);
        }
    }




    static if(!is(typeof(XKU_CODE_SIGN))) {
        private enum enumMixinStr_XKU_CODE_SIGN = `enum XKU_CODE_SIGN = 0x8;`;
        static if(is(typeof({ mixin(enumMixinStr_XKU_CODE_SIGN); }))) {
            mixin(enumMixinStr_XKU_CODE_SIGN);
        }
    }




    static if(!is(typeof(XKU_SGC))) {
        private enum enumMixinStr_XKU_SGC = `enum XKU_SGC = 0x10;`;
        static if(is(typeof({ mixin(enumMixinStr_XKU_SGC); }))) {
            mixin(enumMixinStr_XKU_SGC);
        }
    }




    static if(!is(typeof(XKU_OCSP_SIGN))) {
        private enum enumMixinStr_XKU_OCSP_SIGN = `enum XKU_OCSP_SIGN = 0x20;`;
        static if(is(typeof({ mixin(enumMixinStr_XKU_OCSP_SIGN); }))) {
            mixin(enumMixinStr_XKU_OCSP_SIGN);
        }
    }




    static if(!is(typeof(XKU_TIMESTAMP))) {
        private enum enumMixinStr_XKU_TIMESTAMP = `enum XKU_TIMESTAMP = 0x40;`;
        static if(is(typeof({ mixin(enumMixinStr_XKU_TIMESTAMP); }))) {
            mixin(enumMixinStr_XKU_TIMESTAMP);
        }
    }




    static if(!is(typeof(XKU_DVCS))) {
        private enum enumMixinStr_XKU_DVCS = `enum XKU_DVCS = 0x80;`;
        static if(is(typeof({ mixin(enumMixinStr_XKU_DVCS); }))) {
            mixin(enumMixinStr_XKU_DVCS);
        }
    }




    static if(!is(typeof(XKU_ANYEKU))) {
        private enum enumMixinStr_XKU_ANYEKU = `enum XKU_ANYEKU = 0x100;`;
        static if(is(typeof({ mixin(enumMixinStr_XKU_ANYEKU); }))) {
            mixin(enumMixinStr_XKU_ANYEKU);
        }
    }




    static if(!is(typeof(X509_PURPOSE_DYNAMIC))) {
        private enum enumMixinStr_X509_PURPOSE_DYNAMIC = `enum X509_PURPOSE_DYNAMIC = 0x1;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_PURPOSE_DYNAMIC); }))) {
            mixin(enumMixinStr_X509_PURPOSE_DYNAMIC);
        }
    }




    static if(!is(typeof(X509_PURPOSE_DYNAMIC_NAME))) {
        private enum enumMixinStr_X509_PURPOSE_DYNAMIC_NAME = `enum X509_PURPOSE_DYNAMIC_NAME = 0x2;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_PURPOSE_DYNAMIC_NAME); }))) {
            mixin(enumMixinStr_X509_PURPOSE_DYNAMIC_NAME);
        }
    }






    static if(!is(typeof(CRYPTO_WRITE))) {
        private enum enumMixinStr_CRYPTO_WRITE = `enum CRYPTO_WRITE = 8;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_WRITE); }))) {
            mixin(enumMixinStr_CRYPTO_WRITE);
        }
    }




    static if(!is(typeof(X509_PURPOSE_SSL_CLIENT))) {
        private enum enumMixinStr_X509_PURPOSE_SSL_CLIENT = `enum X509_PURPOSE_SSL_CLIENT = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_PURPOSE_SSL_CLIENT); }))) {
            mixin(enumMixinStr_X509_PURPOSE_SSL_CLIENT);
        }
    }




    static if(!is(typeof(X509_PURPOSE_SSL_SERVER))) {
        private enum enumMixinStr_X509_PURPOSE_SSL_SERVER = `enum X509_PURPOSE_SSL_SERVER = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_PURPOSE_SSL_SERVER); }))) {
            mixin(enumMixinStr_X509_PURPOSE_SSL_SERVER);
        }
    }




    static if(!is(typeof(X509_PURPOSE_NS_SSL_SERVER))) {
        private enum enumMixinStr_X509_PURPOSE_NS_SSL_SERVER = `enum X509_PURPOSE_NS_SSL_SERVER = 3;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_PURPOSE_NS_SSL_SERVER); }))) {
            mixin(enumMixinStr_X509_PURPOSE_NS_SSL_SERVER);
        }
    }




    static if(!is(typeof(X509_PURPOSE_SMIME_SIGN))) {
        private enum enumMixinStr_X509_PURPOSE_SMIME_SIGN = `enum X509_PURPOSE_SMIME_SIGN = 4;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_PURPOSE_SMIME_SIGN); }))) {
            mixin(enumMixinStr_X509_PURPOSE_SMIME_SIGN);
        }
    }




    static if(!is(typeof(X509_PURPOSE_SMIME_ENCRYPT))) {
        private enum enumMixinStr_X509_PURPOSE_SMIME_ENCRYPT = `enum X509_PURPOSE_SMIME_ENCRYPT = 5;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_PURPOSE_SMIME_ENCRYPT); }))) {
            mixin(enumMixinStr_X509_PURPOSE_SMIME_ENCRYPT);
        }
    }




    static if(!is(typeof(X509_PURPOSE_CRL_SIGN))) {
        private enum enumMixinStr_X509_PURPOSE_CRL_SIGN = `enum X509_PURPOSE_CRL_SIGN = 6;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_PURPOSE_CRL_SIGN); }))) {
            mixin(enumMixinStr_X509_PURPOSE_CRL_SIGN);
        }
    }




    static if(!is(typeof(X509_PURPOSE_ANY))) {
        private enum enumMixinStr_X509_PURPOSE_ANY = `enum X509_PURPOSE_ANY = 7;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_PURPOSE_ANY); }))) {
            mixin(enumMixinStr_X509_PURPOSE_ANY);
        }
    }




    static if(!is(typeof(X509_PURPOSE_OCSP_HELPER))) {
        private enum enumMixinStr_X509_PURPOSE_OCSP_HELPER = `enum X509_PURPOSE_OCSP_HELPER = 8;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_PURPOSE_OCSP_HELPER); }))) {
            mixin(enumMixinStr_X509_PURPOSE_OCSP_HELPER);
        }
    }




    static if(!is(typeof(X509_PURPOSE_TIMESTAMP_SIGN))) {
        private enum enumMixinStr_X509_PURPOSE_TIMESTAMP_SIGN = `enum X509_PURPOSE_TIMESTAMP_SIGN = 9;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_PURPOSE_TIMESTAMP_SIGN); }))) {
            mixin(enumMixinStr_X509_PURPOSE_TIMESTAMP_SIGN);
        }
    }




    static if(!is(typeof(X509_PURPOSE_MIN))) {
        private enum enumMixinStr_X509_PURPOSE_MIN = `enum X509_PURPOSE_MIN = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_PURPOSE_MIN); }))) {
            mixin(enumMixinStr_X509_PURPOSE_MIN);
        }
    }




    static if(!is(typeof(X509_PURPOSE_MAX))) {
        private enum enumMixinStr_X509_PURPOSE_MAX = `enum X509_PURPOSE_MAX = 9;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_PURPOSE_MAX); }))) {
            mixin(enumMixinStr_X509_PURPOSE_MAX);
        }
    }




    static if(!is(typeof(X509V3_EXT_UNKNOWN_MASK))) {
        private enum enumMixinStr_X509V3_EXT_UNKNOWN_MASK = `enum X509V3_EXT_UNKNOWN_MASK = ( 0xfL << 16 );`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_EXT_UNKNOWN_MASK); }))) {
            mixin(enumMixinStr_X509V3_EXT_UNKNOWN_MASK);
        }
    }




    static if(!is(typeof(X509V3_EXT_DEFAULT))) {
        private enum enumMixinStr_X509V3_EXT_DEFAULT = `enum X509V3_EXT_DEFAULT = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_EXT_DEFAULT); }))) {
            mixin(enumMixinStr_X509V3_EXT_DEFAULT);
        }
    }




    static if(!is(typeof(X509V3_EXT_ERROR_UNKNOWN))) {
        private enum enumMixinStr_X509V3_EXT_ERROR_UNKNOWN = `enum X509V3_EXT_ERROR_UNKNOWN = ( 1L << 16 );`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_EXT_ERROR_UNKNOWN); }))) {
            mixin(enumMixinStr_X509V3_EXT_ERROR_UNKNOWN);
        }
    }




    static if(!is(typeof(X509V3_EXT_PARSE_UNKNOWN))) {
        private enum enumMixinStr_X509V3_EXT_PARSE_UNKNOWN = `enum X509V3_EXT_PARSE_UNKNOWN = ( 2L << 16 );`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_EXT_PARSE_UNKNOWN); }))) {
            mixin(enumMixinStr_X509V3_EXT_PARSE_UNKNOWN);
        }
    }




    static if(!is(typeof(X509V3_EXT_DUMP_UNKNOWN))) {
        private enum enumMixinStr_X509V3_EXT_DUMP_UNKNOWN = `enum X509V3_EXT_DUMP_UNKNOWN = ( 3L << 16 );`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_EXT_DUMP_UNKNOWN); }))) {
            mixin(enumMixinStr_X509V3_EXT_DUMP_UNKNOWN);
        }
    }




    static if(!is(typeof(X509V3_ADD_OP_MASK))) {
        private enum enumMixinStr_X509V3_ADD_OP_MASK = `enum X509V3_ADD_OP_MASK = 0xfL;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_ADD_OP_MASK); }))) {
            mixin(enumMixinStr_X509V3_ADD_OP_MASK);
        }
    }




    static if(!is(typeof(X509V3_ADD_DEFAULT))) {
        private enum enumMixinStr_X509V3_ADD_DEFAULT = `enum X509V3_ADD_DEFAULT = 0L;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_ADD_DEFAULT); }))) {
            mixin(enumMixinStr_X509V3_ADD_DEFAULT);
        }
    }




    static if(!is(typeof(X509V3_ADD_APPEND))) {
        private enum enumMixinStr_X509V3_ADD_APPEND = `enum X509V3_ADD_APPEND = 1L;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_ADD_APPEND); }))) {
            mixin(enumMixinStr_X509V3_ADD_APPEND);
        }
    }




    static if(!is(typeof(X509V3_ADD_REPLACE))) {
        private enum enumMixinStr_X509V3_ADD_REPLACE = `enum X509V3_ADD_REPLACE = 2L;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_ADD_REPLACE); }))) {
            mixin(enumMixinStr_X509V3_ADD_REPLACE);
        }
    }




    static if(!is(typeof(X509V3_ADD_REPLACE_EXISTING))) {
        private enum enumMixinStr_X509V3_ADD_REPLACE_EXISTING = `enum X509V3_ADD_REPLACE_EXISTING = 3L;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_ADD_REPLACE_EXISTING); }))) {
            mixin(enumMixinStr_X509V3_ADD_REPLACE_EXISTING);
        }
    }




    static if(!is(typeof(X509V3_ADD_KEEP_EXISTING))) {
        private enum enumMixinStr_X509V3_ADD_KEEP_EXISTING = `enum X509V3_ADD_KEEP_EXISTING = 4L;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_ADD_KEEP_EXISTING); }))) {
            mixin(enumMixinStr_X509V3_ADD_KEEP_EXISTING);
        }
    }




    static if(!is(typeof(X509V3_ADD_DELETE))) {
        private enum enumMixinStr_X509V3_ADD_DELETE = `enum X509V3_ADD_DELETE = 5L;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_ADD_DELETE); }))) {
            mixin(enumMixinStr_X509V3_ADD_DELETE);
        }
    }




    static if(!is(typeof(X509V3_ADD_SILENT))) {
        private enum enumMixinStr_X509V3_ADD_SILENT = `enum X509V3_ADD_SILENT = 0x10;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_ADD_SILENT); }))) {
            mixin(enumMixinStr_X509V3_ADD_SILENT);
        }
    }




    static if(!is(typeof(CRYPTO_READ))) {
        private enum enumMixinStr_CRYPTO_READ = `enum CRYPTO_READ = 4;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_READ); }))) {
            mixin(enumMixinStr_CRYPTO_READ);
        }
    }




    static if(!is(typeof(CRYPTO_UNLOCK))) {
        private enum enumMixinStr_CRYPTO_UNLOCK = `enum CRYPTO_UNLOCK = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_UNLOCK); }))) {
            mixin(enumMixinStr_CRYPTO_UNLOCK);
        }
    }




    static if(!is(typeof(CRYPTO_LOCK))) {
        private enum enumMixinStr_CRYPTO_LOCK = `enum CRYPTO_LOCK = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_LOCK); }))) {
            mixin(enumMixinStr_CRYPTO_LOCK);
        }
    }
    static if(!is(typeof(OPENSSL_ENGINES_DIR))) {
        private enum enumMixinStr_OPENSSL_ENGINES_DIR = `enum OPENSSL_ENGINES_DIR = 5;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_ENGINES_DIR); }))) {
            mixin(enumMixinStr_OPENSSL_ENGINES_DIR);
        }
    }




    static if(!is(typeof(OPENSSL_DIR))) {
        private enum enumMixinStr_OPENSSL_DIR = `enum OPENSSL_DIR = 4;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_DIR); }))) {
            mixin(enumMixinStr_OPENSSL_DIR);
        }
    }




    static if(!is(typeof(OPENSSL_PLATFORM))) {
        private enum enumMixinStr_OPENSSL_PLATFORM = `enum OPENSSL_PLATFORM = 3;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_PLATFORM); }))) {
            mixin(enumMixinStr_OPENSSL_PLATFORM);
        }
    }




    static if(!is(typeof(OPENSSL_BUILT_ON))) {
        private enum enumMixinStr_OPENSSL_BUILT_ON = `enum OPENSSL_BUILT_ON = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_BUILT_ON); }))) {
            mixin(enumMixinStr_OPENSSL_BUILT_ON);
        }
    }




    static if(!is(typeof(OPENSSL_CFLAGS))) {
        private enum enumMixinStr_OPENSSL_CFLAGS = `enum OPENSSL_CFLAGS = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_CFLAGS); }))) {
            mixin(enumMixinStr_OPENSSL_CFLAGS);
        }
    }




    static if(!is(typeof(OPENSSL_VERSION))) {
        private enum enumMixinStr_OPENSSL_VERSION = `enum OPENSSL_VERSION = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_OPENSSL_VERSION); }))) {
            mixin(enumMixinStr_OPENSSL_VERSION);
        }
    }
    static if(!is(typeof(CRYPTO_EX_INDEX__COUNT))) {
        private enum enumMixinStr_CRYPTO_EX_INDEX__COUNT = `enum CRYPTO_EX_INDEX__COUNT = 16;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_EX_INDEX__COUNT); }))) {
            mixin(enumMixinStr_CRYPTO_EX_INDEX__COUNT);
        }
    }




    static if(!is(typeof(CRYPTO_EX_INDEX_DRBG))) {
        private enum enumMixinStr_CRYPTO_EX_INDEX_DRBG = `enum CRYPTO_EX_INDEX_DRBG = 15;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_EX_INDEX_DRBG); }))) {
            mixin(enumMixinStr_CRYPTO_EX_INDEX_DRBG);
        }
    }




    static if(!is(typeof(CRYPTO_EX_INDEX_UI_METHOD))) {
        private enum enumMixinStr_CRYPTO_EX_INDEX_UI_METHOD = `enum CRYPTO_EX_INDEX_UI_METHOD = 14;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_EX_INDEX_UI_METHOD); }))) {
            mixin(enumMixinStr_CRYPTO_EX_INDEX_UI_METHOD);
        }
    }




    static if(!is(typeof(CRYPTO_EX_INDEX_APP))) {
        private enum enumMixinStr_CRYPTO_EX_INDEX_APP = `enum CRYPTO_EX_INDEX_APP = 13;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_EX_INDEX_APP); }))) {
            mixin(enumMixinStr_CRYPTO_EX_INDEX_APP);
        }
    }




    static if(!is(typeof(CRYPTO_EX_INDEX_BIO))) {
        private enum enumMixinStr_CRYPTO_EX_INDEX_BIO = `enum CRYPTO_EX_INDEX_BIO = 12;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_EX_INDEX_BIO); }))) {
            mixin(enumMixinStr_CRYPTO_EX_INDEX_BIO);
        }
    }




    static if(!is(typeof(CRYPTO_EX_INDEX_UI))) {
        private enum enumMixinStr_CRYPTO_EX_INDEX_UI = `enum CRYPTO_EX_INDEX_UI = 11;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_EX_INDEX_UI); }))) {
            mixin(enumMixinStr_CRYPTO_EX_INDEX_UI);
        }
    }




    static if(!is(typeof(CRYPTO_EX_INDEX_ENGINE))) {
        private enum enumMixinStr_CRYPTO_EX_INDEX_ENGINE = `enum CRYPTO_EX_INDEX_ENGINE = 10;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_EX_INDEX_ENGINE); }))) {
            mixin(enumMixinStr_CRYPTO_EX_INDEX_ENGINE);
        }
    }




    static if(!is(typeof(CRYPTO_EX_INDEX_RSA))) {
        private enum enumMixinStr_CRYPTO_EX_INDEX_RSA = `enum CRYPTO_EX_INDEX_RSA = 9;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_EX_INDEX_RSA); }))) {
            mixin(enumMixinStr_CRYPTO_EX_INDEX_RSA);
        }
    }




    static if(!is(typeof(CRYPTO_EX_INDEX_EC_KEY))) {
        private enum enumMixinStr_CRYPTO_EX_INDEX_EC_KEY = `enum CRYPTO_EX_INDEX_EC_KEY = 8;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_EX_INDEX_EC_KEY); }))) {
            mixin(enumMixinStr_CRYPTO_EX_INDEX_EC_KEY);
        }
    }




    static if(!is(typeof(CRYPTO_EX_INDEX_DSA))) {
        private enum enumMixinStr_CRYPTO_EX_INDEX_DSA = `enum CRYPTO_EX_INDEX_DSA = 7;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_EX_INDEX_DSA); }))) {
            mixin(enumMixinStr_CRYPTO_EX_INDEX_DSA);
        }
    }




    static if(!is(typeof(CRYPTO_EX_INDEX_DH))) {
        private enum enumMixinStr_CRYPTO_EX_INDEX_DH = `enum CRYPTO_EX_INDEX_DH = 6;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_EX_INDEX_DH); }))) {
            mixin(enumMixinStr_CRYPTO_EX_INDEX_DH);
        }
    }




    static if(!is(typeof(CRYPTO_EX_INDEX_X509_STORE_CTX))) {
        private enum enumMixinStr_CRYPTO_EX_INDEX_X509_STORE_CTX = `enum CRYPTO_EX_INDEX_X509_STORE_CTX = 5;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_EX_INDEX_X509_STORE_CTX); }))) {
            mixin(enumMixinStr_CRYPTO_EX_INDEX_X509_STORE_CTX);
        }
    }




    static if(!is(typeof(CRYPTO_EX_INDEX_X509_STORE))) {
        private enum enumMixinStr_CRYPTO_EX_INDEX_X509_STORE = `enum CRYPTO_EX_INDEX_X509_STORE = 4;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_EX_INDEX_X509_STORE); }))) {
            mixin(enumMixinStr_CRYPTO_EX_INDEX_X509_STORE);
        }
    }




    static if(!is(typeof(CRYPTO_EX_INDEX_X509))) {
        private enum enumMixinStr_CRYPTO_EX_INDEX_X509 = `enum CRYPTO_EX_INDEX_X509 = 3;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_EX_INDEX_X509); }))) {
            mixin(enumMixinStr_CRYPTO_EX_INDEX_X509);
        }
    }




    static if(!is(typeof(CRYPTO_EX_INDEX_SSL_SESSION))) {
        private enum enumMixinStr_CRYPTO_EX_INDEX_SSL_SESSION = `enum CRYPTO_EX_INDEX_SSL_SESSION = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_EX_INDEX_SSL_SESSION); }))) {
            mixin(enumMixinStr_CRYPTO_EX_INDEX_SSL_SESSION);
        }
    }




    static if(!is(typeof(CRYPTO_EX_INDEX_SSL_CTX))) {
        private enum enumMixinStr_CRYPTO_EX_INDEX_SSL_CTX = `enum CRYPTO_EX_INDEX_SSL_CTX = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_EX_INDEX_SSL_CTX); }))) {
            mixin(enumMixinStr_CRYPTO_EX_INDEX_SSL_CTX);
        }
    }




    static if(!is(typeof(CRYPTO_EX_INDEX_SSL))) {
        private enum enumMixinStr_CRYPTO_EX_INDEX_SSL = `enum CRYPTO_EX_INDEX_SSL = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_EX_INDEX_SSL); }))) {
            mixin(enumMixinStr_CRYPTO_EX_INDEX_SSL);
        }
    }




    static if(!is(typeof(CRYPTO_MEM_CHECK_DISABLE))) {
        private enum enumMixinStr_CRYPTO_MEM_CHECK_DISABLE = `enum CRYPTO_MEM_CHECK_DISABLE = 0x3;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_MEM_CHECK_DISABLE); }))) {
            mixin(enumMixinStr_CRYPTO_MEM_CHECK_DISABLE);
        }
    }




    static if(!is(typeof(CRYPTO_MEM_CHECK_ENABLE))) {
        private enum enumMixinStr_CRYPTO_MEM_CHECK_ENABLE = `enum CRYPTO_MEM_CHECK_ENABLE = 0x2;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_MEM_CHECK_ENABLE); }))) {
            mixin(enumMixinStr_CRYPTO_MEM_CHECK_ENABLE);
        }
    }




    static if(!is(typeof(CRYPTO_MEM_CHECK_ON))) {
        private enum enumMixinStr_CRYPTO_MEM_CHECK_ON = `enum CRYPTO_MEM_CHECK_ON = 0x1;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_MEM_CHECK_ON); }))) {
            mixin(enumMixinStr_CRYPTO_MEM_CHECK_ON);
        }
    }




    static if(!is(typeof(CRYPTO_MEM_CHECK_OFF))) {
        private enum enumMixinStr_CRYPTO_MEM_CHECK_OFF = `enum CRYPTO_MEM_CHECK_OFF = 0x0;`;
        static if(is(typeof({ mixin(enumMixinStr_CRYPTO_MEM_CHECK_OFF); }))) {
            mixin(enumMixinStr_CRYPTO_MEM_CHECK_OFF);
        }
    }




    static if(!is(typeof(SSLEAY_DIR))) {
        private enum enumMixinStr_SSLEAY_DIR = `enum SSLEAY_DIR = 4;`;
        static if(is(typeof({ mixin(enumMixinStr_SSLEAY_DIR); }))) {
            mixin(enumMixinStr_SSLEAY_DIR);
        }
    }




    static if(!is(typeof(SSLEAY_PLATFORM))) {
        private enum enumMixinStr_SSLEAY_PLATFORM = `enum SSLEAY_PLATFORM = 3;`;
        static if(is(typeof({ mixin(enumMixinStr_SSLEAY_PLATFORM); }))) {
            mixin(enumMixinStr_SSLEAY_PLATFORM);
        }
    }




    static if(!is(typeof(SSLEAY_BUILT_ON))) {
        private enum enumMixinStr_SSLEAY_BUILT_ON = `enum SSLEAY_BUILT_ON = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_SSLEAY_BUILT_ON); }))) {
            mixin(enumMixinStr_SSLEAY_BUILT_ON);
        }
    }




    static if(!is(typeof(SSLEAY_CFLAGS))) {
        private enum enumMixinStr_SSLEAY_CFLAGS = `enum SSLEAY_CFLAGS = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_SSLEAY_CFLAGS); }))) {
            mixin(enumMixinStr_SSLEAY_CFLAGS);
        }
    }




    static if(!is(typeof(SSLEAY_VERSION))) {
        private enum enumMixinStr_SSLEAY_VERSION = `enum SSLEAY_VERSION = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_SSLEAY_VERSION); }))) {
            mixin(enumMixinStr_SSLEAY_VERSION);
        }
    }




    static if(!is(typeof(SSLEAY_VERSION_NUMBER))) {
        private enum enumMixinStr_SSLEAY_VERSION_NUMBER = `enum SSLEAY_VERSION_NUMBER = 0x101010afL;`;
        static if(is(typeof({ mixin(enumMixinStr_SSLEAY_VERSION_NUMBER); }))) {
            mixin(enumMixinStr_SSLEAY_VERSION_NUMBER);
        }
    }




    static if(!is(typeof(SSLeay_version))) {
        private enum enumMixinStr_SSLeay_version = `enum SSLeay_version = OpenSSL_version;`;
        static if(is(typeof({ mixin(enumMixinStr_SSLeay_version); }))) {
            mixin(enumMixinStr_SSLeay_version);
        }
    }




    static if(!is(typeof(SSLeay))) {
        private enum enumMixinStr_SSLeay = `enum SSLeay = OpenSSL_version_num;`;
        static if(is(typeof({ mixin(enumMixinStr_SSLeay); }))) {
            mixin(enumMixinStr_SSLeay);
        }
    }






    static if(!is(typeof(CONF_R_VARIABLE_HAS_NO_VALUE))) {
        private enum enumMixinStr_CONF_R_VARIABLE_HAS_NO_VALUE = `enum CONF_R_VARIABLE_HAS_NO_VALUE = 104;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_R_VARIABLE_HAS_NO_VALUE); }))) {
            mixin(enumMixinStr_CONF_R_VARIABLE_HAS_NO_VALUE);
        }
    }




    static if(!is(typeof(CONF_R_VARIABLE_EXPANSION_TOO_LONG))) {
        private enum enumMixinStr_CONF_R_VARIABLE_EXPANSION_TOO_LONG = `enum CONF_R_VARIABLE_EXPANSION_TOO_LONG = 116;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_R_VARIABLE_EXPANSION_TOO_LONG); }))) {
            mixin(enumMixinStr_CONF_R_VARIABLE_EXPANSION_TOO_LONG);
        }
    }




    static if(!is(typeof(CONF_R_UNKNOWN_MODULE_NAME))) {
        private enum enumMixinStr_CONF_R_UNKNOWN_MODULE_NAME = `enum CONF_R_UNKNOWN_MODULE_NAME = 113;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_R_UNKNOWN_MODULE_NAME); }))) {
            mixin(enumMixinStr_CONF_R_UNKNOWN_MODULE_NAME);
        }
    }




    static if(!is(typeof(CONF_R_UNABLE_TO_CREATE_NEW_SECTION))) {
        private enum enumMixinStr_CONF_R_UNABLE_TO_CREATE_NEW_SECTION = `enum CONF_R_UNABLE_TO_CREATE_NEW_SECTION = 103;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_R_UNABLE_TO_CREATE_NEW_SECTION); }))) {
            mixin(enumMixinStr_CONF_R_UNABLE_TO_CREATE_NEW_SECTION);
        }
    }




    static if(!is(typeof(CONF_R_SSL_SECTION_NOT_FOUND))) {
        private enum enumMixinStr_CONF_R_SSL_SECTION_NOT_FOUND = `enum CONF_R_SSL_SECTION_NOT_FOUND = 120;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_R_SSL_SECTION_NOT_FOUND); }))) {
            mixin(enumMixinStr_CONF_R_SSL_SECTION_NOT_FOUND);
        }
    }




    static if(!is(typeof(CONF_R_SSL_SECTION_EMPTY))) {
        private enum enumMixinStr_CONF_R_SSL_SECTION_EMPTY = `enum CONF_R_SSL_SECTION_EMPTY = 119;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_R_SSL_SECTION_EMPTY); }))) {
            mixin(enumMixinStr_CONF_R_SSL_SECTION_EMPTY);
        }
    }




    static if(!is(typeof(CONF_R_SSL_COMMAND_SECTION_NOT_FOUND))) {
        private enum enumMixinStr_CONF_R_SSL_COMMAND_SECTION_NOT_FOUND = `enum CONF_R_SSL_COMMAND_SECTION_NOT_FOUND = 118;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_R_SSL_COMMAND_SECTION_NOT_FOUND); }))) {
            mixin(enumMixinStr_CONF_R_SSL_COMMAND_SECTION_NOT_FOUND);
        }
    }




    static if(!is(typeof(CONF_R_SSL_COMMAND_SECTION_EMPTY))) {
        private enum enumMixinStr_CONF_R_SSL_COMMAND_SECTION_EMPTY = `enum CONF_R_SSL_COMMAND_SECTION_EMPTY = 117;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_R_SSL_COMMAND_SECTION_EMPTY); }))) {
            mixin(enumMixinStr_CONF_R_SSL_COMMAND_SECTION_EMPTY);
        }
    }




    static if(!is(typeof(CONF_R_RECURSIVE_DIRECTORY_INCLUDE))) {
        private enum enumMixinStr_CONF_R_RECURSIVE_DIRECTORY_INCLUDE = `enum CONF_R_RECURSIVE_DIRECTORY_INCLUDE = 111;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_R_RECURSIVE_DIRECTORY_INCLUDE); }))) {
            mixin(enumMixinStr_CONF_R_RECURSIVE_DIRECTORY_INCLUDE);
        }
    }




    static if(!is(typeof(CONF_R_NUMBER_TOO_LARGE))) {
        private enum enumMixinStr_CONF_R_NUMBER_TOO_LARGE = `enum CONF_R_NUMBER_TOO_LARGE = 121;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_R_NUMBER_TOO_LARGE); }))) {
            mixin(enumMixinStr_CONF_R_NUMBER_TOO_LARGE);
        }
    }




    static if(!is(typeof(CONF_R_NO_VALUE))) {
        private enum enumMixinStr_CONF_R_NO_VALUE = `enum CONF_R_NO_VALUE = 108;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_R_NO_VALUE); }))) {
            mixin(enumMixinStr_CONF_R_NO_VALUE);
        }
    }




    static if(!is(typeof(CONF_R_NO_SUCH_FILE))) {
        private enum enumMixinStr_CONF_R_NO_SUCH_FILE = `enum CONF_R_NO_SUCH_FILE = 114;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_R_NO_SUCH_FILE); }))) {
            mixin(enumMixinStr_CONF_R_NO_SUCH_FILE);
        }
    }




    static if(!is(typeof(CONF_R_NO_SECTION))) {
        private enum enumMixinStr_CONF_R_NO_SECTION = `enum CONF_R_NO_SECTION = 107;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_R_NO_SECTION); }))) {
            mixin(enumMixinStr_CONF_R_NO_SECTION);
        }
    }




    static if(!is(typeof(CONF_R_NO_CONF_OR_ENVIRONMENT_VARIABLE))) {
        private enum enumMixinStr_CONF_R_NO_CONF_OR_ENVIRONMENT_VARIABLE = `enum CONF_R_NO_CONF_OR_ENVIRONMENT_VARIABLE = 106;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_R_NO_CONF_OR_ENVIRONMENT_VARIABLE); }))) {
            mixin(enumMixinStr_CONF_R_NO_CONF_OR_ENVIRONMENT_VARIABLE);
        }
    }




    static if(!is(typeof(CONF_R_NO_CONF))) {
        private enum enumMixinStr_CONF_R_NO_CONF = `enum CONF_R_NO_CONF = 105;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_R_NO_CONF); }))) {
            mixin(enumMixinStr_CONF_R_NO_CONF);
        }
    }




    static if(!is(typeof(CONF_R_NO_CLOSE_BRACE))) {
        private enum enumMixinStr_CONF_R_NO_CLOSE_BRACE = `enum CONF_R_NO_CLOSE_BRACE = 102;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_R_NO_CLOSE_BRACE); }))) {
            mixin(enumMixinStr_CONF_R_NO_CLOSE_BRACE);
        }
    }




    static if(!is(typeof(CONF_R_MODULE_INITIALIZATION_ERROR))) {
        private enum enumMixinStr_CONF_R_MODULE_INITIALIZATION_ERROR = `enum CONF_R_MODULE_INITIALIZATION_ERROR = 109;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_R_MODULE_INITIALIZATION_ERROR); }))) {
            mixin(enumMixinStr_CONF_R_MODULE_INITIALIZATION_ERROR);
        }
    }




    static if(!is(typeof(CONF_R_MISSING_INIT_FUNCTION))) {
        private enum enumMixinStr_CONF_R_MISSING_INIT_FUNCTION = `enum CONF_R_MISSING_INIT_FUNCTION = 112;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_R_MISSING_INIT_FUNCTION); }))) {
            mixin(enumMixinStr_CONF_R_MISSING_INIT_FUNCTION);
        }
    }




    static if(!is(typeof(CONF_R_MISSING_EQUAL_SIGN))) {
        private enum enumMixinStr_CONF_R_MISSING_EQUAL_SIGN = `enum CONF_R_MISSING_EQUAL_SIGN = 101;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_R_MISSING_EQUAL_SIGN); }))) {
            mixin(enumMixinStr_CONF_R_MISSING_EQUAL_SIGN);
        }
    }




    static if(!is(typeof(CONF_R_MISSING_CLOSE_SQUARE_BRACKET))) {
        private enum enumMixinStr_CONF_R_MISSING_CLOSE_SQUARE_BRACKET = `enum CONF_R_MISSING_CLOSE_SQUARE_BRACKET = 100;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_R_MISSING_CLOSE_SQUARE_BRACKET); }))) {
            mixin(enumMixinStr_CONF_R_MISSING_CLOSE_SQUARE_BRACKET);
        }
    }




    static if(!is(typeof(CONF_R_LIST_CANNOT_BE_NULL))) {
        private enum enumMixinStr_CONF_R_LIST_CANNOT_BE_NULL = `enum CONF_R_LIST_CANNOT_BE_NULL = 115;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_R_LIST_CANNOT_BE_NULL); }))) {
            mixin(enumMixinStr_CONF_R_LIST_CANNOT_BE_NULL);
        }
    }




    static if(!is(typeof(CONF_R_ERROR_LOADING_DSO))) {
        private enum enumMixinStr_CONF_R_ERROR_LOADING_DSO = `enum CONF_R_ERROR_LOADING_DSO = 110;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_R_ERROR_LOADING_DSO); }))) {
            mixin(enumMixinStr_CONF_R_ERROR_LOADING_DSO);
        }
    }




    static if(!is(typeof(CONF_F_STR_COPY))) {
        private enum enumMixinStr_CONF_F_STR_COPY = `enum CONF_F_STR_COPY = 101;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_F_STR_COPY); }))) {
            mixin(enumMixinStr_CONF_F_STR_COPY);
        }
    }




    static if(!is(typeof(CONF_F_SSL_MODULE_INIT))) {
        private enum enumMixinStr_CONF_F_SSL_MODULE_INIT = `enum CONF_F_SSL_MODULE_INIT = 123;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_F_SSL_MODULE_INIT); }))) {
            mixin(enumMixinStr_CONF_F_SSL_MODULE_INIT);
        }
    }




    static if(!is(typeof(CONF_F_PROCESS_INCLUDE))) {
        private enum enumMixinStr_CONF_F_PROCESS_INCLUDE = `enum CONF_F_PROCESS_INCLUDE = 116;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_F_PROCESS_INCLUDE); }))) {
            mixin(enumMixinStr_CONF_F_PROCESS_INCLUDE);
        }
    }




    static if(!is(typeof(CONF_F_NCONF_NEW))) {
        private enum enumMixinStr_CONF_F_NCONF_NEW = `enum CONF_F_NCONF_NEW = 111;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_F_NCONF_NEW); }))) {
            mixin(enumMixinStr_CONF_F_NCONF_NEW);
        }
    }




    static if(!is(typeof(CONF_F_NCONF_LOAD_FP))) {
        private enum enumMixinStr_CONF_F_NCONF_LOAD_FP = `enum CONF_F_NCONF_LOAD_FP = 114;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_F_NCONF_LOAD_FP); }))) {
            mixin(enumMixinStr_CONF_F_NCONF_LOAD_FP);
        }
    }




    static if(!is(typeof(CONF_F_NCONF_LOAD_BIO))) {
        private enum enumMixinStr_CONF_F_NCONF_LOAD_BIO = `enum CONF_F_NCONF_LOAD_BIO = 110;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_F_NCONF_LOAD_BIO); }))) {
            mixin(enumMixinStr_CONF_F_NCONF_LOAD_BIO);
        }
    }




    static if(!is(typeof(CONF_F_NCONF_LOAD))) {
        private enum enumMixinStr_CONF_F_NCONF_LOAD = `enum CONF_F_NCONF_LOAD = 113;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_F_NCONF_LOAD); }))) {
            mixin(enumMixinStr_CONF_F_NCONF_LOAD);
        }
    }




    static if(!is(typeof(CONF_F_NCONF_GET_STRING))) {
        private enum enumMixinStr_CONF_F_NCONF_GET_STRING = `enum CONF_F_NCONF_GET_STRING = 109;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_F_NCONF_GET_STRING); }))) {
            mixin(enumMixinStr_CONF_F_NCONF_GET_STRING);
        }
    }




    static if(!is(typeof(CONF_F_NCONF_GET_SECTION))) {
        private enum enumMixinStr_CONF_F_NCONF_GET_SECTION = `enum CONF_F_NCONF_GET_SECTION = 108;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_F_NCONF_GET_SECTION); }))) {
            mixin(enumMixinStr_CONF_F_NCONF_GET_SECTION);
        }
    }




    static if(!is(typeof(CONF_F_NCONF_GET_NUMBER_E))) {
        private enum enumMixinStr_CONF_F_NCONF_GET_NUMBER_E = `enum CONF_F_NCONF_GET_NUMBER_E = 112;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_F_NCONF_GET_NUMBER_E); }))) {
            mixin(enumMixinStr_CONF_F_NCONF_GET_NUMBER_E);
        }
    }




    static if(!is(typeof(CONF_F_NCONF_DUMP_FP))) {
        private enum enumMixinStr_CONF_F_NCONF_DUMP_FP = `enum CONF_F_NCONF_DUMP_FP = 106;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_F_NCONF_DUMP_FP); }))) {
            mixin(enumMixinStr_CONF_F_NCONF_DUMP_FP);
        }
    }




    static if(!is(typeof(CONF_F_NCONF_DUMP_BIO))) {
        private enum enumMixinStr_CONF_F_NCONF_DUMP_BIO = `enum CONF_F_NCONF_DUMP_BIO = 105;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_F_NCONF_DUMP_BIO); }))) {
            mixin(enumMixinStr_CONF_F_NCONF_DUMP_BIO);
        }
    }




    static if(!is(typeof(CONF_F_MODULE_RUN))) {
        private enum enumMixinStr_CONF_F_MODULE_RUN = `enum CONF_F_MODULE_RUN = 118;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_F_MODULE_RUN); }))) {
            mixin(enumMixinStr_CONF_F_MODULE_RUN);
        }
    }




    static if(!is(typeof(CONF_F_MODULE_LOAD_DSO))) {
        private enum enumMixinStr_CONF_F_MODULE_LOAD_DSO = `enum CONF_F_MODULE_LOAD_DSO = 117;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_F_MODULE_LOAD_DSO); }))) {
            mixin(enumMixinStr_CONF_F_MODULE_LOAD_DSO);
        }
    }




    static if(!is(typeof(CONF_F_MODULE_INIT))) {
        private enum enumMixinStr_CONF_F_MODULE_INIT = `enum CONF_F_MODULE_INIT = 115;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_F_MODULE_INIT); }))) {
            mixin(enumMixinStr_CONF_F_MODULE_INIT);
        }
    }




    static if(!is(typeof(CONF_F_MODULE_ADD))) {
        private enum enumMixinStr_CONF_F_MODULE_ADD = `enum CONF_F_MODULE_ADD = 122;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_F_MODULE_ADD); }))) {
            mixin(enumMixinStr_CONF_F_MODULE_ADD);
        }
    }




    static if(!is(typeof(CONF_F_GET_NEXT_FILE))) {
        private enum enumMixinStr_CONF_F_GET_NEXT_FILE = `enum CONF_F_GET_NEXT_FILE = 107;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_F_GET_NEXT_FILE); }))) {
            mixin(enumMixinStr_CONF_F_GET_NEXT_FILE);
        }
    }




    static if(!is(typeof(CONF_F_DEF_LOAD_BIO))) {
        private enum enumMixinStr_CONF_F_DEF_LOAD_BIO = `enum CONF_F_DEF_LOAD_BIO = 121;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_F_DEF_LOAD_BIO); }))) {
            mixin(enumMixinStr_CONF_F_DEF_LOAD_BIO);
        }
    }




    static if(!is(typeof(CONF_F_DEF_LOAD))) {
        private enum enumMixinStr_CONF_F_DEF_LOAD = `enum CONF_F_DEF_LOAD = 120;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_F_DEF_LOAD); }))) {
            mixin(enumMixinStr_CONF_F_DEF_LOAD);
        }
    }




    static if(!is(typeof(CONF_F_CONF_PARSE_LIST))) {
        private enum enumMixinStr_CONF_F_CONF_PARSE_LIST = `enum CONF_F_CONF_PARSE_LIST = 119;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_F_CONF_PARSE_LIST); }))) {
            mixin(enumMixinStr_CONF_F_CONF_PARSE_LIST);
        }
    }




    static if(!is(typeof(CONF_F_CONF_LOAD_FP))) {
        private enum enumMixinStr_CONF_F_CONF_LOAD_FP = `enum CONF_F_CONF_LOAD_FP = 103;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_F_CONF_LOAD_FP); }))) {
            mixin(enumMixinStr_CONF_F_CONF_LOAD_FP);
        }
    }




    static if(!is(typeof(CONF_F_CONF_LOAD))) {
        private enum enumMixinStr_CONF_F_CONF_LOAD = `enum CONF_F_CONF_LOAD = 100;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_F_CONF_LOAD); }))) {
            mixin(enumMixinStr_CONF_F_CONF_LOAD);
        }
    }




    static if(!is(typeof(CONF_F_CONF_DUMP_FP))) {
        private enum enumMixinStr_CONF_F_CONF_DUMP_FP = `enum CONF_F_CONF_DUMP_FP = 104;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_F_CONF_DUMP_FP); }))) {
            mixin(enumMixinStr_CONF_F_CONF_DUMP_FP);
        }
    }
    static if(!is(typeof(CONF_MFLAGS_DEFAULT_SECTION))) {
        private enum enumMixinStr_CONF_MFLAGS_DEFAULT_SECTION = `enum CONF_MFLAGS_DEFAULT_SECTION = 0x20;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_MFLAGS_DEFAULT_SECTION); }))) {
            mixin(enumMixinStr_CONF_MFLAGS_DEFAULT_SECTION);
        }
    }




    static if(!is(typeof(CONF_MFLAGS_IGNORE_MISSING_FILE))) {
        private enum enumMixinStr_CONF_MFLAGS_IGNORE_MISSING_FILE = `enum CONF_MFLAGS_IGNORE_MISSING_FILE = 0x10;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_MFLAGS_IGNORE_MISSING_FILE); }))) {
            mixin(enumMixinStr_CONF_MFLAGS_IGNORE_MISSING_FILE);
        }
    }




    static if(!is(typeof(CONF_MFLAGS_NO_DSO))) {
        private enum enumMixinStr_CONF_MFLAGS_NO_DSO = `enum CONF_MFLAGS_NO_DSO = 0x8;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_MFLAGS_NO_DSO); }))) {
            mixin(enumMixinStr_CONF_MFLAGS_NO_DSO);
        }
    }




    static if(!is(typeof(CONF_MFLAGS_SILENT))) {
        private enum enumMixinStr_CONF_MFLAGS_SILENT = `enum CONF_MFLAGS_SILENT = 0x4;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_MFLAGS_SILENT); }))) {
            mixin(enumMixinStr_CONF_MFLAGS_SILENT);
        }
    }




    static if(!is(typeof(CONF_MFLAGS_IGNORE_RETURN_CODES))) {
        private enum enumMixinStr_CONF_MFLAGS_IGNORE_RETURN_CODES = `enum CONF_MFLAGS_IGNORE_RETURN_CODES = 0x2;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_MFLAGS_IGNORE_RETURN_CODES); }))) {
            mixin(enumMixinStr_CONF_MFLAGS_IGNORE_RETURN_CODES);
        }
    }




    static if(!is(typeof(CONF_MFLAGS_IGNORE_ERRORS))) {
        private enum enumMixinStr_CONF_MFLAGS_IGNORE_ERRORS = `enum CONF_MFLAGS_IGNORE_ERRORS = 0x1;`;
        static if(is(typeof({ mixin(enumMixinStr_CONF_MFLAGS_IGNORE_ERRORS); }))) {
            mixin(enumMixinStr_CONF_MFLAGS_IGNORE_ERRORS);
        }
    }






    static if(!is(typeof(BUF_F_BUF_MEM_NEW))) {
        private enum enumMixinStr_BUF_F_BUF_MEM_NEW = `enum BUF_F_BUF_MEM_NEW = 101;`;
        static if(is(typeof({ mixin(enumMixinStr_BUF_F_BUF_MEM_NEW); }))) {
            mixin(enumMixinStr_BUF_F_BUF_MEM_NEW);
        }
    }




    static if(!is(typeof(BUF_F_BUF_MEM_GROW_CLEAN))) {
        private enum enumMixinStr_BUF_F_BUF_MEM_GROW_CLEAN = `enum BUF_F_BUF_MEM_GROW_CLEAN = 105;`;
        static if(is(typeof({ mixin(enumMixinStr_BUF_F_BUF_MEM_GROW_CLEAN); }))) {
            mixin(enumMixinStr_BUF_F_BUF_MEM_GROW_CLEAN);
        }
    }




    static if(!is(typeof(BUF_F_BUF_MEM_GROW))) {
        private enum enumMixinStr_BUF_F_BUF_MEM_GROW = `enum BUF_F_BUF_MEM_GROW = 100;`;
        static if(is(typeof({ mixin(enumMixinStr_BUF_F_BUF_MEM_GROW); }))) {
            mixin(enumMixinStr_BUF_F_BUF_MEM_GROW);
        }
    }






    static if(!is(typeof(BUF_MEM_FLAG_SECURE))) {
        private enum enumMixinStr_BUF_MEM_FLAG_SECURE = `enum BUF_MEM_FLAG_SECURE = 0x01;`;
        static if(is(typeof({ mixin(enumMixinStr_BUF_MEM_FLAG_SECURE); }))) {
            mixin(enumMixinStr_BUF_MEM_FLAG_SECURE);
        }
    }
    static if(!is(typeof(BN_R_TOO_MANY_TEMPORARY_VARIABLES))) {
        private enum enumMixinStr_BN_R_TOO_MANY_TEMPORARY_VARIABLES = `enum BN_R_TOO_MANY_TEMPORARY_VARIABLES = 109;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_R_TOO_MANY_TEMPORARY_VARIABLES); }))) {
            mixin(enumMixinStr_BN_R_TOO_MANY_TEMPORARY_VARIABLES);
        }
    }




    static if(!is(typeof(BN_R_TOO_MANY_ITERATIONS))) {
        private enum enumMixinStr_BN_R_TOO_MANY_ITERATIONS = `enum BN_R_TOO_MANY_ITERATIONS = 113;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_R_TOO_MANY_ITERATIONS); }))) {
            mixin(enumMixinStr_BN_R_TOO_MANY_ITERATIONS);
        }
    }




    static if(!is(typeof(BN_R_P_IS_NOT_PRIME))) {
        private enum enumMixinStr_BN_R_P_IS_NOT_PRIME = `enum BN_R_P_IS_NOT_PRIME = 112;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_R_P_IS_NOT_PRIME); }))) {
            mixin(enumMixinStr_BN_R_P_IS_NOT_PRIME);
        }
    }




    static if(!is(typeof(BN_R_PRIVATE_KEY_TOO_LARGE))) {
        private enum enumMixinStr_BN_R_PRIVATE_KEY_TOO_LARGE = `enum BN_R_PRIVATE_KEY_TOO_LARGE = 117;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_R_PRIVATE_KEY_TOO_LARGE); }))) {
            mixin(enumMixinStr_BN_R_PRIVATE_KEY_TOO_LARGE);
        }
    }




    static if(!is(typeof(BN_R_NO_SOLUTION))) {
        private enum enumMixinStr_BN_R_NO_SOLUTION = `enum BN_R_NO_SOLUTION = 116;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_R_NO_SOLUTION); }))) {
            mixin(enumMixinStr_BN_R_NO_SOLUTION);
        }
    }




    static if(!is(typeof(BN_R_NO_INVERSE))) {
        private enum enumMixinStr_BN_R_NO_INVERSE = `enum BN_R_NO_INVERSE = 108;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_R_NO_INVERSE); }))) {
            mixin(enumMixinStr_BN_R_NO_INVERSE);
        }
    }




    static if(!is(typeof(BN_R_NOT_INITIALIZED))) {
        private enum enumMixinStr_BN_R_NOT_INITIALIZED = `enum BN_R_NOT_INITIALIZED = 107;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_R_NOT_INITIALIZED); }))) {
            mixin(enumMixinStr_BN_R_NOT_INITIALIZED);
        }
    }




    static if(!is(typeof(BN_R_NOT_A_SQUARE))) {
        private enum enumMixinStr_BN_R_NOT_A_SQUARE = `enum BN_R_NOT_A_SQUARE = 111;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_R_NOT_A_SQUARE); }))) {
            mixin(enumMixinStr_BN_R_NOT_A_SQUARE);
        }
    }




    static if(!is(typeof(BN_R_INVALID_SHIFT))) {
        private enum enumMixinStr_BN_R_INVALID_SHIFT = `enum BN_R_INVALID_SHIFT = 119;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_R_INVALID_SHIFT); }))) {
            mixin(enumMixinStr_BN_R_INVALID_SHIFT);
        }
    }




    static if(!is(typeof(BN_R_INVALID_RANGE))) {
        private enum enumMixinStr_BN_R_INVALID_RANGE = `enum BN_R_INVALID_RANGE = 115;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_R_INVALID_RANGE); }))) {
            mixin(enumMixinStr_BN_R_INVALID_RANGE);
        }
    }




    static if(!is(typeof(BN_R_INVALID_LENGTH))) {
        private enum enumMixinStr_BN_R_INVALID_LENGTH = `enum BN_R_INVALID_LENGTH = 106;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_R_INVALID_LENGTH); }))) {
            mixin(enumMixinStr_BN_R_INVALID_LENGTH);
        }
    }




    static if(!is(typeof(BN_R_INPUT_NOT_REDUCED))) {
        private enum enumMixinStr_BN_R_INPUT_NOT_REDUCED = `enum BN_R_INPUT_NOT_REDUCED = 110;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_R_INPUT_NOT_REDUCED); }))) {
            mixin(enumMixinStr_BN_R_INPUT_NOT_REDUCED);
        }
    }




    static if(!is(typeof(BN_R_EXPAND_ON_STATIC_BIGNUM_DATA))) {
        private enum enumMixinStr_BN_R_EXPAND_ON_STATIC_BIGNUM_DATA = `enum BN_R_EXPAND_ON_STATIC_BIGNUM_DATA = 105;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_R_EXPAND_ON_STATIC_BIGNUM_DATA); }))) {
            mixin(enumMixinStr_BN_R_EXPAND_ON_STATIC_BIGNUM_DATA);
        }
    }




    static if(!is(typeof(BN_R_ENCODING_ERROR))) {
        private enum enumMixinStr_BN_R_ENCODING_ERROR = `enum BN_R_ENCODING_ERROR = 104;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_R_ENCODING_ERROR); }))) {
            mixin(enumMixinStr_BN_R_ENCODING_ERROR);
        }
    }




    static if(!is(typeof(BN_R_DIV_BY_ZERO))) {
        private enum enumMixinStr_BN_R_DIV_BY_ZERO = `enum BN_R_DIV_BY_ZERO = 103;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_R_DIV_BY_ZERO); }))) {
            mixin(enumMixinStr_BN_R_DIV_BY_ZERO);
        }
    }




    static if(!is(typeof(BN_R_CALLED_WITH_EVEN_MODULUS))) {
        private enum enumMixinStr_BN_R_CALLED_WITH_EVEN_MODULUS = `enum BN_R_CALLED_WITH_EVEN_MODULUS = 102;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_R_CALLED_WITH_EVEN_MODULUS); }))) {
            mixin(enumMixinStr_BN_R_CALLED_WITH_EVEN_MODULUS);
        }
    }




    static if(!is(typeof(BN_R_BITS_TOO_SMALL))) {
        private enum enumMixinStr_BN_R_BITS_TOO_SMALL = `enum BN_R_BITS_TOO_SMALL = 118;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_R_BITS_TOO_SMALL); }))) {
            mixin(enumMixinStr_BN_R_BITS_TOO_SMALL);
        }
    }




    static if(!is(typeof(BN_R_BIGNUM_TOO_LONG))) {
        private enum enumMixinStr_BN_R_BIGNUM_TOO_LONG = `enum BN_R_BIGNUM_TOO_LONG = 114;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_R_BIGNUM_TOO_LONG); }))) {
            mixin(enumMixinStr_BN_R_BIGNUM_TOO_LONG);
        }
    }




    static if(!is(typeof(BN_R_BAD_RECIPROCAL))) {
        private enum enumMixinStr_BN_R_BAD_RECIPROCAL = `enum BN_R_BAD_RECIPROCAL = 101;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_R_BAD_RECIPROCAL); }))) {
            mixin(enumMixinStr_BN_R_BAD_RECIPROCAL);
        }
    }




    static if(!is(typeof(BN_R_ARG2_LT_ARG3))) {
        private enum enumMixinStr_BN_R_ARG2_LT_ARG3 = `enum BN_R_ARG2_LT_ARG3 = 100;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_R_ARG2_LT_ARG3); }))) {
            mixin(enumMixinStr_BN_R_ARG2_LT_ARG3);
        }
    }




    static if(!is(typeof(BN_F_BN_USUB))) {
        private enum enumMixinStr_BN_F_BN_USUB = `enum BN_F_BN_USUB = 115;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_USUB); }))) {
            mixin(enumMixinStr_BN_F_BN_USUB);
        }
    }




    static if(!is(typeof(BN_F_BN_STACK_PUSH))) {
        private enum enumMixinStr_BN_F_BN_STACK_PUSH = `enum BN_F_BN_STACK_PUSH = 148;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_STACK_PUSH); }))) {
            mixin(enumMixinStr_BN_F_BN_STACK_PUSH);
        }
    }




    static if(!is(typeof(BN_F_BN_SET_WORDS))) {
        private enum enumMixinStr_BN_F_BN_SET_WORDS = `enum BN_F_BN_SET_WORDS = 144;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_SET_WORDS); }))) {
            mixin(enumMixinStr_BN_F_BN_SET_WORDS);
        }
    }




    static if(!is(typeof(BN_F_BN_RSHIFT))) {
        private enum enumMixinStr_BN_F_BN_RSHIFT = `enum BN_F_BN_RSHIFT = 146;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_RSHIFT); }))) {
            mixin(enumMixinStr_BN_F_BN_RSHIFT);
        }
    }




    static if(!is(typeof(BN_F_BN_RECP_CTX_NEW))) {
        private enum enumMixinStr_BN_F_BN_RECP_CTX_NEW = `enum BN_F_BN_RECP_CTX_NEW = 150;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_RECP_CTX_NEW); }))) {
            mixin(enumMixinStr_BN_F_BN_RECP_CTX_NEW);
        }
    }




    static if(!is(typeof(BN_F_BN_RAND_RANGE))) {
        private enum enumMixinStr_BN_F_BN_RAND_RANGE = `enum BN_F_BN_RAND_RANGE = 122;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_RAND_RANGE); }))) {
            mixin(enumMixinStr_BN_F_BN_RAND_RANGE);
        }
    }




    static if(!is(typeof(BN_F_BN_RAND))) {
        private enum enumMixinStr_BN_F_BN_RAND = `enum BN_F_BN_RAND = 114;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_RAND); }))) {
            mixin(enumMixinStr_BN_F_BN_RAND);
        }
    }




    static if(!is(typeof(BN_F_BN_POOL_GET))) {
        private enum enumMixinStr_BN_F_BN_POOL_GET = `enum BN_F_BN_POOL_GET = 147;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_POOL_GET); }))) {
            mixin(enumMixinStr_BN_F_BN_POOL_GET);
        }
    }




    static if(!is(typeof(BN_F_BN_NEW))) {
        private enum enumMixinStr_BN_F_BN_NEW = `enum BN_F_BN_NEW = 113;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_NEW); }))) {
            mixin(enumMixinStr_BN_F_BN_NEW);
        }
    }




    static if(!is(typeof(BN_F_BN_MPI2BN))) {
        private enum enumMixinStr_BN_F_BN_MPI2BN = `enum BN_F_BN_MPI2BN = 112;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_MPI2BN); }))) {
            mixin(enumMixinStr_BN_F_BN_MPI2BN);
        }
    }




    static if(!is(typeof(BN_F_BN_MONT_CTX_NEW))) {
        private enum enumMixinStr_BN_F_BN_MONT_CTX_NEW = `enum BN_F_BN_MONT_CTX_NEW = 149;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_MONT_CTX_NEW); }))) {
            mixin(enumMixinStr_BN_F_BN_MONT_CTX_NEW);
        }
    }




    static if(!is(typeof(BN_F_BN_MOD_SQRT))) {
        private enum enumMixinStr_BN_F_BN_MOD_SQRT = `enum BN_F_BN_MOD_SQRT = 121;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_MOD_SQRT); }))) {
            mixin(enumMixinStr_BN_F_BN_MOD_SQRT);
        }
    }




    static if(!is(typeof(BN_F_BN_MOD_LSHIFT_QUICK))) {
        private enum enumMixinStr_BN_F_BN_MOD_LSHIFT_QUICK = `enum BN_F_BN_MOD_LSHIFT_QUICK = 119;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_MOD_LSHIFT_QUICK); }))) {
            mixin(enumMixinStr_BN_F_BN_MOD_LSHIFT_QUICK);
        }
    }




    static if(!is(typeof(BN_F_BN_MOD_INVERSE_NO_BRANCH))) {
        private enum enumMixinStr_BN_F_BN_MOD_INVERSE_NO_BRANCH = `enum BN_F_BN_MOD_INVERSE_NO_BRANCH = 139;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_MOD_INVERSE_NO_BRANCH); }))) {
            mixin(enumMixinStr_BN_F_BN_MOD_INVERSE_NO_BRANCH);
        }
    }




    static if(!is(typeof(BN_F_BN_MOD_INVERSE))) {
        private enum enumMixinStr_BN_F_BN_MOD_INVERSE = `enum BN_F_BN_MOD_INVERSE = 110;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_MOD_INVERSE); }))) {
            mixin(enumMixinStr_BN_F_BN_MOD_INVERSE);
        }
    }




    static if(!is(typeof(BN_F_BN_MOD_EXP_SIMPLE))) {
        private enum enumMixinStr_BN_F_BN_MOD_EXP_SIMPLE = `enum BN_F_BN_MOD_EXP_SIMPLE = 126;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_MOD_EXP_SIMPLE); }))) {
            mixin(enumMixinStr_BN_F_BN_MOD_EXP_SIMPLE);
        }
    }




    static if(!is(typeof(BN_F_BN_MOD_EXP_RECP))) {
        private enum enumMixinStr_BN_F_BN_MOD_EXP_RECP = `enum BN_F_BN_MOD_EXP_RECP = 125;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_MOD_EXP_RECP); }))) {
            mixin(enumMixinStr_BN_F_BN_MOD_EXP_RECP);
        }
    }




    static if(!is(typeof(BN_F_BN_MOD_EXP_MONT_WORD))) {
        private enum enumMixinStr_BN_F_BN_MOD_EXP_MONT_WORD = `enum BN_F_BN_MOD_EXP_MONT_WORD = 117;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_MOD_EXP_MONT_WORD); }))) {
            mixin(enumMixinStr_BN_F_BN_MOD_EXP_MONT_WORD);
        }
    }




    static if(!is(typeof(BN_F_BN_MOD_EXP_MONT_CONSTTIME))) {
        private enum enumMixinStr_BN_F_BN_MOD_EXP_MONT_CONSTTIME = `enum BN_F_BN_MOD_EXP_MONT_CONSTTIME = 124;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_MOD_EXP_MONT_CONSTTIME); }))) {
            mixin(enumMixinStr_BN_F_BN_MOD_EXP_MONT_CONSTTIME);
        }
    }




    static if(!is(typeof(BN_F_BN_MOD_EXP_MONT))) {
        private enum enumMixinStr_BN_F_BN_MOD_EXP_MONT = `enum BN_F_BN_MOD_EXP_MONT = 109;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_MOD_EXP_MONT); }))) {
            mixin(enumMixinStr_BN_F_BN_MOD_EXP_MONT);
        }
    }




    static if(!is(typeof(BN_F_BN_MOD_EXP2_MONT))) {
        private enum enumMixinStr_BN_F_BN_MOD_EXP2_MONT = `enum BN_F_BN_MOD_EXP2_MONT = 118;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_MOD_EXP2_MONT); }))) {
            mixin(enumMixinStr_BN_F_BN_MOD_EXP2_MONT);
        }
    }




    static if(!is(typeof(BN_F_BN_LSHIFT))) {
        private enum enumMixinStr_BN_F_BN_LSHIFT = `enum BN_F_BN_LSHIFT = 145;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_LSHIFT); }))) {
            mixin(enumMixinStr_BN_F_BN_LSHIFT);
        }
    }




    static if(!is(typeof(BN_F_BN_GF2M_MOD_SQRT))) {
        private enum enumMixinStr_BN_F_BN_GF2M_MOD_SQRT = `enum BN_F_BN_GF2M_MOD_SQRT = 137;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_GF2M_MOD_SQRT); }))) {
            mixin(enumMixinStr_BN_F_BN_GF2M_MOD_SQRT);
        }
    }




    static if(!is(typeof(BN_F_BN_GF2M_MOD_SQR))) {
        private enum enumMixinStr_BN_F_BN_GF2M_MOD_SQR = `enum BN_F_BN_GF2M_MOD_SQR = 136;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_GF2M_MOD_SQR); }))) {
            mixin(enumMixinStr_BN_F_BN_GF2M_MOD_SQR);
        }
    }




    static if(!is(typeof(BN_F_BN_GF2M_MOD_SOLVE_QUAD_ARR))) {
        private enum enumMixinStr_BN_F_BN_GF2M_MOD_SOLVE_QUAD_ARR = `enum BN_F_BN_GF2M_MOD_SOLVE_QUAD_ARR = 135;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_GF2M_MOD_SOLVE_QUAD_ARR); }))) {
            mixin(enumMixinStr_BN_F_BN_GF2M_MOD_SOLVE_QUAD_ARR);
        }
    }




    static if(!is(typeof(BN_F_BN_GF2M_MOD_SOLVE_QUAD))) {
        private enum enumMixinStr_BN_F_BN_GF2M_MOD_SOLVE_QUAD = `enum BN_F_BN_GF2M_MOD_SOLVE_QUAD = 134;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_GF2M_MOD_SOLVE_QUAD); }))) {
            mixin(enumMixinStr_BN_F_BN_GF2M_MOD_SOLVE_QUAD);
        }
    }




    static if(!is(typeof(BN_F_BN_GF2M_MOD_MUL))) {
        private enum enumMixinStr_BN_F_BN_GF2M_MOD_MUL = `enum BN_F_BN_GF2M_MOD_MUL = 133;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_GF2M_MOD_MUL); }))) {
            mixin(enumMixinStr_BN_F_BN_GF2M_MOD_MUL);
        }
    }




    static if(!is(typeof(BN_F_BN_GF2M_MOD_EXP))) {
        private enum enumMixinStr_BN_F_BN_GF2M_MOD_EXP = `enum BN_F_BN_GF2M_MOD_EXP = 132;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_GF2M_MOD_EXP); }))) {
            mixin(enumMixinStr_BN_F_BN_GF2M_MOD_EXP);
        }
    }




    static if(!is(typeof(BN_F_BN_GF2M_MOD))) {
        private enum enumMixinStr_BN_F_BN_GF2M_MOD = `enum BN_F_BN_GF2M_MOD = 131;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_GF2M_MOD); }))) {
            mixin(enumMixinStr_BN_F_BN_GF2M_MOD);
        }
    }




    static if(!is(typeof(BN_F_BN_GENERATE_PRIME_EX))) {
        private enum enumMixinStr_BN_F_BN_GENERATE_PRIME_EX = `enum BN_F_BN_GENERATE_PRIME_EX = 141;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_GENERATE_PRIME_EX); }))) {
            mixin(enumMixinStr_BN_F_BN_GENERATE_PRIME_EX);
        }
    }




    static if(!is(typeof(BN_F_BN_GENERATE_DSA_NONCE))) {
        private enum enumMixinStr_BN_F_BN_GENERATE_DSA_NONCE = `enum BN_F_BN_GENERATE_DSA_NONCE = 140;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_GENERATE_DSA_NONCE); }))) {
            mixin(enumMixinStr_BN_F_BN_GENERATE_DSA_NONCE);
        }
    }




    static if(!is(typeof(BN_F_BN_GENCB_NEW))) {
        private enum enumMixinStr_BN_F_BN_GENCB_NEW = `enum BN_F_BN_GENCB_NEW = 143;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_GENCB_NEW); }))) {
            mixin(enumMixinStr_BN_F_BN_GENCB_NEW);
        }
    }




    static if(!is(typeof(BN_F_BN_EXPAND_INTERNAL))) {
        private enum enumMixinStr_BN_F_BN_EXPAND_INTERNAL = `enum BN_F_BN_EXPAND_INTERNAL = 120;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_EXPAND_INTERNAL); }))) {
            mixin(enumMixinStr_BN_F_BN_EXPAND_INTERNAL);
        }
    }




    static if(!is(typeof(BN_F_BN_EXP))) {
        private enum enumMixinStr_BN_F_BN_EXP = `enum BN_F_BN_EXP = 123;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_EXP); }))) {
            mixin(enumMixinStr_BN_F_BN_EXP);
        }
    }




    static if(!is(typeof(BN_F_BN_DIV_RECP))) {
        private enum enumMixinStr_BN_F_BN_DIV_RECP = `enum BN_F_BN_DIV_RECP = 130;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_DIV_RECP); }))) {
            mixin(enumMixinStr_BN_F_BN_DIV_RECP);
        }
    }




    static if(!is(typeof(BN_F_BN_DIV))) {
        private enum enumMixinStr_BN_F_BN_DIV = `enum BN_F_BN_DIV = 107;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_DIV); }))) {
            mixin(enumMixinStr_BN_F_BN_DIV);
        }
    }




    static if(!is(typeof(BN_F_BN_CTX_START))) {
        private enum enumMixinStr_BN_F_BN_CTX_START = `enum BN_F_BN_CTX_START = 129;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_CTX_START); }))) {
            mixin(enumMixinStr_BN_F_BN_CTX_START);
        }
    }




    static if(!is(typeof(BN_F_BN_CTX_NEW))) {
        private enum enumMixinStr_BN_F_BN_CTX_NEW = `enum BN_F_BN_CTX_NEW = 106;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_CTX_NEW); }))) {
            mixin(enumMixinStr_BN_F_BN_CTX_NEW);
        }
    }




    static if(!is(typeof(BN_F_BN_CTX_GET))) {
        private enum enumMixinStr_BN_F_BN_CTX_GET = `enum BN_F_BN_CTX_GET = 116;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_CTX_GET); }))) {
            mixin(enumMixinStr_BN_F_BN_CTX_GET);
        }
    }




    static if(!is(typeof(BN_F_BN_COMPUTE_WNAF))) {
        private enum enumMixinStr_BN_F_BN_COMPUTE_WNAF = `enum BN_F_BN_COMPUTE_WNAF = 142;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_COMPUTE_WNAF); }))) {
            mixin(enumMixinStr_BN_F_BN_COMPUTE_WNAF);
        }
    }




    static if(!is(typeof(BN_F_BN_BN2HEX))) {
        private enum enumMixinStr_BN_F_BN_BN2HEX = `enum BN_F_BN_BN2HEX = 105;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_BN2HEX); }))) {
            mixin(enumMixinStr_BN_F_BN_BN2HEX);
        }
    }




    static if(!is(typeof(BN_F_BN_BN2DEC))) {
        private enum enumMixinStr_BN_F_BN_BN2DEC = `enum BN_F_BN_BN2DEC = 104;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_BN2DEC); }))) {
            mixin(enumMixinStr_BN_F_BN_BN2DEC);
        }
    }




    static if(!is(typeof(BN_F_BN_BLINDING_UPDATE))) {
        private enum enumMixinStr_BN_F_BN_BLINDING_UPDATE = `enum BN_F_BN_BLINDING_UPDATE = 103;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_BLINDING_UPDATE); }))) {
            mixin(enumMixinStr_BN_F_BN_BLINDING_UPDATE);
        }
    }




    static if(!is(typeof(BN_F_BN_BLINDING_NEW))) {
        private enum enumMixinStr_BN_F_BN_BLINDING_NEW = `enum BN_F_BN_BLINDING_NEW = 102;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_BLINDING_NEW); }))) {
            mixin(enumMixinStr_BN_F_BN_BLINDING_NEW);
        }
    }




    static if(!is(typeof(BN_F_BN_BLINDING_INVERT_EX))) {
        private enum enumMixinStr_BN_F_BN_BLINDING_INVERT_EX = `enum BN_F_BN_BLINDING_INVERT_EX = 101;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_BLINDING_INVERT_EX); }))) {
            mixin(enumMixinStr_BN_F_BN_BLINDING_INVERT_EX);
        }
    }




    static if(!is(typeof(BN_F_BN_BLINDING_CREATE_PARAM))) {
        private enum enumMixinStr_BN_F_BN_BLINDING_CREATE_PARAM = `enum BN_F_BN_BLINDING_CREATE_PARAM = 128;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_BLINDING_CREATE_PARAM); }))) {
            mixin(enumMixinStr_BN_F_BN_BLINDING_CREATE_PARAM);
        }
    }




    static if(!is(typeof(BN_F_BN_BLINDING_CONVERT_EX))) {
        private enum enumMixinStr_BN_F_BN_BLINDING_CONVERT_EX = `enum BN_F_BN_BLINDING_CONVERT_EX = 100;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BN_BLINDING_CONVERT_EX); }))) {
            mixin(enumMixinStr_BN_F_BN_BLINDING_CONVERT_EX);
        }
    }




    static if(!is(typeof(BN_F_BNRAND_RANGE))) {
        private enum enumMixinStr_BN_F_BNRAND_RANGE = `enum BN_F_BNRAND_RANGE = 138;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BNRAND_RANGE); }))) {
            mixin(enumMixinStr_BN_F_BNRAND_RANGE);
        }
    }




    static if(!is(typeof(BN_F_BNRAND))) {
        private enum enumMixinStr_BN_F_BNRAND = `enum BN_F_BNRAND = 127;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_F_BNRAND); }))) {
            mixin(enumMixinStr_BN_F_BNRAND);
        }
    }






    static if(!is(typeof(get_rfc3526_prime_8192))) {
        private enum enumMixinStr_get_rfc3526_prime_8192 = `enum get_rfc3526_prime_8192 = BN_get_rfc3526_prime_8192;`;
        static if(is(typeof({ mixin(enumMixinStr_get_rfc3526_prime_8192); }))) {
            mixin(enumMixinStr_get_rfc3526_prime_8192);
        }
    }




    static if(!is(typeof(get_rfc3526_prime_6144))) {
        private enum enumMixinStr_get_rfc3526_prime_6144 = `enum get_rfc3526_prime_6144 = BN_get_rfc3526_prime_6144;`;
        static if(is(typeof({ mixin(enumMixinStr_get_rfc3526_prime_6144); }))) {
            mixin(enumMixinStr_get_rfc3526_prime_6144);
        }
    }




    static if(!is(typeof(get_rfc3526_prime_4096))) {
        private enum enumMixinStr_get_rfc3526_prime_4096 = `enum get_rfc3526_prime_4096 = BN_get_rfc3526_prime_4096;`;
        static if(is(typeof({ mixin(enumMixinStr_get_rfc3526_prime_4096); }))) {
            mixin(enumMixinStr_get_rfc3526_prime_4096);
        }
    }




    static if(!is(typeof(get_rfc3526_prime_3072))) {
        private enum enumMixinStr_get_rfc3526_prime_3072 = `enum get_rfc3526_prime_3072 = BN_get_rfc3526_prime_3072;`;
        static if(is(typeof({ mixin(enumMixinStr_get_rfc3526_prime_3072); }))) {
            mixin(enumMixinStr_get_rfc3526_prime_3072);
        }
    }




    static if(!is(typeof(get_rfc3526_prime_2048))) {
        private enum enumMixinStr_get_rfc3526_prime_2048 = `enum get_rfc3526_prime_2048 = BN_get_rfc3526_prime_2048;`;
        static if(is(typeof({ mixin(enumMixinStr_get_rfc3526_prime_2048); }))) {
            mixin(enumMixinStr_get_rfc3526_prime_2048);
        }
    }




    static if(!is(typeof(get_rfc3526_prime_1536))) {
        private enum enumMixinStr_get_rfc3526_prime_1536 = `enum get_rfc3526_prime_1536 = BN_get_rfc3526_prime_1536;`;
        static if(is(typeof({ mixin(enumMixinStr_get_rfc3526_prime_1536); }))) {
            mixin(enumMixinStr_get_rfc3526_prime_1536);
        }
    }




    static if(!is(typeof(get_rfc2409_prime_1024))) {
        private enum enumMixinStr_get_rfc2409_prime_1024 = `enum get_rfc2409_prime_1024 = BN_get_rfc2409_prime_1024;`;
        static if(is(typeof({ mixin(enumMixinStr_get_rfc2409_prime_1024); }))) {
            mixin(enumMixinStr_get_rfc2409_prime_1024);
        }
    }




    static if(!is(typeof(get_rfc2409_prime_768))) {
        private enum enumMixinStr_get_rfc2409_prime_768 = `enum get_rfc2409_prime_768 = BN_get_rfc2409_prime_768;`;
        static if(is(typeof({ mixin(enumMixinStr_get_rfc2409_prime_768); }))) {
            mixin(enumMixinStr_get_rfc2409_prime_768);
        }
    }
    static if(!is(typeof(BN_BLINDING_NO_RECREATE))) {
        private enum enumMixinStr_BN_BLINDING_NO_RECREATE = `enum BN_BLINDING_NO_RECREATE = 0x00000002;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_BLINDING_NO_RECREATE); }))) {
            mixin(enumMixinStr_BN_BLINDING_NO_RECREATE);
        }
    }




    static if(!is(typeof(BN_BLINDING_NO_UPDATE))) {
        private enum enumMixinStr_BN_BLINDING_NO_UPDATE = `enum BN_BLINDING_NO_UPDATE = 0x00000001;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_BLINDING_NO_UPDATE); }))) {
            mixin(enumMixinStr_BN_BLINDING_NO_UPDATE);
        }
    }
    static if(!is(typeof(BN_prime_checks))) {
        private enum enumMixinStr_BN_prime_checks = `enum BN_prime_checks = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_prime_checks); }))) {
            mixin(enumMixinStr_BN_prime_checks);
        }
    }




    static if(!is(typeof(BN_RAND_BOTTOM_ODD))) {
        private enum enumMixinStr_BN_RAND_BOTTOM_ODD = `enum BN_RAND_BOTTOM_ODD = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_RAND_BOTTOM_ODD); }))) {
            mixin(enumMixinStr_BN_RAND_BOTTOM_ODD);
        }
    }




    static if(!is(typeof(BN_RAND_BOTTOM_ANY))) {
        private enum enumMixinStr_BN_RAND_BOTTOM_ANY = `enum BN_RAND_BOTTOM_ANY = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_RAND_BOTTOM_ANY); }))) {
            mixin(enumMixinStr_BN_RAND_BOTTOM_ANY);
        }
    }




    static if(!is(typeof(BN_RAND_TOP_TWO))) {
        private enum enumMixinStr_BN_RAND_TOP_TWO = `enum BN_RAND_TOP_TWO = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_RAND_TOP_TWO); }))) {
            mixin(enumMixinStr_BN_RAND_TOP_TWO);
        }
    }




    static if(!is(typeof(BN_RAND_TOP_ONE))) {
        private enum enumMixinStr_BN_RAND_TOP_ONE = `enum BN_RAND_TOP_ONE = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_RAND_TOP_ONE); }))) {
            mixin(enumMixinStr_BN_RAND_TOP_ONE);
        }
    }




    static if(!is(typeof(BN_RAND_TOP_ANY))) {
        private enum enumMixinStr_BN_RAND_TOP_ANY = `enum BN_RAND_TOP_ANY = - 1;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_RAND_TOP_ANY); }))) {
            mixin(enumMixinStr_BN_RAND_TOP_ANY);
        }
    }




    static if(!is(typeof(BN_FLG_FREE))) {
        private enum enumMixinStr_BN_FLG_FREE = `enum BN_FLG_FREE = 0x8000;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_FLG_FREE); }))) {
            mixin(enumMixinStr_BN_FLG_FREE);
        }
    }




    static if(!is(typeof(BN_FLG_EXP_CONSTTIME))) {
        private enum enumMixinStr_BN_FLG_EXP_CONSTTIME = `enum BN_FLG_EXP_CONSTTIME = BN_FLG_CONSTTIME;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_FLG_EXP_CONSTTIME); }))) {
            mixin(enumMixinStr_BN_FLG_EXP_CONSTTIME);
        }
    }




    static if(!is(typeof(BN_FLG_SECURE))) {
        private enum enumMixinStr_BN_FLG_SECURE = `enum BN_FLG_SECURE = 0x08;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_FLG_SECURE); }))) {
            mixin(enumMixinStr_BN_FLG_SECURE);
        }
    }




    static if(!is(typeof(BN_FLG_CONSTTIME))) {
        private enum enumMixinStr_BN_FLG_CONSTTIME = `enum BN_FLG_CONSTTIME = 0x04;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_FLG_CONSTTIME); }))) {
            mixin(enumMixinStr_BN_FLG_CONSTTIME);
        }
    }




    static if(!is(typeof(BN_FLG_STATIC_DATA))) {
        private enum enumMixinStr_BN_FLG_STATIC_DATA = `enum BN_FLG_STATIC_DATA = 0x02;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_FLG_STATIC_DATA); }))) {
            mixin(enumMixinStr_BN_FLG_STATIC_DATA);
        }
    }




    static if(!is(typeof(BN_FLG_MALLOCED))) {
        private enum enumMixinStr_BN_FLG_MALLOCED = `enum BN_FLG_MALLOCED = 0x01;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_FLG_MALLOCED); }))) {
            mixin(enumMixinStr_BN_FLG_MALLOCED);
        }
    }




    static if(!is(typeof(BN_TBIT))) {
        private enum enumMixinStr_BN_TBIT = `enum BN_TBIT = ( ( BN_ULONG ) 1 << ( BN_BITS2 - 1 ) );`;
        static if(is(typeof({ mixin(enumMixinStr_BN_TBIT); }))) {
            mixin(enumMixinStr_BN_TBIT);
        }
    }




    static if(!is(typeof(BN_BITS))) {
        private enum enumMixinStr_BN_BITS = `enum BN_BITS = ( BN_BITS2 * 2 );`;
        static if(is(typeof({ mixin(enumMixinStr_BN_BITS); }))) {
            mixin(enumMixinStr_BN_BITS);
        }
    }




    static if(!is(typeof(BN_BITS2))) {
        private enum enumMixinStr_BN_BITS2 = `enum BN_BITS2 = ( BN_BYTES * 8 );`;
        static if(is(typeof({ mixin(enumMixinStr_BN_BITS2); }))) {
            mixin(enumMixinStr_BN_BITS2);
        }
    }




    static if(!is(typeof(BN_BYTES))) {
        private enum enumMixinStr_BN_BYTES = `enum BN_BYTES = 8;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_BYTES); }))) {
            mixin(enumMixinStr_BN_BYTES);
        }
    }




    static if(!is(typeof(BN_ULONG))) {
        private enum enumMixinStr_BN_ULONG = `enum BN_ULONG = unsigned long;`;
        static if(is(typeof({ mixin(enumMixinStr_BN_ULONG); }))) {
            mixin(enumMixinStr_BN_ULONG);
        }
    }






    static if(!is(typeof(BIO_R_WSASTARTUP))) {
        private enum enumMixinStr_BIO_R_WSASTARTUP = `enum BIO_R_WSASTARTUP = 122;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_WSASTARTUP); }))) {
            mixin(enumMixinStr_BIO_R_WSASTARTUP);
        }
    }




    static if(!is(typeof(BIO_R_WRITE_TO_READ_ONLY_BIO))) {
        private enum enumMixinStr_BIO_R_WRITE_TO_READ_ONLY_BIO = `enum BIO_R_WRITE_TO_READ_ONLY_BIO = 126;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_WRITE_TO_READ_ONLY_BIO); }))) {
            mixin(enumMixinStr_BIO_R_WRITE_TO_READ_ONLY_BIO);
        }
    }




    static if(!is(typeof(BIO_R_UNSUPPORTED_PROTOCOL_FAMILY))) {
        private enum enumMixinStr_BIO_R_UNSUPPORTED_PROTOCOL_FAMILY = `enum BIO_R_UNSUPPORTED_PROTOCOL_FAMILY = 131;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_UNSUPPORTED_PROTOCOL_FAMILY); }))) {
            mixin(enumMixinStr_BIO_R_UNSUPPORTED_PROTOCOL_FAMILY);
        }
    }




    static if(!is(typeof(BIO_R_UNSUPPORTED_METHOD))) {
        private enum enumMixinStr_BIO_R_UNSUPPORTED_METHOD = `enum BIO_R_UNSUPPORTED_METHOD = 121;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_UNSUPPORTED_METHOD); }))) {
            mixin(enumMixinStr_BIO_R_UNSUPPORTED_METHOD);
        }
    }




    static if(!is(typeof(BIO_R_UNSUPPORTED_IP_FAMILY))) {
        private enum enumMixinStr_BIO_R_UNSUPPORTED_IP_FAMILY = `enum BIO_R_UNSUPPORTED_IP_FAMILY = 146;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_UNSUPPORTED_IP_FAMILY); }))) {
            mixin(enumMixinStr_BIO_R_UNSUPPORTED_IP_FAMILY);
        }
    }




    static if(!is(typeof(BIO_R_UNKNOWN_INFO_TYPE))) {
        private enum enumMixinStr_BIO_R_UNKNOWN_INFO_TYPE = `enum BIO_R_UNKNOWN_INFO_TYPE = 140;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_UNKNOWN_INFO_TYPE); }))) {
            mixin(enumMixinStr_BIO_R_UNKNOWN_INFO_TYPE);
        }
    }




    static if(!is(typeof(BIO_R_UNINITIALIZED))) {
        private enum enumMixinStr_BIO_R_UNINITIALIZED = `enum BIO_R_UNINITIALIZED = 120;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_UNINITIALIZED); }))) {
            mixin(enumMixinStr_BIO_R_UNINITIALIZED);
        }
    }




    static if(!is(typeof(BIO_R_UNAVAILABLE_IP_FAMILY))) {
        private enum enumMixinStr_BIO_R_UNAVAILABLE_IP_FAMILY = `enum BIO_R_UNAVAILABLE_IP_FAMILY = 145;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_UNAVAILABLE_IP_FAMILY); }))) {
            mixin(enumMixinStr_BIO_R_UNAVAILABLE_IP_FAMILY);
        }
    }




    static if(!is(typeof(BIO_R_UNABLE_TO_REUSEADDR))) {
        private enum enumMixinStr_BIO_R_UNABLE_TO_REUSEADDR = `enum BIO_R_UNABLE_TO_REUSEADDR = 139;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_UNABLE_TO_REUSEADDR); }))) {
            mixin(enumMixinStr_BIO_R_UNABLE_TO_REUSEADDR);
        }
    }




    static if(!is(typeof(BIO_R_UNABLE_TO_NODELAY))) {
        private enum enumMixinStr_BIO_R_UNABLE_TO_NODELAY = `enum BIO_R_UNABLE_TO_NODELAY = 138;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_UNABLE_TO_NODELAY); }))) {
            mixin(enumMixinStr_BIO_R_UNABLE_TO_NODELAY);
        }
    }




    static if(!is(typeof(BIO_R_UNABLE_TO_LISTEN_SOCKET))) {
        private enum enumMixinStr_BIO_R_UNABLE_TO_LISTEN_SOCKET = `enum BIO_R_UNABLE_TO_LISTEN_SOCKET = 119;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_UNABLE_TO_LISTEN_SOCKET); }))) {
            mixin(enumMixinStr_BIO_R_UNABLE_TO_LISTEN_SOCKET);
        }
    }




    static if(!is(typeof(BIO_R_UNABLE_TO_KEEPALIVE))) {
        private enum enumMixinStr_BIO_R_UNABLE_TO_KEEPALIVE = `enum BIO_R_UNABLE_TO_KEEPALIVE = 137;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_UNABLE_TO_KEEPALIVE); }))) {
            mixin(enumMixinStr_BIO_R_UNABLE_TO_KEEPALIVE);
        }
    }




    static if(!is(typeof(BIO_R_UNABLE_TO_CREATE_SOCKET))) {
        private enum enumMixinStr_BIO_R_UNABLE_TO_CREATE_SOCKET = `enum BIO_R_UNABLE_TO_CREATE_SOCKET = 118;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_UNABLE_TO_CREATE_SOCKET); }))) {
            mixin(enumMixinStr_BIO_R_UNABLE_TO_CREATE_SOCKET);
        }
    }




    static if(!is(typeof(BIO_R_UNABLE_TO_BIND_SOCKET))) {
        private enum enumMixinStr_BIO_R_UNABLE_TO_BIND_SOCKET = `enum BIO_R_UNABLE_TO_BIND_SOCKET = 117;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_UNABLE_TO_BIND_SOCKET); }))) {
            mixin(enumMixinStr_BIO_R_UNABLE_TO_BIND_SOCKET);
        }
    }




    static if(!is(typeof(BIO_R_NULL_PARAMETER))) {
        private enum enumMixinStr_BIO_R_NULL_PARAMETER = `enum BIO_R_NULL_PARAMETER = 115;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_NULL_PARAMETER); }))) {
            mixin(enumMixinStr_BIO_R_NULL_PARAMETER);
        }
    }




    static if(!is(typeof(BIO_R_NO_SUCH_FILE))) {
        private enum enumMixinStr_BIO_R_NO_SUCH_FILE = `enum BIO_R_NO_SUCH_FILE = 128;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_NO_SUCH_FILE); }))) {
            mixin(enumMixinStr_BIO_R_NO_SUCH_FILE);
        }
    }




    static if(!is(typeof(BIO_R_NO_PORT_DEFINED))) {
        private enum enumMixinStr_BIO_R_NO_PORT_DEFINED = `enum BIO_R_NO_PORT_DEFINED = 113;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_NO_PORT_DEFINED); }))) {
            mixin(enumMixinStr_BIO_R_NO_PORT_DEFINED);
        }
    }




    static if(!is(typeof(BIO_R_NO_HOSTNAME_OR_SERVICE_SPECIFIED))) {
        private enum enumMixinStr_BIO_R_NO_HOSTNAME_OR_SERVICE_SPECIFIED = `enum BIO_R_NO_HOSTNAME_OR_SERVICE_SPECIFIED = 144;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_NO_HOSTNAME_OR_SERVICE_SPECIFIED); }))) {
            mixin(enumMixinStr_BIO_R_NO_HOSTNAME_OR_SERVICE_SPECIFIED);
        }
    }




    static if(!is(typeof(BIO_R_NO_ACCEPT_ADDR_OR_SERVICE_SPECIFIED))) {
        private enum enumMixinStr_BIO_R_NO_ACCEPT_ADDR_OR_SERVICE_SPECIFIED = `enum BIO_R_NO_ACCEPT_ADDR_OR_SERVICE_SPECIFIED = 143;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_NO_ACCEPT_ADDR_OR_SERVICE_SPECIFIED); }))) {
            mixin(enumMixinStr_BIO_R_NO_ACCEPT_ADDR_OR_SERVICE_SPECIFIED);
        }
    }




    static if(!is(typeof(BIO_R_NBIO_CONNECT_ERROR))) {
        private enum enumMixinStr_BIO_R_NBIO_CONNECT_ERROR = `enum BIO_R_NBIO_CONNECT_ERROR = 110;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_NBIO_CONNECT_ERROR); }))) {
            mixin(enumMixinStr_BIO_R_NBIO_CONNECT_ERROR);
        }
    }




    static if(!is(typeof(BIO_R_MALFORMED_HOST_OR_SERVICE))) {
        private enum enumMixinStr_BIO_R_MALFORMED_HOST_OR_SERVICE = `enum BIO_R_MALFORMED_HOST_OR_SERVICE = 130;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_MALFORMED_HOST_OR_SERVICE); }))) {
            mixin(enumMixinStr_BIO_R_MALFORMED_HOST_OR_SERVICE);
        }
    }




    static if(!is(typeof(BIO_R_LOOKUP_RETURNED_NOTHING))) {
        private enum enumMixinStr_BIO_R_LOOKUP_RETURNED_NOTHING = `enum BIO_R_LOOKUP_RETURNED_NOTHING = 142;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_LOOKUP_RETURNED_NOTHING); }))) {
            mixin(enumMixinStr_BIO_R_LOOKUP_RETURNED_NOTHING);
        }
    }




    static if(!is(typeof(BIO_R_LISTEN_V6_ONLY))) {
        private enum enumMixinStr_BIO_R_LISTEN_V6_ONLY = `enum BIO_R_LISTEN_V6_ONLY = 136;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_LISTEN_V6_ONLY); }))) {
            mixin(enumMixinStr_BIO_R_LISTEN_V6_ONLY);
        }
    }




    static if(!is(typeof(BIO_R_LENGTH_TOO_LONG))) {
        private enum enumMixinStr_BIO_R_LENGTH_TOO_LONG = `enum BIO_R_LENGTH_TOO_LONG = 102;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_LENGTH_TOO_LONG); }))) {
            mixin(enumMixinStr_BIO_R_LENGTH_TOO_LONG);
        }
    }




    static if(!is(typeof(BIO_R_IN_USE))) {
        private enum enumMixinStr_BIO_R_IN_USE = `enum BIO_R_IN_USE = 123;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_IN_USE); }))) {
            mixin(enumMixinStr_BIO_R_IN_USE);
        }
    }




    static if(!is(typeof(BIO_R_INVALID_SOCKET))) {
        private enum enumMixinStr_BIO_R_INVALID_SOCKET = `enum BIO_R_INVALID_SOCKET = 135;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_INVALID_SOCKET); }))) {
            mixin(enumMixinStr_BIO_R_INVALID_SOCKET);
        }
    }




    static if(!is(typeof(BIO_R_INVALID_ARGUMENT))) {
        private enum enumMixinStr_BIO_R_INVALID_ARGUMENT = `enum BIO_R_INVALID_ARGUMENT = 125;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_INVALID_ARGUMENT); }))) {
            mixin(enumMixinStr_BIO_R_INVALID_ARGUMENT);
        }
    }




    static if(!is(typeof(BIO_R_GETTING_SOCKTYPE))) {
        private enum enumMixinStr_BIO_R_GETTING_SOCKTYPE = `enum BIO_R_GETTING_SOCKTYPE = 134;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_GETTING_SOCKTYPE); }))) {
            mixin(enumMixinStr_BIO_R_GETTING_SOCKTYPE);
        }
    }




    static if(!is(typeof(BIO_R_GETSOCKNAME_TRUNCATED_ADDRESS))) {
        private enum enumMixinStr_BIO_R_GETSOCKNAME_TRUNCATED_ADDRESS = `enum BIO_R_GETSOCKNAME_TRUNCATED_ADDRESS = 133;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_GETSOCKNAME_TRUNCATED_ADDRESS); }))) {
            mixin(enumMixinStr_BIO_R_GETSOCKNAME_TRUNCATED_ADDRESS);
        }
    }




    static if(!is(typeof(BIO_R_GETSOCKNAME_ERROR))) {
        private enum enumMixinStr_BIO_R_GETSOCKNAME_ERROR = `enum BIO_R_GETSOCKNAME_ERROR = 132;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_GETSOCKNAME_ERROR); }))) {
            mixin(enumMixinStr_BIO_R_GETSOCKNAME_ERROR);
        }
    }




    static if(!is(typeof(BIO_R_GETHOSTBYNAME_ADDR_IS_NOT_AF_INET))) {
        private enum enumMixinStr_BIO_R_GETHOSTBYNAME_ADDR_IS_NOT_AF_INET = `enum BIO_R_GETHOSTBYNAME_ADDR_IS_NOT_AF_INET = 107;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_GETHOSTBYNAME_ADDR_IS_NOT_AF_INET); }))) {
            mixin(enumMixinStr_BIO_R_GETHOSTBYNAME_ADDR_IS_NOT_AF_INET);
        }
    }




    static if(!is(typeof(BIO_R_CONNECT_ERROR))) {
        private enum enumMixinStr_BIO_R_CONNECT_ERROR = `enum BIO_R_CONNECT_ERROR = 103;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_CONNECT_ERROR); }))) {
            mixin(enumMixinStr_BIO_R_CONNECT_ERROR);
        }
    }




    static if(!is(typeof(BIO_R_BROKEN_PIPE))) {
        private enum enumMixinStr_BIO_R_BROKEN_PIPE = `enum BIO_R_BROKEN_PIPE = 124;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_BROKEN_PIPE); }))) {
            mixin(enumMixinStr_BIO_R_BROKEN_PIPE);
        }
    }




    static if(!is(typeof(BIO_R_BAD_FOPEN_MODE))) {
        private enum enumMixinStr_BIO_R_BAD_FOPEN_MODE = `enum BIO_R_BAD_FOPEN_MODE = 101;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_BAD_FOPEN_MODE); }))) {
            mixin(enumMixinStr_BIO_R_BAD_FOPEN_MODE);
        }
    }




    static if(!is(typeof(BIO_R_AMBIGUOUS_HOST_OR_SERVICE))) {
        private enum enumMixinStr_BIO_R_AMBIGUOUS_HOST_OR_SERVICE = `enum BIO_R_AMBIGUOUS_HOST_OR_SERVICE = 129;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_AMBIGUOUS_HOST_OR_SERVICE); }))) {
            mixin(enumMixinStr_BIO_R_AMBIGUOUS_HOST_OR_SERVICE);
        }
    }




    static if(!is(typeof(BIO_R_ADDRINFO_ADDR_IS_NOT_AF_INET))) {
        private enum enumMixinStr_BIO_R_ADDRINFO_ADDR_IS_NOT_AF_INET = `enum BIO_R_ADDRINFO_ADDR_IS_NOT_AF_INET = 141;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_ADDRINFO_ADDR_IS_NOT_AF_INET); }))) {
            mixin(enumMixinStr_BIO_R_ADDRINFO_ADDR_IS_NOT_AF_INET);
        }
    }




    static if(!is(typeof(BIO_R_ACCEPT_ERROR))) {
        private enum enumMixinStr_BIO_R_ACCEPT_ERROR = `enum BIO_R_ACCEPT_ERROR = 100;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_R_ACCEPT_ERROR); }))) {
            mixin(enumMixinStr_BIO_R_ACCEPT_ERROR);
        }
    }




    static if(!is(typeof(BIO_F_SSL_NEW))) {
        private enum enumMixinStr_BIO_F_SSL_NEW = `enum BIO_F_SSL_NEW = 118;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_SSL_NEW); }))) {
            mixin(enumMixinStr_BIO_F_SSL_NEW);
        }
    }




    static if(!is(typeof(BIO_F_SLG_WRITE))) {
        private enum enumMixinStr_BIO_F_SLG_WRITE = `enum BIO_F_SLG_WRITE = 155;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_SLG_WRITE); }))) {
            mixin(enumMixinStr_BIO_F_SLG_WRITE);
        }
    }




    static if(!is(typeof(BIO_F_NBIOF_NEW))) {
        private enum enumMixinStr_BIO_F_NBIOF_NEW = `enum BIO_F_NBIOF_NEW = 154;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_NBIOF_NEW); }))) {
            mixin(enumMixinStr_BIO_F_NBIOF_NEW);
        }
    }




    static if(!is(typeof(BIO_F_MEM_WRITE))) {
        private enum enumMixinStr_BIO_F_MEM_WRITE = `enum BIO_F_MEM_WRITE = 117;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_MEM_WRITE); }))) {
            mixin(enumMixinStr_BIO_F_MEM_WRITE);
        }
    }




    static if(!is(typeof(BIO_F_LINEBUFFER_NEW))) {
        private enum enumMixinStr_BIO_F_LINEBUFFER_NEW = `enum BIO_F_LINEBUFFER_NEW = 151;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_LINEBUFFER_NEW); }))) {
            mixin(enumMixinStr_BIO_F_LINEBUFFER_NEW);
        }
    }




    static if(!is(typeof(BIO_F_LINEBUFFER_CTRL))) {
        private enum enumMixinStr_BIO_F_LINEBUFFER_CTRL = `enum BIO_F_LINEBUFFER_CTRL = 129;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_LINEBUFFER_CTRL); }))) {
            mixin(enumMixinStr_BIO_F_LINEBUFFER_CTRL);
        }
    }




    static if(!is(typeof(BIO_F_FILE_READ))) {
        private enum enumMixinStr_BIO_F_FILE_READ = `enum BIO_F_FILE_READ = 130;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_FILE_READ); }))) {
            mixin(enumMixinStr_BIO_F_FILE_READ);
        }
    }




    static if(!is(typeof(BIO_F_FILE_CTRL))) {
        private enum enumMixinStr_BIO_F_FILE_CTRL = `enum BIO_F_FILE_CTRL = 116;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_FILE_CTRL); }))) {
            mixin(enumMixinStr_BIO_F_FILE_CTRL);
        }
    }




    static if(!is(typeof(hex_to_string))) {
        private enum enumMixinStr_hex_to_string = `enum hex_to_string = OPENSSL_buf2hexstr;`;
        static if(is(typeof({ mixin(enumMixinStr_hex_to_string); }))) {
            mixin(enumMixinStr_hex_to_string);
        }
    }




    static if(!is(typeof(string_to_hex))) {
        private enum enumMixinStr_string_to_hex = `enum string_to_hex = OPENSSL_hexstr2buf;`;
        static if(is(typeof({ mixin(enumMixinStr_string_to_hex); }))) {
            mixin(enumMixinStr_string_to_hex);
        }
    }




    static if(!is(typeof(BIO_F_DOAPR_OUTCH))) {
        private enum enumMixinStr_BIO_F_DOAPR_OUTCH = `enum BIO_F_DOAPR_OUTCH = 150;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_DOAPR_OUTCH); }))) {
            mixin(enumMixinStr_BIO_F_DOAPR_OUTCH);
        }
    }




    static if(!is(typeof(BIO_F_DGRAM_SCTP_WRITE))) {
        private enum enumMixinStr_BIO_F_DGRAM_SCTP_WRITE = `enum BIO_F_DGRAM_SCTP_WRITE = 133;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_DGRAM_SCTP_WRITE); }))) {
            mixin(enumMixinStr_BIO_F_DGRAM_SCTP_WRITE);
        }
    }




    static if(!is(typeof(BIO_F_DGRAM_SCTP_READ))) {
        private enum enumMixinStr_BIO_F_DGRAM_SCTP_READ = `enum BIO_F_DGRAM_SCTP_READ = 132;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_DGRAM_SCTP_READ); }))) {
            mixin(enumMixinStr_BIO_F_DGRAM_SCTP_READ);
        }
    }




    static if(!is(typeof(BIO_F_DGRAM_SCTP_NEW))) {
        private enum enumMixinStr_BIO_F_DGRAM_SCTP_NEW = `enum BIO_F_DGRAM_SCTP_NEW = 149;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_DGRAM_SCTP_NEW); }))) {
            mixin(enumMixinStr_BIO_F_DGRAM_SCTP_NEW);
        }
    }




    static if(!is(typeof(BIO_F_CONN_STATE))) {
        private enum enumMixinStr_BIO_F_CONN_STATE = `enum BIO_F_CONN_STATE = 115;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_CONN_STATE); }))) {
            mixin(enumMixinStr_BIO_F_CONN_STATE);
        }
    }




    static if(!is(typeof(BIO_F_CONN_CTRL))) {
        private enum enumMixinStr_BIO_F_CONN_CTRL = `enum BIO_F_CONN_CTRL = 127;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_CONN_CTRL); }))) {
            mixin(enumMixinStr_BIO_F_CONN_CTRL);
        }
    }




    static if(!is(typeof(BIO_F_BUFFER_CTRL))) {
        private enum enumMixinStr_BIO_F_BUFFER_CTRL = `enum BIO_F_BUFFER_CTRL = 114;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BUFFER_CTRL); }))) {
            mixin(enumMixinStr_BIO_F_BUFFER_CTRL);
        }
    }




    static if(!is(typeof(BIO_F_BIO_WRITE_INTERN))) {
        private enum enumMixinStr_BIO_F_BIO_WRITE_INTERN = `enum BIO_F_BIO_WRITE_INTERN = 128;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_WRITE_INTERN); }))) {
            mixin(enumMixinStr_BIO_F_BIO_WRITE_INTERN);
        }
    }




    static if(!is(typeof(BIO_F_BIO_WRITE_EX))) {
        private enum enumMixinStr_BIO_F_BIO_WRITE_EX = `enum BIO_F_BIO_WRITE_EX = 119;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_WRITE_EX); }))) {
            mixin(enumMixinStr_BIO_F_BIO_WRITE_EX);
        }
    }




    static if(!is(typeof(BIO_F_BIO_WRITE))) {
        private enum enumMixinStr_BIO_F_BIO_WRITE = `enum BIO_F_BIO_WRITE = 113;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_WRITE); }))) {
            mixin(enumMixinStr_BIO_F_BIO_WRITE);
        }
    }




    static if(!is(typeof(BIO_F_BIO_SOCK_INIT))) {
        private enum enumMixinStr_BIO_F_BIO_SOCK_INIT = `enum BIO_F_BIO_SOCK_INIT = 112;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_SOCK_INIT); }))) {
            mixin(enumMixinStr_BIO_F_BIO_SOCK_INIT);
        }
    }




    static if(!is(typeof(BIO_F_BIO_SOCK_INFO))) {
        private enum enumMixinStr_BIO_F_BIO_SOCK_INFO = `enum BIO_F_BIO_SOCK_INFO = 141;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_SOCK_INFO); }))) {
            mixin(enumMixinStr_BIO_F_BIO_SOCK_INFO);
        }
    }




    static if(!is(typeof(BIO_F_BIO_SOCKET_NBIO))) {
        private enum enumMixinStr_BIO_F_BIO_SOCKET_NBIO = `enum BIO_F_BIO_SOCKET_NBIO = 142;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_SOCKET_NBIO); }))) {
            mixin(enumMixinStr_BIO_F_BIO_SOCKET_NBIO);
        }
    }




    static if(!is(typeof(BIO_F_BIO_SOCKET))) {
        private enum enumMixinStr_BIO_F_BIO_SOCKET = `enum BIO_F_BIO_SOCKET = 140;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_SOCKET); }))) {
            mixin(enumMixinStr_BIO_F_BIO_SOCKET);
        }
    }




    static if(!is(typeof(BIO_F_BIO_READ_INTERN))) {
        private enum enumMixinStr_BIO_F_BIO_READ_INTERN = `enum BIO_F_BIO_READ_INTERN = 120;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_READ_INTERN); }))) {
            mixin(enumMixinStr_BIO_F_BIO_READ_INTERN);
        }
    }




    static if(!is(typeof(BIO_F_BIO_READ_EX))) {
        private enum enumMixinStr_BIO_F_BIO_READ_EX = `enum BIO_F_BIO_READ_EX = 105;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_READ_EX); }))) {
            mixin(enumMixinStr_BIO_F_BIO_READ_EX);
        }
    }




    static if(!is(typeof(BIO_F_BIO_READ))) {
        private enum enumMixinStr_BIO_F_BIO_READ = `enum BIO_F_BIO_READ = 111;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_READ); }))) {
            mixin(enumMixinStr_BIO_F_BIO_READ);
        }
    }




    static if(!is(typeof(BIO_F_BIO_PUTS))) {
        private enum enumMixinStr_BIO_F_BIO_PUTS = `enum BIO_F_BIO_PUTS = 110;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_PUTS); }))) {
            mixin(enumMixinStr_BIO_F_BIO_PUTS);
        }
    }




    static if(!is(typeof(BIO_F_BIO_PARSE_HOSTSERV))) {
        private enum enumMixinStr_BIO_F_BIO_PARSE_HOSTSERV = `enum BIO_F_BIO_PARSE_HOSTSERV = 136;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_PARSE_HOSTSERV); }))) {
            mixin(enumMixinStr_BIO_F_BIO_PARSE_HOSTSERV);
        }
    }




    static if(!is(typeof(BIO_F_BIO_NWRITE0))) {
        private enum enumMixinStr_BIO_F_BIO_NWRITE0 = `enum BIO_F_BIO_NWRITE0 = 122;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_NWRITE0); }))) {
            mixin(enumMixinStr_BIO_F_BIO_NWRITE0);
        }
    }




    static if(!is(typeof(BIO_F_BIO_NWRITE))) {
        private enum enumMixinStr_BIO_F_BIO_NWRITE = `enum BIO_F_BIO_NWRITE = 125;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_NWRITE); }))) {
            mixin(enumMixinStr_BIO_F_BIO_NWRITE);
        }
    }




    static if(!is(typeof(BIO_F_BIO_NREAD0))) {
        private enum enumMixinStr_BIO_F_BIO_NREAD0 = `enum BIO_F_BIO_NREAD0 = 124;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_NREAD0); }))) {
            mixin(enumMixinStr_BIO_F_BIO_NREAD0);
        }
    }




    static if(!is(typeof(BIO_F_BIO_NREAD))) {
        private enum enumMixinStr_BIO_F_BIO_NREAD = `enum BIO_F_BIO_NREAD = 123;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_NREAD); }))) {
            mixin(enumMixinStr_BIO_F_BIO_NREAD);
        }
    }




    static if(!is(typeof(BIO_F_BIO_NEW_MEM_BUF))) {
        private enum enumMixinStr_BIO_F_BIO_NEW_MEM_BUF = `enum BIO_F_BIO_NEW_MEM_BUF = 126;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_NEW_MEM_BUF); }))) {
            mixin(enumMixinStr_BIO_F_BIO_NEW_MEM_BUF);
        }
    }




    static if(!is(typeof(BIO_F_BIO_NEW_FILE))) {
        private enum enumMixinStr_BIO_F_BIO_NEW_FILE = `enum BIO_F_BIO_NEW_FILE = 109;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_NEW_FILE); }))) {
            mixin(enumMixinStr_BIO_F_BIO_NEW_FILE);
        }
    }




    static if(!is(typeof(BIO_F_BIO_NEW_DGRAM_SCTP))) {
        private enum enumMixinStr_BIO_F_BIO_NEW_DGRAM_SCTP = `enum BIO_F_BIO_NEW_DGRAM_SCTP = 145;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_NEW_DGRAM_SCTP); }))) {
            mixin(enumMixinStr_BIO_F_BIO_NEW_DGRAM_SCTP);
        }
    }




    static if(!is(typeof(BIO_F_BIO_NEW))) {
        private enum enumMixinStr_BIO_F_BIO_NEW = `enum BIO_F_BIO_NEW = 108;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_NEW); }))) {
            mixin(enumMixinStr_BIO_F_BIO_NEW);
        }
    }




    static if(!is(typeof(BIO_F_BIO_METH_NEW))) {
        private enum enumMixinStr_BIO_F_BIO_METH_NEW = `enum BIO_F_BIO_METH_NEW = 146;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_METH_NEW); }))) {
            mixin(enumMixinStr_BIO_F_BIO_METH_NEW);
        }
    }




    static if(!is(typeof(BIO_F_BIO_MAKE_PAIR))) {
        private enum enumMixinStr_BIO_F_BIO_MAKE_PAIR = `enum BIO_F_BIO_MAKE_PAIR = 121;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_MAKE_PAIR); }))) {
            mixin(enumMixinStr_BIO_F_BIO_MAKE_PAIR);
        }
    }




    static if(!is(typeof(BIO_F_BIO_LOOKUP_EX))) {
        private enum enumMixinStr_BIO_F_BIO_LOOKUP_EX = `enum BIO_F_BIO_LOOKUP_EX = 143;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_LOOKUP_EX); }))) {
            mixin(enumMixinStr_BIO_F_BIO_LOOKUP_EX);
        }
    }




    static if(!is(typeof(BIO_F_BIO_LOOKUP))) {
        private enum enumMixinStr_BIO_F_BIO_LOOKUP = `enum BIO_F_BIO_LOOKUP = 135;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_LOOKUP); }))) {
            mixin(enumMixinStr_BIO_F_BIO_LOOKUP);
        }
    }




    static if(!is(typeof(BIO_F_BIO_LISTEN))) {
        private enum enumMixinStr_BIO_F_BIO_LISTEN = `enum BIO_F_BIO_LISTEN = 139;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_LISTEN); }))) {
            mixin(enumMixinStr_BIO_F_BIO_LISTEN);
        }
    }




    static if(!is(typeof(BIO_F_BIO_GET_PORT))) {
        private enum enumMixinStr_BIO_F_BIO_GET_PORT = `enum BIO_F_BIO_GET_PORT = 107;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_GET_PORT); }))) {
            mixin(enumMixinStr_BIO_F_BIO_GET_PORT);
        }
    }




    static if(!is(typeof(BIO_F_BIO_GET_NEW_INDEX))) {
        private enum enumMixinStr_BIO_F_BIO_GET_NEW_INDEX = `enum BIO_F_BIO_GET_NEW_INDEX = 102;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_GET_NEW_INDEX); }))) {
            mixin(enumMixinStr_BIO_F_BIO_GET_NEW_INDEX);
        }
    }




    static if(!is(typeof(BIO_F_BIO_GET_HOST_IP))) {
        private enum enumMixinStr_BIO_F_BIO_GET_HOST_IP = `enum BIO_F_BIO_GET_HOST_IP = 106;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_GET_HOST_IP); }))) {
            mixin(enumMixinStr_BIO_F_BIO_GET_HOST_IP);
        }
    }




    static if(!is(typeof(BIO_F_BIO_GETS))) {
        private enum enumMixinStr_BIO_F_BIO_GETS = `enum BIO_F_BIO_GETS = 104;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_GETS); }))) {
            mixin(enumMixinStr_BIO_F_BIO_GETS);
        }
    }




    static if(!is(typeof(BIO_F_BIO_CTRL))) {
        private enum enumMixinStr_BIO_F_BIO_CTRL = `enum BIO_F_BIO_CTRL = 103;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_CTRL); }))) {
            mixin(enumMixinStr_BIO_F_BIO_CTRL);
        }
    }




    static if(!is(typeof(BIO_F_BIO_CONNECT_NEW))) {
        private enum enumMixinStr_BIO_F_BIO_CONNECT_NEW = `enum BIO_F_BIO_CONNECT_NEW = 153;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_CONNECT_NEW); }))) {
            mixin(enumMixinStr_BIO_F_BIO_CONNECT_NEW);
        }
    }




    static if(!is(typeof(BIO_F_BIO_CONNECT))) {
        private enum enumMixinStr_BIO_F_BIO_CONNECT = `enum BIO_F_BIO_CONNECT = 138;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_CONNECT); }))) {
            mixin(enumMixinStr_BIO_F_BIO_CONNECT);
        }
    }




    static if(!is(typeof(BIO_F_BIO_CALLBACK_CTRL))) {
        private enum enumMixinStr_BIO_F_BIO_CALLBACK_CTRL = `enum BIO_F_BIO_CALLBACK_CTRL = 131;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_CALLBACK_CTRL); }))) {
            mixin(enumMixinStr_BIO_F_BIO_CALLBACK_CTRL);
        }
    }




    static if(!is(typeof(X509_CHECK_FLAG_ALWAYS_CHECK_SUBJECT))) {
        private enum enumMixinStr_X509_CHECK_FLAG_ALWAYS_CHECK_SUBJECT = `enum X509_CHECK_FLAG_ALWAYS_CHECK_SUBJECT = 0x1;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_CHECK_FLAG_ALWAYS_CHECK_SUBJECT); }))) {
            mixin(enumMixinStr_X509_CHECK_FLAG_ALWAYS_CHECK_SUBJECT);
        }
    }




    static if(!is(typeof(X509_CHECK_FLAG_NO_WILDCARDS))) {
        private enum enumMixinStr_X509_CHECK_FLAG_NO_WILDCARDS = `enum X509_CHECK_FLAG_NO_WILDCARDS = 0x2;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_CHECK_FLAG_NO_WILDCARDS); }))) {
            mixin(enumMixinStr_X509_CHECK_FLAG_NO_WILDCARDS);
        }
    }




    static if(!is(typeof(X509_CHECK_FLAG_NO_PARTIAL_WILDCARDS))) {
        private enum enumMixinStr_X509_CHECK_FLAG_NO_PARTIAL_WILDCARDS = `enum X509_CHECK_FLAG_NO_PARTIAL_WILDCARDS = 0x4;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_CHECK_FLAG_NO_PARTIAL_WILDCARDS); }))) {
            mixin(enumMixinStr_X509_CHECK_FLAG_NO_PARTIAL_WILDCARDS);
        }
    }




    static if(!is(typeof(X509_CHECK_FLAG_MULTI_LABEL_WILDCARDS))) {
        private enum enumMixinStr_X509_CHECK_FLAG_MULTI_LABEL_WILDCARDS = `enum X509_CHECK_FLAG_MULTI_LABEL_WILDCARDS = 0x8;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_CHECK_FLAG_MULTI_LABEL_WILDCARDS); }))) {
            mixin(enumMixinStr_X509_CHECK_FLAG_MULTI_LABEL_WILDCARDS);
        }
    }




    static if(!is(typeof(X509_CHECK_FLAG_SINGLE_LABEL_SUBDOMAINS))) {
        private enum enumMixinStr_X509_CHECK_FLAG_SINGLE_LABEL_SUBDOMAINS = `enum X509_CHECK_FLAG_SINGLE_LABEL_SUBDOMAINS = 0x10;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_CHECK_FLAG_SINGLE_LABEL_SUBDOMAINS); }))) {
            mixin(enumMixinStr_X509_CHECK_FLAG_SINGLE_LABEL_SUBDOMAINS);
        }
    }




    static if(!is(typeof(X509_CHECK_FLAG_NEVER_CHECK_SUBJECT))) {
        private enum enumMixinStr_X509_CHECK_FLAG_NEVER_CHECK_SUBJECT = `enum X509_CHECK_FLAG_NEVER_CHECK_SUBJECT = 0x20;`;
        static if(is(typeof({ mixin(enumMixinStr_X509_CHECK_FLAG_NEVER_CHECK_SUBJECT); }))) {
            mixin(enumMixinStr_X509_CHECK_FLAG_NEVER_CHECK_SUBJECT);
        }
    }




    static if(!is(typeof(_X509_CHECK_FLAG_DOT_SUBDOMAINS))) {
        private enum enumMixinStr__X509_CHECK_FLAG_DOT_SUBDOMAINS = `enum _X509_CHECK_FLAG_DOT_SUBDOMAINS = 0x8000;`;
        static if(is(typeof({ mixin(enumMixinStr__X509_CHECK_FLAG_DOT_SUBDOMAINS); }))) {
            mixin(enumMixinStr__X509_CHECK_FLAG_DOT_SUBDOMAINS);
        }
    }




    static if(!is(typeof(BIO_F_BIO_BIND))) {
        private enum enumMixinStr_BIO_F_BIO_BIND = `enum BIO_F_BIO_BIND = 147;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_BIND); }))) {
            mixin(enumMixinStr_BIO_F_BIO_BIND);
        }
    }




    static if(!is(typeof(BIO_F_BIO_ADDR_NEW))) {
        private enum enumMixinStr_BIO_F_BIO_ADDR_NEW = `enum BIO_F_BIO_ADDR_NEW = 144;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_ADDR_NEW); }))) {
            mixin(enumMixinStr_BIO_F_BIO_ADDR_NEW);
        }
    }




    static if(!is(typeof(BIO_F_BIO_ACCEPT_NEW))) {
        private enum enumMixinStr_BIO_F_BIO_ACCEPT_NEW = `enum BIO_F_BIO_ACCEPT_NEW = 152;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_ACCEPT_NEW); }))) {
            mixin(enumMixinStr_BIO_F_BIO_ACCEPT_NEW);
        }
    }




    static if(!is(typeof(BIO_F_BIO_ACCEPT_EX))) {
        private enum enumMixinStr_BIO_F_BIO_ACCEPT_EX = `enum BIO_F_BIO_ACCEPT_EX = 137;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_ACCEPT_EX); }))) {
            mixin(enumMixinStr_BIO_F_BIO_ACCEPT_EX);
        }
    }




    static if(!is(typeof(BIO_F_BIO_ACCEPT))) {
        private enum enumMixinStr_BIO_F_BIO_ACCEPT = `enum BIO_F_BIO_ACCEPT = 101;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_BIO_ACCEPT); }))) {
            mixin(enumMixinStr_BIO_F_BIO_ACCEPT);
        }
    }




    static if(!is(typeof(BIO_F_ADDR_STRINGS))) {
        private enum enumMixinStr_BIO_F_ADDR_STRINGS = `enum BIO_F_ADDR_STRINGS = 134;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_ADDR_STRINGS); }))) {
            mixin(enumMixinStr_BIO_F_ADDR_STRINGS);
        }
    }




    static if(!is(typeof(BIO_F_ADDRINFO_WRAP))) {
        private enum enumMixinStr_BIO_F_ADDRINFO_WRAP = `enum BIO_F_ADDRINFO_WRAP = 148;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_ADDRINFO_WRAP); }))) {
            mixin(enumMixinStr_BIO_F_ADDRINFO_WRAP);
        }
    }




    static if(!is(typeof(BIO_F_ACPT_STATE))) {
        private enum enumMixinStr_BIO_F_ACPT_STATE = `enum BIO_F_ACPT_STATE = 100;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_F_ACPT_STATE); }))) {
            mixin(enumMixinStr_BIO_F_ACPT_STATE);
        }
    }






    static if(!is(typeof(ossl_bio__printf__))) {
        private enum enumMixinStr_ossl_bio__printf__ = `enum ossl_bio__printf__ = __printf__;`;
        static if(is(typeof({ mixin(enumMixinStr_ossl_bio__printf__); }))) {
            mixin(enumMixinStr_ossl_bio__printf__);
        }
    }




    static if(!is(typeof(ossl_bio__attr__))) {
        private enum enumMixinStr_ossl_bio__attr__ = `enum ossl_bio__attr__ = __attribute__;`;
        static if(is(typeof({ mixin(enumMixinStr_ossl_bio__attr__); }))) {
            mixin(enumMixinStr_ossl_bio__attr__);
        }
    }




    static if(!is(typeof(BIO_SOCK_NODELAY))) {
        private enum enumMixinStr_BIO_SOCK_NODELAY = `enum BIO_SOCK_NODELAY = 0x10;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_SOCK_NODELAY); }))) {
            mixin(enumMixinStr_BIO_SOCK_NODELAY);
        }
    }




    static if(!is(typeof(BIO_SOCK_NONBLOCK))) {
        private enum enumMixinStr_BIO_SOCK_NONBLOCK = `enum BIO_SOCK_NONBLOCK = 0x08;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_SOCK_NONBLOCK); }))) {
            mixin(enumMixinStr_BIO_SOCK_NONBLOCK);
        }
    }




    static if(!is(typeof(BIO_SOCK_KEEPALIVE))) {
        private enum enumMixinStr_BIO_SOCK_KEEPALIVE = `enum BIO_SOCK_KEEPALIVE = 0x04;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_SOCK_KEEPALIVE); }))) {
            mixin(enumMixinStr_BIO_SOCK_KEEPALIVE);
        }
    }




    static if(!is(typeof(BIO_SOCK_V6_ONLY))) {
        private enum enumMixinStr_BIO_SOCK_V6_ONLY = `enum BIO_SOCK_V6_ONLY = 0x02;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_SOCK_V6_ONLY); }))) {
            mixin(enumMixinStr_BIO_SOCK_V6_ONLY);
        }
    }




    static if(!is(typeof(BIO_SOCK_REUSEADDR))) {
        private enum enumMixinStr_BIO_SOCK_REUSEADDR = `enum BIO_SOCK_REUSEADDR = 0x01;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_SOCK_REUSEADDR); }))) {
            mixin(enumMixinStr_BIO_SOCK_REUSEADDR);
        }
    }
    static if(!is(typeof(ASIdOrRange_id))) {
        private enum enumMixinStr_ASIdOrRange_id = `enum ASIdOrRange_id = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_ASIdOrRange_id); }))) {
            mixin(enumMixinStr_ASIdOrRange_id);
        }
    }




    static if(!is(typeof(ASIdOrRange_range))) {
        private enum enumMixinStr_ASIdOrRange_range = `enum ASIdOrRange_range = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_ASIdOrRange_range); }))) {
            mixin(enumMixinStr_ASIdOrRange_range);
        }
    }
    static if(!is(typeof(ASIdentifierChoice_inherit))) {
        private enum enumMixinStr_ASIdentifierChoice_inherit = `enum ASIdentifierChoice_inherit = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_ASIdentifierChoice_inherit); }))) {
            mixin(enumMixinStr_ASIdentifierChoice_inherit);
        }
    }




    static if(!is(typeof(ASIdentifierChoice_asIdsOrRanges))) {
        private enum enumMixinStr_ASIdentifierChoice_asIdsOrRanges = `enum ASIdentifierChoice_asIdsOrRanges = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_ASIdentifierChoice_asIdsOrRanges); }))) {
            mixin(enumMixinStr_ASIdentifierChoice_asIdsOrRanges);
        }
    }
    static if(!is(typeof(BIO_BIND_REUSEADDR_IF_UNUSED))) {
        private enum enumMixinStr_BIO_BIND_REUSEADDR_IF_UNUSED = `enum BIO_BIND_REUSEADDR_IF_UNUSED = 0x01;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_BIND_REUSEADDR_IF_UNUSED); }))) {
            mixin(enumMixinStr_BIO_BIND_REUSEADDR_IF_UNUSED);
        }
    }




    static if(!is(typeof(BIO_BIND_REUSEADDR))) {
        private enum enumMixinStr_BIO_BIND_REUSEADDR = `enum BIO_BIND_REUSEADDR = 0x01;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_BIND_REUSEADDR); }))) {
            mixin(enumMixinStr_BIO_BIND_REUSEADDR);
        }
    }




    static if(!is(typeof(BIO_BIND_NORMAL))) {
        private enum enumMixinStr_BIO_BIND_NORMAL = `enum BIO_BIND_NORMAL = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_BIND_NORMAL); }))) {
            mixin(enumMixinStr_BIO_BIND_NORMAL);
        }
    }
    static if(!is(typeof(BIO_FAMILY_IPANY))) {
        private enum enumMixinStr_BIO_FAMILY_IPANY = `enum BIO_FAMILY_IPANY = 256;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_FAMILY_IPANY); }))) {
            mixin(enumMixinStr_BIO_FAMILY_IPANY);
        }
    }




    static if(!is(typeof(BIO_FAMILY_IPV6))) {
        private enum enumMixinStr_BIO_FAMILY_IPV6 = `enum BIO_FAMILY_IPV6 = 6;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_FAMILY_IPV6); }))) {
            mixin(enumMixinStr_BIO_FAMILY_IPV6);
        }
    }




    static if(!is(typeof(BIO_FAMILY_IPV4))) {
        private enum enumMixinStr_BIO_FAMILY_IPV4 = `enum BIO_FAMILY_IPV4 = 4;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_FAMILY_IPV4); }))) {
            mixin(enumMixinStr_BIO_FAMILY_IPV4);
        }
    }
    static if(!is(typeof(IPAddressOrRange_addressPrefix))) {
        private enum enumMixinStr_IPAddressOrRange_addressPrefix = `enum IPAddressOrRange_addressPrefix = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_IPAddressOrRange_addressPrefix); }))) {
            mixin(enumMixinStr_IPAddressOrRange_addressPrefix);
        }
    }




    static if(!is(typeof(IPAddressOrRange_addressRange))) {
        private enum enumMixinStr_IPAddressOrRange_addressRange = `enum IPAddressOrRange_addressRange = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_IPAddressOrRange_addressRange); }))) {
            mixin(enumMixinStr_IPAddressOrRange_addressRange);
        }
    }






    static if(!is(typeof(BIO_C_SET_CONNECT_MODE))) {
        private enum enumMixinStr_BIO_C_SET_CONNECT_MODE = `enum BIO_C_SET_CONNECT_MODE = 155;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_SET_CONNECT_MODE); }))) {
            mixin(enumMixinStr_BIO_C_SET_CONNECT_MODE);
        }
    }




    static if(!is(typeof(BIO_C_GET_EX_ARG))) {
        private enum enumMixinStr_BIO_C_GET_EX_ARG = `enum BIO_C_GET_EX_ARG = 154;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_GET_EX_ARG); }))) {
            mixin(enumMixinStr_BIO_C_GET_EX_ARG);
        }
    }




    static if(!is(typeof(BIO_C_SET_EX_ARG))) {
        private enum enumMixinStr_BIO_C_SET_EX_ARG = `enum BIO_C_SET_EX_ARG = 153;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_SET_EX_ARG); }))) {
            mixin(enumMixinStr_BIO_C_SET_EX_ARG);
        }
    }




    static if(!is(typeof(BIO_C_GET_SUFFIX))) {
        private enum enumMixinStr_BIO_C_GET_SUFFIX = `enum BIO_C_GET_SUFFIX = 152;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_GET_SUFFIX); }))) {
            mixin(enumMixinStr_BIO_C_GET_SUFFIX);
        }
    }




    static if(!is(typeof(BIO_C_SET_SUFFIX))) {
        private enum enumMixinStr_BIO_C_SET_SUFFIX = `enum BIO_C_SET_SUFFIX = 151;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_SET_SUFFIX); }))) {
            mixin(enumMixinStr_BIO_C_SET_SUFFIX);
        }
    }




    static if(!is(typeof(BIO_C_GET_PREFIX))) {
        private enum enumMixinStr_BIO_C_GET_PREFIX = `enum BIO_C_GET_PREFIX = 150;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_GET_PREFIX); }))) {
            mixin(enumMixinStr_BIO_C_GET_PREFIX);
        }
    }




    static if(!is(typeof(BIO_C_SET_PREFIX))) {
        private enum enumMixinStr_BIO_C_SET_PREFIX = `enum BIO_C_SET_PREFIX = 149;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_SET_PREFIX); }))) {
            mixin(enumMixinStr_BIO_C_SET_PREFIX);
        }
    }




    static if(!is(typeof(BIO_C_SET_MD_CTX))) {
        private enum enumMixinStr_BIO_C_SET_MD_CTX = `enum BIO_C_SET_MD_CTX = 148;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_SET_MD_CTX); }))) {
            mixin(enumMixinStr_BIO_C_SET_MD_CTX);
        }
    }




    static if(!is(typeof(BIO_C_RESET_READ_REQUEST))) {
        private enum enumMixinStr_BIO_C_RESET_READ_REQUEST = `enum BIO_C_RESET_READ_REQUEST = 147;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_RESET_READ_REQUEST); }))) {
            mixin(enumMixinStr_BIO_C_RESET_READ_REQUEST);
        }
    }




    static if(!is(typeof(BIO_C_NWRITE))) {
        private enum enumMixinStr_BIO_C_NWRITE = `enum BIO_C_NWRITE = 146;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_NWRITE); }))) {
            mixin(enumMixinStr_BIO_C_NWRITE);
        }
    }




    static if(!is(typeof(BIO_C_NWRITE0))) {
        private enum enumMixinStr_BIO_C_NWRITE0 = `enum BIO_C_NWRITE0 = 145;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_NWRITE0); }))) {
            mixin(enumMixinStr_BIO_C_NWRITE0);
        }
    }




    static if(!is(typeof(BIO_C_NREAD))) {
        private enum enumMixinStr_BIO_C_NREAD = `enum BIO_C_NREAD = 144;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_NREAD); }))) {
            mixin(enumMixinStr_BIO_C_NREAD);
        }
    }




    static if(!is(typeof(BIO_C_NREAD0))) {
        private enum enumMixinStr_BIO_C_NREAD0 = `enum BIO_C_NREAD0 = 143;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_NREAD0); }))) {
            mixin(enumMixinStr_BIO_C_NREAD0);
        }
    }




    static if(!is(typeof(BIO_C_SHUTDOWN_WR))) {
        private enum enumMixinStr_BIO_C_SHUTDOWN_WR = `enum BIO_C_SHUTDOWN_WR = 142;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_SHUTDOWN_WR); }))) {
            mixin(enumMixinStr_BIO_C_SHUTDOWN_WR);
        }
    }




    static if(!is(typeof(BIO_C_GET_READ_REQUEST))) {
        private enum enumMixinStr_BIO_C_GET_READ_REQUEST = `enum BIO_C_GET_READ_REQUEST = 141;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_GET_READ_REQUEST); }))) {
            mixin(enumMixinStr_BIO_C_GET_READ_REQUEST);
        }
    }




    static if(!is(typeof(BIO_C_GET_WRITE_GUARANTEE))) {
        private enum enumMixinStr_BIO_C_GET_WRITE_GUARANTEE = `enum BIO_C_GET_WRITE_GUARANTEE = 140;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_GET_WRITE_GUARANTEE); }))) {
            mixin(enumMixinStr_BIO_C_GET_WRITE_GUARANTEE);
        }
    }




    static if(!is(typeof(BIO_C_DESTROY_BIO_PAIR))) {
        private enum enumMixinStr_BIO_C_DESTROY_BIO_PAIR = `enum BIO_C_DESTROY_BIO_PAIR = 139;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_DESTROY_BIO_PAIR); }))) {
            mixin(enumMixinStr_BIO_C_DESTROY_BIO_PAIR);
        }
    }




    static if(!is(typeof(BIO_C_MAKE_BIO_PAIR))) {
        private enum enumMixinStr_BIO_C_MAKE_BIO_PAIR = `enum BIO_C_MAKE_BIO_PAIR = 138;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_MAKE_BIO_PAIR); }))) {
            mixin(enumMixinStr_BIO_C_MAKE_BIO_PAIR);
        }
    }




    static if(!is(typeof(BIO_C_GET_WRITE_BUF_SIZE))) {
        private enum enumMixinStr_BIO_C_GET_WRITE_BUF_SIZE = `enum BIO_C_GET_WRITE_BUF_SIZE = 137;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_GET_WRITE_BUF_SIZE); }))) {
            mixin(enumMixinStr_BIO_C_GET_WRITE_BUF_SIZE);
        }
    }




    static if(!is(typeof(BIO_C_SET_WRITE_BUF_SIZE))) {
        private enum enumMixinStr_BIO_C_SET_WRITE_BUF_SIZE = `enum BIO_C_SET_WRITE_BUF_SIZE = 136;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_SET_WRITE_BUF_SIZE); }))) {
            mixin(enumMixinStr_BIO_C_SET_WRITE_BUF_SIZE);
        }
    }




    static if(!is(typeof(BIO_C_SET_SOCKS))) {
        private enum enumMixinStr_BIO_C_SET_SOCKS = `enum BIO_C_SET_SOCKS = 135;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_SET_SOCKS); }))) {
            mixin(enumMixinStr_BIO_C_SET_SOCKS);
        }
    }




    static if(!is(typeof(BIO_C_GET_SOCKS))) {
        private enum enumMixinStr_BIO_C_GET_SOCKS = `enum BIO_C_GET_SOCKS = 134;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_GET_SOCKS); }))) {
            mixin(enumMixinStr_BIO_C_GET_SOCKS);
        }
    }




    static if(!is(typeof(BIO_C_FILE_TELL))) {
        private enum enumMixinStr_BIO_C_FILE_TELL = `enum BIO_C_FILE_TELL = 133;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_FILE_TELL); }))) {
            mixin(enumMixinStr_BIO_C_FILE_TELL);
        }
    }




    static if(!is(typeof(BIO_C_GET_BIND_MODE))) {
        private enum enumMixinStr_BIO_C_GET_BIND_MODE = `enum BIO_C_GET_BIND_MODE = 132;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_GET_BIND_MODE); }))) {
            mixin(enumMixinStr_BIO_C_GET_BIND_MODE);
        }
    }




    static if(!is(typeof(BIO_C_SET_BIND_MODE))) {
        private enum enumMixinStr_BIO_C_SET_BIND_MODE = `enum BIO_C_SET_BIND_MODE = 131;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_SET_BIND_MODE); }))) {
            mixin(enumMixinStr_BIO_C_SET_BIND_MODE);
        }
    }




    static if(!is(typeof(BIO_C_SET_BUF_MEM_EOF_RETURN))) {
        private enum enumMixinStr_BIO_C_SET_BUF_MEM_EOF_RETURN = `enum BIO_C_SET_BUF_MEM_EOF_RETURN = 130;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_SET_BUF_MEM_EOF_RETURN); }))) {
            mixin(enumMixinStr_BIO_C_SET_BUF_MEM_EOF_RETURN);
        }
    }




    static if(!is(typeof(BIO_C_GET_CIPHER_CTX))) {
        private enum enumMixinStr_BIO_C_GET_CIPHER_CTX = `enum BIO_C_GET_CIPHER_CTX = 129;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_GET_CIPHER_CTX); }))) {
            mixin(enumMixinStr_BIO_C_GET_CIPHER_CTX);
        }
    }




    static if(!is(typeof(BIO_C_FILE_SEEK))) {
        private enum enumMixinStr_BIO_C_FILE_SEEK = `enum BIO_C_FILE_SEEK = 128;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_FILE_SEEK); }))) {
            mixin(enumMixinStr_BIO_C_FILE_SEEK);
        }
    }




    static if(!is(typeof(BIO_C_SET_SSL_RENEGOTIATE_TIMEOUT))) {
        private enum enumMixinStr_BIO_C_SET_SSL_RENEGOTIATE_TIMEOUT = `enum BIO_C_SET_SSL_RENEGOTIATE_TIMEOUT = 127;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_SET_SSL_RENEGOTIATE_TIMEOUT); }))) {
            mixin(enumMixinStr_BIO_C_SET_SSL_RENEGOTIATE_TIMEOUT);
        }
    }




    static if(!is(typeof(BIO_C_GET_SSL_NUM_RENEGOTIATES))) {
        private enum enumMixinStr_BIO_C_GET_SSL_NUM_RENEGOTIATES = `enum BIO_C_GET_SSL_NUM_RENEGOTIATES = 126;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_GET_SSL_NUM_RENEGOTIATES); }))) {
            mixin(enumMixinStr_BIO_C_GET_SSL_NUM_RENEGOTIATES);
        }
    }




    static if(!is(typeof(BIO_C_SET_SSL_RENEGOTIATE_BYTES))) {
        private enum enumMixinStr_BIO_C_SET_SSL_RENEGOTIATE_BYTES = `enum BIO_C_SET_SSL_RENEGOTIATE_BYTES = 125;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_SET_SSL_RENEGOTIATE_BYTES); }))) {
            mixin(enumMixinStr_BIO_C_SET_SSL_RENEGOTIATE_BYTES);
        }
    }




    static if(!is(typeof(BIO_C_GET_ACCEPT))) {
        private enum enumMixinStr_BIO_C_GET_ACCEPT = `enum BIO_C_GET_ACCEPT = 124;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_GET_ACCEPT); }))) {
            mixin(enumMixinStr_BIO_C_GET_ACCEPT);
        }
    }




    static if(!is(typeof(IPAddressChoice_inherit))) {
        private enum enumMixinStr_IPAddressChoice_inherit = `enum IPAddressChoice_inherit = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_IPAddressChoice_inherit); }))) {
            mixin(enumMixinStr_IPAddressChoice_inherit);
        }
    }




    static if(!is(typeof(IPAddressChoice_addressesOrRanges))) {
        private enum enumMixinStr_IPAddressChoice_addressesOrRanges = `enum IPAddressChoice_addressesOrRanges = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_IPAddressChoice_addressesOrRanges); }))) {
            mixin(enumMixinStr_IPAddressChoice_addressesOrRanges);
        }
    }




    static if(!is(typeof(BIO_C_GET_CONNECT))) {
        private enum enumMixinStr_BIO_C_GET_CONNECT = `enum BIO_C_GET_CONNECT = 123;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_GET_CONNECT); }))) {
            mixin(enumMixinStr_BIO_C_GET_CONNECT);
        }
    }




    static if(!is(typeof(BIO_C_SET_BUFF_READ_DATA))) {
        private enum enumMixinStr_BIO_C_SET_BUFF_READ_DATA = `enum BIO_C_SET_BUFF_READ_DATA = 122;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_SET_BUFF_READ_DATA); }))) {
            mixin(enumMixinStr_BIO_C_SET_BUFF_READ_DATA);
        }
    }




    static if(!is(typeof(BIO_C_GET_MD_CTX))) {
        private enum enumMixinStr_BIO_C_GET_MD_CTX = `enum BIO_C_GET_MD_CTX = 120;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_GET_MD_CTX); }))) {
            mixin(enumMixinStr_BIO_C_GET_MD_CTX);
        }
    }




    static if(!is(typeof(BIO_C_SSL_MODE))) {
        private enum enumMixinStr_BIO_C_SSL_MODE = `enum BIO_C_SSL_MODE = 119;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_SSL_MODE); }))) {
            mixin(enumMixinStr_BIO_C_SSL_MODE);
        }
    }




    static if(!is(typeof(BIO_C_SET_ACCEPT))) {
        private enum enumMixinStr_BIO_C_SET_ACCEPT = `enum BIO_C_SET_ACCEPT = 118;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_SET_ACCEPT); }))) {
            mixin(enumMixinStr_BIO_C_SET_ACCEPT);
        }
    }




    static if(!is(typeof(BIO_C_SET_BUFF_SIZE))) {
        private enum enumMixinStr_BIO_C_SET_BUFF_SIZE = `enum BIO_C_SET_BUFF_SIZE = 117;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_SET_BUFF_SIZE); }))) {
            mixin(enumMixinStr_BIO_C_SET_BUFF_SIZE);
        }
    }




    static if(!is(typeof(BIO_C_GET_BUFF_NUM_LINES))) {
        private enum enumMixinStr_BIO_C_GET_BUFF_NUM_LINES = `enum BIO_C_GET_BUFF_NUM_LINES = 116;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_GET_BUFF_NUM_LINES); }))) {
            mixin(enumMixinStr_BIO_C_GET_BUFF_NUM_LINES);
        }
    }




    static if(!is(typeof(BIO_C_GET_BUF_MEM_PTR))) {
        private enum enumMixinStr_BIO_C_GET_BUF_MEM_PTR = `enum BIO_C_GET_BUF_MEM_PTR = 115;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_GET_BUF_MEM_PTR); }))) {
            mixin(enumMixinStr_BIO_C_GET_BUF_MEM_PTR);
        }
    }




    static if(!is(typeof(BIO_C_SET_BUF_MEM))) {
        private enum enumMixinStr_BIO_C_SET_BUF_MEM = `enum BIO_C_SET_BUF_MEM = 114;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_SET_BUF_MEM); }))) {
            mixin(enumMixinStr_BIO_C_SET_BUF_MEM);
        }
    }




    static if(!is(typeof(BIO_C_GET_CIPHER_STATUS))) {
        private enum enumMixinStr_BIO_C_GET_CIPHER_STATUS = `enum BIO_C_GET_CIPHER_STATUS = 113;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_GET_CIPHER_STATUS); }))) {
            mixin(enumMixinStr_BIO_C_GET_CIPHER_STATUS);
        }
    }




    static if(!is(typeof(BIO_C_GET_MD))) {
        private enum enumMixinStr_BIO_C_GET_MD = `enum BIO_C_GET_MD = 112;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_GET_MD); }))) {
            mixin(enumMixinStr_BIO_C_GET_MD);
        }
    }




    static if(!is(typeof(BIO_C_SET_MD))) {
        private enum enumMixinStr_BIO_C_SET_MD = `enum BIO_C_SET_MD = 111;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_SET_MD); }))) {
            mixin(enumMixinStr_BIO_C_SET_MD);
        }
    }




    static if(!is(typeof(BIO_C_GET_SSL))) {
        private enum enumMixinStr_BIO_C_GET_SSL = `enum BIO_C_GET_SSL = 110;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_GET_SSL); }))) {
            mixin(enumMixinStr_BIO_C_GET_SSL);
        }
    }




    static if(!is(typeof(BIO_C_SET_SSL))) {
        private enum enumMixinStr_BIO_C_SET_SSL = `enum BIO_C_SET_SSL = 109;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_SET_SSL); }))) {
            mixin(enumMixinStr_BIO_C_SET_SSL);
        }
    }




    static if(!is(typeof(BIO_C_SET_FILENAME))) {
        private enum enumMixinStr_BIO_C_SET_FILENAME = `enum BIO_C_SET_FILENAME = 108;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_SET_FILENAME); }))) {
            mixin(enumMixinStr_BIO_C_SET_FILENAME);
        }
    }




    static if(!is(typeof(BIO_C_GET_FILE_PTR))) {
        private enum enumMixinStr_BIO_C_GET_FILE_PTR = `enum BIO_C_GET_FILE_PTR = 107;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_GET_FILE_PTR); }))) {
            mixin(enumMixinStr_BIO_C_GET_FILE_PTR);
        }
    }




    static if(!is(typeof(BIO_C_SET_FILE_PTR))) {
        private enum enumMixinStr_BIO_C_SET_FILE_PTR = `enum BIO_C_SET_FILE_PTR = 106;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_SET_FILE_PTR); }))) {
            mixin(enumMixinStr_BIO_C_SET_FILE_PTR);
        }
    }




    static if(!is(typeof(BIO_C_GET_FD))) {
        private enum enumMixinStr_BIO_C_GET_FD = `enum BIO_C_GET_FD = 105;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_GET_FD); }))) {
            mixin(enumMixinStr_BIO_C_GET_FD);
        }
    }




    static if(!is(typeof(BIO_C_SET_FD))) {
        private enum enumMixinStr_BIO_C_SET_FD = `enum BIO_C_SET_FD = 104;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_SET_FD); }))) {
            mixin(enumMixinStr_BIO_C_SET_FD);
        }
    }




    static if(!is(typeof(BIO_C_SET_NBIO))) {
        private enum enumMixinStr_BIO_C_SET_NBIO = `enum BIO_C_SET_NBIO = 102;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_SET_NBIO); }))) {
            mixin(enumMixinStr_BIO_C_SET_NBIO);
        }
    }




    static if(!is(typeof(BIO_C_DO_STATE_MACHINE))) {
        private enum enumMixinStr_BIO_C_DO_STATE_MACHINE = `enum BIO_C_DO_STATE_MACHINE = 101;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_DO_STATE_MACHINE); }))) {
            mixin(enumMixinStr_BIO_C_DO_STATE_MACHINE);
        }
    }




    static if(!is(typeof(BIO_C_SET_CONNECT))) {
        private enum enumMixinStr_BIO_C_SET_CONNECT = `enum BIO_C_SET_CONNECT = 100;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_C_SET_CONNECT); }))) {
            mixin(enumMixinStr_BIO_C_SET_CONNECT);
        }
    }
    static if(!is(typeof(BIO_CB_RETURN))) {
        private enum enumMixinStr_BIO_CB_RETURN = `enum BIO_CB_RETURN = 0x80;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CB_RETURN); }))) {
            mixin(enumMixinStr_BIO_CB_RETURN);
        }
    }




    static if(!is(typeof(BIO_CB_CTRL))) {
        private enum enumMixinStr_BIO_CB_CTRL = `enum BIO_CB_CTRL = 0x06;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CB_CTRL); }))) {
            mixin(enumMixinStr_BIO_CB_CTRL);
        }
    }




    static if(!is(typeof(BIO_CB_GETS))) {
        private enum enumMixinStr_BIO_CB_GETS = `enum BIO_CB_GETS = 0x05;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CB_GETS); }))) {
            mixin(enumMixinStr_BIO_CB_GETS);
        }
    }




    static if(!is(typeof(BIO_CB_PUTS))) {
        private enum enumMixinStr_BIO_CB_PUTS = `enum BIO_CB_PUTS = 0x04;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CB_PUTS); }))) {
            mixin(enumMixinStr_BIO_CB_PUTS);
        }
    }




    static if(!is(typeof(BIO_CB_WRITE))) {
        private enum enumMixinStr_BIO_CB_WRITE = `enum BIO_CB_WRITE = 0x03;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CB_WRITE); }))) {
            mixin(enumMixinStr_BIO_CB_WRITE);
        }
    }




    static if(!is(typeof(BIO_CB_READ))) {
        private enum enumMixinStr_BIO_CB_READ = `enum BIO_CB_READ = 0x02;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CB_READ); }))) {
            mixin(enumMixinStr_BIO_CB_READ);
        }
    }




    static if(!is(typeof(BIO_CB_FREE))) {
        private enum enumMixinStr_BIO_CB_FREE = `enum BIO_CB_FREE = 0x01;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CB_FREE); }))) {
            mixin(enumMixinStr_BIO_CB_FREE);
        }
    }




    static if(!is(typeof(BIO_RR_ACCEPT))) {
        private enum enumMixinStr_BIO_RR_ACCEPT = `enum BIO_RR_ACCEPT = 0x03;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_RR_ACCEPT); }))) {
            mixin(enumMixinStr_BIO_RR_ACCEPT);
        }
    }




    static if(!is(typeof(BIO_RR_CONNECT))) {
        private enum enumMixinStr_BIO_RR_CONNECT = `enum BIO_RR_CONNECT = 0x02;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_RR_CONNECT); }))) {
            mixin(enumMixinStr_BIO_RR_CONNECT);
        }
    }




    static if(!is(typeof(BIO_RR_SSL_X509_LOOKUP))) {
        private enum enumMixinStr_BIO_RR_SSL_X509_LOOKUP = `enum BIO_RR_SSL_X509_LOOKUP = 0x01;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_RR_SSL_X509_LOOKUP); }))) {
            mixin(enumMixinStr_BIO_RR_SSL_X509_LOOKUP);
        }
    }
    static if(!is(typeof(BIO_FLAGS_IN_EOF))) {
        private enum enumMixinStr_BIO_FLAGS_IN_EOF = `enum BIO_FLAGS_IN_EOF = 0x800;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_FLAGS_IN_EOF); }))) {
            mixin(enumMixinStr_BIO_FLAGS_IN_EOF);
        }
    }




    static if(!is(typeof(BIO_FLAGS_NONCLEAR_RST))) {
        private enum enumMixinStr_BIO_FLAGS_NONCLEAR_RST = `enum BIO_FLAGS_NONCLEAR_RST = 0x400;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_FLAGS_NONCLEAR_RST); }))) {
            mixin(enumMixinStr_BIO_FLAGS_NONCLEAR_RST);
        }
    }




    static if(!is(typeof(BIO_FLAGS_MEM_RDONLY))) {
        private enum enumMixinStr_BIO_FLAGS_MEM_RDONLY = `enum BIO_FLAGS_MEM_RDONLY = 0x200;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_FLAGS_MEM_RDONLY); }))) {
            mixin(enumMixinStr_BIO_FLAGS_MEM_RDONLY);
        }
    }




    static if(!is(typeof(BIO_FLAGS_BASE64_NO_NL))) {
        private enum enumMixinStr_BIO_FLAGS_BASE64_NO_NL = `enum BIO_FLAGS_BASE64_NO_NL = 0x100;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_FLAGS_BASE64_NO_NL); }))) {
            mixin(enumMixinStr_BIO_FLAGS_BASE64_NO_NL);
        }
    }




    static if(!is(typeof(BIO_FLAGS_UPLINK))) {
        private enum enumMixinStr_BIO_FLAGS_UPLINK = `enum BIO_FLAGS_UPLINK = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_FLAGS_UPLINK); }))) {
            mixin(enumMixinStr_BIO_FLAGS_UPLINK);
        }
    }




    static if(!is(typeof(BIO_FLAGS_SHOULD_RETRY))) {
        private enum enumMixinStr_BIO_FLAGS_SHOULD_RETRY = `enum BIO_FLAGS_SHOULD_RETRY = 0x08;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_FLAGS_SHOULD_RETRY); }))) {
            mixin(enumMixinStr_BIO_FLAGS_SHOULD_RETRY);
        }
    }




    static if(!is(typeof(BIO_FLAGS_RWS))) {
        private enum enumMixinStr_BIO_FLAGS_RWS = `enum BIO_FLAGS_RWS = ( BIO_FLAGS_READ | BIO_FLAGS_WRITE | BIO_FLAGS_IO_SPECIAL );`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_FLAGS_RWS); }))) {
            mixin(enumMixinStr_BIO_FLAGS_RWS);
        }
    }




    static if(!is(typeof(BIO_FLAGS_IO_SPECIAL))) {
        private enum enumMixinStr_BIO_FLAGS_IO_SPECIAL = `enum BIO_FLAGS_IO_SPECIAL = 0x04;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_FLAGS_IO_SPECIAL); }))) {
            mixin(enumMixinStr_BIO_FLAGS_IO_SPECIAL);
        }
    }




    static if(!is(typeof(BIO_FLAGS_WRITE))) {
        private enum enumMixinStr_BIO_FLAGS_WRITE = `enum BIO_FLAGS_WRITE = 0x02;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_FLAGS_WRITE); }))) {
            mixin(enumMixinStr_BIO_FLAGS_WRITE);
        }
    }




    static if(!is(typeof(BIO_FLAGS_READ))) {
        private enum enumMixinStr_BIO_FLAGS_READ = `enum BIO_FLAGS_READ = 0x01;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_FLAGS_READ); }))) {
            mixin(enumMixinStr_BIO_FLAGS_READ);
        }
    }




    static if(!is(typeof(BIO_FP_TEXT))) {
        private enum enumMixinStr_BIO_FP_TEXT = `enum BIO_FP_TEXT = 0x10;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_FP_TEXT); }))) {
            mixin(enumMixinStr_BIO_FP_TEXT);
        }
    }




    static if(!is(typeof(BIO_FP_APPEND))) {
        private enum enumMixinStr_BIO_FP_APPEND = `enum BIO_FP_APPEND = 0x08;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_FP_APPEND); }))) {
            mixin(enumMixinStr_BIO_FP_APPEND);
        }
    }




    static if(!is(typeof(BIO_FP_WRITE))) {
        private enum enumMixinStr_BIO_FP_WRITE = `enum BIO_FP_WRITE = 0x04;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_FP_WRITE); }))) {
            mixin(enumMixinStr_BIO_FP_WRITE);
        }
    }




    static if(!is(typeof(V3_ASID_ASNUM))) {
        private enum enumMixinStr_V3_ASID_ASNUM = `enum V3_ASID_ASNUM = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_V3_ASID_ASNUM); }))) {
            mixin(enumMixinStr_V3_ASID_ASNUM);
        }
    }




    static if(!is(typeof(V3_ASID_RDI))) {
        private enum enumMixinStr_V3_ASID_RDI = `enum V3_ASID_RDI = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_V3_ASID_RDI); }))) {
            mixin(enumMixinStr_V3_ASID_RDI);
        }
    }




    static if(!is(typeof(IANA_AFI_IPV4))) {
        private enum enumMixinStr_IANA_AFI_IPV4 = `enum IANA_AFI_IPV4 = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_IANA_AFI_IPV4); }))) {
            mixin(enumMixinStr_IANA_AFI_IPV4);
        }
    }




    static if(!is(typeof(IANA_AFI_IPV6))) {
        private enum enumMixinStr_IANA_AFI_IPV6 = `enum IANA_AFI_IPV6 = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_IANA_AFI_IPV6); }))) {
            mixin(enumMixinStr_IANA_AFI_IPV6);
        }
    }




    static if(!is(typeof(BIO_FP_READ))) {
        private enum enumMixinStr_BIO_FP_READ = `enum BIO_FP_READ = 0x02;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_FP_READ); }))) {
            mixin(enumMixinStr_BIO_FP_READ);
        }
    }




    static if(!is(typeof(BIO_CTRL_DGRAM_SET_PEEK_MODE))) {
        private enum enumMixinStr_BIO_CTRL_DGRAM_SET_PEEK_MODE = `enum BIO_CTRL_DGRAM_SET_PEEK_MODE = 71;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_DGRAM_SET_PEEK_MODE); }))) {
            mixin(enumMixinStr_BIO_CTRL_DGRAM_SET_PEEK_MODE);
        }
    }




    static if(!is(typeof(BIO_CTRL_DGRAM_SCTP_SET_IN_HANDSHAKE))) {
        private enum enumMixinStr_BIO_CTRL_DGRAM_SCTP_SET_IN_HANDSHAKE = `enum BIO_CTRL_DGRAM_SCTP_SET_IN_HANDSHAKE = 50;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_DGRAM_SCTP_SET_IN_HANDSHAKE); }))) {
            mixin(enumMixinStr_BIO_CTRL_DGRAM_SCTP_SET_IN_HANDSHAKE);
        }
    }




    static if(!is(typeof(BIO_CTRL_DGRAM_GET_MTU_OVERHEAD))) {
        private enum enumMixinStr_BIO_CTRL_DGRAM_GET_MTU_OVERHEAD = `enum BIO_CTRL_DGRAM_GET_MTU_OVERHEAD = 49;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_DGRAM_GET_MTU_OVERHEAD); }))) {
            mixin(enumMixinStr_BIO_CTRL_DGRAM_GET_MTU_OVERHEAD);
        }
    }




    static if(!is(typeof(BIO_CTRL_DGRAM_SET_DONT_FRAG))) {
        private enum enumMixinStr_BIO_CTRL_DGRAM_SET_DONT_FRAG = `enum BIO_CTRL_DGRAM_SET_DONT_FRAG = 48;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_DGRAM_SET_DONT_FRAG); }))) {
            mixin(enumMixinStr_BIO_CTRL_DGRAM_SET_DONT_FRAG);
        }
    }




    static if(!is(typeof(BIO_CTRL_DGRAM_SET_NEXT_TIMEOUT))) {
        private enum enumMixinStr_BIO_CTRL_DGRAM_SET_NEXT_TIMEOUT = `enum BIO_CTRL_DGRAM_SET_NEXT_TIMEOUT = 45;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_DGRAM_SET_NEXT_TIMEOUT); }))) {
            mixin(enumMixinStr_BIO_CTRL_DGRAM_SET_NEXT_TIMEOUT);
        }
    }




    static if(!is(typeof(BIO_CTRL_DGRAM_SET_PEER))) {
        private enum enumMixinStr_BIO_CTRL_DGRAM_SET_PEER = `enum BIO_CTRL_DGRAM_SET_PEER = 44;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_DGRAM_SET_PEER); }))) {
            mixin(enumMixinStr_BIO_CTRL_DGRAM_SET_PEER);
        }
    }




    static if(!is(typeof(BIO_CTRL_DGRAM_GET_PEER))) {
        private enum enumMixinStr_BIO_CTRL_DGRAM_GET_PEER = `enum BIO_CTRL_DGRAM_GET_PEER = 46;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_DGRAM_GET_PEER); }))) {
            mixin(enumMixinStr_BIO_CTRL_DGRAM_GET_PEER);
        }
    }




    static if(!is(typeof(BIO_CTRL_DGRAM_MTU_EXCEEDED))) {
        private enum enumMixinStr_BIO_CTRL_DGRAM_MTU_EXCEEDED = `enum BIO_CTRL_DGRAM_MTU_EXCEEDED = 43;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_DGRAM_MTU_EXCEEDED); }))) {
            mixin(enumMixinStr_BIO_CTRL_DGRAM_MTU_EXCEEDED);
        }
    }




    static if(!is(typeof(BIO_CTRL_DGRAM_SET_MTU))) {
        private enum enumMixinStr_BIO_CTRL_DGRAM_SET_MTU = `enum BIO_CTRL_DGRAM_SET_MTU = 42;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_DGRAM_SET_MTU); }))) {
            mixin(enumMixinStr_BIO_CTRL_DGRAM_SET_MTU);
        }
    }




    static if(!is(typeof(BIO_CTRL_DGRAM_GET_MTU))) {
        private enum enumMixinStr_BIO_CTRL_DGRAM_GET_MTU = `enum BIO_CTRL_DGRAM_GET_MTU = 41;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_DGRAM_GET_MTU); }))) {
            mixin(enumMixinStr_BIO_CTRL_DGRAM_GET_MTU);
        }
    }




    static if(!is(typeof(BIO_CTRL_DGRAM_GET_FALLBACK_MTU))) {
        private enum enumMixinStr_BIO_CTRL_DGRAM_GET_FALLBACK_MTU = `enum BIO_CTRL_DGRAM_GET_FALLBACK_MTU = 47;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_DGRAM_GET_FALLBACK_MTU); }))) {
            mixin(enumMixinStr_BIO_CTRL_DGRAM_GET_FALLBACK_MTU);
        }
    }




    static if(!is(typeof(BIO_CTRL_DGRAM_QUERY_MTU))) {
        private enum enumMixinStr_BIO_CTRL_DGRAM_QUERY_MTU = `enum BIO_CTRL_DGRAM_QUERY_MTU = 40;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_DGRAM_QUERY_MTU); }))) {
            mixin(enumMixinStr_BIO_CTRL_DGRAM_QUERY_MTU);
        }
    }




    static if(!is(typeof(BIO_CTRL_DGRAM_MTU_DISCOVER))) {
        private enum enumMixinStr_BIO_CTRL_DGRAM_MTU_DISCOVER = `enum BIO_CTRL_DGRAM_MTU_DISCOVER = 39;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_DGRAM_MTU_DISCOVER); }))) {
            mixin(enumMixinStr_BIO_CTRL_DGRAM_MTU_DISCOVER);
        }
    }




    static if(!is(typeof(BIO_CTRL_DGRAM_GET_SEND_TIMER_EXP))) {
        private enum enumMixinStr_BIO_CTRL_DGRAM_GET_SEND_TIMER_EXP = `enum BIO_CTRL_DGRAM_GET_SEND_TIMER_EXP = 38;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_DGRAM_GET_SEND_TIMER_EXP); }))) {
            mixin(enumMixinStr_BIO_CTRL_DGRAM_GET_SEND_TIMER_EXP);
        }
    }




    static if(!is(typeof(BIO_CTRL_DGRAM_GET_RECV_TIMER_EXP))) {
        private enum enumMixinStr_BIO_CTRL_DGRAM_GET_RECV_TIMER_EXP = `enum BIO_CTRL_DGRAM_GET_RECV_TIMER_EXP = 37;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_DGRAM_GET_RECV_TIMER_EXP); }))) {
            mixin(enumMixinStr_BIO_CTRL_DGRAM_GET_RECV_TIMER_EXP);
        }
    }




    static if(!is(typeof(BIO_CTRL_DGRAM_GET_SEND_TIMEOUT))) {
        private enum enumMixinStr_BIO_CTRL_DGRAM_GET_SEND_TIMEOUT = `enum BIO_CTRL_DGRAM_GET_SEND_TIMEOUT = 36;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_DGRAM_GET_SEND_TIMEOUT); }))) {
            mixin(enumMixinStr_BIO_CTRL_DGRAM_GET_SEND_TIMEOUT);
        }
    }




    static if(!is(typeof(BIO_CTRL_DGRAM_SET_SEND_TIMEOUT))) {
        private enum enumMixinStr_BIO_CTRL_DGRAM_SET_SEND_TIMEOUT = `enum BIO_CTRL_DGRAM_SET_SEND_TIMEOUT = 35;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_DGRAM_SET_SEND_TIMEOUT); }))) {
            mixin(enumMixinStr_BIO_CTRL_DGRAM_SET_SEND_TIMEOUT);
        }
    }




    static if(!is(typeof(BIO_CTRL_DGRAM_GET_RECV_TIMEOUT))) {
        private enum enumMixinStr_BIO_CTRL_DGRAM_GET_RECV_TIMEOUT = `enum BIO_CTRL_DGRAM_GET_RECV_TIMEOUT = 34;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_DGRAM_GET_RECV_TIMEOUT); }))) {
            mixin(enumMixinStr_BIO_CTRL_DGRAM_GET_RECV_TIMEOUT);
        }
    }




    static if(!is(typeof(BIO_CTRL_DGRAM_SET_RECV_TIMEOUT))) {
        private enum enumMixinStr_BIO_CTRL_DGRAM_SET_RECV_TIMEOUT = `enum BIO_CTRL_DGRAM_SET_RECV_TIMEOUT = 33;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_DGRAM_SET_RECV_TIMEOUT); }))) {
            mixin(enumMixinStr_BIO_CTRL_DGRAM_SET_RECV_TIMEOUT);
        }
    }




    static if(!is(typeof(BIO_CTRL_DGRAM_SET_CONNECTED))) {
        private enum enumMixinStr_BIO_CTRL_DGRAM_SET_CONNECTED = `enum BIO_CTRL_DGRAM_SET_CONNECTED = 32;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_DGRAM_SET_CONNECTED); }))) {
            mixin(enumMixinStr_BIO_CTRL_DGRAM_SET_CONNECTED);
        }
    }




    static if(!is(typeof(BIO_CTRL_DGRAM_CONNECT))) {
        private enum enumMixinStr_BIO_CTRL_DGRAM_CONNECT = `enum BIO_CTRL_DGRAM_CONNECT = 31;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_DGRAM_CONNECT); }))) {
            mixin(enumMixinStr_BIO_CTRL_DGRAM_CONNECT);
        }
    }




    static if(!is(typeof(BIO_CTRL_SET_FILENAME))) {
        private enum enumMixinStr_BIO_CTRL_SET_FILENAME = `enum BIO_CTRL_SET_FILENAME = 30;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_SET_FILENAME); }))) {
            mixin(enumMixinStr_BIO_CTRL_SET_FILENAME);
        }
    }




    static if(!is(typeof(BIO_CTRL_PEEK))) {
        private enum enumMixinStr_BIO_CTRL_PEEK = `enum BIO_CTRL_PEEK = 29;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_PEEK); }))) {
            mixin(enumMixinStr_BIO_CTRL_PEEK);
        }
    }




    static if(!is(typeof(BIO_CTRL_GET_CALLBACK))) {
        private enum enumMixinStr_BIO_CTRL_GET_CALLBACK = `enum BIO_CTRL_GET_CALLBACK = 15;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_GET_CALLBACK); }))) {
            mixin(enumMixinStr_BIO_CTRL_GET_CALLBACK);
        }
    }




    static if(!is(typeof(BIO_CTRL_SET_CALLBACK))) {
        private enum enumMixinStr_BIO_CTRL_SET_CALLBACK = `enum BIO_CTRL_SET_CALLBACK = 14;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_SET_CALLBACK); }))) {
            mixin(enumMixinStr_BIO_CTRL_SET_CALLBACK);
        }
    }




    static if(!is(typeof(BIO_CTRL_WPENDING))) {
        private enum enumMixinStr_BIO_CTRL_WPENDING = `enum BIO_CTRL_WPENDING = 13;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_WPENDING); }))) {
            mixin(enumMixinStr_BIO_CTRL_WPENDING);
        }
    }




    static if(!is(typeof(BIO_CTRL_DUP))) {
        private enum enumMixinStr_BIO_CTRL_DUP = `enum BIO_CTRL_DUP = 12;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_DUP); }))) {
            mixin(enumMixinStr_BIO_CTRL_DUP);
        }
    }




    static if(!is(typeof(BIO_CTRL_FLUSH))) {
        private enum enumMixinStr_BIO_CTRL_FLUSH = `enum BIO_CTRL_FLUSH = 11;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_FLUSH); }))) {
            mixin(enumMixinStr_BIO_CTRL_FLUSH);
        }
    }




    static if(!is(typeof(BIO_CTRL_PENDING))) {
        private enum enumMixinStr_BIO_CTRL_PENDING = `enum BIO_CTRL_PENDING = 10;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_PENDING); }))) {
            mixin(enumMixinStr_BIO_CTRL_PENDING);
        }
    }




    static if(!is(typeof(BIO_CTRL_SET_CLOSE))) {
        private enum enumMixinStr_BIO_CTRL_SET_CLOSE = `enum BIO_CTRL_SET_CLOSE = 9;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_SET_CLOSE); }))) {
            mixin(enumMixinStr_BIO_CTRL_SET_CLOSE);
        }
    }




    static if(!is(typeof(BIO_CTRL_GET_CLOSE))) {
        private enum enumMixinStr_BIO_CTRL_GET_CLOSE = `enum BIO_CTRL_GET_CLOSE = 8;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_GET_CLOSE); }))) {
            mixin(enumMixinStr_BIO_CTRL_GET_CLOSE);
        }
    }




    static if(!is(typeof(BIO_CTRL_POP))) {
        private enum enumMixinStr_BIO_CTRL_POP = `enum BIO_CTRL_POP = 7;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_POP); }))) {
            mixin(enumMixinStr_BIO_CTRL_POP);
        }
    }




    static if(!is(typeof(BIO_CTRL_PUSH))) {
        private enum enumMixinStr_BIO_CTRL_PUSH = `enum BIO_CTRL_PUSH = 6;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_PUSH); }))) {
            mixin(enumMixinStr_BIO_CTRL_PUSH);
        }
    }




    static if(!is(typeof(BIO_CTRL_GET))) {
        private enum enumMixinStr_BIO_CTRL_GET = `enum BIO_CTRL_GET = 5;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_GET); }))) {
            mixin(enumMixinStr_BIO_CTRL_GET);
        }
    }




    static if(!is(typeof(BIO_CTRL_SET))) {
        private enum enumMixinStr_BIO_CTRL_SET = `enum BIO_CTRL_SET = 4;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_SET); }))) {
            mixin(enumMixinStr_BIO_CTRL_SET);
        }
    }




    static if(!is(typeof(BIO_CTRL_INFO))) {
        private enum enumMixinStr_BIO_CTRL_INFO = `enum BIO_CTRL_INFO = 3;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_INFO); }))) {
            mixin(enumMixinStr_BIO_CTRL_INFO);
        }
    }




    static if(!is(typeof(BIO_CTRL_EOF))) {
        private enum enumMixinStr_BIO_CTRL_EOF = `enum BIO_CTRL_EOF = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_EOF); }))) {
            mixin(enumMixinStr_BIO_CTRL_EOF);
        }
    }




    static if(!is(typeof(BIO_CTRL_RESET))) {
        private enum enumMixinStr_BIO_CTRL_RESET = `enum BIO_CTRL_RESET = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CTRL_RESET); }))) {
            mixin(enumMixinStr_BIO_CTRL_RESET);
        }
    }




    static if(!is(typeof(BIO_CLOSE))) {
        private enum enumMixinStr_BIO_CLOSE = `enum BIO_CLOSE = 0x01;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_CLOSE); }))) {
            mixin(enumMixinStr_BIO_CLOSE);
        }
    }




    static if(!is(typeof(BIO_NOCLOSE))) {
        private enum enumMixinStr_BIO_NOCLOSE = `enum BIO_NOCLOSE = 0x00;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_NOCLOSE); }))) {
            mixin(enumMixinStr_BIO_NOCLOSE);
        }
    }




    static if(!is(typeof(BIO_TYPE_START))) {
        private enum enumMixinStr_BIO_TYPE_START = `enum BIO_TYPE_START = 128;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_TYPE_START); }))) {
            mixin(enumMixinStr_BIO_TYPE_START);
        }
    }




    static if(!is(typeof(BIO_TYPE_COMP))) {
        private enum enumMixinStr_BIO_TYPE_COMP = `enum BIO_TYPE_COMP = ( 23 | BIO_TYPE_FILTER );`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_TYPE_COMP); }))) {
            mixin(enumMixinStr_BIO_TYPE_COMP);
        }
    }




    static if(!is(typeof(BIO_TYPE_ASN1))) {
        private enum enumMixinStr_BIO_TYPE_ASN1 = `enum BIO_TYPE_ASN1 = ( 22 | BIO_TYPE_FILTER );`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_TYPE_ASN1); }))) {
            mixin(enumMixinStr_BIO_TYPE_ASN1);
        }
    }




    static if(!is(typeof(BIO_TYPE_DGRAM))) {
        private enum enumMixinStr_BIO_TYPE_DGRAM = `enum BIO_TYPE_DGRAM = ( 21 | BIO_TYPE_SOURCE_SINK | BIO_TYPE_DESCRIPTOR );`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_TYPE_DGRAM); }))) {
            mixin(enumMixinStr_BIO_TYPE_DGRAM);
        }
    }




    static if(!is(typeof(BIO_TYPE_LINEBUFFER))) {
        private enum enumMixinStr_BIO_TYPE_LINEBUFFER = `enum BIO_TYPE_LINEBUFFER = ( 20 | BIO_TYPE_FILTER );`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_TYPE_LINEBUFFER); }))) {
            mixin(enumMixinStr_BIO_TYPE_LINEBUFFER);
        }
    }




    static if(!is(typeof(BIO_TYPE_BIO))) {
        private enum enumMixinStr_BIO_TYPE_BIO = `enum BIO_TYPE_BIO = ( 19 | BIO_TYPE_SOURCE_SINK );`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_TYPE_BIO); }))) {
            mixin(enumMixinStr_BIO_TYPE_BIO);
        }
    }




    static if(!is(typeof(BIO_TYPE_NULL_FILTER))) {
        private enum enumMixinStr_BIO_TYPE_NULL_FILTER = `enum BIO_TYPE_NULL_FILTER = ( 17 | BIO_TYPE_FILTER );`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_TYPE_NULL_FILTER); }))) {
            mixin(enumMixinStr_BIO_TYPE_NULL_FILTER);
        }
    }




    static if(!is(typeof(BIO_TYPE_NBIO_TEST))) {
        private enum enumMixinStr_BIO_TYPE_NBIO_TEST = `enum BIO_TYPE_NBIO_TEST = ( 16 | BIO_TYPE_FILTER );`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_TYPE_NBIO_TEST); }))) {
            mixin(enumMixinStr_BIO_TYPE_NBIO_TEST);
        }
    }




    static if(!is(typeof(BIO_TYPE_ACCEPT))) {
        private enum enumMixinStr_BIO_TYPE_ACCEPT = `enum BIO_TYPE_ACCEPT = ( 13 | BIO_TYPE_SOURCE_SINK | BIO_TYPE_DESCRIPTOR );`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_TYPE_ACCEPT); }))) {
            mixin(enumMixinStr_BIO_TYPE_ACCEPT);
        }
    }




    static if(!is(typeof(BIO_TYPE_CONNECT))) {
        private enum enumMixinStr_BIO_TYPE_CONNECT = `enum BIO_TYPE_CONNECT = ( 12 | BIO_TYPE_SOURCE_SINK | BIO_TYPE_DESCRIPTOR );`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_TYPE_CONNECT); }))) {
            mixin(enumMixinStr_BIO_TYPE_CONNECT);
        }
    }




    static if(!is(typeof(BIO_TYPE_BASE64))) {
        private enum enumMixinStr_BIO_TYPE_BASE64 = `enum BIO_TYPE_BASE64 = ( 11 | BIO_TYPE_FILTER );`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_TYPE_BASE64); }))) {
            mixin(enumMixinStr_BIO_TYPE_BASE64);
        }
    }




    static if(!is(typeof(BIO_TYPE_CIPHER))) {
        private enum enumMixinStr_BIO_TYPE_CIPHER = `enum BIO_TYPE_CIPHER = ( 10 | BIO_TYPE_FILTER );`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_TYPE_CIPHER); }))) {
            mixin(enumMixinStr_BIO_TYPE_CIPHER);
        }
    }




    static if(!is(typeof(BIO_TYPE_BUFFER))) {
        private enum enumMixinStr_BIO_TYPE_BUFFER = `enum BIO_TYPE_BUFFER = ( 9 | BIO_TYPE_FILTER );`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_TYPE_BUFFER); }))) {
            mixin(enumMixinStr_BIO_TYPE_BUFFER);
        }
    }




    static if(!is(typeof(BIO_TYPE_MD))) {
        private enum enumMixinStr_BIO_TYPE_MD = `enum BIO_TYPE_MD = ( 8 | BIO_TYPE_FILTER );`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_TYPE_MD); }))) {
            mixin(enumMixinStr_BIO_TYPE_MD);
        }
    }




    static if(!is(typeof(BIO_TYPE_SSL))) {
        private enum enumMixinStr_BIO_TYPE_SSL = `enum BIO_TYPE_SSL = ( 7 | BIO_TYPE_FILTER );`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_TYPE_SSL); }))) {
            mixin(enumMixinStr_BIO_TYPE_SSL);
        }
    }




    static if(!is(typeof(BIO_TYPE_NULL))) {
        private enum enumMixinStr_BIO_TYPE_NULL = `enum BIO_TYPE_NULL = ( 6 | BIO_TYPE_SOURCE_SINK );`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_TYPE_NULL); }))) {
            mixin(enumMixinStr_BIO_TYPE_NULL);
        }
    }




    static if(!is(typeof(BIO_TYPE_SOCKET))) {
        private enum enumMixinStr_BIO_TYPE_SOCKET = `enum BIO_TYPE_SOCKET = ( 5 | BIO_TYPE_SOURCE_SINK | BIO_TYPE_DESCRIPTOR );`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_TYPE_SOCKET); }))) {
            mixin(enumMixinStr_BIO_TYPE_SOCKET);
        }
    }




    static if(!is(typeof(BIO_TYPE_FD))) {
        private enum enumMixinStr_BIO_TYPE_FD = `enum BIO_TYPE_FD = ( 4 | BIO_TYPE_SOURCE_SINK | BIO_TYPE_DESCRIPTOR );`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_TYPE_FD); }))) {
            mixin(enumMixinStr_BIO_TYPE_FD);
        }
    }




    static if(!is(typeof(BIO_TYPE_FILE))) {
        private enum enumMixinStr_BIO_TYPE_FILE = `enum BIO_TYPE_FILE = ( 2 | BIO_TYPE_SOURCE_SINK );`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_TYPE_FILE); }))) {
            mixin(enumMixinStr_BIO_TYPE_FILE);
        }
    }




    static if(!is(typeof(BIO_TYPE_MEM))) {
        private enum enumMixinStr_BIO_TYPE_MEM = `enum BIO_TYPE_MEM = ( 1 | BIO_TYPE_SOURCE_SINK );`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_TYPE_MEM); }))) {
            mixin(enumMixinStr_BIO_TYPE_MEM);
        }
    }




    static if(!is(typeof(BIO_TYPE_NONE))) {
        private enum enumMixinStr_BIO_TYPE_NONE = `enum BIO_TYPE_NONE = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_TYPE_NONE); }))) {
            mixin(enumMixinStr_BIO_TYPE_NONE);
        }
    }




    static if(!is(typeof(BIO_TYPE_SOURCE_SINK))) {
        private enum enumMixinStr_BIO_TYPE_SOURCE_SINK = `enum BIO_TYPE_SOURCE_SINK = 0x0400;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_TYPE_SOURCE_SINK); }))) {
            mixin(enumMixinStr_BIO_TYPE_SOURCE_SINK);
        }
    }




    static if(!is(typeof(BIO_TYPE_FILTER))) {
        private enum enumMixinStr_BIO_TYPE_FILTER = `enum BIO_TYPE_FILTER = 0x0200;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_TYPE_FILTER); }))) {
            mixin(enumMixinStr_BIO_TYPE_FILTER);
        }
    }




    static if(!is(typeof(BIO_TYPE_DESCRIPTOR))) {
        private enum enumMixinStr_BIO_TYPE_DESCRIPTOR = `enum BIO_TYPE_DESCRIPTOR = 0x0100;`;
        static if(is(typeof({ mixin(enumMixinStr_BIO_TYPE_DESCRIPTOR); }))) {
            mixin(enumMixinStr_BIO_TYPE_DESCRIPTOR);
        }
    }






    static if(!is(typeof(ASN1_R_WRONG_TAG))) {
        private enum enumMixinStr_ASN1_R_WRONG_TAG = `enum ASN1_R_WRONG_TAG = 168;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_WRONG_TAG); }))) {
            mixin(enumMixinStr_ASN1_R_WRONG_TAG);
        }
    }




    static if(!is(typeof(ASN1_R_WRONG_PUBLIC_KEY_TYPE))) {
        private enum enumMixinStr_ASN1_R_WRONG_PUBLIC_KEY_TYPE = `enum ASN1_R_WRONG_PUBLIC_KEY_TYPE = 200;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_WRONG_PUBLIC_KEY_TYPE); }))) {
            mixin(enumMixinStr_ASN1_R_WRONG_PUBLIC_KEY_TYPE);
        }
    }




    static if(!is(typeof(ASN1_R_WRONG_INTEGER_TYPE))) {
        private enum enumMixinStr_ASN1_R_WRONG_INTEGER_TYPE = `enum ASN1_R_WRONG_INTEGER_TYPE = 225;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_WRONG_INTEGER_TYPE); }))) {
            mixin(enumMixinStr_ASN1_R_WRONG_INTEGER_TYPE);
        }
    }




    static if(!is(typeof(ASN1_R_UNSUPPORTED_TYPE))) {
        private enum enumMixinStr_ASN1_R_UNSUPPORTED_TYPE = `enum ASN1_R_UNSUPPORTED_TYPE = 196;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_UNSUPPORTED_TYPE); }))) {
            mixin(enumMixinStr_ASN1_R_UNSUPPORTED_TYPE);
        }
    }




    static if(!is(typeof(ASN1_R_UNSUPPORTED_PUBLIC_KEY_TYPE))) {
        private enum enumMixinStr_ASN1_R_UNSUPPORTED_PUBLIC_KEY_TYPE = `enum ASN1_R_UNSUPPORTED_PUBLIC_KEY_TYPE = 167;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_UNSUPPORTED_PUBLIC_KEY_TYPE); }))) {
            mixin(enumMixinStr_ASN1_R_UNSUPPORTED_PUBLIC_KEY_TYPE);
        }
    }




    static if(!is(typeof(ASN1_R_UNSUPPORTED_CIPHER))) {
        private enum enumMixinStr_ASN1_R_UNSUPPORTED_CIPHER = `enum ASN1_R_UNSUPPORTED_CIPHER = 228;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_UNSUPPORTED_CIPHER); }))) {
            mixin(enumMixinStr_ASN1_R_UNSUPPORTED_CIPHER);
        }
    }




    static if(!is(typeof(ASN1_R_UNSUPPORTED_ANY_DEFINED_BY_TYPE))) {
        private enum enumMixinStr_ASN1_R_UNSUPPORTED_ANY_DEFINED_BY_TYPE = `enum ASN1_R_UNSUPPORTED_ANY_DEFINED_BY_TYPE = 164;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_UNSUPPORTED_ANY_DEFINED_BY_TYPE); }))) {
            mixin(enumMixinStr_ASN1_R_UNSUPPORTED_ANY_DEFINED_BY_TYPE);
        }
    }




    static if(!is(typeof(ASN1_R_UNKNOWN_TAG))) {
        private enum enumMixinStr_ASN1_R_UNKNOWN_TAG = `enum ASN1_R_UNKNOWN_TAG = 194;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_UNKNOWN_TAG); }))) {
            mixin(enumMixinStr_ASN1_R_UNKNOWN_TAG);
        }
    }




    static if(!is(typeof(ASN1_R_UNKNOWN_SIGNATURE_ALGORITHM))) {
        private enum enumMixinStr_ASN1_R_UNKNOWN_SIGNATURE_ALGORITHM = `enum ASN1_R_UNKNOWN_SIGNATURE_ALGORITHM = 199;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_UNKNOWN_SIGNATURE_ALGORITHM); }))) {
            mixin(enumMixinStr_ASN1_R_UNKNOWN_SIGNATURE_ALGORITHM);
        }
    }




    static if(!is(typeof(ASN1_R_UNKNOWN_PUBLIC_KEY_TYPE))) {
        private enum enumMixinStr_ASN1_R_UNKNOWN_PUBLIC_KEY_TYPE = `enum ASN1_R_UNKNOWN_PUBLIC_KEY_TYPE = 163;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_UNKNOWN_PUBLIC_KEY_TYPE); }))) {
            mixin(enumMixinStr_ASN1_R_UNKNOWN_PUBLIC_KEY_TYPE);
        }
    }




    static if(!is(typeof(ASN1_R_UNKNOWN_OBJECT_TYPE))) {
        private enum enumMixinStr_ASN1_R_UNKNOWN_OBJECT_TYPE = `enum ASN1_R_UNKNOWN_OBJECT_TYPE = 162;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_UNKNOWN_OBJECT_TYPE); }))) {
            mixin(enumMixinStr_ASN1_R_UNKNOWN_OBJECT_TYPE);
        }
    }




    static if(!is(typeof(ASN1_R_UNKNOWN_MESSAGE_DIGEST_ALGORITHM))) {
        private enum enumMixinStr_ASN1_R_UNKNOWN_MESSAGE_DIGEST_ALGORITHM = `enum ASN1_R_UNKNOWN_MESSAGE_DIGEST_ALGORITHM = 161;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_UNKNOWN_MESSAGE_DIGEST_ALGORITHM); }))) {
            mixin(enumMixinStr_ASN1_R_UNKNOWN_MESSAGE_DIGEST_ALGORITHM);
        }
    }




    static if(!is(typeof(ASN1_R_UNKNOWN_FORMAT))) {
        private enum enumMixinStr_ASN1_R_UNKNOWN_FORMAT = `enum ASN1_R_UNKNOWN_FORMAT = 160;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_UNKNOWN_FORMAT); }))) {
            mixin(enumMixinStr_ASN1_R_UNKNOWN_FORMAT);
        }
    }




    static if(!is(typeof(ASN1_R_UNIVERSALSTRING_IS_WRONG_LENGTH))) {
        private enum enumMixinStr_ASN1_R_UNIVERSALSTRING_IS_WRONG_LENGTH = `enum ASN1_R_UNIVERSALSTRING_IS_WRONG_LENGTH = 215;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_UNIVERSALSTRING_IS_WRONG_LENGTH); }))) {
            mixin(enumMixinStr_ASN1_R_UNIVERSALSTRING_IS_WRONG_LENGTH);
        }
    }




    static if(!is(typeof(ASN1_R_UNEXPECTED_EOC))) {
        private enum enumMixinStr_ASN1_R_UNEXPECTED_EOC = `enum ASN1_R_UNEXPECTED_EOC = 159;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_UNEXPECTED_EOC); }))) {
            mixin(enumMixinStr_ASN1_R_UNEXPECTED_EOC);
        }
    }




    static if(!is(typeof(ASN1_R_TYPE_NOT_PRIMITIVE))) {
        private enum enumMixinStr_ASN1_R_TYPE_NOT_PRIMITIVE = `enum ASN1_R_TYPE_NOT_PRIMITIVE = 195;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_TYPE_NOT_PRIMITIVE); }))) {
            mixin(enumMixinStr_ASN1_R_TYPE_NOT_PRIMITIVE);
        }
    }




    static if(!is(typeof(ASN1_R_TYPE_NOT_CONSTRUCTED))) {
        private enum enumMixinStr_ASN1_R_TYPE_NOT_CONSTRUCTED = `enum ASN1_R_TYPE_NOT_CONSTRUCTED = 156;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_TYPE_NOT_CONSTRUCTED); }))) {
            mixin(enumMixinStr_ASN1_R_TYPE_NOT_CONSTRUCTED);
        }
    }




    static if(!is(typeof(ASN1_R_TOO_SMALL))) {
        private enum enumMixinStr_ASN1_R_TOO_SMALL = `enum ASN1_R_TOO_SMALL = 224;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_TOO_SMALL); }))) {
            mixin(enumMixinStr_ASN1_R_TOO_SMALL);
        }
    }




    static if(!is(typeof(ASN1_R_TOO_LONG))) {
        private enum enumMixinStr_ASN1_R_TOO_LONG = `enum ASN1_R_TOO_LONG = 155;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_TOO_LONG); }))) {
            mixin(enumMixinStr_ASN1_R_TOO_LONG);
        }
    }




    static if(!is(typeof(ASN1_R_TOO_LARGE))) {
        private enum enumMixinStr_ASN1_R_TOO_LARGE = `enum ASN1_R_TOO_LARGE = 223;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_TOO_LARGE); }))) {
            mixin(enumMixinStr_ASN1_R_TOO_LARGE);
        }
    }




    static if(!is(typeof(ASN1_R_TIME_NOT_ASCII_FORMAT))) {
        private enum enumMixinStr_ASN1_R_TIME_NOT_ASCII_FORMAT = `enum ASN1_R_TIME_NOT_ASCII_FORMAT = 193;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_TIME_NOT_ASCII_FORMAT); }))) {
            mixin(enumMixinStr_ASN1_R_TIME_NOT_ASCII_FORMAT);
        }
    }




    static if(!is(typeof(ASN1_R_THE_ASN1_OBJECT_IDENTIFIER_IS_NOT_KNOWN_FOR_THIS_MD))) {
        private enum enumMixinStr_ASN1_R_THE_ASN1_OBJECT_IDENTIFIER_IS_NOT_KNOWN_FOR_THIS_MD = `enum ASN1_R_THE_ASN1_OBJECT_IDENTIFIER_IS_NOT_KNOWN_FOR_THIS_MD = 154;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_THE_ASN1_OBJECT_IDENTIFIER_IS_NOT_KNOWN_FOR_THIS_MD); }))) {
            mixin(enumMixinStr_ASN1_R_THE_ASN1_OBJECT_IDENTIFIER_IS_NOT_KNOWN_FOR_THIS_MD);
        }
    }




    static if(!is(typeof(ASN1_R_STRING_TOO_SHORT))) {
        private enum enumMixinStr_ASN1_R_STRING_TOO_SHORT = `enum ASN1_R_STRING_TOO_SHORT = 152;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_STRING_TOO_SHORT); }))) {
            mixin(enumMixinStr_ASN1_R_STRING_TOO_SHORT);
        }
    }




    static if(!is(typeof(ASN1_R_STRING_TOO_LONG))) {
        private enum enumMixinStr_ASN1_R_STRING_TOO_LONG = `enum ASN1_R_STRING_TOO_LONG = 151;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_STRING_TOO_LONG); }))) {
            mixin(enumMixinStr_ASN1_R_STRING_TOO_LONG);
        }
    }




    static if(!is(typeof(ASN1_R_STREAMING_NOT_SUPPORTED))) {
        private enum enumMixinStr_ASN1_R_STREAMING_NOT_SUPPORTED = `enum ASN1_R_STREAMING_NOT_SUPPORTED = 202;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_STREAMING_NOT_SUPPORTED); }))) {
            mixin(enumMixinStr_ASN1_R_STREAMING_NOT_SUPPORTED);
        }
    }




    static if(!is(typeof(ASN1_R_SIG_INVALID_MIME_TYPE))) {
        private enum enumMixinStr_ASN1_R_SIG_INVALID_MIME_TYPE = `enum ASN1_R_SIG_INVALID_MIME_TYPE = 213;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_SIG_INVALID_MIME_TYPE); }))) {
            mixin(enumMixinStr_ASN1_R_SIG_INVALID_MIME_TYPE);
        }
    }




    static if(!is(typeof(ASN1_R_SHORT_LINE))) {
        private enum enumMixinStr_ASN1_R_SHORT_LINE = `enum ASN1_R_SHORT_LINE = 150;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_SHORT_LINE); }))) {
            mixin(enumMixinStr_ASN1_R_SHORT_LINE);
        }
    }




    static if(!is(typeof(ASN1_R_SEQUENCE_OR_SET_NEEDS_CONFIG))) {
        private enum enumMixinStr_ASN1_R_SEQUENCE_OR_SET_NEEDS_CONFIG = `enum ASN1_R_SEQUENCE_OR_SET_NEEDS_CONFIG = 192;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_SEQUENCE_OR_SET_NEEDS_CONFIG); }))) {
            mixin(enumMixinStr_ASN1_R_SEQUENCE_OR_SET_NEEDS_CONFIG);
        }
    }




    static if(!is(typeof(ASN1_R_SEQUENCE_NOT_CONSTRUCTED))) {
        private enum enumMixinStr_ASN1_R_SEQUENCE_NOT_CONSTRUCTED = `enum ASN1_R_SEQUENCE_NOT_CONSTRUCTED = 149;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_SEQUENCE_NOT_CONSTRUCTED); }))) {
            mixin(enumMixinStr_ASN1_R_SEQUENCE_NOT_CONSTRUCTED);
        }
    }




    static if(!is(typeof(ASN1_R_SEQUENCE_LENGTH_MISMATCH))) {
        private enum enumMixinStr_ASN1_R_SEQUENCE_LENGTH_MISMATCH = `enum ASN1_R_SEQUENCE_LENGTH_MISMATCH = 148;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_SEQUENCE_LENGTH_MISMATCH); }))) {
            mixin(enumMixinStr_ASN1_R_SEQUENCE_LENGTH_MISMATCH);
        }
    }




    static if(!is(typeof(ASN1_R_SECOND_NUMBER_TOO_LARGE))) {
        private enum enumMixinStr_ASN1_R_SECOND_NUMBER_TOO_LARGE = `enum ASN1_R_SECOND_NUMBER_TOO_LARGE = 147;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_SECOND_NUMBER_TOO_LARGE); }))) {
            mixin(enumMixinStr_ASN1_R_SECOND_NUMBER_TOO_LARGE);
        }
    }




    static if(!is(typeof(ASN1_R_ODD_NUMBER_OF_CHARS))) {
        private enum enumMixinStr_ASN1_R_ODD_NUMBER_OF_CHARS = `enum ASN1_R_ODD_NUMBER_OF_CHARS = 145;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_ODD_NUMBER_OF_CHARS); }))) {
            mixin(enumMixinStr_ASN1_R_ODD_NUMBER_OF_CHARS);
        }
    }




    static if(!is(typeof(ASN1_R_OBJECT_NOT_ASCII_FORMAT))) {
        private enum enumMixinStr_ASN1_R_OBJECT_NOT_ASCII_FORMAT = `enum ASN1_R_OBJECT_NOT_ASCII_FORMAT = 191;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_OBJECT_NOT_ASCII_FORMAT); }))) {
            mixin(enumMixinStr_ASN1_R_OBJECT_NOT_ASCII_FORMAT);
        }
    }




    static if(!is(typeof(ASN1_R_NULL_IS_WRONG_LENGTH))) {
        private enum enumMixinStr_ASN1_R_NULL_IS_WRONG_LENGTH = `enum ASN1_R_NULL_IS_WRONG_LENGTH = 144;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_NULL_IS_WRONG_LENGTH); }))) {
            mixin(enumMixinStr_ASN1_R_NULL_IS_WRONG_LENGTH);
        }
    }




    static if(!is(typeof(ASN1_R_NO_SIG_CONTENT_TYPE))) {
        private enum enumMixinStr_ASN1_R_NO_SIG_CONTENT_TYPE = `enum ASN1_R_NO_SIG_CONTENT_TYPE = 212;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_NO_SIG_CONTENT_TYPE); }))) {
            mixin(enumMixinStr_ASN1_R_NO_SIG_CONTENT_TYPE);
        }
    }




    static if(!is(typeof(ASN1_R_NO_MULTIPART_BOUNDARY))) {
        private enum enumMixinStr_ASN1_R_NO_MULTIPART_BOUNDARY = `enum ASN1_R_NO_MULTIPART_BOUNDARY = 211;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_NO_MULTIPART_BOUNDARY); }))) {
            mixin(enumMixinStr_ASN1_R_NO_MULTIPART_BOUNDARY);
        }
    }




    static if(!is(typeof(ASN1_R_NO_MULTIPART_BODY_FAILURE))) {
        private enum enumMixinStr_ASN1_R_NO_MULTIPART_BODY_FAILURE = `enum ASN1_R_NO_MULTIPART_BODY_FAILURE = 210;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_NO_MULTIPART_BODY_FAILURE); }))) {
            mixin(enumMixinStr_ASN1_R_NO_MULTIPART_BODY_FAILURE);
        }
    }




    static if(!is(typeof(ASN1_R_NO_MATCHING_CHOICE_TYPE))) {
        private enum enumMixinStr_ASN1_R_NO_MATCHING_CHOICE_TYPE = `enum ASN1_R_NO_MATCHING_CHOICE_TYPE = 143;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_NO_MATCHING_CHOICE_TYPE); }))) {
            mixin(enumMixinStr_ASN1_R_NO_MATCHING_CHOICE_TYPE);
        }
    }




    static if(!is(typeof(ASN1_R_NO_CONTENT_TYPE))) {
        private enum enumMixinStr_ASN1_R_NO_CONTENT_TYPE = `enum ASN1_R_NO_CONTENT_TYPE = 209;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_NO_CONTENT_TYPE); }))) {
            mixin(enumMixinStr_ASN1_R_NO_CONTENT_TYPE);
        }
    }




    static if(!is(typeof(ASN1_R_NOT_ENOUGH_DATA))) {
        private enum enumMixinStr_ASN1_R_NOT_ENOUGH_DATA = `enum ASN1_R_NOT_ENOUGH_DATA = 142;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_NOT_ENOUGH_DATA); }))) {
            mixin(enumMixinStr_ASN1_R_NOT_ENOUGH_DATA);
        }
    }




    static if(!is(typeof(ASN1_R_NOT_ASCII_FORMAT))) {
        private enum enumMixinStr_ASN1_R_NOT_ASCII_FORMAT = `enum ASN1_R_NOT_ASCII_FORMAT = 190;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_NOT_ASCII_FORMAT); }))) {
            mixin(enumMixinStr_ASN1_R_NOT_ASCII_FORMAT);
        }
    }




    static if(!is(typeof(ASN1_R_NON_HEX_CHARACTERS))) {
        private enum enumMixinStr_ASN1_R_NON_HEX_CHARACTERS = `enum ASN1_R_NON_HEX_CHARACTERS = 141;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_NON_HEX_CHARACTERS); }))) {
            mixin(enumMixinStr_ASN1_R_NON_HEX_CHARACTERS);
        }
    }




    static if(!is(typeof(ASN1_R_NESTED_TOO_DEEP))) {
        private enum enumMixinStr_ASN1_R_NESTED_TOO_DEEP = `enum ASN1_R_NESTED_TOO_DEEP = 201;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_NESTED_TOO_DEEP); }))) {
            mixin(enumMixinStr_ASN1_R_NESTED_TOO_DEEP);
        }
    }




    static if(!is(typeof(ASN1_R_NESTED_ASN1_STRING))) {
        private enum enumMixinStr_ASN1_R_NESTED_ASN1_STRING = `enum ASN1_R_NESTED_ASN1_STRING = 197;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_NESTED_ASN1_STRING); }))) {
            mixin(enumMixinStr_ASN1_R_NESTED_ASN1_STRING);
        }
    }




    static if(!is(typeof(ASN1_R_MSTRING_WRONG_TAG))) {
        private enum enumMixinStr_ASN1_R_MSTRING_WRONG_TAG = `enum ASN1_R_MSTRING_WRONG_TAG = 140;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_MSTRING_WRONG_TAG); }))) {
            mixin(enumMixinStr_ASN1_R_MSTRING_WRONG_TAG);
        }
    }




    static if(!is(typeof(ASN1_R_MSTRING_NOT_UNIVERSAL))) {
        private enum enumMixinStr_ASN1_R_MSTRING_NOT_UNIVERSAL = `enum ASN1_R_MSTRING_NOT_UNIVERSAL = 139;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_MSTRING_NOT_UNIVERSAL); }))) {
            mixin(enumMixinStr_ASN1_R_MSTRING_NOT_UNIVERSAL);
        }
    }




    static if(!is(typeof(ASN1_R_MISSING_VALUE))) {
        private enum enumMixinStr_ASN1_R_MISSING_VALUE = `enum ASN1_R_MISSING_VALUE = 189;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_MISSING_VALUE); }))) {
            mixin(enumMixinStr_ASN1_R_MISSING_VALUE);
        }
    }




    static if(!is(typeof(ASN1_R_MISSING_SECOND_NUMBER))) {
        private enum enumMixinStr_ASN1_R_MISSING_SECOND_NUMBER = `enum ASN1_R_MISSING_SECOND_NUMBER = 138;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_MISSING_SECOND_NUMBER); }))) {
            mixin(enumMixinStr_ASN1_R_MISSING_SECOND_NUMBER);
        }
    }




    static if(!is(typeof(ASN1_R_MISSING_EOC))) {
        private enum enumMixinStr_ASN1_R_MISSING_EOC = `enum ASN1_R_MISSING_EOC = 137;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_MISSING_EOC); }))) {
            mixin(enumMixinStr_ASN1_R_MISSING_EOC);
        }
    }




    static if(!is(typeof(ASN1_R_MIME_SIG_PARSE_ERROR))) {
        private enum enumMixinStr_ASN1_R_MIME_SIG_PARSE_ERROR = `enum ASN1_R_MIME_SIG_PARSE_ERROR = 208;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_MIME_SIG_PARSE_ERROR); }))) {
            mixin(enumMixinStr_ASN1_R_MIME_SIG_PARSE_ERROR);
        }
    }




    static if(!is(typeof(ASN1_R_MIME_PARSE_ERROR))) {
        private enum enumMixinStr_ASN1_R_MIME_PARSE_ERROR = `enum ASN1_R_MIME_PARSE_ERROR = 207;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_MIME_PARSE_ERROR); }))) {
            mixin(enumMixinStr_ASN1_R_MIME_PARSE_ERROR);
        }
    }




    static if(!is(typeof(ASN1_R_MIME_NO_CONTENT_TYPE))) {
        private enum enumMixinStr_ASN1_R_MIME_NO_CONTENT_TYPE = `enum ASN1_R_MIME_NO_CONTENT_TYPE = 206;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_MIME_NO_CONTENT_TYPE); }))) {
            mixin(enumMixinStr_ASN1_R_MIME_NO_CONTENT_TYPE);
        }
    }




    static if(!is(typeof(ASN1_R_LIST_ERROR))) {
        private enum enumMixinStr_ASN1_R_LIST_ERROR = `enum ASN1_R_LIST_ERROR = 188;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_LIST_ERROR); }))) {
            mixin(enumMixinStr_ASN1_R_LIST_ERROR);
        }
    }




    static if(!is(typeof(ASN1_R_INVALID_VALUE))) {
        private enum enumMixinStr_ASN1_R_INVALID_VALUE = `enum ASN1_R_INVALID_VALUE = 219;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_INVALID_VALUE); }))) {
            mixin(enumMixinStr_ASN1_R_INVALID_VALUE);
        }
    }




    static if(!is(typeof(ASN1_R_INVALID_UTF8STRING))) {
        private enum enumMixinStr_ASN1_R_INVALID_UTF8STRING = `enum ASN1_R_INVALID_UTF8STRING = 134;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_INVALID_UTF8STRING); }))) {
            mixin(enumMixinStr_ASN1_R_INVALID_UTF8STRING);
        }
    }




    static if(!is(typeof(ASN1_R_INVALID_UNIVERSALSTRING_LENGTH))) {
        private enum enumMixinStr_ASN1_R_INVALID_UNIVERSALSTRING_LENGTH = `enum ASN1_R_INVALID_UNIVERSALSTRING_LENGTH = 133;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_INVALID_UNIVERSALSTRING_LENGTH); }))) {
            mixin(enumMixinStr_ASN1_R_INVALID_UNIVERSALSTRING_LENGTH);
        }
    }




    static if(!is(typeof(ASN1_R_INVALID_STRING_TABLE_VALUE))) {
        private enum enumMixinStr_ASN1_R_INVALID_STRING_TABLE_VALUE = `enum ASN1_R_INVALID_STRING_TABLE_VALUE = 218;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_INVALID_STRING_TABLE_VALUE); }))) {
            mixin(enumMixinStr_ASN1_R_INVALID_STRING_TABLE_VALUE);
        }
    }




    static if(!is(typeof(ASN1_R_INVALID_SEPARATOR))) {
        private enum enumMixinStr_ASN1_R_INVALID_SEPARATOR = `enum ASN1_R_INVALID_SEPARATOR = 131;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_INVALID_SEPARATOR); }))) {
            mixin(enumMixinStr_ASN1_R_INVALID_SEPARATOR);
        }
    }




    static if(!is(typeof(ASN1_R_INVALID_SCRYPT_PARAMETERS))) {
        private enum enumMixinStr_ASN1_R_INVALID_SCRYPT_PARAMETERS = `enum ASN1_R_INVALID_SCRYPT_PARAMETERS = 227;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_INVALID_SCRYPT_PARAMETERS); }))) {
            mixin(enumMixinStr_ASN1_R_INVALID_SCRYPT_PARAMETERS);
        }
    }




    static if(!is(typeof(ASN1_R_INVALID_OBJECT_ENCODING))) {
        private enum enumMixinStr_ASN1_R_INVALID_OBJECT_ENCODING = `enum ASN1_R_INVALID_OBJECT_ENCODING = 216;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_INVALID_OBJECT_ENCODING); }))) {
            mixin(enumMixinStr_ASN1_R_INVALID_OBJECT_ENCODING);
        }
    }




    static if(!is(typeof(ASN1_R_INVALID_NUMBER))) {
        private enum enumMixinStr_ASN1_R_INVALID_NUMBER = `enum ASN1_R_INVALID_NUMBER = 187;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_INVALID_NUMBER); }))) {
            mixin(enumMixinStr_ASN1_R_INVALID_NUMBER);
        }
    }




    static if(!is(typeof(ASN1_R_INVALID_MODIFIER))) {
        private enum enumMixinStr_ASN1_R_INVALID_MODIFIER = `enum ASN1_R_INVALID_MODIFIER = 186;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_INVALID_MODIFIER); }))) {
            mixin(enumMixinStr_ASN1_R_INVALID_MODIFIER);
        }
    }




    static if(!is(typeof(ASN1_R_INVALID_MIME_TYPE))) {
        private enum enumMixinStr_ASN1_R_INVALID_MIME_TYPE = `enum ASN1_R_INVALID_MIME_TYPE = 205;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_INVALID_MIME_TYPE); }))) {
            mixin(enumMixinStr_ASN1_R_INVALID_MIME_TYPE);
        }
    }




    static if(!is(typeof(ASN1_R_INVALID_DIGIT))) {
        private enum enumMixinStr_ASN1_R_INVALID_DIGIT = `enum ASN1_R_INVALID_DIGIT = 130;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_INVALID_DIGIT); }))) {
            mixin(enumMixinStr_ASN1_R_INVALID_DIGIT);
        }
    }




    static if(!is(typeof(ASN1_R_INVALID_BMPSTRING_LENGTH))) {
        private enum enumMixinStr_ASN1_R_INVALID_BMPSTRING_LENGTH = `enum ASN1_R_INVALID_BMPSTRING_LENGTH = 129;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_INVALID_BMPSTRING_LENGTH); }))) {
            mixin(enumMixinStr_ASN1_R_INVALID_BMPSTRING_LENGTH);
        }
    }




    static if(!is(typeof(ASN1_R_INVALID_BIT_STRING_BITS_LEFT))) {
        private enum enumMixinStr_ASN1_R_INVALID_BIT_STRING_BITS_LEFT = `enum ASN1_R_INVALID_BIT_STRING_BITS_LEFT = 220;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_INVALID_BIT_STRING_BITS_LEFT); }))) {
            mixin(enumMixinStr_ASN1_R_INVALID_BIT_STRING_BITS_LEFT);
        }
    }




    static if(!is(typeof(ASN1_R_INTEGER_TOO_LARGE_FOR_LONG))) {
        private enum enumMixinStr_ASN1_R_INTEGER_TOO_LARGE_FOR_LONG = `enum ASN1_R_INTEGER_TOO_LARGE_FOR_LONG = 128;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_INTEGER_TOO_LARGE_FOR_LONG); }))) {
            mixin(enumMixinStr_ASN1_R_INTEGER_TOO_LARGE_FOR_LONG);
        }
    }




    static if(!is(typeof(ASN1_R_INTEGER_NOT_ASCII_FORMAT))) {
        private enum enumMixinStr_ASN1_R_INTEGER_NOT_ASCII_FORMAT = `enum ASN1_R_INTEGER_NOT_ASCII_FORMAT = 185;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_INTEGER_NOT_ASCII_FORMAT); }))) {
            mixin(enumMixinStr_ASN1_R_INTEGER_NOT_ASCII_FORMAT);
        }
    }




    static if(!is(typeof(ASN1_R_ILLEGAL_ZERO_CONTENT))) {
        private enum enumMixinStr_ASN1_R_ILLEGAL_ZERO_CONTENT = `enum ASN1_R_ILLEGAL_ZERO_CONTENT = 222;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_ILLEGAL_ZERO_CONTENT); }))) {
            mixin(enumMixinStr_ASN1_R_ILLEGAL_ZERO_CONTENT);
        }
    }




    static if(!is(typeof(ASN1_R_ILLEGAL_TIME_VALUE))) {
        private enum enumMixinStr_ASN1_R_ILLEGAL_TIME_VALUE = `enum ASN1_R_ILLEGAL_TIME_VALUE = 184;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_ILLEGAL_TIME_VALUE); }))) {
            mixin(enumMixinStr_ASN1_R_ILLEGAL_TIME_VALUE);
        }
    }




    static if(!is(typeof(ASN1_R_ILLEGAL_TAGGED_ANY))) {
        private enum enumMixinStr_ASN1_R_ILLEGAL_TAGGED_ANY = `enum ASN1_R_ILLEGAL_TAGGED_ANY = 127;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_ILLEGAL_TAGGED_ANY); }))) {
            mixin(enumMixinStr_ASN1_R_ILLEGAL_TAGGED_ANY);
        }
    }




    static if(!is(typeof(ASN1_R_ILLEGAL_PADDING))) {
        private enum enumMixinStr_ASN1_R_ILLEGAL_PADDING = `enum ASN1_R_ILLEGAL_PADDING = 221;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_ILLEGAL_PADDING); }))) {
            mixin(enumMixinStr_ASN1_R_ILLEGAL_PADDING);
        }
    }




    static if(!is(typeof(ASN1_R_ILLEGAL_OPTIONS_ON_ITEM_TEMPLATE))) {
        private enum enumMixinStr_ASN1_R_ILLEGAL_OPTIONS_ON_ITEM_TEMPLATE = `enum ASN1_R_ILLEGAL_OPTIONS_ON_ITEM_TEMPLATE = 170;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_ILLEGAL_OPTIONS_ON_ITEM_TEMPLATE); }))) {
            mixin(enumMixinStr_ASN1_R_ILLEGAL_OPTIONS_ON_ITEM_TEMPLATE);
        }
    }




    static if(!is(typeof(ASN1_R_ILLEGAL_OPTIONAL_ANY))) {
        private enum enumMixinStr_ASN1_R_ILLEGAL_OPTIONAL_ANY = `enum ASN1_R_ILLEGAL_OPTIONAL_ANY = 126;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_ILLEGAL_OPTIONAL_ANY); }))) {
            mixin(enumMixinStr_ASN1_R_ILLEGAL_OPTIONAL_ANY);
        }
    }




    static if(!is(typeof(ASN1_R_ILLEGAL_OBJECT))) {
        private enum enumMixinStr_ASN1_R_ILLEGAL_OBJECT = `enum ASN1_R_ILLEGAL_OBJECT = 183;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_ILLEGAL_OBJECT); }))) {
            mixin(enumMixinStr_ASN1_R_ILLEGAL_OBJECT);
        }
    }




    static if(!is(typeof(ASN1_R_ILLEGAL_NULL_VALUE))) {
        private enum enumMixinStr_ASN1_R_ILLEGAL_NULL_VALUE = `enum ASN1_R_ILLEGAL_NULL_VALUE = 182;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_ILLEGAL_NULL_VALUE); }))) {
            mixin(enumMixinStr_ASN1_R_ILLEGAL_NULL_VALUE);
        }
    }




    static if(!is(typeof(ASN1_R_ILLEGAL_NULL))) {
        private enum enumMixinStr_ASN1_R_ILLEGAL_NULL = `enum ASN1_R_ILLEGAL_NULL = 125;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_ILLEGAL_NULL); }))) {
            mixin(enumMixinStr_ASN1_R_ILLEGAL_NULL);
        }
    }




    static if(!is(typeof(ASN1_R_ILLEGAL_NESTED_TAGGING))) {
        private enum enumMixinStr_ASN1_R_ILLEGAL_NESTED_TAGGING = `enum ASN1_R_ILLEGAL_NESTED_TAGGING = 181;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_ILLEGAL_NESTED_TAGGING); }))) {
            mixin(enumMixinStr_ASN1_R_ILLEGAL_NESTED_TAGGING);
        }
    }




    static if(!is(typeof(ASN1_R_ILLEGAL_NEGATIVE_VALUE))) {
        private enum enumMixinStr_ASN1_R_ILLEGAL_NEGATIVE_VALUE = `enum ASN1_R_ILLEGAL_NEGATIVE_VALUE = 226;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_ILLEGAL_NEGATIVE_VALUE); }))) {
            mixin(enumMixinStr_ASN1_R_ILLEGAL_NEGATIVE_VALUE);
        }
    }




    static if(!is(typeof(ASN1_R_ILLEGAL_INTEGER))) {
        private enum enumMixinStr_ASN1_R_ILLEGAL_INTEGER = `enum ASN1_R_ILLEGAL_INTEGER = 180;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_ILLEGAL_INTEGER); }))) {
            mixin(enumMixinStr_ASN1_R_ILLEGAL_INTEGER);
        }
    }




    static if(!is(typeof(ASN1_R_ILLEGAL_IMPLICIT_TAG))) {
        private enum enumMixinStr_ASN1_R_ILLEGAL_IMPLICIT_TAG = `enum ASN1_R_ILLEGAL_IMPLICIT_TAG = 179;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_ILLEGAL_IMPLICIT_TAG); }))) {
            mixin(enumMixinStr_ASN1_R_ILLEGAL_IMPLICIT_TAG);
        }
    }




    static if(!is(typeof(ASN1_R_ILLEGAL_HEX))) {
        private enum enumMixinStr_ASN1_R_ILLEGAL_HEX = `enum ASN1_R_ILLEGAL_HEX = 178;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_ILLEGAL_HEX); }))) {
            mixin(enumMixinStr_ASN1_R_ILLEGAL_HEX);
        }
    }




    static if(!is(typeof(ASN1_R_ILLEGAL_FORMAT))) {
        private enum enumMixinStr_ASN1_R_ILLEGAL_FORMAT = `enum ASN1_R_ILLEGAL_FORMAT = 177;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_ILLEGAL_FORMAT); }))) {
            mixin(enumMixinStr_ASN1_R_ILLEGAL_FORMAT);
        }
    }




    static if(!is(typeof(ASN1_R_ILLEGAL_CHARACTERS))) {
        private enum enumMixinStr_ASN1_R_ILLEGAL_CHARACTERS = `enum ASN1_R_ILLEGAL_CHARACTERS = 124;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_ILLEGAL_CHARACTERS); }))) {
            mixin(enumMixinStr_ASN1_R_ILLEGAL_CHARACTERS);
        }
    }




    static if(!is(typeof(ASN1_R_ILLEGAL_BOOLEAN))) {
        private enum enumMixinStr_ASN1_R_ILLEGAL_BOOLEAN = `enum ASN1_R_ILLEGAL_BOOLEAN = 176;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_ILLEGAL_BOOLEAN); }))) {
            mixin(enumMixinStr_ASN1_R_ILLEGAL_BOOLEAN);
        }
    }




    static if(!is(typeof(ASN1_R_ILLEGAL_BITSTRING_FORMAT))) {
        private enum enumMixinStr_ASN1_R_ILLEGAL_BITSTRING_FORMAT = `enum ASN1_R_ILLEGAL_BITSTRING_FORMAT = 175;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_ILLEGAL_BITSTRING_FORMAT); }))) {
            mixin(enumMixinStr_ASN1_R_ILLEGAL_BITSTRING_FORMAT);
        }
    }




    static if(!is(typeof(ASN1_R_HEADER_TOO_LONG))) {
        private enum enumMixinStr_ASN1_R_HEADER_TOO_LONG = `enum ASN1_R_HEADER_TOO_LONG = 123;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_HEADER_TOO_LONG); }))) {
            mixin(enumMixinStr_ASN1_R_HEADER_TOO_LONG);
        }
    }




    static if(!is(typeof(ASN1_R_FIRST_NUM_TOO_LARGE))) {
        private enum enumMixinStr_ASN1_R_FIRST_NUM_TOO_LARGE = `enum ASN1_R_FIRST_NUM_TOO_LARGE = 122;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_FIRST_NUM_TOO_LARGE); }))) {
            mixin(enumMixinStr_ASN1_R_FIRST_NUM_TOO_LARGE);
        }
    }




    static if(!is(typeof(ASN1_R_FIELD_MISSING))) {
        private enum enumMixinStr_ASN1_R_FIELD_MISSING = `enum ASN1_R_FIELD_MISSING = 121;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_FIELD_MISSING); }))) {
            mixin(enumMixinStr_ASN1_R_FIELD_MISSING);
        }
    }




    static if(!is(typeof(ASN1_R_EXPLICIT_TAG_NOT_CONSTRUCTED))) {
        private enum enumMixinStr_ASN1_R_EXPLICIT_TAG_NOT_CONSTRUCTED = `enum ASN1_R_EXPLICIT_TAG_NOT_CONSTRUCTED = 120;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_EXPLICIT_TAG_NOT_CONSTRUCTED); }))) {
            mixin(enumMixinStr_ASN1_R_EXPLICIT_TAG_NOT_CONSTRUCTED);
        }
    }




    static if(!is(typeof(ASN1_R_EXPLICIT_LENGTH_MISMATCH))) {
        private enum enumMixinStr_ASN1_R_EXPLICIT_LENGTH_MISMATCH = `enum ASN1_R_EXPLICIT_LENGTH_MISMATCH = 119;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_EXPLICIT_LENGTH_MISMATCH); }))) {
            mixin(enumMixinStr_ASN1_R_EXPLICIT_LENGTH_MISMATCH);
        }
    }




    static if(!is(typeof(ASN1_R_EXPECTING_AN_OBJECT))) {
        private enum enumMixinStr_ASN1_R_EXPECTING_AN_OBJECT = `enum ASN1_R_EXPECTING_AN_OBJECT = 116;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_EXPECTING_AN_OBJECT); }))) {
            mixin(enumMixinStr_ASN1_R_EXPECTING_AN_OBJECT);
        }
    }




    static if(!is(typeof(ASN1_R_EXPECTING_AN_INTEGER))) {
        private enum enumMixinStr_ASN1_R_EXPECTING_AN_INTEGER = `enum ASN1_R_EXPECTING_AN_INTEGER = 115;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_EXPECTING_AN_INTEGER); }))) {
            mixin(enumMixinStr_ASN1_R_EXPECTING_AN_INTEGER);
        }
    }




    static if(!is(typeof(ASN1_R_ERROR_SETTING_CIPHER_PARAMS))) {
        private enum enumMixinStr_ASN1_R_ERROR_SETTING_CIPHER_PARAMS = `enum ASN1_R_ERROR_SETTING_CIPHER_PARAMS = 114;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_ERROR_SETTING_CIPHER_PARAMS); }))) {
            mixin(enumMixinStr_ASN1_R_ERROR_SETTING_CIPHER_PARAMS);
        }
    }




    static if(!is(typeof(ASN1_R_ERROR_LOADING_SECTION))) {
        private enum enumMixinStr_ASN1_R_ERROR_LOADING_SECTION = `enum ASN1_R_ERROR_LOADING_SECTION = 172;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_ERROR_LOADING_SECTION); }))) {
            mixin(enumMixinStr_ASN1_R_ERROR_LOADING_SECTION);
        }
    }




    static if(!is(typeof(ASN1_R_ERROR_GETTING_TIME))) {
        private enum enumMixinStr_ASN1_R_ERROR_GETTING_TIME = `enum ASN1_R_ERROR_GETTING_TIME = 173;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_ERROR_GETTING_TIME); }))) {
            mixin(enumMixinStr_ASN1_R_ERROR_GETTING_TIME);
        }
    }




    static if(!is(typeof(ASN1_R_ENCODE_ERROR))) {
        private enum enumMixinStr_ASN1_R_ENCODE_ERROR = `enum ASN1_R_ENCODE_ERROR = 112;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_ENCODE_ERROR); }))) {
            mixin(enumMixinStr_ASN1_R_ENCODE_ERROR);
        }
    }




    static if(!is(typeof(ASN1_R_DIGEST_AND_KEY_TYPE_NOT_SUPPORTED))) {
        private enum enumMixinStr_ASN1_R_DIGEST_AND_KEY_TYPE_NOT_SUPPORTED = `enum ASN1_R_DIGEST_AND_KEY_TYPE_NOT_SUPPORTED = 198;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_DIGEST_AND_KEY_TYPE_NOT_SUPPORTED); }))) {
            mixin(enumMixinStr_ASN1_R_DIGEST_AND_KEY_TYPE_NOT_SUPPORTED);
        }
    }




    static if(!is(typeof(ASN1_R_DEPTH_EXCEEDED))) {
        private enum enumMixinStr_ASN1_R_DEPTH_EXCEEDED = `enum ASN1_R_DEPTH_EXCEEDED = 174;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_DEPTH_EXCEEDED); }))) {
            mixin(enumMixinStr_ASN1_R_DEPTH_EXCEEDED);
        }
    }




    static if(!is(typeof(ASN1_R_DECODE_ERROR))) {
        private enum enumMixinStr_ASN1_R_DECODE_ERROR = `enum ASN1_R_DECODE_ERROR = 110;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_DECODE_ERROR); }))) {
            mixin(enumMixinStr_ASN1_R_DECODE_ERROR);
        }
    }




    static if(!is(typeof(ASN1_R_DATA_IS_WRONG))) {
        private enum enumMixinStr_ASN1_R_DATA_IS_WRONG = `enum ASN1_R_DATA_IS_WRONG = 109;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_DATA_IS_WRONG); }))) {
            mixin(enumMixinStr_ASN1_R_DATA_IS_WRONG);
        }
    }




    static if(!is(typeof(ASN1_R_CONTEXT_NOT_INITIALISED))) {
        private enum enumMixinStr_ASN1_R_CONTEXT_NOT_INITIALISED = `enum ASN1_R_CONTEXT_NOT_INITIALISED = 217;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_CONTEXT_NOT_INITIALISED); }))) {
            mixin(enumMixinStr_ASN1_R_CONTEXT_NOT_INITIALISED);
        }
    }




    static if(!is(typeof(ASN1_R_CIPHER_HAS_NO_OBJECT_IDENTIFIER))) {
        private enum enumMixinStr_ASN1_R_CIPHER_HAS_NO_OBJECT_IDENTIFIER = `enum ASN1_R_CIPHER_HAS_NO_OBJECT_IDENTIFIER = 108;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_CIPHER_HAS_NO_OBJECT_IDENTIFIER); }))) {
            mixin(enumMixinStr_ASN1_R_CIPHER_HAS_NO_OBJECT_IDENTIFIER);
        }
    }




    static if(!is(typeof(ASN1_R_BUFFER_TOO_SMALL))) {
        private enum enumMixinStr_ASN1_R_BUFFER_TOO_SMALL = `enum ASN1_R_BUFFER_TOO_SMALL = 107;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_BUFFER_TOO_SMALL); }))) {
            mixin(enumMixinStr_ASN1_R_BUFFER_TOO_SMALL);
        }
    }




    static if(!is(typeof(ASN1_R_BOOLEAN_IS_WRONG_LENGTH))) {
        private enum enumMixinStr_ASN1_R_BOOLEAN_IS_WRONG_LENGTH = `enum ASN1_R_BOOLEAN_IS_WRONG_LENGTH = 106;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_BOOLEAN_IS_WRONG_LENGTH); }))) {
            mixin(enumMixinStr_ASN1_R_BOOLEAN_IS_WRONG_LENGTH);
        }
    }




    static if(!is(typeof(ASN1_R_BN_LIB))) {
        private enum enumMixinStr_ASN1_R_BN_LIB = `enum ASN1_R_BN_LIB = 105;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_BN_LIB); }))) {
            mixin(enumMixinStr_ASN1_R_BN_LIB);
        }
    }




    static if(!is(typeof(ASN1_R_BMPSTRING_IS_WRONG_LENGTH))) {
        private enum enumMixinStr_ASN1_R_BMPSTRING_IS_WRONG_LENGTH = `enum ASN1_R_BMPSTRING_IS_WRONG_LENGTH = 214;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_BMPSTRING_IS_WRONG_LENGTH); }))) {
            mixin(enumMixinStr_ASN1_R_BMPSTRING_IS_WRONG_LENGTH);
        }
    }




    static if(!is(typeof(ASN1_R_BAD_TEMPLATE))) {
        private enum enumMixinStr_ASN1_R_BAD_TEMPLATE = `enum ASN1_R_BAD_TEMPLATE = 230;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_BAD_TEMPLATE); }))) {
            mixin(enumMixinStr_ASN1_R_BAD_TEMPLATE);
        }
    }






    static if(!is(typeof(ASN1_R_BAD_OBJECT_HEADER))) {
        private enum enumMixinStr_ASN1_R_BAD_OBJECT_HEADER = `enum ASN1_R_BAD_OBJECT_HEADER = 102;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_BAD_OBJECT_HEADER); }))) {
            mixin(enumMixinStr_ASN1_R_BAD_OBJECT_HEADER);
        }
    }




    static if(!is(typeof(ASN1_R_AUX_ERROR))) {
        private enum enumMixinStr_ASN1_R_AUX_ERROR = `enum ASN1_R_AUX_ERROR = 100;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_AUX_ERROR); }))) {
            mixin(enumMixinStr_ASN1_R_AUX_ERROR);
        }
    }




    static if(!is(typeof(X509V3_F_A2I_GENERAL_NAME))) {
        private enum enumMixinStr_X509V3_F_A2I_GENERAL_NAME = `enum X509V3_F_A2I_GENERAL_NAME = 164;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_A2I_GENERAL_NAME); }))) {
            mixin(enumMixinStr_X509V3_F_A2I_GENERAL_NAME);
        }
    }




    static if(!is(typeof(X509V3_F_ADDR_VALIDATE_PATH_INTERNAL))) {
        private enum enumMixinStr_X509V3_F_ADDR_VALIDATE_PATH_INTERNAL = `enum X509V3_F_ADDR_VALIDATE_PATH_INTERNAL = 166;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_ADDR_VALIDATE_PATH_INTERNAL); }))) {
            mixin(enumMixinStr_X509V3_F_ADDR_VALIDATE_PATH_INTERNAL);
        }
    }




    static if(!is(typeof(X509V3_F_ASIDENTIFIERCHOICE_CANONIZE))) {
        private enum enumMixinStr_X509V3_F_ASIDENTIFIERCHOICE_CANONIZE = `enum X509V3_F_ASIDENTIFIERCHOICE_CANONIZE = 161;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_ASIDENTIFIERCHOICE_CANONIZE); }))) {
            mixin(enumMixinStr_X509V3_F_ASIDENTIFIERCHOICE_CANONIZE);
        }
    }




    static if(!is(typeof(X509V3_F_ASIDENTIFIERCHOICE_IS_CANONICAL))) {
        private enum enumMixinStr_X509V3_F_ASIDENTIFIERCHOICE_IS_CANONICAL = `enum X509V3_F_ASIDENTIFIERCHOICE_IS_CANONICAL = 162;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_ASIDENTIFIERCHOICE_IS_CANONICAL); }))) {
            mixin(enumMixinStr_X509V3_F_ASIDENTIFIERCHOICE_IS_CANONICAL);
        }
    }




    static if(!is(typeof(X509V3_F_BIGNUM_TO_STRING))) {
        private enum enumMixinStr_X509V3_F_BIGNUM_TO_STRING = `enum X509V3_F_BIGNUM_TO_STRING = 167;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_BIGNUM_TO_STRING); }))) {
            mixin(enumMixinStr_X509V3_F_BIGNUM_TO_STRING);
        }
    }




    static if(!is(typeof(X509V3_F_COPY_EMAIL))) {
        private enum enumMixinStr_X509V3_F_COPY_EMAIL = `enum X509V3_F_COPY_EMAIL = 122;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_COPY_EMAIL); }))) {
            mixin(enumMixinStr_X509V3_F_COPY_EMAIL);
        }
    }




    static if(!is(typeof(X509V3_F_COPY_ISSUER))) {
        private enum enumMixinStr_X509V3_F_COPY_ISSUER = `enum X509V3_F_COPY_ISSUER = 123;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_COPY_ISSUER); }))) {
            mixin(enumMixinStr_X509V3_F_COPY_ISSUER);
        }
    }




    static if(!is(typeof(X509V3_F_DO_DIRNAME))) {
        private enum enumMixinStr_X509V3_F_DO_DIRNAME = `enum X509V3_F_DO_DIRNAME = 144;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_DO_DIRNAME); }))) {
            mixin(enumMixinStr_X509V3_F_DO_DIRNAME);
        }
    }




    static if(!is(typeof(X509V3_F_DO_EXT_I2D))) {
        private enum enumMixinStr_X509V3_F_DO_EXT_I2D = `enum X509V3_F_DO_EXT_I2D = 135;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_DO_EXT_I2D); }))) {
            mixin(enumMixinStr_X509V3_F_DO_EXT_I2D);
        }
    }




    static if(!is(typeof(X509V3_F_DO_EXT_NCONF))) {
        private enum enumMixinStr_X509V3_F_DO_EXT_NCONF = `enum X509V3_F_DO_EXT_NCONF = 151;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_DO_EXT_NCONF); }))) {
            mixin(enumMixinStr_X509V3_F_DO_EXT_NCONF);
        }
    }




    static if(!is(typeof(X509V3_F_GNAMES_FROM_SECTNAME))) {
        private enum enumMixinStr_X509V3_F_GNAMES_FROM_SECTNAME = `enum X509V3_F_GNAMES_FROM_SECTNAME = 156;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_GNAMES_FROM_SECTNAME); }))) {
            mixin(enumMixinStr_X509V3_F_GNAMES_FROM_SECTNAME);
        }
    }




    static if(!is(typeof(X509V3_F_I2S_ASN1_ENUMERATED))) {
        private enum enumMixinStr_X509V3_F_I2S_ASN1_ENUMERATED = `enum X509V3_F_I2S_ASN1_ENUMERATED = 121;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_I2S_ASN1_ENUMERATED); }))) {
            mixin(enumMixinStr_X509V3_F_I2S_ASN1_ENUMERATED);
        }
    }




    static if(!is(typeof(X509V3_F_I2S_ASN1_IA5STRING))) {
        private enum enumMixinStr_X509V3_F_I2S_ASN1_IA5STRING = `enum X509V3_F_I2S_ASN1_IA5STRING = 149;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_I2S_ASN1_IA5STRING); }))) {
            mixin(enumMixinStr_X509V3_F_I2S_ASN1_IA5STRING);
        }
    }




    static if(!is(typeof(X509V3_F_I2S_ASN1_INTEGER))) {
        private enum enumMixinStr_X509V3_F_I2S_ASN1_INTEGER = `enum X509V3_F_I2S_ASN1_INTEGER = 120;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_I2S_ASN1_INTEGER); }))) {
            mixin(enumMixinStr_X509V3_F_I2S_ASN1_INTEGER);
        }
    }




    static if(!is(typeof(X509V3_F_I2V_AUTHORITY_INFO_ACCESS))) {
        private enum enumMixinStr_X509V3_F_I2V_AUTHORITY_INFO_ACCESS = `enum X509V3_F_I2V_AUTHORITY_INFO_ACCESS = 138;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_I2V_AUTHORITY_INFO_ACCESS); }))) {
            mixin(enumMixinStr_X509V3_F_I2V_AUTHORITY_INFO_ACCESS);
        }
    }




    static if(!is(typeof(X509V3_F_LEVEL_ADD_NODE))) {
        private enum enumMixinStr_X509V3_F_LEVEL_ADD_NODE = `enum X509V3_F_LEVEL_ADD_NODE = 168;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_LEVEL_ADD_NODE); }))) {
            mixin(enumMixinStr_X509V3_F_LEVEL_ADD_NODE);
        }
    }




    static if(!is(typeof(X509V3_F_NOTICE_SECTION))) {
        private enum enumMixinStr_X509V3_F_NOTICE_SECTION = `enum X509V3_F_NOTICE_SECTION = 132;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_NOTICE_SECTION); }))) {
            mixin(enumMixinStr_X509V3_F_NOTICE_SECTION);
        }
    }




    static if(!is(typeof(X509V3_F_NREF_NOS))) {
        private enum enumMixinStr_X509V3_F_NREF_NOS = `enum X509V3_F_NREF_NOS = 133;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_NREF_NOS); }))) {
            mixin(enumMixinStr_X509V3_F_NREF_NOS);
        }
    }




    static if(!is(typeof(X509V3_F_POLICY_CACHE_CREATE))) {
        private enum enumMixinStr_X509V3_F_POLICY_CACHE_CREATE = `enum X509V3_F_POLICY_CACHE_CREATE = 169;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_POLICY_CACHE_CREATE); }))) {
            mixin(enumMixinStr_X509V3_F_POLICY_CACHE_CREATE);
        }
    }




    static if(!is(typeof(X509V3_F_POLICY_CACHE_NEW))) {
        private enum enumMixinStr_X509V3_F_POLICY_CACHE_NEW = `enum X509V3_F_POLICY_CACHE_NEW = 170;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_POLICY_CACHE_NEW); }))) {
            mixin(enumMixinStr_X509V3_F_POLICY_CACHE_NEW);
        }
    }




    static if(!is(typeof(X509V3_F_POLICY_DATA_NEW))) {
        private enum enumMixinStr_X509V3_F_POLICY_DATA_NEW = `enum X509V3_F_POLICY_DATA_NEW = 171;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_POLICY_DATA_NEW); }))) {
            mixin(enumMixinStr_X509V3_F_POLICY_DATA_NEW);
        }
    }




    static if(!is(typeof(X509V3_F_POLICY_SECTION))) {
        private enum enumMixinStr_X509V3_F_POLICY_SECTION = `enum X509V3_F_POLICY_SECTION = 131;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_POLICY_SECTION); }))) {
            mixin(enumMixinStr_X509V3_F_POLICY_SECTION);
        }
    }




    static if(!is(typeof(X509V3_F_PROCESS_PCI_VALUE))) {
        private enum enumMixinStr_X509V3_F_PROCESS_PCI_VALUE = `enum X509V3_F_PROCESS_PCI_VALUE = 150;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_PROCESS_PCI_VALUE); }))) {
            mixin(enumMixinStr_X509V3_F_PROCESS_PCI_VALUE);
        }
    }




    static if(!is(typeof(X509V3_F_R2I_CERTPOL))) {
        private enum enumMixinStr_X509V3_F_R2I_CERTPOL = `enum X509V3_F_R2I_CERTPOL = 130;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_R2I_CERTPOL); }))) {
            mixin(enumMixinStr_X509V3_F_R2I_CERTPOL);
        }
    }




    static if(!is(typeof(X509V3_F_R2I_PCI))) {
        private enum enumMixinStr_X509V3_F_R2I_PCI = `enum X509V3_F_R2I_PCI = 155;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_R2I_PCI); }))) {
            mixin(enumMixinStr_X509V3_F_R2I_PCI);
        }
    }




    static if(!is(typeof(X509V3_F_S2I_ASN1_IA5STRING))) {
        private enum enumMixinStr_X509V3_F_S2I_ASN1_IA5STRING = `enum X509V3_F_S2I_ASN1_IA5STRING = 100;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_S2I_ASN1_IA5STRING); }))) {
            mixin(enumMixinStr_X509V3_F_S2I_ASN1_IA5STRING);
        }
    }




    static if(!is(typeof(X509V3_F_S2I_ASN1_INTEGER))) {
        private enum enumMixinStr_X509V3_F_S2I_ASN1_INTEGER = `enum X509V3_F_S2I_ASN1_INTEGER = 108;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_S2I_ASN1_INTEGER); }))) {
            mixin(enumMixinStr_X509V3_F_S2I_ASN1_INTEGER);
        }
    }




    static if(!is(typeof(X509V3_F_S2I_ASN1_OCTET_STRING))) {
        private enum enumMixinStr_X509V3_F_S2I_ASN1_OCTET_STRING = `enum X509V3_F_S2I_ASN1_OCTET_STRING = 112;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_S2I_ASN1_OCTET_STRING); }))) {
            mixin(enumMixinStr_X509V3_F_S2I_ASN1_OCTET_STRING);
        }
    }




    static if(!is(typeof(X509V3_F_S2I_SKEY_ID))) {
        private enum enumMixinStr_X509V3_F_S2I_SKEY_ID = `enum X509V3_F_S2I_SKEY_ID = 115;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_S2I_SKEY_ID); }))) {
            mixin(enumMixinStr_X509V3_F_S2I_SKEY_ID);
        }
    }




    static if(!is(typeof(X509V3_F_SET_DIST_POINT_NAME))) {
        private enum enumMixinStr_X509V3_F_SET_DIST_POINT_NAME = `enum X509V3_F_SET_DIST_POINT_NAME = 158;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_SET_DIST_POINT_NAME); }))) {
            mixin(enumMixinStr_X509V3_F_SET_DIST_POINT_NAME);
        }
    }




    static if(!is(typeof(X509V3_F_SXNET_ADD_ID_ASC))) {
        private enum enumMixinStr_X509V3_F_SXNET_ADD_ID_ASC = `enum X509V3_F_SXNET_ADD_ID_ASC = 125;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_SXNET_ADD_ID_ASC); }))) {
            mixin(enumMixinStr_X509V3_F_SXNET_ADD_ID_ASC);
        }
    }




    static if(!is(typeof(X509V3_F_SXNET_ADD_ID_INTEGER))) {
        private enum enumMixinStr_X509V3_F_SXNET_ADD_ID_INTEGER = `enum X509V3_F_SXNET_ADD_ID_INTEGER = 126;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_SXNET_ADD_ID_INTEGER); }))) {
            mixin(enumMixinStr_X509V3_F_SXNET_ADD_ID_INTEGER);
        }
    }




    static if(!is(typeof(X509V3_F_SXNET_ADD_ID_ULONG))) {
        private enum enumMixinStr_X509V3_F_SXNET_ADD_ID_ULONG = `enum X509V3_F_SXNET_ADD_ID_ULONG = 127;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_SXNET_ADD_ID_ULONG); }))) {
            mixin(enumMixinStr_X509V3_F_SXNET_ADD_ID_ULONG);
        }
    }




    static if(!is(typeof(X509V3_F_SXNET_GET_ID_ASC))) {
        private enum enumMixinStr_X509V3_F_SXNET_GET_ID_ASC = `enum X509V3_F_SXNET_GET_ID_ASC = 128;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_SXNET_GET_ID_ASC); }))) {
            mixin(enumMixinStr_X509V3_F_SXNET_GET_ID_ASC);
        }
    }




    static if(!is(typeof(X509V3_F_SXNET_GET_ID_ULONG))) {
        private enum enumMixinStr_X509V3_F_SXNET_GET_ID_ULONG = `enum X509V3_F_SXNET_GET_ID_ULONG = 129;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_SXNET_GET_ID_ULONG); }))) {
            mixin(enumMixinStr_X509V3_F_SXNET_GET_ID_ULONG);
        }
    }




    static if(!is(typeof(X509V3_F_TREE_INIT))) {
        private enum enumMixinStr_X509V3_F_TREE_INIT = `enum X509V3_F_TREE_INIT = 172;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_TREE_INIT); }))) {
            mixin(enumMixinStr_X509V3_F_TREE_INIT);
        }
    }




    static if(!is(typeof(X509V3_F_V2I_ASIDENTIFIERS))) {
        private enum enumMixinStr_X509V3_F_V2I_ASIDENTIFIERS = `enum X509V3_F_V2I_ASIDENTIFIERS = 163;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_V2I_ASIDENTIFIERS); }))) {
            mixin(enumMixinStr_X509V3_F_V2I_ASIDENTIFIERS);
        }
    }




    static if(!is(typeof(X509V3_F_V2I_ASN1_BIT_STRING))) {
        private enum enumMixinStr_X509V3_F_V2I_ASN1_BIT_STRING = `enum X509V3_F_V2I_ASN1_BIT_STRING = 101;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_V2I_ASN1_BIT_STRING); }))) {
            mixin(enumMixinStr_X509V3_F_V2I_ASN1_BIT_STRING);
        }
    }




    static if(!is(typeof(X509V3_F_V2I_AUTHORITY_INFO_ACCESS))) {
        private enum enumMixinStr_X509V3_F_V2I_AUTHORITY_INFO_ACCESS = `enum X509V3_F_V2I_AUTHORITY_INFO_ACCESS = 139;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_V2I_AUTHORITY_INFO_ACCESS); }))) {
            mixin(enumMixinStr_X509V3_F_V2I_AUTHORITY_INFO_ACCESS);
        }
    }




    static if(!is(typeof(X509V3_F_V2I_AUTHORITY_KEYID))) {
        private enum enumMixinStr_X509V3_F_V2I_AUTHORITY_KEYID = `enum X509V3_F_V2I_AUTHORITY_KEYID = 119;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_V2I_AUTHORITY_KEYID); }))) {
            mixin(enumMixinStr_X509V3_F_V2I_AUTHORITY_KEYID);
        }
    }




    static if(!is(typeof(X509V3_F_V2I_BASIC_CONSTRAINTS))) {
        private enum enumMixinStr_X509V3_F_V2I_BASIC_CONSTRAINTS = `enum X509V3_F_V2I_BASIC_CONSTRAINTS = 102;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_V2I_BASIC_CONSTRAINTS); }))) {
            mixin(enumMixinStr_X509V3_F_V2I_BASIC_CONSTRAINTS);
        }
    }




    static if(!is(typeof(X509V3_F_V2I_CRLD))) {
        private enum enumMixinStr_X509V3_F_V2I_CRLD = `enum X509V3_F_V2I_CRLD = 134;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_V2I_CRLD); }))) {
            mixin(enumMixinStr_X509V3_F_V2I_CRLD);
        }
    }




    static if(!is(typeof(X509V3_F_V2I_EXTENDED_KEY_USAGE))) {
        private enum enumMixinStr_X509V3_F_V2I_EXTENDED_KEY_USAGE = `enum X509V3_F_V2I_EXTENDED_KEY_USAGE = 103;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_V2I_EXTENDED_KEY_USAGE); }))) {
            mixin(enumMixinStr_X509V3_F_V2I_EXTENDED_KEY_USAGE);
        }
    }




    static if(!is(typeof(X509V3_F_V2I_GENERAL_NAMES))) {
        private enum enumMixinStr_X509V3_F_V2I_GENERAL_NAMES = `enum X509V3_F_V2I_GENERAL_NAMES = 118;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_V2I_GENERAL_NAMES); }))) {
            mixin(enumMixinStr_X509V3_F_V2I_GENERAL_NAMES);
        }
    }




    static if(!is(typeof(X509V3_F_V2I_GENERAL_NAME_EX))) {
        private enum enumMixinStr_X509V3_F_V2I_GENERAL_NAME_EX = `enum X509V3_F_V2I_GENERAL_NAME_EX = 117;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_V2I_GENERAL_NAME_EX); }))) {
            mixin(enumMixinStr_X509V3_F_V2I_GENERAL_NAME_EX);
        }
    }




    static if(!is(typeof(X509V3_F_V2I_IDP))) {
        private enum enumMixinStr_X509V3_F_V2I_IDP = `enum X509V3_F_V2I_IDP = 157;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_V2I_IDP); }))) {
            mixin(enumMixinStr_X509V3_F_V2I_IDP);
        }
    }




    static if(!is(typeof(X509V3_F_V2I_IPADDRBLOCKS))) {
        private enum enumMixinStr_X509V3_F_V2I_IPADDRBLOCKS = `enum X509V3_F_V2I_IPADDRBLOCKS = 159;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_V2I_IPADDRBLOCKS); }))) {
            mixin(enumMixinStr_X509V3_F_V2I_IPADDRBLOCKS);
        }
    }




    static if(!is(typeof(X509V3_F_V2I_ISSUER_ALT))) {
        private enum enumMixinStr_X509V3_F_V2I_ISSUER_ALT = `enum X509V3_F_V2I_ISSUER_ALT = 153;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_V2I_ISSUER_ALT); }))) {
            mixin(enumMixinStr_X509V3_F_V2I_ISSUER_ALT);
        }
    }




    static if(!is(typeof(X509V3_F_V2I_NAME_CONSTRAINTS))) {
        private enum enumMixinStr_X509V3_F_V2I_NAME_CONSTRAINTS = `enum X509V3_F_V2I_NAME_CONSTRAINTS = 147;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_V2I_NAME_CONSTRAINTS); }))) {
            mixin(enumMixinStr_X509V3_F_V2I_NAME_CONSTRAINTS);
        }
    }




    static if(!is(typeof(X509V3_F_V2I_POLICY_CONSTRAINTS))) {
        private enum enumMixinStr_X509V3_F_V2I_POLICY_CONSTRAINTS = `enum X509V3_F_V2I_POLICY_CONSTRAINTS = 146;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_V2I_POLICY_CONSTRAINTS); }))) {
            mixin(enumMixinStr_X509V3_F_V2I_POLICY_CONSTRAINTS);
        }
    }




    static if(!is(typeof(X509V3_F_V2I_POLICY_MAPPINGS))) {
        private enum enumMixinStr_X509V3_F_V2I_POLICY_MAPPINGS = `enum X509V3_F_V2I_POLICY_MAPPINGS = 145;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_V2I_POLICY_MAPPINGS); }))) {
            mixin(enumMixinStr_X509V3_F_V2I_POLICY_MAPPINGS);
        }
    }




    static if(!is(typeof(X509V3_F_V2I_SUBJECT_ALT))) {
        private enum enumMixinStr_X509V3_F_V2I_SUBJECT_ALT = `enum X509V3_F_V2I_SUBJECT_ALT = 154;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_V2I_SUBJECT_ALT); }))) {
            mixin(enumMixinStr_X509V3_F_V2I_SUBJECT_ALT);
        }
    }




    static if(!is(typeof(X509V3_F_V2I_TLS_FEATURE))) {
        private enum enumMixinStr_X509V3_F_V2I_TLS_FEATURE = `enum X509V3_F_V2I_TLS_FEATURE = 165;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_V2I_TLS_FEATURE); }))) {
            mixin(enumMixinStr_X509V3_F_V2I_TLS_FEATURE);
        }
    }




    static if(!is(typeof(X509V3_F_V3_GENERIC_EXTENSION))) {
        private enum enumMixinStr_X509V3_F_V3_GENERIC_EXTENSION = `enum X509V3_F_V3_GENERIC_EXTENSION = 116;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_V3_GENERIC_EXTENSION); }))) {
            mixin(enumMixinStr_X509V3_F_V3_GENERIC_EXTENSION);
        }
    }




    static if(!is(typeof(X509V3_F_X509V3_ADD1_I2D))) {
        private enum enumMixinStr_X509V3_F_X509V3_ADD1_I2D = `enum X509V3_F_X509V3_ADD1_I2D = 140;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_X509V3_ADD1_I2D); }))) {
            mixin(enumMixinStr_X509V3_F_X509V3_ADD1_I2D);
        }
    }




    static if(!is(typeof(X509V3_F_X509V3_ADD_VALUE))) {
        private enum enumMixinStr_X509V3_F_X509V3_ADD_VALUE = `enum X509V3_F_X509V3_ADD_VALUE = 105;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_X509V3_ADD_VALUE); }))) {
            mixin(enumMixinStr_X509V3_F_X509V3_ADD_VALUE);
        }
    }




    static if(!is(typeof(X509V3_F_X509V3_EXT_ADD))) {
        private enum enumMixinStr_X509V3_F_X509V3_EXT_ADD = `enum X509V3_F_X509V3_EXT_ADD = 104;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_X509V3_EXT_ADD); }))) {
            mixin(enumMixinStr_X509V3_F_X509V3_EXT_ADD);
        }
    }




    static if(!is(typeof(X509V3_F_X509V3_EXT_ADD_ALIAS))) {
        private enum enumMixinStr_X509V3_F_X509V3_EXT_ADD_ALIAS = `enum X509V3_F_X509V3_EXT_ADD_ALIAS = 106;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_X509V3_EXT_ADD_ALIAS); }))) {
            mixin(enumMixinStr_X509V3_F_X509V3_EXT_ADD_ALIAS);
        }
    }




    static if(!is(typeof(X509V3_F_X509V3_EXT_I2D))) {
        private enum enumMixinStr_X509V3_F_X509V3_EXT_I2D = `enum X509V3_F_X509V3_EXT_I2D = 136;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_X509V3_EXT_I2D); }))) {
            mixin(enumMixinStr_X509V3_F_X509V3_EXT_I2D);
        }
    }




    static if(!is(typeof(X509V3_F_X509V3_EXT_NCONF))) {
        private enum enumMixinStr_X509V3_F_X509V3_EXT_NCONF = `enum X509V3_F_X509V3_EXT_NCONF = 152;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_X509V3_EXT_NCONF); }))) {
            mixin(enumMixinStr_X509V3_F_X509V3_EXT_NCONF);
        }
    }




    static if(!is(typeof(X509V3_F_X509V3_GET_SECTION))) {
        private enum enumMixinStr_X509V3_F_X509V3_GET_SECTION = `enum X509V3_F_X509V3_GET_SECTION = 142;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_X509V3_GET_SECTION); }))) {
            mixin(enumMixinStr_X509V3_F_X509V3_GET_SECTION);
        }
    }




    static if(!is(typeof(X509V3_F_X509V3_GET_STRING))) {
        private enum enumMixinStr_X509V3_F_X509V3_GET_STRING = `enum X509V3_F_X509V3_GET_STRING = 143;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_X509V3_GET_STRING); }))) {
            mixin(enumMixinStr_X509V3_F_X509V3_GET_STRING);
        }
    }




    static if(!is(typeof(X509V3_F_X509V3_GET_VALUE_BOOL))) {
        private enum enumMixinStr_X509V3_F_X509V3_GET_VALUE_BOOL = `enum X509V3_F_X509V3_GET_VALUE_BOOL = 110;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_X509V3_GET_VALUE_BOOL); }))) {
            mixin(enumMixinStr_X509V3_F_X509V3_GET_VALUE_BOOL);
        }
    }




    static if(!is(typeof(X509V3_F_X509V3_PARSE_LIST))) {
        private enum enumMixinStr_X509V3_F_X509V3_PARSE_LIST = `enum X509V3_F_X509V3_PARSE_LIST = 109;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_X509V3_PARSE_LIST); }))) {
            mixin(enumMixinStr_X509V3_F_X509V3_PARSE_LIST);
        }
    }




    static if(!is(typeof(X509V3_F_X509_PURPOSE_ADD))) {
        private enum enumMixinStr_X509V3_F_X509_PURPOSE_ADD = `enum X509V3_F_X509_PURPOSE_ADD = 137;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_X509_PURPOSE_ADD); }))) {
            mixin(enumMixinStr_X509V3_F_X509_PURPOSE_ADD);
        }
    }




    static if(!is(typeof(X509V3_F_X509_PURPOSE_SET))) {
        private enum enumMixinStr_X509V3_F_X509_PURPOSE_SET = `enum X509V3_F_X509_PURPOSE_SET = 141;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_F_X509_PURPOSE_SET); }))) {
            mixin(enumMixinStr_X509V3_F_X509_PURPOSE_SET);
        }
    }




    static if(!is(typeof(X509V3_R_BAD_IP_ADDRESS))) {
        private enum enumMixinStr_X509V3_R_BAD_IP_ADDRESS = `enum X509V3_R_BAD_IP_ADDRESS = 118;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_BAD_IP_ADDRESS); }))) {
            mixin(enumMixinStr_X509V3_R_BAD_IP_ADDRESS);
        }
    }




    static if(!is(typeof(X509V3_R_BAD_OBJECT))) {
        private enum enumMixinStr_X509V3_R_BAD_OBJECT = `enum X509V3_R_BAD_OBJECT = 119;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_BAD_OBJECT); }))) {
            mixin(enumMixinStr_X509V3_R_BAD_OBJECT);
        }
    }




    static if(!is(typeof(X509V3_R_BN_DEC2BN_ERROR))) {
        private enum enumMixinStr_X509V3_R_BN_DEC2BN_ERROR = `enum X509V3_R_BN_DEC2BN_ERROR = 100;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_BN_DEC2BN_ERROR); }))) {
            mixin(enumMixinStr_X509V3_R_BN_DEC2BN_ERROR);
        }
    }




    static if(!is(typeof(X509V3_R_BN_TO_ASN1_INTEGER_ERROR))) {
        private enum enumMixinStr_X509V3_R_BN_TO_ASN1_INTEGER_ERROR = `enum X509V3_R_BN_TO_ASN1_INTEGER_ERROR = 101;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_BN_TO_ASN1_INTEGER_ERROR); }))) {
            mixin(enumMixinStr_X509V3_R_BN_TO_ASN1_INTEGER_ERROR);
        }
    }




    static if(!is(typeof(X509V3_R_DIRNAME_ERROR))) {
        private enum enumMixinStr_X509V3_R_DIRNAME_ERROR = `enum X509V3_R_DIRNAME_ERROR = 149;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_DIRNAME_ERROR); }))) {
            mixin(enumMixinStr_X509V3_R_DIRNAME_ERROR);
        }
    }




    static if(!is(typeof(X509V3_R_DISTPOINT_ALREADY_SET))) {
        private enum enumMixinStr_X509V3_R_DISTPOINT_ALREADY_SET = `enum X509V3_R_DISTPOINT_ALREADY_SET = 160;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_DISTPOINT_ALREADY_SET); }))) {
            mixin(enumMixinStr_X509V3_R_DISTPOINT_ALREADY_SET);
        }
    }




    static if(!is(typeof(X509V3_R_DUPLICATE_ZONE_ID))) {
        private enum enumMixinStr_X509V3_R_DUPLICATE_ZONE_ID = `enum X509V3_R_DUPLICATE_ZONE_ID = 133;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_DUPLICATE_ZONE_ID); }))) {
            mixin(enumMixinStr_X509V3_R_DUPLICATE_ZONE_ID);
        }
    }




    static if(!is(typeof(X509V3_R_ERROR_CONVERTING_ZONE))) {
        private enum enumMixinStr_X509V3_R_ERROR_CONVERTING_ZONE = `enum X509V3_R_ERROR_CONVERTING_ZONE = 131;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_ERROR_CONVERTING_ZONE); }))) {
            mixin(enumMixinStr_X509V3_R_ERROR_CONVERTING_ZONE);
        }
    }




    static if(!is(typeof(X509V3_R_ERROR_CREATING_EXTENSION))) {
        private enum enumMixinStr_X509V3_R_ERROR_CREATING_EXTENSION = `enum X509V3_R_ERROR_CREATING_EXTENSION = 144;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_ERROR_CREATING_EXTENSION); }))) {
            mixin(enumMixinStr_X509V3_R_ERROR_CREATING_EXTENSION);
        }
    }




    static if(!is(typeof(X509V3_R_ERROR_IN_EXTENSION))) {
        private enum enumMixinStr_X509V3_R_ERROR_IN_EXTENSION = `enum X509V3_R_ERROR_IN_EXTENSION = 128;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_ERROR_IN_EXTENSION); }))) {
            mixin(enumMixinStr_X509V3_R_ERROR_IN_EXTENSION);
        }
    }




    static if(!is(typeof(X509V3_R_EXPECTED_A_SECTION_NAME))) {
        private enum enumMixinStr_X509V3_R_EXPECTED_A_SECTION_NAME = `enum X509V3_R_EXPECTED_A_SECTION_NAME = 137;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_EXPECTED_A_SECTION_NAME); }))) {
            mixin(enumMixinStr_X509V3_R_EXPECTED_A_SECTION_NAME);
        }
    }




    static if(!is(typeof(X509V3_R_EXTENSION_EXISTS))) {
        private enum enumMixinStr_X509V3_R_EXTENSION_EXISTS = `enum X509V3_R_EXTENSION_EXISTS = 145;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_EXTENSION_EXISTS); }))) {
            mixin(enumMixinStr_X509V3_R_EXTENSION_EXISTS);
        }
    }




    static if(!is(typeof(X509V3_R_EXTENSION_NAME_ERROR))) {
        private enum enumMixinStr_X509V3_R_EXTENSION_NAME_ERROR = `enum X509V3_R_EXTENSION_NAME_ERROR = 115;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_EXTENSION_NAME_ERROR); }))) {
            mixin(enumMixinStr_X509V3_R_EXTENSION_NAME_ERROR);
        }
    }




    static if(!is(typeof(X509V3_R_EXTENSION_NOT_FOUND))) {
        private enum enumMixinStr_X509V3_R_EXTENSION_NOT_FOUND = `enum X509V3_R_EXTENSION_NOT_FOUND = 102;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_EXTENSION_NOT_FOUND); }))) {
            mixin(enumMixinStr_X509V3_R_EXTENSION_NOT_FOUND);
        }
    }




    static if(!is(typeof(X509V3_R_EXTENSION_SETTING_NOT_SUPPORTED))) {
        private enum enumMixinStr_X509V3_R_EXTENSION_SETTING_NOT_SUPPORTED = `enum X509V3_R_EXTENSION_SETTING_NOT_SUPPORTED = 103;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_EXTENSION_SETTING_NOT_SUPPORTED); }))) {
            mixin(enumMixinStr_X509V3_R_EXTENSION_SETTING_NOT_SUPPORTED);
        }
    }




    static if(!is(typeof(X509V3_R_EXTENSION_VALUE_ERROR))) {
        private enum enumMixinStr_X509V3_R_EXTENSION_VALUE_ERROR = `enum X509V3_R_EXTENSION_VALUE_ERROR = 116;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_EXTENSION_VALUE_ERROR); }))) {
            mixin(enumMixinStr_X509V3_R_EXTENSION_VALUE_ERROR);
        }
    }




    static if(!is(typeof(X509V3_R_ILLEGAL_EMPTY_EXTENSION))) {
        private enum enumMixinStr_X509V3_R_ILLEGAL_EMPTY_EXTENSION = `enum X509V3_R_ILLEGAL_EMPTY_EXTENSION = 151;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_ILLEGAL_EMPTY_EXTENSION); }))) {
            mixin(enumMixinStr_X509V3_R_ILLEGAL_EMPTY_EXTENSION);
        }
    }




    static if(!is(typeof(X509V3_R_INCORRECT_POLICY_SYNTAX_TAG))) {
        private enum enumMixinStr_X509V3_R_INCORRECT_POLICY_SYNTAX_TAG = `enum X509V3_R_INCORRECT_POLICY_SYNTAX_TAG = 152;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_INCORRECT_POLICY_SYNTAX_TAG); }))) {
            mixin(enumMixinStr_X509V3_R_INCORRECT_POLICY_SYNTAX_TAG);
        }
    }




    static if(!is(typeof(X509V3_R_INVALID_ASNUMBER))) {
        private enum enumMixinStr_X509V3_R_INVALID_ASNUMBER = `enum X509V3_R_INVALID_ASNUMBER = 162;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_INVALID_ASNUMBER); }))) {
            mixin(enumMixinStr_X509V3_R_INVALID_ASNUMBER);
        }
    }




    static if(!is(typeof(X509V3_R_INVALID_ASRANGE))) {
        private enum enumMixinStr_X509V3_R_INVALID_ASRANGE = `enum X509V3_R_INVALID_ASRANGE = 163;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_INVALID_ASRANGE); }))) {
            mixin(enumMixinStr_X509V3_R_INVALID_ASRANGE);
        }
    }




    static if(!is(typeof(X509V3_R_INVALID_BOOLEAN_STRING))) {
        private enum enumMixinStr_X509V3_R_INVALID_BOOLEAN_STRING = `enum X509V3_R_INVALID_BOOLEAN_STRING = 104;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_INVALID_BOOLEAN_STRING); }))) {
            mixin(enumMixinStr_X509V3_R_INVALID_BOOLEAN_STRING);
        }
    }




    static if(!is(typeof(X509V3_R_INVALID_EXTENSION_STRING))) {
        private enum enumMixinStr_X509V3_R_INVALID_EXTENSION_STRING = `enum X509V3_R_INVALID_EXTENSION_STRING = 105;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_INVALID_EXTENSION_STRING); }))) {
            mixin(enumMixinStr_X509V3_R_INVALID_EXTENSION_STRING);
        }
    }




    static if(!is(typeof(X509V3_R_INVALID_INHERITANCE))) {
        private enum enumMixinStr_X509V3_R_INVALID_INHERITANCE = `enum X509V3_R_INVALID_INHERITANCE = 165;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_INVALID_INHERITANCE); }))) {
            mixin(enumMixinStr_X509V3_R_INVALID_INHERITANCE);
        }
    }




    static if(!is(typeof(X509V3_R_INVALID_IPADDRESS))) {
        private enum enumMixinStr_X509V3_R_INVALID_IPADDRESS = `enum X509V3_R_INVALID_IPADDRESS = 166;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_INVALID_IPADDRESS); }))) {
            mixin(enumMixinStr_X509V3_R_INVALID_IPADDRESS);
        }
    }




    static if(!is(typeof(X509V3_R_INVALID_MULTIPLE_RDNS))) {
        private enum enumMixinStr_X509V3_R_INVALID_MULTIPLE_RDNS = `enum X509V3_R_INVALID_MULTIPLE_RDNS = 161;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_INVALID_MULTIPLE_RDNS); }))) {
            mixin(enumMixinStr_X509V3_R_INVALID_MULTIPLE_RDNS);
        }
    }




    static if(!is(typeof(X509V3_R_INVALID_NAME))) {
        private enum enumMixinStr_X509V3_R_INVALID_NAME = `enum X509V3_R_INVALID_NAME = 106;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_INVALID_NAME); }))) {
            mixin(enumMixinStr_X509V3_R_INVALID_NAME);
        }
    }




    static if(!is(typeof(X509V3_R_INVALID_NULL_ARGUMENT))) {
        private enum enumMixinStr_X509V3_R_INVALID_NULL_ARGUMENT = `enum X509V3_R_INVALID_NULL_ARGUMENT = 107;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_INVALID_NULL_ARGUMENT); }))) {
            mixin(enumMixinStr_X509V3_R_INVALID_NULL_ARGUMENT);
        }
    }




    static if(!is(typeof(X509V3_R_INVALID_NULL_NAME))) {
        private enum enumMixinStr_X509V3_R_INVALID_NULL_NAME = `enum X509V3_R_INVALID_NULL_NAME = 108;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_INVALID_NULL_NAME); }))) {
            mixin(enumMixinStr_X509V3_R_INVALID_NULL_NAME);
        }
    }




    static if(!is(typeof(X509V3_R_INVALID_NULL_VALUE))) {
        private enum enumMixinStr_X509V3_R_INVALID_NULL_VALUE = `enum X509V3_R_INVALID_NULL_VALUE = 109;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_INVALID_NULL_VALUE); }))) {
            mixin(enumMixinStr_X509V3_R_INVALID_NULL_VALUE);
        }
    }




    static if(!is(typeof(X509V3_R_INVALID_NUMBER))) {
        private enum enumMixinStr_X509V3_R_INVALID_NUMBER = `enum X509V3_R_INVALID_NUMBER = 140;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_INVALID_NUMBER); }))) {
            mixin(enumMixinStr_X509V3_R_INVALID_NUMBER);
        }
    }




    static if(!is(typeof(X509V3_R_INVALID_NUMBERS))) {
        private enum enumMixinStr_X509V3_R_INVALID_NUMBERS = `enum X509V3_R_INVALID_NUMBERS = 141;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_INVALID_NUMBERS); }))) {
            mixin(enumMixinStr_X509V3_R_INVALID_NUMBERS);
        }
    }




    static if(!is(typeof(X509V3_R_INVALID_OBJECT_IDENTIFIER))) {
        private enum enumMixinStr_X509V3_R_INVALID_OBJECT_IDENTIFIER = `enum X509V3_R_INVALID_OBJECT_IDENTIFIER = 110;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_INVALID_OBJECT_IDENTIFIER); }))) {
            mixin(enumMixinStr_X509V3_R_INVALID_OBJECT_IDENTIFIER);
        }
    }




    static if(!is(typeof(X509V3_R_INVALID_OPTION))) {
        private enum enumMixinStr_X509V3_R_INVALID_OPTION = `enum X509V3_R_INVALID_OPTION = 138;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_INVALID_OPTION); }))) {
            mixin(enumMixinStr_X509V3_R_INVALID_OPTION);
        }
    }




    static if(!is(typeof(X509V3_R_INVALID_POLICY_IDENTIFIER))) {
        private enum enumMixinStr_X509V3_R_INVALID_POLICY_IDENTIFIER = `enum X509V3_R_INVALID_POLICY_IDENTIFIER = 134;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_INVALID_POLICY_IDENTIFIER); }))) {
            mixin(enumMixinStr_X509V3_R_INVALID_POLICY_IDENTIFIER);
        }
    }




    static if(!is(typeof(X509V3_R_INVALID_PROXY_POLICY_SETTING))) {
        private enum enumMixinStr_X509V3_R_INVALID_PROXY_POLICY_SETTING = `enum X509V3_R_INVALID_PROXY_POLICY_SETTING = 153;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_INVALID_PROXY_POLICY_SETTING); }))) {
            mixin(enumMixinStr_X509V3_R_INVALID_PROXY_POLICY_SETTING);
        }
    }




    static if(!is(typeof(X509V3_R_INVALID_PURPOSE))) {
        private enum enumMixinStr_X509V3_R_INVALID_PURPOSE = `enum X509V3_R_INVALID_PURPOSE = 146;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_INVALID_PURPOSE); }))) {
            mixin(enumMixinStr_X509V3_R_INVALID_PURPOSE);
        }
    }




    static if(!is(typeof(X509V3_R_INVALID_SAFI))) {
        private enum enumMixinStr_X509V3_R_INVALID_SAFI = `enum X509V3_R_INVALID_SAFI = 164;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_INVALID_SAFI); }))) {
            mixin(enumMixinStr_X509V3_R_INVALID_SAFI);
        }
    }




    static if(!is(typeof(X509V3_R_INVALID_SECTION))) {
        private enum enumMixinStr_X509V3_R_INVALID_SECTION = `enum X509V3_R_INVALID_SECTION = 135;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_INVALID_SECTION); }))) {
            mixin(enumMixinStr_X509V3_R_INVALID_SECTION);
        }
    }




    static if(!is(typeof(X509V3_R_INVALID_SYNTAX))) {
        private enum enumMixinStr_X509V3_R_INVALID_SYNTAX = `enum X509V3_R_INVALID_SYNTAX = 143;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_INVALID_SYNTAX); }))) {
            mixin(enumMixinStr_X509V3_R_INVALID_SYNTAX);
        }
    }




    static if(!is(typeof(X509V3_R_ISSUER_DECODE_ERROR))) {
        private enum enumMixinStr_X509V3_R_ISSUER_DECODE_ERROR = `enum X509V3_R_ISSUER_DECODE_ERROR = 126;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_ISSUER_DECODE_ERROR); }))) {
            mixin(enumMixinStr_X509V3_R_ISSUER_DECODE_ERROR);
        }
    }




    static if(!is(typeof(X509V3_R_MISSING_VALUE))) {
        private enum enumMixinStr_X509V3_R_MISSING_VALUE = `enum X509V3_R_MISSING_VALUE = 124;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_MISSING_VALUE); }))) {
            mixin(enumMixinStr_X509V3_R_MISSING_VALUE);
        }
    }




    static if(!is(typeof(X509V3_R_NEED_ORGANIZATION_AND_NUMBERS))) {
        private enum enumMixinStr_X509V3_R_NEED_ORGANIZATION_AND_NUMBERS = `enum X509V3_R_NEED_ORGANIZATION_AND_NUMBERS = 142;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_NEED_ORGANIZATION_AND_NUMBERS); }))) {
            mixin(enumMixinStr_X509V3_R_NEED_ORGANIZATION_AND_NUMBERS);
        }
    }




    static if(!is(typeof(X509V3_R_NO_CONFIG_DATABASE))) {
        private enum enumMixinStr_X509V3_R_NO_CONFIG_DATABASE = `enum X509V3_R_NO_CONFIG_DATABASE = 136;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_NO_CONFIG_DATABASE); }))) {
            mixin(enumMixinStr_X509V3_R_NO_CONFIG_DATABASE);
        }
    }




    static if(!is(typeof(X509V3_R_NO_ISSUER_CERTIFICATE))) {
        private enum enumMixinStr_X509V3_R_NO_ISSUER_CERTIFICATE = `enum X509V3_R_NO_ISSUER_CERTIFICATE = 121;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_NO_ISSUER_CERTIFICATE); }))) {
            mixin(enumMixinStr_X509V3_R_NO_ISSUER_CERTIFICATE);
        }
    }




    static if(!is(typeof(X509V3_R_NO_ISSUER_DETAILS))) {
        private enum enumMixinStr_X509V3_R_NO_ISSUER_DETAILS = `enum X509V3_R_NO_ISSUER_DETAILS = 127;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_NO_ISSUER_DETAILS); }))) {
            mixin(enumMixinStr_X509V3_R_NO_ISSUER_DETAILS);
        }
    }




    static if(!is(typeof(X509V3_R_NO_POLICY_IDENTIFIER))) {
        private enum enumMixinStr_X509V3_R_NO_POLICY_IDENTIFIER = `enum X509V3_R_NO_POLICY_IDENTIFIER = 139;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_NO_POLICY_IDENTIFIER); }))) {
            mixin(enumMixinStr_X509V3_R_NO_POLICY_IDENTIFIER);
        }
    }




    static if(!is(typeof(X509V3_R_NO_PROXY_CERT_POLICY_LANGUAGE_DEFINED))) {
        private enum enumMixinStr_X509V3_R_NO_PROXY_CERT_POLICY_LANGUAGE_DEFINED = `enum X509V3_R_NO_PROXY_CERT_POLICY_LANGUAGE_DEFINED = 154;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_NO_PROXY_CERT_POLICY_LANGUAGE_DEFINED); }))) {
            mixin(enumMixinStr_X509V3_R_NO_PROXY_CERT_POLICY_LANGUAGE_DEFINED);
        }
    }




    static if(!is(typeof(X509V3_R_NO_PUBLIC_KEY))) {
        private enum enumMixinStr_X509V3_R_NO_PUBLIC_KEY = `enum X509V3_R_NO_PUBLIC_KEY = 114;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_NO_PUBLIC_KEY); }))) {
            mixin(enumMixinStr_X509V3_R_NO_PUBLIC_KEY);
        }
    }




    static if(!is(typeof(X509V3_R_NO_SUBJECT_DETAILS))) {
        private enum enumMixinStr_X509V3_R_NO_SUBJECT_DETAILS = `enum X509V3_R_NO_SUBJECT_DETAILS = 125;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_NO_SUBJECT_DETAILS); }))) {
            mixin(enumMixinStr_X509V3_R_NO_SUBJECT_DETAILS);
        }
    }




    static if(!is(typeof(X509V3_R_OPERATION_NOT_DEFINED))) {
        private enum enumMixinStr_X509V3_R_OPERATION_NOT_DEFINED = `enum X509V3_R_OPERATION_NOT_DEFINED = 148;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_OPERATION_NOT_DEFINED); }))) {
            mixin(enumMixinStr_X509V3_R_OPERATION_NOT_DEFINED);
        }
    }




    static if(!is(typeof(X509V3_R_OTHERNAME_ERROR))) {
        private enum enumMixinStr_X509V3_R_OTHERNAME_ERROR = `enum X509V3_R_OTHERNAME_ERROR = 147;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_OTHERNAME_ERROR); }))) {
            mixin(enumMixinStr_X509V3_R_OTHERNAME_ERROR);
        }
    }




    static if(!is(typeof(X509V3_R_POLICY_LANGUAGE_ALREADY_DEFINED))) {
        private enum enumMixinStr_X509V3_R_POLICY_LANGUAGE_ALREADY_DEFINED = `enum X509V3_R_POLICY_LANGUAGE_ALREADY_DEFINED = 155;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_POLICY_LANGUAGE_ALREADY_DEFINED); }))) {
            mixin(enumMixinStr_X509V3_R_POLICY_LANGUAGE_ALREADY_DEFINED);
        }
    }




    static if(!is(typeof(X509V3_R_POLICY_PATH_LENGTH))) {
        private enum enumMixinStr_X509V3_R_POLICY_PATH_LENGTH = `enum X509V3_R_POLICY_PATH_LENGTH = 156;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_POLICY_PATH_LENGTH); }))) {
            mixin(enumMixinStr_X509V3_R_POLICY_PATH_LENGTH);
        }
    }




    static if(!is(typeof(X509V3_R_POLICY_PATH_LENGTH_ALREADY_DEFINED))) {
        private enum enumMixinStr_X509V3_R_POLICY_PATH_LENGTH_ALREADY_DEFINED = `enum X509V3_R_POLICY_PATH_LENGTH_ALREADY_DEFINED = 157;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_POLICY_PATH_LENGTH_ALREADY_DEFINED); }))) {
            mixin(enumMixinStr_X509V3_R_POLICY_PATH_LENGTH_ALREADY_DEFINED);
        }
    }




    static if(!is(typeof(X509V3_R_POLICY_WHEN_PROXY_LANGUAGE_REQUIRES_NO_POLICY))) {
        private enum enumMixinStr_X509V3_R_POLICY_WHEN_PROXY_LANGUAGE_REQUIRES_NO_POLICY = `enum X509V3_R_POLICY_WHEN_PROXY_LANGUAGE_REQUIRES_NO_POLICY = 159;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_POLICY_WHEN_PROXY_LANGUAGE_REQUIRES_NO_POLICY); }))) {
            mixin(enumMixinStr_X509V3_R_POLICY_WHEN_PROXY_LANGUAGE_REQUIRES_NO_POLICY);
        }
    }




    static if(!is(typeof(X509V3_R_SECTION_NOT_FOUND))) {
        private enum enumMixinStr_X509V3_R_SECTION_NOT_FOUND = `enum X509V3_R_SECTION_NOT_FOUND = 150;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_SECTION_NOT_FOUND); }))) {
            mixin(enumMixinStr_X509V3_R_SECTION_NOT_FOUND);
        }
    }




    static if(!is(typeof(X509V3_R_UNABLE_TO_GET_ISSUER_DETAILS))) {
        private enum enumMixinStr_X509V3_R_UNABLE_TO_GET_ISSUER_DETAILS = `enum X509V3_R_UNABLE_TO_GET_ISSUER_DETAILS = 122;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_UNABLE_TO_GET_ISSUER_DETAILS); }))) {
            mixin(enumMixinStr_X509V3_R_UNABLE_TO_GET_ISSUER_DETAILS);
        }
    }




    static if(!is(typeof(X509V3_R_UNABLE_TO_GET_ISSUER_KEYID))) {
        private enum enumMixinStr_X509V3_R_UNABLE_TO_GET_ISSUER_KEYID = `enum X509V3_R_UNABLE_TO_GET_ISSUER_KEYID = 123;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_UNABLE_TO_GET_ISSUER_KEYID); }))) {
            mixin(enumMixinStr_X509V3_R_UNABLE_TO_GET_ISSUER_KEYID);
        }
    }




    static if(!is(typeof(X509V3_R_UNKNOWN_BIT_STRING_ARGUMENT))) {
        private enum enumMixinStr_X509V3_R_UNKNOWN_BIT_STRING_ARGUMENT = `enum X509V3_R_UNKNOWN_BIT_STRING_ARGUMENT = 111;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_UNKNOWN_BIT_STRING_ARGUMENT); }))) {
            mixin(enumMixinStr_X509V3_R_UNKNOWN_BIT_STRING_ARGUMENT);
        }
    }




    static if(!is(typeof(X509V3_R_UNKNOWN_EXTENSION))) {
        private enum enumMixinStr_X509V3_R_UNKNOWN_EXTENSION = `enum X509V3_R_UNKNOWN_EXTENSION = 129;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_UNKNOWN_EXTENSION); }))) {
            mixin(enumMixinStr_X509V3_R_UNKNOWN_EXTENSION);
        }
    }




    static if(!is(typeof(X509V3_R_UNKNOWN_EXTENSION_NAME))) {
        private enum enumMixinStr_X509V3_R_UNKNOWN_EXTENSION_NAME = `enum X509V3_R_UNKNOWN_EXTENSION_NAME = 130;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_UNKNOWN_EXTENSION_NAME); }))) {
            mixin(enumMixinStr_X509V3_R_UNKNOWN_EXTENSION_NAME);
        }
    }




    static if(!is(typeof(X509V3_R_UNKNOWN_OPTION))) {
        private enum enumMixinStr_X509V3_R_UNKNOWN_OPTION = `enum X509V3_R_UNKNOWN_OPTION = 120;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_UNKNOWN_OPTION); }))) {
            mixin(enumMixinStr_X509V3_R_UNKNOWN_OPTION);
        }
    }




    static if(!is(typeof(X509V3_R_UNSUPPORTED_OPTION))) {
        private enum enumMixinStr_X509V3_R_UNSUPPORTED_OPTION = `enum X509V3_R_UNSUPPORTED_OPTION = 117;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_UNSUPPORTED_OPTION); }))) {
            mixin(enumMixinStr_X509V3_R_UNSUPPORTED_OPTION);
        }
    }




    static if(!is(typeof(X509V3_R_UNSUPPORTED_TYPE))) {
        private enum enumMixinStr_X509V3_R_UNSUPPORTED_TYPE = `enum X509V3_R_UNSUPPORTED_TYPE = 167;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_UNSUPPORTED_TYPE); }))) {
            mixin(enumMixinStr_X509V3_R_UNSUPPORTED_TYPE);
        }
    }




    static if(!is(typeof(X509V3_R_USER_TOO_LONG))) {
        private enum enumMixinStr_X509V3_R_USER_TOO_LONG = `enum X509V3_R_USER_TOO_LONG = 132;`;
        static if(is(typeof({ mixin(enumMixinStr_X509V3_R_USER_TOO_LONG); }))) {
            mixin(enumMixinStr_X509V3_R_USER_TOO_LONG);
        }
    }




    static if(!is(typeof(_PTHREAD_H))) {
        private enum enumMixinStr__PTHREAD_H = `enum _PTHREAD_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__PTHREAD_H); }))) {
            mixin(enumMixinStr__PTHREAD_H);
        }
    }




    static if(!is(typeof(ASN1_R_ASN1_SIG_PARSE_ERROR))) {
        private enum enumMixinStr_ASN1_R_ASN1_SIG_PARSE_ERROR = `enum ASN1_R_ASN1_SIG_PARSE_ERROR = 204;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_ASN1_SIG_PARSE_ERROR); }))) {
            mixin(enumMixinStr_ASN1_R_ASN1_SIG_PARSE_ERROR);
        }
    }




    static if(!is(typeof(ASN1_R_ASN1_PARSE_ERROR))) {
        private enum enumMixinStr_ASN1_R_ASN1_PARSE_ERROR = `enum ASN1_R_ASN1_PARSE_ERROR = 203;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_ASN1_PARSE_ERROR); }))) {
            mixin(enumMixinStr_ASN1_R_ASN1_PARSE_ERROR);
        }
    }




    static if(!is(typeof(ASN1_R_ADDING_OBJECT))) {
        private enum enumMixinStr_ASN1_R_ADDING_OBJECT = `enum ASN1_R_ADDING_OBJECT = 171;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_R_ADDING_OBJECT); }))) {
            mixin(enumMixinStr_ASN1_R_ADDING_OBJECT);
        }
    }




    static if(!is(typeof(ASN1_F_X509_PKEY_NEW))) {
        private enum enumMixinStr_ASN1_F_X509_PKEY_NEW = `enum ASN1_F_X509_PKEY_NEW = 173;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_X509_PKEY_NEW); }))) {
            mixin(enumMixinStr_ASN1_F_X509_PKEY_NEW);
        }
    }




    static if(!is(typeof(ASN1_F_X509_NAME_EX_NEW))) {
        private enum enumMixinStr_ASN1_F_X509_NAME_EX_NEW = `enum ASN1_F_X509_NAME_EX_NEW = 171;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_X509_NAME_EX_NEW); }))) {
            mixin(enumMixinStr_ASN1_F_X509_NAME_EX_NEW);
        }
    }




    static if(!is(typeof(ASN1_F_X509_NAME_EX_D2I))) {
        private enum enumMixinStr_ASN1_F_X509_NAME_EX_D2I = `enum ASN1_F_X509_NAME_EX_D2I = 158;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_X509_NAME_EX_D2I); }))) {
            mixin(enumMixinStr_ASN1_F_X509_NAME_EX_D2I);
        }
    }




    static if(!is(typeof(ASN1_F_X509_NAME_ENCODE))) {
        private enum enumMixinStr_ASN1_F_X509_NAME_ENCODE = `enum ASN1_F_X509_NAME_ENCODE = 203;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_X509_NAME_ENCODE); }))) {
            mixin(enumMixinStr_ASN1_F_X509_NAME_ENCODE);
        }
    }




    static if(!is(typeof(ASN1_F_X509_INFO_NEW))) {
        private enum enumMixinStr_ASN1_F_X509_INFO_NEW = `enum ASN1_F_X509_INFO_NEW = 170;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_X509_INFO_NEW); }))) {
            mixin(enumMixinStr_ASN1_F_X509_INFO_NEW);
        }
    }




    static if(!is(typeof(ASN1_F_X509_CRL_ADD0_REVOKED))) {
        private enum enumMixinStr_ASN1_F_X509_CRL_ADD0_REVOKED = `enum ASN1_F_X509_CRL_ADD0_REVOKED = 169;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_X509_CRL_ADD0_REVOKED); }))) {
            mixin(enumMixinStr_ASN1_F_X509_CRL_ADD0_REVOKED);
        }
    }




    static if(!is(typeof(ASN1_F_UINT64_NEW))) {
        private enum enumMixinStr_ASN1_F_UINT64_NEW = `enum ASN1_F_UINT64_NEW = 141;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_UINT64_NEW); }))) {
            mixin(enumMixinStr_ASN1_F_UINT64_NEW);
        }
    }




    static if(!is(typeof(ASN1_F_UINT64_C2I))) {
        private enum enumMixinStr_ASN1_F_UINT64_C2I = `enum ASN1_F_UINT64_C2I = 112;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_UINT64_C2I); }))) {
            mixin(enumMixinStr_ASN1_F_UINT64_C2I);
        }
    }




    static if(!is(typeof(PTHREAD_CREATE_JOINABLE))) {
        private enum enumMixinStr_PTHREAD_CREATE_JOINABLE = `enum PTHREAD_CREATE_JOINABLE = PTHREAD_CREATE_JOINABLE;`;
        static if(is(typeof({ mixin(enumMixinStr_PTHREAD_CREATE_JOINABLE); }))) {
            mixin(enumMixinStr_PTHREAD_CREATE_JOINABLE);
        }
    }




    static if(!is(typeof(PTHREAD_CREATE_DETACHED))) {
        private enum enumMixinStr_PTHREAD_CREATE_DETACHED = `enum PTHREAD_CREATE_DETACHED = PTHREAD_CREATE_DETACHED;`;
        static if(is(typeof({ mixin(enumMixinStr_PTHREAD_CREATE_DETACHED); }))) {
            mixin(enumMixinStr_PTHREAD_CREATE_DETACHED);
        }
    }




    static if(!is(typeof(ASN1_F_UINT32_NEW))) {
        private enum enumMixinStr_ASN1_F_UINT32_NEW = `enum ASN1_F_UINT32_NEW = 139;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_UINT32_NEW); }))) {
            mixin(enumMixinStr_ASN1_F_UINT32_NEW);
        }
    }




    static if(!is(typeof(ASN1_F_UINT32_C2I))) {
        private enum enumMixinStr_ASN1_F_UINT32_C2I = `enum ASN1_F_UINT32_C2I = 105;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_UINT32_C2I); }))) {
            mixin(enumMixinStr_ASN1_F_UINT32_C2I);
        }
    }




    static if(!is(typeof(ASN1_F_STBL_MODULE_INIT))) {
        private enum enumMixinStr_ASN1_F_STBL_MODULE_INIT = `enum ASN1_F_STBL_MODULE_INIT = 223;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_STBL_MODULE_INIT); }))) {
            mixin(enumMixinStr_ASN1_F_STBL_MODULE_INIT);
        }
    }




    static if(!is(typeof(ASN1_F_STABLE_GET))) {
        private enum enumMixinStr_ASN1_F_STABLE_GET = `enum ASN1_F_STABLE_GET = 138;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_STABLE_GET); }))) {
            mixin(enumMixinStr_ASN1_F_STABLE_GET);
        }
    }




    static if(!is(typeof(ASN1_F_SMIME_TEXT))) {
        private enum enumMixinStr_ASN1_F_SMIME_TEXT = `enum ASN1_F_SMIME_TEXT = 213;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_SMIME_TEXT); }))) {
            mixin(enumMixinStr_ASN1_F_SMIME_TEXT);
        }
    }




    static if(!is(typeof(ASN1_F_SMIME_READ_ASN1))) {
        private enum enumMixinStr_ASN1_F_SMIME_READ_ASN1 = `enum ASN1_F_SMIME_READ_ASN1 = 212;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_SMIME_READ_ASN1); }))) {
            mixin(enumMixinStr_ASN1_F_SMIME_READ_ASN1);
        }
    }




    static if(!is(typeof(PTHREAD_MUTEX_INITIALIZER))) {
        private enum enumMixinStr_PTHREAD_MUTEX_INITIALIZER = `enum PTHREAD_MUTEX_INITIALIZER = { { __PTHREAD_MUTEX_INITIALIZER ( PTHREAD_MUTEX_TIMED_NP ) } };`;
        static if(is(typeof({ mixin(enumMixinStr_PTHREAD_MUTEX_INITIALIZER); }))) {
            mixin(enumMixinStr_PTHREAD_MUTEX_INITIALIZER);
        }
    }




    static if(!is(typeof(ASN1_F_PKCS5_SCRYPT_SET))) {
        private enum enumMixinStr_ASN1_F_PKCS5_SCRYPT_SET = `enum ASN1_F_PKCS5_SCRYPT_SET = 232;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_PKCS5_SCRYPT_SET); }))) {
            mixin(enumMixinStr_ASN1_F_PKCS5_SCRYPT_SET);
        }
    }




    static if(!is(typeof(ASN1_F_PKCS5_PBKDF2_SET))) {
        private enum enumMixinStr_ASN1_F_PKCS5_PBKDF2_SET = `enum ASN1_F_PKCS5_PBKDF2_SET = 219;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_PKCS5_PBKDF2_SET); }))) {
            mixin(enumMixinStr_ASN1_F_PKCS5_PBKDF2_SET);
        }
    }




    static if(!is(typeof(PTHREAD_RWLOCK_INITIALIZER))) {
        private enum enumMixinStr_PTHREAD_RWLOCK_INITIALIZER = `enum PTHREAD_RWLOCK_INITIALIZER = { { __PTHREAD_RWLOCK_INITIALIZER ( PTHREAD_RWLOCK_DEFAULT_NP ) } };`;
        static if(is(typeof({ mixin(enumMixinStr_PTHREAD_RWLOCK_INITIALIZER); }))) {
            mixin(enumMixinStr_PTHREAD_RWLOCK_INITIALIZER);
        }
    }




    static if(!is(typeof(ASN1_F_PKCS5_PBE_SET0_ALGOR))) {
        private enum enumMixinStr_ASN1_F_PKCS5_PBE_SET0_ALGOR = `enum ASN1_F_PKCS5_PBE_SET0_ALGOR = 215;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_PKCS5_PBE_SET0_ALGOR); }))) {
            mixin(enumMixinStr_ASN1_F_PKCS5_PBE_SET0_ALGOR);
        }
    }




    static if(!is(typeof(PTHREAD_INHERIT_SCHED))) {
        private enum enumMixinStr_PTHREAD_INHERIT_SCHED = `enum PTHREAD_INHERIT_SCHED = PTHREAD_INHERIT_SCHED;`;
        static if(is(typeof({ mixin(enumMixinStr_PTHREAD_INHERIT_SCHED); }))) {
            mixin(enumMixinStr_PTHREAD_INHERIT_SCHED);
        }
    }




    static if(!is(typeof(PTHREAD_EXPLICIT_SCHED))) {
        private enum enumMixinStr_PTHREAD_EXPLICIT_SCHED = `enum PTHREAD_EXPLICIT_SCHED = PTHREAD_EXPLICIT_SCHED;`;
        static if(is(typeof({ mixin(enumMixinStr_PTHREAD_EXPLICIT_SCHED); }))) {
            mixin(enumMixinStr_PTHREAD_EXPLICIT_SCHED);
        }
    }




    static if(!is(typeof(ASN1_F_PKCS5_PBE_SET))) {
        private enum enumMixinStr_ASN1_F_PKCS5_PBE_SET = `enum ASN1_F_PKCS5_PBE_SET = 202;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_PKCS5_PBE_SET); }))) {
            mixin(enumMixinStr_ASN1_F_PKCS5_PBE_SET);
        }
    }




    static if(!is(typeof(PTHREAD_SCOPE_SYSTEM))) {
        private enum enumMixinStr_PTHREAD_SCOPE_SYSTEM = `enum PTHREAD_SCOPE_SYSTEM = PTHREAD_SCOPE_SYSTEM;`;
        static if(is(typeof({ mixin(enumMixinStr_PTHREAD_SCOPE_SYSTEM); }))) {
            mixin(enumMixinStr_PTHREAD_SCOPE_SYSTEM);
        }
    }




    static if(!is(typeof(PTHREAD_SCOPE_PROCESS))) {
        private enum enumMixinStr_PTHREAD_SCOPE_PROCESS = `enum PTHREAD_SCOPE_PROCESS = PTHREAD_SCOPE_PROCESS;`;
        static if(is(typeof({ mixin(enumMixinStr_PTHREAD_SCOPE_PROCESS); }))) {
            mixin(enumMixinStr_PTHREAD_SCOPE_PROCESS);
        }
    }




    static if(!is(typeof(ASN1_F_PKCS5_PBE2_SET_SCRYPT))) {
        private enum enumMixinStr_ASN1_F_PKCS5_PBE2_SET_SCRYPT = `enum ASN1_F_PKCS5_PBE2_SET_SCRYPT = 231;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_PKCS5_PBE2_SET_SCRYPT); }))) {
            mixin(enumMixinStr_ASN1_F_PKCS5_PBE2_SET_SCRYPT);
        }
    }




    static if(!is(typeof(PTHREAD_PROCESS_PRIVATE))) {
        private enum enumMixinStr_PTHREAD_PROCESS_PRIVATE = `enum PTHREAD_PROCESS_PRIVATE = PTHREAD_PROCESS_PRIVATE;`;
        static if(is(typeof({ mixin(enumMixinStr_PTHREAD_PROCESS_PRIVATE); }))) {
            mixin(enumMixinStr_PTHREAD_PROCESS_PRIVATE);
        }
    }




    static if(!is(typeof(PTHREAD_PROCESS_SHARED))) {
        private enum enumMixinStr_PTHREAD_PROCESS_SHARED = `enum PTHREAD_PROCESS_SHARED = PTHREAD_PROCESS_SHARED;`;
        static if(is(typeof({ mixin(enumMixinStr_PTHREAD_PROCESS_SHARED); }))) {
            mixin(enumMixinStr_PTHREAD_PROCESS_SHARED);
        }
    }




    static if(!is(typeof(PTHREAD_COND_INITIALIZER))) {
        private enum enumMixinStr_PTHREAD_COND_INITIALIZER = `enum PTHREAD_COND_INITIALIZER = { { { 0 } , { 0 } , { 0 , 0 } , { 0 , 0 } , 0 , 0 , { 0 , 0 } } };`;
        static if(is(typeof({ mixin(enumMixinStr_PTHREAD_COND_INITIALIZER); }))) {
            mixin(enumMixinStr_PTHREAD_COND_INITIALIZER);
        }
    }




    static if(!is(typeof(ASN1_F_PKCS5_PBE2_SET_IV))) {
        private enum enumMixinStr_ASN1_F_PKCS5_PBE2_SET_IV = `enum ASN1_F_PKCS5_PBE2_SET_IV = 167;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_PKCS5_PBE2_SET_IV); }))) {
            mixin(enumMixinStr_ASN1_F_PKCS5_PBE2_SET_IV);
        }
    }




    static if(!is(typeof(ASN1_F_PARSE_TAGGING))) {
        private enum enumMixinStr_ASN1_F_PARSE_TAGGING = `enum ASN1_F_PARSE_TAGGING = 182;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_PARSE_TAGGING); }))) {
            mixin(enumMixinStr_ASN1_F_PARSE_TAGGING);
        }
    }




    static if(!is(typeof(PTHREAD_CANCEL_ENABLE))) {
        private enum enumMixinStr_PTHREAD_CANCEL_ENABLE = `enum PTHREAD_CANCEL_ENABLE = PTHREAD_CANCEL_ENABLE;`;
        static if(is(typeof({ mixin(enumMixinStr_PTHREAD_CANCEL_ENABLE); }))) {
            mixin(enumMixinStr_PTHREAD_CANCEL_ENABLE);
        }
    }




    static if(!is(typeof(PTHREAD_CANCEL_DISABLE))) {
        private enum enumMixinStr_PTHREAD_CANCEL_DISABLE = `enum PTHREAD_CANCEL_DISABLE = PTHREAD_CANCEL_DISABLE;`;
        static if(is(typeof({ mixin(enumMixinStr_PTHREAD_CANCEL_DISABLE); }))) {
            mixin(enumMixinStr_PTHREAD_CANCEL_DISABLE);
        }
    }




    static if(!is(typeof(ASN1_F_OID_MODULE_INIT))) {
        private enum enumMixinStr_ASN1_F_OID_MODULE_INIT = `enum ASN1_F_OID_MODULE_INIT = 174;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_OID_MODULE_INIT); }))) {
            mixin(enumMixinStr_ASN1_F_OID_MODULE_INIT);
        }
    }




    static if(!is(typeof(PTHREAD_CANCEL_DEFERRED))) {
        private enum enumMixinStr_PTHREAD_CANCEL_DEFERRED = `enum PTHREAD_CANCEL_DEFERRED = PTHREAD_CANCEL_DEFERRED;`;
        static if(is(typeof({ mixin(enumMixinStr_PTHREAD_CANCEL_DEFERRED); }))) {
            mixin(enumMixinStr_PTHREAD_CANCEL_DEFERRED);
        }
    }




    static if(!is(typeof(PTHREAD_CANCEL_ASYNCHRONOUS))) {
        private enum enumMixinStr_PTHREAD_CANCEL_ASYNCHRONOUS = `enum PTHREAD_CANCEL_ASYNCHRONOUS = PTHREAD_CANCEL_ASYNCHRONOUS;`;
        static if(is(typeof({ mixin(enumMixinStr_PTHREAD_CANCEL_ASYNCHRONOUS); }))) {
            mixin(enumMixinStr_PTHREAD_CANCEL_ASYNCHRONOUS);
        }
    }




    static if(!is(typeof(PTHREAD_CANCELED))) {
        private enum enumMixinStr_PTHREAD_CANCELED = `enum PTHREAD_CANCELED = ( cast( void * ) - 1 );`;
        static if(is(typeof({ mixin(enumMixinStr_PTHREAD_CANCELED); }))) {
            mixin(enumMixinStr_PTHREAD_CANCELED);
        }
    }




    static if(!is(typeof(PTHREAD_ONCE_INIT))) {
        private enum enumMixinStr_PTHREAD_ONCE_INIT = `enum PTHREAD_ONCE_INIT = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_PTHREAD_ONCE_INIT); }))) {
            mixin(enumMixinStr_PTHREAD_ONCE_INIT);
        }
    }




    static if(!is(typeof(ASN1_F_NDEF_SUFFIX))) {
        private enum enumMixinStr_ASN1_F_NDEF_SUFFIX = `enum ASN1_F_NDEF_SUFFIX = 136;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_NDEF_SUFFIX); }))) {
            mixin(enumMixinStr_ASN1_F_NDEF_SUFFIX);
        }
    }




    static if(!is(typeof(PTHREAD_BARRIER_SERIAL_THREAD))) {
        private enum enumMixinStr_PTHREAD_BARRIER_SERIAL_THREAD = `enum PTHREAD_BARRIER_SERIAL_THREAD = - 1;`;
        static if(is(typeof({ mixin(enumMixinStr_PTHREAD_BARRIER_SERIAL_THREAD); }))) {
            mixin(enumMixinStr_PTHREAD_BARRIER_SERIAL_THREAD);
        }
    }




    static if(!is(typeof(ASN1_F_NDEF_PREFIX))) {
        private enum enumMixinStr_ASN1_F_NDEF_PREFIX = `enum ASN1_F_NDEF_PREFIX = 127;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_NDEF_PREFIX); }))) {
            mixin(enumMixinStr_ASN1_F_NDEF_PREFIX);
        }
    }




    static if(!is(typeof(ASN1_F_LONG_C2I))) {
        private enum enumMixinStr_ASN1_F_LONG_C2I = `enum ASN1_F_LONG_C2I = 166;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_LONG_C2I); }))) {
            mixin(enumMixinStr_ASN1_F_LONG_C2I);
        }
    }




    static if(!is(typeof(ASN1_F_I2D_RSA_PUBKEY))) {
        private enum enumMixinStr_ASN1_F_I2D_RSA_PUBKEY = `enum ASN1_F_I2D_RSA_PUBKEY = 165;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_I2D_RSA_PUBKEY); }))) {
            mixin(enumMixinStr_ASN1_F_I2D_RSA_PUBKEY);
        }
    }




    static if(!is(typeof(ASN1_F_I2D_PUBLICKEY))) {
        private enum enumMixinStr_ASN1_F_I2D_PUBLICKEY = `enum ASN1_F_I2D_PUBLICKEY = 164;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_I2D_PUBLICKEY); }))) {
            mixin(enumMixinStr_ASN1_F_I2D_PUBLICKEY);
        }
    }




    static if(!is(typeof(ASN1_F_I2D_PRIVATEKEY))) {
        private enum enumMixinStr_ASN1_F_I2D_PRIVATEKEY = `enum ASN1_F_I2D_PRIVATEKEY = 163;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_I2D_PRIVATEKEY); }))) {
            mixin(enumMixinStr_ASN1_F_I2D_PRIVATEKEY);
        }
    }




    static if(!is(typeof(ASN1_F_I2D_EC_PUBKEY))) {
        private enum enumMixinStr_ASN1_F_I2D_EC_PUBKEY = `enum ASN1_F_I2D_EC_PUBKEY = 181;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_I2D_EC_PUBKEY); }))) {
            mixin(enumMixinStr_ASN1_F_I2D_EC_PUBKEY);
        }
    }




    static if(!is(typeof(ASN1_F_I2D_DSA_PUBKEY))) {
        private enum enumMixinStr_ASN1_F_I2D_DSA_PUBKEY = `enum ASN1_F_I2D_DSA_PUBKEY = 161;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_I2D_DSA_PUBKEY); }))) {
            mixin(enumMixinStr_ASN1_F_I2D_DSA_PUBKEY);
        }
    }




    static if(!is(typeof(ASN1_F_I2D_ASN1_OBJECT))) {
        private enum enumMixinStr_ASN1_F_I2D_ASN1_OBJECT = `enum ASN1_F_I2D_ASN1_OBJECT = 143;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_I2D_ASN1_OBJECT); }))) {
            mixin(enumMixinStr_ASN1_F_I2D_ASN1_OBJECT);
        }
    }




    static if(!is(typeof(ASN1_F_I2D_ASN1_BIO_STREAM))) {
        private enum enumMixinStr_ASN1_F_I2D_ASN1_BIO_STREAM = `enum ASN1_F_I2D_ASN1_BIO_STREAM = 211;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_I2D_ASN1_BIO_STREAM); }))) {
            mixin(enumMixinStr_ASN1_F_I2D_ASN1_BIO_STREAM);
        }
    }




    static if(!is(typeof(ASN1_F_I2A_ASN1_OBJECT))) {
        private enum enumMixinStr_ASN1_F_I2A_ASN1_OBJECT = `enum ASN1_F_I2A_ASN1_OBJECT = 126;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_I2A_ASN1_OBJECT); }))) {
            mixin(enumMixinStr_ASN1_F_I2A_ASN1_OBJECT);
        }
    }




    static if(!is(typeof(ASN1_F_DO_TCREATE))) {
        private enum enumMixinStr_ASN1_F_DO_TCREATE = `enum ASN1_F_DO_TCREATE = 222;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_DO_TCREATE); }))) {
            mixin(enumMixinStr_ASN1_F_DO_TCREATE);
        }
    }




    static if(!is(typeof(ASN1_F_DO_DUMP))) {
        private enum enumMixinStr_ASN1_F_DO_DUMP = `enum ASN1_F_DO_DUMP = 125;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_DO_DUMP); }))) {
            mixin(enumMixinStr_ASN1_F_DO_DUMP);
        }
    }




    static if(!is(typeof(ASN1_F_DO_CREATE))) {
        private enum enumMixinStr_ASN1_F_DO_CREATE = `enum ASN1_F_DO_CREATE = 124;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_DO_CREATE); }))) {
            mixin(enumMixinStr_ASN1_F_DO_CREATE);
        }
    }




    static if(!is(typeof(ASN1_F_DO_BUF))) {
        private enum enumMixinStr_ASN1_F_DO_BUF = `enum ASN1_F_DO_BUF = 142;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_DO_BUF); }))) {
            mixin(enumMixinStr_ASN1_F_DO_BUF);
        }
    }




    static if(!is(typeof(ASN1_F_D2I_PUBLICKEY))) {
        private enum enumMixinStr_ASN1_F_D2I_PUBLICKEY = `enum ASN1_F_D2I_PUBLICKEY = 155;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_D2I_PUBLICKEY); }))) {
            mixin(enumMixinStr_ASN1_F_D2I_PUBLICKEY);
        }
    }




    static if(!is(typeof(ASN1_F_D2I_PRIVATEKEY))) {
        private enum enumMixinStr_ASN1_F_D2I_PRIVATEKEY = `enum ASN1_F_D2I_PRIVATEKEY = 154;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_D2I_PRIVATEKEY); }))) {
            mixin(enumMixinStr_ASN1_F_D2I_PRIVATEKEY);
        }
    }




    static if(!is(typeof(ASN1_F_D2I_AUTOPRIVATEKEY))) {
        private enum enumMixinStr_ASN1_F_D2I_AUTOPRIVATEKEY = `enum ASN1_F_D2I_AUTOPRIVATEKEY = 207;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_D2I_AUTOPRIVATEKEY); }))) {
            mixin(enumMixinStr_ASN1_F_D2I_AUTOPRIVATEKEY);
        }
    }




    static if(!is(typeof(ASN1_F_D2I_ASN1_UINTEGER))) {
        private enum enumMixinStr_ASN1_F_D2I_ASN1_UINTEGER = `enum ASN1_F_D2I_ASN1_UINTEGER = 150;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_D2I_ASN1_UINTEGER); }))) {
            mixin(enumMixinStr_ASN1_F_D2I_ASN1_UINTEGER);
        }
    }




    static if(!is(typeof(ASN1_F_D2I_ASN1_OBJECT))) {
        private enum enumMixinStr_ASN1_F_D2I_ASN1_OBJECT = `enum ASN1_F_D2I_ASN1_OBJECT = 147;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_D2I_ASN1_OBJECT); }))) {
            mixin(enumMixinStr_ASN1_F_D2I_ASN1_OBJECT);
        }
    }




    static if(!is(typeof(ASN1_F_COLLECT_DATA))) {
        private enum enumMixinStr_ASN1_F_COLLECT_DATA = `enum ASN1_F_COLLECT_DATA = 140;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_COLLECT_DATA); }))) {
            mixin(enumMixinStr_ASN1_F_COLLECT_DATA);
        }
    }




    static if(!is(typeof(ASN1_F_C2I_UINT64_INT))) {
        private enum enumMixinStr_ASN1_F_C2I_UINT64_INT = `enum ASN1_F_C2I_UINT64_INT = 101;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_C2I_UINT64_INT); }))) {
            mixin(enumMixinStr_ASN1_F_C2I_UINT64_INT);
        }
    }




    static if(!is(typeof(ASN1_F_C2I_IBUF))) {
        private enum enumMixinStr_ASN1_F_C2I_IBUF = `enum ASN1_F_C2I_IBUF = 226;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_C2I_IBUF); }))) {
            mixin(enumMixinStr_ASN1_F_C2I_IBUF);
        }
    }




    static if(!is(typeof(ASN1_F_C2I_ASN1_OBJECT))) {
        private enum enumMixinStr_ASN1_F_C2I_ASN1_OBJECT = `enum ASN1_F_C2I_ASN1_OBJECT = 196;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_C2I_ASN1_OBJECT); }))) {
            mixin(enumMixinStr_ASN1_F_C2I_ASN1_OBJECT);
        }
    }




    static if(!is(typeof(ASN1_F_C2I_ASN1_INTEGER))) {
        private enum enumMixinStr_ASN1_F_C2I_ASN1_INTEGER = `enum ASN1_F_C2I_ASN1_INTEGER = 194;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_C2I_ASN1_INTEGER); }))) {
            mixin(enumMixinStr_ASN1_F_C2I_ASN1_INTEGER);
        }
    }




    static if(!is(typeof(ASN1_F_C2I_ASN1_BIT_STRING))) {
        private enum enumMixinStr_ASN1_F_C2I_ASN1_BIT_STRING = `enum ASN1_F_C2I_ASN1_BIT_STRING = 189;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_C2I_ASN1_BIT_STRING); }))) {
            mixin(enumMixinStr_ASN1_F_C2I_ASN1_BIT_STRING);
        }
    }




    static if(!is(typeof(ASN1_F_BN_TO_ASN1_STRING))) {
        private enum enumMixinStr_ASN1_F_BN_TO_ASN1_STRING = `enum ASN1_F_BN_TO_ASN1_STRING = 229;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_BN_TO_ASN1_STRING); }))) {
            mixin(enumMixinStr_ASN1_F_BN_TO_ASN1_STRING);
        }
    }




    static if(!is(typeof(ASN1_F_BITSTR_CB))) {
        private enum enumMixinStr_ASN1_F_BITSTR_CB = `enum ASN1_F_BITSTR_CB = 180;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_BITSTR_CB); }))) {
            mixin(enumMixinStr_ASN1_F_BITSTR_CB);
        }
    }




    static if(!is(typeof(ASN1_F_BIO_NEW_NDEF))) {
        private enum enumMixinStr_ASN1_F_BIO_NEW_NDEF = `enum ASN1_F_BIO_NEW_NDEF = 208;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_BIO_NEW_NDEF); }))) {
            mixin(enumMixinStr_ASN1_F_BIO_NEW_NDEF);
        }
    }




    static if(!is(typeof(ASN1_F_B64_WRITE_ASN1))) {
        private enum enumMixinStr_ASN1_F_B64_WRITE_ASN1 = `enum ASN1_F_B64_WRITE_ASN1 = 210;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_B64_WRITE_ASN1); }))) {
            mixin(enumMixinStr_ASN1_F_B64_WRITE_ASN1);
        }
    }




    static if(!is(typeof(ASN1_F_B64_READ_ASN1))) {
        private enum enumMixinStr_ASN1_F_B64_READ_ASN1 = `enum ASN1_F_B64_READ_ASN1 = 209;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_B64_READ_ASN1); }))) {
            mixin(enumMixinStr_ASN1_F_B64_READ_ASN1);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_VERIFY))) {
        private enum enumMixinStr_ASN1_F_ASN1_VERIFY = `enum ASN1_F_ASN1_VERIFY = 137;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_VERIFY); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_VERIFY);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_UTCTIME_ADJ))) {
        private enum enumMixinStr_ASN1_F_ASN1_UTCTIME_ADJ = `enum ASN1_F_ASN1_UTCTIME_ADJ = 218;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_UTCTIME_ADJ); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_UTCTIME_ADJ);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_TYPE_GET_OCTETSTRING))) {
        private enum enumMixinStr_ASN1_F_ASN1_TYPE_GET_OCTETSTRING = `enum ASN1_F_ASN1_TYPE_GET_OCTETSTRING = 135;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_TYPE_GET_OCTETSTRING); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_TYPE_GET_OCTETSTRING);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_TYPE_GET_INT_OCTETSTRING))) {
        private enum enumMixinStr_ASN1_F_ASN1_TYPE_GET_INT_OCTETSTRING = `enum ASN1_F_ASN1_TYPE_GET_INT_OCTETSTRING = 134;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_TYPE_GET_INT_OCTETSTRING); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_TYPE_GET_INT_OCTETSTRING);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_TIME_ADJ))) {
        private enum enumMixinStr_ASN1_F_ASN1_TIME_ADJ = `enum ASN1_F_ASN1_TIME_ADJ = 217;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_TIME_ADJ); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_TIME_ADJ);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_TEMPLATE_NOEXP_D2I))) {
        private enum enumMixinStr_ASN1_F_ASN1_TEMPLATE_NOEXP_D2I = `enum ASN1_F_ASN1_TEMPLATE_NOEXP_D2I = 131;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_TEMPLATE_NOEXP_D2I); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_TEMPLATE_NOEXP_D2I);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_TEMPLATE_NEW))) {
        private enum enumMixinStr_ASN1_F_ASN1_TEMPLATE_NEW = `enum ASN1_F_ASN1_TEMPLATE_NEW = 133;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_TEMPLATE_NEW); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_TEMPLATE_NEW);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_TEMPLATE_EX_D2I))) {
        private enum enumMixinStr_ASN1_F_ASN1_TEMPLATE_EX_D2I = `enum ASN1_F_ASN1_TEMPLATE_EX_D2I = 132;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_TEMPLATE_EX_D2I); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_TEMPLATE_EX_D2I);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_STRING_TYPE_NEW))) {
        private enum enumMixinStr_ASN1_F_ASN1_STRING_TYPE_NEW = `enum ASN1_F_ASN1_STRING_TYPE_NEW = 130;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_STRING_TYPE_NEW); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_STRING_TYPE_NEW);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_STRING_TO_BN))) {
        private enum enumMixinStr_ASN1_F_ASN1_STRING_TO_BN = `enum ASN1_F_ASN1_STRING_TO_BN = 228;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_STRING_TO_BN); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_STRING_TO_BN);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_STRING_TABLE_ADD))) {
        private enum enumMixinStr_ASN1_F_ASN1_STRING_TABLE_ADD = `enum ASN1_F_ASN1_STRING_TABLE_ADD = 129;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_STRING_TABLE_ADD); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_STRING_TABLE_ADD);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_STRING_SET))) {
        private enum enumMixinStr_ASN1_F_ASN1_STRING_SET = `enum ASN1_F_ASN1_STRING_SET = 186;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_STRING_SET); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_STRING_SET);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_STRING_GET_UINT64))) {
        private enum enumMixinStr_ASN1_F_ASN1_STRING_GET_UINT64 = `enum ASN1_F_ASN1_STRING_GET_UINT64 = 230;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_STRING_GET_UINT64); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_STRING_GET_UINT64);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_STRING_GET_INT64))) {
        private enum enumMixinStr_ASN1_F_ASN1_STRING_GET_INT64 = `enum ASN1_F_ASN1_STRING_GET_INT64 = 227;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_STRING_GET_INT64); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_STRING_GET_INT64);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_STR2TYPE))) {
        private enum enumMixinStr_ASN1_F_ASN1_STR2TYPE = `enum ASN1_F_ASN1_STR2TYPE = 179;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_STR2TYPE); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_STR2TYPE);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_SIGN))) {
        private enum enumMixinStr_ASN1_F_ASN1_SIGN = `enum ASN1_F_ASN1_SIGN = 128;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_SIGN); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_SIGN);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_SCTX_NEW))) {
        private enum enumMixinStr_ASN1_F_ASN1_SCTX_NEW = `enum ASN1_F_ASN1_SCTX_NEW = 221;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_SCTX_NEW); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_SCTX_NEW);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_PRIMITIVE_NEW))) {
        private enum enumMixinStr_ASN1_F_ASN1_PRIMITIVE_NEW = `enum ASN1_F_ASN1_PRIMITIVE_NEW = 119;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_PRIMITIVE_NEW); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_PRIMITIVE_NEW);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_PCTX_NEW))) {
        private enum enumMixinStr_ASN1_F_ASN1_PCTX_NEW = `enum ASN1_F_ASN1_PCTX_NEW = 205;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_PCTX_NEW); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_PCTX_NEW);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_OUTPUT_DATA))) {
        private enum enumMixinStr_ASN1_F_ASN1_OUTPUT_DATA = `enum ASN1_F_ASN1_OUTPUT_DATA = 214;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_OUTPUT_DATA); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_OUTPUT_DATA);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_OBJECT_NEW))) {
        private enum enumMixinStr_ASN1_F_ASN1_OBJECT_NEW = `enum ASN1_F_ASN1_OBJECT_NEW = 123;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_OBJECT_NEW); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_OBJECT_NEW);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_MBSTRING_NCOPY))) {
        private enum enumMixinStr_ASN1_F_ASN1_MBSTRING_NCOPY = `enum ASN1_F_ASN1_MBSTRING_NCOPY = 122;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_MBSTRING_NCOPY); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_MBSTRING_NCOPY);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_ITEM_VERIFY))) {
        private enum enumMixinStr_ASN1_F_ASN1_ITEM_VERIFY = `enum ASN1_F_ASN1_ITEM_VERIFY = 197;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_ITEM_VERIFY); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_ITEM_VERIFY);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_ITEM_UNPACK))) {
        private enum enumMixinStr_ASN1_F_ASN1_ITEM_UNPACK = `enum ASN1_F_ASN1_ITEM_UNPACK = 199;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_ITEM_UNPACK); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_ITEM_UNPACK);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_ITEM_SIGN_CTX))) {
        private enum enumMixinStr_ASN1_F_ASN1_ITEM_SIGN_CTX = `enum ASN1_F_ASN1_ITEM_SIGN_CTX = 220;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_ITEM_SIGN_CTX); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_ITEM_SIGN_CTX);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_ITEM_SIGN))) {
        private enum enumMixinStr_ASN1_F_ASN1_ITEM_SIGN = `enum ASN1_F_ASN1_ITEM_SIGN = 195;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_ITEM_SIGN); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_ITEM_SIGN);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_ITEM_PACK))) {
        private enum enumMixinStr_ASN1_F_ASN1_ITEM_PACK = `enum ASN1_F_ASN1_ITEM_PACK = 198;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_ITEM_PACK); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_ITEM_PACK);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_ITEM_I2D_FP))) {
        private enum enumMixinStr_ASN1_F_ASN1_ITEM_I2D_FP = `enum ASN1_F_ASN1_ITEM_I2D_FP = 193;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_ITEM_I2D_FP); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_ITEM_I2D_FP);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_ITEM_I2D_BIO))) {
        private enum enumMixinStr_ASN1_F_ASN1_ITEM_I2D_BIO = `enum ASN1_F_ASN1_ITEM_I2D_BIO = 192;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_ITEM_I2D_BIO); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_ITEM_I2D_BIO);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_ITEM_FLAGS_I2D))) {
        private enum enumMixinStr_ASN1_F_ASN1_ITEM_FLAGS_I2D = `enum ASN1_F_ASN1_ITEM_FLAGS_I2D = 118;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_ITEM_FLAGS_I2D); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_ITEM_FLAGS_I2D);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_ITEM_EX_I2D))) {
        private enum enumMixinStr_ASN1_F_ASN1_ITEM_EX_I2D = `enum ASN1_F_ASN1_ITEM_EX_I2D = 144;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_ITEM_EX_I2D); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_ITEM_EX_I2D);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_ITEM_EMBED_NEW))) {
        private enum enumMixinStr_ASN1_F_ASN1_ITEM_EMBED_NEW = `enum ASN1_F_ASN1_ITEM_EMBED_NEW = 121;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_ITEM_EMBED_NEW); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_ITEM_EMBED_NEW);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_ITEM_EMBED_D2I))) {
        private enum enumMixinStr_ASN1_F_ASN1_ITEM_EMBED_D2I = `enum ASN1_F_ASN1_ITEM_EMBED_D2I = 120;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_ITEM_EMBED_D2I); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_ITEM_EMBED_D2I);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_ITEM_DUP))) {
        private enum enumMixinStr_ASN1_F_ASN1_ITEM_DUP = `enum ASN1_F_ASN1_ITEM_DUP = 191;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_ITEM_DUP); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_ITEM_DUP);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_ITEM_D2I_FP))) {
        private enum enumMixinStr_ASN1_F_ASN1_ITEM_D2I_FP = `enum ASN1_F_ASN1_ITEM_D2I_FP = 206;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_ITEM_D2I_FP); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_ITEM_D2I_FP);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_I2D_FP))) {
        private enum enumMixinStr_ASN1_F_ASN1_I2D_FP = `enum ASN1_F_ASN1_I2D_FP = 117;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_I2D_FP); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_I2D_FP);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_I2D_BIO))) {
        private enum enumMixinStr_ASN1_F_ASN1_I2D_BIO = `enum ASN1_F_ASN1_I2D_BIO = 116;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_I2D_BIO); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_I2D_BIO);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_GET_UINT64))) {
        private enum enumMixinStr_ASN1_F_ASN1_GET_UINT64 = `enum ASN1_F_ASN1_GET_UINT64 = 225;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_GET_UINT64); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_GET_UINT64);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_GET_OBJECT))) {
        private enum enumMixinStr_ASN1_F_ASN1_GET_OBJECT = `enum ASN1_F_ASN1_GET_OBJECT = 114;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_GET_OBJECT); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_GET_OBJECT);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_GET_INT64))) {
        private enum enumMixinStr_ASN1_F_ASN1_GET_INT64 = `enum ASN1_F_ASN1_GET_INT64 = 224;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_GET_INT64); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_GET_INT64);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_GENERATE_V3))) {
        private enum enumMixinStr_ASN1_F_ASN1_GENERATE_V3 = `enum ASN1_F_ASN1_GENERATE_V3 = 178;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_GENERATE_V3); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_GENERATE_V3);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_GENERALIZEDTIME_ADJ))) {
        private enum enumMixinStr_ASN1_F_ASN1_GENERALIZEDTIME_ADJ = `enum ASN1_F_ASN1_GENERALIZEDTIME_ADJ = 216;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_GENERALIZEDTIME_ADJ); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_GENERALIZEDTIME_ADJ);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_FIND_END))) {
        private enum enumMixinStr_ASN1_F_ASN1_FIND_END = `enum ASN1_F_ASN1_FIND_END = 190;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_FIND_END); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_FIND_END);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_EX_C2I))) {
        private enum enumMixinStr_ASN1_F_ASN1_EX_C2I = `enum ASN1_F_ASN1_EX_C2I = 204;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_EX_C2I); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_EX_C2I);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_ENC_SAVE))) {
        private enum enumMixinStr_ASN1_F_ASN1_ENC_SAVE = `enum ASN1_F_ASN1_ENC_SAVE = 115;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_ENC_SAVE); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_ENC_SAVE);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_DUP))) {
        private enum enumMixinStr_ASN1_F_ASN1_DUP = `enum ASN1_F_ASN1_DUP = 111;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_DUP); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_DUP);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_DO_LOCK))) {
        private enum enumMixinStr_ASN1_F_ASN1_DO_LOCK = `enum ASN1_F_ASN1_DO_LOCK = 233;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_DO_LOCK); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_DO_LOCK);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_DO_ADB))) {
        private enum enumMixinStr_ASN1_F_ASN1_DO_ADB = `enum ASN1_F_ASN1_DO_ADB = 110;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_DO_ADB); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_DO_ADB);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_DIGEST))) {
        private enum enumMixinStr_ASN1_F_ASN1_DIGEST = `enum ASN1_F_ASN1_DIGEST = 184;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_DIGEST); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_DIGEST);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_D2I_READ_BIO))) {
        private enum enumMixinStr_ASN1_F_ASN1_D2I_READ_BIO = `enum ASN1_F_ASN1_D2I_READ_BIO = 107;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_D2I_READ_BIO); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_D2I_READ_BIO);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_D2I_FP))) {
        private enum enumMixinStr_ASN1_F_ASN1_D2I_FP = `enum ASN1_F_ASN1_D2I_FP = 109;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_D2I_FP); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_D2I_FP);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_D2I_EX_PRIMITIVE))) {
        private enum enumMixinStr_ASN1_F_ASN1_D2I_EX_PRIMITIVE = `enum ASN1_F_ASN1_D2I_EX_PRIMITIVE = 108;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_D2I_EX_PRIMITIVE); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_D2I_EX_PRIMITIVE);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_COLLECT))) {
        private enum enumMixinStr_ASN1_F_ASN1_COLLECT = `enum ASN1_F_ASN1_COLLECT = 106;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_COLLECT); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_COLLECT);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_CHECK_TLEN))) {
        private enum enumMixinStr_ASN1_F_ASN1_CHECK_TLEN = `enum ASN1_F_ASN1_CHECK_TLEN = 104;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_CHECK_TLEN); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_CHECK_TLEN);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_CB))) {
        private enum enumMixinStr_ASN1_F_ASN1_CB = `enum ASN1_F_ASN1_CB = 177;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_CB); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_CB);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_BIT_STRING_SET_BIT))) {
        private enum enumMixinStr_ASN1_F_ASN1_BIT_STRING_SET_BIT = `enum ASN1_F_ASN1_BIT_STRING_SET_BIT = 183;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_BIT_STRING_SET_BIT); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_BIT_STRING_SET_BIT);
        }
    }




    static if(!is(typeof(ASN1_F_ASN1_BIO_INIT))) {
        private enum enumMixinStr_ASN1_F_ASN1_BIO_INIT = `enum ASN1_F_ASN1_BIO_INIT = 113;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_ASN1_BIO_INIT); }))) {
            mixin(enumMixinStr_ASN1_F_ASN1_BIO_INIT);
        }
    }




    static if(!is(typeof(ASN1_F_APPEND_EXP))) {
        private enum enumMixinStr_ASN1_F_APPEND_EXP = `enum ASN1_F_APPEND_EXP = 176;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_APPEND_EXP); }))) {
            mixin(enumMixinStr_ASN1_F_APPEND_EXP);
        }
    }




    static if(!is(typeof(ASN1_F_A2I_ASN1_STRING))) {
        private enum enumMixinStr_ASN1_F_A2I_ASN1_STRING = `enum ASN1_F_A2I_ASN1_STRING = 103;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_A2I_ASN1_STRING); }))) {
            mixin(enumMixinStr_ASN1_F_A2I_ASN1_STRING);
        }
    }




    static if(!is(typeof(ASN1_F_A2I_ASN1_INTEGER))) {
        private enum enumMixinStr_ASN1_F_A2I_ASN1_INTEGER = `enum ASN1_F_A2I_ASN1_INTEGER = 102;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_A2I_ASN1_INTEGER); }))) {
            mixin(enumMixinStr_ASN1_F_A2I_ASN1_INTEGER);
        }
    }




    static if(!is(typeof(ASN1_F_A2D_ASN1_OBJECT))) {
        private enum enumMixinStr_ASN1_F_A2D_ASN1_OBJECT = `enum ASN1_F_A2D_ASN1_OBJECT = 100;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_F_A2D_ASN1_OBJECT); }))) {
            mixin(enumMixinStr_ASN1_F_A2D_ASN1_OBJECT);
        }
    }
    static if(!is(typeof(ASN1_PCTX_FLAGS_NO_STRUCT_NAME))) {
        private enum enumMixinStr_ASN1_PCTX_FLAGS_NO_STRUCT_NAME = `enum ASN1_PCTX_FLAGS_NO_STRUCT_NAME = 0x100;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_PCTX_FLAGS_NO_STRUCT_NAME); }))) {
            mixin(enumMixinStr_ASN1_PCTX_FLAGS_NO_STRUCT_NAME);
        }
    }




    static if(!is(typeof(ASN1_PCTX_FLAGS_SHOW_FIELD_STRUCT_NAME))) {
        private enum enumMixinStr_ASN1_PCTX_FLAGS_SHOW_FIELD_STRUCT_NAME = `enum ASN1_PCTX_FLAGS_SHOW_FIELD_STRUCT_NAME = 0x080;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_PCTX_FLAGS_SHOW_FIELD_STRUCT_NAME); }))) {
            mixin(enumMixinStr_ASN1_PCTX_FLAGS_SHOW_FIELD_STRUCT_NAME);
        }
    }






    static if(!is(typeof(ASN1_PCTX_FLAGS_NO_FIELD_NAME))) {
        private enum enumMixinStr_ASN1_PCTX_FLAGS_NO_FIELD_NAME = `enum ASN1_PCTX_FLAGS_NO_FIELD_NAME = 0x040;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_PCTX_FLAGS_NO_FIELD_NAME); }))) {
            mixin(enumMixinStr_ASN1_PCTX_FLAGS_NO_FIELD_NAME);
        }
    }




    static if(!is(typeof(ASN1_PCTX_FLAGS_NO_MSTRING_TYPE))) {
        private enum enumMixinStr_ASN1_PCTX_FLAGS_NO_MSTRING_TYPE = `enum ASN1_PCTX_FLAGS_NO_MSTRING_TYPE = 0x020;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_PCTX_FLAGS_NO_MSTRING_TYPE); }))) {
            mixin(enumMixinStr_ASN1_PCTX_FLAGS_NO_MSTRING_TYPE);
        }
    }






    static if(!is(typeof(ASN1_PCTX_FLAGS_NO_ANY_TYPE))) {
        private enum enumMixinStr_ASN1_PCTX_FLAGS_NO_ANY_TYPE = `enum ASN1_PCTX_FLAGS_NO_ANY_TYPE = 0x010;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_PCTX_FLAGS_NO_ANY_TYPE); }))) {
            mixin(enumMixinStr_ASN1_PCTX_FLAGS_NO_ANY_TYPE);
        }
    }




    static if(!is(typeof(ASN1_PCTX_FLAGS_SHOW_TYPE))) {
        private enum enumMixinStr_ASN1_PCTX_FLAGS_SHOW_TYPE = `enum ASN1_PCTX_FLAGS_SHOW_TYPE = 0x008;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_PCTX_FLAGS_SHOW_TYPE); }))) {
            mixin(enumMixinStr_ASN1_PCTX_FLAGS_SHOW_TYPE);
        }
    }




    static if(!is(typeof(ASN1_PCTX_FLAGS_SHOW_SSOF))) {
        private enum enumMixinStr_ASN1_PCTX_FLAGS_SHOW_SSOF = `enum ASN1_PCTX_FLAGS_SHOW_SSOF = 0x004;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_PCTX_FLAGS_SHOW_SSOF); }))) {
            mixin(enumMixinStr_ASN1_PCTX_FLAGS_SHOW_SSOF);
        }
    }




    static if(!is(typeof(ASN1_PCTX_FLAGS_SHOW_SEQUENCE))) {
        private enum enumMixinStr_ASN1_PCTX_FLAGS_SHOW_SEQUENCE = `enum ASN1_PCTX_FLAGS_SHOW_SEQUENCE = 0x002;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_PCTX_FLAGS_SHOW_SEQUENCE); }))) {
            mixin(enumMixinStr_ASN1_PCTX_FLAGS_SHOW_SEQUENCE);
        }
    }




    static if(!is(typeof(ASN1_PCTX_FLAGS_SHOW_ABSENT))) {
        private enum enumMixinStr_ASN1_PCTX_FLAGS_SHOW_ABSENT = `enum ASN1_PCTX_FLAGS_SHOW_ABSENT = 0x001;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_PCTX_FLAGS_SHOW_ABSENT); }))) {
            mixin(enumMixinStr_ASN1_PCTX_FLAGS_SHOW_ABSENT);
        }
    }
    static if(!is(typeof(B_ASN1_DISPLAYTEXT))) {
        private enum enumMixinStr_B_ASN1_DISPLAYTEXT = `enum B_ASN1_DISPLAYTEXT = B_ASN1_IA5STRING | B_ASN1_VISIBLESTRING | B_ASN1_BMPSTRING | B_ASN1_UTF8STRING;`;
        static if(is(typeof({ mixin(enumMixinStr_B_ASN1_DISPLAYTEXT); }))) {
            mixin(enumMixinStr_B_ASN1_DISPLAYTEXT);
        }
    }




    static if(!is(typeof(B_ASN1_DIRECTORYSTRING))) {
        private enum enumMixinStr_B_ASN1_DIRECTORYSTRING = `enum B_ASN1_DIRECTORYSTRING = B_ASN1_PRINTABLESTRING | B_ASN1_TELETEXSTRING | B_ASN1_BMPSTRING | B_ASN1_UNIVERSALSTRING | B_ASN1_UTF8STRING;`;
        static if(is(typeof({ mixin(enumMixinStr_B_ASN1_DIRECTORYSTRING); }))) {
            mixin(enumMixinStr_B_ASN1_DIRECTORYSTRING);
        }
    }




    static if(!is(typeof(B_ASN1_PRINTABLE))) {
        private enum enumMixinStr_B_ASN1_PRINTABLE = `enum B_ASN1_PRINTABLE = B_ASN1_NUMERICSTRING | B_ASN1_PRINTABLESTRING | B_ASN1_T61STRING | B_ASN1_IA5STRING | B_ASN1_BIT_STRING | B_ASN1_UNIVERSALSTRING | B_ASN1_BMPSTRING | B_ASN1_UTF8STRING | B_ASN1_SEQUENCE | B_ASN1_UNKNOWN;`;
        static if(is(typeof({ mixin(enumMixinStr_B_ASN1_PRINTABLE); }))) {
            mixin(enumMixinStr_B_ASN1_PRINTABLE);
        }
    }




    static if(!is(typeof(B_ASN1_TIME))) {
        private enum enumMixinStr_B_ASN1_TIME = `enum B_ASN1_TIME = B_ASN1_UTCTIME | B_ASN1_GENERALIZEDTIME;`;
        static if(is(typeof({ mixin(enumMixinStr_B_ASN1_TIME); }))) {
            mixin(enumMixinStr_B_ASN1_TIME);
        }
    }




    static if(!is(typeof(ASN1_STRFLGS_RFC2253))) {
        private enum enumMixinStr_ASN1_STRFLGS_RFC2253 = `enum ASN1_STRFLGS_RFC2253 = ( ASN1_STRFLGS_ESC_2253 | ASN1_STRFLGS_ESC_CTRL | ASN1_STRFLGS_ESC_MSB | ASN1_STRFLGS_UTF8_CONVERT | ASN1_STRFLGS_DUMP_UNKNOWN | ASN1_STRFLGS_DUMP_DER );`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_STRFLGS_RFC2253); }))) {
            mixin(enumMixinStr_ASN1_STRFLGS_RFC2253);
        }
    }




    static if(!is(typeof(ASN1_STRFLGS_ESC_2254))) {
        private enum enumMixinStr_ASN1_STRFLGS_ESC_2254 = `enum ASN1_STRFLGS_ESC_2254 = 0x400;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_STRFLGS_ESC_2254); }))) {
            mixin(enumMixinStr_ASN1_STRFLGS_ESC_2254);
        }
    }




    static if(!is(typeof(ASN1_STRFLGS_DUMP_DER))) {
        private enum enumMixinStr_ASN1_STRFLGS_DUMP_DER = `enum ASN1_STRFLGS_DUMP_DER = 0x200;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_STRFLGS_DUMP_DER); }))) {
            mixin(enumMixinStr_ASN1_STRFLGS_DUMP_DER);
        }
    }




    static if(!is(typeof(ASN1_STRFLGS_DUMP_UNKNOWN))) {
        private enum enumMixinStr_ASN1_STRFLGS_DUMP_UNKNOWN = `enum ASN1_STRFLGS_DUMP_UNKNOWN = 0x100;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_STRFLGS_DUMP_UNKNOWN); }))) {
            mixin(enumMixinStr_ASN1_STRFLGS_DUMP_UNKNOWN);
        }
    }




    static if(!is(typeof(ASN1_STRFLGS_DUMP_ALL))) {
        private enum enumMixinStr_ASN1_STRFLGS_DUMP_ALL = `enum ASN1_STRFLGS_DUMP_ALL = 0x80;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_STRFLGS_DUMP_ALL); }))) {
            mixin(enumMixinStr_ASN1_STRFLGS_DUMP_ALL);
        }
    }




    static if(!is(typeof(ASN1_STRFLGS_SHOW_TYPE))) {
        private enum enumMixinStr_ASN1_STRFLGS_SHOW_TYPE = `enum ASN1_STRFLGS_SHOW_TYPE = 0x40;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_STRFLGS_SHOW_TYPE); }))) {
            mixin(enumMixinStr_ASN1_STRFLGS_SHOW_TYPE);
        }
    }




    static if(!is(typeof(ASN1_STRFLGS_IGNORE_TYPE))) {
        private enum enumMixinStr_ASN1_STRFLGS_IGNORE_TYPE = `enum ASN1_STRFLGS_IGNORE_TYPE = 0x20;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_STRFLGS_IGNORE_TYPE); }))) {
            mixin(enumMixinStr_ASN1_STRFLGS_IGNORE_TYPE);
        }
    }




    static if(!is(typeof(ASN1_STRFLGS_UTF8_CONVERT))) {
        private enum enumMixinStr_ASN1_STRFLGS_UTF8_CONVERT = `enum ASN1_STRFLGS_UTF8_CONVERT = 0x10;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_STRFLGS_UTF8_CONVERT); }))) {
            mixin(enumMixinStr_ASN1_STRFLGS_UTF8_CONVERT);
        }
    }




    static if(!is(typeof(CHARTYPE_LAST_ESC_2253))) {
        private enum enumMixinStr_CHARTYPE_LAST_ESC_2253 = `enum CHARTYPE_LAST_ESC_2253 = 0x40;`;
        static if(is(typeof({ mixin(enumMixinStr_CHARTYPE_LAST_ESC_2253); }))) {
            mixin(enumMixinStr_CHARTYPE_LAST_ESC_2253);
        }
    }




    static if(!is(typeof(CHARTYPE_FIRST_ESC_2253))) {
        private enum enumMixinStr_CHARTYPE_FIRST_ESC_2253 = `enum CHARTYPE_FIRST_ESC_2253 = 0x20;`;
        static if(is(typeof({ mixin(enumMixinStr_CHARTYPE_FIRST_ESC_2253); }))) {
            mixin(enumMixinStr_CHARTYPE_FIRST_ESC_2253);
        }
    }




    static if(!is(typeof(CHARTYPE_PRINTABLESTRING))) {
        private enum enumMixinStr_CHARTYPE_PRINTABLESTRING = `enum CHARTYPE_PRINTABLESTRING = 0x10;`;
        static if(is(typeof({ mixin(enumMixinStr_CHARTYPE_PRINTABLESTRING); }))) {
            mixin(enumMixinStr_CHARTYPE_PRINTABLESTRING);
        }
    }




    static if(!is(typeof(ASN1_STRFLGS_ESC_QUOTE))) {
        private enum enumMixinStr_ASN1_STRFLGS_ESC_QUOTE = `enum ASN1_STRFLGS_ESC_QUOTE = 8;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_STRFLGS_ESC_QUOTE); }))) {
            mixin(enumMixinStr_ASN1_STRFLGS_ESC_QUOTE);
        }
    }




    static if(!is(typeof(ASN1_STRFLGS_ESC_MSB))) {
        private enum enumMixinStr_ASN1_STRFLGS_ESC_MSB = `enum ASN1_STRFLGS_ESC_MSB = 4;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_STRFLGS_ESC_MSB); }))) {
            mixin(enumMixinStr_ASN1_STRFLGS_ESC_MSB);
        }
    }




    static if(!is(typeof(ASN1_STRFLGS_ESC_CTRL))) {
        private enum enumMixinStr_ASN1_STRFLGS_ESC_CTRL = `enum ASN1_STRFLGS_ESC_CTRL = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_STRFLGS_ESC_CTRL); }))) {
            mixin(enumMixinStr_ASN1_STRFLGS_ESC_CTRL);
        }
    }




    static if(!is(typeof(ASN1_STRFLGS_ESC_2253))) {
        private enum enumMixinStr_ASN1_STRFLGS_ESC_2253 = `enum ASN1_STRFLGS_ESC_2253 = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_STRFLGS_ESC_2253); }))) {
            mixin(enumMixinStr_ASN1_STRFLGS_ESC_2253);
        }
    }
    static if(!is(typeof(ub_email_address))) {
        private enum enumMixinStr_ub_email_address = `enum ub_email_address = 128;`;
        static if(is(typeof({ mixin(enumMixinStr_ub_email_address); }))) {
            mixin(enumMixinStr_ub_email_address);
        }
    }




    static if(!is(typeof(ub_title))) {
        private enum enumMixinStr_ub_title = `enum ub_title = 64;`;
        static if(is(typeof({ mixin(enumMixinStr_ub_title); }))) {
            mixin(enumMixinStr_ub_title);
        }
    }




    static if(!is(typeof(ub_organization_unit_name))) {
        private enum enumMixinStr_ub_organization_unit_name = `enum ub_organization_unit_name = 64;`;
        static if(is(typeof({ mixin(enumMixinStr_ub_organization_unit_name); }))) {
            mixin(enumMixinStr_ub_organization_unit_name);
        }
    }




    static if(!is(typeof(ub_organization_name))) {
        private enum enumMixinStr_ub_organization_name = `enum ub_organization_name = 64;`;
        static if(is(typeof({ mixin(enumMixinStr_ub_organization_name); }))) {
            mixin(enumMixinStr_ub_organization_name);
        }
    }




    static if(!is(typeof(ub_state_name))) {
        private enum enumMixinStr_ub_state_name = `enum ub_state_name = 128;`;
        static if(is(typeof({ mixin(enumMixinStr_ub_state_name); }))) {
            mixin(enumMixinStr_ub_state_name);
        }
    }




    static if(!is(typeof(ub_locality_name))) {
        private enum enumMixinStr_ub_locality_name = `enum ub_locality_name = 128;`;
        static if(is(typeof({ mixin(enumMixinStr_ub_locality_name); }))) {
            mixin(enumMixinStr_ub_locality_name);
        }
    }




    static if(!is(typeof(ub_common_name))) {
        private enum enumMixinStr_ub_common_name = `enum ub_common_name = 64;`;
        static if(is(typeof({ mixin(enumMixinStr_ub_common_name); }))) {
            mixin(enumMixinStr_ub_common_name);
        }
    }




    static if(!is(typeof(ub_name))) {
        private enum enumMixinStr_ub_name = `enum ub_name = 32768;`;
        static if(is(typeof({ mixin(enumMixinStr_ub_name); }))) {
            mixin(enumMixinStr_ub_name);
        }
    }




    static if(!is(typeof(PKCS9STRING_TYPE))) {
        private enum enumMixinStr_PKCS9STRING_TYPE = `enum PKCS9STRING_TYPE = ( DIRSTRING_TYPE | B_ASN1_IA5STRING );`;
        static if(is(typeof({ mixin(enumMixinStr_PKCS9STRING_TYPE); }))) {
            mixin(enumMixinStr_PKCS9STRING_TYPE);
        }
    }




    static if(!is(typeof(DIRSTRING_TYPE))) {
        private enum enumMixinStr_DIRSTRING_TYPE = `enum DIRSTRING_TYPE = ( B_ASN1_PRINTABLESTRING | B_ASN1_T61STRING | B_ASN1_BMPSTRING | B_ASN1_UTF8STRING );`;
        static if(is(typeof({ mixin(enumMixinStr_DIRSTRING_TYPE); }))) {
            mixin(enumMixinStr_DIRSTRING_TYPE);
        }
    }




    static if(!is(typeof(STABLE_NO_MASK))) {
        private enum enumMixinStr_STABLE_NO_MASK = `enum STABLE_NO_MASK = 0x02;`;
        static if(is(typeof({ mixin(enumMixinStr_STABLE_NO_MASK); }))) {
            mixin(enumMixinStr_STABLE_NO_MASK);
        }
    }




    static if(!is(typeof(STABLE_FLAGS_CLEAR))) {
        private enum enumMixinStr_STABLE_FLAGS_CLEAR = `enum STABLE_FLAGS_CLEAR = STABLE_FLAGS_MALLOC;`;
        static if(is(typeof({ mixin(enumMixinStr_STABLE_FLAGS_CLEAR); }))) {
            mixin(enumMixinStr_STABLE_FLAGS_CLEAR);
        }
    }




    static if(!is(typeof(STABLE_FLAGS_MALLOC))) {
        private enum enumMixinStr_STABLE_FLAGS_MALLOC = `enum STABLE_FLAGS_MALLOC = 0x01;`;
        static if(is(typeof({ mixin(enumMixinStr_STABLE_FLAGS_MALLOC); }))) {
            mixin(enumMixinStr_STABLE_FLAGS_MALLOC);
        }
    }




    static if(!is(typeof(ASN1_LONG_UNDEF))) {
        private enum enumMixinStr_ASN1_LONG_UNDEF = `enum ASN1_LONG_UNDEF = 0x7fffffffL;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_LONG_UNDEF); }))) {
            mixin(enumMixinStr_ASN1_LONG_UNDEF);
        }
    }




    static if(!is(typeof(ASN1_STRING_FLAG_X509_TIME))) {
        private enum enumMixinStr_ASN1_STRING_FLAG_X509_TIME = `enum ASN1_STRING_FLAG_X509_TIME = 0x100;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_STRING_FLAG_X509_TIME); }))) {
            mixin(enumMixinStr_ASN1_STRING_FLAG_X509_TIME);
        }
    }




    static if(!is(typeof(ASN1_STRING_FLAG_EMBED))) {
        private enum enumMixinStr_ASN1_STRING_FLAG_EMBED = `enum ASN1_STRING_FLAG_EMBED = 0x080;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_STRING_FLAG_EMBED); }))) {
            mixin(enumMixinStr_ASN1_STRING_FLAG_EMBED);
        }
    }




    static if(!is(typeof(ASN1_STRING_FLAG_MSTRING))) {
        private enum enumMixinStr_ASN1_STRING_FLAG_MSTRING = `enum ASN1_STRING_FLAG_MSTRING = 0x040;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_STRING_FLAG_MSTRING); }))) {
            mixin(enumMixinStr_ASN1_STRING_FLAG_MSTRING);
        }
    }




    static if(!is(typeof(ASN1_STRING_FLAG_CONT))) {
        private enum enumMixinStr_ASN1_STRING_FLAG_CONT = `enum ASN1_STRING_FLAG_CONT = 0x020;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_STRING_FLAG_CONT); }))) {
            mixin(enumMixinStr_ASN1_STRING_FLAG_CONT);
        }
    }




    static if(!is(typeof(ASN1_STRING_FLAG_NDEF))) {
        private enum enumMixinStr_ASN1_STRING_FLAG_NDEF = `enum ASN1_STRING_FLAG_NDEF = 0x010;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_STRING_FLAG_NDEF); }))) {
            mixin(enumMixinStr_ASN1_STRING_FLAG_NDEF);
        }
    }




    static if(!is(typeof(ASN1_STRING_FLAG_BITS_LEFT))) {
        private enum enumMixinStr_ASN1_STRING_FLAG_BITS_LEFT = `enum ASN1_STRING_FLAG_BITS_LEFT = 0x08;`;
        static if(is(typeof({ mixin(enumMixinStr_ASN1_STRING_FLAG_BITS_LEFT); }))) {
            mixin(enumMixinStr_ASN1_STRING_FLAG_BITS_LEFT);
        }
    }




    static if(!is(typeof(SMIME_STREAM))) {
        private enum enumMixinStr_SMIME_STREAM = `enum SMIME_STREAM = 0x1000;`;
        static if(is(typeof({ mixin(enumMixinStr_SMIME_STREAM); }))) {
            mixin(enumMixinStr_SMIME_STREAM);
        }
    }




    static if(!is(typeof(SMIME_CRLFEOL))) {
        private enum enumMixinStr_SMIME_CRLFEOL = `enum SMIME_CRLFEOL = 0x800;`;
        static if(is(typeof({ mixin(enumMixinStr_SMIME_CRLFEOL); }))) {
            mixin(enumMixinStr_SMIME_CRLFEOL);
        }
    }




    static if(!is(typeof(SMIME_OLDMIME))) {
        private enum enumMixinStr_SMIME_OLDMIME = `enum SMIME_OLDMIME = 0x400;`;
        static if(is(typeof({ mixin(enumMixinStr_SMIME_OLDMIME); }))) {
            mixin(enumMixinStr_SMIME_OLDMIME);
        }
    }




    static if(!is(typeof(MBSTRING_UNIV))) {
        private enum enumMixinStr_MBSTRING_UNIV = `enum MBSTRING_UNIV = ( MBSTRING_FLAG | 4 );`;
        static if(is(typeof({ mixin(enumMixinStr_MBSTRING_UNIV); }))) {
            mixin(enumMixinStr_MBSTRING_UNIV);
        }
    }




    static if(!is(typeof(MBSTRING_BMP))) {
        private enum enumMixinStr_MBSTRING_BMP = `enum MBSTRING_BMP = ( MBSTRING_FLAG | 2 );`;
        static if(is(typeof({ mixin(enumMixinStr_MBSTRING_BMP); }))) {
            mixin(enumMixinStr_MBSTRING_BMP);
        }
    }




    static if(!is(typeof(MBSTRING_ASC))) {
        private enum enumMixinStr_MBSTRING_ASC = `enum MBSTRING_ASC = ( MBSTRING_FLAG | 1 );`;
        static if(is(typeof({ mixin(enumMixinStr_MBSTRING_ASC); }))) {
            mixin(enumMixinStr_MBSTRING_ASC);
        }
    }




    static if(!is(typeof(MBSTRING_UTF8))) {
        private enum enumMixinStr_MBSTRING_UTF8 = `enum MBSTRING_UTF8 = ( MBSTRING_FLAG );`;
        static if(is(typeof({ mixin(enumMixinStr_MBSTRING_UTF8); }))) {
            mixin(enumMixinStr_MBSTRING_UTF8);
        }
    }




    static if(!is(typeof(MBSTRING_FLAG))) {
        private enum enumMixinStr_MBSTRING_FLAG = `enum MBSTRING_FLAG = 0x1000;`;
        static if(is(typeof({ mixin(enumMixinStr_MBSTRING_FLAG); }))) {
            mixin(enumMixinStr_MBSTRING_FLAG);
        }
    }




    static if(!is(typeof(B_ASN1_SEQUENCE))) {
        private enum enumMixinStr_B_ASN1_SEQUENCE = `enum B_ASN1_SEQUENCE = 0x10000;`;
        static if(is(typeof({ mixin(enumMixinStr_B_ASN1_SEQUENCE); }))) {
            mixin(enumMixinStr_B_ASN1_SEQUENCE);
        }
    }




    static if(!is(typeof(B_ASN1_GENERALIZEDTIME))) {
        private enum enumMixinStr_B_ASN1_GENERALIZEDTIME = `enum B_ASN1_GENERALIZEDTIME = 0x8000;`;
        static if(is(typeof({ mixin(enumMixinStr_B_ASN1_GENERALIZEDTIME); }))) {
            mixin(enumMixinStr_B_ASN1_GENERALIZEDTIME);
        }
    }




    static if(!is(typeof(B_ASN1_UTCTIME))) {
        private enum enumMixinStr_B_ASN1_UTCTIME = `enum B_ASN1_UTCTIME = 0x4000;`;
        static if(is(typeof({ mixin(enumMixinStr_B_ASN1_UTCTIME); }))) {
            mixin(enumMixinStr_B_ASN1_UTCTIME);
        }
    }




    static if(!is(typeof(B_ASN1_UTF8STRING))) {
        private enum enumMixinStr_B_ASN1_UTF8STRING = `enum B_ASN1_UTF8STRING = 0x2000;`;
        static if(is(typeof({ mixin(enumMixinStr_B_ASN1_UTF8STRING); }))) {
            mixin(enumMixinStr_B_ASN1_UTF8STRING);
        }
    }




    static if(!is(typeof(B_ASN1_UNKNOWN))) {
        private enum enumMixinStr_B_ASN1_UNKNOWN = `enum B_ASN1_UNKNOWN = 0x1000;`;
        static if(is(typeof({ mixin(enumMixinStr_B_ASN1_UNKNOWN); }))) {
            mixin(enumMixinStr_B_ASN1_UNKNOWN);
        }
    }




    static if(!is(typeof(B_ASN1_BMPSTRING))) {
        private enum enumMixinStr_B_ASN1_BMPSTRING = `enum B_ASN1_BMPSTRING = 0x0800;`;
        static if(is(typeof({ mixin(enumMixinStr_B_ASN1_BMPSTRING); }))) {
            mixin(enumMixinStr_B_ASN1_BMPSTRING);
        }
    }




    static if(!is(typeof(B_ASN1_BIT_STRING))) {
        private enum enumMixinStr_B_ASN1_BIT_STRING = `enum B_ASN1_BIT_STRING = 0x0400;`;
        static if(is(typeof({ mixin(enumMixinStr_B_ASN1_BIT_STRING); }))) {
            mixin(enumMixinStr_B_ASN1_BIT_STRING);
        }
    }




    static if(!is(typeof(B_ASN1_OCTET_STRING))) {
        private enum enumMixinStr_B_ASN1_OCTET_STRING = `enum B_ASN1_OCTET_STRING = 0x0200;`;
        static if(is(typeof({ mixin(enumMixinStr_B_ASN1_OCTET_STRING); }))) {
            mixin(enumMixinStr_B_ASN1_OCTET_STRING);
        }
    }




    static if(!is(typeof(B_ASN1_UNIVERSALSTRING))) {
        private enum enumMixinStr_B_ASN1_UNIVERSALSTRING = `enum B_ASN1_UNIVERSALSTRING = 0x0100;`;
        static if(is(typeof({ mixin(enumMixinStr_B_ASN1_UNIVERSALSTRING); }))) {
            mixin(enumMixinStr_B_ASN1_UNIVERSALSTRING);
        }
    }




    static if(!is(typeof(B_ASN1_GENERALSTRING))) {
        private enum enumMixinStr_B_ASN1_GENERALSTRING = `enum B_ASN1_GENERALSTRING = 0x0080;`;
        static if(is(typeof({ mixin(enumMixinStr_B_ASN1_GENERALSTRING); }))) {
            mixin(enumMixinStr_B_ASN1_GENERALSTRING);
        }
    }




    static if(!is(typeof(B_ASN1_VISIBLESTRING))) {
        private enum enumMixinStr_B_ASN1_VISIBLESTRING = `enum B_ASN1_VISIBLESTRING = 0x0040;`;
        static if(is(typeof({ mixin(enumMixinStr_B_ASN1_VISIBLESTRING); }))) {
            mixin(enumMixinStr_B_ASN1_VISIBLESTRING);
        }
    }




    static if(!is(typeof(B_ASN1_ISO64STRING))) {
        private enum enumMixinStr_B_ASN1_ISO64STRING = `enum B_ASN1_ISO64STRING = 0x0040;`;
        static if(is(typeof({ mixin(enumMixinStr_B_ASN1_ISO64STRING); }))) {
            mixin(enumMixinStr_B_ASN1_ISO64STRING);
        }
    }




    static if(!is(typeof(B_ASN1_GRAPHICSTRING))) {
        private enum enumMixinStr_B_ASN1_GRAPHICSTRING = `enum B_ASN1_GRAPHICSTRING = 0x0020;`;
        static if(is(typeof({ mixin(enumMixinStr_B_ASN1_GRAPHICSTRING); }))) {
            mixin(enumMixinStr_B_ASN1_GRAPHICSTRING);
        }
    }




    static if(!is(typeof(B_ASN1_IA5STRING))) {
        private enum enumMixinStr_B_ASN1_IA5STRING = `enum B_ASN1_IA5STRING = 0x0010;`;
        static if(is(typeof({ mixin(enumMixinStr_B_ASN1_IA5STRING); }))) {
            mixin(enumMixinStr_B_ASN1_IA5STRING);
        }
    }




    static if(!is(typeof(B_ASN1_VIDEOTEXSTRING))) {
        private enum enumMixinStr_B_ASN1_VIDEOTEXSTRING = `enum B_ASN1_VIDEOTEXSTRING = 0x0008;`;
        static if(is(typeof({ mixin(enumMixinStr_B_ASN1_VIDEOTEXSTRING); }))) {
            mixin(enumMixinStr_B_ASN1_VIDEOTEXSTRING);
        }
    }




    static if(!is(typeof(B_ASN1_TELETEXSTRING))) {
        private enum enumMixinStr_B_ASN1_TELETEXSTRING = `enum B_ASN1_TELETEXSTRING = 0x0004;`;
        static if(is(typeof({ mixin(enumMixinStr_B_ASN1_TELETEXSTRING); }))) {
            mixin(enumMixinStr_B_ASN1_TELETEXSTRING);
        }
    }




    static if(!is(typeof(B_ASN1_T61STRING))) {
        private enum enumMixinStr_B_ASN1_T61STRING = `enum B_ASN1_T61STRING = 0x0004;`;
        static if(is(typeof({ mixin(enumMixinStr_B_ASN1_T61STRING); }))) {
            mixin(enumMixinStr_B_ASN1_T61STRING);
        }
    }




    static if(!is(typeof(B_ASN1_PRINTABLESTRING))) {
        private enum enumMixinStr_B_ASN1_PRINTABLESTRING = `enum B_ASN1_PRINTABLESTRING = 0x0002;`;
        static if(is(typeof({ mixin(enumMixinStr_B_ASN1_PRINTABLESTRING); }))) {
            mixin(enumMixinStr_B_ASN1_PRINTABLESTRING);
        }
    }




    static if(!is(typeof(B_ASN1_NUMERICSTRING))) {
        private enum enumMixinStr_B_ASN1_NUMERICSTRING = `enum B_ASN1_NUMERICSTRING = 0x0001;`;
        static if(is(typeof({ mixin(enumMixinStr_B_ASN1_NUMERICSTRING); }))) {
            mixin(enumMixinStr_B_ASN1_NUMERICSTRING);
        }
    }




    static if(!is(typeof(V_ASN1_NEG_ENUMERATED))) {
        private enum enumMixinStr_V_ASN1_NEG_ENUMERATED = `enum V_ASN1_NEG_ENUMERATED = ( 10 | V_ASN1_NEG );`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_NEG_ENUMERATED); }))) {
            mixin(enumMixinStr_V_ASN1_NEG_ENUMERATED);
        }
    }




    static if(!is(typeof(V_ASN1_NEG_INTEGER))) {
        private enum enumMixinStr_V_ASN1_NEG_INTEGER = `enum V_ASN1_NEG_INTEGER = ( 2 | V_ASN1_NEG );`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_NEG_INTEGER); }))) {
            mixin(enumMixinStr_V_ASN1_NEG_INTEGER);
        }
    }




    static if(!is(typeof(V_ASN1_NEG))) {
        private enum enumMixinStr_V_ASN1_NEG = `enum V_ASN1_NEG = 0x100;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_NEG); }))) {
            mixin(enumMixinStr_V_ASN1_NEG);
        }
    }




    static if(!is(typeof(V_ASN1_BMPSTRING))) {
        private enum enumMixinStr_V_ASN1_BMPSTRING = `enum V_ASN1_BMPSTRING = 30;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_BMPSTRING); }))) {
            mixin(enumMixinStr_V_ASN1_BMPSTRING);
        }
    }




    static if(!is(typeof(V_ASN1_UNIVERSALSTRING))) {
        private enum enumMixinStr_V_ASN1_UNIVERSALSTRING = `enum V_ASN1_UNIVERSALSTRING = 28;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_UNIVERSALSTRING); }))) {
            mixin(enumMixinStr_V_ASN1_UNIVERSALSTRING);
        }
    }




    static if(!is(typeof(V_ASN1_GENERALSTRING))) {
        private enum enumMixinStr_V_ASN1_GENERALSTRING = `enum V_ASN1_GENERALSTRING = 27;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_GENERALSTRING); }))) {
            mixin(enumMixinStr_V_ASN1_GENERALSTRING);
        }
    }




    static if(!is(typeof(V_ASN1_VISIBLESTRING))) {
        private enum enumMixinStr_V_ASN1_VISIBLESTRING = `enum V_ASN1_VISIBLESTRING = 26;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_VISIBLESTRING); }))) {
            mixin(enumMixinStr_V_ASN1_VISIBLESTRING);
        }
    }




    static if(!is(typeof(V_ASN1_ISO64STRING))) {
        private enum enumMixinStr_V_ASN1_ISO64STRING = `enum V_ASN1_ISO64STRING = 26;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_ISO64STRING); }))) {
            mixin(enumMixinStr_V_ASN1_ISO64STRING);
        }
    }




    static if(!is(typeof(V_ASN1_GRAPHICSTRING))) {
        private enum enumMixinStr_V_ASN1_GRAPHICSTRING = `enum V_ASN1_GRAPHICSTRING = 25;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_GRAPHICSTRING); }))) {
            mixin(enumMixinStr_V_ASN1_GRAPHICSTRING);
        }
    }




    static if(!is(typeof(V_ASN1_GENERALIZEDTIME))) {
        private enum enumMixinStr_V_ASN1_GENERALIZEDTIME = `enum V_ASN1_GENERALIZEDTIME = 24;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_GENERALIZEDTIME); }))) {
            mixin(enumMixinStr_V_ASN1_GENERALIZEDTIME);
        }
    }




    static if(!is(typeof(V_ASN1_UTCTIME))) {
        private enum enumMixinStr_V_ASN1_UTCTIME = `enum V_ASN1_UTCTIME = 23;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_UTCTIME); }))) {
            mixin(enumMixinStr_V_ASN1_UTCTIME);
        }
    }




    static if(!is(typeof(V_ASN1_IA5STRING))) {
        private enum enumMixinStr_V_ASN1_IA5STRING = `enum V_ASN1_IA5STRING = 22;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_IA5STRING); }))) {
            mixin(enumMixinStr_V_ASN1_IA5STRING);
        }
    }




    static if(!is(typeof(V_ASN1_VIDEOTEXSTRING))) {
        private enum enumMixinStr_V_ASN1_VIDEOTEXSTRING = `enum V_ASN1_VIDEOTEXSTRING = 21;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_VIDEOTEXSTRING); }))) {
            mixin(enumMixinStr_V_ASN1_VIDEOTEXSTRING);
        }
    }




    static if(!is(typeof(V_ASN1_TELETEXSTRING))) {
        private enum enumMixinStr_V_ASN1_TELETEXSTRING = `enum V_ASN1_TELETEXSTRING = 20;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_TELETEXSTRING); }))) {
            mixin(enumMixinStr_V_ASN1_TELETEXSTRING);
        }
    }




    static if(!is(typeof(V_ASN1_T61STRING))) {
        private enum enumMixinStr_V_ASN1_T61STRING = `enum V_ASN1_T61STRING = 20;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_T61STRING); }))) {
            mixin(enumMixinStr_V_ASN1_T61STRING);
        }
    }




    static if(!is(typeof(V_ASN1_PRINTABLESTRING))) {
        private enum enumMixinStr_V_ASN1_PRINTABLESTRING = `enum V_ASN1_PRINTABLESTRING = 19;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_PRINTABLESTRING); }))) {
            mixin(enumMixinStr_V_ASN1_PRINTABLESTRING);
        }
    }




    static if(!is(typeof(V_ASN1_NUMERICSTRING))) {
        private enum enumMixinStr_V_ASN1_NUMERICSTRING = `enum V_ASN1_NUMERICSTRING = 18;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_NUMERICSTRING); }))) {
            mixin(enumMixinStr_V_ASN1_NUMERICSTRING);
        }
    }




    static if(!is(typeof(V_ASN1_SET))) {
        private enum enumMixinStr_V_ASN1_SET = `enum V_ASN1_SET = 17;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_SET); }))) {
            mixin(enumMixinStr_V_ASN1_SET);
        }
    }




    static if(!is(typeof(V_ASN1_SEQUENCE))) {
        private enum enumMixinStr_V_ASN1_SEQUENCE = `enum V_ASN1_SEQUENCE = 16;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_SEQUENCE); }))) {
            mixin(enumMixinStr_V_ASN1_SEQUENCE);
        }
    }




    static if(!is(typeof(V_ASN1_UTF8STRING))) {
        private enum enumMixinStr_V_ASN1_UTF8STRING = `enum V_ASN1_UTF8STRING = 12;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_UTF8STRING); }))) {
            mixin(enumMixinStr_V_ASN1_UTF8STRING);
        }
    }




    static if(!is(typeof(V_ASN1_ENUMERATED))) {
        private enum enumMixinStr_V_ASN1_ENUMERATED = `enum V_ASN1_ENUMERATED = 10;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_ENUMERATED); }))) {
            mixin(enumMixinStr_V_ASN1_ENUMERATED);
        }
    }




    static if(!is(typeof(V_ASN1_REAL))) {
        private enum enumMixinStr_V_ASN1_REAL = `enum V_ASN1_REAL = 9;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_REAL); }))) {
            mixin(enumMixinStr_V_ASN1_REAL);
        }
    }




    static if(!is(typeof(V_ASN1_EXTERNAL))) {
        private enum enumMixinStr_V_ASN1_EXTERNAL = `enum V_ASN1_EXTERNAL = 8;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_EXTERNAL); }))) {
            mixin(enumMixinStr_V_ASN1_EXTERNAL);
        }
    }




    static if(!is(typeof(V_ASN1_OBJECT_DESCRIPTOR))) {
        private enum enumMixinStr_V_ASN1_OBJECT_DESCRIPTOR = `enum V_ASN1_OBJECT_DESCRIPTOR = 7;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_OBJECT_DESCRIPTOR); }))) {
            mixin(enumMixinStr_V_ASN1_OBJECT_DESCRIPTOR);
        }
    }




    static if(!is(typeof(V_ASN1_OBJECT))) {
        private enum enumMixinStr_V_ASN1_OBJECT = `enum V_ASN1_OBJECT = 6;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_OBJECT); }))) {
            mixin(enumMixinStr_V_ASN1_OBJECT);
        }
    }




    static if(!is(typeof(V_ASN1_NULL))) {
        private enum enumMixinStr_V_ASN1_NULL = `enum V_ASN1_NULL = 5;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_NULL); }))) {
            mixin(enumMixinStr_V_ASN1_NULL);
        }
    }




    static if(!is(typeof(V_ASN1_OCTET_STRING))) {
        private enum enumMixinStr_V_ASN1_OCTET_STRING = `enum V_ASN1_OCTET_STRING = 4;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_OCTET_STRING); }))) {
            mixin(enumMixinStr_V_ASN1_OCTET_STRING);
        }
    }




    static if(!is(typeof(V_ASN1_BIT_STRING))) {
        private enum enumMixinStr_V_ASN1_BIT_STRING = `enum V_ASN1_BIT_STRING = 3;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_BIT_STRING); }))) {
            mixin(enumMixinStr_V_ASN1_BIT_STRING);
        }
    }




    static if(!is(typeof(V_ASN1_INTEGER))) {
        private enum enumMixinStr_V_ASN1_INTEGER = `enum V_ASN1_INTEGER = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_INTEGER); }))) {
            mixin(enumMixinStr_V_ASN1_INTEGER);
        }
    }




    static if(!is(typeof(V_ASN1_BOOLEAN))) {
        private enum enumMixinStr_V_ASN1_BOOLEAN = `enum V_ASN1_BOOLEAN = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_BOOLEAN); }))) {
            mixin(enumMixinStr_V_ASN1_BOOLEAN);
        }
    }




    static if(!is(typeof(V_ASN1_EOC))) {
        private enum enumMixinStr_V_ASN1_EOC = `enum V_ASN1_EOC = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_EOC); }))) {
            mixin(enumMixinStr_V_ASN1_EOC);
        }
    }




    static if(!is(typeof(V_ASN1_UNDEF))) {
        private enum enumMixinStr_V_ASN1_UNDEF = `enum V_ASN1_UNDEF = - 1;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_UNDEF); }))) {
            mixin(enumMixinStr_V_ASN1_UNDEF);
        }
    }




    static if(!is(typeof(V_ASN1_ANY))) {
        private enum enumMixinStr_V_ASN1_ANY = `enum V_ASN1_ANY = - 4;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_ANY); }))) {
            mixin(enumMixinStr_V_ASN1_ANY);
        }
    }




    static if(!is(typeof(V_ASN1_OTHER))) {
        private enum enumMixinStr_V_ASN1_OTHER = `enum V_ASN1_OTHER = - 3;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_OTHER); }))) {
            mixin(enumMixinStr_V_ASN1_OTHER);
        }
    }




    static if(!is(typeof(V_ASN1_APP_CHOOSE))) {
        private enum enumMixinStr_V_ASN1_APP_CHOOSE = `enum V_ASN1_APP_CHOOSE = - 2;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_APP_CHOOSE); }))) {
            mixin(enumMixinStr_V_ASN1_APP_CHOOSE);
        }
    }




    static if(!is(typeof(V_ASN1_PRIMATIVE_TAG))) {
        private enum enumMixinStr_V_ASN1_PRIMATIVE_TAG = `enum V_ASN1_PRIMATIVE_TAG = V_ASN1_PRIMITIVE_TAG;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_PRIMATIVE_TAG); }))) {
            mixin(enumMixinStr_V_ASN1_PRIMATIVE_TAG);
        }
    }




    static if(!is(typeof(V_ASN1_PRIMITIVE_TAG))) {
        private enum enumMixinStr_V_ASN1_PRIMITIVE_TAG = `enum V_ASN1_PRIMITIVE_TAG = 0x1f;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_PRIMITIVE_TAG); }))) {
            mixin(enumMixinStr_V_ASN1_PRIMITIVE_TAG);
        }
    }




    static if(!is(typeof(V_ASN1_CONSTRUCTED))) {
        private enum enumMixinStr_V_ASN1_CONSTRUCTED = `enum V_ASN1_CONSTRUCTED = 0x20;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_CONSTRUCTED); }))) {
            mixin(enumMixinStr_V_ASN1_CONSTRUCTED);
        }
    }




    static if(!is(typeof(V_ASN1_PRIVATE))) {
        private enum enumMixinStr_V_ASN1_PRIVATE = `enum V_ASN1_PRIVATE = 0xc0;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_PRIVATE); }))) {
            mixin(enumMixinStr_V_ASN1_PRIVATE);
        }
    }




    static if(!is(typeof(V_ASN1_CONTEXT_SPECIFIC))) {
        private enum enumMixinStr_V_ASN1_CONTEXT_SPECIFIC = `enum V_ASN1_CONTEXT_SPECIFIC = 0x80;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_CONTEXT_SPECIFIC); }))) {
            mixin(enumMixinStr_V_ASN1_CONTEXT_SPECIFIC);
        }
    }




    static if(!is(typeof(V_ASN1_APPLICATION))) {
        private enum enumMixinStr_V_ASN1_APPLICATION = `enum V_ASN1_APPLICATION = 0x40;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_APPLICATION); }))) {
            mixin(enumMixinStr_V_ASN1_APPLICATION);
        }
    }




    static if(!is(typeof(V_ASN1_UNIVERSAL))) {
        private enum enumMixinStr_V_ASN1_UNIVERSAL = `enum V_ASN1_UNIVERSAL = 0x00;`;
        static if(is(typeof({ mixin(enumMixinStr_V_ASN1_UNIVERSAL); }))) {
            mixin(enumMixinStr_V_ASN1_UNIVERSAL);
        }
    }






    static if(!is(typeof(RTSIG_MAX))) {
        private enum enumMixinStr_RTSIG_MAX = `enum RTSIG_MAX = 32;`;
        static if(is(typeof({ mixin(enumMixinStr_RTSIG_MAX); }))) {
            mixin(enumMixinStr_RTSIG_MAX);
        }
    }




    static if(!is(typeof(XATTR_LIST_MAX))) {
        private enum enumMixinStr_XATTR_LIST_MAX = `enum XATTR_LIST_MAX = 65536;`;
        static if(is(typeof({ mixin(enumMixinStr_XATTR_LIST_MAX); }))) {
            mixin(enumMixinStr_XATTR_LIST_MAX);
        }
    }




    static if(!is(typeof(XATTR_SIZE_MAX))) {
        private enum enumMixinStr_XATTR_SIZE_MAX = `enum XATTR_SIZE_MAX = 65536;`;
        static if(is(typeof({ mixin(enumMixinStr_XATTR_SIZE_MAX); }))) {
            mixin(enumMixinStr_XATTR_SIZE_MAX);
        }
    }




    static if(!is(typeof(XATTR_NAME_MAX))) {
        private enum enumMixinStr_XATTR_NAME_MAX = `enum XATTR_NAME_MAX = 255;`;
        static if(is(typeof({ mixin(enumMixinStr_XATTR_NAME_MAX); }))) {
            mixin(enumMixinStr_XATTR_NAME_MAX);
        }
    }




    static if(!is(typeof(PIPE_BUF))) {
        private enum enumMixinStr_PIPE_BUF = `enum PIPE_BUF = 4096;`;
        static if(is(typeof({ mixin(enumMixinStr_PIPE_BUF); }))) {
            mixin(enumMixinStr_PIPE_BUF);
        }
    }




    static if(!is(typeof(PATH_MAX))) {
        private enum enumMixinStr_PATH_MAX = `enum PATH_MAX = 4096;`;
        static if(is(typeof({ mixin(enumMixinStr_PATH_MAX); }))) {
            mixin(enumMixinStr_PATH_MAX);
        }
    }




    static if(!is(typeof(NAME_MAX))) {
        private enum enumMixinStr_NAME_MAX = `enum NAME_MAX = 255;`;
        static if(is(typeof({ mixin(enumMixinStr_NAME_MAX); }))) {
            mixin(enumMixinStr_NAME_MAX);
        }
    }




    static if(!is(typeof(MAX_INPUT))) {
        private enum enumMixinStr_MAX_INPUT = `enum MAX_INPUT = 255;`;
        static if(is(typeof({ mixin(enumMixinStr_MAX_INPUT); }))) {
            mixin(enumMixinStr_MAX_INPUT);
        }
    }




    static if(!is(typeof(MAX_CANON))) {
        private enum enumMixinStr_MAX_CANON = `enum MAX_CANON = 255;`;
        static if(is(typeof({ mixin(enumMixinStr_MAX_CANON); }))) {
            mixin(enumMixinStr_MAX_CANON);
        }
    }




    static if(!is(typeof(LINK_MAX))) {
        private enum enumMixinStr_LINK_MAX = `enum LINK_MAX = 127;`;
        static if(is(typeof({ mixin(enumMixinStr_LINK_MAX); }))) {
            mixin(enumMixinStr_LINK_MAX);
        }
    }




    static if(!is(typeof(ARG_MAX))) {
        private enum enumMixinStr_ARG_MAX = `enum ARG_MAX = 131072;`;
        static if(is(typeof({ mixin(enumMixinStr_ARG_MAX); }))) {
            mixin(enumMixinStr_ARG_MAX);
        }
    }




    static if(!is(typeof(NGROUPS_MAX))) {
        private enum enumMixinStr_NGROUPS_MAX = `enum NGROUPS_MAX = 65536;`;
        static if(is(typeof({ mixin(enumMixinStr_NGROUPS_MAX); }))) {
            mixin(enumMixinStr_NGROUPS_MAX);
        }
    }




    static if(!is(typeof(NR_OPEN))) {
        private enum enumMixinStr_NR_OPEN = `enum NR_OPEN = 1024;`;
        static if(is(typeof({ mixin(enumMixinStr_NR_OPEN); }))) {
            mixin(enumMixinStr_NR_OPEN);
        }
    }






    static if(!is(typeof(ULLONG_MAX))) {
        private enum enumMixinStr_ULLONG_MAX = `enum ULLONG_MAX = ( LLONG_MAX * 2ULL + 1 );`;
        static if(is(typeof({ mixin(enumMixinStr_ULLONG_MAX); }))) {
            mixin(enumMixinStr_ULLONG_MAX);
        }
    }




    static if(!is(typeof(LLONG_MAX))) {
        private enum enumMixinStr_LLONG_MAX = `enum LLONG_MAX = 0x7fffffffffffffffLL;`;
        static if(is(typeof({ mixin(enumMixinStr_LLONG_MAX); }))) {
            mixin(enumMixinStr_LLONG_MAX);
        }
    }




    static if(!is(typeof(LLONG_MIN))) {
        private enum enumMixinStr_LLONG_MIN = `enum LLONG_MIN = ( - 0x7fffffffffffffffLL - 1 );`;
        static if(is(typeof({ mixin(enumMixinStr_LLONG_MIN); }))) {
            mixin(enumMixinStr_LLONG_MIN);
        }
    }




    static if(!is(typeof(MB_LEN_MAX))) {
        private enum enumMixinStr_MB_LEN_MAX = `enum MB_LEN_MAX = 16;`;
        static if(is(typeof({ mixin(enumMixinStr_MB_LEN_MAX); }))) {
            mixin(enumMixinStr_MB_LEN_MAX);
        }
    }






    static if(!is(typeof(_LIBC_LIMITS_H_))) {
        private enum enumMixinStr__LIBC_LIMITS_H_ = `enum _LIBC_LIMITS_H_ = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__LIBC_LIMITS_H_); }))) {
            mixin(enumMixinStr__LIBC_LIMITS_H_);
        }
    }




    static if(!is(typeof(SCNxPTR))) {
        private enum enumMixinStr_SCNxPTR = `enum SCNxPTR = __PRIPTR_PREFIX "x";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNxPTR); }))) {
            mixin(enumMixinStr_SCNxPTR);
        }
    }




    static if(!is(typeof(SCNuPTR))) {
        private enum enumMixinStr_SCNuPTR = `enum SCNuPTR = __PRIPTR_PREFIX "u";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNuPTR); }))) {
            mixin(enumMixinStr_SCNuPTR);
        }
    }




    static if(!is(typeof(SCNoPTR))) {
        private enum enumMixinStr_SCNoPTR = `enum SCNoPTR = __PRIPTR_PREFIX "o";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNoPTR); }))) {
            mixin(enumMixinStr_SCNoPTR);
        }
    }




    static if(!is(typeof(SCNiPTR))) {
        private enum enumMixinStr_SCNiPTR = `enum SCNiPTR = __PRIPTR_PREFIX "i";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNiPTR); }))) {
            mixin(enumMixinStr_SCNiPTR);
        }
    }




    static if(!is(typeof(SCNdPTR))) {
        private enum enumMixinStr_SCNdPTR = `enum SCNdPTR = __PRIPTR_PREFIX "d";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNdPTR); }))) {
            mixin(enumMixinStr_SCNdPTR);
        }
    }




    static if(!is(typeof(SCNxMAX))) {
        private enum enumMixinStr_SCNxMAX = `enum SCNxMAX = __PRI64_PREFIX "x";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNxMAX); }))) {
            mixin(enumMixinStr_SCNxMAX);
        }
    }




    static if(!is(typeof(SCNuMAX))) {
        private enum enumMixinStr_SCNuMAX = `enum SCNuMAX = __PRI64_PREFIX "u";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNuMAX); }))) {
            mixin(enumMixinStr_SCNuMAX);
        }
    }




    static if(!is(typeof(SCNoMAX))) {
        private enum enumMixinStr_SCNoMAX = `enum SCNoMAX = __PRI64_PREFIX "o";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNoMAX); }))) {
            mixin(enumMixinStr_SCNoMAX);
        }
    }




    static if(!is(typeof(SCNiMAX))) {
        private enum enumMixinStr_SCNiMAX = `enum SCNiMAX = __PRI64_PREFIX "i";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNiMAX); }))) {
            mixin(enumMixinStr_SCNiMAX);
        }
    }




    static if(!is(typeof(SCNdMAX))) {
        private enum enumMixinStr_SCNdMAX = `enum SCNdMAX = __PRI64_PREFIX "d";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNdMAX); }))) {
            mixin(enumMixinStr_SCNdMAX);
        }
    }




    static if(!is(typeof(SCNxFAST64))) {
        private enum enumMixinStr_SCNxFAST64 = `enum SCNxFAST64 = __PRI64_PREFIX "x";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNxFAST64); }))) {
            mixin(enumMixinStr_SCNxFAST64);
        }
    }




    static if(!is(typeof(SCNxFAST32))) {
        private enum enumMixinStr_SCNxFAST32 = `enum SCNxFAST32 = __PRIPTR_PREFIX "x";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNxFAST32); }))) {
            mixin(enumMixinStr_SCNxFAST32);
        }
    }




    static if(!is(typeof(SCNxFAST16))) {
        private enum enumMixinStr_SCNxFAST16 = `enum SCNxFAST16 = __PRIPTR_PREFIX "x";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNxFAST16); }))) {
            mixin(enumMixinStr_SCNxFAST16);
        }
    }




    static if(!is(typeof(SCNxFAST8))) {
        private enum enumMixinStr_SCNxFAST8 = `enum SCNxFAST8 = "hhx";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNxFAST8); }))) {
            mixin(enumMixinStr_SCNxFAST8);
        }
    }




    static if(!is(typeof(SCNxLEAST64))) {
        private enum enumMixinStr_SCNxLEAST64 = `enum SCNxLEAST64 = __PRI64_PREFIX "x";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNxLEAST64); }))) {
            mixin(enumMixinStr_SCNxLEAST64);
        }
    }




    static if(!is(typeof(SCNxLEAST32))) {
        private enum enumMixinStr_SCNxLEAST32 = `enum SCNxLEAST32 = "x";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNxLEAST32); }))) {
            mixin(enumMixinStr_SCNxLEAST32);
        }
    }




    static if(!is(typeof(SCNxLEAST16))) {
        private enum enumMixinStr_SCNxLEAST16 = `enum SCNxLEAST16 = "hx";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNxLEAST16); }))) {
            mixin(enumMixinStr_SCNxLEAST16);
        }
    }




    static if(!is(typeof(SCNxLEAST8))) {
        private enum enumMixinStr_SCNxLEAST8 = `enum SCNxLEAST8 = "hhx";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNxLEAST8); }))) {
            mixin(enumMixinStr_SCNxLEAST8);
        }
    }




    static if(!is(typeof(SCNx64))) {
        private enum enumMixinStr_SCNx64 = `enum SCNx64 = __PRI64_PREFIX "x";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNx64); }))) {
            mixin(enumMixinStr_SCNx64);
        }
    }




    static if(!is(typeof(SCNx32))) {
        private enum enumMixinStr_SCNx32 = `enum SCNx32 = "x";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNx32); }))) {
            mixin(enumMixinStr_SCNx32);
        }
    }




    static if(!is(typeof(SCNx16))) {
        private enum enumMixinStr_SCNx16 = `enum SCNx16 = "hx";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNx16); }))) {
            mixin(enumMixinStr_SCNx16);
        }
    }




    static if(!is(typeof(SCNx8))) {
        private enum enumMixinStr_SCNx8 = `enum SCNx8 = "hhx";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNx8); }))) {
            mixin(enumMixinStr_SCNx8);
        }
    }




    static if(!is(typeof(SCNoFAST64))) {
        private enum enumMixinStr_SCNoFAST64 = `enum SCNoFAST64 = __PRI64_PREFIX "o";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNoFAST64); }))) {
            mixin(enumMixinStr_SCNoFAST64);
        }
    }




    static if(!is(typeof(SCNoFAST32))) {
        private enum enumMixinStr_SCNoFAST32 = `enum SCNoFAST32 = __PRIPTR_PREFIX "o";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNoFAST32); }))) {
            mixin(enumMixinStr_SCNoFAST32);
        }
    }




    static if(!is(typeof(SCNoFAST16))) {
        private enum enumMixinStr_SCNoFAST16 = `enum SCNoFAST16 = __PRIPTR_PREFIX "o";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNoFAST16); }))) {
            mixin(enumMixinStr_SCNoFAST16);
        }
    }




    static if(!is(typeof(SCNoFAST8))) {
        private enum enumMixinStr_SCNoFAST8 = `enum SCNoFAST8 = "hho";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNoFAST8); }))) {
            mixin(enumMixinStr_SCNoFAST8);
        }
    }




    static if(!is(typeof(SCNoLEAST64))) {
        private enum enumMixinStr_SCNoLEAST64 = `enum SCNoLEAST64 = __PRI64_PREFIX "o";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNoLEAST64); }))) {
            mixin(enumMixinStr_SCNoLEAST64);
        }
    }




    static if(!is(typeof(SCNoLEAST32))) {
        private enum enumMixinStr_SCNoLEAST32 = `enum SCNoLEAST32 = "o";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNoLEAST32); }))) {
            mixin(enumMixinStr_SCNoLEAST32);
        }
    }




    static if(!is(typeof(SCNoLEAST16))) {
        private enum enumMixinStr_SCNoLEAST16 = `enum SCNoLEAST16 = "ho";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNoLEAST16); }))) {
            mixin(enumMixinStr_SCNoLEAST16);
        }
    }




    static if(!is(typeof(SCNoLEAST8))) {
        private enum enumMixinStr_SCNoLEAST8 = `enum SCNoLEAST8 = "hho";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNoLEAST8); }))) {
            mixin(enumMixinStr_SCNoLEAST8);
        }
    }




    static if(!is(typeof(SCNo64))) {
        private enum enumMixinStr_SCNo64 = `enum SCNo64 = __PRI64_PREFIX "o";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNo64); }))) {
            mixin(enumMixinStr_SCNo64);
        }
    }




    static if(!is(typeof(SCNo32))) {
        private enum enumMixinStr_SCNo32 = `enum SCNo32 = "o";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNo32); }))) {
            mixin(enumMixinStr_SCNo32);
        }
    }




    static if(!is(typeof(SCNo16))) {
        private enum enumMixinStr_SCNo16 = `enum SCNo16 = "ho";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNo16); }))) {
            mixin(enumMixinStr_SCNo16);
        }
    }




    static if(!is(typeof(SCNo8))) {
        private enum enumMixinStr_SCNo8 = `enum SCNo8 = "hho";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNo8); }))) {
            mixin(enumMixinStr_SCNo8);
        }
    }




    static if(!is(typeof(SCNuFAST64))) {
        private enum enumMixinStr_SCNuFAST64 = `enum SCNuFAST64 = __PRI64_PREFIX "u";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNuFAST64); }))) {
            mixin(enumMixinStr_SCNuFAST64);
        }
    }




    static if(!is(typeof(SCNuFAST32))) {
        private enum enumMixinStr_SCNuFAST32 = `enum SCNuFAST32 = __PRIPTR_PREFIX "u";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNuFAST32); }))) {
            mixin(enumMixinStr_SCNuFAST32);
        }
    }




    static if(!is(typeof(SCNuFAST16))) {
        private enum enumMixinStr_SCNuFAST16 = `enum SCNuFAST16 = __PRIPTR_PREFIX "u";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNuFAST16); }))) {
            mixin(enumMixinStr_SCNuFAST16);
        }
    }




    static if(!is(typeof(SCNuFAST8))) {
        private enum enumMixinStr_SCNuFAST8 = `enum SCNuFAST8 = "hhu";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNuFAST8); }))) {
            mixin(enumMixinStr_SCNuFAST8);
        }
    }




    static if(!is(typeof(SCNuLEAST64))) {
        private enum enumMixinStr_SCNuLEAST64 = `enum SCNuLEAST64 = __PRI64_PREFIX "u";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNuLEAST64); }))) {
            mixin(enumMixinStr_SCNuLEAST64);
        }
    }




    static if(!is(typeof(SCNuLEAST32))) {
        private enum enumMixinStr_SCNuLEAST32 = `enum SCNuLEAST32 = "u";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNuLEAST32); }))) {
            mixin(enumMixinStr_SCNuLEAST32);
        }
    }




    static if(!is(typeof(_SCHED_H))) {
        private enum enumMixinStr__SCHED_H = `enum _SCHED_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__SCHED_H); }))) {
            mixin(enumMixinStr__SCHED_H);
        }
    }




    static if(!is(typeof(SCNuLEAST16))) {
        private enum enumMixinStr_SCNuLEAST16 = `enum SCNuLEAST16 = "hu";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNuLEAST16); }))) {
            mixin(enumMixinStr_SCNuLEAST16);
        }
    }




    static if(!is(typeof(SCNuLEAST8))) {
        private enum enumMixinStr_SCNuLEAST8 = `enum SCNuLEAST8 = "hhu";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNuLEAST8); }))) {
            mixin(enumMixinStr_SCNuLEAST8);
        }
    }
    static if(!is(typeof(SCNu64))) {
        private enum enumMixinStr_SCNu64 = `enum SCNu64 = __PRI64_PREFIX "u";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNu64); }))) {
            mixin(enumMixinStr_SCNu64);
        }
    }




    static if(!is(typeof(SCNu32))) {
        private enum enumMixinStr_SCNu32 = `enum SCNu32 = "u";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNu32); }))) {
            mixin(enumMixinStr_SCNu32);
        }
    }




    static if(!is(typeof(SCNu16))) {
        private enum enumMixinStr_SCNu16 = `enum SCNu16 = "hu";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNu16); }))) {
            mixin(enumMixinStr_SCNu16);
        }
    }




    static if(!is(typeof(SCNu8))) {
        private enum enumMixinStr_SCNu8 = `enum SCNu8 = "hhu";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNu8); }))) {
            mixin(enumMixinStr_SCNu8);
        }
    }




    static if(!is(typeof(SCNiFAST64))) {
        private enum enumMixinStr_SCNiFAST64 = `enum SCNiFAST64 = __PRI64_PREFIX "i";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNiFAST64); }))) {
            mixin(enumMixinStr_SCNiFAST64);
        }
    }




    static if(!is(typeof(SCNiFAST32))) {
        private enum enumMixinStr_SCNiFAST32 = `enum SCNiFAST32 = __PRIPTR_PREFIX "i";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNiFAST32); }))) {
            mixin(enumMixinStr_SCNiFAST32);
        }
    }




    static if(!is(typeof(SCNiFAST16))) {
        private enum enumMixinStr_SCNiFAST16 = `enum SCNiFAST16 = __PRIPTR_PREFIX "i";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNiFAST16); }))) {
            mixin(enumMixinStr_SCNiFAST16);
        }
    }




    static if(!is(typeof(sched_priority))) {
        private enum enumMixinStr_sched_priority = `enum sched_priority = sched_priority;`;
        static if(is(typeof({ mixin(enumMixinStr_sched_priority); }))) {
            mixin(enumMixinStr_sched_priority);
        }
    }




    static if(!is(typeof(__sched_priority))) {
        private enum enumMixinStr___sched_priority = `enum __sched_priority = sched_priority;`;
        static if(is(typeof({ mixin(enumMixinStr___sched_priority); }))) {
            mixin(enumMixinStr___sched_priority);
        }
    }




    static if(!is(typeof(SCNiFAST8))) {
        private enum enumMixinStr_SCNiFAST8 = `enum SCNiFAST8 = "hhi";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNiFAST8); }))) {
            mixin(enumMixinStr_SCNiFAST8);
        }
    }




    static if(!is(typeof(SCNiLEAST64))) {
        private enum enumMixinStr_SCNiLEAST64 = `enum SCNiLEAST64 = __PRI64_PREFIX "i";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNiLEAST64); }))) {
            mixin(enumMixinStr_SCNiLEAST64);
        }
    }




    static if(!is(typeof(SCNiLEAST32))) {
        private enum enumMixinStr_SCNiLEAST32 = `enum SCNiLEAST32 = "i";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNiLEAST32); }))) {
            mixin(enumMixinStr_SCNiLEAST32);
        }
    }




    static if(!is(typeof(SCNiLEAST16))) {
        private enum enumMixinStr_SCNiLEAST16 = `enum SCNiLEAST16 = "hi";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNiLEAST16); }))) {
            mixin(enumMixinStr_SCNiLEAST16);
        }
    }




    static if(!is(typeof(SCNiLEAST8))) {
        private enum enumMixinStr_SCNiLEAST8 = `enum SCNiLEAST8 = "hhi";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNiLEAST8); }))) {
            mixin(enumMixinStr_SCNiLEAST8);
        }
    }




    static if(!is(typeof(SCNi64))) {
        private enum enumMixinStr_SCNi64 = `enum SCNi64 = __PRI64_PREFIX "i";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNi64); }))) {
            mixin(enumMixinStr_SCNi64);
        }
    }




    static if(!is(typeof(SCNi32))) {
        private enum enumMixinStr_SCNi32 = `enum SCNi32 = "i";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNi32); }))) {
            mixin(enumMixinStr_SCNi32);
        }
    }




    static if(!is(typeof(SCNi16))) {
        private enum enumMixinStr_SCNi16 = `enum SCNi16 = "hi";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNi16); }))) {
            mixin(enumMixinStr_SCNi16);
        }
    }




    static if(!is(typeof(SCNi8))) {
        private enum enumMixinStr_SCNi8 = `enum SCNi8 = "hhi";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNi8); }))) {
            mixin(enumMixinStr_SCNi8);
        }
    }




    static if(!is(typeof(SCNdFAST64))) {
        private enum enumMixinStr_SCNdFAST64 = `enum SCNdFAST64 = __PRI64_PREFIX "d";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNdFAST64); }))) {
            mixin(enumMixinStr_SCNdFAST64);
        }
    }




    static if(!is(typeof(SCNdFAST32))) {
        private enum enumMixinStr_SCNdFAST32 = `enum SCNdFAST32 = __PRIPTR_PREFIX "d";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNdFAST32); }))) {
            mixin(enumMixinStr_SCNdFAST32);
        }
    }




    static if(!is(typeof(SCNdFAST16))) {
        private enum enumMixinStr_SCNdFAST16 = `enum SCNdFAST16 = __PRIPTR_PREFIX "d";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNdFAST16); }))) {
            mixin(enumMixinStr_SCNdFAST16);
        }
    }




    static if(!is(typeof(SCNdFAST8))) {
        private enum enumMixinStr_SCNdFAST8 = `enum SCNdFAST8 = "hhd";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNdFAST8); }))) {
            mixin(enumMixinStr_SCNdFAST8);
        }
    }




    static if(!is(typeof(SCNdLEAST64))) {
        private enum enumMixinStr_SCNdLEAST64 = `enum SCNdLEAST64 = __PRI64_PREFIX "d";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNdLEAST64); }))) {
            mixin(enumMixinStr_SCNdLEAST64);
        }
    }




    static if(!is(typeof(SCNdLEAST32))) {
        private enum enumMixinStr_SCNdLEAST32 = `enum SCNdLEAST32 = "d";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNdLEAST32); }))) {
            mixin(enumMixinStr_SCNdLEAST32);
        }
    }




    static if(!is(typeof(SCNdLEAST16))) {
        private enum enumMixinStr_SCNdLEAST16 = `enum SCNdLEAST16 = "hd";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNdLEAST16); }))) {
            mixin(enumMixinStr_SCNdLEAST16);
        }
    }




    static if(!is(typeof(SCNdLEAST8))) {
        private enum enumMixinStr_SCNdLEAST8 = `enum SCNdLEAST8 = "hhd";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNdLEAST8); }))) {
            mixin(enumMixinStr_SCNdLEAST8);
        }
    }




    static if(!is(typeof(SCNd64))) {
        private enum enumMixinStr_SCNd64 = `enum SCNd64 = __PRI64_PREFIX "d";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNd64); }))) {
            mixin(enumMixinStr_SCNd64);
        }
    }




    static if(!is(typeof(_STDC_PREDEF_H))) {
        private enum enumMixinStr__STDC_PREDEF_H = `enum _STDC_PREDEF_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__STDC_PREDEF_H); }))) {
            mixin(enumMixinStr__STDC_PREDEF_H);
        }
    }




    static if(!is(typeof(_STDINT_H))) {
        private enum enumMixinStr__STDINT_H = `enum _STDINT_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__STDINT_H); }))) {
            mixin(enumMixinStr__STDINT_H);
        }
    }




    static if(!is(typeof(SCNd32))) {
        private enum enumMixinStr_SCNd32 = `enum SCNd32 = "d";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNd32); }))) {
            mixin(enumMixinStr_SCNd32);
        }
    }




    static if(!is(typeof(SCNd16))) {
        private enum enumMixinStr_SCNd16 = `enum SCNd16 = "hd";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNd16); }))) {
            mixin(enumMixinStr_SCNd16);
        }
    }




    static if(!is(typeof(SCNd8))) {
        private enum enumMixinStr_SCNd8 = `enum SCNd8 = "hhd";`;
        static if(is(typeof({ mixin(enumMixinStr_SCNd8); }))) {
            mixin(enumMixinStr_SCNd8);
        }
    }




    static if(!is(typeof(PRIXPTR))) {
        private enum enumMixinStr_PRIXPTR = `enum PRIXPTR = __PRIPTR_PREFIX "X";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIXPTR); }))) {
            mixin(enumMixinStr_PRIXPTR);
        }
    }




    static if(!is(typeof(PRIxPTR))) {
        private enum enumMixinStr_PRIxPTR = `enum PRIxPTR = __PRIPTR_PREFIX "x";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIxPTR); }))) {
            mixin(enumMixinStr_PRIxPTR);
        }
    }




    static if(!is(typeof(PRIuPTR))) {
        private enum enumMixinStr_PRIuPTR = `enum PRIuPTR = __PRIPTR_PREFIX "u";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIuPTR); }))) {
            mixin(enumMixinStr_PRIuPTR);
        }
    }




    static if(!is(typeof(PRIoPTR))) {
        private enum enumMixinStr_PRIoPTR = `enum PRIoPTR = __PRIPTR_PREFIX "o";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIoPTR); }))) {
            mixin(enumMixinStr_PRIoPTR);
        }
    }




    static if(!is(typeof(PRIiPTR))) {
        private enum enumMixinStr_PRIiPTR = `enum PRIiPTR = __PRIPTR_PREFIX "i";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIiPTR); }))) {
            mixin(enumMixinStr_PRIiPTR);
        }
    }




    static if(!is(typeof(PRIdPTR))) {
        private enum enumMixinStr_PRIdPTR = `enum PRIdPTR = __PRIPTR_PREFIX "d";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIdPTR); }))) {
            mixin(enumMixinStr_PRIdPTR);
        }
    }




    static if(!is(typeof(PRIXMAX))) {
        private enum enumMixinStr_PRIXMAX = `enum PRIXMAX = __PRI64_PREFIX "X";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIXMAX); }))) {
            mixin(enumMixinStr_PRIXMAX);
        }
    }




    static if(!is(typeof(PRIxMAX))) {
        private enum enumMixinStr_PRIxMAX = `enum PRIxMAX = __PRI64_PREFIX "x";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIxMAX); }))) {
            mixin(enumMixinStr_PRIxMAX);
        }
    }




    static if(!is(typeof(PRIuMAX))) {
        private enum enumMixinStr_PRIuMAX = `enum PRIuMAX = __PRI64_PREFIX "u";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIuMAX); }))) {
            mixin(enumMixinStr_PRIuMAX);
        }
    }




    static if(!is(typeof(PRIoMAX))) {
        private enum enumMixinStr_PRIoMAX = `enum PRIoMAX = __PRI64_PREFIX "o";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIoMAX); }))) {
            mixin(enumMixinStr_PRIoMAX);
        }
    }




    static if(!is(typeof(PRIiMAX))) {
        private enum enumMixinStr_PRIiMAX = `enum PRIiMAX = __PRI64_PREFIX "i";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIiMAX); }))) {
            mixin(enumMixinStr_PRIiMAX);
        }
    }




    static if(!is(typeof(PRIdMAX))) {
        private enum enumMixinStr_PRIdMAX = `enum PRIdMAX = __PRI64_PREFIX "d";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIdMAX); }))) {
            mixin(enumMixinStr_PRIdMAX);
        }
    }




    static if(!is(typeof(PRIXFAST64))) {
        private enum enumMixinStr_PRIXFAST64 = `enum PRIXFAST64 = __PRI64_PREFIX "X";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIXFAST64); }))) {
            mixin(enumMixinStr_PRIXFAST64);
        }
    }




    static if(!is(typeof(PRIXFAST32))) {
        private enum enumMixinStr_PRIXFAST32 = `enum PRIXFAST32 = __PRIPTR_PREFIX "X";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIXFAST32); }))) {
            mixin(enumMixinStr_PRIXFAST32);
        }
    }




    static if(!is(typeof(PRIXFAST16))) {
        private enum enumMixinStr_PRIXFAST16 = `enum PRIXFAST16 = __PRIPTR_PREFIX "X";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIXFAST16); }))) {
            mixin(enumMixinStr_PRIXFAST16);
        }
    }




    static if(!is(typeof(PRIXFAST8))) {
        private enum enumMixinStr_PRIXFAST8 = `enum PRIXFAST8 = "X";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIXFAST8); }))) {
            mixin(enumMixinStr_PRIXFAST8);
        }
    }




    static if(!is(typeof(PRIXLEAST64))) {
        private enum enumMixinStr_PRIXLEAST64 = `enum PRIXLEAST64 = __PRI64_PREFIX "X";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIXLEAST64); }))) {
            mixin(enumMixinStr_PRIXLEAST64);
        }
    }




    static if(!is(typeof(PRIXLEAST32))) {
        private enum enumMixinStr_PRIXLEAST32 = `enum PRIXLEAST32 = "X";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIXLEAST32); }))) {
            mixin(enumMixinStr_PRIXLEAST32);
        }
    }




    static if(!is(typeof(PRIXLEAST16))) {
        private enum enumMixinStr_PRIXLEAST16 = `enum PRIXLEAST16 = "X";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIXLEAST16); }))) {
            mixin(enumMixinStr_PRIXLEAST16);
        }
    }




    static if(!is(typeof(PRIXLEAST8))) {
        private enum enumMixinStr_PRIXLEAST8 = `enum PRIXLEAST8 = "X";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIXLEAST8); }))) {
            mixin(enumMixinStr_PRIXLEAST8);
        }
    }




    static if(!is(typeof(PRIX64))) {
        private enum enumMixinStr_PRIX64 = `enum PRIX64 = __PRI64_PREFIX "X";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIX64); }))) {
            mixin(enumMixinStr_PRIX64);
        }
    }




    static if(!is(typeof(PRIX32))) {
        private enum enumMixinStr_PRIX32 = `enum PRIX32 = "X";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIX32); }))) {
            mixin(enumMixinStr_PRIX32);
        }
    }




    static if(!is(typeof(PRIX16))) {
        private enum enumMixinStr_PRIX16 = `enum PRIX16 = "X";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIX16); }))) {
            mixin(enumMixinStr_PRIX16);
        }
    }






    static if(!is(typeof(PRIX8))) {
        private enum enumMixinStr_PRIX8 = `enum PRIX8 = "X";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIX8); }))) {
            mixin(enumMixinStr_PRIX8);
        }
    }




    static if(!is(typeof(PRIxFAST64))) {
        private enum enumMixinStr_PRIxFAST64 = `enum PRIxFAST64 = __PRI64_PREFIX "x";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIxFAST64); }))) {
            mixin(enumMixinStr_PRIxFAST64);
        }
    }




    static if(!is(typeof(PRIxFAST32))) {
        private enum enumMixinStr_PRIxFAST32 = `enum PRIxFAST32 = __PRIPTR_PREFIX "x";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIxFAST32); }))) {
            mixin(enumMixinStr_PRIxFAST32);
        }
    }




    static if(!is(typeof(PRIxFAST16))) {
        private enum enumMixinStr_PRIxFAST16 = `enum PRIxFAST16 = __PRIPTR_PREFIX "x";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIxFAST16); }))) {
            mixin(enumMixinStr_PRIxFAST16);
        }
    }
    static if(!is(typeof(INT8_MIN))) {
        private enum enumMixinStr_INT8_MIN = `enum INT8_MIN = ( - 128 );`;
        static if(is(typeof({ mixin(enumMixinStr_INT8_MIN); }))) {
            mixin(enumMixinStr_INT8_MIN);
        }
    }




    static if(!is(typeof(INT16_MIN))) {
        private enum enumMixinStr_INT16_MIN = `enum INT16_MIN = ( - 32767 - 1 );`;
        static if(is(typeof({ mixin(enumMixinStr_INT16_MIN); }))) {
            mixin(enumMixinStr_INT16_MIN);
        }
    }




    static if(!is(typeof(INT32_MIN))) {
        private enum enumMixinStr_INT32_MIN = `enum INT32_MIN = ( - 2147483647 - 1 );`;
        static if(is(typeof({ mixin(enumMixinStr_INT32_MIN); }))) {
            mixin(enumMixinStr_INT32_MIN);
        }
    }




    static if(!is(typeof(INT64_MIN))) {
        private enum enumMixinStr_INT64_MIN = `enum INT64_MIN = ( - 9223372036854775807L - 1 );`;
        static if(is(typeof({ mixin(enumMixinStr_INT64_MIN); }))) {
            mixin(enumMixinStr_INT64_MIN);
        }
    }




    static if(!is(typeof(INT8_MAX))) {
        private enum enumMixinStr_INT8_MAX = `enum INT8_MAX = ( 127 );`;
        static if(is(typeof({ mixin(enumMixinStr_INT8_MAX); }))) {
            mixin(enumMixinStr_INT8_MAX);
        }
    }




    static if(!is(typeof(INT16_MAX))) {
        private enum enumMixinStr_INT16_MAX = `enum INT16_MAX = ( 32767 );`;
        static if(is(typeof({ mixin(enumMixinStr_INT16_MAX); }))) {
            mixin(enumMixinStr_INT16_MAX);
        }
    }




    static if(!is(typeof(INT32_MAX))) {
        private enum enumMixinStr_INT32_MAX = `enum INT32_MAX = ( 2147483647 );`;
        static if(is(typeof({ mixin(enumMixinStr_INT32_MAX); }))) {
            mixin(enumMixinStr_INT32_MAX);
        }
    }




    static if(!is(typeof(INT64_MAX))) {
        private enum enumMixinStr_INT64_MAX = `enum INT64_MAX = ( 9223372036854775807L );`;
        static if(is(typeof({ mixin(enumMixinStr_INT64_MAX); }))) {
            mixin(enumMixinStr_INT64_MAX);
        }
    }




    static if(!is(typeof(UINT8_MAX))) {
        private enum enumMixinStr_UINT8_MAX = `enum UINT8_MAX = ( 255 );`;
        static if(is(typeof({ mixin(enumMixinStr_UINT8_MAX); }))) {
            mixin(enumMixinStr_UINT8_MAX);
        }
    }




    static if(!is(typeof(UINT16_MAX))) {
        private enum enumMixinStr_UINT16_MAX = `enum UINT16_MAX = ( 65535 );`;
        static if(is(typeof({ mixin(enumMixinStr_UINT16_MAX); }))) {
            mixin(enumMixinStr_UINT16_MAX);
        }
    }




    static if(!is(typeof(UINT32_MAX))) {
        private enum enumMixinStr_UINT32_MAX = `enum UINT32_MAX = ( 4294967295U );`;
        static if(is(typeof({ mixin(enumMixinStr_UINT32_MAX); }))) {
            mixin(enumMixinStr_UINT32_MAX);
        }
    }




    static if(!is(typeof(UINT64_MAX))) {
        private enum enumMixinStr_UINT64_MAX = `enum UINT64_MAX = ( 18446744073709551615UL );`;
        static if(is(typeof({ mixin(enumMixinStr_UINT64_MAX); }))) {
            mixin(enumMixinStr_UINT64_MAX);
        }
    }




    static if(!is(typeof(INT_LEAST8_MIN))) {
        private enum enumMixinStr_INT_LEAST8_MIN = `enum INT_LEAST8_MIN = ( - 128 );`;
        static if(is(typeof({ mixin(enumMixinStr_INT_LEAST8_MIN); }))) {
            mixin(enumMixinStr_INT_LEAST8_MIN);
        }
    }




    static if(!is(typeof(INT_LEAST16_MIN))) {
        private enum enumMixinStr_INT_LEAST16_MIN = `enum INT_LEAST16_MIN = ( - 32767 - 1 );`;
        static if(is(typeof({ mixin(enumMixinStr_INT_LEAST16_MIN); }))) {
            mixin(enumMixinStr_INT_LEAST16_MIN);
        }
    }




    static if(!is(typeof(INT_LEAST32_MIN))) {
        private enum enumMixinStr_INT_LEAST32_MIN = `enum INT_LEAST32_MIN = ( - 2147483647 - 1 );`;
        static if(is(typeof({ mixin(enumMixinStr_INT_LEAST32_MIN); }))) {
            mixin(enumMixinStr_INT_LEAST32_MIN);
        }
    }




    static if(!is(typeof(INT_LEAST64_MIN))) {
        private enum enumMixinStr_INT_LEAST64_MIN = `enum INT_LEAST64_MIN = ( - 9223372036854775807L - 1 );`;
        static if(is(typeof({ mixin(enumMixinStr_INT_LEAST64_MIN); }))) {
            mixin(enumMixinStr_INT_LEAST64_MIN);
        }
    }




    static if(!is(typeof(INT_LEAST8_MAX))) {
        private enum enumMixinStr_INT_LEAST8_MAX = `enum INT_LEAST8_MAX = ( 127 );`;
        static if(is(typeof({ mixin(enumMixinStr_INT_LEAST8_MAX); }))) {
            mixin(enumMixinStr_INT_LEAST8_MAX);
        }
    }




    static if(!is(typeof(INT_LEAST16_MAX))) {
        private enum enumMixinStr_INT_LEAST16_MAX = `enum INT_LEAST16_MAX = ( 32767 );`;
        static if(is(typeof({ mixin(enumMixinStr_INT_LEAST16_MAX); }))) {
            mixin(enumMixinStr_INT_LEAST16_MAX);
        }
    }




    static if(!is(typeof(INT_LEAST32_MAX))) {
        private enum enumMixinStr_INT_LEAST32_MAX = `enum INT_LEAST32_MAX = ( 2147483647 );`;
        static if(is(typeof({ mixin(enumMixinStr_INT_LEAST32_MAX); }))) {
            mixin(enumMixinStr_INT_LEAST32_MAX);
        }
    }




    static if(!is(typeof(INT_LEAST64_MAX))) {
        private enum enumMixinStr_INT_LEAST64_MAX = `enum INT_LEAST64_MAX = ( 9223372036854775807L );`;
        static if(is(typeof({ mixin(enumMixinStr_INT_LEAST64_MAX); }))) {
            mixin(enumMixinStr_INT_LEAST64_MAX);
        }
    }




    static if(!is(typeof(UINT_LEAST8_MAX))) {
        private enum enumMixinStr_UINT_LEAST8_MAX = `enum UINT_LEAST8_MAX = ( 255 );`;
        static if(is(typeof({ mixin(enumMixinStr_UINT_LEAST8_MAX); }))) {
            mixin(enumMixinStr_UINT_LEAST8_MAX);
        }
    }




    static if(!is(typeof(UINT_LEAST16_MAX))) {
        private enum enumMixinStr_UINT_LEAST16_MAX = `enum UINT_LEAST16_MAX = ( 65535 );`;
        static if(is(typeof({ mixin(enumMixinStr_UINT_LEAST16_MAX); }))) {
            mixin(enumMixinStr_UINT_LEAST16_MAX);
        }
    }




    static if(!is(typeof(UINT_LEAST32_MAX))) {
        private enum enumMixinStr_UINT_LEAST32_MAX = `enum UINT_LEAST32_MAX = ( 4294967295U );`;
        static if(is(typeof({ mixin(enumMixinStr_UINT_LEAST32_MAX); }))) {
            mixin(enumMixinStr_UINT_LEAST32_MAX);
        }
    }




    static if(!is(typeof(UINT_LEAST64_MAX))) {
        private enum enumMixinStr_UINT_LEAST64_MAX = `enum UINT_LEAST64_MAX = ( 18446744073709551615UL );`;
        static if(is(typeof({ mixin(enumMixinStr_UINT_LEAST64_MAX); }))) {
            mixin(enumMixinStr_UINT_LEAST64_MAX);
        }
    }




    static if(!is(typeof(INT_FAST8_MIN))) {
        private enum enumMixinStr_INT_FAST8_MIN = `enum INT_FAST8_MIN = ( - 128 );`;
        static if(is(typeof({ mixin(enumMixinStr_INT_FAST8_MIN); }))) {
            mixin(enumMixinStr_INT_FAST8_MIN);
        }
    }




    static if(!is(typeof(PRIxFAST8))) {
        private enum enumMixinStr_PRIxFAST8 = `enum PRIxFAST8 = "x";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIxFAST8); }))) {
            mixin(enumMixinStr_PRIxFAST8);
        }
    }




    static if(!is(typeof(INT_FAST16_MIN))) {
        private enum enumMixinStr_INT_FAST16_MIN = `enum INT_FAST16_MIN = ( - 9223372036854775807L - 1 );`;
        static if(is(typeof({ mixin(enumMixinStr_INT_FAST16_MIN); }))) {
            mixin(enumMixinStr_INT_FAST16_MIN);
        }
    }




    static if(!is(typeof(INT_FAST32_MIN))) {
        private enum enumMixinStr_INT_FAST32_MIN = `enum INT_FAST32_MIN = ( - 9223372036854775807L - 1 );`;
        static if(is(typeof({ mixin(enumMixinStr_INT_FAST32_MIN); }))) {
            mixin(enumMixinStr_INT_FAST32_MIN);
        }
    }




    static if(!is(typeof(INT_FAST64_MIN))) {
        private enum enumMixinStr_INT_FAST64_MIN = `enum INT_FAST64_MIN = ( - 9223372036854775807L - 1 );`;
        static if(is(typeof({ mixin(enumMixinStr_INT_FAST64_MIN); }))) {
            mixin(enumMixinStr_INT_FAST64_MIN);
        }
    }




    static if(!is(typeof(INT_FAST8_MAX))) {
        private enum enumMixinStr_INT_FAST8_MAX = `enum INT_FAST8_MAX = ( 127 );`;
        static if(is(typeof({ mixin(enumMixinStr_INT_FAST8_MAX); }))) {
            mixin(enumMixinStr_INT_FAST8_MAX);
        }
    }




    static if(!is(typeof(PRIxLEAST64))) {
        private enum enumMixinStr_PRIxLEAST64 = `enum PRIxLEAST64 = __PRI64_PREFIX "x";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIxLEAST64); }))) {
            mixin(enumMixinStr_PRIxLEAST64);
        }
    }




    static if(!is(typeof(INT_FAST16_MAX))) {
        private enum enumMixinStr_INT_FAST16_MAX = `enum INT_FAST16_MAX = ( 9223372036854775807L );`;
        static if(is(typeof({ mixin(enumMixinStr_INT_FAST16_MAX); }))) {
            mixin(enumMixinStr_INT_FAST16_MAX);
        }
    }




    static if(!is(typeof(INT_FAST32_MAX))) {
        private enum enumMixinStr_INT_FAST32_MAX = `enum INT_FAST32_MAX = ( 9223372036854775807L );`;
        static if(is(typeof({ mixin(enumMixinStr_INT_FAST32_MAX); }))) {
            mixin(enumMixinStr_INT_FAST32_MAX);
        }
    }




    static if(!is(typeof(INT_FAST64_MAX))) {
        private enum enumMixinStr_INT_FAST64_MAX = `enum INT_FAST64_MAX = ( 9223372036854775807L );`;
        static if(is(typeof({ mixin(enumMixinStr_INT_FAST64_MAX); }))) {
            mixin(enumMixinStr_INT_FAST64_MAX);
        }
    }




    static if(!is(typeof(UINT_FAST8_MAX))) {
        private enum enumMixinStr_UINT_FAST8_MAX = `enum UINT_FAST8_MAX = ( 255 );`;
        static if(is(typeof({ mixin(enumMixinStr_UINT_FAST8_MAX); }))) {
            mixin(enumMixinStr_UINT_FAST8_MAX);
        }
    }




    static if(!is(typeof(PRIxLEAST32))) {
        private enum enumMixinStr_PRIxLEAST32 = `enum PRIxLEAST32 = "x";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIxLEAST32); }))) {
            mixin(enumMixinStr_PRIxLEAST32);
        }
    }




    static if(!is(typeof(UINT_FAST16_MAX))) {
        private enum enumMixinStr_UINT_FAST16_MAX = `enum UINT_FAST16_MAX = ( 18446744073709551615UL );`;
        static if(is(typeof({ mixin(enumMixinStr_UINT_FAST16_MAX); }))) {
            mixin(enumMixinStr_UINT_FAST16_MAX);
        }
    }




    static if(!is(typeof(UINT_FAST32_MAX))) {
        private enum enumMixinStr_UINT_FAST32_MAX = `enum UINT_FAST32_MAX = ( 18446744073709551615UL );`;
        static if(is(typeof({ mixin(enumMixinStr_UINT_FAST32_MAX); }))) {
            mixin(enumMixinStr_UINT_FAST32_MAX);
        }
    }




    static if(!is(typeof(UINT_FAST64_MAX))) {
        private enum enumMixinStr_UINT_FAST64_MAX = `enum UINT_FAST64_MAX = ( 18446744073709551615UL );`;
        static if(is(typeof({ mixin(enumMixinStr_UINT_FAST64_MAX); }))) {
            mixin(enumMixinStr_UINT_FAST64_MAX);
        }
    }




    static if(!is(typeof(PRIxLEAST16))) {
        private enum enumMixinStr_PRIxLEAST16 = `enum PRIxLEAST16 = "x";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIxLEAST16); }))) {
            mixin(enumMixinStr_PRIxLEAST16);
        }
    }




    static if(!is(typeof(INTPTR_MIN))) {
        private enum enumMixinStr_INTPTR_MIN = `enum INTPTR_MIN = ( - 9223372036854775807L - 1 );`;
        static if(is(typeof({ mixin(enumMixinStr_INTPTR_MIN); }))) {
            mixin(enumMixinStr_INTPTR_MIN);
        }
    }




    static if(!is(typeof(INTPTR_MAX))) {
        private enum enumMixinStr_INTPTR_MAX = `enum INTPTR_MAX = ( 9223372036854775807L );`;
        static if(is(typeof({ mixin(enumMixinStr_INTPTR_MAX); }))) {
            mixin(enumMixinStr_INTPTR_MAX);
        }
    }




    static if(!is(typeof(UINTPTR_MAX))) {
        private enum enumMixinStr_UINTPTR_MAX = `enum UINTPTR_MAX = ( 18446744073709551615UL );`;
        static if(is(typeof({ mixin(enumMixinStr_UINTPTR_MAX); }))) {
            mixin(enumMixinStr_UINTPTR_MAX);
        }
    }




    static if(!is(typeof(INTMAX_MIN))) {
        private enum enumMixinStr_INTMAX_MIN = `enum INTMAX_MIN = ( - 9223372036854775807L - 1 );`;
        static if(is(typeof({ mixin(enumMixinStr_INTMAX_MIN); }))) {
            mixin(enumMixinStr_INTMAX_MIN);
        }
    }




    static if(!is(typeof(INTMAX_MAX))) {
        private enum enumMixinStr_INTMAX_MAX = `enum INTMAX_MAX = ( 9223372036854775807L );`;
        static if(is(typeof({ mixin(enumMixinStr_INTMAX_MAX); }))) {
            mixin(enumMixinStr_INTMAX_MAX);
        }
    }




    static if(!is(typeof(UINTMAX_MAX))) {
        private enum enumMixinStr_UINTMAX_MAX = `enum UINTMAX_MAX = ( 18446744073709551615UL );`;
        static if(is(typeof({ mixin(enumMixinStr_UINTMAX_MAX); }))) {
            mixin(enumMixinStr_UINTMAX_MAX);
        }
    }




    static if(!is(typeof(PRIxLEAST8))) {
        private enum enumMixinStr_PRIxLEAST8 = `enum PRIxLEAST8 = "x";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIxLEAST8); }))) {
            mixin(enumMixinStr_PRIxLEAST8);
        }
    }




    static if(!is(typeof(PTRDIFF_MIN))) {
        private enum enumMixinStr_PTRDIFF_MIN = `enum PTRDIFF_MIN = ( - 9223372036854775807L - 1 );`;
        static if(is(typeof({ mixin(enumMixinStr_PTRDIFF_MIN); }))) {
            mixin(enumMixinStr_PTRDIFF_MIN);
        }
    }




    static if(!is(typeof(PTRDIFF_MAX))) {
        private enum enumMixinStr_PTRDIFF_MAX = `enum PTRDIFF_MAX = ( 9223372036854775807L );`;
        static if(is(typeof({ mixin(enumMixinStr_PTRDIFF_MAX); }))) {
            mixin(enumMixinStr_PTRDIFF_MAX);
        }
    }




    static if(!is(typeof(SIG_ATOMIC_MIN))) {
        private enum enumMixinStr_SIG_ATOMIC_MIN = `enum SIG_ATOMIC_MIN = ( - 2147483647 - 1 );`;
        static if(is(typeof({ mixin(enumMixinStr_SIG_ATOMIC_MIN); }))) {
            mixin(enumMixinStr_SIG_ATOMIC_MIN);
        }
    }




    static if(!is(typeof(SIG_ATOMIC_MAX))) {
        private enum enumMixinStr_SIG_ATOMIC_MAX = `enum SIG_ATOMIC_MAX = ( 2147483647 );`;
        static if(is(typeof({ mixin(enumMixinStr_SIG_ATOMIC_MAX); }))) {
            mixin(enumMixinStr_SIG_ATOMIC_MAX);
        }
    }




    static if(!is(typeof(PRIx64))) {
        private enum enumMixinStr_PRIx64 = `enum PRIx64 = __PRI64_PREFIX "x";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIx64); }))) {
            mixin(enumMixinStr_PRIx64);
        }
    }




    static if(!is(typeof(SIZE_MAX))) {
        private enum enumMixinStr_SIZE_MAX = `enum SIZE_MAX = ( 18446744073709551615UL );`;
        static if(is(typeof({ mixin(enumMixinStr_SIZE_MAX); }))) {
            mixin(enumMixinStr_SIZE_MAX);
        }
    }




    static if(!is(typeof(WCHAR_MIN))) {
        private enum enumMixinStr_WCHAR_MIN = `enum WCHAR_MIN = __WCHAR_MIN;`;
        static if(is(typeof({ mixin(enumMixinStr_WCHAR_MIN); }))) {
            mixin(enumMixinStr_WCHAR_MIN);
        }
    }




    static if(!is(typeof(WCHAR_MAX))) {
        private enum enumMixinStr_WCHAR_MAX = `enum WCHAR_MAX = __WCHAR_MAX;`;
        static if(is(typeof({ mixin(enumMixinStr_WCHAR_MAX); }))) {
            mixin(enumMixinStr_WCHAR_MAX);
        }
    }




    static if(!is(typeof(WINT_MIN))) {
        private enum enumMixinStr_WINT_MIN = `enum WINT_MIN = ( 0u );`;
        static if(is(typeof({ mixin(enumMixinStr_WINT_MIN); }))) {
            mixin(enumMixinStr_WINT_MIN);
        }
    }




    static if(!is(typeof(WINT_MAX))) {
        private enum enumMixinStr_WINT_MAX = `enum WINT_MAX = ( 4294967295u );`;
        static if(is(typeof({ mixin(enumMixinStr_WINT_MAX); }))) {
            mixin(enumMixinStr_WINT_MAX);
        }
    }
    static if(!is(typeof(PRIx32))) {
        private enum enumMixinStr_PRIx32 = `enum PRIx32 = "x";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIx32); }))) {
            mixin(enumMixinStr_PRIx32);
        }
    }
    static if(!is(typeof(PRIx16))) {
        private enum enumMixinStr_PRIx16 = `enum PRIx16 = "x";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIx16); }))) {
            mixin(enumMixinStr_PRIx16);
        }
    }






    static if(!is(typeof(PRIx8))) {
        private enum enumMixinStr_PRIx8 = `enum PRIx8 = "x";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIx8); }))) {
            mixin(enumMixinStr_PRIx8);
        }
    }
    static if(!is(typeof(PRIuFAST64))) {
        private enum enumMixinStr_PRIuFAST64 = `enum PRIuFAST64 = __PRI64_PREFIX "u";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIuFAST64); }))) {
            mixin(enumMixinStr_PRIuFAST64);
        }
    }




    static if(!is(typeof(_STDIO_H))) {
        private enum enumMixinStr__STDIO_H = `enum _STDIO_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__STDIO_H); }))) {
            mixin(enumMixinStr__STDIO_H);
        }
    }




    static if(!is(typeof(PRIuFAST32))) {
        private enum enumMixinStr_PRIuFAST32 = `enum PRIuFAST32 = __PRIPTR_PREFIX "u";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIuFAST32); }))) {
            mixin(enumMixinStr_PRIuFAST32);
        }
    }




    static if(!is(typeof(PRIuFAST16))) {
        private enum enumMixinStr_PRIuFAST16 = `enum PRIuFAST16 = __PRIPTR_PREFIX "u";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIuFAST16); }))) {
            mixin(enumMixinStr_PRIuFAST16);
        }
    }




    static if(!is(typeof(PRIuFAST8))) {
        private enum enumMixinStr_PRIuFAST8 = `enum PRIuFAST8 = "u";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIuFAST8); }))) {
            mixin(enumMixinStr_PRIuFAST8);
        }
    }






    static if(!is(typeof(PRIuLEAST64))) {
        private enum enumMixinStr_PRIuLEAST64 = `enum PRIuLEAST64 = __PRI64_PREFIX "u";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIuLEAST64); }))) {
            mixin(enumMixinStr_PRIuLEAST64);
        }
    }




    static if(!is(typeof(PRIuLEAST32))) {
        private enum enumMixinStr_PRIuLEAST32 = `enum PRIuLEAST32 = "u";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIuLEAST32); }))) {
            mixin(enumMixinStr_PRIuLEAST32);
        }
    }




    static if(!is(typeof(PRIuLEAST16))) {
        private enum enumMixinStr_PRIuLEAST16 = `enum PRIuLEAST16 = "u";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIuLEAST16); }))) {
            mixin(enumMixinStr_PRIuLEAST16);
        }
    }




    static if(!is(typeof(PRIuLEAST8))) {
        private enum enumMixinStr_PRIuLEAST8 = `enum PRIuLEAST8 = "u";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIuLEAST8); }))) {
            mixin(enumMixinStr_PRIuLEAST8);
        }
    }




    static if(!is(typeof(PRIu64))) {
        private enum enumMixinStr_PRIu64 = `enum PRIu64 = __PRI64_PREFIX "u";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIu64); }))) {
            mixin(enumMixinStr_PRIu64);
        }
    }




    static if(!is(typeof(PRIu32))) {
        private enum enumMixinStr_PRIu32 = `enum PRIu32 = "u";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIu32); }))) {
            mixin(enumMixinStr_PRIu32);
        }
    }




    static if(!is(typeof(PRIu16))) {
        private enum enumMixinStr_PRIu16 = `enum PRIu16 = "u";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIu16); }))) {
            mixin(enumMixinStr_PRIu16);
        }
    }




    static if(!is(typeof(PRIu8))) {
        private enum enumMixinStr_PRIu8 = `enum PRIu8 = "u";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIu8); }))) {
            mixin(enumMixinStr_PRIu8);
        }
    }




    static if(!is(typeof(PRIoFAST64))) {
        private enum enumMixinStr_PRIoFAST64 = `enum PRIoFAST64 = __PRI64_PREFIX "o";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIoFAST64); }))) {
            mixin(enumMixinStr_PRIoFAST64);
        }
    }






    static if(!is(typeof(PRIoFAST32))) {
        private enum enumMixinStr_PRIoFAST32 = `enum PRIoFAST32 = __PRIPTR_PREFIX "o";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIoFAST32); }))) {
            mixin(enumMixinStr_PRIoFAST32);
        }
    }




    static if(!is(typeof(PRIoFAST16))) {
        private enum enumMixinStr_PRIoFAST16 = `enum PRIoFAST16 = __PRIPTR_PREFIX "o";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIoFAST16); }))) {
            mixin(enumMixinStr_PRIoFAST16);
        }
    }






    static if(!is(typeof(PRIoFAST8))) {
        private enum enumMixinStr_PRIoFAST8 = `enum PRIoFAST8 = "o";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIoFAST8); }))) {
            mixin(enumMixinStr_PRIoFAST8);
        }
    }




    static if(!is(typeof(PRIoLEAST64))) {
        private enum enumMixinStr_PRIoLEAST64 = `enum PRIoLEAST64 = __PRI64_PREFIX "o";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIoLEAST64); }))) {
            mixin(enumMixinStr_PRIoLEAST64);
        }
    }






    static if(!is(typeof(PRIoLEAST32))) {
        private enum enumMixinStr_PRIoLEAST32 = `enum PRIoLEAST32 = "o";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIoLEAST32); }))) {
            mixin(enumMixinStr_PRIoLEAST32);
        }
    }




    static if(!is(typeof(_IOFBF))) {
        private enum enumMixinStr__IOFBF = `enum _IOFBF = 0;`;
        static if(is(typeof({ mixin(enumMixinStr__IOFBF); }))) {
            mixin(enumMixinStr__IOFBF);
        }
    }




    static if(!is(typeof(_IOLBF))) {
        private enum enumMixinStr__IOLBF = `enum _IOLBF = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__IOLBF); }))) {
            mixin(enumMixinStr__IOLBF);
        }
    }




    static if(!is(typeof(_IONBF))) {
        private enum enumMixinStr__IONBF = `enum _IONBF = 2;`;
        static if(is(typeof({ mixin(enumMixinStr__IONBF); }))) {
            mixin(enumMixinStr__IONBF);
        }
    }




    static if(!is(typeof(BUFSIZ))) {
        private enum enumMixinStr_BUFSIZ = `enum BUFSIZ = 8192;`;
        static if(is(typeof({ mixin(enumMixinStr_BUFSIZ); }))) {
            mixin(enumMixinStr_BUFSIZ);
        }
    }




    static if(!is(typeof(EOF))) {
        private enum enumMixinStr_EOF = `enum EOF = ( - 1 );`;
        static if(is(typeof({ mixin(enumMixinStr_EOF); }))) {
            mixin(enumMixinStr_EOF);
        }
    }




    static if(!is(typeof(SEEK_SET))) {
        private enum enumMixinStr_SEEK_SET = `enum SEEK_SET = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_SEEK_SET); }))) {
            mixin(enumMixinStr_SEEK_SET);
        }
    }




    static if(!is(typeof(SEEK_CUR))) {
        private enum enumMixinStr_SEEK_CUR = `enum SEEK_CUR = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_SEEK_CUR); }))) {
            mixin(enumMixinStr_SEEK_CUR);
        }
    }




    static if(!is(typeof(SEEK_END))) {
        private enum enumMixinStr_SEEK_END = `enum SEEK_END = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_SEEK_END); }))) {
            mixin(enumMixinStr_SEEK_END);
        }
    }




    static if(!is(typeof(PRIoLEAST16))) {
        private enum enumMixinStr_PRIoLEAST16 = `enum PRIoLEAST16 = "o";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIoLEAST16); }))) {
            mixin(enumMixinStr_PRIoLEAST16);
        }
    }




    static if(!is(typeof(P_tmpdir))) {
        private enum enumMixinStr_P_tmpdir = `enum P_tmpdir = "/tmp";`;
        static if(is(typeof({ mixin(enumMixinStr_P_tmpdir); }))) {
            mixin(enumMixinStr_P_tmpdir);
        }
    }




    static if(!is(typeof(PRIoLEAST8))) {
        private enum enumMixinStr_PRIoLEAST8 = `enum PRIoLEAST8 = "o";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIoLEAST8); }))) {
            mixin(enumMixinStr_PRIoLEAST8);
        }
    }




    static if(!is(typeof(PRIo64))) {
        private enum enumMixinStr_PRIo64 = `enum PRIo64 = __PRI64_PREFIX "o";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIo64); }))) {
            mixin(enumMixinStr_PRIo64);
        }
    }




    static if(!is(typeof(PRIo32))) {
        private enum enumMixinStr_PRIo32 = `enum PRIo32 = "o";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIo32); }))) {
            mixin(enumMixinStr_PRIo32);
        }
    }




    static if(!is(typeof(PRIo16))) {
        private enum enumMixinStr_PRIo16 = `enum PRIo16 = "o";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIo16); }))) {
            mixin(enumMixinStr_PRIo16);
        }
    }




    static if(!is(typeof(stdin))) {
        private enum enumMixinStr_stdin = `enum stdin = stdin;`;
        static if(is(typeof({ mixin(enumMixinStr_stdin); }))) {
            mixin(enumMixinStr_stdin);
        }
    }




    static if(!is(typeof(stdout))) {
        private enum enumMixinStr_stdout = `enum stdout = stdout;`;
        static if(is(typeof({ mixin(enumMixinStr_stdout); }))) {
            mixin(enumMixinStr_stdout);
        }
    }




    static if(!is(typeof(stderr))) {
        private enum enumMixinStr_stderr = `enum stderr = stderr;`;
        static if(is(typeof({ mixin(enumMixinStr_stderr); }))) {
            mixin(enumMixinStr_stderr);
        }
    }




    static if(!is(typeof(PRIo8))) {
        private enum enumMixinStr_PRIo8 = `enum PRIo8 = "o";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIo8); }))) {
            mixin(enumMixinStr_PRIo8);
        }
    }




    static if(!is(typeof(PRIiFAST64))) {
        private enum enumMixinStr_PRIiFAST64 = `enum PRIiFAST64 = __PRI64_PREFIX "i";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIiFAST64); }))) {
            mixin(enumMixinStr_PRIiFAST64);
        }
    }




    static if(!is(typeof(PRIiFAST32))) {
        private enum enumMixinStr_PRIiFAST32 = `enum PRIiFAST32 = __PRIPTR_PREFIX "i";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIiFAST32); }))) {
            mixin(enumMixinStr_PRIiFAST32);
        }
    }




    static if(!is(typeof(PRIiFAST16))) {
        private enum enumMixinStr_PRIiFAST16 = `enum PRIiFAST16 = __PRIPTR_PREFIX "i";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIiFAST16); }))) {
            mixin(enumMixinStr_PRIiFAST16);
        }
    }




    static if(!is(typeof(PRIiFAST8))) {
        private enum enumMixinStr_PRIiFAST8 = `enum PRIiFAST8 = "i";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIiFAST8); }))) {
            mixin(enumMixinStr_PRIiFAST8);
        }
    }




    static if(!is(typeof(PRIiLEAST64))) {
        private enum enumMixinStr_PRIiLEAST64 = `enum PRIiLEAST64 = __PRI64_PREFIX "i";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIiLEAST64); }))) {
            mixin(enumMixinStr_PRIiLEAST64);
        }
    }




    static if(!is(typeof(PRIiLEAST32))) {
        private enum enumMixinStr_PRIiLEAST32 = `enum PRIiLEAST32 = "i";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIiLEAST32); }))) {
            mixin(enumMixinStr_PRIiLEAST32);
        }
    }




    static if(!is(typeof(PRIiLEAST16))) {
        private enum enumMixinStr_PRIiLEAST16 = `enum PRIiLEAST16 = "i";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIiLEAST16); }))) {
            mixin(enumMixinStr_PRIiLEAST16);
        }
    }




    static if(!is(typeof(PRIiLEAST8))) {
        private enum enumMixinStr_PRIiLEAST8 = `enum PRIiLEAST8 = "i";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIiLEAST8); }))) {
            mixin(enumMixinStr_PRIiLEAST8);
        }
    }




    static if(!is(typeof(PRIi64))) {
        private enum enumMixinStr_PRIi64 = `enum PRIi64 = __PRI64_PREFIX "i";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIi64); }))) {
            mixin(enumMixinStr_PRIi64);
        }
    }




    static if(!is(typeof(PRIi32))) {
        private enum enumMixinStr_PRIi32 = `enum PRIi32 = "i";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIi32); }))) {
            mixin(enumMixinStr_PRIi32);
        }
    }




    static if(!is(typeof(PRIi16))) {
        private enum enumMixinStr_PRIi16 = `enum PRIi16 = "i";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIi16); }))) {
            mixin(enumMixinStr_PRIi16);
        }
    }




    static if(!is(typeof(PRIi8))) {
        private enum enumMixinStr_PRIi8 = `enum PRIi8 = "i";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIi8); }))) {
            mixin(enumMixinStr_PRIi8);
        }
    }




    static if(!is(typeof(PRIdFAST64))) {
        private enum enumMixinStr_PRIdFAST64 = `enum PRIdFAST64 = __PRI64_PREFIX "d";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIdFAST64); }))) {
            mixin(enumMixinStr_PRIdFAST64);
        }
    }




    static if(!is(typeof(PRIdFAST32))) {
        private enum enumMixinStr_PRIdFAST32 = `enum PRIdFAST32 = __PRIPTR_PREFIX "d";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIdFAST32); }))) {
            mixin(enumMixinStr_PRIdFAST32);
        }
    }




    static if(!is(typeof(PRIdFAST16))) {
        private enum enumMixinStr_PRIdFAST16 = `enum PRIdFAST16 = __PRIPTR_PREFIX "d";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIdFAST16); }))) {
            mixin(enumMixinStr_PRIdFAST16);
        }
    }




    static if(!is(typeof(PRIdFAST8))) {
        private enum enumMixinStr_PRIdFAST8 = `enum PRIdFAST8 = "d";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIdFAST8); }))) {
            mixin(enumMixinStr_PRIdFAST8);
        }
    }




    static if(!is(typeof(PRIdLEAST64))) {
        private enum enumMixinStr_PRIdLEAST64 = `enum PRIdLEAST64 = __PRI64_PREFIX "d";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIdLEAST64); }))) {
            mixin(enumMixinStr_PRIdLEAST64);
        }
    }




    static if(!is(typeof(PRIdLEAST32))) {
        private enum enumMixinStr_PRIdLEAST32 = `enum PRIdLEAST32 = "d";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIdLEAST32); }))) {
            mixin(enumMixinStr_PRIdLEAST32);
        }
    }




    static if(!is(typeof(PRIdLEAST16))) {
        private enum enumMixinStr_PRIdLEAST16 = `enum PRIdLEAST16 = "d";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIdLEAST16); }))) {
            mixin(enumMixinStr_PRIdLEAST16);
        }
    }




    static if(!is(typeof(PRIdLEAST8))) {
        private enum enumMixinStr_PRIdLEAST8 = `enum PRIdLEAST8 = "d";`;
        static if(is(typeof({ mixin(enumMixinStr_PRIdLEAST8); }))) {
            mixin(enumMixinStr_PRIdLEAST8);
        }
    }




    static if(!is(typeof(PRId64))) {
        private enum enumMixinStr_PRId64 = `enum PRId64 = __PRI64_PREFIX "d";`;
        static if(is(typeof({ mixin(enumMixinStr_PRId64); }))) {
            mixin(enumMixinStr_PRId64);
        }
    }




    static if(!is(typeof(PRId32))) {
        private enum enumMixinStr_PRId32 = `enum PRId32 = "d";`;
        static if(is(typeof({ mixin(enumMixinStr_PRId32); }))) {
            mixin(enumMixinStr_PRId32);
        }
    }




    static if(!is(typeof(PRId16))) {
        private enum enumMixinStr_PRId16 = `enum PRId16 = "d";`;
        static if(is(typeof({ mixin(enumMixinStr_PRId16); }))) {
            mixin(enumMixinStr_PRId16);
        }
    }




    static if(!is(typeof(PRId8))) {
        private enum enumMixinStr_PRId8 = `enum PRId8 = "d";`;
        static if(is(typeof({ mixin(enumMixinStr_PRId8); }))) {
            mixin(enumMixinStr_PRId8);
        }
    }




    static if(!is(typeof(__PRIPTR_PREFIX))) {
        private enum enumMixinStr___PRIPTR_PREFIX = `enum __PRIPTR_PREFIX = "l";`;
        static if(is(typeof({ mixin(enumMixinStr___PRIPTR_PREFIX); }))) {
            mixin(enumMixinStr___PRIPTR_PREFIX);
        }
    }




    static if(!is(typeof(__PRI64_PREFIX))) {
        private enum enumMixinStr___PRI64_PREFIX = `enum __PRI64_PREFIX = "l";`;
        static if(is(typeof({ mixin(enumMixinStr___PRI64_PREFIX); }))) {
            mixin(enumMixinStr___PRI64_PREFIX);
        }
    }




    static if(!is(typeof(____gwchar_t_defined))) {
        private enum enumMixinStr_____gwchar_t_defined = `enum ____gwchar_t_defined = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_____gwchar_t_defined); }))) {
            mixin(enumMixinStr_____gwchar_t_defined);
        }
    }




    static if(!is(typeof(_INTTYPES_H))) {
        private enum enumMixinStr__INTTYPES_H = `enum _INTTYPES_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__INTTYPES_H); }))) {
            mixin(enumMixinStr__INTTYPES_H);
        }
    }
    static if(!is(typeof(__GLIBC_MINOR__))) {
        private enum enumMixinStr___GLIBC_MINOR__ = `enum __GLIBC_MINOR__ = 33;`;
        static if(is(typeof({ mixin(enumMixinStr___GLIBC_MINOR__); }))) {
            mixin(enumMixinStr___GLIBC_MINOR__);
        }
    }




    static if(!is(typeof(__GLIBC__))) {
        private enum enumMixinStr___GLIBC__ = `enum __GLIBC__ = 2;`;
        static if(is(typeof({ mixin(enumMixinStr___GLIBC__); }))) {
            mixin(enumMixinStr___GLIBC__);
        }
    }




    static if(!is(typeof(__GNU_LIBRARY__))) {
        private enum enumMixinStr___GNU_LIBRARY__ = `enum __GNU_LIBRARY__ = 6;`;
        static if(is(typeof({ mixin(enumMixinStr___GNU_LIBRARY__); }))) {
            mixin(enumMixinStr___GNU_LIBRARY__);
        }
    }




    static if(!is(typeof(__GLIBC_USE_DEPRECATED_SCANF))) {
        private enum enumMixinStr___GLIBC_USE_DEPRECATED_SCANF = `enum __GLIBC_USE_DEPRECATED_SCANF = 0;`;
        static if(is(typeof({ mixin(enumMixinStr___GLIBC_USE_DEPRECATED_SCANF); }))) {
            mixin(enumMixinStr___GLIBC_USE_DEPRECATED_SCANF);
        }
    }




    static if(!is(typeof(__GLIBC_USE_DEPRECATED_GETS))) {
        private enum enumMixinStr___GLIBC_USE_DEPRECATED_GETS = `enum __GLIBC_USE_DEPRECATED_GETS = 0;`;
        static if(is(typeof({ mixin(enumMixinStr___GLIBC_USE_DEPRECATED_GETS); }))) {
            mixin(enumMixinStr___GLIBC_USE_DEPRECATED_GETS);
        }
    }




    static if(!is(typeof(__USE_FORTIFY_LEVEL))) {
        private enum enumMixinStr___USE_FORTIFY_LEVEL = `enum __USE_FORTIFY_LEVEL = 0;`;
        static if(is(typeof({ mixin(enumMixinStr___USE_FORTIFY_LEVEL); }))) {
            mixin(enumMixinStr___USE_FORTIFY_LEVEL);
        }
    }




    static if(!is(typeof(__USE_ATFILE))) {
        private enum enumMixinStr___USE_ATFILE = `enum __USE_ATFILE = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___USE_ATFILE); }))) {
            mixin(enumMixinStr___USE_ATFILE);
        }
    }




    static if(!is(typeof(__USE_MISC))) {
        private enum enumMixinStr___USE_MISC = `enum __USE_MISC = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___USE_MISC); }))) {
            mixin(enumMixinStr___USE_MISC);
        }
    }




    static if(!is(typeof(_ATFILE_SOURCE))) {
        private enum enumMixinStr__ATFILE_SOURCE = `enum _ATFILE_SOURCE = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__ATFILE_SOURCE); }))) {
            mixin(enumMixinStr__ATFILE_SOURCE);
        }
    }




    static if(!is(typeof(__USE_XOPEN2K8))) {
        private enum enumMixinStr___USE_XOPEN2K8 = `enum __USE_XOPEN2K8 = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___USE_XOPEN2K8); }))) {
            mixin(enumMixinStr___USE_XOPEN2K8);
        }
    }




    static if(!is(typeof(__USE_ISOC99))) {
        private enum enumMixinStr___USE_ISOC99 = `enum __USE_ISOC99 = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___USE_ISOC99); }))) {
            mixin(enumMixinStr___USE_ISOC99);
        }
    }




    static if(!is(typeof(__USE_ISOC95))) {
        private enum enumMixinStr___USE_ISOC95 = `enum __USE_ISOC95 = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___USE_ISOC95); }))) {
            mixin(enumMixinStr___USE_ISOC95);
        }
    }




    static if(!is(typeof(__USE_XOPEN2K))) {
        private enum enumMixinStr___USE_XOPEN2K = `enum __USE_XOPEN2K = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___USE_XOPEN2K); }))) {
            mixin(enumMixinStr___USE_XOPEN2K);
        }
    }




    static if(!is(typeof(__USE_POSIX199506))) {
        private enum enumMixinStr___USE_POSIX199506 = `enum __USE_POSIX199506 = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___USE_POSIX199506); }))) {
            mixin(enumMixinStr___USE_POSIX199506);
        }
    }




    static if(!is(typeof(__USE_POSIX199309))) {
        private enum enumMixinStr___USE_POSIX199309 = `enum __USE_POSIX199309 = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___USE_POSIX199309); }))) {
            mixin(enumMixinStr___USE_POSIX199309);
        }
    }




    static if(!is(typeof(__USE_POSIX2))) {
        private enum enumMixinStr___USE_POSIX2 = `enum __USE_POSIX2 = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___USE_POSIX2); }))) {
            mixin(enumMixinStr___USE_POSIX2);
        }
    }




    static if(!is(typeof(__USE_POSIX))) {
        private enum enumMixinStr___USE_POSIX = `enum __USE_POSIX = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___USE_POSIX); }))) {
            mixin(enumMixinStr___USE_POSIX);
        }
    }




    static if(!is(typeof(_POSIX_C_SOURCE))) {
        private enum enumMixinStr__POSIX_C_SOURCE = `enum _POSIX_C_SOURCE = 200809L;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX_C_SOURCE); }))) {
            mixin(enumMixinStr__POSIX_C_SOURCE);
        }
    }




    static if(!is(typeof(_POSIX_SOURCE))) {
        private enum enumMixinStr__POSIX_SOURCE = `enum _POSIX_SOURCE = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX_SOURCE); }))) {
            mixin(enumMixinStr__POSIX_SOURCE);
        }
    }




    static if(!is(typeof(__USE_POSIX_IMPLICITLY))) {
        private enum enumMixinStr___USE_POSIX_IMPLICITLY = `enum __USE_POSIX_IMPLICITLY = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___USE_POSIX_IMPLICITLY); }))) {
            mixin(enumMixinStr___USE_POSIX_IMPLICITLY);
        }
    }




    static if(!is(typeof(__USE_ISOC11))) {
        private enum enumMixinStr___USE_ISOC11 = `enum __USE_ISOC11 = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___USE_ISOC11); }))) {
            mixin(enumMixinStr___USE_ISOC11);
        }
    }




    static if(!is(typeof(__GLIBC_USE_ISOC2X))) {
        private enum enumMixinStr___GLIBC_USE_ISOC2X = `enum __GLIBC_USE_ISOC2X = 0;`;
        static if(is(typeof({ mixin(enumMixinStr___GLIBC_USE_ISOC2X); }))) {
            mixin(enumMixinStr___GLIBC_USE_ISOC2X);
        }
    }




    static if(!is(typeof(_DEFAULT_SOURCE))) {
        private enum enumMixinStr__DEFAULT_SOURCE = `enum _DEFAULT_SOURCE = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__DEFAULT_SOURCE); }))) {
            mixin(enumMixinStr__DEFAULT_SOURCE);
        }
    }
    static if(!is(typeof(_FEATURES_H))) {
        private enum enumMixinStr__FEATURES_H = `enum _FEATURES_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__FEATURES_H); }))) {
            mixin(enumMixinStr__FEATURES_H);
        }
    }




    static if(!is(typeof(errno))) {
        private enum enumMixinStr_errno = `enum errno = ( * __errno_location ( ) );`;
        static if(is(typeof({ mixin(enumMixinStr_errno); }))) {
            mixin(enumMixinStr_errno);
        }
    }




    static if(!is(typeof(_ERRNO_H))) {
        private enum enumMixinStr__ERRNO_H = `enum _ERRNO_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__ERRNO_H); }))) {
            mixin(enumMixinStr__ERRNO_H);
        }
    }
    static if(!is(typeof(BYTE_ORDER))) {
        private enum enumMixinStr_BYTE_ORDER = `enum BYTE_ORDER = __BYTE_ORDER;`;
        static if(is(typeof({ mixin(enumMixinStr_BYTE_ORDER); }))) {
            mixin(enumMixinStr_BYTE_ORDER);
        }
    }




    static if(!is(typeof(PDP_ENDIAN))) {
        private enum enumMixinStr_PDP_ENDIAN = `enum PDP_ENDIAN = __PDP_ENDIAN;`;
        static if(is(typeof({ mixin(enumMixinStr_PDP_ENDIAN); }))) {
            mixin(enumMixinStr_PDP_ENDIAN);
        }
    }




    static if(!is(typeof(BIG_ENDIAN))) {
        private enum enumMixinStr_BIG_ENDIAN = `enum BIG_ENDIAN = __BIG_ENDIAN;`;
        static if(is(typeof({ mixin(enumMixinStr_BIG_ENDIAN); }))) {
            mixin(enumMixinStr_BIG_ENDIAN);
        }
    }




    static if(!is(typeof(LITTLE_ENDIAN))) {
        private enum enumMixinStr_LITTLE_ENDIAN = `enum LITTLE_ENDIAN = __LITTLE_ENDIAN;`;
        static if(is(typeof({ mixin(enumMixinStr_LITTLE_ENDIAN); }))) {
            mixin(enumMixinStr_LITTLE_ENDIAN);
        }
    }




    static if(!is(typeof(_ENDIAN_H))) {
        private enum enumMixinStr__ENDIAN_H = `enum _ENDIAN_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__ENDIAN_H); }))) {
            mixin(enumMixinStr__ENDIAN_H);
        }
    }




    static if(!is(typeof(__SYSCALL_WORDSIZE))) {
        private enum enumMixinStr___SYSCALL_WORDSIZE = `enum __SYSCALL_WORDSIZE = 64;`;
        static if(is(typeof({ mixin(enumMixinStr___SYSCALL_WORDSIZE); }))) {
            mixin(enumMixinStr___SYSCALL_WORDSIZE);
        }
    }




    static if(!is(typeof(__WORDSIZE_TIME64_COMPAT32))) {
        private enum enumMixinStr___WORDSIZE_TIME64_COMPAT32 = `enum __WORDSIZE_TIME64_COMPAT32 = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___WORDSIZE_TIME64_COMPAT32); }))) {
            mixin(enumMixinStr___WORDSIZE_TIME64_COMPAT32);
        }
    }




    static if(!is(typeof(__WORDSIZE))) {
        private enum enumMixinStr___WORDSIZE = `enum __WORDSIZE = 64;`;
        static if(is(typeof({ mixin(enumMixinStr___WORDSIZE); }))) {
            mixin(enumMixinStr___WORDSIZE);
        }
    }




    static if(!is(typeof(__WCHAR_MIN))) {
        private enum enumMixinStr___WCHAR_MIN = `enum __WCHAR_MIN = ( - __WCHAR_MAX - 1 );`;
        static if(is(typeof({ mixin(enumMixinStr___WCHAR_MIN); }))) {
            mixin(enumMixinStr___WCHAR_MIN);
        }
    }




    static if(!is(typeof(__WCHAR_MAX))) {
        private enum enumMixinStr___WCHAR_MAX = `enum __WCHAR_MAX = 0x7fffffff;`;
        static if(is(typeof({ mixin(enumMixinStr___WCHAR_MAX); }))) {
            mixin(enumMixinStr___WCHAR_MAX);
        }
    }




    static if(!is(typeof(_BITS_WCHAR_H))) {
        private enum enumMixinStr__BITS_WCHAR_H = `enum _BITS_WCHAR_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__BITS_WCHAR_H); }))) {
            mixin(enumMixinStr__BITS_WCHAR_H);
        }
    }




    static if(!is(typeof(__WCOREFLAG))) {
        private enum enumMixinStr___WCOREFLAG = `enum __WCOREFLAG = 0x80;`;
        static if(is(typeof({ mixin(enumMixinStr___WCOREFLAG); }))) {
            mixin(enumMixinStr___WCOREFLAG);
        }
    }




    static if(!is(typeof(__W_CONTINUED))) {
        private enum enumMixinStr___W_CONTINUED = `enum __W_CONTINUED = 0xffff;`;
        static if(is(typeof({ mixin(enumMixinStr___W_CONTINUED); }))) {
            mixin(enumMixinStr___W_CONTINUED);
        }
    }
    static if(!is(typeof(__WCLONE))) {
        private enum enumMixinStr___WCLONE = `enum __WCLONE = 0x80000000;`;
        static if(is(typeof({ mixin(enumMixinStr___WCLONE); }))) {
            mixin(enumMixinStr___WCLONE);
        }
    }




    static if(!is(typeof(__WALL))) {
        private enum enumMixinStr___WALL = `enum __WALL = 0x40000000;`;
        static if(is(typeof({ mixin(enumMixinStr___WALL); }))) {
            mixin(enumMixinStr___WALL);
        }
    }




    static if(!is(typeof(__WNOTHREAD))) {
        private enum enumMixinStr___WNOTHREAD = `enum __WNOTHREAD = 0x20000000;`;
        static if(is(typeof({ mixin(enumMixinStr___WNOTHREAD); }))) {
            mixin(enumMixinStr___WNOTHREAD);
        }
    }




    static if(!is(typeof(WNOWAIT))) {
        private enum enumMixinStr_WNOWAIT = `enum WNOWAIT = 0x01000000;`;
        static if(is(typeof({ mixin(enumMixinStr_WNOWAIT); }))) {
            mixin(enumMixinStr_WNOWAIT);
        }
    }




    static if(!is(typeof(WCONTINUED))) {
        private enum enumMixinStr_WCONTINUED = `enum WCONTINUED = 8;`;
        static if(is(typeof({ mixin(enumMixinStr_WCONTINUED); }))) {
            mixin(enumMixinStr_WCONTINUED);
        }
    }




    static if(!is(typeof(WEXITED))) {
        private enum enumMixinStr_WEXITED = `enum WEXITED = 4;`;
        static if(is(typeof({ mixin(enumMixinStr_WEXITED); }))) {
            mixin(enumMixinStr_WEXITED);
        }
    }




    static if(!is(typeof(WSTOPPED))) {
        private enum enumMixinStr_WSTOPPED = `enum WSTOPPED = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_WSTOPPED); }))) {
            mixin(enumMixinStr_WSTOPPED);
        }
    }




    static if(!is(typeof(WUNTRACED))) {
        private enum enumMixinStr_WUNTRACED = `enum WUNTRACED = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_WUNTRACED); }))) {
            mixin(enumMixinStr_WUNTRACED);
        }
    }




    static if(!is(typeof(WNOHANG))) {
        private enum enumMixinStr_WNOHANG = `enum WNOHANG = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_WNOHANG); }))) {
            mixin(enumMixinStr_WNOHANG);
        }
    }




    static if(!is(typeof(_BITS_UINTN_IDENTITY_H))) {
        private enum enumMixinStr__BITS_UINTN_IDENTITY_H = `enum _BITS_UINTN_IDENTITY_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__BITS_UINTN_IDENTITY_H); }))) {
            mixin(enumMixinStr__BITS_UINTN_IDENTITY_H);
        }
    }




    static if(!is(typeof(__FD_SETSIZE))) {
        private enum enumMixinStr___FD_SETSIZE = `enum __FD_SETSIZE = 1024;`;
        static if(is(typeof({ mixin(enumMixinStr___FD_SETSIZE); }))) {
            mixin(enumMixinStr___FD_SETSIZE);
        }
    }




    static if(!is(typeof(__KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64))) {
        private enum enumMixinStr___KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64 = `enum __KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64 = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64); }))) {
            mixin(enumMixinStr___KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64);
        }
    }




    static if(!is(typeof(__STATFS_MATCHES_STATFS64))) {
        private enum enumMixinStr___STATFS_MATCHES_STATFS64 = `enum __STATFS_MATCHES_STATFS64 = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___STATFS_MATCHES_STATFS64); }))) {
            mixin(enumMixinStr___STATFS_MATCHES_STATFS64);
        }
    }




    static if(!is(typeof(__RLIM_T_MATCHES_RLIM64_T))) {
        private enum enumMixinStr___RLIM_T_MATCHES_RLIM64_T = `enum __RLIM_T_MATCHES_RLIM64_T = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___RLIM_T_MATCHES_RLIM64_T); }))) {
            mixin(enumMixinStr___RLIM_T_MATCHES_RLIM64_T);
        }
    }




    static if(!is(typeof(__INO_T_MATCHES_INO64_T))) {
        private enum enumMixinStr___INO_T_MATCHES_INO64_T = `enum __INO_T_MATCHES_INO64_T = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___INO_T_MATCHES_INO64_T); }))) {
            mixin(enumMixinStr___INO_T_MATCHES_INO64_T);
        }
    }




    static if(!is(typeof(__OFF_T_MATCHES_OFF64_T))) {
        private enum enumMixinStr___OFF_T_MATCHES_OFF64_T = `enum __OFF_T_MATCHES_OFF64_T = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___OFF_T_MATCHES_OFF64_T); }))) {
            mixin(enumMixinStr___OFF_T_MATCHES_OFF64_T);
        }
    }




    static if(!is(typeof(__CPU_MASK_TYPE))) {
        private enum enumMixinStr___CPU_MASK_TYPE = `enum __CPU_MASK_TYPE = __SYSCALL_ULONG_TYPE;`;
        static if(is(typeof({ mixin(enumMixinStr___CPU_MASK_TYPE); }))) {
            mixin(enumMixinStr___CPU_MASK_TYPE);
        }
    }




    static if(!is(typeof(__SSIZE_T_TYPE))) {
        private enum enumMixinStr___SSIZE_T_TYPE = `enum __SSIZE_T_TYPE = __SWORD_TYPE;`;
        static if(is(typeof({ mixin(enumMixinStr___SSIZE_T_TYPE); }))) {
            mixin(enumMixinStr___SSIZE_T_TYPE);
        }
    }




    static if(!is(typeof(__FSID_T_TYPE))) {
        private enum enumMixinStr___FSID_T_TYPE = `enum __FSID_T_TYPE = { int __val [ 2 ] ; };`;
        static if(is(typeof({ mixin(enumMixinStr___FSID_T_TYPE); }))) {
            mixin(enumMixinStr___FSID_T_TYPE);
        }
    }




    static if(!is(typeof(__BLKSIZE_T_TYPE))) {
        private enum enumMixinStr___BLKSIZE_T_TYPE = `enum __BLKSIZE_T_TYPE = __SYSCALL_SLONG_TYPE;`;
        static if(is(typeof({ mixin(enumMixinStr___BLKSIZE_T_TYPE); }))) {
            mixin(enumMixinStr___BLKSIZE_T_TYPE);
        }
    }




    static if(!is(typeof(__TIMER_T_TYPE))) {
        private enum enumMixinStr___TIMER_T_TYPE = `enum __TIMER_T_TYPE = void *;`;
        static if(is(typeof({ mixin(enumMixinStr___TIMER_T_TYPE); }))) {
            mixin(enumMixinStr___TIMER_T_TYPE);
        }
    }




    static if(!is(typeof(__CLOCKID_T_TYPE))) {
        private enum enumMixinStr___CLOCKID_T_TYPE = `enum __CLOCKID_T_TYPE = __S32_TYPE;`;
        static if(is(typeof({ mixin(enumMixinStr___CLOCKID_T_TYPE); }))) {
            mixin(enumMixinStr___CLOCKID_T_TYPE);
        }
    }




    static if(!is(typeof(__KEY_T_TYPE))) {
        private enum enumMixinStr___KEY_T_TYPE = `enum __KEY_T_TYPE = __S32_TYPE;`;
        static if(is(typeof({ mixin(enumMixinStr___KEY_T_TYPE); }))) {
            mixin(enumMixinStr___KEY_T_TYPE);
        }
    }




    static if(!is(typeof(__DADDR_T_TYPE))) {
        private enum enumMixinStr___DADDR_T_TYPE = `enum __DADDR_T_TYPE = __S32_TYPE;`;
        static if(is(typeof({ mixin(enumMixinStr___DADDR_T_TYPE); }))) {
            mixin(enumMixinStr___DADDR_T_TYPE);
        }
    }




    static if(!is(typeof(__SUSECONDS64_T_TYPE))) {
        private enum enumMixinStr___SUSECONDS64_T_TYPE = `enum __SUSECONDS64_T_TYPE = __SQUAD_TYPE;`;
        static if(is(typeof({ mixin(enumMixinStr___SUSECONDS64_T_TYPE); }))) {
            mixin(enumMixinStr___SUSECONDS64_T_TYPE);
        }
    }




    static if(!is(typeof(__SUSECONDS_T_TYPE))) {
        private enum enumMixinStr___SUSECONDS_T_TYPE = `enum __SUSECONDS_T_TYPE = __SYSCALL_SLONG_TYPE;`;
        static if(is(typeof({ mixin(enumMixinStr___SUSECONDS_T_TYPE); }))) {
            mixin(enumMixinStr___SUSECONDS_T_TYPE);
        }
    }




    static if(!is(typeof(__USECONDS_T_TYPE))) {
        private enum enumMixinStr___USECONDS_T_TYPE = `enum __USECONDS_T_TYPE = __U32_TYPE;`;
        static if(is(typeof({ mixin(enumMixinStr___USECONDS_T_TYPE); }))) {
            mixin(enumMixinStr___USECONDS_T_TYPE);
        }
    }




    static if(!is(typeof(__TIME_T_TYPE))) {
        private enum enumMixinStr___TIME_T_TYPE = `enum __TIME_T_TYPE = __SYSCALL_SLONG_TYPE;`;
        static if(is(typeof({ mixin(enumMixinStr___TIME_T_TYPE); }))) {
            mixin(enumMixinStr___TIME_T_TYPE);
        }
    }




    static if(!is(typeof(__CLOCK_T_TYPE))) {
        private enum enumMixinStr___CLOCK_T_TYPE = `enum __CLOCK_T_TYPE = __SYSCALL_SLONG_TYPE;`;
        static if(is(typeof({ mixin(enumMixinStr___CLOCK_T_TYPE); }))) {
            mixin(enumMixinStr___CLOCK_T_TYPE);
        }
    }




    static if(!is(typeof(__ID_T_TYPE))) {
        private enum enumMixinStr___ID_T_TYPE = `enum __ID_T_TYPE = __U32_TYPE;`;
        static if(is(typeof({ mixin(enumMixinStr___ID_T_TYPE); }))) {
            mixin(enumMixinStr___ID_T_TYPE);
        }
    }




    static if(!is(typeof(__FSFILCNT64_T_TYPE))) {
        private enum enumMixinStr___FSFILCNT64_T_TYPE = `enum __FSFILCNT64_T_TYPE = __UQUAD_TYPE;`;
        static if(is(typeof({ mixin(enumMixinStr___FSFILCNT64_T_TYPE); }))) {
            mixin(enumMixinStr___FSFILCNT64_T_TYPE);
        }
    }




    static if(!is(typeof(__FSFILCNT_T_TYPE))) {
        private enum enumMixinStr___FSFILCNT_T_TYPE = `enum __FSFILCNT_T_TYPE = __SYSCALL_ULONG_TYPE;`;
        static if(is(typeof({ mixin(enumMixinStr___FSFILCNT_T_TYPE); }))) {
            mixin(enumMixinStr___FSFILCNT_T_TYPE);
        }
    }




    static if(!is(typeof(__FSBLKCNT64_T_TYPE))) {
        private enum enumMixinStr___FSBLKCNT64_T_TYPE = `enum __FSBLKCNT64_T_TYPE = __UQUAD_TYPE;`;
        static if(is(typeof({ mixin(enumMixinStr___FSBLKCNT64_T_TYPE); }))) {
            mixin(enumMixinStr___FSBLKCNT64_T_TYPE);
        }
    }




    static if(!is(typeof(__FSBLKCNT_T_TYPE))) {
        private enum enumMixinStr___FSBLKCNT_T_TYPE = `enum __FSBLKCNT_T_TYPE = __SYSCALL_ULONG_TYPE;`;
        static if(is(typeof({ mixin(enumMixinStr___FSBLKCNT_T_TYPE); }))) {
            mixin(enumMixinStr___FSBLKCNT_T_TYPE);
        }
    }




    static if(!is(typeof(__BLKCNT64_T_TYPE))) {
        private enum enumMixinStr___BLKCNT64_T_TYPE = `enum __BLKCNT64_T_TYPE = __SQUAD_TYPE;`;
        static if(is(typeof({ mixin(enumMixinStr___BLKCNT64_T_TYPE); }))) {
            mixin(enumMixinStr___BLKCNT64_T_TYPE);
        }
    }




    static if(!is(typeof(__BLKCNT_T_TYPE))) {
        private enum enumMixinStr___BLKCNT_T_TYPE = `enum __BLKCNT_T_TYPE = __SYSCALL_SLONG_TYPE;`;
        static if(is(typeof({ mixin(enumMixinStr___BLKCNT_T_TYPE); }))) {
            mixin(enumMixinStr___BLKCNT_T_TYPE);
        }
    }




    static if(!is(typeof(__RLIM64_T_TYPE))) {
        private enum enumMixinStr___RLIM64_T_TYPE = `enum __RLIM64_T_TYPE = __UQUAD_TYPE;`;
        static if(is(typeof({ mixin(enumMixinStr___RLIM64_T_TYPE); }))) {
            mixin(enumMixinStr___RLIM64_T_TYPE);
        }
    }




    static if(!is(typeof(__RLIM_T_TYPE))) {
        private enum enumMixinStr___RLIM_T_TYPE = `enum __RLIM_T_TYPE = __SYSCALL_ULONG_TYPE;`;
        static if(is(typeof({ mixin(enumMixinStr___RLIM_T_TYPE); }))) {
            mixin(enumMixinStr___RLIM_T_TYPE);
        }
    }




    static if(!is(typeof(__PID_T_TYPE))) {
        private enum enumMixinStr___PID_T_TYPE = `enum __PID_T_TYPE = __S32_TYPE;`;
        static if(is(typeof({ mixin(enumMixinStr___PID_T_TYPE); }))) {
            mixin(enumMixinStr___PID_T_TYPE);
        }
    }




    static if(!is(typeof(__OFF64_T_TYPE))) {
        private enum enumMixinStr___OFF64_T_TYPE = `enum __OFF64_T_TYPE = __SQUAD_TYPE;`;
        static if(is(typeof({ mixin(enumMixinStr___OFF64_T_TYPE); }))) {
            mixin(enumMixinStr___OFF64_T_TYPE);
        }
    }




    static if(!is(typeof(__OFF_T_TYPE))) {
        private enum enumMixinStr___OFF_T_TYPE = `enum __OFF_T_TYPE = __SYSCALL_SLONG_TYPE;`;
        static if(is(typeof({ mixin(enumMixinStr___OFF_T_TYPE); }))) {
            mixin(enumMixinStr___OFF_T_TYPE);
        }
    }




    static if(!is(typeof(__FSWORD_T_TYPE))) {
        private enum enumMixinStr___FSWORD_T_TYPE = `enum __FSWORD_T_TYPE = __SYSCALL_SLONG_TYPE;`;
        static if(is(typeof({ mixin(enumMixinStr___FSWORD_T_TYPE); }))) {
            mixin(enumMixinStr___FSWORD_T_TYPE);
        }
    }




    static if(!is(typeof(__NLINK_T_TYPE))) {
        private enum enumMixinStr___NLINK_T_TYPE = `enum __NLINK_T_TYPE = __SYSCALL_ULONG_TYPE;`;
        static if(is(typeof({ mixin(enumMixinStr___NLINK_T_TYPE); }))) {
            mixin(enumMixinStr___NLINK_T_TYPE);
        }
    }




    static if(!is(typeof(__MODE_T_TYPE))) {
        private enum enumMixinStr___MODE_T_TYPE = `enum __MODE_T_TYPE = __U32_TYPE;`;
        static if(is(typeof({ mixin(enumMixinStr___MODE_T_TYPE); }))) {
            mixin(enumMixinStr___MODE_T_TYPE);
        }
    }




    static if(!is(typeof(__INO64_T_TYPE))) {
        private enum enumMixinStr___INO64_T_TYPE = `enum __INO64_T_TYPE = __UQUAD_TYPE;`;
        static if(is(typeof({ mixin(enumMixinStr___INO64_T_TYPE); }))) {
            mixin(enumMixinStr___INO64_T_TYPE);
        }
    }




    static if(!is(typeof(__INO_T_TYPE))) {
        private enum enumMixinStr___INO_T_TYPE = `enum __INO_T_TYPE = __SYSCALL_ULONG_TYPE;`;
        static if(is(typeof({ mixin(enumMixinStr___INO_T_TYPE); }))) {
            mixin(enumMixinStr___INO_T_TYPE);
        }
    }




    static if(!is(typeof(__GID_T_TYPE))) {
        private enum enumMixinStr___GID_T_TYPE = `enum __GID_T_TYPE = __U32_TYPE;`;
        static if(is(typeof({ mixin(enumMixinStr___GID_T_TYPE); }))) {
            mixin(enumMixinStr___GID_T_TYPE);
        }
    }




    static if(!is(typeof(__UID_T_TYPE))) {
        private enum enumMixinStr___UID_T_TYPE = `enum __UID_T_TYPE = __U32_TYPE;`;
        static if(is(typeof({ mixin(enumMixinStr___UID_T_TYPE); }))) {
            mixin(enumMixinStr___UID_T_TYPE);
        }
    }




    static if(!is(typeof(__DEV_T_TYPE))) {
        private enum enumMixinStr___DEV_T_TYPE = `enum __DEV_T_TYPE = __UQUAD_TYPE;`;
        static if(is(typeof({ mixin(enumMixinStr___DEV_T_TYPE); }))) {
            mixin(enumMixinStr___DEV_T_TYPE);
        }
    }




    static if(!is(typeof(__SYSCALL_ULONG_TYPE))) {
        private enum enumMixinStr___SYSCALL_ULONG_TYPE = `enum __SYSCALL_ULONG_TYPE = __ULONGWORD_TYPE;`;
        static if(is(typeof({ mixin(enumMixinStr___SYSCALL_ULONG_TYPE); }))) {
            mixin(enumMixinStr___SYSCALL_ULONG_TYPE);
        }
    }




    static if(!is(typeof(__SYSCALL_SLONG_TYPE))) {
        private enum enumMixinStr___SYSCALL_SLONG_TYPE = `enum __SYSCALL_SLONG_TYPE = __SLONGWORD_TYPE;`;
        static if(is(typeof({ mixin(enumMixinStr___SYSCALL_SLONG_TYPE); }))) {
            mixin(enumMixinStr___SYSCALL_SLONG_TYPE);
        }
    }




    static if(!is(typeof(_BITS_TYPESIZES_H))) {
        private enum enumMixinStr__BITS_TYPESIZES_H = `enum _BITS_TYPESIZES_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__BITS_TYPESIZES_H); }))) {
            mixin(enumMixinStr__BITS_TYPESIZES_H);
        }
    }




    static if(!is(typeof(__timer_t_defined))) {
        private enum enumMixinStr___timer_t_defined = `enum __timer_t_defined = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___timer_t_defined); }))) {
            mixin(enumMixinStr___timer_t_defined);
        }
    }




    static if(!is(typeof(__time_t_defined))) {
        private enum enumMixinStr___time_t_defined = `enum __time_t_defined = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___time_t_defined); }))) {
            mixin(enumMixinStr___time_t_defined);
        }
    }




    static if(!is(typeof(__struct_tm_defined))) {
        private enum enumMixinStr___struct_tm_defined = `enum __struct_tm_defined = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___struct_tm_defined); }))) {
            mixin(enumMixinStr___struct_tm_defined);
        }
    }




    static if(!is(typeof(__timeval_defined))) {
        private enum enumMixinStr___timeval_defined = `enum __timeval_defined = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___timeval_defined); }))) {
            mixin(enumMixinStr___timeval_defined);
        }
    }




    static if(!is(typeof(_STRUCT_TIMESPEC))) {
        private enum enumMixinStr__STRUCT_TIMESPEC = `enum _STRUCT_TIMESPEC = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__STRUCT_TIMESPEC); }))) {
            mixin(enumMixinStr__STRUCT_TIMESPEC);
        }
    }




    static if(!is(typeof(_BITS_TYPES_STRUCT_SCHED_PARAM))) {
        private enum enumMixinStr__BITS_TYPES_STRUCT_SCHED_PARAM = `enum _BITS_TYPES_STRUCT_SCHED_PARAM = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__BITS_TYPES_STRUCT_SCHED_PARAM); }))) {
            mixin(enumMixinStr__BITS_TYPES_STRUCT_SCHED_PARAM);
        }
    }




    static if(!is(typeof(__itimerspec_defined))) {
        private enum enumMixinStr___itimerspec_defined = `enum __itimerspec_defined = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___itimerspec_defined); }))) {
            mixin(enumMixinStr___itimerspec_defined);
        }
    }




    static if(!is(typeof(__jmp_buf_tag_defined))) {
        private enum enumMixinStr___jmp_buf_tag_defined = `enum __jmp_buf_tag_defined = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___jmp_buf_tag_defined); }))) {
            mixin(enumMixinStr___jmp_buf_tag_defined);
        }
    }




    static if(!is(typeof(_IO_USER_LOCK))) {
        private enum enumMixinStr__IO_USER_LOCK = `enum _IO_USER_LOCK = 0x8000;`;
        static if(is(typeof({ mixin(enumMixinStr__IO_USER_LOCK); }))) {
            mixin(enumMixinStr__IO_USER_LOCK);
        }
    }






    static if(!is(typeof(_IO_ERR_SEEN))) {
        private enum enumMixinStr__IO_ERR_SEEN = `enum _IO_ERR_SEEN = 0x0020;`;
        static if(is(typeof({ mixin(enumMixinStr__IO_ERR_SEEN); }))) {
            mixin(enumMixinStr__IO_ERR_SEEN);
        }
    }






    static if(!is(typeof(_IO_EOF_SEEN))) {
        private enum enumMixinStr__IO_EOF_SEEN = `enum _IO_EOF_SEEN = 0x0010;`;
        static if(is(typeof({ mixin(enumMixinStr__IO_EOF_SEEN); }))) {
            mixin(enumMixinStr__IO_EOF_SEEN);
        }
    }
    static if(!is(typeof(__struct_FILE_defined))) {
        private enum enumMixinStr___struct_FILE_defined = `enum __struct_FILE_defined = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___struct_FILE_defined); }))) {
            mixin(enumMixinStr___struct_FILE_defined);
        }
    }




    static if(!is(typeof(__sigset_t_defined))) {
        private enum enumMixinStr___sigset_t_defined = `enum __sigset_t_defined = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___sigset_t_defined); }))) {
            mixin(enumMixinStr___sigset_t_defined);
        }
    }




    static if(!is(typeof(_BITS_TYPES_LOCALE_T_H))) {
        private enum enumMixinStr__BITS_TYPES_LOCALE_T_H = `enum _BITS_TYPES_LOCALE_T_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__BITS_TYPES_LOCALE_T_H); }))) {
            mixin(enumMixinStr__BITS_TYPES_LOCALE_T_H);
        }
    }




    static if(!is(typeof(__clockid_t_defined))) {
        private enum enumMixinStr___clockid_t_defined = `enum __clockid_t_defined = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___clockid_t_defined); }))) {
            mixin(enumMixinStr___clockid_t_defined);
        }
    }




    static if(!is(typeof(__clock_t_defined))) {
        private enum enumMixinStr___clock_t_defined = `enum __clock_t_defined = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___clock_t_defined); }))) {
            mixin(enumMixinStr___clock_t_defined);
        }
    }




    static if(!is(typeof(_SIGSET_NWORDS))) {
        private enum enumMixinStr__SIGSET_NWORDS = `enum _SIGSET_NWORDS = ( 1024 / ( 8 * ( unsigned long int ) .sizeof ) );`;
        static if(is(typeof({ mixin(enumMixinStr__SIGSET_NWORDS); }))) {
            mixin(enumMixinStr__SIGSET_NWORDS);
        }
    }






    static if(!is(typeof(____mbstate_t_defined))) {
        private enum enumMixinStr_____mbstate_t_defined = `enum ____mbstate_t_defined = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_____mbstate_t_defined); }))) {
            mixin(enumMixinStr_____mbstate_t_defined);
        }
    }




    static if(!is(typeof(_BITS_TYPES___LOCALE_T_H))) {
        private enum enumMixinStr__BITS_TYPES___LOCALE_T_H = `enum _BITS_TYPES___LOCALE_T_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__BITS_TYPES___LOCALE_T_H); }))) {
            mixin(enumMixinStr__BITS_TYPES___LOCALE_T_H);
        }
    }




    static if(!is(typeof(_____fpos_t_defined))) {
        private enum enumMixinStr______fpos_t_defined = `enum _____fpos_t_defined = 1;`;
        static if(is(typeof({ mixin(enumMixinStr______fpos_t_defined); }))) {
            mixin(enumMixinStr______fpos_t_defined);
        }
    }






    static if(!is(typeof(_____fpos64_t_defined))) {
        private enum enumMixinStr______fpos64_t_defined = `enum _____fpos64_t_defined = 1;`;
        static if(is(typeof({ mixin(enumMixinStr______fpos64_t_defined); }))) {
            mixin(enumMixinStr______fpos64_t_defined);
        }
    }




    static if(!is(typeof(____FILE_defined))) {
        private enum enumMixinStr_____FILE_defined = `enum ____FILE_defined = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_____FILE_defined); }))) {
            mixin(enumMixinStr_____FILE_defined);
        }
    }




    static if(!is(typeof(_STDLIB_H))) {
        private enum enumMixinStr__STDLIB_H = `enum _STDLIB_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__STDLIB_H); }))) {
            mixin(enumMixinStr__STDLIB_H);
        }
    }




    static if(!is(typeof(__FILE_defined))) {
        private enum enumMixinStr___FILE_defined = `enum __FILE_defined = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___FILE_defined); }))) {
            mixin(enumMixinStr___FILE_defined);
        }
    }




    static if(!is(typeof(__STD_TYPE))) {
        private enum enumMixinStr___STD_TYPE = `enum __STD_TYPE = typedef;`;
        static if(is(typeof({ mixin(enumMixinStr___STD_TYPE); }))) {
            mixin(enumMixinStr___STD_TYPE);
        }
    }




    static if(!is(typeof(__U64_TYPE))) {
        private enum enumMixinStr___U64_TYPE = `enum __U64_TYPE = unsigned long int;`;
        static if(is(typeof({ mixin(enumMixinStr___U64_TYPE); }))) {
            mixin(enumMixinStr___U64_TYPE);
        }
    }
    static if(!is(typeof(__S64_TYPE))) {
        private enum enumMixinStr___S64_TYPE = `enum __S64_TYPE = long int;`;
        static if(is(typeof({ mixin(enumMixinStr___S64_TYPE); }))) {
            mixin(enumMixinStr___S64_TYPE);
        }
    }






    static if(!is(typeof(__ULONG32_TYPE))) {
        private enum enumMixinStr___ULONG32_TYPE = `enum __ULONG32_TYPE = unsigned int;`;
        static if(is(typeof({ mixin(enumMixinStr___ULONG32_TYPE); }))) {
            mixin(enumMixinStr___ULONG32_TYPE);
        }
    }




    static if(!is(typeof(__SLONG32_TYPE))) {
        private enum enumMixinStr___SLONG32_TYPE = `enum __SLONG32_TYPE = int;`;
        static if(is(typeof({ mixin(enumMixinStr___SLONG32_TYPE); }))) {
            mixin(enumMixinStr___SLONG32_TYPE);
        }
    }




    static if(!is(typeof(__UWORD_TYPE))) {
        private enum enumMixinStr___UWORD_TYPE = `enum __UWORD_TYPE = unsigned long int;`;
        static if(is(typeof({ mixin(enumMixinStr___UWORD_TYPE); }))) {
            mixin(enumMixinStr___UWORD_TYPE);
        }
    }




    static if(!is(typeof(__SWORD_TYPE))) {
        private enum enumMixinStr___SWORD_TYPE = `enum __SWORD_TYPE = long int;`;
        static if(is(typeof({ mixin(enumMixinStr___SWORD_TYPE); }))) {
            mixin(enumMixinStr___SWORD_TYPE);
        }
    }




    static if(!is(typeof(__UQUAD_TYPE))) {
        private enum enumMixinStr___UQUAD_TYPE = `enum __UQUAD_TYPE = unsigned long int;`;
        static if(is(typeof({ mixin(enumMixinStr___UQUAD_TYPE); }))) {
            mixin(enumMixinStr___UQUAD_TYPE);
        }
    }




    static if(!is(typeof(__ldiv_t_defined))) {
        private enum enumMixinStr___ldiv_t_defined = `enum __ldiv_t_defined = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___ldiv_t_defined); }))) {
            mixin(enumMixinStr___ldiv_t_defined);
        }
    }




    static if(!is(typeof(__SQUAD_TYPE))) {
        private enum enumMixinStr___SQUAD_TYPE = `enum __SQUAD_TYPE = long int;`;
        static if(is(typeof({ mixin(enumMixinStr___SQUAD_TYPE); }))) {
            mixin(enumMixinStr___SQUAD_TYPE);
        }
    }




    static if(!is(typeof(__ULONGWORD_TYPE))) {
        private enum enumMixinStr___ULONGWORD_TYPE = `enum __ULONGWORD_TYPE = unsigned long int;`;
        static if(is(typeof({ mixin(enumMixinStr___ULONGWORD_TYPE); }))) {
            mixin(enumMixinStr___ULONGWORD_TYPE);
        }
    }




    static if(!is(typeof(__SLONGWORD_TYPE))) {
        private enum enumMixinStr___SLONGWORD_TYPE = `enum __SLONGWORD_TYPE = long int;`;
        static if(is(typeof({ mixin(enumMixinStr___SLONGWORD_TYPE); }))) {
            mixin(enumMixinStr___SLONGWORD_TYPE);
        }
    }




    static if(!is(typeof(__lldiv_t_defined))) {
        private enum enumMixinStr___lldiv_t_defined = `enum __lldiv_t_defined = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___lldiv_t_defined); }))) {
            mixin(enumMixinStr___lldiv_t_defined);
        }
    }




    static if(!is(typeof(RAND_MAX))) {
        private enum enumMixinStr_RAND_MAX = `enum RAND_MAX = 2147483647;`;
        static if(is(typeof({ mixin(enumMixinStr_RAND_MAX); }))) {
            mixin(enumMixinStr_RAND_MAX);
        }
    }




    static if(!is(typeof(EXIT_FAILURE))) {
        private enum enumMixinStr_EXIT_FAILURE = `enum EXIT_FAILURE = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_EXIT_FAILURE); }))) {
            mixin(enumMixinStr_EXIT_FAILURE);
        }
    }




    static if(!is(typeof(EXIT_SUCCESS))) {
        private enum enumMixinStr_EXIT_SUCCESS = `enum EXIT_SUCCESS = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_EXIT_SUCCESS); }))) {
            mixin(enumMixinStr_EXIT_SUCCESS);
        }
    }




    static if(!is(typeof(MB_CUR_MAX))) {
        private enum enumMixinStr_MB_CUR_MAX = `enum MB_CUR_MAX = ( __ctype_get_mb_cur_max ( ) );`;
        static if(is(typeof({ mixin(enumMixinStr_MB_CUR_MAX); }))) {
            mixin(enumMixinStr_MB_CUR_MAX);
        }
    }




    static if(!is(typeof(__U32_TYPE))) {
        private enum enumMixinStr___U32_TYPE = `enum __U32_TYPE = unsigned int;`;
        static if(is(typeof({ mixin(enumMixinStr___U32_TYPE); }))) {
            mixin(enumMixinStr___U32_TYPE);
        }
    }




    static if(!is(typeof(__S32_TYPE))) {
        private enum enumMixinStr___S32_TYPE = `enum __S32_TYPE = int;`;
        static if(is(typeof({ mixin(enumMixinStr___S32_TYPE); }))) {
            mixin(enumMixinStr___S32_TYPE);
        }
    }




    static if(!is(typeof(__U16_TYPE))) {
        private enum enumMixinStr___U16_TYPE = `enum __U16_TYPE = unsigned short int;`;
        static if(is(typeof({ mixin(enumMixinStr___U16_TYPE); }))) {
            mixin(enumMixinStr___U16_TYPE);
        }
    }




    static if(!is(typeof(__S16_TYPE))) {
        private enum enumMixinStr___S16_TYPE = `enum __S16_TYPE = short int;`;
        static if(is(typeof({ mixin(enumMixinStr___S16_TYPE); }))) {
            mixin(enumMixinStr___S16_TYPE);
        }
    }




    static if(!is(typeof(_BITS_TYPES_H))) {
        private enum enumMixinStr__BITS_TYPES_H = `enum _BITS_TYPES_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__BITS_TYPES_H); }))) {
            mixin(enumMixinStr__BITS_TYPES_H);
        }
    }




    static if(!is(typeof(__TIMESIZE))) {
        private enum enumMixinStr___TIMESIZE = `enum __TIMESIZE = 64;`;
        static if(is(typeof({ mixin(enumMixinStr___TIMESIZE); }))) {
            mixin(enumMixinStr___TIMESIZE);
        }
    }




    static if(!is(typeof(__TIME64_T_TYPE))) {
        private enum enumMixinStr___TIME64_T_TYPE = `enum __TIME64_T_TYPE = long int;`;
        static if(is(typeof({ mixin(enumMixinStr___TIME64_T_TYPE); }))) {
            mixin(enumMixinStr___TIME64_T_TYPE);
        }
    }




    static if(!is(typeof(_BITS_TIME64_H))) {
        private enum enumMixinStr__BITS_TIME64_H = `enum _BITS_TIME64_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__BITS_TIME64_H); }))) {
            mixin(enumMixinStr__BITS_TIME64_H);
        }
    }




    static if(!is(typeof(TIMER_ABSTIME))) {
        private enum enumMixinStr_TIMER_ABSTIME = `enum TIMER_ABSTIME = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_TIMER_ABSTIME); }))) {
            mixin(enumMixinStr_TIMER_ABSTIME);
        }
    }




    static if(!is(typeof(CLOCK_TAI))) {
        private enum enumMixinStr_CLOCK_TAI = `enum CLOCK_TAI = 11;`;
        static if(is(typeof({ mixin(enumMixinStr_CLOCK_TAI); }))) {
            mixin(enumMixinStr_CLOCK_TAI);
        }
    }




    static if(!is(typeof(CLOCK_BOOTTIME_ALARM))) {
        private enum enumMixinStr_CLOCK_BOOTTIME_ALARM = `enum CLOCK_BOOTTIME_ALARM = 9;`;
        static if(is(typeof({ mixin(enumMixinStr_CLOCK_BOOTTIME_ALARM); }))) {
            mixin(enumMixinStr_CLOCK_BOOTTIME_ALARM);
        }
    }




    static if(!is(typeof(CLOCK_REALTIME_ALARM))) {
        private enum enumMixinStr_CLOCK_REALTIME_ALARM = `enum CLOCK_REALTIME_ALARM = 8;`;
        static if(is(typeof({ mixin(enumMixinStr_CLOCK_REALTIME_ALARM); }))) {
            mixin(enumMixinStr_CLOCK_REALTIME_ALARM);
        }
    }




    static if(!is(typeof(CLOCK_BOOTTIME))) {
        private enum enumMixinStr_CLOCK_BOOTTIME = `enum CLOCK_BOOTTIME = 7;`;
        static if(is(typeof({ mixin(enumMixinStr_CLOCK_BOOTTIME); }))) {
            mixin(enumMixinStr_CLOCK_BOOTTIME);
        }
    }




    static if(!is(typeof(CLOCK_MONOTONIC_COARSE))) {
        private enum enumMixinStr_CLOCK_MONOTONIC_COARSE = `enum CLOCK_MONOTONIC_COARSE = 6;`;
        static if(is(typeof({ mixin(enumMixinStr_CLOCK_MONOTONIC_COARSE); }))) {
            mixin(enumMixinStr_CLOCK_MONOTONIC_COARSE);
        }
    }




    static if(!is(typeof(CLOCK_REALTIME_COARSE))) {
        private enum enumMixinStr_CLOCK_REALTIME_COARSE = `enum CLOCK_REALTIME_COARSE = 5;`;
        static if(is(typeof({ mixin(enumMixinStr_CLOCK_REALTIME_COARSE); }))) {
            mixin(enumMixinStr_CLOCK_REALTIME_COARSE);
        }
    }




    static if(!is(typeof(CLOCK_MONOTONIC_RAW))) {
        private enum enumMixinStr_CLOCK_MONOTONIC_RAW = `enum CLOCK_MONOTONIC_RAW = 4;`;
        static if(is(typeof({ mixin(enumMixinStr_CLOCK_MONOTONIC_RAW); }))) {
            mixin(enumMixinStr_CLOCK_MONOTONIC_RAW);
        }
    }




    static if(!is(typeof(CLOCK_THREAD_CPUTIME_ID))) {
        private enum enumMixinStr_CLOCK_THREAD_CPUTIME_ID = `enum CLOCK_THREAD_CPUTIME_ID = 3;`;
        static if(is(typeof({ mixin(enumMixinStr_CLOCK_THREAD_CPUTIME_ID); }))) {
            mixin(enumMixinStr_CLOCK_THREAD_CPUTIME_ID);
        }
    }




    static if(!is(typeof(CLOCK_PROCESS_CPUTIME_ID))) {
        private enum enumMixinStr_CLOCK_PROCESS_CPUTIME_ID = `enum CLOCK_PROCESS_CPUTIME_ID = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_CLOCK_PROCESS_CPUTIME_ID); }))) {
            mixin(enumMixinStr_CLOCK_PROCESS_CPUTIME_ID);
        }
    }




    static if(!is(typeof(CLOCK_MONOTONIC))) {
        private enum enumMixinStr_CLOCK_MONOTONIC = `enum CLOCK_MONOTONIC = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_CLOCK_MONOTONIC); }))) {
            mixin(enumMixinStr_CLOCK_MONOTONIC);
        }
    }




    static if(!is(typeof(CLOCK_REALTIME))) {
        private enum enumMixinStr_CLOCK_REALTIME = `enum CLOCK_REALTIME = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_CLOCK_REALTIME); }))) {
            mixin(enumMixinStr_CLOCK_REALTIME);
        }
    }




    static if(!is(typeof(CLOCKS_PER_SEC))) {
        private enum enumMixinStr_CLOCKS_PER_SEC = `enum CLOCKS_PER_SEC = ( cast( __clock_t ) 1000000 );`;
        static if(is(typeof({ mixin(enumMixinStr_CLOCKS_PER_SEC); }))) {
            mixin(enumMixinStr_CLOCKS_PER_SEC);
        }
    }




    static if(!is(typeof(_BITS_TIME_H))) {
        private enum enumMixinStr__BITS_TIME_H = `enum _BITS_TIME_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__BITS_TIME_H); }))) {
            mixin(enumMixinStr__BITS_TIME_H);
        }
    }




    static if(!is(typeof(__ONCE_FLAG_INIT))) {
        private enum enumMixinStr___ONCE_FLAG_INIT = `enum __ONCE_FLAG_INIT = { 0 };`;
        static if(is(typeof({ mixin(enumMixinStr___ONCE_FLAG_INIT); }))) {
            mixin(enumMixinStr___ONCE_FLAG_INIT);
        }
    }




    static if(!is(typeof(_THREAD_SHARED_TYPES_H))) {
        private enum enumMixinStr__THREAD_SHARED_TYPES_H = `enum _THREAD_SHARED_TYPES_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__THREAD_SHARED_TYPES_H); }))) {
            mixin(enumMixinStr__THREAD_SHARED_TYPES_H);
        }
    }






    static if(!is(typeof(__PTHREAD_RWLOCK_ELISION_EXTRA))) {
        private enum enumMixinStr___PTHREAD_RWLOCK_ELISION_EXTRA = `enum __PTHREAD_RWLOCK_ELISION_EXTRA = 0 , { 0 , 0 , 0 , 0 , 0 , 0 , 0 };`;
        static if(is(typeof({ mixin(enumMixinStr___PTHREAD_RWLOCK_ELISION_EXTRA); }))) {
            mixin(enumMixinStr___PTHREAD_RWLOCK_ELISION_EXTRA);
        }
    }
    static if(!is(typeof(__PTHREAD_MUTEX_HAVE_PREV))) {
        private enum enumMixinStr___PTHREAD_MUTEX_HAVE_PREV = `enum __PTHREAD_MUTEX_HAVE_PREV = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___PTHREAD_MUTEX_HAVE_PREV); }))) {
            mixin(enumMixinStr___PTHREAD_MUTEX_HAVE_PREV);
        }
    }




    static if(!is(typeof(_THREAD_MUTEX_INTERNAL_H))) {
        private enum enumMixinStr__THREAD_MUTEX_INTERNAL_H = `enum _THREAD_MUTEX_INTERNAL_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__THREAD_MUTEX_INTERNAL_H); }))) {
            mixin(enumMixinStr__THREAD_MUTEX_INTERNAL_H);
        }
    }




    static if(!is(typeof(FOPEN_MAX))) {
        private enum enumMixinStr_FOPEN_MAX = `enum FOPEN_MAX = 16;`;
        static if(is(typeof({ mixin(enumMixinStr_FOPEN_MAX); }))) {
            mixin(enumMixinStr_FOPEN_MAX);
        }
    }




    static if(!is(typeof(L_ctermid))) {
        private enum enumMixinStr_L_ctermid = `enum L_ctermid = 9;`;
        static if(is(typeof({ mixin(enumMixinStr_L_ctermid); }))) {
            mixin(enumMixinStr_L_ctermid);
        }
    }




    static if(!is(typeof(FILENAME_MAX))) {
        private enum enumMixinStr_FILENAME_MAX = `enum FILENAME_MAX = 4096;`;
        static if(is(typeof({ mixin(enumMixinStr_FILENAME_MAX); }))) {
            mixin(enumMixinStr_FILENAME_MAX);
        }
    }




    static if(!is(typeof(TMP_MAX))) {
        private enum enumMixinStr_TMP_MAX = `enum TMP_MAX = 238328;`;
        static if(is(typeof({ mixin(enumMixinStr_TMP_MAX); }))) {
            mixin(enumMixinStr_TMP_MAX);
        }
    }




    static if(!is(typeof(L_tmpnam))) {
        private enum enumMixinStr_L_tmpnam = `enum L_tmpnam = 20;`;
        static if(is(typeof({ mixin(enumMixinStr_L_tmpnam); }))) {
            mixin(enumMixinStr_L_tmpnam);
        }
    }




    static if(!is(typeof(_BITS_STDIO_LIM_H))) {
        private enum enumMixinStr__BITS_STDIO_LIM_H = `enum _BITS_STDIO_LIM_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__BITS_STDIO_LIM_H); }))) {
            mixin(enumMixinStr__BITS_STDIO_LIM_H);
        }
    }




    static if(!is(typeof(_BITS_STDINT_UINTN_H))) {
        private enum enumMixinStr__BITS_STDINT_UINTN_H = `enum _BITS_STDINT_UINTN_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__BITS_STDINT_UINTN_H); }))) {
            mixin(enumMixinStr__BITS_STDINT_UINTN_H);
        }
    }




    static if(!is(typeof(_BITS_STDINT_INTN_H))) {
        private enum enumMixinStr__BITS_STDINT_INTN_H = `enum _BITS_STDINT_INTN_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__BITS_STDINT_INTN_H); }))) {
            mixin(enumMixinStr__BITS_STDINT_INTN_H);
        }
    }




    static if(!is(typeof(_BITS_SETJMP_H))) {
        private enum enumMixinStr__BITS_SETJMP_H = `enum _BITS_SETJMP_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__BITS_SETJMP_H); }))) {
            mixin(enumMixinStr__BITS_SETJMP_H);
        }
    }
    static if(!is(typeof(SCHED_RR))) {
        private enum enumMixinStr_SCHED_RR = `enum SCHED_RR = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_SCHED_RR); }))) {
            mixin(enumMixinStr_SCHED_RR);
        }
    }




    static if(!is(typeof(SCHED_FIFO))) {
        private enum enumMixinStr_SCHED_FIFO = `enum SCHED_FIFO = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_SCHED_FIFO); }))) {
            mixin(enumMixinStr_SCHED_FIFO);
        }
    }




    static if(!is(typeof(SCHED_OTHER))) {
        private enum enumMixinStr_SCHED_OTHER = `enum SCHED_OTHER = 0;`;
        static if(is(typeof({ mixin(enumMixinStr_SCHED_OTHER); }))) {
            mixin(enumMixinStr_SCHED_OTHER);
        }
    }




    static if(!is(typeof(_BITS_SCHED_H))) {
        private enum enumMixinStr__BITS_SCHED_H = `enum _BITS_SCHED_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__BITS_SCHED_H); }))) {
            mixin(enumMixinStr__BITS_SCHED_H);
        }
    }




    static if(!is(typeof(__have_pthread_attr_t))) {
        private enum enumMixinStr___have_pthread_attr_t = `enum __have_pthread_attr_t = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___have_pthread_attr_t); }))) {
            mixin(enumMixinStr___have_pthread_attr_t);
        }
    }




    static if(!is(typeof(_BITS_PTHREADTYPES_COMMON_H))) {
        private enum enumMixinStr__BITS_PTHREADTYPES_COMMON_H = `enum _BITS_PTHREADTYPES_COMMON_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__BITS_PTHREADTYPES_COMMON_H); }))) {
            mixin(enumMixinStr__BITS_PTHREADTYPES_COMMON_H);
        }
    }
    static if(!is(typeof(__SIZEOF_PTHREAD_BARRIERATTR_T))) {
        private enum enumMixinStr___SIZEOF_PTHREAD_BARRIERATTR_T = `enum __SIZEOF_PTHREAD_BARRIERATTR_T = 4;`;
        static if(is(typeof({ mixin(enumMixinStr___SIZEOF_PTHREAD_BARRIERATTR_T); }))) {
            mixin(enumMixinStr___SIZEOF_PTHREAD_BARRIERATTR_T);
        }
    }




    static if(!is(typeof(__SIZEOF_PTHREAD_RWLOCKATTR_T))) {
        private enum enumMixinStr___SIZEOF_PTHREAD_RWLOCKATTR_T = `enum __SIZEOF_PTHREAD_RWLOCKATTR_T = 8;`;
        static if(is(typeof({ mixin(enumMixinStr___SIZEOF_PTHREAD_RWLOCKATTR_T); }))) {
            mixin(enumMixinStr___SIZEOF_PTHREAD_RWLOCKATTR_T);
        }
    }




    static if(!is(typeof(__SIZEOF_PTHREAD_CONDATTR_T))) {
        private enum enumMixinStr___SIZEOF_PTHREAD_CONDATTR_T = `enum __SIZEOF_PTHREAD_CONDATTR_T = 4;`;
        static if(is(typeof({ mixin(enumMixinStr___SIZEOF_PTHREAD_CONDATTR_T); }))) {
            mixin(enumMixinStr___SIZEOF_PTHREAD_CONDATTR_T);
        }
    }




    static if(!is(typeof(__SIZEOF_PTHREAD_COND_T))) {
        private enum enumMixinStr___SIZEOF_PTHREAD_COND_T = `enum __SIZEOF_PTHREAD_COND_T = 48;`;
        static if(is(typeof({ mixin(enumMixinStr___SIZEOF_PTHREAD_COND_T); }))) {
            mixin(enumMixinStr___SIZEOF_PTHREAD_COND_T);
        }
    }




    static if(!is(typeof(__SIZEOF_PTHREAD_MUTEXATTR_T))) {
        private enum enumMixinStr___SIZEOF_PTHREAD_MUTEXATTR_T = `enum __SIZEOF_PTHREAD_MUTEXATTR_T = 4;`;
        static if(is(typeof({ mixin(enumMixinStr___SIZEOF_PTHREAD_MUTEXATTR_T); }))) {
            mixin(enumMixinStr___SIZEOF_PTHREAD_MUTEXATTR_T);
        }
    }




    static if(!is(typeof(__SIZEOF_PTHREAD_BARRIER_T))) {
        private enum enumMixinStr___SIZEOF_PTHREAD_BARRIER_T = `enum __SIZEOF_PTHREAD_BARRIER_T = 32;`;
        static if(is(typeof({ mixin(enumMixinStr___SIZEOF_PTHREAD_BARRIER_T); }))) {
            mixin(enumMixinStr___SIZEOF_PTHREAD_BARRIER_T);
        }
    }




    static if(!is(typeof(__SIZEOF_PTHREAD_RWLOCK_T))) {
        private enum enumMixinStr___SIZEOF_PTHREAD_RWLOCK_T = `enum __SIZEOF_PTHREAD_RWLOCK_T = 56;`;
        static if(is(typeof({ mixin(enumMixinStr___SIZEOF_PTHREAD_RWLOCK_T); }))) {
            mixin(enumMixinStr___SIZEOF_PTHREAD_RWLOCK_T);
        }
    }




    static if(!is(typeof(__SIZEOF_PTHREAD_ATTR_T))) {
        private enum enumMixinStr___SIZEOF_PTHREAD_ATTR_T = `enum __SIZEOF_PTHREAD_ATTR_T = 56;`;
        static if(is(typeof({ mixin(enumMixinStr___SIZEOF_PTHREAD_ATTR_T); }))) {
            mixin(enumMixinStr___SIZEOF_PTHREAD_ATTR_T);
        }
    }




    static if(!is(typeof(__SIZEOF_PTHREAD_MUTEX_T))) {
        private enum enumMixinStr___SIZEOF_PTHREAD_MUTEX_T = `enum __SIZEOF_PTHREAD_MUTEX_T = 40;`;
        static if(is(typeof({ mixin(enumMixinStr___SIZEOF_PTHREAD_MUTEX_T); }))) {
            mixin(enumMixinStr___SIZEOF_PTHREAD_MUTEX_T);
        }
    }




    static if(!is(typeof(_BITS_PTHREADTYPES_ARCH_H))) {
        private enum enumMixinStr__BITS_PTHREADTYPES_ARCH_H = `enum _BITS_PTHREADTYPES_ARCH_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__BITS_PTHREADTYPES_ARCH_H); }))) {
            mixin(enumMixinStr__BITS_PTHREADTYPES_ARCH_H);
        }
    }




    static if(!is(typeof(RE_DUP_MAX))) {
        private enum enumMixinStr_RE_DUP_MAX = `enum RE_DUP_MAX = ( 0x7fff );`;
        static if(is(typeof({ mixin(enumMixinStr_RE_DUP_MAX); }))) {
            mixin(enumMixinStr_RE_DUP_MAX);
        }
    }




    static if(!is(typeof(CHARCLASS_NAME_MAX))) {
        private enum enumMixinStr_CHARCLASS_NAME_MAX = `enum CHARCLASS_NAME_MAX = 2048;`;
        static if(is(typeof({ mixin(enumMixinStr_CHARCLASS_NAME_MAX); }))) {
            mixin(enumMixinStr_CHARCLASS_NAME_MAX);
        }
    }




    static if(!is(typeof(LINE_MAX))) {
        private enum enumMixinStr_LINE_MAX = `enum LINE_MAX = _POSIX2_LINE_MAX;`;
        static if(is(typeof({ mixin(enumMixinStr_LINE_MAX); }))) {
            mixin(enumMixinStr_LINE_MAX);
        }
    }




    static if(!is(typeof(EXPR_NEST_MAX))) {
        private enum enumMixinStr_EXPR_NEST_MAX = `enum EXPR_NEST_MAX = _POSIX2_EXPR_NEST_MAX;`;
        static if(is(typeof({ mixin(enumMixinStr_EXPR_NEST_MAX); }))) {
            mixin(enumMixinStr_EXPR_NEST_MAX);
        }
    }




    static if(!is(typeof(COLL_WEIGHTS_MAX))) {
        private enum enumMixinStr_COLL_WEIGHTS_MAX = `enum COLL_WEIGHTS_MAX = 255;`;
        static if(is(typeof({ mixin(enumMixinStr_COLL_WEIGHTS_MAX); }))) {
            mixin(enumMixinStr_COLL_WEIGHTS_MAX);
        }
    }




    static if(!is(typeof(BC_STRING_MAX))) {
        private enum enumMixinStr_BC_STRING_MAX = `enum BC_STRING_MAX = _POSIX2_BC_STRING_MAX;`;
        static if(is(typeof({ mixin(enumMixinStr_BC_STRING_MAX); }))) {
            mixin(enumMixinStr_BC_STRING_MAX);
        }
    }




    static if(!is(typeof(BC_SCALE_MAX))) {
        private enum enumMixinStr_BC_SCALE_MAX = `enum BC_SCALE_MAX = _POSIX2_BC_SCALE_MAX;`;
        static if(is(typeof({ mixin(enumMixinStr_BC_SCALE_MAX); }))) {
            mixin(enumMixinStr_BC_SCALE_MAX);
        }
    }




    static if(!is(typeof(BC_DIM_MAX))) {
        private enum enumMixinStr_BC_DIM_MAX = `enum BC_DIM_MAX = _POSIX2_BC_DIM_MAX;`;
        static if(is(typeof({ mixin(enumMixinStr_BC_DIM_MAX); }))) {
            mixin(enumMixinStr_BC_DIM_MAX);
        }
    }




    static if(!is(typeof(BC_BASE_MAX))) {
        private enum enumMixinStr_BC_BASE_MAX = `enum BC_BASE_MAX = _POSIX2_BC_BASE_MAX;`;
        static if(is(typeof({ mixin(enumMixinStr_BC_BASE_MAX); }))) {
            mixin(enumMixinStr_BC_BASE_MAX);
        }
    }




    static if(!is(typeof(_POSIX2_CHARCLASS_NAME_MAX))) {
        private enum enumMixinStr__POSIX2_CHARCLASS_NAME_MAX = `enum _POSIX2_CHARCLASS_NAME_MAX = 14;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX2_CHARCLASS_NAME_MAX); }))) {
            mixin(enumMixinStr__POSIX2_CHARCLASS_NAME_MAX);
        }
    }




    static if(!is(typeof(_POSIX2_RE_DUP_MAX))) {
        private enum enumMixinStr__POSIX2_RE_DUP_MAX = `enum _POSIX2_RE_DUP_MAX = 255;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX2_RE_DUP_MAX); }))) {
            mixin(enumMixinStr__POSIX2_RE_DUP_MAX);
        }
    }




    static if(!is(typeof(_POSIX2_LINE_MAX))) {
        private enum enumMixinStr__POSIX2_LINE_MAX = `enum _POSIX2_LINE_MAX = 2048;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX2_LINE_MAX); }))) {
            mixin(enumMixinStr__POSIX2_LINE_MAX);
        }
    }




    static if(!is(typeof(_POSIX2_EXPR_NEST_MAX))) {
        private enum enumMixinStr__POSIX2_EXPR_NEST_MAX = `enum _POSIX2_EXPR_NEST_MAX = 32;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX2_EXPR_NEST_MAX); }))) {
            mixin(enumMixinStr__POSIX2_EXPR_NEST_MAX);
        }
    }




    static if(!is(typeof(_POSIX2_COLL_WEIGHTS_MAX))) {
        private enum enumMixinStr__POSIX2_COLL_WEIGHTS_MAX = `enum _POSIX2_COLL_WEIGHTS_MAX = 2;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX2_COLL_WEIGHTS_MAX); }))) {
            mixin(enumMixinStr__POSIX2_COLL_WEIGHTS_MAX);
        }
    }




    static if(!is(typeof(_POSIX2_BC_STRING_MAX))) {
        private enum enumMixinStr__POSIX2_BC_STRING_MAX = `enum _POSIX2_BC_STRING_MAX = 1000;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX2_BC_STRING_MAX); }))) {
            mixin(enumMixinStr__POSIX2_BC_STRING_MAX);
        }
    }




    static if(!is(typeof(_POSIX2_BC_SCALE_MAX))) {
        private enum enumMixinStr__POSIX2_BC_SCALE_MAX = `enum _POSIX2_BC_SCALE_MAX = 99;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX2_BC_SCALE_MAX); }))) {
            mixin(enumMixinStr__POSIX2_BC_SCALE_MAX);
        }
    }




    static if(!is(typeof(_POSIX2_BC_DIM_MAX))) {
        private enum enumMixinStr__POSIX2_BC_DIM_MAX = `enum _POSIX2_BC_DIM_MAX = 2048;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX2_BC_DIM_MAX); }))) {
            mixin(enumMixinStr__POSIX2_BC_DIM_MAX);
        }
    }




    static if(!is(typeof(_POSIX2_BC_BASE_MAX))) {
        private enum enumMixinStr__POSIX2_BC_BASE_MAX = `enum _POSIX2_BC_BASE_MAX = 99;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX2_BC_BASE_MAX); }))) {
            mixin(enumMixinStr__POSIX2_BC_BASE_MAX);
        }
    }




    static if(!is(typeof(_BITS_POSIX2_LIM_H))) {
        private enum enumMixinStr__BITS_POSIX2_LIM_H = `enum _BITS_POSIX2_LIM_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__BITS_POSIX2_LIM_H); }))) {
            mixin(enumMixinStr__BITS_POSIX2_LIM_H);
        }
    }




    static if(!is(typeof(SSIZE_MAX))) {
        private enum enumMixinStr_SSIZE_MAX = `enum SSIZE_MAX = LONG_MAX;`;
        static if(is(typeof({ mixin(enumMixinStr_SSIZE_MAX); }))) {
            mixin(enumMixinStr_SSIZE_MAX);
        }
    }




    static if(!is(typeof(_POSIX_CLOCKRES_MIN))) {
        private enum enumMixinStr__POSIX_CLOCKRES_MIN = `enum _POSIX_CLOCKRES_MIN = 20000000;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX_CLOCKRES_MIN); }))) {
            mixin(enumMixinStr__POSIX_CLOCKRES_MIN);
        }
    }




    static if(!is(typeof(_POSIX_TZNAME_MAX))) {
        private enum enumMixinStr__POSIX_TZNAME_MAX = `enum _POSIX_TZNAME_MAX = 6;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX_TZNAME_MAX); }))) {
            mixin(enumMixinStr__POSIX_TZNAME_MAX);
        }
    }




    static if(!is(typeof(_POSIX_TTY_NAME_MAX))) {
        private enum enumMixinStr__POSIX_TTY_NAME_MAX = `enum _POSIX_TTY_NAME_MAX = 9;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX_TTY_NAME_MAX); }))) {
            mixin(enumMixinStr__POSIX_TTY_NAME_MAX);
        }
    }




    static if(!is(typeof(_POSIX_TIMER_MAX))) {
        private enum enumMixinStr__POSIX_TIMER_MAX = `enum _POSIX_TIMER_MAX = 32;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX_TIMER_MAX); }))) {
            mixin(enumMixinStr__POSIX_TIMER_MAX);
        }
    }




    static if(!is(typeof(_POSIX_SYMLOOP_MAX))) {
        private enum enumMixinStr__POSIX_SYMLOOP_MAX = `enum _POSIX_SYMLOOP_MAX = 8;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX_SYMLOOP_MAX); }))) {
            mixin(enumMixinStr__POSIX_SYMLOOP_MAX);
        }
    }




    static if(!is(typeof(_POSIX_SYMLINK_MAX))) {
        private enum enumMixinStr__POSIX_SYMLINK_MAX = `enum _POSIX_SYMLINK_MAX = 255;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX_SYMLINK_MAX); }))) {
            mixin(enumMixinStr__POSIX_SYMLINK_MAX);
        }
    }




    static if(!is(typeof(_POSIX_STREAM_MAX))) {
        private enum enumMixinStr__POSIX_STREAM_MAX = `enum _POSIX_STREAM_MAX = 8;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX_STREAM_MAX); }))) {
            mixin(enumMixinStr__POSIX_STREAM_MAX);
        }
    }




    static if(!is(typeof(_POSIX_SSIZE_MAX))) {
        private enum enumMixinStr__POSIX_SSIZE_MAX = `enum _POSIX_SSIZE_MAX = 32767;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX_SSIZE_MAX); }))) {
            mixin(enumMixinStr__POSIX_SSIZE_MAX);
        }
    }




    static if(!is(typeof(_POSIX_SIGQUEUE_MAX))) {
        private enum enumMixinStr__POSIX_SIGQUEUE_MAX = `enum _POSIX_SIGQUEUE_MAX = 32;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX_SIGQUEUE_MAX); }))) {
            mixin(enumMixinStr__POSIX_SIGQUEUE_MAX);
        }
    }




    static if(!is(typeof(_POSIX_SEM_VALUE_MAX))) {
        private enum enumMixinStr__POSIX_SEM_VALUE_MAX = `enum _POSIX_SEM_VALUE_MAX = 32767;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX_SEM_VALUE_MAX); }))) {
            mixin(enumMixinStr__POSIX_SEM_VALUE_MAX);
        }
    }




    static if(!is(typeof(_POSIX_SEM_NSEMS_MAX))) {
        private enum enumMixinStr__POSIX_SEM_NSEMS_MAX = `enum _POSIX_SEM_NSEMS_MAX = 256;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX_SEM_NSEMS_MAX); }))) {
            mixin(enumMixinStr__POSIX_SEM_NSEMS_MAX);
        }
    }




    static if(!is(typeof(_POSIX_RTSIG_MAX))) {
        private enum enumMixinStr__POSIX_RTSIG_MAX = `enum _POSIX_RTSIG_MAX = 8;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX_RTSIG_MAX); }))) {
            mixin(enumMixinStr__POSIX_RTSIG_MAX);
        }
    }




    static if(!is(typeof(_POSIX_RE_DUP_MAX))) {
        private enum enumMixinStr__POSIX_RE_DUP_MAX = `enum _POSIX_RE_DUP_MAX = 255;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX_RE_DUP_MAX); }))) {
            mixin(enumMixinStr__POSIX_RE_DUP_MAX);
        }
    }




    static if(!is(typeof(_POSIX_PIPE_BUF))) {
        private enum enumMixinStr__POSIX_PIPE_BUF = `enum _POSIX_PIPE_BUF = 512;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX_PIPE_BUF); }))) {
            mixin(enumMixinStr__POSIX_PIPE_BUF);
        }
    }




    static if(!is(typeof(_POSIX_PATH_MAX))) {
        private enum enumMixinStr__POSIX_PATH_MAX = `enum _POSIX_PATH_MAX = 256;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX_PATH_MAX); }))) {
            mixin(enumMixinStr__POSIX_PATH_MAX);
        }
    }




    static if(!is(typeof(_POSIX_OPEN_MAX))) {
        private enum enumMixinStr__POSIX_OPEN_MAX = `enum _POSIX_OPEN_MAX = 20;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX_OPEN_MAX); }))) {
            mixin(enumMixinStr__POSIX_OPEN_MAX);
        }
    }




    static if(!is(typeof(_POSIX_NGROUPS_MAX))) {
        private enum enumMixinStr__POSIX_NGROUPS_MAX = `enum _POSIX_NGROUPS_MAX = 8;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX_NGROUPS_MAX); }))) {
            mixin(enumMixinStr__POSIX_NGROUPS_MAX);
        }
    }




    static if(!is(typeof(_POSIX_NAME_MAX))) {
        private enum enumMixinStr__POSIX_NAME_MAX = `enum _POSIX_NAME_MAX = 14;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX_NAME_MAX); }))) {
            mixin(enumMixinStr__POSIX_NAME_MAX);
        }
    }




    static if(!is(typeof(_POSIX_MQ_PRIO_MAX))) {
        private enum enumMixinStr__POSIX_MQ_PRIO_MAX = `enum _POSIX_MQ_PRIO_MAX = 32;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX_MQ_PRIO_MAX); }))) {
            mixin(enumMixinStr__POSIX_MQ_PRIO_MAX);
        }
    }




    static if(!is(typeof(_POSIX_MQ_OPEN_MAX))) {
        private enum enumMixinStr__POSIX_MQ_OPEN_MAX = `enum _POSIX_MQ_OPEN_MAX = 8;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX_MQ_OPEN_MAX); }))) {
            mixin(enumMixinStr__POSIX_MQ_OPEN_MAX);
        }
    }




    static if(!is(typeof(_POSIX_MAX_INPUT))) {
        private enum enumMixinStr__POSIX_MAX_INPUT = `enum _POSIX_MAX_INPUT = 255;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX_MAX_INPUT); }))) {
            mixin(enumMixinStr__POSIX_MAX_INPUT);
        }
    }




    static if(!is(typeof(_POSIX_MAX_CANON))) {
        private enum enumMixinStr__POSIX_MAX_CANON = `enum _POSIX_MAX_CANON = 255;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX_MAX_CANON); }))) {
            mixin(enumMixinStr__POSIX_MAX_CANON);
        }
    }




    static if(!is(typeof(_POSIX_LOGIN_NAME_MAX))) {
        private enum enumMixinStr__POSIX_LOGIN_NAME_MAX = `enum _POSIX_LOGIN_NAME_MAX = 9;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX_LOGIN_NAME_MAX); }))) {
            mixin(enumMixinStr__POSIX_LOGIN_NAME_MAX);
        }
    }




    static if(!is(typeof(_POSIX_LINK_MAX))) {
        private enum enumMixinStr__POSIX_LINK_MAX = `enum _POSIX_LINK_MAX = 8;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX_LINK_MAX); }))) {
            mixin(enumMixinStr__POSIX_LINK_MAX);
        }
    }




    static if(!is(typeof(_POSIX_HOST_NAME_MAX))) {
        private enum enumMixinStr__POSIX_HOST_NAME_MAX = `enum _POSIX_HOST_NAME_MAX = 255;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX_HOST_NAME_MAX); }))) {
            mixin(enumMixinStr__POSIX_HOST_NAME_MAX);
        }
    }




    static if(!is(typeof(_POSIX_DELAYTIMER_MAX))) {
        private enum enumMixinStr__POSIX_DELAYTIMER_MAX = `enum _POSIX_DELAYTIMER_MAX = 32;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX_DELAYTIMER_MAX); }))) {
            mixin(enumMixinStr__POSIX_DELAYTIMER_MAX);
        }
    }




    static if(!is(typeof(_POSIX_CHILD_MAX))) {
        private enum enumMixinStr__POSIX_CHILD_MAX = `enum _POSIX_CHILD_MAX = 25;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX_CHILD_MAX); }))) {
            mixin(enumMixinStr__POSIX_CHILD_MAX);
        }
    }




    static if(!is(typeof(_POSIX_ARG_MAX))) {
        private enum enumMixinStr__POSIX_ARG_MAX = `enum _POSIX_ARG_MAX = 4096;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX_ARG_MAX); }))) {
            mixin(enumMixinStr__POSIX_ARG_MAX);
        }
    }




    static if(!is(typeof(_POSIX_AIO_MAX))) {
        private enum enumMixinStr__POSIX_AIO_MAX = `enum _POSIX_AIO_MAX = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX_AIO_MAX); }))) {
            mixin(enumMixinStr__POSIX_AIO_MAX);
        }
    }




    static if(!is(typeof(_POSIX_AIO_LISTIO_MAX))) {
        private enum enumMixinStr__POSIX_AIO_LISTIO_MAX = `enum _POSIX_AIO_LISTIO_MAX = 2;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX_AIO_LISTIO_MAX); }))) {
            mixin(enumMixinStr__POSIX_AIO_LISTIO_MAX);
        }
    }




    static if(!is(typeof(_BITS_POSIX1_LIM_H))) {
        private enum enumMixinStr__BITS_POSIX1_LIM_H = `enum _BITS_POSIX1_LIM_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__BITS_POSIX1_LIM_H); }))) {
            mixin(enumMixinStr__BITS_POSIX1_LIM_H);
        }
    }




    static if(!is(typeof(__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI))) {
        private enum enumMixinStr___LDOUBLE_REDIRECTS_TO_FLOAT128_ABI = `enum __LDOUBLE_REDIRECTS_TO_FLOAT128_ABI = 0;`;
        static if(is(typeof({ mixin(enumMixinStr___LDOUBLE_REDIRECTS_TO_FLOAT128_ABI); }))) {
            mixin(enumMixinStr___LDOUBLE_REDIRECTS_TO_FLOAT128_ABI);
        }
    }




    static if(!is(typeof(SEM_VALUE_MAX))) {
        private enum enumMixinStr_SEM_VALUE_MAX = `enum SEM_VALUE_MAX = ( 2147483647 );`;
        static if(is(typeof({ mixin(enumMixinStr_SEM_VALUE_MAX); }))) {
            mixin(enumMixinStr_SEM_VALUE_MAX);
        }
    }




    static if(!is(typeof(MQ_PRIO_MAX))) {
        private enum enumMixinStr_MQ_PRIO_MAX = `enum MQ_PRIO_MAX = 32768;`;
        static if(is(typeof({ mixin(enumMixinStr_MQ_PRIO_MAX); }))) {
            mixin(enumMixinStr_MQ_PRIO_MAX);
        }
    }




    static if(!is(typeof(HOST_NAME_MAX))) {
        private enum enumMixinStr_HOST_NAME_MAX = `enum HOST_NAME_MAX = 64;`;
        static if(is(typeof({ mixin(enumMixinStr_HOST_NAME_MAX); }))) {
            mixin(enumMixinStr_HOST_NAME_MAX);
        }
    }




    static if(!is(typeof(LOGIN_NAME_MAX))) {
        private enum enumMixinStr_LOGIN_NAME_MAX = `enum LOGIN_NAME_MAX = 256;`;
        static if(is(typeof({ mixin(enumMixinStr_LOGIN_NAME_MAX); }))) {
            mixin(enumMixinStr_LOGIN_NAME_MAX);
        }
    }




    static if(!is(typeof(TTY_NAME_MAX))) {
        private enum enumMixinStr_TTY_NAME_MAX = `enum TTY_NAME_MAX = 32;`;
        static if(is(typeof({ mixin(enumMixinStr_TTY_NAME_MAX); }))) {
            mixin(enumMixinStr_TTY_NAME_MAX);
        }
    }




    static if(!is(typeof(DELAYTIMER_MAX))) {
        private enum enumMixinStr_DELAYTIMER_MAX = `enum DELAYTIMER_MAX = 2147483647;`;
        static if(is(typeof({ mixin(enumMixinStr_DELAYTIMER_MAX); }))) {
            mixin(enumMixinStr_DELAYTIMER_MAX);
        }
    }




    static if(!is(typeof(PTHREAD_STACK_MIN))) {
        private enum enumMixinStr_PTHREAD_STACK_MIN = `enum PTHREAD_STACK_MIN = 16384;`;
        static if(is(typeof({ mixin(enumMixinStr_PTHREAD_STACK_MIN); }))) {
            mixin(enumMixinStr_PTHREAD_STACK_MIN);
        }
    }




    static if(!is(typeof(AIO_PRIO_DELTA_MAX))) {
        private enum enumMixinStr_AIO_PRIO_DELTA_MAX = `enum AIO_PRIO_DELTA_MAX = 20;`;
        static if(is(typeof({ mixin(enumMixinStr_AIO_PRIO_DELTA_MAX); }))) {
            mixin(enumMixinStr_AIO_PRIO_DELTA_MAX);
        }
    }




    static if(!is(typeof(_POSIX_THREAD_THREADS_MAX))) {
        private enum enumMixinStr__POSIX_THREAD_THREADS_MAX = `enum _POSIX_THREAD_THREADS_MAX = 64;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX_THREAD_THREADS_MAX); }))) {
            mixin(enumMixinStr__POSIX_THREAD_THREADS_MAX);
        }
    }




    static if(!is(typeof(PTHREAD_DESTRUCTOR_ITERATIONS))) {
        private enum enumMixinStr_PTHREAD_DESTRUCTOR_ITERATIONS = `enum PTHREAD_DESTRUCTOR_ITERATIONS = _POSIX_THREAD_DESTRUCTOR_ITERATIONS;`;
        static if(is(typeof({ mixin(enumMixinStr_PTHREAD_DESTRUCTOR_ITERATIONS); }))) {
            mixin(enumMixinStr_PTHREAD_DESTRUCTOR_ITERATIONS);
        }
    }




    static if(!is(typeof(_POSIX_THREAD_DESTRUCTOR_ITERATIONS))) {
        private enum enumMixinStr__POSIX_THREAD_DESTRUCTOR_ITERATIONS = `enum _POSIX_THREAD_DESTRUCTOR_ITERATIONS = 4;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX_THREAD_DESTRUCTOR_ITERATIONS); }))) {
            mixin(enumMixinStr__POSIX_THREAD_DESTRUCTOR_ITERATIONS);
        }
    }




    static if(!is(typeof(PTHREAD_KEYS_MAX))) {
        private enum enumMixinStr_PTHREAD_KEYS_MAX = `enum PTHREAD_KEYS_MAX = 1024;`;
        static if(is(typeof({ mixin(enumMixinStr_PTHREAD_KEYS_MAX); }))) {
            mixin(enumMixinStr_PTHREAD_KEYS_MAX);
        }
    }




    static if(!is(typeof(_POSIX_THREAD_KEYS_MAX))) {
        private enum enumMixinStr__POSIX_THREAD_KEYS_MAX = `enum _POSIX_THREAD_KEYS_MAX = 128;`;
        static if(is(typeof({ mixin(enumMixinStr__POSIX_THREAD_KEYS_MAX); }))) {
            mixin(enumMixinStr__POSIX_THREAD_KEYS_MAX);
        }
    }
    static if(!is(typeof(__GLIBC_USE_IEC_60559_TYPES_EXT))) {
        private enum enumMixinStr___GLIBC_USE_IEC_60559_TYPES_EXT = `enum __GLIBC_USE_IEC_60559_TYPES_EXT = 0;`;
        static if(is(typeof({ mixin(enumMixinStr___GLIBC_USE_IEC_60559_TYPES_EXT); }))) {
            mixin(enumMixinStr___GLIBC_USE_IEC_60559_TYPES_EXT);
        }
    }




    static if(!is(typeof(__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X))) {
        private enum enumMixinStr___GLIBC_USE_IEC_60559_FUNCS_EXT_C2X = `enum __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X = 0;`;
        static if(is(typeof({ mixin(enumMixinStr___GLIBC_USE_IEC_60559_FUNCS_EXT_C2X); }))) {
            mixin(enumMixinStr___GLIBC_USE_IEC_60559_FUNCS_EXT_C2X);
        }
    }




    static if(!is(typeof(__GLIBC_USE_IEC_60559_FUNCS_EXT))) {
        private enum enumMixinStr___GLIBC_USE_IEC_60559_FUNCS_EXT = `enum __GLIBC_USE_IEC_60559_FUNCS_EXT = 0;`;
        static if(is(typeof({ mixin(enumMixinStr___GLIBC_USE_IEC_60559_FUNCS_EXT); }))) {
            mixin(enumMixinStr___GLIBC_USE_IEC_60559_FUNCS_EXT);
        }
    }




    static if(!is(typeof(__GLIBC_USE_IEC_60559_BFP_EXT_C2X))) {
        private enum enumMixinStr___GLIBC_USE_IEC_60559_BFP_EXT_C2X = `enum __GLIBC_USE_IEC_60559_BFP_EXT_C2X = 0;`;
        static if(is(typeof({ mixin(enumMixinStr___GLIBC_USE_IEC_60559_BFP_EXT_C2X); }))) {
            mixin(enumMixinStr___GLIBC_USE_IEC_60559_BFP_EXT_C2X);
        }
    }




    static if(!is(typeof(__GLIBC_USE_IEC_60559_BFP_EXT))) {
        private enum enumMixinStr___GLIBC_USE_IEC_60559_BFP_EXT = `enum __GLIBC_USE_IEC_60559_BFP_EXT = 0;`;
        static if(is(typeof({ mixin(enumMixinStr___GLIBC_USE_IEC_60559_BFP_EXT); }))) {
            mixin(enumMixinStr___GLIBC_USE_IEC_60559_BFP_EXT);
        }
    }




    static if(!is(typeof(__GLIBC_USE_LIB_EXT2))) {
        private enum enumMixinStr___GLIBC_USE_LIB_EXT2 = `enum __GLIBC_USE_LIB_EXT2 = 0;`;
        static if(is(typeof({ mixin(enumMixinStr___GLIBC_USE_LIB_EXT2); }))) {
            mixin(enumMixinStr___GLIBC_USE_LIB_EXT2);
        }
    }




    static if(!is(typeof(__HAVE_FLOAT64X_LONG_DOUBLE))) {
        private enum enumMixinStr___HAVE_FLOAT64X_LONG_DOUBLE = `enum __HAVE_FLOAT64X_LONG_DOUBLE = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___HAVE_FLOAT64X_LONG_DOUBLE); }))) {
            mixin(enumMixinStr___HAVE_FLOAT64X_LONG_DOUBLE);
        }
    }




    static if(!is(typeof(__HAVE_FLOAT64X))) {
        private enum enumMixinStr___HAVE_FLOAT64X = `enum __HAVE_FLOAT64X = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___HAVE_FLOAT64X); }))) {
            mixin(enumMixinStr___HAVE_FLOAT64X);
        }
    }




    static if(!is(typeof(__HAVE_DISTINCT_FLOAT128))) {
        private enum enumMixinStr___HAVE_DISTINCT_FLOAT128 = `enum __HAVE_DISTINCT_FLOAT128 = 0;`;
        static if(is(typeof({ mixin(enumMixinStr___HAVE_DISTINCT_FLOAT128); }))) {
            mixin(enumMixinStr___HAVE_DISTINCT_FLOAT128);
        }
    }




    static if(!is(typeof(__HAVE_FLOAT128))) {
        private enum enumMixinStr___HAVE_FLOAT128 = `enum __HAVE_FLOAT128 = 0;`;
        static if(is(typeof({ mixin(enumMixinStr___HAVE_FLOAT128); }))) {
            mixin(enumMixinStr___HAVE_FLOAT128);
        }
    }
    static if(!is(typeof(__CFLOAT64X))) {
        private enum enumMixinStr___CFLOAT64X = `enum __CFLOAT64X = _Complex long double;`;
        static if(is(typeof({ mixin(enumMixinStr___CFLOAT64X); }))) {
            mixin(enumMixinStr___CFLOAT64X);
        }
    }




    static if(!is(typeof(__CFLOAT32X))) {
        private enum enumMixinStr___CFLOAT32X = `enum __CFLOAT32X = _Complex double;`;
        static if(is(typeof({ mixin(enumMixinStr___CFLOAT32X); }))) {
            mixin(enumMixinStr___CFLOAT32X);
        }
    }




    static if(!is(typeof(__CFLOAT64))) {
        private enum enumMixinStr___CFLOAT64 = `enum __CFLOAT64 = _Complex double;`;
        static if(is(typeof({ mixin(enumMixinStr___CFLOAT64); }))) {
            mixin(enumMixinStr___CFLOAT64);
        }
    }




    static if(!is(typeof(__CFLOAT32))) {
        private enum enumMixinStr___CFLOAT32 = `enum __CFLOAT32 = _Complex float;`;
        static if(is(typeof({ mixin(enumMixinStr___CFLOAT32); }))) {
            mixin(enumMixinStr___CFLOAT32);
        }
    }
    static if(!is(typeof(__HAVE_FLOATN_NOT_TYPEDEF))) {
        private enum enumMixinStr___HAVE_FLOATN_NOT_TYPEDEF = `enum __HAVE_FLOATN_NOT_TYPEDEF = 0;`;
        static if(is(typeof({ mixin(enumMixinStr___HAVE_FLOATN_NOT_TYPEDEF); }))) {
            mixin(enumMixinStr___HAVE_FLOATN_NOT_TYPEDEF);
        }
    }




    static if(!is(typeof(__HAVE_FLOAT128_UNLIKE_LDBL))) {
        private enum enumMixinStr___HAVE_FLOAT128_UNLIKE_LDBL = `enum __HAVE_FLOAT128_UNLIKE_LDBL = ( 0 && 64 != 113 );`;
        static if(is(typeof({ mixin(enumMixinStr___HAVE_FLOAT128_UNLIKE_LDBL); }))) {
            mixin(enumMixinStr___HAVE_FLOAT128_UNLIKE_LDBL);
        }
    }




    static if(!is(typeof(__HAVE_DISTINCT_FLOAT128X))) {
        private enum enumMixinStr___HAVE_DISTINCT_FLOAT128X = `enum __HAVE_DISTINCT_FLOAT128X = __HAVE_FLOAT128X;`;
        static if(is(typeof({ mixin(enumMixinStr___HAVE_DISTINCT_FLOAT128X); }))) {
            mixin(enumMixinStr___HAVE_DISTINCT_FLOAT128X);
        }
    }




    static if(!is(typeof(__HAVE_DISTINCT_FLOAT64X))) {
        private enum enumMixinStr___HAVE_DISTINCT_FLOAT64X = `enum __HAVE_DISTINCT_FLOAT64X = 0;`;
        static if(is(typeof({ mixin(enumMixinStr___HAVE_DISTINCT_FLOAT64X); }))) {
            mixin(enumMixinStr___HAVE_DISTINCT_FLOAT64X);
        }
    }




    static if(!is(typeof(__HAVE_DISTINCT_FLOAT32X))) {
        private enum enumMixinStr___HAVE_DISTINCT_FLOAT32X = `enum __HAVE_DISTINCT_FLOAT32X = 0;`;
        static if(is(typeof({ mixin(enumMixinStr___HAVE_DISTINCT_FLOAT32X); }))) {
            mixin(enumMixinStr___HAVE_DISTINCT_FLOAT32X);
        }
    }




    static if(!is(typeof(__HAVE_DISTINCT_FLOAT64))) {
        private enum enumMixinStr___HAVE_DISTINCT_FLOAT64 = `enum __HAVE_DISTINCT_FLOAT64 = 0;`;
        static if(is(typeof({ mixin(enumMixinStr___HAVE_DISTINCT_FLOAT64); }))) {
            mixin(enumMixinStr___HAVE_DISTINCT_FLOAT64);
        }
    }




    static if(!is(typeof(__HAVE_DISTINCT_FLOAT32))) {
        private enum enumMixinStr___HAVE_DISTINCT_FLOAT32 = `enum __HAVE_DISTINCT_FLOAT32 = 0;`;
        static if(is(typeof({ mixin(enumMixinStr___HAVE_DISTINCT_FLOAT32); }))) {
            mixin(enumMixinStr___HAVE_DISTINCT_FLOAT32);
        }
    }




    static if(!is(typeof(__HAVE_DISTINCT_FLOAT16))) {
        private enum enumMixinStr___HAVE_DISTINCT_FLOAT16 = `enum __HAVE_DISTINCT_FLOAT16 = __HAVE_FLOAT16;`;
        static if(is(typeof({ mixin(enumMixinStr___HAVE_DISTINCT_FLOAT16); }))) {
            mixin(enumMixinStr___HAVE_DISTINCT_FLOAT16);
        }
    }




    static if(!is(typeof(__HAVE_FLOAT128X))) {
        private enum enumMixinStr___HAVE_FLOAT128X = `enum __HAVE_FLOAT128X = 0;`;
        static if(is(typeof({ mixin(enumMixinStr___HAVE_FLOAT128X); }))) {
            mixin(enumMixinStr___HAVE_FLOAT128X);
        }
    }




    static if(!is(typeof(__HAVE_FLOAT32X))) {
        private enum enumMixinStr___HAVE_FLOAT32X = `enum __HAVE_FLOAT32X = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___HAVE_FLOAT32X); }))) {
            mixin(enumMixinStr___HAVE_FLOAT32X);
        }
    }




    static if(!is(typeof(__HAVE_FLOAT64))) {
        private enum enumMixinStr___HAVE_FLOAT64 = `enum __HAVE_FLOAT64 = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___HAVE_FLOAT64); }))) {
            mixin(enumMixinStr___HAVE_FLOAT64);
        }
    }




    static if(!is(typeof(__HAVE_FLOAT32))) {
        private enum enumMixinStr___HAVE_FLOAT32 = `enum __HAVE_FLOAT32 = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___HAVE_FLOAT32); }))) {
            mixin(enumMixinStr___HAVE_FLOAT32);
        }
    }




    static if(!is(typeof(__HAVE_FLOAT16))) {
        private enum enumMixinStr___HAVE_FLOAT16 = `enum __HAVE_FLOAT16 = 0;`;
        static if(is(typeof({ mixin(enumMixinStr___HAVE_FLOAT16); }))) {
            mixin(enumMixinStr___HAVE_FLOAT16);
        }
    }






    static if(!is(typeof(ENOTSUP))) {
        private enum enumMixinStr_ENOTSUP = `enum ENOTSUP = EOPNOTSUPP;`;
        static if(is(typeof({ mixin(enumMixinStr_ENOTSUP); }))) {
            mixin(enumMixinStr_ENOTSUP);
        }
    }




    static if(!is(typeof(_BITS_ERRNO_H))) {
        private enum enumMixinStr__BITS_ERRNO_H = `enum _BITS_ERRNO_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__BITS_ERRNO_H); }))) {
            mixin(enumMixinStr__BITS_ERRNO_H);
        }
    }




    static if(!is(typeof(__BYTE_ORDER))) {
        private enum enumMixinStr___BYTE_ORDER = `enum __BYTE_ORDER = __LITTLE_ENDIAN;`;
        static if(is(typeof({ mixin(enumMixinStr___BYTE_ORDER); }))) {
            mixin(enumMixinStr___BYTE_ORDER);
        }
    }




    static if(!is(typeof(_BITS_ENDIANNESS_H))) {
        private enum enumMixinStr__BITS_ENDIANNESS_H = `enum _BITS_ENDIANNESS_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__BITS_ENDIANNESS_H); }))) {
            mixin(enumMixinStr__BITS_ENDIANNESS_H);
        }
    }






    static if(!is(typeof(__FLOAT_WORD_ORDER))) {
        private enum enumMixinStr___FLOAT_WORD_ORDER = `enum __FLOAT_WORD_ORDER = __LITTLE_ENDIAN;`;
        static if(is(typeof({ mixin(enumMixinStr___FLOAT_WORD_ORDER); }))) {
            mixin(enumMixinStr___FLOAT_WORD_ORDER);
        }
    }




    static if(!is(typeof(__PDP_ENDIAN))) {
        private enum enumMixinStr___PDP_ENDIAN = `enum __PDP_ENDIAN = 3412;`;
        static if(is(typeof({ mixin(enumMixinStr___PDP_ENDIAN); }))) {
            mixin(enumMixinStr___PDP_ENDIAN);
        }
    }




    static if(!is(typeof(__BIG_ENDIAN))) {
        private enum enumMixinStr___BIG_ENDIAN = `enum __BIG_ENDIAN = 4321;`;
        static if(is(typeof({ mixin(enumMixinStr___BIG_ENDIAN); }))) {
            mixin(enumMixinStr___BIG_ENDIAN);
        }
    }




    static if(!is(typeof(__LITTLE_ENDIAN))) {
        private enum enumMixinStr___LITTLE_ENDIAN = `enum __LITTLE_ENDIAN = 1234;`;
        static if(is(typeof({ mixin(enumMixinStr___LITTLE_ENDIAN); }))) {
            mixin(enumMixinStr___LITTLE_ENDIAN);
        }
    }




    static if(!is(typeof(_BITS_ENDIAN_H))) {
        private enum enumMixinStr__BITS_ENDIAN_H = `enum _BITS_ENDIAN_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__BITS_ENDIAN_H); }))) {
            mixin(enumMixinStr__BITS_ENDIAN_H);
        }
    }
    static if(!is(typeof(__NCPUBITS))) {
        private enum enumMixinStr___NCPUBITS = `enum __NCPUBITS = ( 8 * ( __cpu_mask ) .sizeof );`;
        static if(is(typeof({ mixin(enumMixinStr___NCPUBITS); }))) {
            mixin(enumMixinStr___NCPUBITS);
        }
    }




    static if(!is(typeof(__CPU_SETSIZE))) {
        private enum enumMixinStr___CPU_SETSIZE = `enum __CPU_SETSIZE = 1024;`;
        static if(is(typeof({ mixin(enumMixinStr___CPU_SETSIZE); }))) {
            mixin(enumMixinStr___CPU_SETSIZE);
        }
    }




    static if(!is(typeof(_BITS_CPU_SET_H))) {
        private enum enumMixinStr__BITS_CPU_SET_H = `enum _BITS_CPU_SET_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__BITS_CPU_SET_H); }))) {
            mixin(enumMixinStr__BITS_CPU_SET_H);
        }
    }
    static if(!is(typeof(_BITS_BYTESWAP_H))) {
        private enum enumMixinStr__BITS_BYTESWAP_H = `enum _BITS_BYTESWAP_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__BITS_BYTESWAP_H); }))) {
            mixin(enumMixinStr__BITS_BYTESWAP_H);
        }
    }




    static if(!is(typeof(EHWPOISON))) {
        private enum enumMixinStr_EHWPOISON = `enum EHWPOISON = 133;`;
        static if(is(typeof({ mixin(enumMixinStr_EHWPOISON); }))) {
            mixin(enumMixinStr_EHWPOISON);
        }
    }




    static if(!is(typeof(ERFKILL))) {
        private enum enumMixinStr_ERFKILL = `enum ERFKILL = 132;`;
        static if(is(typeof({ mixin(enumMixinStr_ERFKILL); }))) {
            mixin(enumMixinStr_ERFKILL);
        }
    }




    static if(!is(typeof(ENOTRECOVERABLE))) {
        private enum enumMixinStr_ENOTRECOVERABLE = `enum ENOTRECOVERABLE = 131;`;
        static if(is(typeof({ mixin(enumMixinStr_ENOTRECOVERABLE); }))) {
            mixin(enumMixinStr_ENOTRECOVERABLE);
        }
    }




    static if(!is(typeof(EOWNERDEAD))) {
        private enum enumMixinStr_EOWNERDEAD = `enum EOWNERDEAD = 130;`;
        static if(is(typeof({ mixin(enumMixinStr_EOWNERDEAD); }))) {
            mixin(enumMixinStr_EOWNERDEAD);
        }
    }




    static if(!is(typeof(EKEYREJECTED))) {
        private enum enumMixinStr_EKEYREJECTED = `enum EKEYREJECTED = 129;`;
        static if(is(typeof({ mixin(enumMixinStr_EKEYREJECTED); }))) {
            mixin(enumMixinStr_EKEYREJECTED);
        }
    }




    static if(!is(typeof(EKEYREVOKED))) {
        private enum enumMixinStr_EKEYREVOKED = `enum EKEYREVOKED = 128;`;
        static if(is(typeof({ mixin(enumMixinStr_EKEYREVOKED); }))) {
            mixin(enumMixinStr_EKEYREVOKED);
        }
    }




    static if(!is(typeof(EKEYEXPIRED))) {
        private enum enumMixinStr_EKEYEXPIRED = `enum EKEYEXPIRED = 127;`;
        static if(is(typeof({ mixin(enumMixinStr_EKEYEXPIRED); }))) {
            mixin(enumMixinStr_EKEYEXPIRED);
        }
    }




    static if(!is(typeof(ENOKEY))) {
        private enum enumMixinStr_ENOKEY = `enum ENOKEY = 126;`;
        static if(is(typeof({ mixin(enumMixinStr_ENOKEY); }))) {
            mixin(enumMixinStr_ENOKEY);
        }
    }




    static if(!is(typeof(ECANCELED))) {
        private enum enumMixinStr_ECANCELED = `enum ECANCELED = 125;`;
        static if(is(typeof({ mixin(enumMixinStr_ECANCELED); }))) {
            mixin(enumMixinStr_ECANCELED);
        }
    }




    static if(!is(typeof(EMEDIUMTYPE))) {
        private enum enumMixinStr_EMEDIUMTYPE = `enum EMEDIUMTYPE = 124;`;
        static if(is(typeof({ mixin(enumMixinStr_EMEDIUMTYPE); }))) {
            mixin(enumMixinStr_EMEDIUMTYPE);
        }
    }




    static if(!is(typeof(ENOMEDIUM))) {
        private enum enumMixinStr_ENOMEDIUM = `enum ENOMEDIUM = 123;`;
        static if(is(typeof({ mixin(enumMixinStr_ENOMEDIUM); }))) {
            mixin(enumMixinStr_ENOMEDIUM);
        }
    }




    static if(!is(typeof(EDQUOT))) {
        private enum enumMixinStr_EDQUOT = `enum EDQUOT = 122;`;
        static if(is(typeof({ mixin(enumMixinStr_EDQUOT); }))) {
            mixin(enumMixinStr_EDQUOT);
        }
    }




    static if(!is(typeof(EREMOTEIO))) {
        private enum enumMixinStr_EREMOTEIO = `enum EREMOTEIO = 121;`;
        static if(is(typeof({ mixin(enumMixinStr_EREMOTEIO); }))) {
            mixin(enumMixinStr_EREMOTEIO);
        }
    }




    static if(!is(typeof(EISNAM))) {
        private enum enumMixinStr_EISNAM = `enum EISNAM = 120;`;
        static if(is(typeof({ mixin(enumMixinStr_EISNAM); }))) {
            mixin(enumMixinStr_EISNAM);
        }
    }




    static if(!is(typeof(ENAVAIL))) {
        private enum enumMixinStr_ENAVAIL = `enum ENAVAIL = 119;`;
        static if(is(typeof({ mixin(enumMixinStr_ENAVAIL); }))) {
            mixin(enumMixinStr_ENAVAIL);
        }
    }




    static if(!is(typeof(ENOTNAM))) {
        private enum enumMixinStr_ENOTNAM = `enum ENOTNAM = 118;`;
        static if(is(typeof({ mixin(enumMixinStr_ENOTNAM); }))) {
            mixin(enumMixinStr_ENOTNAM);
        }
    }




    static if(!is(typeof(EUCLEAN))) {
        private enum enumMixinStr_EUCLEAN = `enum EUCLEAN = 117;`;
        static if(is(typeof({ mixin(enumMixinStr_EUCLEAN); }))) {
            mixin(enumMixinStr_EUCLEAN);
        }
    }




    static if(!is(typeof(ESTALE))) {
        private enum enumMixinStr_ESTALE = `enum ESTALE = 116;`;
        static if(is(typeof({ mixin(enumMixinStr_ESTALE); }))) {
            mixin(enumMixinStr_ESTALE);
        }
    }




    static if(!is(typeof(EINPROGRESS))) {
        private enum enumMixinStr_EINPROGRESS = `enum EINPROGRESS = 115;`;
        static if(is(typeof({ mixin(enumMixinStr_EINPROGRESS); }))) {
            mixin(enumMixinStr_EINPROGRESS);
        }
    }




    static if(!is(typeof(EALREADY))) {
        private enum enumMixinStr_EALREADY = `enum EALREADY = 114;`;
        static if(is(typeof({ mixin(enumMixinStr_EALREADY); }))) {
            mixin(enumMixinStr_EALREADY);
        }
    }




    static if(!is(typeof(EHOSTUNREACH))) {
        private enum enumMixinStr_EHOSTUNREACH = `enum EHOSTUNREACH = 113;`;
        static if(is(typeof({ mixin(enumMixinStr_EHOSTUNREACH); }))) {
            mixin(enumMixinStr_EHOSTUNREACH);
        }
    }




    static if(!is(typeof(EHOSTDOWN))) {
        private enum enumMixinStr_EHOSTDOWN = `enum EHOSTDOWN = 112;`;
        static if(is(typeof({ mixin(enumMixinStr_EHOSTDOWN); }))) {
            mixin(enumMixinStr_EHOSTDOWN);
        }
    }




    static if(!is(typeof(ECONNREFUSED))) {
        private enum enumMixinStr_ECONNREFUSED = `enum ECONNREFUSED = 111;`;
        static if(is(typeof({ mixin(enumMixinStr_ECONNREFUSED); }))) {
            mixin(enumMixinStr_ECONNREFUSED);
        }
    }




    static if(!is(typeof(ETIMEDOUT))) {
        private enum enumMixinStr_ETIMEDOUT = `enum ETIMEDOUT = 110;`;
        static if(is(typeof({ mixin(enumMixinStr_ETIMEDOUT); }))) {
            mixin(enumMixinStr_ETIMEDOUT);
        }
    }




    static if(!is(typeof(ETOOMANYREFS))) {
        private enum enumMixinStr_ETOOMANYREFS = `enum ETOOMANYREFS = 109;`;
        static if(is(typeof({ mixin(enumMixinStr_ETOOMANYREFS); }))) {
            mixin(enumMixinStr_ETOOMANYREFS);
        }
    }




    static if(!is(typeof(ESHUTDOWN))) {
        private enum enumMixinStr_ESHUTDOWN = `enum ESHUTDOWN = 108;`;
        static if(is(typeof({ mixin(enumMixinStr_ESHUTDOWN); }))) {
            mixin(enumMixinStr_ESHUTDOWN);
        }
    }




    static if(!is(typeof(ENOTCONN))) {
        private enum enumMixinStr_ENOTCONN = `enum ENOTCONN = 107;`;
        static if(is(typeof({ mixin(enumMixinStr_ENOTCONN); }))) {
            mixin(enumMixinStr_ENOTCONN);
        }
    }




    static if(!is(typeof(EISCONN))) {
        private enum enumMixinStr_EISCONN = `enum EISCONN = 106;`;
        static if(is(typeof({ mixin(enumMixinStr_EISCONN); }))) {
            mixin(enumMixinStr_EISCONN);
        }
    }




    static if(!is(typeof(ENOBUFS))) {
        private enum enumMixinStr_ENOBUFS = `enum ENOBUFS = 105;`;
        static if(is(typeof({ mixin(enumMixinStr_ENOBUFS); }))) {
            mixin(enumMixinStr_ENOBUFS);
        }
    }




    static if(!is(typeof(ECONNRESET))) {
        private enum enumMixinStr_ECONNRESET = `enum ECONNRESET = 104;`;
        static if(is(typeof({ mixin(enumMixinStr_ECONNRESET); }))) {
            mixin(enumMixinStr_ECONNRESET);
        }
    }




    static if(!is(typeof(ECONNABORTED))) {
        private enum enumMixinStr_ECONNABORTED = `enum ECONNABORTED = 103;`;
        static if(is(typeof({ mixin(enumMixinStr_ECONNABORTED); }))) {
            mixin(enumMixinStr_ECONNABORTED);
        }
    }




    static if(!is(typeof(ENETRESET))) {
        private enum enumMixinStr_ENETRESET = `enum ENETRESET = 102;`;
        static if(is(typeof({ mixin(enumMixinStr_ENETRESET); }))) {
            mixin(enumMixinStr_ENETRESET);
        }
    }




    static if(!is(typeof(ENETUNREACH))) {
        private enum enumMixinStr_ENETUNREACH = `enum ENETUNREACH = 101;`;
        static if(is(typeof({ mixin(enumMixinStr_ENETUNREACH); }))) {
            mixin(enumMixinStr_ENETUNREACH);
        }
    }




    static if(!is(typeof(ENETDOWN))) {
        private enum enumMixinStr_ENETDOWN = `enum ENETDOWN = 100;`;
        static if(is(typeof({ mixin(enumMixinStr_ENETDOWN); }))) {
            mixin(enumMixinStr_ENETDOWN);
        }
    }




    static if(!is(typeof(EADDRNOTAVAIL))) {
        private enum enumMixinStr_EADDRNOTAVAIL = `enum EADDRNOTAVAIL = 99;`;
        static if(is(typeof({ mixin(enumMixinStr_EADDRNOTAVAIL); }))) {
            mixin(enumMixinStr_EADDRNOTAVAIL);
        }
    }




    static if(!is(typeof(EADDRINUSE))) {
        private enum enumMixinStr_EADDRINUSE = `enum EADDRINUSE = 98;`;
        static if(is(typeof({ mixin(enumMixinStr_EADDRINUSE); }))) {
            mixin(enumMixinStr_EADDRINUSE);
        }
    }




    static if(!is(typeof(EAFNOSUPPORT))) {
        private enum enumMixinStr_EAFNOSUPPORT = `enum EAFNOSUPPORT = 97;`;
        static if(is(typeof({ mixin(enumMixinStr_EAFNOSUPPORT); }))) {
            mixin(enumMixinStr_EAFNOSUPPORT);
        }
    }




    static if(!is(typeof(EPFNOSUPPORT))) {
        private enum enumMixinStr_EPFNOSUPPORT = `enum EPFNOSUPPORT = 96;`;
        static if(is(typeof({ mixin(enumMixinStr_EPFNOSUPPORT); }))) {
            mixin(enumMixinStr_EPFNOSUPPORT);
        }
    }




    static if(!is(typeof(EOPNOTSUPP))) {
        private enum enumMixinStr_EOPNOTSUPP = `enum EOPNOTSUPP = 95;`;
        static if(is(typeof({ mixin(enumMixinStr_EOPNOTSUPP); }))) {
            mixin(enumMixinStr_EOPNOTSUPP);
        }
    }




    static if(!is(typeof(ESOCKTNOSUPPORT))) {
        private enum enumMixinStr_ESOCKTNOSUPPORT = `enum ESOCKTNOSUPPORT = 94;`;
        static if(is(typeof({ mixin(enumMixinStr_ESOCKTNOSUPPORT); }))) {
            mixin(enumMixinStr_ESOCKTNOSUPPORT);
        }
    }




    static if(!is(typeof(EPROTONOSUPPORT))) {
        private enum enumMixinStr_EPROTONOSUPPORT = `enum EPROTONOSUPPORT = 93;`;
        static if(is(typeof({ mixin(enumMixinStr_EPROTONOSUPPORT); }))) {
            mixin(enumMixinStr_EPROTONOSUPPORT);
        }
    }




    static if(!is(typeof(ENOPROTOOPT))) {
        private enum enumMixinStr_ENOPROTOOPT = `enum ENOPROTOOPT = 92;`;
        static if(is(typeof({ mixin(enumMixinStr_ENOPROTOOPT); }))) {
            mixin(enumMixinStr_ENOPROTOOPT);
        }
    }




    static if(!is(typeof(EPROTOTYPE))) {
        private enum enumMixinStr_EPROTOTYPE = `enum EPROTOTYPE = 91;`;
        static if(is(typeof({ mixin(enumMixinStr_EPROTOTYPE); }))) {
            mixin(enumMixinStr_EPROTOTYPE);
        }
    }




    static if(!is(typeof(EMSGSIZE))) {
        private enum enumMixinStr_EMSGSIZE = `enum EMSGSIZE = 90;`;
        static if(is(typeof({ mixin(enumMixinStr_EMSGSIZE); }))) {
            mixin(enumMixinStr_EMSGSIZE);
        }
    }




    static if(!is(typeof(EDESTADDRREQ))) {
        private enum enumMixinStr_EDESTADDRREQ = `enum EDESTADDRREQ = 89;`;
        static if(is(typeof({ mixin(enumMixinStr_EDESTADDRREQ); }))) {
            mixin(enumMixinStr_EDESTADDRREQ);
        }
    }




    static if(!is(typeof(ENOTSOCK))) {
        private enum enumMixinStr_ENOTSOCK = `enum ENOTSOCK = 88;`;
        static if(is(typeof({ mixin(enumMixinStr_ENOTSOCK); }))) {
            mixin(enumMixinStr_ENOTSOCK);
        }
    }




    static if(!is(typeof(EUSERS))) {
        private enum enumMixinStr_EUSERS = `enum EUSERS = 87;`;
        static if(is(typeof({ mixin(enumMixinStr_EUSERS); }))) {
            mixin(enumMixinStr_EUSERS);
        }
    }




    static if(!is(typeof(ESTRPIPE))) {
        private enum enumMixinStr_ESTRPIPE = `enum ESTRPIPE = 86;`;
        static if(is(typeof({ mixin(enumMixinStr_ESTRPIPE); }))) {
            mixin(enumMixinStr_ESTRPIPE);
        }
    }




    static if(!is(typeof(ERESTART))) {
        private enum enumMixinStr_ERESTART = `enum ERESTART = 85;`;
        static if(is(typeof({ mixin(enumMixinStr_ERESTART); }))) {
            mixin(enumMixinStr_ERESTART);
        }
    }




    static if(!is(typeof(EILSEQ))) {
        private enum enumMixinStr_EILSEQ = `enum EILSEQ = 84;`;
        static if(is(typeof({ mixin(enumMixinStr_EILSEQ); }))) {
            mixin(enumMixinStr_EILSEQ);
        }
    }




    static if(!is(typeof(ELIBEXEC))) {
        private enum enumMixinStr_ELIBEXEC = `enum ELIBEXEC = 83;`;
        static if(is(typeof({ mixin(enumMixinStr_ELIBEXEC); }))) {
            mixin(enumMixinStr_ELIBEXEC);
        }
    }




    static if(!is(typeof(ELIBMAX))) {
        private enum enumMixinStr_ELIBMAX = `enum ELIBMAX = 82;`;
        static if(is(typeof({ mixin(enumMixinStr_ELIBMAX); }))) {
            mixin(enumMixinStr_ELIBMAX);
        }
    }




    static if(!is(typeof(ELIBSCN))) {
        private enum enumMixinStr_ELIBSCN = `enum ELIBSCN = 81;`;
        static if(is(typeof({ mixin(enumMixinStr_ELIBSCN); }))) {
            mixin(enumMixinStr_ELIBSCN);
        }
    }




    static if(!is(typeof(ELIBBAD))) {
        private enum enumMixinStr_ELIBBAD = `enum ELIBBAD = 80;`;
        static if(is(typeof({ mixin(enumMixinStr_ELIBBAD); }))) {
            mixin(enumMixinStr_ELIBBAD);
        }
    }




    static if(!is(typeof(ELIBACC))) {
        private enum enumMixinStr_ELIBACC = `enum ELIBACC = 79;`;
        static if(is(typeof({ mixin(enumMixinStr_ELIBACC); }))) {
            mixin(enumMixinStr_ELIBACC);
        }
    }






    static if(!is(typeof(EREMCHG))) {
        private enum enumMixinStr_EREMCHG = `enum EREMCHG = 78;`;
        static if(is(typeof({ mixin(enumMixinStr_EREMCHG); }))) {
            mixin(enumMixinStr_EREMCHG);
        }
    }




    static if(!is(typeof(EBADFD))) {
        private enum enumMixinStr_EBADFD = `enum EBADFD = 77;`;
        static if(is(typeof({ mixin(enumMixinStr_EBADFD); }))) {
            mixin(enumMixinStr_EBADFD);
        }
    }




    static if(!is(typeof(ENOTUNIQ))) {
        private enum enumMixinStr_ENOTUNIQ = `enum ENOTUNIQ = 76;`;
        static if(is(typeof({ mixin(enumMixinStr_ENOTUNIQ); }))) {
            mixin(enumMixinStr_ENOTUNIQ);
        }
    }




    static if(!is(typeof(EOVERFLOW))) {
        private enum enumMixinStr_EOVERFLOW = `enum EOVERFLOW = 75;`;
        static if(is(typeof({ mixin(enumMixinStr_EOVERFLOW); }))) {
            mixin(enumMixinStr_EOVERFLOW);
        }
    }




    static if(!is(typeof(EBADMSG))) {
        private enum enumMixinStr_EBADMSG = `enum EBADMSG = 74;`;
        static if(is(typeof({ mixin(enumMixinStr_EBADMSG); }))) {
            mixin(enumMixinStr_EBADMSG);
        }
    }




    static if(!is(typeof(EDOTDOT))) {
        private enum enumMixinStr_EDOTDOT = `enum EDOTDOT = 73;`;
        static if(is(typeof({ mixin(enumMixinStr_EDOTDOT); }))) {
            mixin(enumMixinStr_EDOTDOT);
        }
    }




    static if(!is(typeof(EMULTIHOP))) {
        private enum enumMixinStr_EMULTIHOP = `enum EMULTIHOP = 72;`;
        static if(is(typeof({ mixin(enumMixinStr_EMULTIHOP); }))) {
            mixin(enumMixinStr_EMULTIHOP);
        }
    }




    static if(!is(typeof(EPROTO))) {
        private enum enumMixinStr_EPROTO = `enum EPROTO = 71;`;
        static if(is(typeof({ mixin(enumMixinStr_EPROTO); }))) {
            mixin(enumMixinStr_EPROTO);
        }
    }




    static if(!is(typeof(ECOMM))) {
        private enum enumMixinStr_ECOMM = `enum ECOMM = 70;`;
        static if(is(typeof({ mixin(enumMixinStr_ECOMM); }))) {
            mixin(enumMixinStr_ECOMM);
        }
    }




    static if(!is(typeof(ESRMNT))) {
        private enum enumMixinStr_ESRMNT = `enum ESRMNT = 69;`;
        static if(is(typeof({ mixin(enumMixinStr_ESRMNT); }))) {
            mixin(enumMixinStr_ESRMNT);
        }
    }




    static if(!is(typeof(EADV))) {
        private enum enumMixinStr_EADV = `enum EADV = 68;`;
        static if(is(typeof({ mixin(enumMixinStr_EADV); }))) {
            mixin(enumMixinStr_EADV);
        }
    }




    static if(!is(typeof(ENOLINK))) {
        private enum enumMixinStr_ENOLINK = `enum ENOLINK = 67;`;
        static if(is(typeof({ mixin(enumMixinStr_ENOLINK); }))) {
            mixin(enumMixinStr_ENOLINK);
        }
    }




    static if(!is(typeof(EREMOTE))) {
        private enum enumMixinStr_EREMOTE = `enum EREMOTE = 66;`;
        static if(is(typeof({ mixin(enumMixinStr_EREMOTE); }))) {
            mixin(enumMixinStr_EREMOTE);
        }
    }




    static if(!is(typeof(ENOPKG))) {
        private enum enumMixinStr_ENOPKG = `enum ENOPKG = 65;`;
        static if(is(typeof({ mixin(enumMixinStr_ENOPKG); }))) {
            mixin(enumMixinStr_ENOPKG);
        }
    }




    static if(!is(typeof(ENONET))) {
        private enum enumMixinStr_ENONET = `enum ENONET = 64;`;
        static if(is(typeof({ mixin(enumMixinStr_ENONET); }))) {
            mixin(enumMixinStr_ENONET);
        }
    }




    static if(!is(typeof(ENOSR))) {
        private enum enumMixinStr_ENOSR = `enum ENOSR = 63;`;
        static if(is(typeof({ mixin(enumMixinStr_ENOSR); }))) {
            mixin(enumMixinStr_ENOSR);
        }
    }




    static if(!is(typeof(ETIME))) {
        private enum enumMixinStr_ETIME = `enum ETIME = 62;`;
        static if(is(typeof({ mixin(enumMixinStr_ETIME); }))) {
            mixin(enumMixinStr_ETIME);
        }
    }




    static if(!is(typeof(ENODATA))) {
        private enum enumMixinStr_ENODATA = `enum ENODATA = 61;`;
        static if(is(typeof({ mixin(enumMixinStr_ENODATA); }))) {
            mixin(enumMixinStr_ENODATA);
        }
    }




    static if(!is(typeof(ENOSTR))) {
        private enum enumMixinStr_ENOSTR = `enum ENOSTR = 60;`;
        static if(is(typeof({ mixin(enumMixinStr_ENOSTR); }))) {
            mixin(enumMixinStr_ENOSTR);
        }
    }




    static if(!is(typeof(EBFONT))) {
        private enum enumMixinStr_EBFONT = `enum EBFONT = 59;`;
        static if(is(typeof({ mixin(enumMixinStr_EBFONT); }))) {
            mixin(enumMixinStr_EBFONT);
        }
    }




    static if(!is(typeof(EDEADLOCK))) {
        private enum enumMixinStr_EDEADLOCK = `enum EDEADLOCK = EDEADLK;`;
        static if(is(typeof({ mixin(enumMixinStr_EDEADLOCK); }))) {
            mixin(enumMixinStr_EDEADLOCK);
        }
    }




    static if(!is(typeof(EBADSLT))) {
        private enum enumMixinStr_EBADSLT = `enum EBADSLT = 57;`;
        static if(is(typeof({ mixin(enumMixinStr_EBADSLT); }))) {
            mixin(enumMixinStr_EBADSLT);
        }
    }




    static if(!is(typeof(EBADRQC))) {
        private enum enumMixinStr_EBADRQC = `enum EBADRQC = 56;`;
        static if(is(typeof({ mixin(enumMixinStr_EBADRQC); }))) {
            mixin(enumMixinStr_EBADRQC);
        }
    }




    static if(!is(typeof(ENOANO))) {
        private enum enumMixinStr_ENOANO = `enum ENOANO = 55;`;
        static if(is(typeof({ mixin(enumMixinStr_ENOANO); }))) {
            mixin(enumMixinStr_ENOANO);
        }
    }




    static if(!is(typeof(EXFULL))) {
        private enum enumMixinStr_EXFULL = `enum EXFULL = 54;`;
        static if(is(typeof({ mixin(enumMixinStr_EXFULL); }))) {
            mixin(enumMixinStr_EXFULL);
        }
    }




    static if(!is(typeof(EBADR))) {
        private enum enumMixinStr_EBADR = `enum EBADR = 53;`;
        static if(is(typeof({ mixin(enumMixinStr_EBADR); }))) {
            mixin(enumMixinStr_EBADR);
        }
    }




    static if(!is(typeof(EBADE))) {
        private enum enumMixinStr_EBADE = `enum EBADE = 52;`;
        static if(is(typeof({ mixin(enumMixinStr_EBADE); }))) {
            mixin(enumMixinStr_EBADE);
        }
    }




    static if(!is(typeof(EL2HLT))) {
        private enum enumMixinStr_EL2HLT = `enum EL2HLT = 51;`;
        static if(is(typeof({ mixin(enumMixinStr_EL2HLT); }))) {
            mixin(enumMixinStr_EL2HLT);
        }
    }




    static if(!is(typeof(ENOCSI))) {
        private enum enumMixinStr_ENOCSI = `enum ENOCSI = 50;`;
        static if(is(typeof({ mixin(enumMixinStr_ENOCSI); }))) {
            mixin(enumMixinStr_ENOCSI);
        }
    }




    static if(!is(typeof(EUNATCH))) {
        private enum enumMixinStr_EUNATCH = `enum EUNATCH = 49;`;
        static if(is(typeof({ mixin(enumMixinStr_EUNATCH); }))) {
            mixin(enumMixinStr_EUNATCH);
        }
    }




    static if(!is(typeof(ELNRNG))) {
        private enum enumMixinStr_ELNRNG = `enum ELNRNG = 48;`;
        static if(is(typeof({ mixin(enumMixinStr_ELNRNG); }))) {
            mixin(enumMixinStr_ELNRNG);
        }
    }




    static if(!is(typeof(EL3RST))) {
        private enum enumMixinStr_EL3RST = `enum EL3RST = 47;`;
        static if(is(typeof({ mixin(enumMixinStr_EL3RST); }))) {
            mixin(enumMixinStr_EL3RST);
        }
    }




    static if(!is(typeof(EL3HLT))) {
        private enum enumMixinStr_EL3HLT = `enum EL3HLT = 46;`;
        static if(is(typeof({ mixin(enumMixinStr_EL3HLT); }))) {
            mixin(enumMixinStr_EL3HLT);
        }
    }




    static if(!is(typeof(EL2NSYNC))) {
        private enum enumMixinStr_EL2NSYNC = `enum EL2NSYNC = 45;`;
        static if(is(typeof({ mixin(enumMixinStr_EL2NSYNC); }))) {
            mixin(enumMixinStr_EL2NSYNC);
        }
    }




    static if(!is(typeof(ECHRNG))) {
        private enum enumMixinStr_ECHRNG = `enum ECHRNG = 44;`;
        static if(is(typeof({ mixin(enumMixinStr_ECHRNG); }))) {
            mixin(enumMixinStr_ECHRNG);
        }
    }




    static if(!is(typeof(EIDRM))) {
        private enum enumMixinStr_EIDRM = `enum EIDRM = 43;`;
        static if(is(typeof({ mixin(enumMixinStr_EIDRM); }))) {
            mixin(enumMixinStr_EIDRM);
        }
    }




    static if(!is(typeof(ENOMSG))) {
        private enum enumMixinStr_ENOMSG = `enum ENOMSG = 42;`;
        static if(is(typeof({ mixin(enumMixinStr_ENOMSG); }))) {
            mixin(enumMixinStr_ENOMSG);
        }
    }




    static if(!is(typeof(EWOULDBLOCK))) {
        private enum enumMixinStr_EWOULDBLOCK = `enum EWOULDBLOCK = EAGAIN;`;
        static if(is(typeof({ mixin(enumMixinStr_EWOULDBLOCK); }))) {
            mixin(enumMixinStr_EWOULDBLOCK);
        }
    }




    static if(!is(typeof(ELOOP))) {
        private enum enumMixinStr_ELOOP = `enum ELOOP = 40;`;
        static if(is(typeof({ mixin(enumMixinStr_ELOOP); }))) {
            mixin(enumMixinStr_ELOOP);
        }
    }




    static if(!is(typeof(ENOTEMPTY))) {
        private enum enumMixinStr_ENOTEMPTY = `enum ENOTEMPTY = 39;`;
        static if(is(typeof({ mixin(enumMixinStr_ENOTEMPTY); }))) {
            mixin(enumMixinStr_ENOTEMPTY);
        }
    }




    static if(!is(typeof(ENOSYS))) {
        private enum enumMixinStr_ENOSYS = `enum ENOSYS = 38;`;
        static if(is(typeof({ mixin(enumMixinStr_ENOSYS); }))) {
            mixin(enumMixinStr_ENOSYS);
        }
    }




    static if(!is(typeof(ENOLCK))) {
        private enum enumMixinStr_ENOLCK = `enum ENOLCK = 37;`;
        static if(is(typeof({ mixin(enumMixinStr_ENOLCK); }))) {
            mixin(enumMixinStr_ENOLCK);
        }
    }




    static if(!is(typeof(ENAMETOOLONG))) {
        private enum enumMixinStr_ENAMETOOLONG = `enum ENAMETOOLONG = 36;`;
        static if(is(typeof({ mixin(enumMixinStr_ENAMETOOLONG); }))) {
            mixin(enumMixinStr_ENAMETOOLONG);
        }
    }




    static if(!is(typeof(EDEADLK))) {
        private enum enumMixinStr_EDEADLK = `enum EDEADLK = 35;`;
        static if(is(typeof({ mixin(enumMixinStr_EDEADLK); }))) {
            mixin(enumMixinStr_EDEADLK);
        }
    }






    static if(!is(typeof(ERANGE))) {
        private enum enumMixinStr_ERANGE = `enum ERANGE = 34;`;
        static if(is(typeof({ mixin(enumMixinStr_ERANGE); }))) {
            mixin(enumMixinStr_ERANGE);
        }
    }




    static if(!is(typeof(EDOM))) {
        private enum enumMixinStr_EDOM = `enum EDOM = 33;`;
        static if(is(typeof({ mixin(enumMixinStr_EDOM); }))) {
            mixin(enumMixinStr_EDOM);
        }
    }




    static if(!is(typeof(EPIPE))) {
        private enum enumMixinStr_EPIPE = `enum EPIPE = 32;`;
        static if(is(typeof({ mixin(enumMixinStr_EPIPE); }))) {
            mixin(enumMixinStr_EPIPE);
        }
    }




    static if(!is(typeof(EMLINK))) {
        private enum enumMixinStr_EMLINK = `enum EMLINK = 31;`;
        static if(is(typeof({ mixin(enumMixinStr_EMLINK); }))) {
            mixin(enumMixinStr_EMLINK);
        }
    }




    static if(!is(typeof(EROFS))) {
        private enum enumMixinStr_EROFS = `enum EROFS = 30;`;
        static if(is(typeof({ mixin(enumMixinStr_EROFS); }))) {
            mixin(enumMixinStr_EROFS);
        }
    }




    static if(!is(typeof(ESPIPE))) {
        private enum enumMixinStr_ESPIPE = `enum ESPIPE = 29;`;
        static if(is(typeof({ mixin(enumMixinStr_ESPIPE); }))) {
            mixin(enumMixinStr_ESPIPE);
        }
    }




    static if(!is(typeof(ENOSPC))) {
        private enum enumMixinStr_ENOSPC = `enum ENOSPC = 28;`;
        static if(is(typeof({ mixin(enumMixinStr_ENOSPC); }))) {
            mixin(enumMixinStr_ENOSPC);
        }
    }




    static if(!is(typeof(EFBIG))) {
        private enum enumMixinStr_EFBIG = `enum EFBIG = 27;`;
        static if(is(typeof({ mixin(enumMixinStr_EFBIG); }))) {
            mixin(enumMixinStr_EFBIG);
        }
    }




    static if(!is(typeof(ETXTBSY))) {
        private enum enumMixinStr_ETXTBSY = `enum ETXTBSY = 26;`;
        static if(is(typeof({ mixin(enumMixinStr_ETXTBSY); }))) {
            mixin(enumMixinStr_ETXTBSY);
        }
    }




    static if(!is(typeof(ENOTTY))) {
        private enum enumMixinStr_ENOTTY = `enum ENOTTY = 25;`;
        static if(is(typeof({ mixin(enumMixinStr_ENOTTY); }))) {
            mixin(enumMixinStr_ENOTTY);
        }
    }




    static if(!is(typeof(EMFILE))) {
        private enum enumMixinStr_EMFILE = `enum EMFILE = 24;`;
        static if(is(typeof({ mixin(enumMixinStr_EMFILE); }))) {
            mixin(enumMixinStr_EMFILE);
        }
    }




    static if(!is(typeof(ENFILE))) {
        private enum enumMixinStr_ENFILE = `enum ENFILE = 23;`;
        static if(is(typeof({ mixin(enumMixinStr_ENFILE); }))) {
            mixin(enumMixinStr_ENFILE);
        }
    }




    static if(!is(typeof(EINVAL))) {
        private enum enumMixinStr_EINVAL = `enum EINVAL = 22;`;
        static if(is(typeof({ mixin(enumMixinStr_EINVAL); }))) {
            mixin(enumMixinStr_EINVAL);
        }
    }




    static if(!is(typeof(EISDIR))) {
        private enum enumMixinStr_EISDIR = `enum EISDIR = 21;`;
        static if(is(typeof({ mixin(enumMixinStr_EISDIR); }))) {
            mixin(enumMixinStr_EISDIR);
        }
    }




    static if(!is(typeof(ENOTDIR))) {
        private enum enumMixinStr_ENOTDIR = `enum ENOTDIR = 20;`;
        static if(is(typeof({ mixin(enumMixinStr_ENOTDIR); }))) {
            mixin(enumMixinStr_ENOTDIR);
        }
    }




    static if(!is(typeof(ENODEV))) {
        private enum enumMixinStr_ENODEV = `enum ENODEV = 19;`;
        static if(is(typeof({ mixin(enumMixinStr_ENODEV); }))) {
            mixin(enumMixinStr_ENODEV);
        }
    }




    static if(!is(typeof(EXDEV))) {
        private enum enumMixinStr_EXDEV = `enum EXDEV = 18;`;
        static if(is(typeof({ mixin(enumMixinStr_EXDEV); }))) {
            mixin(enumMixinStr_EXDEV);
        }
    }




    static if(!is(typeof(EEXIST))) {
        private enum enumMixinStr_EEXIST = `enum EEXIST = 17;`;
        static if(is(typeof({ mixin(enumMixinStr_EEXIST); }))) {
            mixin(enumMixinStr_EEXIST);
        }
    }




    static if(!is(typeof(EBUSY))) {
        private enum enumMixinStr_EBUSY = `enum EBUSY = 16;`;
        static if(is(typeof({ mixin(enumMixinStr_EBUSY); }))) {
            mixin(enumMixinStr_EBUSY);
        }
    }




    static if(!is(typeof(ENOTBLK))) {
        private enum enumMixinStr_ENOTBLK = `enum ENOTBLK = 15;`;
        static if(is(typeof({ mixin(enumMixinStr_ENOTBLK); }))) {
            mixin(enumMixinStr_ENOTBLK);
        }
    }




    static if(!is(typeof(EFAULT))) {
        private enum enumMixinStr_EFAULT = `enum EFAULT = 14;`;
        static if(is(typeof({ mixin(enumMixinStr_EFAULT); }))) {
            mixin(enumMixinStr_EFAULT);
        }
    }




    static if(!is(typeof(EACCES))) {
        private enum enumMixinStr_EACCES = `enum EACCES = 13;`;
        static if(is(typeof({ mixin(enumMixinStr_EACCES); }))) {
            mixin(enumMixinStr_EACCES);
        }
    }




    static if(!is(typeof(ENOMEM))) {
        private enum enumMixinStr_ENOMEM = `enum ENOMEM = 12;`;
        static if(is(typeof({ mixin(enumMixinStr_ENOMEM); }))) {
            mixin(enumMixinStr_ENOMEM);
        }
    }




    static if(!is(typeof(EAGAIN))) {
        private enum enumMixinStr_EAGAIN = `enum EAGAIN = 11;`;
        static if(is(typeof({ mixin(enumMixinStr_EAGAIN); }))) {
            mixin(enumMixinStr_EAGAIN);
        }
    }




    static if(!is(typeof(ECHILD))) {
        private enum enumMixinStr_ECHILD = `enum ECHILD = 10;`;
        static if(is(typeof({ mixin(enumMixinStr_ECHILD); }))) {
            mixin(enumMixinStr_ECHILD);
        }
    }




    static if(!is(typeof(EBADF))) {
        private enum enumMixinStr_EBADF = `enum EBADF = 9;`;
        static if(is(typeof({ mixin(enumMixinStr_EBADF); }))) {
            mixin(enumMixinStr_EBADF);
        }
    }




    static if(!is(typeof(ENOEXEC))) {
        private enum enumMixinStr_ENOEXEC = `enum ENOEXEC = 8;`;
        static if(is(typeof({ mixin(enumMixinStr_ENOEXEC); }))) {
            mixin(enumMixinStr_ENOEXEC);
        }
    }




    static if(!is(typeof(E2BIG))) {
        private enum enumMixinStr_E2BIG = `enum E2BIG = 7;`;
        static if(is(typeof({ mixin(enumMixinStr_E2BIG); }))) {
            mixin(enumMixinStr_E2BIG);
        }
    }




    static if(!is(typeof(ENXIO))) {
        private enum enumMixinStr_ENXIO = `enum ENXIO = 6;`;
        static if(is(typeof({ mixin(enumMixinStr_ENXIO); }))) {
            mixin(enumMixinStr_ENXIO);
        }
    }




    static if(!is(typeof(EIO))) {
        private enum enumMixinStr_EIO = `enum EIO = 5;`;
        static if(is(typeof({ mixin(enumMixinStr_EIO); }))) {
            mixin(enumMixinStr_EIO);
        }
    }




    static if(!is(typeof(EINTR))) {
        private enum enumMixinStr_EINTR = `enum EINTR = 4;`;
        static if(is(typeof({ mixin(enumMixinStr_EINTR); }))) {
            mixin(enumMixinStr_EINTR);
        }
    }




    static if(!is(typeof(ESRCH))) {
        private enum enumMixinStr_ESRCH = `enum ESRCH = 3;`;
        static if(is(typeof({ mixin(enumMixinStr_ESRCH); }))) {
            mixin(enumMixinStr_ESRCH);
        }
    }




    static if(!is(typeof(ENOENT))) {
        private enum enumMixinStr_ENOENT = `enum ENOENT = 2;`;
        static if(is(typeof({ mixin(enumMixinStr_ENOENT); }))) {
            mixin(enumMixinStr_ENOENT);
        }
    }




    static if(!is(typeof(EPERM))) {
        private enum enumMixinStr_EPERM = `enum EPERM = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_EPERM); }))) {
            mixin(enumMixinStr_EPERM);
        }
    }
    static if(!is(typeof(_ALLOCA_H))) {
        private enum enumMixinStr__ALLOCA_H = `enum _ALLOCA_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__ALLOCA_H); }))) {
            mixin(enumMixinStr__ALLOCA_H);
        }
    }




    static if(!is(typeof(_SYS_CDEFS_H))) {
        private enum enumMixinStr__SYS_CDEFS_H = `enum _SYS_CDEFS_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__SYS_CDEFS_H); }))) {
            mixin(enumMixinStr__SYS_CDEFS_H);
        }
    }
    static if(!is(typeof(__THROW))) {
        private enum enumMixinStr___THROW = `enum __THROW = __attribute__ ( ( __nothrow__ ) );`;
        static if(is(typeof({ mixin(enumMixinStr___THROW); }))) {
            mixin(enumMixinStr___THROW);
        }
    }




    static if(!is(typeof(__THROWNL))) {
        private enum enumMixinStr___THROWNL = `enum __THROWNL = __attribute__ ( ( __nothrow__ ) );`;
        static if(is(typeof({ mixin(enumMixinStr___THROWNL); }))) {
            mixin(enumMixinStr___THROWNL);
        }
    }
    static if(!is(typeof(__ptr_t))) {
        private enum enumMixinStr___ptr_t = `enum __ptr_t = void *;`;
        static if(is(typeof({ mixin(enumMixinStr___ptr_t); }))) {
            mixin(enumMixinStr___ptr_t);
        }
    }
    static if(!is(typeof(__flexarr))) {
        private enum enumMixinStr___flexarr = `enum __flexarr = [ ];`;
        static if(is(typeof({ mixin(enumMixinStr___flexarr); }))) {
            mixin(enumMixinStr___flexarr);
        }
    }




    static if(!is(typeof(__glibc_c99_flexarr_available))) {
        private enum enumMixinStr___glibc_c99_flexarr_available = `enum __glibc_c99_flexarr_available = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___glibc_c99_flexarr_available); }))) {
            mixin(enumMixinStr___glibc_c99_flexarr_available);
        }
    }
    static if(!is(typeof(__attribute_malloc__))) {
        private enum enumMixinStr___attribute_malloc__ = `enum __attribute_malloc__ = __attribute__ ( ( __malloc__ ) );`;
        static if(is(typeof({ mixin(enumMixinStr___attribute_malloc__); }))) {
            mixin(enumMixinStr___attribute_malloc__);
        }
    }






    static if(!is(typeof(__attribute_pure__))) {
        private enum enumMixinStr___attribute_pure__ = `enum __attribute_pure__ = __attribute__ ( ( __pure__ ) );`;
        static if(is(typeof({ mixin(enumMixinStr___attribute_pure__); }))) {
            mixin(enumMixinStr___attribute_pure__);
        }
    }




    static if(!is(typeof(__attribute_const__))) {
        private enum enumMixinStr___attribute_const__ = `enum __attribute_const__ = __attribute__ ( cast( __const__ ) );`;
        static if(is(typeof({ mixin(enumMixinStr___attribute_const__); }))) {
            mixin(enumMixinStr___attribute_const__);
        }
    }




    static if(!is(typeof(__attribute_used__))) {
        private enum enumMixinStr___attribute_used__ = `enum __attribute_used__ = __attribute__ ( ( __used__ ) );`;
        static if(is(typeof({ mixin(enumMixinStr___attribute_used__); }))) {
            mixin(enumMixinStr___attribute_used__);
        }
    }




    static if(!is(typeof(__attribute_noinline__))) {
        private enum enumMixinStr___attribute_noinline__ = `enum __attribute_noinline__ = __attribute__ ( ( __noinline__ ) );`;
        static if(is(typeof({ mixin(enumMixinStr___attribute_noinline__); }))) {
            mixin(enumMixinStr___attribute_noinline__);
        }
    }




    static if(!is(typeof(__attribute_deprecated__))) {
        private enum enumMixinStr___attribute_deprecated__ = `enum __attribute_deprecated__ = __attribute__ ( ( __deprecated__ ) );`;
        static if(is(typeof({ mixin(enumMixinStr___attribute_deprecated__); }))) {
            mixin(enumMixinStr___attribute_deprecated__);
        }
    }
    static if(!is(typeof(__attribute_warn_unused_result__))) {
        private enum enumMixinStr___attribute_warn_unused_result__ = `enum __attribute_warn_unused_result__ = __attribute__ ( ( __warn_unused_result__ ) );`;
        static if(is(typeof({ mixin(enumMixinStr___attribute_warn_unused_result__); }))) {
            mixin(enumMixinStr___attribute_warn_unused_result__);
        }
    }






    static if(!is(typeof(__always_inline))) {
        private enum enumMixinStr___always_inline = `enum __always_inline = __inline __attribute__ ( ( __always_inline__ ) );`;
        static if(is(typeof({ mixin(enumMixinStr___always_inline); }))) {
            mixin(enumMixinStr___always_inline);
        }
    }






    static if(!is(typeof(__extern_inline))) {
        private enum enumMixinStr___extern_inline = `enum __extern_inline = extern __inline __attribute__ ( ( __gnu_inline__ ) );`;
        static if(is(typeof({ mixin(enumMixinStr___extern_inline); }))) {
            mixin(enumMixinStr___extern_inline);
        }
    }




    static if(!is(typeof(__extern_always_inline))) {
        private enum enumMixinStr___extern_always_inline = `enum __extern_always_inline = extern __inline __attribute__ ( ( __always_inline__ ) ) __attribute__ ( ( __gnu_inline__ ) );`;
        static if(is(typeof({ mixin(enumMixinStr___extern_always_inline); }))) {
            mixin(enumMixinStr___extern_always_inline);
        }
    }




    static if(!is(typeof(__fortify_function))) {
        private enum enumMixinStr___fortify_function = `enum __fortify_function = extern __inline __attribute__ ( ( __always_inline__ ) ) __attribute__ ( ( __gnu_inline__ ) ) ;`;
        static if(is(typeof({ mixin(enumMixinStr___fortify_function); }))) {
            mixin(enumMixinStr___fortify_function);
        }
    }




    static if(!is(typeof(__restrict_arr))) {
        private enum enumMixinStr___restrict_arr = `enum __restrict_arr = __restrict;`;
        static if(is(typeof({ mixin(enumMixinStr___restrict_arr); }))) {
            mixin(enumMixinStr___restrict_arr);
        }
    }
    static if(!is(typeof(__HAVE_GENERIC_SELECTION))) {
        private enum enumMixinStr___HAVE_GENERIC_SELECTION = `enum __HAVE_GENERIC_SELECTION = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___HAVE_GENERIC_SELECTION); }))) {
            mixin(enumMixinStr___HAVE_GENERIC_SELECTION);
        }
    }






    static if(!is(typeof(__attribute_returns_twice__))) {
        private enum enumMixinStr___attribute_returns_twice__ = `enum __attribute_returns_twice__ = __attribute__ ( ( __returns_twice__ ) );`;
        static if(is(typeof({ mixin(enumMixinStr___attribute_returns_twice__); }))) {
            mixin(enumMixinStr___attribute_returns_twice__);
        }
    }




    static if(!is(typeof(_SYS_SELECT_H))) {
        private enum enumMixinStr__SYS_SELECT_H = `enum _SYS_SELECT_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__SYS_SELECT_H); }))) {
            mixin(enumMixinStr__SYS_SELECT_H);
        }
    }






    static if(!is(typeof(__NFDBITS))) {
        private enum enumMixinStr___NFDBITS = `enum __NFDBITS = ( 8 * cast( int ) ( __fd_mask ) .sizeof );`;
        static if(is(typeof({ mixin(enumMixinStr___NFDBITS); }))) {
            mixin(enumMixinStr___NFDBITS);
        }
    }
    static if(!is(typeof(FD_SETSIZE))) {
        private enum enumMixinStr_FD_SETSIZE = `enum FD_SETSIZE = 1024;`;
        static if(is(typeof({ mixin(enumMixinStr_FD_SETSIZE); }))) {
            mixin(enumMixinStr_FD_SETSIZE);
        }
    }




    static if(!is(typeof(NFDBITS))) {
        private enum enumMixinStr_NFDBITS = `enum NFDBITS = ( 8 * cast( int ) ( __fd_mask ) .sizeof );`;
        static if(is(typeof({ mixin(enumMixinStr_NFDBITS); }))) {
            mixin(enumMixinStr_NFDBITS);
        }
    }
    static if(!is(typeof(_SYS_TYPES_H))) {
        private enum enumMixinStr__SYS_TYPES_H = `enum _SYS_TYPES_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__SYS_TYPES_H); }))) {
            mixin(enumMixinStr__SYS_TYPES_H);
        }
    }
    static if(!is(typeof(__BIT_TYPES_DEFINED__))) {
        private enum enumMixinStr___BIT_TYPES_DEFINED__ = `enum __BIT_TYPES_DEFINED__ = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___BIT_TYPES_DEFINED__); }))) {
            mixin(enumMixinStr___BIT_TYPES_DEFINED__);
        }
    }
    static if(!is(typeof(_TIME_H))) {
        private enum enumMixinStr__TIME_H = `enum _TIME_H = 1;`;
        static if(is(typeof({ mixin(enumMixinStr__TIME_H); }))) {
            mixin(enumMixinStr__TIME_H);
        }
    }






    static if(!is(typeof(TIME_UTC))) {
        private enum enumMixinStr_TIME_UTC = `enum TIME_UTC = 1;`;
        static if(is(typeof({ mixin(enumMixinStr_TIME_UTC); }))) {
            mixin(enumMixinStr_TIME_UTC);
        }
    }
    static if(!is(typeof(SCHAR_MAX))) {
        private enum enumMixinStr_SCHAR_MAX = `enum SCHAR_MAX = 0x7f;`;
        static if(is(typeof({ mixin(enumMixinStr_SCHAR_MAX); }))) {
            mixin(enumMixinStr_SCHAR_MAX);
        }
    }




    static if(!is(typeof(SHRT_MAX))) {
        private enum enumMixinStr_SHRT_MAX = `enum SHRT_MAX = 0x7fff;`;
        static if(is(typeof({ mixin(enumMixinStr_SHRT_MAX); }))) {
            mixin(enumMixinStr_SHRT_MAX);
        }
    }




    static if(!is(typeof(INT_MAX))) {
        private enum enumMixinStr_INT_MAX = `enum INT_MAX = 0x7fffffff;`;
        static if(is(typeof({ mixin(enumMixinStr_INT_MAX); }))) {
            mixin(enumMixinStr_INT_MAX);
        }
    }




    static if(!is(typeof(LONG_MAX))) {
        private enum enumMixinStr_LONG_MAX = `enum LONG_MAX = 0x7fffffffffffffffL;`;
        static if(is(typeof({ mixin(enumMixinStr_LONG_MAX); }))) {
            mixin(enumMixinStr_LONG_MAX);
        }
    }




    static if(!is(typeof(SCHAR_MIN))) {
        private enum enumMixinStr_SCHAR_MIN = `enum SCHAR_MIN = ( - 0x7f - 1 );`;
        static if(is(typeof({ mixin(enumMixinStr_SCHAR_MIN); }))) {
            mixin(enumMixinStr_SCHAR_MIN);
        }
    }




    static if(!is(typeof(SHRT_MIN))) {
        private enum enumMixinStr_SHRT_MIN = `enum SHRT_MIN = ( - 0x7fff - 1 );`;
        static if(is(typeof({ mixin(enumMixinStr_SHRT_MIN); }))) {
            mixin(enumMixinStr_SHRT_MIN);
        }
    }




    static if(!is(typeof(INT_MIN))) {
        private enum enumMixinStr_INT_MIN = `enum INT_MIN = ( - 0x7fffffff - 1 );`;
        static if(is(typeof({ mixin(enumMixinStr_INT_MIN); }))) {
            mixin(enumMixinStr_INT_MIN);
        }
    }




    static if(!is(typeof(LONG_MIN))) {
        private enum enumMixinStr_LONG_MIN = `enum LONG_MIN = ( - 0x7fffffffffffffffL - 1L );`;
        static if(is(typeof({ mixin(enumMixinStr_LONG_MIN); }))) {
            mixin(enumMixinStr_LONG_MIN);
        }
    }




    static if(!is(typeof(UCHAR_MAX))) {
        private enum enumMixinStr_UCHAR_MAX = `enum UCHAR_MAX = ( 0x7f * 2 + 1 );`;
        static if(is(typeof({ mixin(enumMixinStr_UCHAR_MAX); }))) {
            mixin(enumMixinStr_UCHAR_MAX);
        }
    }




    static if(!is(typeof(USHRT_MAX))) {
        private enum enumMixinStr_USHRT_MAX = `enum USHRT_MAX = ( 0x7fff * 2 + 1 );`;
        static if(is(typeof({ mixin(enumMixinStr_USHRT_MAX); }))) {
            mixin(enumMixinStr_USHRT_MAX);
        }
    }




    static if(!is(typeof(UINT_MAX))) {
        private enum enumMixinStr_UINT_MAX = `enum UINT_MAX = ( 0x7fffffff * 2U + 1U );`;
        static if(is(typeof({ mixin(enumMixinStr_UINT_MAX); }))) {
            mixin(enumMixinStr_UINT_MAX);
        }
    }




    static if(!is(typeof(ULONG_MAX))) {
        private enum enumMixinStr_ULONG_MAX = `enum ULONG_MAX = ( 0x7fffffffffffffffL * 2UL + 1UL );`;
        static if(is(typeof({ mixin(enumMixinStr_ULONG_MAX); }))) {
            mixin(enumMixinStr_ULONG_MAX);
        }
    }




    static if(!is(typeof(CHAR_BIT))) {
        private enum enumMixinStr_CHAR_BIT = `enum CHAR_BIT = 8;`;
        static if(is(typeof({ mixin(enumMixinStr_CHAR_BIT); }))) {
            mixin(enumMixinStr_CHAR_BIT);
        }
    }




    static if(!is(typeof(CHAR_MIN))) {
        private enum enumMixinStr_CHAR_MIN = `enum CHAR_MIN = ( - 0x7f - 1 );`;
        static if(is(typeof({ mixin(enumMixinStr_CHAR_MIN); }))) {
            mixin(enumMixinStr_CHAR_MIN);
        }
    }




    static if(!is(typeof(CHAR_MAX))) {
        private enum enumMixinStr_CHAR_MAX = `enum CHAR_MAX = 0x7f;`;
        static if(is(typeof({ mixin(enumMixinStr_CHAR_MAX); }))) {
            mixin(enumMixinStr_CHAR_MAX);
        }
    }
    static if(!is(typeof(__GNUC_VA_LIST))) {
        private enum enumMixinStr___GNUC_VA_LIST = `enum __GNUC_VA_LIST = 1;`;
        static if(is(typeof({ mixin(enumMixinStr___GNUC_VA_LIST); }))) {
            mixin(enumMixinStr___GNUC_VA_LIST);
        }
    }
    static if(!is(typeof(NULL))) {
        private enum enumMixinStr_NULL = `enum NULL = ( cast( void * ) 0 );`;
        static if(is(typeof({ mixin(enumMixinStr_NULL); }))) {
            mixin(enumMixinStr_NULL);
        }
    }





}


struct __va_list_tag;
